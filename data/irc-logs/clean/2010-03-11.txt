[00:01] <isaacs> mikeal: so, when i PUT to http://packages:5984/foo, I'm getting {"error":"file_exists","reason":"The database could not be created, the file already exists."}
[00:01] <javajunky> maushu: http://howtonode.org/what-is-this  is a good (simple) read on scopes … but they're very easy in Javascript, there's only really global, and function scope… the tricky part is working out where in the scope hierarchy you may be I guess ;) … anyho .. night all.
[00:01] stepheneb has joined the channel
[00:01] <isaacs> mikeal: but when i GET that, i see null, like it's definitely not there
[00:03] <mjijackson> isaacs: you're using couch?
[00:03] <isaacs> mjijackson: yeah, with some rewrites and stuff
[00:03] <isaacs> mjijackson: using this: http://github.com/mikeal/js-registry
[00:03] <mjijackson> couch shouldn't ever return "null"
[00:06] <mjijackson> isaacs: ah, i see. i'm not familiar with the syntax you're using in rewrites.json
[00:06] <mjijackson> is that from the newest version of couch?
[00:06] <isaacs> mjijackson: yeah
[00:07] <isaacs> mjijackson: one goal is to abstract out the couch-ness so that npm can be a bit agnostic about what's driving the registry.
[00:07] <mjijackson> i see. a good idea
[00:07] rtomayko_ has joined the channel
[00:08] <mikeal> it's already pretty agnostic
[00:08] <mikeal> it uses the rewriter so the urls don't map directly to the couch api
[00:09] <mikeal> we can do the same thing for adding attachments
[00:09] <mikeal> i think the HTTP API for the registry should map to the registry semantics and not to couchdb
[00:10] <isaacs> mikeal: agreed
[00:10] <mjijackson> mikeal: what is the advantage of using couch over writing a small node app that just reads/writes to the file system?
[00:10] <isaacs> ahh, figured it out
[00:10] <isaacs> i was using url.hostname and not url.host
[00:10] <isaacs> (in the "host" header
[00:11] <isaacs> so it wasn't sending the port number, and couch was not doing the rewrites
[00:23] technoweenie has joined the channel
[00:27] softdrink has joined the channel
[00:35] <atmos> anyone know any dead simple jspec examples for node that're on github ?
[00:35] <atmos> express has a bunch but i'm not sure i need all the crap that's in the spec dir there
[00:44] <halorgium> atmos: woowoo
[00:44] <atmos> sup buddy
[00:53] <halorgium> gone to the slopes yet?
[00:54] indiefan has left the channel
[00:56] <technoweenie> i wrote my own, i didnt like the express lib at all, or jspec
[00:56] <technoweenie> i wrote ntest but i've been wanting to try out jquery's test runner thing
[00:58] chrischris has joined the channel
[00:59] <atmos> halorgium: nope, everyone was hurt ot traveling this week so i lugged my shit out here for no real reason
[00:59] <atmos> got to spend a bunch of time w/ my brothers though, so it was still awesome
[00:59] <halorgium> atmos: sweetness
[01:00] <atmos> stolt said you guys might head up to tahoe this weekend ?
[01:01] <halorgium> atmos: maybe, could be good
[01:01] joshbuddy has joined the channel
[01:01] joshbuddy has joined the channel
[01:04] tmpvar has joined the channel
[01:05] <mjijackson> i totally want to build something in coffee script, but i'm scared
[01:06] <atmos> i've never thought of technology as scary, other than threads
[01:06] <tmpvar> "they are all going to laugh at you"
[01:06] <mjijackson> ;)
[01:07] <mjijackson> the only scary part is that you bet on something that the maintainer leaves later. then you get to maintain your project AND the platform it's built on.
[01:08] <tmpvar> isn't that true with everything though?
[01:08] <tmpvar> anyone know of a good wireframing app for linux?
[01:09] <mjijackson> tmpvar: yes. some things are just a bit more stable than others
[01:09] <rektide> is there any capability to pass in arguments to a node.js program ?
[01:09] <tmpvar> rektide, yeah
[01:09] <tmpvar> process.argv i believe
[01:10] <rektide> ah process, yes, process.argv, duh
[01:10] <tmpvar> there is also a lib out there that helps with the processing
[01:10] <tmpvar> just fyi
[01:12] <rektide> js doesnt have any built in string substitution, ala printf, right ?
[01:14] BryanWB has joined the channel
[01:15] rtomayko has joined the channel
[01:18] derferman has joined the channel
[01:21] <inimino> rektide: that is correct
[01:22] <tmpvar> i need a fsking whiteboard
[01:22] <tmpvar> or some sticky notes
[01:24] <BryanWB> tmpvar, try this http://mrdoob.com/lab/javascript/harmony/#shaded
[01:25] <Tim_Smart> gah PHP scales like a whore >.> Some guy got complaints from his host that his CPU usage was too high, now I have to fix it :/
[01:25] <tmpvar> ouch
[01:25] <tmpvar> cachegrind that hoe
[01:26] <Tim_Smart> Yeah, I set everything to cache :D
[01:26] <Tim_Smart> I'll see if it is using memcache next up
[01:29] <tmpvar> BryanWB, thats sick as hell
[01:31] <tmpvar> BryanWB, is this you?
[01:31] <BryanWB> tmpvar, i wish :)
[01:31] <tmpvar> nothing better than google sphere + monkey search
[01:33] ditesh|cassini has joined the channel
[01:35] brainss has joined the channel
[01:39] joshholt has joined the channel
[01:39] <_ry> random idea - suppose we add a function process.rpm()
[01:40] <_ry> rotations per minute
[01:40] <tmpvar> wha?
[01:40] <tmpvar> for the event queue?
[01:40] <_ry> shows average number of times over the last minute the process went around the event loop
[01:40] <_ry> (or even exactly)
[01:41] <_ry> you know - v8 - rpm. would be awesome :)
[01:41] <tmpvar> haha, yeah
[01:41] <tmpvar> revolutions per minute :P
[01:41] <_ry> oh right :)
[01:41] <tmpvar> how much overhead?
[01:41] <_ry> oh i think it could be done with very little overhead
[01:42] <tmpvar> "page generated in 100ms @ 800rpm"
[01:42] <_ry> as lng as it wasn't exact
[01:42] <tmpvar> i like it :P
[01:42] <_ry> then you could ask - what's that process running at?
[01:42] <_ry> 2000 rpm - wow
[01:43] <tmpvar> haha, yes. sort of like fps
[01:43] <tmpvar> im sold, +!
[01:43] <tmpvar> +1 even
[01:43] JimBastard has joined the channel
[01:44] <tmpvar> would make for a relatively nice way to get status / usage stats
[01:44] <tmpvar> hey JimBastard 
[01:44] <Tim_Smart> tmpvar: I have set every little thing on that site to cache, and it still is munching CPU like a cookie monster. I think MODx is bugged
[01:45] <tmpvar> oh modx
[01:45] <tmpvar> f-that-shit
[01:45] <Tim_Smart> Time to re-implement in rails? I think so.
[01:46] <JimBastard> hey hey
[01:46] <JimBastard> cookie monster
[01:46] <Tim_Smart> om nom nom
[01:46] <JimBastard> javascripts in jails?
[01:46] <Tim_Smart> Unfortunately it doesn't quite exist yet
[01:46] <JimBastard> javascript hypervisor lol
[01:49] kriskowal_ has joined the channel
[02:01] derferman has joined the channel
[02:05] <isaacs> _ry: rpm would be fun
[02:05] <isaacs> _ry: doooo iiiiittt!!!
[02:08] <Tim_Smart> Maybe have it in a branch? rpm is just a luxury :D
[02:19] whoahbot has joined the channel
[02:26] whoahbot has joined the channel
[02:35] <tmpvar> isaacs, have you thought about local repositories in regards to npm?
[02:35] <isaacs> tmpvar: define "local repositories"
[02:36] <isaacs> these both work: npm link path/to/project; npm install path/to/tarball.tgz
[02:36] <tmpvar> ah, got ya
[02:36] <tmpvar> i think that covers it
[02:36] mcarter has joined the channel
[02:36] <isaacs> the reason i asked what you meant is that i'm working now on integrating with a couchdb-powered package registry
[02:37] <isaacs> so you can do npm install foo 1.0.3, and it'll look up what that means
[02:37] <tmpvar> ah, i mean for local development/integration
[02:37] <isaacs> ah, kewl
[02:37] <isaacs> yeah, then npm link . is your friend
[02:37] <tmpvar> good stuff man, keep it up
[02:37] <isaacs> if you run into trouble with it, lmk
[02:37] <tmpvar> k
[02:38] <isaacs> npm isn't user friendly yet, but what it has should work just fine
[02:38] <tmpvar> tbh, i havent used it yet.. a thought occurred and i blurted it out haha
[02:39] <isaacs> hehe
[02:39] <isaacs> please do!
[02:39] <isaacs> i <3 feedback
[02:39] <tmpvar> oh i will, as soon as i climb this brick wall ive been running into
[02:43] brandon_beacher has joined the channel
[02:44] <isaacs> tmpvar: hey, btw if you do npm install http://github.com/isaacs/sax-js/tarball/master you can then set it as a dependency in your stuff, and just do require("sax") to get it
[02:44] <tmpvar> oh nice
[02:45] <tmpvar> ive been pretty disconnected lately lol
[02:45] <tmpvar> dependency in the package.json im guessing
[02:45] <isaacs> yeah
[02:45] <isaacs> it should all be documented in the npm readme
[02:45] <tmpvar> I'll definitely look at it *very* soon
[02:46] <tmpvar> fuck you 10pm
[02:49] joshbuddy has joined the channel
[02:49] joshbuddy has joined the channel
[02:50] BryanWB has joined the channel
[02:51] jed_ has joined the channel
[02:52] dnolen has joined the channel
[02:55] whoahbot has joined the channel
[03:01] brandon_beacher_ has joined the channel
[03:14] bronson has joined the channel
[03:14] dnolen_ has joined the channel
[03:18] tlrobinson_ has joined the channel
[03:25] markwubben has joined the channel
[03:26] hassox has joined the channel
[03:38] kriszyp has joined the channel
[03:42] steadicat has joined the channel
[03:52] whoahbot has joined the channel
[04:00] stepheneb has joined the channel
[04:01] derferman has joined the channel
[04:18] tlrobinson_ has joined the channel
[04:19] stalled has joined the channel
[04:33] benjamin has joined the channel
[04:37] tlrobinson_ has joined the channel
[04:38] PyroPeter has joined the channel
[04:53] bpot has joined the channel
[05:05] brandon_beacher has joined the channel
[05:11] atmos has joined the channel
[05:16] cedric_ has joined the channel
[05:18] binary42 has joined the channel
[05:19] kriskowal has joined the channel
[05:22] mikeal has joined the channel
[05:26] dnolen has joined the channel
[05:28] JoePeck has joined the channel
[05:31] BryanWB has joined the channel
[05:33] RayMorgan has joined the channel
[05:46] <CIA-77> node: 03isaacs 07master * r9769839 10/ (lib/ini.js test/fixtures/fixture.ini test/simple/test-ini.js): 
[05:46] <CIA-77> node: More ini parser features.
[05:46] <CIA-77> node: Update the ini parser to support some more whitespace cases, turn lines
[05:46] <CIA-77> node: without an equal sign into a "flag" that's just true if set, and support
[05:46] <CIA-77> node: comments. - http://bit.ly/cDEBNa
[05:46] <isaacs> w00t!!
[05:46] <isaacs> _ry: there was one additional test that i did on my ini-tweak branch, but didn't seem worth bothering the list about.
[05:47] <isaacs> _ry: http://github.com/isaacs/node/commit/b29267c4fdaddc2f1343d8fd83bc55b6a355de9f
[05:48] <konobi> isaacs: time for '#' as a comment
[05:48] <konobi> =0)
[05:49] <isaacs> konobi: o_O?
[05:49] <isaacs> ohh, in ini files?
[05:52] <konobi> indeed
[05:53] <konobi> http://en.wikipedia.org/wiki/INI_file
[05:53] <konobi> lots of "varying features
[05:57] tlrobinson_ has joined the channel
[05:59] BBB has joined the channel
[06:00] indiefan has joined the channel
[06:03] <isaacs> konobi: having SOME kind of commenting is pretty key, i think
[06:03] <isaacs> what it is specifically is less important
[06:03] <Tim_Smart> isaacs: You think I should have registerExtension enabled to return not just javascript strings?
[06:03] <isaacs> Tim_Smart: i think i suggested that registerExtension should return a javascript function representing the module
[06:04] <Tim_Smart> isaacs: Meaning, you can return a function or something?
[06:04] <Tim_Smart> isaacs: Well, I don't want to re-implement the module system
[06:04] <isaacs> Tim_Smart: i see, so you don't want to return a javascript function, and instead want the existing module system to wrap the js string in the process.compile cruft?
[06:05] <isaacs> i guess that makes sense.
[06:05] <Tim_Smart> atm, it only accepts a string as a return, and puts it through the same paces as the other JS modules
[06:05] <isaacs> right
[06:05] <Tim_Smart> But, it would be awesome if you didn't return a string, it directly attaches it to the exports
[06:05] <isaacs> i guess i'm just thinking of a case where maybe you want to actually compile the thing to a function, because it's not using process.compile, but some other thing that creates a v8 function
[06:05] <isaacs> maybe that's yak shaving
[06:06] <isaacs> but it seems like it'd be pretty easy to say, if it's a string, then compile its brains out, otherwise, just take it as is
[06:06] <Tim_Smart> yeah, like what I said above. Then you could register .mu files with a template compiler, then return the compile function or something
[06:06] <isaacs> bingo
[06:06] <Tim_Smart> or an object with properties, that get attached to exports
[06:06] <Tim_Smart> Yeah I'll add that to the branch soon
[06:06] <isaacs> hm..... that seems odd
[06:07] <isaacs> so the registerExtension just returns the exports object for that module?
[06:07] <isaacs> like, directly?
[06:07] <isaacs> i suppose there's no reason why that wouldn't work...
[06:07] <Tim_Smart> so, it sends the file contents to the compiler function, then that function either returns a string or some other variable
[06:07] <rektide> ok ok ok.... its only taken me two days to catch up on api changes
[06:07] <rektide> dear heaven
[06:08] <rektide> ((yes i was quite a bit behind))
[06:08] <Tim_Smart> if it isn't a string, then it attaches it directly to exports
[06:08] <isaacs> Tim_Smart: right, but it sounds lik eyou'er saying, it can return a string, and then it gets process.compiled as usuall..
[06:08] <Tim_Smart> otherwise, put it though the normal javascript stuff
[06:08] <isaacs> right, that object
[06:08] <isaacs> what actually happens to it?
[06:09] <isaacs> is it like, a collection of things that get put on the exports object?
[06:09] <Tim_Smart> It gets wrapped in a function atm, and gets passed require, exports etc etc
[06:09] <Tim_Smart> then process.compiled
[06:09] <Tim_Smart> that is for a normal js module
[06:09] <isaacs> right
[06:09] <isaacs> got that
[06:09] <isaacs> i'm talking about having my registerExtension compiler function return an object and not a string.
[06:10] <isaacs> what would you suggest about that?  (i know it's not supported atm)
[06:10] <Tim_Smart> yeah same, maybe I'll gist an example? :p
[06:10] <isaacs> yes please :)
[06:15] <Tim_Smart> isaacs: http://gist.github.com/328894
[06:15] cedricv has joined the channel
[06:15] <isaacs> got it.
[06:15] <isaacs> yeah, that's what i was saying
[06:16] <Tim_Smart> good, we are on the same level :D
[06:16] <isaacs> so, if the compiler returns an object, then that object is the exports object returned to the require() caller
[06:16] <Tim_Smart> yeah
[06:16] <isaacs> great.
[06:16] <isaacs> add one more use-case
[06:16] <isaacs> ACTION gisting
[06:17] <Tim_Smart> isaacs: also http://gist.github.com/328894
[06:17] brainss has joined the channel
[06:17] creationix_ has joined the channel
[06:19] <isaacs> Tim_Smart: http://gist.github.com/328895
[06:20] <isaacs> i'm suggesting you special-case functions, so returning them actually means that they'll be called with the module system args
[06:20] <isaacs> when require()ed
[06:20] <isaacs> but, i guess if the extension registration can return an object, it could just run that function right now anyway
[06:21] <isaacs> but the problem would be that it won't have access to module or __filename or __dirname and suck
[06:21] <isaacs> such
[06:21] <konobi> isaacs: also... where on the line is that comment... start, midway, etc.
[06:22] <isaacs> konobi: anywhere
[06:22] <isaacs> any ; cuts off the rest of the line
[06:22] <konobi> ah, nice
[06:22] <isaacs> this is a very minimal sectioned ini file syntax :)
[06:23] <konobi> yar... the original author is sitting right beside me
[06:23] <isaacs> konobi: i was quite taken with it.  just that i needed to put = signs in my value.  my kudos to rob ellis
[06:23] <konobi> mainly because i made him do it
[06:23] <konobi> =0)
[06:24] <isaacs> oh, hey, neat
[06:25] <konobi> isaacs: http://github.com/konobi/smart-app-updater
[06:25] <konobi> that's the main reason why
[06:25] <konobi> (python uses it as a generic config)
[06:25] <isaacs> nice
[06:27] <konobi> isaacs: I'm also assuming your version doesn't take escaped ';' into account
[06:27] <isaacs> konobi: nope.  no ; allowed
[06:28] <konobi> edgecase... but useful
[06:28] <isaacs> konobi: writing it to support strings smartly would require state-machine-ization, imo
[06:28] <konobi> http query strings, for example
[06:28] <konobi> isaacs: nah... regexp should suffice
[06:28] <isaacs> konobi: famous last words
[06:28] <_ry> making things not slower is a stupid policy
[06:28] <konobi> isaacs: http://cpansearch.perl.org/src/ADAMK/Config-Tiny-2.12/lib/Config/Tiny.pm
[06:30] <isaacs> _ry: o_O?
[06:32] <_ry> isaacs: it's difficult to refact when i don't allow it to become slower :/
[06:32] <isaacs> _ry: true that.  need to have long-term speed in mind.
[06:32] <isaacs> _ry: getting in the car makes you a lot slower at first.
[06:34] BryanWB has joined the channel
[06:36] bpot has joined the channel
[06:42] <micheil> hey, _ry for manpages, look into Roff / Ronn by Rtomayko
[06:42] <_ry> micheil: yeah i was looking at that yesterday
[06:42] <_ry> i haven't tried it yet, but sounds good
[06:43] <_ry> i mean it doesn't get much better than this: http://github.com/konobi/smart-app-updater
[06:44] <_ry> oops
[06:44] <_ry> than this: http://github.com/rtomayko/ronn/blob/master/man/ronn.1.ronn
[06:44] <BryanWB> will the speed of js on v8 ever get close to that of java on the jvm?
[06:44] <_ry> shrug. doubtful.
[06:45] jed_ has joined the channel
[06:45] <_ry> the only crappy thing about ronn is that it's written in ruby
[06:46] <isaacs> so, npm is putting stuff INTO the registry successfully now.  tomorrow, i work on getting it to know how to get stuff OUT of the registry
[06:47] <micheil> _ry: it wouldn't be too hard to nodify it
[06:48] tilgovi has joined the channel
[07:01] Tim_Smart has joined the channel
[07:04] sveimac has joined the channel
[07:05] sveimac has joined the channel
[07:08] nsm has joined the channel
[07:22] jed_ has joined the channel
[07:26] mikeal has joined the channel
[07:29] chrischris has joined the channel
[07:29] chrischris_ has joined the channel
[07:30] chrischris has joined the channel
[07:30] chrischris_ has joined the channel
[07:31] chrischris has joined the channel
[07:31] chrischris_ has joined the channel
[07:32] chrischris has joined the channel
[07:33] chrischris_ has joined the channel
[07:34] chrischris has joined the channel
[07:34] chrischris_ has joined the channel
[07:35] chrischris has joined the channel
[07:36] chrischris_ has joined the channel
[07:36] chrischris has joined the channel
[07:37] chrischris_ has joined the channel
[07:37] chrischris has joined the channel
[07:38] chrischris_ has joined the channel
[07:39] chrischris has joined the channel
[07:39] chrischris has joined the channel
[07:40] chrischris_ has joined the channel
[07:54] unom1 has joined the channel
[07:57] kjeldahl has joined the channel
[08:02] tilgovi has joined the channel
[08:15] hober has joined the channel
[08:17] pjb3 has joined the channel
[08:17] kriskowal has joined the channel
[08:21] derferman has joined the channel
[08:22] bentomas has joined the channel
[08:26] drostie has joined the channel
[08:27] javajunky has joined the channel
[08:29] felixge has joined the channel
[08:29] felixge has joined the channel
[08:30] michaelk^ has joined the channel
[08:31] piranha has joined the channel
[08:41] paulca has joined the channel
[08:41] qFox has joined the channel
[08:55] jed_ has joined the channel
[09:02] kennethkalmer has joined the channel
[09:03] kennethk_ has joined the channel
[09:12] kenneth_reitz has joined the channel
[09:16] michaelk^ has joined the channel
[09:18] Mandar has joined the channel
[09:22] felixge has joined the channel
[09:22] felixge has joined the channel
[09:28] tlrobinson has joined the channel
[09:28] derferman has joined the channel
[09:31] tlrobinson_ has joined the channel
[09:43] maritz has joined the channel
[09:43] spoob has joined the channel
[09:58] BryanWB has joined the channel
[10:01] kenneth_reitz has joined the channel
[10:07] cedric_ has joined the channel
[10:10] derferman has joined the channel
[10:37] chakrit has joined the channel
[10:45] <pavelz> hi , where did  'oo' lib go?
[10:49] rtomayko has joined the channel
[11:02] <pavelz> oh nm, was git issue :)
[11:03] erikvold has joined the channel
[11:23] <christkv> hi everyone anybody got an idea on how to get express to bind to the right ip on a server ?
[11:36] <Tim_Smart> christkv: You might want to run a nginx instance in front of node
[11:36] <christkv> do you just run node on a background thread and then put nginx infront of it ?
[11:37] <Tim_Smart> Otherwise, I'm pretty sure you can pass a host option to the http createServer method
[11:37] <Tim_Smart> christkv: Yeah you proxy pass requests to your local node instance
[11:37] <Tim_Smart> also means you can set up multiple node instances later on, and load balance between them
[11:37] <christkv> Tim: yeah I'll do that. Same model as with mongrel in the day :D
[11:40] cedric__ has joined the channel
[11:44] cedricv has joined the channel
[11:46] <christkv> what package manager are people using ?
[11:46] cedricv has joined the channel
[11:48] felixge has joined the channel
[11:48] cedricv has joined the channel
[11:51] cedric_ has joined the channel
[11:53] Tim_Smart has joined the channel
[12:03] drostie has joined the channel
[12:08] felixge has joined the channel
[12:08] felixge has joined the channel
[12:18] kriszyp has joined the channel
[12:22] lifo has joined the channel
[12:46] <ashb> christkv: isaac's npm is the only one i know about for node
[12:56] kjeldahl has joined the channel
[13:03] jed__ has joined the channel
[13:13] unom1 has joined the channel
[13:14] Booster has joined the channel
[13:16] JAAulde has joined the channel
[13:17] <JAAulde> Morning all
[13:17] <JAAulde> Is there any prognosis or workaround for the segfault issue on FreeBSD?
[13:37] <ashb> make sure you know where your towel is?
[13:42] cedricv has joined the channel
[13:46] <JAAulde> ok then...
[13:47] pmuellr has joined the channel
[13:50] jherdman has joined the channel
[14:11] aryounce has joined the channel
[14:16] voodootikigod has joined the channel
[14:22] davidsklar has joined the channel
[14:23] gf3 has joined the channel
[14:26] kenneth_reitz has joined the channel
[14:29] bronson has joined the channel
[14:33] jed_ has joined the channel
[15:01] micheil has joined the channel
[15:02] stepheneb has joined the channel
[15:07] brandon_beacher_ has joined the channel
[15:10] teemow has joined the channel
[15:10] gf3 has joined the channel
[15:19] pdelgallego has joined the channel
[15:31] dnolen has joined the channel
[15:46] alex-desktop has joined the channel
[15:47] joshbuddy has joined the channel
[15:47] joshbuddy has joined the channel
[15:52] JoePeck_ has joined the channel
[15:53] javajunky has joined the channel
[15:57] drostie has joined the channel
[15:59] dnolen_ has joined the channel
[16:00] teemow has joined the channel
[16:04] tmpvar has joined the channel
[16:06] dnolen_ has joined the channel
[16:12] ithinkihaveacat has joined the channel
[16:35] cpleppert has joined the channel
[16:36] kkaefer has joined the channel
[16:44] kenneth_reitz has joined the channel
[16:47] kjeldahl has joined the channel
[16:49] morgan has joined the channel
[16:54] siculars has joined the channel
[16:55] cloudhead has joined the channel
[16:59] kriszyp has joined the channel
[17:00] whoahbot has joined the channel
[17:02] pdelgallego has joined the channel
[17:02] bpot has joined the channel
[17:03] tmpvar has joined the channel
[17:08] aguynamedben has joined the channel
[17:10] RayMorgan has joined the channel
[17:11] brainss has joined the channel
[17:14] pdelgallego has joined the channel
[17:18] dandean has joined the channel
[17:19] bpot has joined the channel
[17:21] spot__ has joined the channel
[17:26] joshbuddy has joined the channel
[17:27] <_ry> (pprof) top
[17:27] <_ry> Total: 2239 samples
[17:27] <_ry>     1511  67.5%  67.5%     1511  67.5% _setlocale
[17:27] <_ry>      149   6.7%  74.1%      149   6.7% 0x00000001058385f5
[17:27] <_ry>      147   6.6%  80.7%      147   6.6% v8::internal::String::WriteToFlat
[17:27] <_ry>       74   3.3%  84.0%       74   3.3% v8::internal::FreeListNode::set_size
[17:27] <_ry>       56   2.5%  86.5%       56   2.5% 0x00007fffffe00b85
[17:27] <_ry>       43   1.9%  88.4%       43   1.9% v8::String::WriteAscii
[17:27] <_ry>       36   1.6%  90.0%       36   1.6% _telldir$INODE64$UNIX2003
[17:27] <_ry>       35   1.6%  91.6%       35   1.6% __vproc_grab_subset
[17:27] <_ry>       24   1.1%  92.7%       24   1.1% _sha1_block_asm_data_order
[17:27] <_ry>       17   0.8%  93.4%       17   0.8% v8::internal::Heap::IterateRSet
[17:28] <_ry>       13   0.6%  94.0%       13   0.6% _NSVersionOfLinkTimeLibrary
[17:28] <_ry> :/
[17:32] <ashb> _ry: LC_ALL=C ?
[17:33] indiefan has joined the channel
[17:36] <_ry> ashb: yeah
[17:43] <JAAulde> Is there any prognosis or workaround for the segfault issue on FreeBSD?
[17:45] joshbuddy_ has joined the channel
[17:48] sveimac has joined the channel
[17:48] <_ry> JAAulde: i need to get in there to debug it
[17:49] <_ry> JAAulde: i don't have time to do that at the moment
[17:49] <_ry> so it'll have to wait for someone else / some other time
[17:49] sveimac has joined the channel
[17:49] <JAAulde> _ry: cool.  I have a FreeBSD machine which sits and does nothing, so if you need anything let me know
[17:50] <_ry> JAAulde: you could install a buildbot slave for our buildbotnet (http://buildbot.nodejs.org:8010/)
[17:51] <_ry> JAAulde: that won't get the segfault fixed, but at least it'll be there in red :)
[17:51] <JAAulde> _ry great, I will look into it.  I am not great at working with the OS, and my only dev expereicne is PHP and JS
[17:51] <_ry> JAAulde: i doubt it's difficult to fix. maybe you should try to do it
[17:51] <JAAulde> but I'll do what I can :)
[17:52] <JAAulde> looking into the buildbot now
[17:52] <_ry> JAAulde: pm me your email address - i'll put you in touch with our buildbot admin :)
[17:54] michaelk^ has joined the channel
[17:55] aryounce has joined the channel
[17:59] kennethkalmer has joined the channel
[18:06] lifo has joined the channel
[18:09] <JAAulde> _ry: i have buildbot installing right now, so as soon as he contacts me I should be able to get things moving
[18:14] bronson has joined the channel
[18:14] mikeal has joined the channel
[18:14] pdelgallego has joined the channel
[18:18] <rektide> _ry: process.compile() doesnt seem to behave at all like eval()
[18:18] <rektide> eval() uses the current global context, process.compile() seems to create its own new context
[18:18] <rektide> thats fine, but the documentation should make some attempt beyond "process.compile() is hte same as eval()"
[18:19] <rektide> and, btw, it sucks rather bad I cant use process.compile(), since i rely on keeping the same global context.
[18:19] <_ry> rektide: what do you mean? 
[18:19] <_ry> scripts evaluated with process.compile can access global variables
[18:20] <rektide> _ry: http://cgit.voodoowarez.com/pipe-layer/tree/src/main/nodejs/runtime.js
[18:20] <rektide> line 35, if i enable that process.compile() my code doesnt work; i  get an "events not defined"
[18:21] <rektide> unless i'm mis-understanding vars & the global scope
[18:21] <_ry> (wellputs = require('./lib/sys').puts;
[18:21] <_ry> puts = require('./lib/sys').puts;
[18:21] <_ry> process.compile("puts('hi');", "blah.js");
[18:22] <rektide> ah i was mis-understanding vars
[18:22] <_ry> process.compile doesn't get the local scope
[18:23] <_ry> i guess we could change the docs about that
[18:23] <rektide> i ran into that gotcha
[18:23] <rektide> my bad on describing it the wrong way, it obviously does get the global scope... just not the local scope.
[18:24] maritz has joined the channel
[18:26] charlenopires has joined the channel
[18:38] <inimino> rektide: it bites a lot of people, I was going to submit a patch to the docs but haven't gotten to it
[18:51] tmpvar has joined the channel
[18:51] ollie has joined the channel
[18:52] devinus has joined the channel
[18:59] <konobi> _ry: so perf testing?
[19:01] <_ry> konobi: yeah - not really sure what's up with it
[19:01] <_ry> it seems to be calling setlocale a lot
[19:01] <_ry> (net2)
[19:01] <konobi> _ry: tried looking at kcachegrind and valgrind --tool=callgrind
[19:01] <konobi> ?
[19:01] <konobi> since it'll give you an actual call stack
[19:01] <_ry> konobi: no - i'll do that
[19:02] <konobi> (UI for drilldown)++ # fecking awesome
[19:02] <konobi> http://kcachegrind.sourceforge.net/html/Usage.html
[19:04] joshbuddy_ has joined the channel
[19:04] <_ry> hmm
[19:04] <_ry> ACTION wishes he was in linux 
[19:05] <_ry> i guess i should get a vm setup
[19:05] <konobi> yar... just install vmware fusion or whatever
[19:08] dnolen has joined the channel
[19:08] <konobi> _ry: or vnc
[19:08] <konobi> =0)
[19:10] codeswin_ has joined the channel
[19:11] mayerbacher has joined the channel
[19:13] unomi has joined the channel
[19:15] mattly has joined the channel
[19:15] atmos has joined the channel
[19:15] <_ry> atmos: what are you making with node?
[19:16] <atmos> nothing interesting :)
[19:17] <atmos> i've got most of a twitter client done, more of a learning experience for me
[19:17] mrjjwright has joined the channel
[19:22] dnolen has joined the channel
[19:22] softdrink has joined the channel
[19:31] kriszyp has joined the channel
[19:36] maushu has joined the channel
[19:41] tmpvar has joined the channel
[19:41] arlolra has joined the channel
[19:44] <orlandov> hey, so has anyone ever run into "Illegal invocation" errors as a result of using sys.inherits?
[19:45] <orlandov> not directly from sys.inherits, but when i instantiate an object that has sys.inherited from a superclass, when i call a super class method on the subobject it cacks
[19:45] <orlandov> i think i must misunderstand sys.inherit's intentions/behaviour
[19:53] kriskowal has joined the channel
[19:53] christkv has joined the channel
[19:54] siong1987 has joined the channel
[19:55] christkv_ has joined the channel
[19:55] <_ry> orlandov: it should work that way
[19:56] softdrink has joined the channel
[19:56] <_ry> orlandov: is the super class a c++ class?
[19:57] <orlandov> orlandov: yep
[19:57] <orlandov> i thought so too
[19:57] <orlandov> er
[19:57] <_ry> orlandov: can you point me to some code?
[19:58] <_ry> node also sys.inherits from c++ classes
[19:58] <_ry> but i seem to remember it gets fussy
[19:58] <orlandov> yeah! i don't really see what i'm doing differently
[19:58] gwoo has joined the channel
[19:58] <orlandov> let me get the code back in shape, i just undid all that :)
[19:58] piranha has joined the channel
[20:02] <orlandov> _ry: http://github.com/orlandov/node-sqlite/blob/queue/sqlite.js#L22-26
[20:02] <orlandov> i was testing it w/ test3.js
[20:02] emyller has joined the channel
[20:03] <_ry> orlandov: maybe throw a sqlite.Database.call(this); in there?
[20:03] <_ry> into the constructor, on the first line
[20:03] mikeal has joined the channel
[20:03] <orlandov> oh boy
[20:03] <orlandov> Assertion failed: (handle->InternalFieldCount() > 0), function Wrap, file /usr/local/include/node/node_object_wrap.h, line 37.
[20:03] <orlandov> Assertion failed: (handle->InternalFieldCount() > 0), function Wrap, file /usr/local/include/node/node_object_wrap.h, line 37.
[20:04] <orlandov> oopts, sorry about the duplicate.
[20:04] <orlandov> _ry: ^^
[20:05] derferman has joined the channel
[20:08] <_ry> orlandov: so there are some things that are funky in v8
[20:08] <_ry> that i don't really understand - but work when you do them in a certain way
[20:08] <_ry> they're probably bugs
[20:08] <orlandov> ACTION is down with the funk
[20:09] <_ry> one thing, i think you should use 'constructor_template' here instead of 't' http://github.com/orlandov/node-sqlite/blob/queue/sqlite3_bindings.cc#L417
[20:09] <_ry> (and everywhere in that method)
[20:10] <orlandov> _ry: okay i'll try that
[20:10] <orlandov> yeah it's a bit fun trying to debug these things without fully knowing how v8 wants to work
[20:10] <_ry> (scanningm for other things that i try not to do)
[20:10] <_ry> yeah - 'fun'
[20:12] ollie has joined the channel
[20:14] tlrobinson_ has joined the channel
[20:15] <_ry> orlandov: the code looks good
[20:15] <_ry> well, other than the fact that it's not working :)
[20:15] <orlandov> _ry: it's a bit of a mess right now, since i was just trying to get it to work
[20:15] <orlandov> hah, yeah
[20:16] <orlandov> i hate JS inheritance
[20:16] <orlandov> what a pita
[20:16] creationix has joined the channel
[20:16] <_ry> yeah.
[20:24] indiefan has left the channel
[20:25] pedrobelo has joined the channel
[20:29] <orlandov> wa
[20:31] <_ry> i love the output of ./node test/pummel/test-tcp-many-clients.js 
[20:32] MattJ has joined the channel
[20:34] <konobi> _ry: had any more luck with callgrind?
[20:35] <_ry> konobi: no - going to wait until i get home to my linux box to do it
[20:35] <konobi> =0)
[20:36] Booster has joined the channel
[20:37] pdelgallego has joined the channel
[20:38] <konobi> _ry: http://linhost.info/vmware/
[20:40] <konobi> (would get you up and running pretty much instantly)
[20:44] <CIA-77> node: 03Ryan Dahl 07master * r358b751 10/ doc/api.txt : Adjust process.compile documentation - http://bit.ly/dByJ5q
[20:44] <CIA-77> node: 03Ryan Dahl 07net2 * r03f2bfe 10/ lib/fs.js : Make relative ref to sys in fs module. - http://bit.ly/cnA6Hn
[20:44] <CIA-77> node: 03Ryan Dahl 07net2 * r9b67962 10/ (src/node_timer.cc src/node_timer.h): Add timer.again method - http://bit.ly/d2MHWq
[20:44] <CIA-77> node: 03Ryan Dahl 07net2 * r462a8f8 10/ test/simple/test-net-pingpong.js : add error listener to test-net-pingpong - http://bit.ly/c54tgr
[20:44] <CIA-77> node: 03Ryan Dahl 07net2 * r4635ed7 10/ src/node.cc : 
[20:44] <CIA-77> node: Add process.now
[20:44] <CIA-77> node: Faster way to find out current time. - http://bit.ly/cnkEbb
[20:44] <CIA-77> node: 03Ryan Dahl 07net2 * rca862d7 10/ lib/net.js : 
[20:44] <CIA-77> node: [net2] Add Socket.setTimeout
[20:44] <CIA-77> node: Still seeing crashes and performance problems. - http://bit.ly/9TiNxp
[20:45] whoahbot has joined the channel
[20:45] drostie has joined the channel
[20:47] chakrit has joined the channel
[20:47] siong1987 has joined the channel
[20:49] <CIA-77> node: 03Ryan Dahl 07master * r6d9227b 10/ lib/fs.js : Make relative ref to sys in fs module. -
[21:00] arlolra has joined the channel
[21:02] creationix has joined the channel
[21:04] unomi has joined the channel
[21:06] <JAAulde> _ry: my build bot shows it is currently building, so I guess it's up and running :)
[21:07] Tim_Smart has joined the channel
[21:07] chakrit has left the channel
[21:08] derferman has joined the channel
[21:10] <gwoo> JAAulde: sweeey
[21:10] <gwoo> sweet
[21:10] <JAAulde> :)
[21:10] maushu has joined the channel
[21:10] <gwoo> that reminds be to check mine
[21:10] <gwoo> :)
[21:11] <gwoo> nice #69 is working
[21:11] <gwoo> http://8.19.35.89:8010/builders/Ubuntu%204.4.1/builds/69
[21:15] mrjjwright has joined the channel
[21:17] <JAAulde> hooray, I think the FreeBSD failure has now been recorded
[21:20] <JAAulde> gwoo: the number you mention (#69) is that how many builds your slave has done, or is it something else?
[21:20] <gwoo> yup
[21:20] <JAAulde> cool
[21:21] <gwoo> it's been up for a month of so
[21:21] <gwoo> actually it was born on Feb 18 
[21:24] <JAAulde> I am so happy to be running this! :)  i adore node, so  am glad my new machine can help test and such
[21:24] creationix has joined the channel
[21:25] <_ry> JAAulde: cool. thanks for volunteering it
[21:26] <JAAulde> thanks for mentioning it earlier
[21:26] <JAAulde> I'm out for the day, but I'll be around during business days east-coast time
[21:26] <JAAulde> ttyl
[21:26] JAAulde has left the channel
[21:28] tilgovi has joined the channel
[21:29] indiefan has joined the channel
[21:46] u4ea has joined the channel
[21:50] cedric_ has joined the channel
[21:50] cedric__ has joined the channel
[21:54] cedricv has joined the channel
[21:57] cedric_ has joined the channel
[22:00] indiefan has left the channel
[22:00] cedric__ has joined the channel
[22:01] <CIA-77> node: 03Jérémy Lal 07master * rc93bab1 10/ wscript : Add --system option to configure, so make uses V8, EV, UDNS system libraries and headers. - http://bit.ly/bA2KZx
[22:03] <jgoulah> i'm sorry wrong channel :)
[22:03] <jgoulah> stupid paste.
[22:04] paulca has joined the channel
[22:04] cedricv has joined the channel
[22:04] <jgoulah> or my client is being crazy. ignore me
[22:08] charlenopires has joined the channel
[22:10] whoahbot has joined the channel
[22:11] <ashb> jgoulah: fancy seeing you here
[22:12] cedric_ has joined the channel
[22:13] <jgoulah> ashb: whats up man!
[22:13] <jgoulah> yeah i've been digging this project a lot
[22:14] <ashb> oh not much - been gainfully unempolyed and hacking on shit for a few months
[22:15] kriszyp has joined the channel
[22:15] <jgoulah> oh yeah? nice
[22:15] <ashb> didn't get the CTO role that frank put my name forward for
[22:15] cedric__ has joined the channel
[22:15] <ashb> stil living off my last contract earning from Nov
[22:16] <jgoulah> i'm kinda doing a director type thing, bout to flip back to straight engineering
[22:16] <ashb> still in NYC?
[22:16] <jgoulah> yeah
[22:16] <jgoulah> lots of work going on here lately it seems
[22:16] <konobi> the perl folk are taking over
[22:17] <ashb> ofc: we rule
[22:19] cedricv has joined the channel
[22:20] <ashb> tho i seem to be collecting ircchannels again
[22:20] <ashb> up to ... 41
[22:20] <konobi> i try to keep it below 20
[22:21] cedric_ has joined the channel
[22:24] <gwoo> ashb: funemployment is great
[22:24] <gwoo> though mine ends monday
[22:25] cedric__ has joined the channel
[22:26] aryounce has joined the channel
[22:26] paulca has joined the channel
[22:29] cedricv has joined the channel
[22:32] <CIA-77> node: 03Ryan Dahl 07master * rff24577 10/ (4 files): Upgrade libeio - http://bit.ly/bXOrl5
[22:32] <CIA-77> node: 03Ryan Dahl 07master * r6bd11f1 10/ lib/fs.js : Fix undefined reference in fs.js - http://bit.ly/bDQ3ez
[22:34] cedric_ has joined the channel
[22:36] cedric__ has joined the channel
[22:36] christkv has joined the channel
[22:37] christkv_ has joined the channel
[22:40] <orlandov> fg
[22:40] cedricv has joined the channel
[22:41] javajunky has joined the channel
[22:42] cedricv has joined the channel
[22:43] ashb has joined the channel
[22:44] <mrjjwright> I have a question about background work queues and node.js in general.   Let's say I am processing a bunch of photos on behalf a user and want to a) add an entry to a db and b) send a copy of the photo to flickr.  If I were on rails or some other by default blocking prone environment I would put an entry in redis or some type of backgroud queue for every pic to upload to flickr.  In general, is the need todo this reduced with node 
[22:44] <mrjjwright> I can just run the flickr upload commands in the bg and have better non-blocking characteristics?
[22:45] <mrjjwright> perhaps this is a better ? for the dist. list but was just sitting here wondering
[22:45] <javajunky> I've done some work on the flickr api over here ( http://github.com/ciaranj/flickrnode/ ) 
[22:45] <orlandov> external queues are nice in case your app goes down for whatever reason
[22:45] <javajunky> but I've not covered any APIs for uploading, you're welcome to add them, but persistence is going to be your issue.
[22:45] <orlandov> but yeah... your app can just wait for events, and do other stuf fin the meantime
[22:45] <javajunky> ah as orlandov says ;)
[22:46] <orlandov> no reason you couldn't have two processes, one adding stuff to the queue and another working through the backlog
[22:46] <javajunky> depending on the upload API's available you may be able to stream fairly elegantly from the original client request to the flick api (all of which not-blocking you from accepting new requests) 
[22:47] <mrjjwright> right, 2 node instances would be nice, one for bg, but assuming load wasn't an issue, and persistence, the need for 2 processes is relatively diminished.
[22:48] <orlandov> i don't think there's any technical reason why you couldn't do it all in one process... so long as it doesn't block the process for too long
[22:49] cedricv has joined the channel
[22:50] <mrjjwright> javajunky: plan to use your flickrnode module and ideas, thanks, and thanks also for the feedback orlandov.  I will post this on the node distribution list as well.
[22:50] <_ry> mrjjwright: i guess you'll be forking out to a different process to do the resizing anyway
[22:51] <javajunky> mrjjwright: cool, it would be good to get some more coverage of the APIs in that module, I just did what I needed, but the auth is pretty solid.
[22:51] <_ry> it's very little overhead for node to do that
[22:52] cedric_ has joined the channel
[22:52] <mrjjwright> _ry: yeah, I would be doing calling a thumbnail generator probably.  I just was thinking that the primary reason a lot of people use queues in these cases is to keep the process from blocking (besides persistence) and if you code things carefully enough you should be able to get away without it with node.
[22:55] cedric__ has joined the channel
[22:55] <javajunky> node processes can't cover multiple cores/cpus though can they ? (they're just a single process after all), since image resizing is likely CPU intense I imagine you'd want to balance your requests across several node processes all running the same code … at least thats how I've been imagining how I'm going to scale a similar issue.
[22:58] <Tim_Smart> _ry: So what was the verdict on registerExtension? Looking for a simpler way of doing it?
[22:58] QuietKnight has joined the channel
[23:01] ollie has joined the channel
[23:01] cedric_ has joined the channel
[23:03] <mrjjwright> javajunky: good point.   I am planning on using node in a desktop Mac product so that's not quite so important locally.  But...here is the cool thing about node, I plan to use the exact same code base for the server.  Node, even more than Python or Ruby, seems uniquely suited to be a great single user scripting and multi-user serving environment because it scales more seamlessly, at least I think so.    On the server I definitely p
[23:03] <mrjjwright> to scale Node out, with some sort of simple worker architecture maybe coupled with Erlang.   So there I could take advantage of more CPU, but actually most of the image processing is done when the user connects in their iPhone on their local machine.
[23:04] cedric__ has joined the channel
[23:06] <javajunky> certainly sounds interesting :)
[23:08] pdelgallego has joined the channel
[23:08] cedricv has joined the channel
[23:10] cedric_ has joined the channel
[23:13] <_ry> Tim_Smart: i'll merge it
[23:13] <Tim_Smart> _ry: Um
[23:14] <konobi> coroutines might help with that
[23:14] tmpvar has joined the channel
[23:14] <Tim_Smart> _ry: Me and isaacs had a quick addition we wanted to make
[23:14] <Tim_Smart> _ry: Which we were discussing
[23:14] cedric__ has joined the channel
[23:14] <Tim_Smart> I'll see if I can get the log to you
[23:14] <_ry> Tim_Smart: okay?
[23:16] <Tim_Smart> _ry: http://gist.github.com/329813
[23:17] JAAulde has joined the channel
[23:18] cedricv has joined the channel
[23:18] gf3 has joined the channel
[23:18] indiefan has joined the channel
[23:19] OSInet has joined the channel
[23:20] <QuietKnight> I asked this over in #couchdb, but thought one of you guys might have some insight too. Say I'm using couchdb, and I have a Node.js application accessing it (clients don't access couchdb directly, they go through the Node.js server). Is it possible to use something akin to connection pooling, where the server app opens x connections to couchdb with a Keep-Alive, then funnels requests through these connections. Is this a recommended strategy to avoid T
[23:21] <_ry> Tim_Smart: i don't get it and actually... thinking about this more. i think we should do this just synchronously.
[23:21] <_ry> :)
[23:22] <Tim_Smart> _ry: That is cool :p I can make the changes now if you like
[23:22] <_ry> Tim_Smart: okay. just throw some hook somewhere before process.compile
[23:22] <_ry> it'll work well
[23:23] <Tim_Smart> yeah: if (this.compile) compile()
[23:23] <Tim_Smart> *compiler
[23:23] <Tim_Smart> I'll re-base it to master while I'm there haha
[23:23] cedric_ has joined the channel
[23:23] <Tim_Smart> development around these parts is fast
[23:25] joshbuddy has joined the channel
[23:25] joshbuddy has joined the channel
[23:26] cedric__ has joined the channel
[23:27] OSInet has left the channel
[23:28] creationix has joined the channel
[23:30] cedricv has joined the channel
[23:32] kriszyp has joined the channel
[23:32] creationix has left the channel
[23:32] cedric_ has joined the channel
[23:36] <ashb> w 30
[23:38] cedric__ has joined the channel
[23:42] cedricv has joined the channel
[23:44] cedric_ has joined the channel
[23:47] cedric__ has joined the channel
[23:49] gf3 has joined the channel
[23:51] cedricv has joined the channel
[23:53] cedric_ has joined the channel
[23:56] cedric__ has joined the channel
[23:57] pdelgallego has joined the channel
[23:59] pdelgallego has joined the channel
