[00:02] <captain_morgan> right, I know it is not. But goes along with node-htmlparser so nicely
[00:05] <tmpvar> captain_morgan, yeah, its pretty good
[00:06] <tmpvar> I'm writing an example/tutorial to demonstrate some of the stuff i mentioned in my talk (seems like node-htmlparser is sort of slow)
[00:06] <tmpvar> but i can always cache it and all that
[00:06] <tmpvar> it being the parsed results
[00:07] <captain_morgan> cool
[00:14] tmpvar_ has joined the channel
[00:17] RJ2 has left the channel
[00:24] stepheneb has joined the channel
[00:35] mnutt has joined the channel
[00:43] jedschmidt has joined the channel
[00:45] mnutt_ has joined the channel
[00:59] robrighter has joined the channel
[00:59] Yuffster has joined the channel
[01:00] rictic has joined the channel
[01:10] softdrink has joined the channel
[01:12] thotypous has joined the channel
[01:14] thotypous has joined the channel
[01:14] Aria has joined the channel
[01:17] sudoer has joined the channel
[01:22] mrjjwright has joined the channel
[01:22] ditesh|cassini has joined the channel
[01:29] brianmario has joined the channel
[01:31] dacc has left the channel
[01:31] colin__ has joined the channel
[01:31] creationix has joined the channel
[01:32] <colin__> Hello, anyone familiar with the express framework and able to help me out with a quick routing question
[01:32] <colin__> specifically, how to access HTTP GET parameters in express
[01:39] <cloudhead> >,>
[01:39] <cloudhead> colin__: probably in `params`, or `this.params`
[01:40] <cloudhead> but that's just a wild guess
[01:45] colin__ has joined the channel
[01:50] temp01 has left the channel
[01:50] jedschmidt_ has joined the channel
[01:50] temp01 has joined the channel
[01:55] cedric_ has joined the channel
[01:56] ditesh|cassini has joined the channel
[02:05] kriskowal has joined the channel
[02:19] mscdex has joined the channel
[02:21] mrjjwright has joined the channel
[02:22] tek has joined the channel
[02:24] <Tim_Smart> What package contains execinfo?
[02:24] <_ry> ?
[02:25] <_ry> it's a library
[02:25] <_ry> what's your operating system?
[02:25] <Tim_Smart> 10.04 LTS
[02:25] <_ry> execinfo is not on linux
[02:25] <Tim_Smart> ok good
[02:25] <_ry> it's a bsd thing
[02:26] <_ry> (afaik)
[02:26] <Tim_Smart> ACTION goes back to eating curry and compiling node
[02:31] stevendavie has joined the channel
[02:33] dustym has joined the channel
[02:35] mjijackson has joined the channel
[02:37] tekky has joined the channel
[02:40] tylerstalder has joined the channel
[02:43] dgathright has joined the channel
[02:44] alexiskander has joined the channel
[02:54] dandean has joined the channel
[02:59] bmizerany has joined the channel
[03:00] mrjjwright has joined the channel
[03:03] saikat has joined the channel
[03:08] josh has joined the channel
[03:10] <tylerstalder> I'm having trouble with node-crypto, using Node 0.1.91. When I try to run test.js I'm getting "Error: dlopen(/src/node-crypto/crypto.node, 1): no suitable image found.  Did find: /src/node-crypto/crypto.node: mach-o, but wrong architecture"
[03:14] stepheneb has joined the channel
[03:20] tek has joined the channel
[03:21] softdrink has joined the channel
[03:28] captain_morgan has joined the channel
[03:28] jedschmidt has joined the channel
[03:31] mikeal has joined the channel
[03:33] tekky has joined the channel
[03:35] jasonw22 has joined the channel
[03:42] colin__ has joined the channel
[03:42] <colin__> cloudhead: Thanks, I'm leaning toward just using the URL module for node
[03:45] jasonw22 has joined the channel
[03:49] PyroPete1 has joined the channel
[04:02] smtlaissezfaire has joined the channel
[04:03] <cloudhead> colin__: you can have a look at this too: http://github.com/cloudhead/journey â€” it might fulfill your needs
[04:03] <smtlaissezfaire> Is there a way to run an individual test case with the python testing tool used in node?  `make test` isn't very fast.
[04:03] <cloudhead> although it's mainly for data-services
[04:04] <smtlaissezfaire> Oh.  nm
[04:05] <_ry> smtlaissezfaire: ./node test/pummel/test-timers.js
[04:05] tek has joined the channel
[04:05] <smtlaissezfaire> _ry: Yeah, I noticed it at the end of the test failure right after I had asked.  Thanks.
[04:06] <colin__> cloudhead: Thanks, looks impressive, it may be more than I need for the current project, was hoping to use express for routing, just stuck
[04:07] <colin__> Has anyone else here used express or know how to access url params
[04:07] <cloudhead> colin__: it might also be passed as an argument
[04:07] <cloudhead> that's how I do it in journey
[04:08] <colin__> what do you mean?
[04:08] <cloudhead> do the function
[04:08] <cloudhead> like
[04:08] <cloudhead> get('/foo', function (params) {} )
[04:08] <colin__> right
[04:08] <colin__> i was trying to do something like: 
[04:09] <colin__> get('/*', function (controller) {})
[04:09] <colin__> that seems to be working
[04:09] <colin__> and then i can also do get('/*/*', function (controller, action) {})
[04:10] <colin__> that also works, but i can't take it any further
[04:10] <cloudhead> well, maybe it's the last argument?
[04:10] <cloudhead> so
[04:10] <cloudhead> get('/*/*', function (controller, action, params) {})
[04:10] <colin__> oh ok, let me try that
[04:10] <colin__> thanks
[04:11] <cloudhead> looking through the code
[04:11] <cloudhead> it might be
[04:11] <cloudhead> this.request.params
[04:11] <cloudhead> from inside the function
[04:12] <colin__> let me try that, the first gave undefined
[04:12] <colin__> for params
[04:12] <cloudhead> ok
[04:13] technoweenie has joined the channel
[04:13] <chilts> cloudhead: just reading the README, that looks real nice :)
[04:13] <cloudhead> chilts: thanks
[04:14] <chilts> I guess with ?param=value it's obvious, but what happens with ?param= and ?param
[04:14] <chilts> ?
[04:14] <chilts> (for the URL params)
[04:14] <colin__> cloudhead: unfortunately this.request is also undefined
[04:14] <colin__> hmm
[04:15] <colin__> thanks for your help though, definitely appreciate the support
[04:16] <cloudhead> hmm that sucks
[04:16] <cloudhead> no prob
[04:16] <colin__> am i making a mistake using express - pretty new to node, seems like no one here is using it
[04:16] <cloudhead> chilts: it should be set, but undefined I would say
[04:17] <chilts> I'm gonna have to try it tonight
[04:17] <chilts> get rid of my big switch statement :)
[04:17] <cloudhead> colin__: yea, can't blame you, there isn't really any full-featured framework out there appart from express
[04:17] <cloudhead> but we're working on it
[04:17] <cloudhead> you could take a look at Geddy though in the meantime
[04:17] <cloudhead> I'm not sure how stable it is, but it looks pretty promising
[04:18] <chilts> I haven't seen express, but I guess journey is a _lot_ smaller than express?
[04:18] <cloudhead> chilts: haha cool, let me know how it goes
[04:18] <chilts> I don't want something too big and imposing
[04:18] <cloudhead> chilts: yes, much much smaller
[04:18] <chilts> so journey looks about right to me, if not perfect
[04:18] <colin__> yeah, i started out writing my own router, trying to make something MVC ish with controllers and actions etc
[04:19] <colin__> then i noticed that express, supposedly supports caching and sessions, which im used to in PHP
[04:19] <colin__> any tips on where to go for that?
[04:19] <chilts> yeah, I don't need controllers or sessions in my stuff :)
[04:19] <chilts> colin__: sorry, I'm new to node too :D
[04:20] <colin__> chilts: Jealous of you
[04:20] <colin__> glad to know i'm not the only one new here
[04:20] <micheil> use the tool that fits, not which tool you're use to.
[04:20] <chilts> exactly :)
[04:21] <cloudhead> colin__: have a look at this: http://github.com/mde/geddy
[04:21] <micheil> so, things like caching, the tool that fts would be Varnish & Nginx
[04:21] <cloudhead> I'm not sure what's the status on it, but mde is in the room
[04:21] <chilts> ACTION loves Nginx :)
[04:21] <micheil> sessions, either express or (fab)
[04:21] <cloudhead> ah yes, (fab) : )
[04:21] tekky has joined the channel
[04:21] <cloudhead> might be a little excentric for him
[04:21] <cloudhead> hehe
[04:21] <colin__> micheil: thanks for pointing me in the right direction
[04:22] <micheil> ACTION now actually gets (fab)
[04:22] <micheil> and likes it.
[04:22] <cloudhead> yea, it's rad, but I wouldn't use it for a big project
[04:22] <micheil> eg, is there really such thing as controllers and actions, or are they just methods?
[04:23] <colin__> cloudhead: why do you say that?
[04:23] <colin__> micheil: just methods
[04:23] <colin__> its more of a way for me to organize my code
[04:23] <micheil> eg, user.login() vs {controller: "user", action: "login"}
[04:23] <cloudhead> colin__: did you see what a (fab) app looks like?
[04:23] <colin__> micheil: yes same thing
[04:23] <cloudhead> http://github.com/jed/fab
[04:24] <micheil> cloudhead: there's things I'd do differently, but things I'd do that same as fab
[04:24] <micheil> eg, I'd add helpers for various methods
[04:24] <colin__> i just need a way to go from: /user/login?uid=1234 to user.login({uid:1234})
[04:24] <cloudhead> micheil: problem is it's pretty inflexible
[04:24] <cloudhead> you don't have the full power of javascript
[04:24] <cloudhead> you have to use functions for everything
[04:24] <micheil> but at the same time, I'd have a soft requirement of all the callbacks at the endpoints being something like user.edit vs an inline function
[04:25] <micheil> you do have a full power of javascript.
[04:25] <cloudhead> colin__: you can do that in journey : )
[04:25] <colin__> was trying to do this in Express with routes and couldn't figure out how to get the GET params
[04:25] <micheil> colin__: that should be done with POST data anyway, btw.
[04:25] <colin__> cloudhead:  so do you think journey or fab? where should i start
[04:26] <colin__> yes i know, just trying to continue your login example
[04:26] <cloudhead> journey is just a router, but it'll map routes to whatever you want
[04:27] <cloudhead> if you want sessions and stuff, that it doesn't do
[04:27] bpot has joined the channel
[04:27] <colin__> gotcha - what about output, rendering templates, etc
[04:27] <cloudhead> yea you want something like fab or geddy for that
[04:28] <cloudhead> if you want it to handle all of that
[04:28] <chilts> sweet, all of this tells me that journey is exactly right for me :)
[04:28] <cloudhead> hehe
[04:28] Phazm has joined the channel
[04:28] <colin__> (fab) looks nuts, haha
[04:29] <colin__> what are all those parens
[04:30] <cloudhead> yea, toldya
[04:37] <colin__> cloudhead: Finally figured it out with express
[04:37] <colin__> inside the function: this.url.query
[04:38] <cloudhead> lol
[04:38] <cloudhead> nice
[04:38] stevendavie has joined the channel
[04:39] <cloudhead> would never have guessed
[04:39] <colin__> btw, is there an easy way to inspect object properties in terminal without looping over and doing sys.puts
[04:39] <cloudhead> you can do sys.puts(sys.inspect(object))
[04:40] <cloudhead> or use this: http://github.com/cloudhead/eyes.js
[04:40] <colin__> oh got it - i was just doing sys.inspect without the puts - no wonder i wasnt getting any output
[04:41] <smtlaissezfaire> _ry: Is there some reason #46 was never taken care of?  That fork of felixge doesn't seem to be around any longer.
[04:42] <colin__> cloudhead: wow, you've coded a solution to every problem i've thrown your way
[04:42] <smtlaissezfaire> colin__: or use the debugger
[04:42] <colin__> I should look through your github repo, you've probably already coded my app
[04:42] <cloudhead> colin__: I've got a little ecosystem going yea : )
[04:42] <cloudhead> haha
[04:43] <cloudhead> yea, node-debugger can do some neat things
[04:43] <colin__> well, i appreciate it
[04:43] tek has joined the channel
[04:43] <smtlaissezfaire> colin__: In that case, I suppose you could have inspected arguments & this
[04:44] <colin__> smtlaissezfaire: are you talking about the issue i was having with express?
[04:44] <smtlaissezfaire> Yeah
[04:44] <colin__> looking into the debugger now, is it just a module i need to include
[04:44] <cloudhead> actually this is what I was thinking about http://github.com/Connorhd/node_debug << has an html inspector
[04:44] <cloudhead> but smtlaissezfaire's is another solution
[04:45] <cloudhead> http://github.com/smtlaissezfaire/ndb
[04:45] <cloudhead> didn't know about this one, very cool
[04:45] <colin__> checking now, thx
[04:46] <smtlaissezfaire> I couldn't program without a debugger - I'm just not smart enough to reason about what's going to happen 10 steps down the line.  I was never a really good chess player.
[04:46] <cloudhead> debuggers kind of confuse me more about the state of the program
[04:46] <cloudhead> they kind make me feel like I have tunnel vision
[04:47] <smtlaissezfaire> _ry: I'd like you take a look at this patch for hot swapping code with require: http://gist.github.com/398215
[04:47] <colin__> smtlaissezfaire: I agree, i have trouble without.  In the browser, i'm constantly in firebug
[04:47] <cloudhead> but they've provided very useful in some intances
[04:48] dgathright has joined the channel
[04:48] <cloudhead> like when I want to look at the state of my db at a specific  point in the program
[04:49] tekky has joined the channel
[04:49] <smtlaissezfaire> cloudhead: I could see that.  It's sometimes hard to see the big picture when you are examining the minutia.
[04:49] <cloudhead> ya
[04:49] <cloudhead> sometimes I find tracecode to work better
[04:50] <smtlaissezfaire> tracecode = a stack trace?
[04:50] <cloudhead> but I've had instances where I'll have really ellaborate tracecodes due to refusing to use the debugger
[04:50] <cloudhead> smtlaissezfaire: no like, sys.debug("THIS "+ this)
[04:50] steadicat has joined the channel
[04:51] <cloudhead> to follow what the program is doing
[04:51] <colin__> cloudhead: Thats what i've been doing
[04:51] <colin__> getting a bit tedious
[04:51] <cloudhead> yea
[04:51] <cloudhead> it works OK when you can find your problem in the next 10-15mins
[04:52] <cloudhead> but after that I usually take the debugger out
[04:55] tekky has joined the channel
[04:57] <colin__> cloudhead: have you used node_debug? So the http server is running on 1 port and the debugger on another?
[04:57] <colin__> am i understanding that right
[04:57] <colin__> so when you browse to localhost:8080 for example you see the debugger
[04:58] <smtlaissezfaire> Is it just me, or does Montreal have a pretty big JS community?
[04:59] technoweenie has joined the channel
[05:03] mikeal has joined the channel
[05:06] mortens has joined the channel
[05:18] mrjjwright has joined the channel
[05:20] admc has joined the channel
[05:23] tekky has joined the channel
[05:23] sveisvei has joined the channel
[05:29] <cloudhead> colin__: yea that sounds right
[05:30] <cloudhead> smtlaissezfaire: not as big as NY/SF, but decent
[05:30] <cloudhead> are you from around? your name is french
[05:37] SamuraiJack has joined the channel
[05:38] kriszyp has joined the channel
[05:40] tek has joined the channel
[05:40] towski has joined the channel
[05:45] brianmario has joined the channel
[05:47] <cloudhead> kriszyp: you there?
[05:47] <kriszyp> yes
[05:47] <smtlaissezfaire> cloudhead: Nope, I'm in NYC
[05:47] <cloudhead> kriszyp: there's a typo in your json schema rfc
[05:47] <cloudhead> section 5.8
[05:47] <cloudhead> smtlaissezfaire: ah ok
[05:48] <kriszyp> ah, I see, thank you
[05:48] <cloudhead> np
[05:56] tekky has joined the channel
[05:59] nsm has joined the channel
[06:01] <cloudhead> hey kriszyp: what would be the cleanest way to extend json schema with custom validators, without breaking the spec, if possible?
[06:03] <kriszyp> the spec doesn't prevent extending, I do some thing like {properties:{foo:{type:"number",set:function(newValue){ ... do custom validation ...}}},...
[06:04] <cloudhead> kriszyp: ah I see, so I could add custom property attributes
[06:04] <cloudhead> or would that all go under a function
[06:04] <kriszyp> either way
[06:05] <cloudhead> cool, thanks
[06:05] <kriszyp> and then in perstore/persevere, I also support a put method on the schema (top level) that can do custom validation that involves multiple properties
[06:06] <cloudhead> ah nice
[06:06] <cloudhead> that's interesting
[06:06] <cloudhead> so you serialize the functions as strings
[06:11] <kriszyp> depends on the content type (Accept header), application/json doesn't serialize the functions at all, they are just local to the server, those functions only are executed on the server, but with application/javascript, I believe they get serialized
[06:13] <cloudhead> ok, well one could always just do it manually
[06:16] <inimino> ACTION should read that draft
[06:18] colin__ has joined the channel
[06:18] <inimino> anyone have any guess what percentage of JSON-consuming things support "text/json" as well as "application/json"?
[06:19] <cloudhead> text/plain sure but text/json - never seen that
[06:20] <inimino> well, I guess I'll find out
[06:20] pdelgallego has joined the channel
[06:20] <cloudhead> hehe
[06:20] <cloudhead> I think most clients don't even check the content-type header
[06:20] <cloudhead> and browsers just default to octet-stream or whatever
[06:21] <inimino> yeah
[06:21] <inimino> I don't like application/* so I'm using text/json
[06:21] <cloudhead> ah
[06:21] <inimino> I'll change it if something I care about actually breaks :)
[06:21] <cloudhead> hehe
[06:32] <nsm> sorry to interrupt, but could some v8 veteran explain the deal with HandleScope::Close(). I asked on #v8, but noone is active. How will using/not using Close() affect my Javascript code?
[06:32] colin__ has joined the channel
[06:33] <nsm> i understand what Close() does, but not how it affects javascript code, does it affect C++ code?
[06:36] <_ry> nsm: you have to use close
[06:38] <nsm> _ry: I haven't used close till now, but I have never had any adverse effect in the JavaScript using my binding... I realise I should use Close(), but what is the justification
[06:38] hassox_ has joined the channel
[06:38] <nsm> am I just lucky for not being hit by the GC will my code was running?
[06:39] <_ry> nsm: it's to close the current scope - so that the next variable you create is on the one below
[06:39] <Phazm> I noticed that there's a node module for STOMP -- I've been looking at it, and I cannot figure out what it's for... can anyone help explain?
[06:39] <_ry> so you drop a frame on the stack
[06:40] <micheil> _ry: with # concurrent http upgrade requests, would it be necessary to implement a meshing style thing?
[06:40] <_ry> Phazm: stomp is a message queue protocol
[06:40] <micheil> eg, two servers talking to each other sharing the messages from each's clients
[06:40] mscdex has joined the channel
[06:40] <nsm> _ry: but say in some C++ function introduced into javascript, in that I do 'return String::New("hi")' or 'scope.Close(String::New("hi"))', how does the scope stack change then? When returning from a function one stack frame will always be popped right?
[06:40] <micheil> _ry: also, there was another thing, which I've forgotten now
[06:41] <Phazm> any example as far as what that is/can be used for?
[06:43] dekroning has joined the channel
[06:44] <_ry> nsm: yeah right - i guess it's to take that local handle and pass it out to hte lower frame
[06:44] <_ry> nsm: right - what i said before wasn't correct
[06:45] <_ry> it will pop the top frame when the HandleScope's destructor is called 
[06:45] <_ry> which is at the end of the function
[06:45] <_ry> so the close is to pull the Local<Value> reference out
[06:45] <nsm> so suppose my JS code is `var x = cppFunc()` and then I am *NOT* using scope.Close(), and the GC kicks in and wipes out the return value, will refering to x lead to a segfault/exception or something?
[06:46] dgathright has joined the channel
[06:46] <nsm> ACTION really wishes v8 documented their design rather than just the API
[06:48] <_ry> nsm: you run into very tricky to find errors if you don't scope.Close()
[06:48] <_ry> also if you don't HandleScope scope; at the beginning
[06:48] <nsm> _ry: ok, thanks a lot, that cleared my issues
[06:48] <_ry> the only case where you don't need to scope.Close() is when you're returning Undefined()
[06:49] <_ry> (maybe True() and False() and Null() are okay too)
[06:49] <_ry> nsm: are you testing with node_g?
[06:49] <nsm> hmm, why is that? and what about ThrowException?
[06:49] <_ry> because they are references to a single object, i think
[06:49] <nsm> _ry: i'm not testing anything right now, but this was pricking me for a long time, and I was writing an article which needed this
[06:49] <_ry> ThrowException does not need scope.Close
[06:50] <nsm> _ry: and would you know the difference between Arguments::Holder() and Arguments::This(). They *usually* point to the same object, even after binding the function to a different object and so on
[06:51] <_ry> nsm: there is a discusion in the v8-user archives explaining that
[06:51] <_ry> it's for some DOM strangeness
[06:52] colin__ has left the channel
[06:53] <technoweenie> hey _ry are you going to be at the node thing in palo alto tomorrow
[06:53] <nsm> _ry: ok will do, thanks again
[06:55] <_ry> Phazm: rabbitmq
[06:55] <_ry> micheil: meshing thing? :/
[06:56] <micheil> _ry: yeah
[06:57] <micheil> _ry: so you have two servers talking over raw tcp or the protocol to each other, they are also a server, and on message, they write the message to the tcp socket, sharing the message with the clients connected to the other end
[07:00] <mape> micheil: Hah
[07:00] <mape> You know about the SEDO thing
[07:00] <micheil> hmm.. maybe?
[07:00] <mape> I offered 60 USD and he made me a counter offer
[07:01] <micheil> lol.
[07:01] <mape> So I figured you and me would split it
[07:01] <micheil> how much?
[07:01] <mape> he only wants $10.000
[07:01] <mape> So if I take 5k and you take 5k we are set
[07:01] <micheil> yeah, uh, no.
[07:01] <micheil> which domain?
[07:01] <mape> hehe
[07:01] <mape> nodejs.com
[07:01] <_ry> heh
[07:01] <micheil> that's really sad actually.
[07:02] <mape> Some dude from china, so he will probly have a lot of use for it
[07:02] <micheil> seriously, if people can get away with buy domains, not using them and then requesting so much for them, it's insane.
[07:02] <mape> domainreseller@vip.qq.com
[07:02] <micheil> I don't care where they are from, tbh.
[07:03] <micheil> 10,000$ could buy.. what, standard .com domain / year with namecheap, 10$, 1000 domains.
[07:03] <Phazm> you should just buy www.js.com and set up node as a subdomain ;)
[07:03] <micheil> node.js.com
[07:03] <micheil> nawh
[07:03] <micheil> js.org would look better, but then you limit options
[07:04] <Phazm> or wait for the changes to tlds, when we can have custom ones, and just grab ".js"
[07:04] <micheil> I really want some company to get the .js gTLD
[07:04] <Phazm> http://node.js/
[07:04] <micheil> it costs about 1mil though for it.
[07:04] <Phazm> i'll split it with yopu
[07:04] <Phazm> 99.99/0.01 split.
[07:04] <micheil> ha. no; I'm lucky if I can find 200$ at times.
[07:04] mikeal has joined the channel
[07:06] <Phazm> js.org is owned by a religious group -- if you make a nice donation, they would probably allow you to set up the subdomain ;)
[07:07] <micheil> that could show bias no?
[07:08] Tim_Smart has left the channel
[07:09] <mape> How hard is it to get an .com in the US?
[07:09] <mscdex> not hard?
[07:09] <mape> Need trademarks and whatnot to get it?
[07:09] <mscdex> no, just register it
[07:10] <mape> micheil: I mean if I managed to snatch cocacola.com
[07:10] <mscdex> heh
[07:10] <mape> Do they have any legal force to push me around with?
[07:10] <mscdex> probably
[07:10] <mape> Or just throw money at it
[07:10] <mscdex> i'm not a lawyer though :P
[07:11] <mape> hehe
[07:11] <Phazm> heh, some guy named "Mike Rowe" that made software was sued (and lost) to microsoft because he owned mikerowesoft.com
[07:11] <Phazm> true story
[07:11] <mape> hehe
[07:11] <mape> Probly more of a pain for him
[07:13] <eyzn> A Canadian teenager whose website annoyed Bill Gates'  lawyers is giving it up in exchange for Microsoft goodies, including an  Xbox console. 
[07:13] <eyzn> http://news.bbc.co.uk/2/hi/technology/3429485.stm
[07:14] <Phazm> http://en.wikipedia.org/wiki/Microsoft_vs._MikeRoweSoft
[07:15] <eyzn> nice story :D
[07:20] <Phazm> moral of the story, don't register cocacola.com ;)
[07:21] <mape> hehe
[07:25] ineation has joined the channel
[07:29] pdelgallego has joined the channel
[07:34] SamuraiJack_ has joined the channel
[07:47] SvenDowideit has joined the channel
[07:50] SvenDowideit_ has joined the channel
[07:52] jfd has joined the channel
[07:54] TomY has joined the channel
[08:02] felixge has joined the channel
[08:02] felixge has joined the channel
[08:13] teemow has joined the channel
[08:16] xla has joined the channel
[08:19] SvenDowideit_ has joined the channel
[08:23] markwubben has joined the channel
[08:27] SvenDowideit has joined the channel
[08:28] mscdex has joined the channel
[08:30] jbrantly has joined the channel
[08:34] SvenDowideit has joined the channel
[08:34] tekky has joined the channel
[08:35] derbumi has joined the channel
[08:38] N` has joined the channel
[08:40] Gruni has joined the channel
[08:43] xla has joined the channel
[08:45] sveimac has joined the channel
[08:48] SvenDowideit has joined the channel
[08:51] SvenDowideit_ has joined the channel
[08:58] SvenDowideit_ has joined the channel
[09:00] SvenDowideit_ has joined the channel
[09:01] Phazm has joined the channel
[09:01] plhw_ has joined the channel
[09:02] keyvan has joined the channel
[09:05] SvenDowideit has joined the channel
[09:13] botanicus has joined the channel
[09:15] botanicus has joined the channel
[09:20] maushu has joined the channel
[09:22] <maushu> http://rcrowley.org/2010/01/06/things-unix-can-do-atomically.html
[09:24] <sztanpet> why is this interesting?
[09:24] hassox has joined the channel
[09:25] kjeldahl has joined the channel
[09:28] <mscdex> coloring is fun :-D
[09:29] ineation has joined the channel
[09:55] botanicu_ has joined the channel
[10:01] jmwinn21 has joined the channel
[10:02] ineation has joined the channel
[10:05] _Fuxx has joined the channel
[10:07] hassox has joined the channel
[10:13] mertimor has joined the channel
[10:14] <maushu> dun dun dun
[10:25] olegp has joined the channel
[10:26] olegp has joined the channel
[10:27] Gruni|Touch has joined the channel
[10:30] ineation has joined the channel
[10:31] felixge has joined the channel
[10:34] kjeldahl has joined the channel
[10:37] jedschmidt has joined the channel
[10:39] mscdex has joined the channel
[10:50] MattJ has joined the channel
[11:02] dwww has joined the channel
[11:05] Nohryb has joined the channel
[11:11] sveimac has joined the channel
[11:13] <derRichard> does node have something like a barrier? when i start a lot async operations i need a barrier where node blocks until all operations are done.
[11:14] <micheil> derRichard: there's no such thing as sync in node
[11:15] <micheil> there is however, things like step
[11:15] <mape> derRichard: Have you looked at ..
[11:15] <mape> ^ step
[11:15] <micheil> :P
[11:15] <micheil> derRichard: there's a good tutorial on howtonode.org as to how to use step.
[11:15] Tim_Smart has joined the channel
[11:15] <mape> Using step you can have steps, so you runt 100 async functions in the first step, when those are done you pass the data to a new step etc etc
[11:17] <derRichard> this is exactly what i need. thanks!
[11:19] derbumi has joined the channel
[11:20] brainproxy has joined the channel
[11:23] ditesh|cassini has joined the channel
[11:25] teemow has joined the channel
[11:26] keeto has joined the channel
[11:28] dwww has joined the channel
[11:30] dwww has joined the channel
[11:31] dwww has joined the channel
[11:35] dwww has joined the channel
[11:57] teemow has joined the channel
[11:58] chuck has joined the channel
[11:58] jwm has joined the channel
[12:03] paul__ has joined the channel
[12:15] thotypous has joined the channel
[12:21] marktlang has joined the channel
[12:23] Gruni|Touch has joined the channel
[12:23] rauchg has joined the channel
[12:24] stepheneb has joined the channel
[12:30] nsm has joined the channel
[12:32] hassox has joined the channel
[12:34] javajunky has joined the channel
[12:35] kriszyp has joined the channel
[12:35] fermion has joined the channel
[12:40] hellp has joined the channel
[12:41] <fermion> morning all.  I'm curious if there's something obvious that I'm missing w/r/t debugging node.js/express startup errors
[12:41] <fermion> specifically, where, in app code, the erroneous function call is coming from
[12:41] <fermion> brute force trial and error is failing me atm
[12:43] markwubben_ has joined the channel
[12:45] thoolihan has joined the channel
[12:47] felixge has joined the channel
[12:47] felixge has joined the channel
[12:47] <broofa> Can someone point me to a good example of how to use the ServerRequest's 'data' event to build up the body string for a request?
[12:47] derbumi has joined the channel
[12:47] <broofa> It looks like the example at http://phizcode.blogspot.com/2010/03/beyod-static-nodejs-and-post-method.html breaks if more than one 'data' event is emitted.
[12:48] <rauchg> _ry: you there 
[12:48] <broofa> (Speaking of which, is there a known heuristic for when the 'data' event will fire more than once?  E.g. if a request is > some known size?)
[12:51] <felixge> rauchg: probably not, it's 5:50am there
[12:51] <rauchg> oh
[12:51] <rauchg> felixge: you there 
[12:51] <rauchg> j/k 
[12:51] <felixge> rauchg: I guess I can't hide, so yeah :D
[12:51] <rauchg> question, what do you think about the `upgrade` event vs having this.request.upgrade ?
[12:52] <felixge> rauchg: nothing, I'm not doing anything with those web sockets at this point : )
[12:52] <micheil> rauchg: there's a reason we went for upgrade event
[12:52] <rauchg> micheil: yes
[12:52] <micheil> ACTION was the author of part of the commits
[12:52] <rauchg> we don't want connections to remain open
[12:52] <rauchg> if it's unhandled 
[12:52] <rauchg> but, i was wondering if we could have achieved that by using __defineGetter on the upgrade property ?
[12:52] <micheil> okay, if it's unhandled.. it should close
[12:52] <micheil> one sec, just checking something
[12:53] <micheil> if (self.listeners("upgrade").length) {
[12:53] <rauchg> it doesn't feel right for a header to fire an event somehow 
[12:53] <micheil> otherwise, the socket is killed
[12:53] <micheil> so, if it's unhandled, there's no problems
[12:54] <micheil> however, if you listen to the upgrade event, then you're either accepting all, or filtering, and in which case those you reject you should destroy the connection
[12:54] <broofa> 'looks like Express just does 'buf += chunk' to build up request bodyâ€¦ but does that work with the new Buffer class that ServerRequest passes for 'data' event?  (i.e. is that most efficient way to concatenate buffers?)
[12:54] <rauchg> what about this.server.handleUpgrades = true, and then you can check the headers on the request normally ? 
[12:55] <rauchg> it just bothers me to have a `request` event and an `upgrade` event, as if `upgrade` wasn't a request.
[12:55] <rauchg> brb
[12:55] <micheil> rauchg: there's no need
[12:55] <micheil> there's always been a request event
[12:55] <micheil> however, there shouldn't be a request event if it's upgrade
[12:56] <micheil> that's why there's the two different events
[12:57] <rauchg> i know this method works micheil, i'm just wondering if the API is elegant 
[12:57] <micheil> if your http.Server doesn't have any listeners for the upgrade event, then the connection is closed.
[12:57] <micheil> rauchg: so far in my uses, I've found it extremely elegant
[12:57] <micheil> rauchg: let me show you..
[12:57] <rauchg> i have seen your websocket server 
[12:58] <micheil> http://github.com/miksago/node-websocket-server/blob/master/lib/ws.js#L39-79
[12:58] <micheil> admittedly, mine does a lot of other stuff
[12:58] <rauchg> i just think it's confusing that request won't fire, when there's clearly a request 
[12:58] <micheil> it's not a normal request though
[12:59] <micheil> and it wouldn't be elegant to push the upgrade data and stuff onto normal requests and having to do if/else's all the time
[13:00] <micheil> I mean, if you want, you can re-route the event, but, I don't think it'll work, and I think you'll hit issues early on
[13:00] <rauchg> you could have .addListener('request', function(){ if (.upgrade) new WSConnection() else new Connection() }
[13:00] <rauchg> similar to what you have in -ws-server
[13:01] mjijackson has joined the channel
[13:02] <rauchg> even though the main use for upgrade will be websocket, one shouldn't make assumptions about the characteristics of the protocol being switched
[13:02] <rauchg> so it could be a "normal request"
[13:02] <rauchg> the RFC mentions Upgrade: HTTP/2.0 for example 
[13:02] <micheil> rauchg: yeah, but then, what happens for the normal http.Server
[13:02] <micheil> one which we don't want upgrade or websocket requests on?
[13:03] <rauchg> like i said, if you want to handle upgrades, you could flag the server like .leaveConnectionOpenOnUpgrade 
[13:03] <micheil> we'd still have to check if it's an upgrade, even if we really don't want upgrades
[13:03] <micheil> it also means that the developer needs to complicate things and close those connections
[13:03] <micheil> it's really in the end just more configuration
[13:03] <micheil> It's generally better to have good defaults, even if the events are slightly confusing
[13:03] <rauchg> well, this is configuration through events right now
[13:04] <rauchg> it's not a normal event, it's an event that's being checked if exists
[13:04] <rauchg> which sounds like a flag to me
[13:04] <micheil> not really, it's reliable, and expected.
[13:04] <rauchg> well, i'd expect request to be fired too..
[13:04] <rauchg> it's not really expected
[13:04] <micheil> you know instantly that for all normal HTTP requests, you'll get a request event
[13:05] <micheil> upgrades shouldn't be treated as a normal request, as they aren't
[13:06] <rauchg> they are a normal HTTP request, that's the point, it's a header that's contemplated in the RFC. what happens *after* the request is what isn't "normal"
[13:06] <rauchg> (the response)
[13:07] <micheil> yeah, but I think the way that we've approached it gives the best forward looking experience while not breaking 100% of previous node applications
[13:08] <micheil> rauchg: also, if you want to capture all connections, you can use the connect / connection event
[13:09] <micheil> rauchg: I mean, I'm just unsure as to why you want to the two events merged?
[13:09] <micheil> it doesn't make sense to me, I'd like to see the use case for it
[13:09] <micheil> like, the difference of how hard each is
[13:10] davidsklar has joined the channel
[13:10] JimBastard has joined the channel
[13:11] <rauchg> not different at all 
[13:11] <rauchg> in your example
[13:12] <micheil> show me two gists. ;P
[13:12] <rauchg> this.server.handleUpgrades = true; 
[13:12] <micheil> I think it'll be harder to code for
[13:12] robrighter has joined the channel
[13:12] <rauchg> this.server.addListener('request', function(){ if (req.upgrade){ } // like it used to be });
[13:12] <rauchg> no new event 
[13:12] <micheil> right, what happens if I don't put the if statement in?
[13:13] <rauchg> and you set handleUpgrades to true ?
[13:13] jherdman has joined the channel
[13:13] <micheil> yes
[13:13] <micheil> or something I've inherited from sets upgrades to true
[13:13] <rauchg> then the connection stays open 
[13:13] <micheil> which isn't ideal.
[13:13] <rauchg> same happens if you inherit from something that added the event 
[13:13] <micheil> you don't want dead connections like that
[13:13] <micheil> not so
[13:14] <rauchg> how come ?
[13:14] <micheil> in that case, the thing you're inheriting from should be either using the update request or closing it
[13:15] <micheil> also, upgrade requests don't have the same parameters as http requests
[13:15] <JimBastard> ughhhhh
[13:15] <micheil> request(req, res)
[13:15] <JimBastard> why i am at work at 9am
[13:15] <JimBastard> w 
[13:15] <JimBastard> t
[13:15] <JimBastard> gf
[13:15] <micheil> upgrade(req, socket, header)
[13:16] <maushu> So, the wikipedia brainwashers think that "Malamanteau" isn't a real word, eh?
[13:16] <maushu> I will see about that.
[13:16] <maushu> ACTION waits one year to create the article again.
[13:20] SleepyBastard has joined the channel
[13:20] javajunky has joined the channel
[13:21] <SleepyBastard> whhhhhhhy
[13:21] <SleepyBastard> whhhhhhhy
[13:21] <SleepyBastard> why did i have to get a job
[13:28] mrjjwright has joined the channel
[13:29] kevwil has joined the channel
[13:33] mrjjwright has joined the channel
[13:35] smtlaissezfaire has joined the channel
[13:35] gwoo has joined the channel
[13:38] robrighter has joined the channel
[13:40] quirkey has joined the channel
[13:44] paul__ has joined the channel
[13:46] derbumi has joined the channel
[13:50] ineation has joined the channel
[13:52] <micheil> has anyone built a webhooks library?
[13:52] <MattJ> What would such a library do?
[13:52] <rauchg> it'd hook the web 
[13:52] <micheil> handle webhooks ;P
[13:52] <MattJ> Which are HTTP requests, right?
[13:52] <SleepyBastard> im working on a web hook library micheil 
[13:52] <MattJ> and you can handle HTTP requests with Node's API
[13:52] <SleepyBastard> hook.io
[13:53] <micheil> SleepyBastard: Jim?
[13:53] <SleepyBastard> webhooks are not just http requests
[13:53] <broofa> Hey, is there a bug in the .1.94 docs?  Does Buffer actually implement byteLength in v0.1.94?
[13:53] <SleepyBastard> thats a misnomer
[13:53] <micheil> SleepyBastard: I don't know much about them
[13:53] <SleepyBastard> its any hook over the wire
[13:53] <broofa> It seems to be undefined.
[13:53] <SleepyBastard> broofa: there is one guy who started to define stuff
[13:53] <SleepyBastard> webhooks.org
[13:53] <micheil> k
[13:53] <SleepyBastard> i talked about this at jsconf, i really should get my slides up
[13:53] <micheil> checking
[13:54] <SleepyBastard> but yeah micheil im very interested in webhook libs, i got a really good start to one with hook.io
[13:54] <SleepyBastard> im in the middle of rebuilding it though
[13:54] <micheil> SleepyBastard: okay
[13:54] <SleepyBastard> would love some input / help
[13:54] <micheil> stick it on github and link me.
[13:54] smtlaissezfaire has joined the channel
[13:55] <SleepyBastard> http://github.com/marak/hook.io
[13:55] <SleepyBastard> im currently working in the reglue branch
[13:55] <broofa> SleepyBastard:  uhm, can you elaborate?  Who is defining?  Does that mean byteLength is/is not supported?
[13:55] <SleepyBastard> im not set in stone with any of the architecture really
[13:56] joshbuddy has joined the channel
[13:56] <SleepyBastard> micheil: ping me on gchat if you want to talk more about a web hooks library
[13:56] <micheil> okay
[13:56] <SleepyBastard> ive got a bit of traction going for hook.io already, got a site too
[13:56] <SleepyBastard> http://hook.io
[13:57] <SleepyBastard> sup broofa 
[13:57] <SleepyBastard> i dunno what you mean by byteLength
[13:58] broofa has left the channel
[13:58] broofa has joined the channel
[13:58] <broofa> SleepyBastard:  see http://nodejs.org/api.html , "Buffer.byteLength" property.
[13:59] <SleepyBastard> so how does that tie in with webhooks broofa 
[13:59] <broofa> docs say it should provide string length.  however when running app, that property is undefined.
[13:59] <broofa> JimBastard: 'doesn't.  Please see my question above, which you responded to (urrâ€¦ right?)
[14:00] <broofa> JimBastard:  I was simply trying to figure out if the Buffer.byteLength property is actually implemented.
[14:00] <JimBastard> lol
[14:00] <JimBastard> i wasnt talking to you at all
[14:00] <JimBastard> read up
[14:00] <JimBastard> i was talking to micheil 
[14:01] <micheil> JimBastard: simple, service I want to integrate into a current app I'm working on uses webhooks and will possibly publish stuff I need using them
[14:02] <broofa> JimBastard: ahâ€¦ confused since I thought you said, "broofa: there is one guy who started to define stuff"
[14:02] <JimBastard> lol
[14:02] <JimBastard> sorry
[14:02] <JimBastard> micheil: i wouldnt be opposed to restarting hook.io, everything i have is uber modular
[14:03] <JimBastard> im in the process of making a new glue
[14:03] <JimBastard> the only thing i care about is the concept of webhook definitions and protocols
[14:03] <JimBastard> fuck, why isnt my jsconf talk up yet
[14:03] <JimBastard> all the info online is outdated 
[14:06] demolithion has joined the channel
[14:06] tmpvar has joined the channel
[14:07] gf3 has joined the channel
[14:11] ceej has joined the channel
[14:15] <broofa> Does this code for using Buffer to build up request body look correct? http://gist.github.com/398620
[14:15] <broofa> (based on v0.1.94)
[14:16] tmpvar has joined the channel
[14:16] <broofa> 'works, but node.js docs are a bit sparse, so just want to get a sanity check.
[14:17] <micheil> broofa: is chunk a Buffer?
[14:17] <broofa> yes
[14:17] pjb3 has joined the channel
[14:17] <micheil> okay, why not do the chunk.copy in the data event?
[14:18] <broofa> micheil:  In cases where data called multiple times, you end up doing more copying than needed.
[14:18] <micheil> also, you can write raw buffers to a res
[14:18] <micheil> fair enough
[14:20] <broofa> micheil:  re: writing to responseâ€¦ not sure how that relates to this.  I just want to reliably be able to get the request body in a performent manner.
[14:20] <micheil> ah, okaty
[14:21] <broofa> I'm assuming the 'data' event will fire multiple times if/when the body gets to be "large" (whatever that means â€¦ > 16-32KB, maybe??? don't really know.)
[14:22] <micheil> I'd have to check the source code
[14:22] <micheil> bbl.
[14:23] <broofa> micheil:  I'm guessing it depends a lot on network configuration/latency/etc of the various hosts between client/server.
[14:23] <broofa> I.e. very likely to be non-deterministic.
[14:24] batasrki has joined the channel
[14:25] ineation has joined the channel
[14:28] sveimac has joined the channel
[14:30] mrjjwright has joined the channel
[14:30] ineation has joined the channel
[14:32] softdrink has joined the channel
[14:36] keeto has joined the channel
[14:38] softdrink has joined the channel
[14:45] mjijackson has joined the channel
[14:46] robinduckett has joined the channel
[14:46] <robinduckett> yo
[14:47] <JimBastard> sop
[14:47] <JimBastard> welcome to node how may i halp you
[14:49] <robinduckett> halp
[14:49] <robinduckett> plz
[14:49] <robinduckett> wot is a varble
[14:49] <softdrink> therz javagoogles all in my internets!
[14:50] <robinduckett> ohnoes! the tubes will fulled up!
[14:50] <softdrink> http://www.favbrowser.com/wp-content/uploads/2009/09/ie6.gif
[14:51] <batasrki> ACTION taps the internets, looks like bizzaro IRC channel here
[14:51] <robinduckett> roflmao
[14:51] <robinduckett> I doth deem the Babbel IRC client shit.#
[14:52] <robinduckett> brb
[14:52] <batasrki> was that a bot with a Markov chain implementation or what?
[14:52] <softdrink> Supporting IE has finally broken us, I suppose.
[14:53] lifo has joined the channel
[14:53] <bradleymeck> mmm parse(file:///etc/passwd).pathname == "///etc/passwd" in the url tests seems wrong to me, why are the two slashes at front preserved?
[14:55] Yuffster has joined the channel
[14:56] ineation has joined the channel
[15:05] sztanphet has joined the channel
[15:05] <maushu> I just noticed I have been listening to the same song for 7 hours.
[15:05] jherdman has joined the channel
[15:06] <JimBastard> maushu: was it spin doctors - two princesses?
[15:07] <JimBastard> also how much adderal are you on?
[15:07] jherdman has joined the channel
[15:09] tmpvar has joined the channel
[15:10] stepheneb has joined the channel
[15:10] DracoBlue has joined the channel
[15:12] <tmpvar> morning
[15:15] nefD has joined the channel
[15:18] <maushu> JimBastard: I have no idea what kind of music it is.
[15:18] <maushu> It's not that one. Unless they stopped making music titles based on lyrics.
[15:19] <JimBastard> sup tmpvar 
[15:23] <tmpvar> what up
[15:25] <JimBastard> zzzzzz
[15:25] <JimBastard> in office at 9am today
[15:25] <JimBastard> zzzz
[15:26] sztanpet has joined the channel
[15:36] <tmpvar> yay more java debunging today
[15:36] <tmpvar> ACTION slaps self with trout
[15:36] jherdman has joined the channel
[15:44] javajunky has joined the channel
[15:44] bpot has joined the channel
[15:45] whoahbot has joined the channel
[15:47] TheEnd2012 has joined the channel
[15:48] wilmoore has joined the channel
[15:48] brainproxy has joined the channel
[15:50] <mjijackson> JimBastard: dangit Jim! now i have that two princes song in my head!
[15:51] <mjijackson> ACTION turns on iTunes
[15:51] <JimBastard> well if you
[15:51] <JimBastard> want to call me bastard
[15:51] <JimBastard> then go ahead now
[15:51] <JimBastard> and if you
[15:51] <JimBastard> want to come to nyc and get plastered
[15:51] <JimBastard> well go ahead now
[15:51] <tmpvar> do eet
[15:51] <mjijackson> JimBastard: you're in the wrong line of work! you should be a poet
[15:52] <JimBastard> i might have a rap group
[15:52] <JimBastard> yo wtf, why is my hackernews comment only showing up on my own account and not when im not logged in?
[15:52] <JimBastard> am i being stupid>
[15:54] <JimBastard> can anyone see my comment
[15:54] <JimBastard> http://news.ycombinator.com/item?id=1341019
[15:56] <tmpvar> negatory
[15:56] <derRichard> no
[15:59] steadicat has joined the channel
[16:01] <JimBastard> fucking shit
[16:01] <JimBastard> whats that about
[16:02] <mjijackson> wonder if they're censoring you?
[16:02] <JimBastard> it wouldnt be the first time, thats soo strange
[16:03] DracoBlue has joined the channel
[16:04] <JimBastard> either HN is fucked up, or someone has miserabled  my account
[16:04] tk has joined the channel
[16:04] <JimBastard> whenever i login i get super slow page loads and my comments go nowhere, but appear to be posted to me
[16:04] sudoer has joined the channel
[16:04] <JimBastard> can anyone login to HN and check
[16:07] <JimBastard> awesome
[16:07] <JimBastard> now i cant submit new posts
[16:07] <JimBastard> You're submitting too fast. Please slow down. Thanks.
[16:07] <JimBastard> first new post of the day
[16:07] <JimBastard> havent tried to comment in like 20 minutes
[16:14] mrjjwright has joined the channel
[16:18] indiefan has joined the channel
[16:19] creationix has joined the channel
[16:20] captain_morgan has joined the channel
[16:21] teemow has left the channel
[16:21] broofa has joined the channel
[16:27] dgathright has joined the channel
[16:31] stevendavie has joined the channel
[16:34] <jan____> TomY: 
[16:34] <jan____> sorry
[16:34] <jan____> fail
[16:35] TobiasFar has joined the channel
[16:35] mertimor has joined the channel
[16:37] <TomY> np
[16:40] <Phazm> Error: ENOMEM, Timeout while contacting DNS servers\n    at Timer.callback (dns:15:13)\n    at node.js:176:9 --- anyone else run into this?
[16:41] <Phazm> it happens seemingly randomly on the script I leave on overnight
[16:42] <_ry> hm
[16:42] <_ry> ENOMEM is not the error code
[16:43] <_ry> Phazm: it's from a dns lookup failure
[16:43] kriskowal has joined the channel
[16:44] <_ry> Phazm: can you create an issue for me on github?
[16:44] <Phazm> surely
[16:45] tylerstalder has joined the channel
[16:46] charlesjolley has joined the channel
[16:47] <Phazm> #143 created
[16:48] whoahbot has joined the channel
[16:48] <rauchg> i get it sometimes too.
[16:49] <Phazm> glad it's not just me :)
[16:50] <_ry> Phazm: thanks
[16:50] stepheneb_ has joined the channel
[16:50] <micheil> damn.. it is way too cold for this time of year..
[16:51] <micheil> it's only 2.5ÂºC outside..
[16:52] <Phazm> micheil: I have 5 monitors, one server and my main box in my office -- I am always warm
[16:52] <Phazm> I get a tan from my monitors ;)
[16:52] <KungFuHamster> it snowed here last night
[16:52] <micheil> Phazm: I only have my macbook pro. :(
[16:55] isaacs has joined the channel
[16:57] <Phazm> is there a feed anywhere of new/updated node modules? I don't mean the modules page on github, as that is just a list of all available, but I want to see when new ones are added
[16:57] bill_ has joined the channel
[16:58] <micheil> Phazm: could be soon.
[16:58] <micheil> night folks.
[16:59] aconran has joined the channel
[17:05] weepy has joined the channel
[17:05] <weepy> hi I keep getting node to crash
[17:06] <weepy> It seems to only occur when using websockets and safari.
[17:06] <weepy> It just quits if I quit the page. Which leads me think that it's because safari is somehow not cleaning up the socket properly
[17:07] <weepy> crashes on node.js 176:9
[17:07] <weepy> with no error message
[17:08] <weepy> I've got the following to catch errors : 
[17:08] <weepy>   socket.addListener("error", function (err) {
[17:08] <weepy>     sys.puts( "error: " + (err || "").toString() )
[17:08] <weepy>   });
[17:10] mikeal has joined the channel
[17:11] <weepy> Ah - I've fixed that now
[17:11] <weepy> needed to add the listener on the websocket library too
[17:13] N` has joined the channel
[17:15] kriszyp_ has joined the channel
[17:19] stephenlb has joined the channel
[17:23] <weepy> ah no
[17:23] <weepy> still have the prob
[17:24] sveimac has joined the channel
[17:26] aryounce has joined the channel
[17:31] <_ry> weepy: what version?
[17:31] <weepy> 1.94
[17:32] <weepy> _ry: i've got a catch for SIGTERM and SIGPIPE as well
[17:32] creationix has joined the channel
[17:32] <_ry> hm...
[17:32] <_ry> weepy: upgrade to head - you'll get a better error message
[17:32] <weepy> kk
[17:38] creationix_ has joined the channel
[17:39] mjr_ has joined the channel
[17:40] dgathright has joined the channel
[17:41] bpot has joined the channel
[17:42] <weepy> upgraded - seems there was an exception thrown in my own code ... investigating to confirm
[17:43] towski has joined the channel
[17:44] devinus has joined the channel
[17:50] JimBastard has joined the channel
[17:50] <mape> So, I'm moving all my old stuff from apache to nginx so it can play more nicely with node, anyone happen to have any idea on how to best migrate it?
[17:51] <JimBastard> lol lol lol  http://github.com/cowboyd/therubyracer
[17:51] <JimBastard> lol
[17:51] <JimBastard> lol
[17:51] cloudhead has joined the channel
[17:51] <mjr_> Everybody loves JavaScript, it seems.
[17:52] <tmpvar> heh
[17:52] <tmpvar> we need a thin layer to wrap arbitrary c libs
[17:52] <_ry> http://github.com/rbranson/node-ffi
[17:53] <tmpvar> _ry, thanks :)
[17:54] <_ry> idle timeout behavior is hard
[17:54] <_ry> it's pretty clear to me that http server sockets, at least, should timeout 
[17:54] <_ry> by default
[17:55] <_ry> just not clear what exactly to do 
[17:55] <_ry> i guess send a 408 response ...
[17:55] <JimBastard> i still think this diaspora thing is soo funny
[17:56] Yuffster_ has joined the channel
[17:56] <_ry> (but what to do about responses in flight?)
[17:56] <JimBastard> i reached out to those dudes, a few of them are already following me on github. i wish someone gave me 40k to blow when i was 20
[17:56] <JimBastard> i only got 25k and i had to actually build real software
[17:56] <JimBastard> and it took 9 fucking months
[17:56] <mjr_> When things "time out", dropping connections seems like an OK option.
[17:57] <weepy> what diaspora
[17:57] <weepy> what *is*
[17:58] <JimBastard> trend of the month
[17:58] <JimBastard> lol
[17:58] <_ry> yeah.. it's hard for the other side to know that connection timed out though?
[17:58] <JimBastard> p2p facebook
[17:59] <JimBastard> great idea in principle, we'll see how its executed
[17:59] <_ry> or i guess they'll get a FIN?
[17:59] <mikeal> do I need to got pull TCP/IP Illustrated off the shelf?
[17:59] <mikeal> s/got/go
[18:00] <JimBastard> can someone please explain to me this blah/foo/yarg meme
[18:00] <mikeal> regex
[18:00] <_ry> it's just a bit difficult - like especially if you've got all these callbacks pending
[18:00] <JimBastard> fucking regex
[18:00] <tmpvar> haha
[18:01] <tmpvar> s/fucking/awesome
[18:01] <mikeal> haha
[18:01] <mikeal> i actually suck at regex, i know what i needed to know in order to use vi effectively 10 years ago
[18:01] <mikeal> that's about it
[18:02] <mikeal> all my string code is a series of .replace, .slice, .indexOf and .split calls
[18:05] <derRichard> yesterday i sent a message to nodejs@googlegroups.com but it is still not listed on http://groups.google.com/group/nodejs, can sombody confirm? the title was "Returning new objects within an addon does not work"
[18:05] <nefD> i didnt realize how useful knowing how to use regex decently would be until I learned it :P
[18:06] <weepy> hmm
[18:06] <weepy> watching diaspora
[18:06] <_ry> derRichard: I got the message
[18:06] <JimBastard> lol me too mikeal 
[18:07] <weepy> "so mum, all you need to do is , close down facebook, ./configure make install Diaspora. Then install it as a node on the hub, "
[18:07] <_ry> derRichard: which i will reply to now
[18:07] <weepy> "once you've done that , you can send that LOLCATZ pic"
[18:07] <JimBastard> thats why i started http://github.com/marak/MrRegex
[18:07] <tmpvar> JimBastard, we should hit up Diaspora for da mooniees
[18:07] <tmpvar> monies even.
[18:07] <derRichard> _ry: thanks a lot :)
[18:07] <JimBastard> yeah weepy , i dont have high confidence for those guys atm
[18:07] <JimBastard> yeah tmpvar , they are gonna need help
[18:08] <JimBastard> im assuming some fancy talking suit will get them first
[18:08] derbumi_ has joined the channel
[18:08] <JimBastard> mikeal ^^^ Mr Regex
[18:08] <mikeal> haha
[18:09] <mikeal> and DSL for generating regex, isn't regex already a DSL?
[18:09] <mikeal> you Ruby guys and your DSLs, it's adorable 
[18:09] <mde> ACTION coughs
[18:10] <JimBastard> i dont write ruby
[18:10] <JimBastard> at all
[18:10] <JimBastard> treetop doesnt count
[18:10] <mikeal> MrRegex is Ruby
[18:12] <JimBastard> treetop doesnt count
[18:12] <weepy> _ry : I think that was it - just a prob with my own code.
[18:12] <JimBastard> also mikeal i just came up with the grammar
[18:12] <weepy> The upgrade to head exposed the message at least so thatnks for that
[18:12] <JimBastard> charlie robbins did all the treetop work, which was really stolen from cloudhead's less parser
[18:13] <JimBastard> indexzero
[18:13] <JimBastard> ahh hes not here
[18:13] <weepy> --- BTW --- is it normally fine to just catch and ignore SIGPIPE? 
[18:13] <derRichard> depends on your program.
[18:15] maushu has joined the channel
[18:15] <_ry> weepy: normally
[18:15] <_ry> weepy: for sockets, you mean?
[18:16] <_ry> it just means you're writing to a socket that's been closed
[18:16] WALoeIII has joined the channel
[18:17] <weepy> ah right - yes
[18:17] derbumi has joined the channel
[18:17] mjijackson has joined the channel
[18:21] technoweenie has joined the channel
[18:21] <technoweenie> atmos: hey let me know when you plan on leaving.  i'm at the github office currently
[18:27] <JimBastard> its a nerd party
[18:31] paul_ has joined the channel
[18:33] franksalim has joined the channel
[18:34] kevwil has joined the channel
[18:35] <derRichard> _ry: thanks for your mail. do i need a HandleScope in every method? even if i don't use it?
[18:36] <_ry> derRichard: yes
[18:36] <derRichard> c++ black magic? ;)
[18:37] brianmario has joined the channel
[18:37] <Phazm> is there a default and/or configurable location node looks for modules? I saw ~/.node_libraries mentioned, but it didn't find my module when I just used require('/moduleDir/module')
[18:37] <_ry> derRichard: you'll hit difficult to track down errors if you don't
[18:37] <Phazm> er, scratch the first /
[18:37] <_ry> derRichard: i've lost weeks of my life to missing handle scopes. trust me - just put it there :)
[18:37] <_ry> derRichard: also - close your scope
[18:38] <_ry> V8 magic
[18:38] <derRichard> _ry: i trust you. 
[18:38] <_ry> not for mortals to understand
[18:38] <_ry> i certainly don't understand it
[18:38] <derRichard> working with v8 is very hard (at least for me) because there is no real doku :(
[18:38] <tmpvar> haha
[18:39] <_ry> derRichard: it's a very nice API - you just have to get used to it
[18:39] <_ry> the header file is enough - plus exampes inside node
[18:39] <_ry> just know that -> is overloaded
[18:39] <_ry> :)
[18:40] <derRichard> good to know
[18:40] <_ry> i think thats the hardest hurdle
[18:40] <Phazm> nevermind, PEBKAC
[18:44] admc has joined the channel
[18:44] <atmos> technoweenie: looking to leave aorund 3pm
[18:44] <atmos> i drove downtown so i can give you a call and pick you up on the way out
[18:44] <technoweenie> cool sounds good
[18:49] <CIA-74> node: 03Ryan Dahl 07master * rf7ff548 10/ configure : Quote variables in configure script - http://bit.ly/cWiFdS
[18:49] <CIA-74> node: 03Ryan Dahl 07master * rd2cff34 10/ (4 files in 4 dirs): 
[18:49] <CIA-74> node: Idle timeout changes
[18:49] <CIA-74> node: - setTimeout should active the timeout too. (test-net-set-timeout tests
[18:49] <CIA-74> node:  this.)
[18:49] <CIA-74> node: - 'timeout' event is not automatically followed by an 'error' event. That
[18:49] <CIA-74> node:  is the user is now responsible for destroying the stream if there is an
[18:49] <CIA-74> node:  idle timeout. - http://bit.ly/dbefcs
[18:49] <CIA-74> node: 03Ryan Dahl 07master * red0c109 10/ doc/api.markdown : Add note about 'error' event to docs - http://bit.ly/d0M4Qv
[18:49] <CIA-74> node: 03Ryan Dahl 07master * r7a2e6d6 10/ (3 files in 2 dirs): 
[18:49] <CIA-74> node: Default to 2 second timeout for http servers
[18:49] <CIA-74> node: Taking a performance hit on 'hello world' benchmark by enabling this by
[18:49] <CIA-74> node: default, but I think it's worth it. Hopefully we can improve performance by
[18:49] <CIA-74> node: resetting the timeout less often - ideally a 'hello world' benchmark would
[18:49] <CIA-74> node: only touch the one timer once - if it runs in less than 2 seconds. The rest
[18:49] <CIA-74> node: should be just link list manipulations. - http://bit.ly/cBazuX
[18:50] <tmpvar> wow, i hate java
[18:50] <mjijackson> tmpvar: what are you doing in java?
[18:51] <mjijackson> tmpvar: aren't java and javascript the same thing?
[18:51] <mjijackson> :)
[18:52] <mjijackson> i had a college professor that tried to tell me java and javascript were the same language. i probably shouldn't have challenged him in front of the whole class, but i did. funny thing is, i think most of the class believed him instead of me.
[18:52] <mjijackson> alas
[18:54] <JimBastard> whats a college
[18:54] <mjijackson> it's where you go and pay people a lot of money so they can tell you lies
[18:54] <JimBastard> sounds like a place to spend your parents money and get herpes while killing brain cells with vast amounts of alchohol 
[18:55] <mjijackson> that too
[18:58] captain_morgan has joined the channel
[19:06] <mape> Hmm I'm trying to do a upstream - proxy_pass in nginx but I keep getting bad gateway.. When doing links 127.0.0.1:8080 I get error reading from socket but accessing it through the browser works fine
[19:07] <derRichard> _ry: something is still wrong with my code. now v8 says "TypeError: Object returnBar has no method 'sayBar'". can you please look at it? http://gist.github.com/399008
[19:08] <mape> Anything obvious that needs changed?
[19:09] <JimBastard> what you mean accessing from socket?
[19:10] <JimBastard> mape
[19:10] robrighter has joined the channel
[19:10] <mape> JimBastard: http://gyazo.com/ff026603f40e8f9c6ab1565ef3ab5bdc.png
[19:11] <_ry> derRichard: line 81, missing handle scope
[19:12] saikat` has joined the channel
[19:12] <_ry> otherwise nothing obvious
[19:12] <_ry> seems like it shoudl work
[19:12] <JimBastard> mape are you trying to proxy_pass a non http request?
[19:13] <JimBastard> i have no idea where that error message came from
[19:13] <derRichard> _ry: adding HandleScope does not change anything. 
[19:13] <mape> JimBastard: Hmm no, oh, it was my fault.. Seems there was some wonky stuff in my script that didn't handle stuff proper
[19:13] <derRichard> within New() scope.Close() is not needed, right?
[19:13] <JimBastard> okay
[19:13] <JimBastard> glad to help
[19:13] <_ry> derRichard: doesn't hurt
[19:13] <JimBastard> lol
[19:13] <mape> Hehe thanks
[19:14] <_ry> but no, i don't think so
[19:14] <_ry> because args.This() isn't local to that function
[19:15] <mape> Hmm seems to work fine now :) http://chat.mape.me/
[19:15] <mape> Only issue now is that the application/json header doesn't seem to work
[19:15] <JimBastard> test
[19:15] <mape> Or it does now.. Hmm owll
[19:15] <JimBastard> should i ask how you are getting that info?
[19:16] <JimBastard> is there a bot in here or are you parsing the logs?
[19:16] <mape> Probly not
[19:16] <mape> Yeah
[19:16] <JimBastard> log parse?
[19:16] <mape> It is rather ugly now, just does db hits on mysql
[19:17] <cloudhead> why is it that asser.throws doesn't check if the thrown error matches the argument passed?
[19:17] <cloudhead> is this intentional?
[19:17] <cloudhead> assert.throws*
[19:17] <mape> And the bot logging isn't done in node so shame on me
[19:17] <DracoBlue> @mape looks good
[19:17] <mape> DracoBlue: Yup handy, especially if you have an iPad over
[19:17] <Phazm> mape: is userAgent: 'node-js' a required line?
[19:17] <JimBastard> DracoBlue: you think that looks good? lol
[19:18] <JimBastard> http://chat.nodejitsu.com/
[19:18] <mape> Phazm: Where?
[19:18] <derRichard> _ry: maybe my "binding" is wrong? http://gist.github.com/399018
[19:18] <Phazm> mape: http://gist.github.com/396970 line 10
[19:18] <CIA-74> node: 03Ryan Dahl 07master * rd012878 10/ lib/http.js : Deprecate sendHeader() and writeHeader(), ppl should use writeHead() - http://bit.ly/aZxyoq
[19:18] <CIA-74> node: 03Ryan Dahl 07master * r1c7670a 10/ doc/api.markdown : 
[19:18] <CIA-74> node: Remove reference to C++ EventEmitter in docs
[19:18] <CIA-74> node: I prefer ppl to use ObjectWrap - http://bit.ly/a8J0OD
[19:19] <mape> Phazm: Oh, not sure, I assume it is just a good practise thing, what happens if you remove it?
[19:19] <JimBastard> i should bother scottg to get the node.js irc room linked up to that
[19:19] <DracoBlue> JimBastard: they are kind of different applications. I like the idea of having a possibility to query an irc log without grep on command line ;).
[19:19] <JimBastard> i think last i heard he was working on irc.createServer
[19:19] <Phazm> mape: I'm just setting it up now -- haven't run it yet
[19:19] <mape> Ah k, 1sec
[19:20] <JimBastard> yeah i mean, it would be nice to incorporate the log parsing 
[19:20] <JimBastard> but there are log parsing tools and irc chat tools, you could put them together a bit
[19:20] <JimBastard> that would be kinda cool
[19:20] <JimBastard> an irc client that had access to the rooms logs 
[19:20] <JimBastard> (not just your own logs)
[19:20] <DracoBlue> yep ;)
[19:21] <JimBastard> i'd like to see someone port some of the current IRC log file parsers to node
[19:21] <JimBastard> so we can run analytics
[19:21] <JimBastard> to determine that im the most awesome person in the node js room
[19:21] <JimBastard> *to be determined
[19:21] <JimBastard> lol
[19:21] <mape> Phazm: Seems it is mandatory
[19:21] <DracoBlue> yeah, stats are necessary and achievements.
[19:21] <Phazm> mape: Thank you :)
[19:21] <DracoBlue> JimBastard managed to get nickalerted 100 times. Wooooh.
[19:21] <JimBastard> lol
[19:22] <JimBastard> im telling you, i bet my irc stats are epic
[19:22] <mape> JimBastard: Someone should write piespy in node -> canvas
[19:22] <mape> And do !register mail@domain.td to get fancy gravatar for plotting
[19:23] <DracoBlue> Logfile parsing viszualized: http://www.fudgie.org/ -- there was an even better one a while back, but I don't know the name anymore :(.
[19:23] <mape> http://www.jibble.org/piespy/
[19:24] <JimBastard> FUCK
[19:24] <JimBastard> i just elbowed my sammich off my desk and across the room
[19:25] <JimBastard> epic elbow
[19:25] <JimBastard> philly cheese steak everywhere
[19:25] <JimBastard> everyone laughed at me :-(
[19:26] <mape> o the humiliation
[19:27] <JimBastard> even paul dix laughed :-(
[19:27] <JimBastard> hows this name dropping working out for you
[19:28] qFox has joined the channel
[19:32] <mape> I thought you dropped food not names?
[19:32] <_ry> mape: very cool
[19:33] <_ry> glTail
[19:33] <_ry> would love to see somoen do that with node
[19:33] <mape> hummingbird but logs and other visuals
[19:34] <_ry> yeah
[19:35] <_ry> could totally do that with svg
[19:35] <_ry> raphael
[19:35] <mape> Would it handle the amount of objects in a decent way?
[19:35] <JimBastard> woah glTail looks bad ass
[19:35] hsuh has joined the channel
[19:35] <_ry> not sure
[19:35] <mape> Last time I tried raph it became slow rather fast
[19:36] <_ry> webkit svg is pretty hot
[19:36] <_ry> yeah - it doesn't have good animations
[19:36] <_ry> uses a setTimeout loop instead of svg animations
[19:36] <mape> Guess that is easier to maintain in realtions to vml?
[19:36] <mape> *relations
[19:37] mrjjwright has joined the channel
[19:38] <_ry> would be super cool demo to just show the same page that your visiting
[19:38] <_ry> with an arrow pointing to the circle that represents your request
[19:38] <_ry> :P~
[19:38] <derRichard> _ry: now it works. i did "scope.Close(v) instead of "return scope.Close(v)". shame on me^^
[19:38] <derRichard> thanks for your help
[19:44] <JimBastard> fuck
[19:44] <JimBastard> i gotta remember that for in loops shouldnt be used on arrays
[19:44] <JimBastard> at least on the browser
[19:47] <_ry> derRichard: np
[19:49] derbumi has joined the channel
[19:50] <CIA-74> node: 03Ryan Dahl 07master * r67eeedd 10/ (2 files in 2 dirs): Disable test-signal-unregister.js as functionality doesn't exist yet - http://bit.ly/bErhJz
[20:06] mertimor has joined the channel
[20:08] <broofa> Is there a way to get an interactive node.js shell?  ('could swear I remember reading something about this recently, but can't remember where)
[20:09] javajunky has joined the channel
[20:09] <pkrumins> what should I know when writing a nodejs c++ module?
[20:10] <pkrumins> is there anything, or just ready set go
[20:10] <mjijackson> broofa: try node-repl
[20:10] <broofa> ah, nevermind.  found node-repl! :-)
[20:10] <broofa> mjijackson:  *heh* thx.
[20:11] Phazm has joined the channel
[20:14] kriskowal_ has joined the channel
[20:18] robrighter_ has joined the channel
[20:23] mikeal has joined the channel
[20:23] Phazm has joined the channel
[20:25] olegp has joined the channel
[20:26] Phazm has joined the channel
[20:30] noonat has joined the channel
[20:30] kriskowal has joined the channel
[20:31] <atmos> if anyone else needs a ride down to palo alto from SF i have room for one in my car
[20:31] <atmos> leaving soma area around 3ish
[20:31] mitkok has joined the channel
[20:32] <neytema> http://blog.chromium.org/2010/05/sneak-peek-at-native-client-sdk.html
[20:33] <creationix> atmos: about what time will you get here?
[20:33] <JimBastard> yeah i need a ride atmos 
[20:33] <JimBastard> can you swing by wall street to pick me up :-(
[20:34] <halorgium> atmos: i could use a ride :P
[20:35] javajunky has joined the channel
[20:39] rydgel has joined the channel
[20:40] <atmos> JimBastard: nope !
[20:40] <JimBastard> lolz
[20:40] <atmos> halorgium: you trying to go ?
[20:40] <JimBastard> well, ill be there in spirit
[20:40] <atmos> i love how halorgium is like 10 feet from me and asked on irc
[20:40] <atmos> JimBastard: we'll get a cardboard cutout for ya
[20:40] <halorgium> atmos: that is the whole point of the tubes
[20:41] <JimBastard> i like to hit up towski on the "bat phone" aka the irc room
[20:41] <JimBastard> i do that whenever hes not in campfire
[20:41] <atmos> JimBastard: you work with those guys now ?
[20:41] <JimBastard> they are doing consulting work for the place im a full-time
[20:41] <atmos> gotcha
[20:42] <JimBastard> i got brought in to dominate all javascript related materials
[20:42] <JimBastard> building an evented front-end etc
[20:42] <JimBastard> im looking really forward to this MAML thing
[20:42] <JimBastard> Mustache Application Language Markup
[20:42] <atmos> MAML?
[20:42] <JimBastard> working on it with cloudhead as well
[20:42] <atmos> what the hell does that mean ?
[20:43] <JimBastard> ^^
[20:43] <JimBastard> you know ZAML or MXML?
[20:43] <mikeal> not this again
[20:43] <atmos> no
[20:43] <JimBastard> ohh
[20:43] <JimBastard> ACTION snickers are the none UI programmer
[20:43] <JimBastard> at the
[20:43] <JimBastard> :p
[20:43] <atmos> is it like a big resource file that autogenerates shit ?
[20:43] <JimBastard> no
[20:43] <JimBastard> its a markup language
[20:43] <mikeal> it's a template system
[20:43] <atmos> thank you
[20:43] <JimBastard> its kinda hard to explain, http://en.wikipedia.org/wiki/MXML
[20:43] <JimBastard> its more then that
[20:44] <mikeal> oh mxml, nm
[20:44] <JimBastard> since it has event binding, behaviors, and databinding
[20:44] <mikeal> people need to stop creating new XML dialects for UI
[20:44] <atmos> and it doesn't do any code generation ?
[20:44] <mikeal> seriously
[20:44] <JimBastard> atmos: im using code generation to build the library
[20:44] <tmpvar> agreed
[20:44] <JimBastard> but aside from that its not
[20:45] <JimBastard> also, its not a new dialect
[20:45] <JimBastard> its HTML
[20:45] <JimBastard> with HTML5 data-* attributes
[20:45] <JimBastard> and some fancy JS
[20:45] <atmos> gotcha, so it does what i thought it does
[20:45] <JimBastard> so i mean, i guess we will impose some custom dialects, but only the unique data-* names we make uop
[20:45] <JimBastard> sneak peak : http://github.com/marak/MAML
[20:46] <JimBastard> you can see the autogenerated docs
[20:46] <atmos> the whole disconnected irc nicks w/ github nicks freams me out at times !
[20:46] <JimBastard> lol
[20:46] <JimBastard> i love it
[20:47] <JimBastard> i'm actually also tmpvar
[20:47] phiggins has joined the channel
[20:47] rydgel has joined the channel
[20:47] <tmpvar> i r a robot
[20:48] <phiggins> lies
[20:50] jsilver has joined the channel
[20:51] creationix has joined the channel
[20:53] olegp has joined the channel
[20:54] kevwil has joined the channel
[20:59] airportyh has joined the channel
[21:05] captainbenis has joined the channel
[21:08] <mape> Hm when using canvas, seems the context isn't cleared, keeps redrawing the old lines :(
[21:09] ncb000gt has joined the channel
[21:10] weepy has joined the channel
[21:11] <javajunky> mape: I did a chunk of work with canvas a little while ago, its up on github, maybe something useful on there for you ?
[21:11] <javajunky> mape: http://github.com/ciaranj/boardie
[21:12] <mape> javajunky: http://mape.me/ircanvas/
[21:12] <isaacs> hey, wasn't there like a isTTY thing now in node?
[21:15] <mape> javajunky: Awsome :) beginPath seemd to do the trick
[21:15] <mjr_> mape: that ircanvas thing make WebKit nightly really sad.
[21:16] <mape> Works ok in chrome?
[21:16] <mape> What about it in nighly?
[21:16] <mape> The fact that they move around? :P
[21:16] <mjr_> yeah, chrome seems happy
[21:17] <JimBastard> woah im getting seizures watching that lol
[21:17] <JimBastard> but i do love seeing bender
[21:17] <JimBastard> :-)
[21:17] <mscdex> yeah, i was about to say that haha
[21:17] <mape> First time poking at canvas so yeah..
[21:17] <mjr_> happily inducing seizures in Chrome for me, but very sad in WebKit Nightly.
[21:18] <mjr_> it starts to get behind, stops erasing the old lines, then goes to 100% CPU.
[21:18] <mape> isn't that cached?
[21:19] mattly has joined the channel
[21:22] <mikeal> w00t!
[21:22] <mikeal> sorry, i'm happy
[21:22] <tmpvar> why?
[21:22] <mikeal> got CouchDB replicating to Redis :)
[21:22] <tmpvar> nice
[21:23] <mikeal> pull only, working on push next
[21:23] <mikeal> then continuous and intervals
[21:23] <rauchg> tmpvar: any progress with -avro ?
[21:23] <tmpvar> rauchg, no time :(
[21:23] <rauchg> :(
[21:23] <tmpvar> feel free to fork!
[21:23] <tmpvar> it compiles, which was a  _huge_ step
[21:23] <rauchg> yeah i saw
[21:24] <CIA-74> node: 03Ben Noordhuis 07master * rc6c77d5 10/ (4 files in 4 dirs): Support for fstat(2) through fs.fstat() and fs.fstatSync(). Added test cases, updated documentation. - http://bit.ly/aXh635
[21:24] <pkrumins> _ry: I am adding a patch to return base64 encoded string from a buffer as `buffer.toBase64`, which way would you prefer I do it - add BASE64 encoding to node.cc:Encoding() method or just make it buffer specific?
[21:24] maushu has joined the channel
[21:24] <mikeal> have anyone written and HTTP server frontend for Redis?
[21:24] <tmpvar> rauchg, do you have any c/c++ experience?
[21:24] <_ry> pkrumins: hm
[21:24] <rauchg> tmpvar: C experience, rusty though
[21:25] <_ry> pkrumins: i guess add it to Encoding
[21:25] <pkrumins> _ry: alright!
[21:25] mattly_ has joined the channel
[21:25] <mjr_> I think base64 is part of the "fundamental protocol of the Internet" class of things that are really useful.
[21:25] <mape> Hmm there is no native way of outputing text in canvas?
[21:25] <tmpvar> rauchg, same :/
[21:25] <JimBastard> i thought canvas had something for that..
[21:25] <mikeal> agreed
[21:25] <mjr_> mape: more recent canvas specs support rendering text
[21:26] <mikeal> mjr_: agreed
[21:26] <mape> mjr_: Any browsers that support it?
[21:26] <mikeal> base64 should shit
[21:26] <_ry> mjr_: i suppose
[21:26] <javajunky> fille&StrokeText ?
[21:26] <mikeal> ship
[21:26] <mjr_> mape: the webkit browsers support canvas text rendering
[21:26] <mikeal> i can't type today
[21:26] <maushu> mape, all modern browsers should support less opera.
[21:26] <tmpvar> ff 3.6 / chrome / safari all render text
[21:26] <maushu> But no one uses opera... so...
[21:27] <tmpvar> heh
[21:27] <mape> javajunky: Ah yeah fillText :)
[21:27] <mjr_> canvas text rendering is actually pretty sophisticated.  In some ways it is better than what you can do in HTML.
[21:27] <mikeal> lots of people us it, it's just not called Opera, it's branded "Browser" or some crap on a free phone they hand you in the mall :)
[21:27] <maushu> mjr_, of course. Not better than flash though.
[21:28] <mjr_> all true.  Flash wins, except when it loses.
[21:28] technoweenie has joined the channel
[21:28] <mikeal> Flash wins at making my laptop hot
[21:28] <maushu> If they added webcam support then everything could be ported.
[21:29] <mikeal> audio and video import specs are in the works
[21:29] <mikeal> sorry, input
[21:29] <mjr_> Yeah, I'd be really happy if I could do audio in from a browser.
[21:29] <maushu> I don't undestand why people think flash uses more cpu than html5.
[21:29] <mikeal> the browser has a real security model
[21:29] <mikeal> so it's a little harder to work out the details
[21:29] <mjr_> maushu: because people have Macs.
[21:29] <mikeal> maushu: because it *does*
[21:30] <mikeal> it's also responsible for 30% of Firefox crashes
[21:30] <mjr_> If you use Windows though, Flash is really fast and responsive.  It's pretty impressive.
[21:30] <maushu> Don't forget that it's the most used plugin.
[21:30] <JimBastard> lol
[21:30] <JimBastard> olol
[21:30] <JimBastard> lol
[21:30] <mikeal> who uses Windows?
[21:30] <mjr_> old people
[21:30] <maushu> I do.
[21:30] <JimBastard> building complex flash apps will make you want to kill yourself
[21:30] <javajunky> firebug causes 80% of firefox crashes I heard  ;)
[21:30] <mikeal> old people don't watch youtube
[21:30] <JimBastard> last time i checked including vanilla flex will add 300k to your swf
[21:31] <JimBastard> probaly more tnow
[21:31] <mikeal> javajunky: pfft, not enough people even run Firebug to make that happen
[21:31] <maushu> Perhaps that is why I don't notice anything since I mostly use flash on windows.
[21:31] <JimBastard> ACTION thinks back to building virtualized flash components
[21:31] <mikeal> there are 100K+ crash reports per day
[21:31] <JimBastard> uggggggggggggh
[21:31] <_ry> c++ is so annoying
[21:31] <JimBastard> did you try returning void ry?
[21:31] darkf has joined the channel
[21:31] <mikeal> gordon FTW!
[21:31] <JimBastard> ;-)
[21:31] <mikeal> http://github.com/tobeytailor/gordon
[21:31] <maushu> _ry, you should port v8 to javascript.
[21:31] <mikeal> hahaha
[21:32] <JimBastard> yeah tobey is awesome
[21:32] <mape> javajunky: Any idea how to get the width of the outputed text before outputing it (want to center it) without using monospace?
[21:33] <javajunky> off the top of my head no, but I'd *assume* there's a textmetrics notion you could use ?
[21:33] <maushu> First we would need to code a javascript -> binary compiler in javascript.
[21:33] <tmpvar> mape, bespin does a trick.. where they rotate a M and then check the width
[21:33] <mape> javajunky: measureText :)
[21:33] <tmpvar> javajunky, there is width only
[21:33] <javajunky> indeed context . http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-measuretext(text)
[21:33] <mjr_> mikeal: I'm heading over to your office now.  Be there 3-ish, and then we can go pick up _ry.
[21:33] <tmpvar> its width only on most browsers
[21:33] <mikeal> cool
[21:34] <tmpvar> oh wait
[21:34] <javajunky> http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#textmetrics
[21:34] <tmpvar> thats what you need :P
[21:35] <maushu> I was thinking in using canvas for my tool, but decided not to.
[21:36] <maushu> For multiple reasons, it locks out lots of utilities already implemented in html like scrollbars, it's slower than html rendering for multiple moving items, and I'm trying to support browsers like ie and opera.
[21:37] <maushu> Besides, I want to use some code editor and that only works outside canvas... I could perhaps use canvas for some background drawing.
[21:38] <maushu> www.tarpipe.com does that.
[21:40] <mape> Hmm the text rendering in canvas seems poor in firefox
[21:42] dysinger has joined the channel
[21:42] mrjjwright has joined the channel
[21:44] mjijackson has joined the channel
[21:46] bill__ has joined the channel
[21:49] marktlang has joined the channel
[21:50] bill__ has joined the channel
[21:51] <atmos> technoweenie: ping
[21:51] <technoweenie> atmos: yo
[21:51] mattly_ has joined the channel
[21:52] <atmos> technoweenie: can you meet me outside of the github offices in like 15 minutes ?
[21:52] <technoweenie> yea
[21:52] <atmos> cool, see ya about 5 after then
[21:52] <technoweenie> k
[21:52] <atmos> err, 5 after 3 :)
[21:52] phiggins has joined the channel
[21:53] ssteinerX has joined the channel
[21:56] mattly has joined the channel
[21:57] mattly has joined the channel
[21:59] <_ry> port port port all day long
[21:59] <_ry> port port port while i sing this song
[22:01] <devinus> uhh, how can i just start the console at a specific point in my script ?
[22:01] <devinus> i remember somewhere deep in my brain, but i've forgotten
[22:01] <creationix> _ry: what are you porting?
[22:01] <devinus> repl ?
[22:01] <_ry> creationix: solaris 10
[22:02] <creationix> fun
[22:02] <_ry> yeah - it's interesting not living under glibc
[22:02] <creationix> I started at Ext today, learning all their stuff
[22:02] <_ry> kind of refreshing
[22:02] <creationix> _ry: I'll bet
[22:03] <_ry> like this is how you get a backtrace: http://docs.sun.com/app/docs/doc/817-3939/6mjgg7hd9?l=en&a=view
[22:03] charlesjolley has joined the channel
[22:03] <creationix> _ry: so you're writing a patch for V8 or just node?
[22:04] <_ry> V8
[22:04] <aconran> _ry, whats the min glibc you require?
[22:04] <_ry> shrug
[22:04] <captainbenis> _ry
[22:04] <captainbenis> do you have safari?
[22:04] <_ry> ye
[22:04] <_ry> s
[22:05] tobeytailor has joined the channel
[22:05] tylerstalder has joined the channel
[22:07] mattly_ has joined the channel
[22:08] drudge has left the channel
[22:08] rolfb has joined the channel
[22:19] dacc has joined the channel
[22:21] <mape> javajunky: When you played with canvas did you do anything with images?
[22:21] demolithion has joined the channel
[22:21] mattly has joined the channel
[22:22] <halorgium> aconran: atmos, technoweenie, andy and i are heading down now
[22:22] <halorgium> 525 uni ave eh?
[22:24] mjr_ has joined the channel
[22:25] <_ry> yes! compiles :)
[22:26] <_ry> oh no. it didn't comile :/
[22:27] <javajunky> mape: not yet, was planning to
[22:27] <javajunky> a colleague has done bits and bobs though
[22:28] <mape> Got it working pretty well :) http://mape.me/ircanvas/
[22:28] <mape> Seems the caching of the image object made a huge deal
[22:28] <mape> Although it is still so so in firefox
[22:34] <devinus> can anybody think of a more efficient way to do this? http://pastie.org/957875
[22:35] tlrobinson_ has joined the channel
[22:37] <aconran> halorgium, ya, 525 univ
[22:37] <aconran> halorgium, you're going to be earrrrly
[22:38] <creationix> halorgium: it's behind the large tower
[22:38] tilgovi has joined the channel
[22:38] <halorgium> aconran: haha, we're gonna grab coffee someplace
[22:38] <aconran> yes, the large tower... the tallest building in Palo Alto
[22:39] <aconran> in the back right of the court yard if you are facing it from univ ave
[22:39] <aconran> Suite 23, Ext logo by the door
[22:43] <MattJ> devinus: I don't think so. Since you have to traverse each node anyway...
[22:43] peutetre has joined the channel
[22:43] <MattJ> devinus: What you need is a smarter data structure if you want cheap counting
[22:43] <MattJ> Smart data, dumb code, etc. :)
[22:43] <devinus> MattJ: all i was looking for anyway was microbenchmarks of obscure v8 features anyway :P
[22:43] <devinus> MattJ: i'm implementing a CommonJS LinkedList module
[22:44] <MattJ> I've never used a linked list in an interpreted language
[22:44] <creationix> as an example, or for actual use
[22:45] <creationix> linked list is too low level for javascript, objects already have dynamic allocation of properties
[22:45] hassox has joined the channel
[22:46] <devinus> creationix: oh, it's for fun
[22:49] mau2 has joined the channel
[22:51] Phazm has joined the channel
[22:52] <Phazm> mape: I'm having an issue running your snippet for jQuery -- have a sec?
[22:52] <mape> Sure
[22:52] <Phazm> well, $ is undefined when I sys.puts($)
[22:53] <Phazm> after the $ = window.jQuery;
[22:55] <Phazm> sys.puts(data) ouputs the jquery file, so that's fine
[22:56] <Phazm> not sure what else I can do
[22:58] stepheneb has joined the channel
[22:59] <Phazm> mape: any idea what's going wrong, or anything I can do to get more info?
[23:00] <mape> Phazm: .toString()
[23:00] <mape> on the data in eval
[23:00] <mape> If you don't have that
[23:00] <creationix> window isn't a global
[23:00] <Phazm> eval(data.toString()); is there
[23:01] <Phazm> creationix: here's the code: http://github.com/gsf/node-solr
[23:01] <Phazm> oops
[23:01] <Phazm> wrogn one
[23:01] <Phazm> creationix: http://gist.github.com/396970
[23:01] <tmpvar> woah
[23:02] <mape> Phazm: if you sys.p(window)?
[23:03] <Phazm> object Object
[23:03] <mape> So it is there..
[23:03] <mape> how about window.jQuery ?
[23:03] admc has joined the channel
[23:03] <creationix> Phazm: use sys.p, not sys.puts
[23:04] <Phazm> creationix: what's the difference?
[23:04] <mape> inspects it
[23:04] <creationix> puts coerces the value to a string
[23:04] <Phazm> interesting :)
[23:04] <creationix> p calls inspect before printing it
[23:04] <chilts> ACTION will have to try that
[23:04] bradleymeck has left the channel
[23:04] dysinger` has joined the channel
[23:05] <Phazm> http://pastebin.com/tEu6YE3A
[23:05] <mape> So you are sure the jQuery src is evaled?
[23:05] <tmpvar> dudes
[23:05] <tmpvar> wtf
[23:05] <mape> Doesn't seem like it
[23:06] <Phazm> tmpvar: doing something wrong?
[23:06] JimBastard has joined the channel
[23:06] <Phazm> mape: it's not hitting the catch for that try/catch, so I assume so
[23:06] <tmpvar> you see this? http://github.com/tmpvar/jsdom/blob/master/example/jquery/run.js
[23:06] <tmpvar> i guess thats where the example is from heh
[23:06] <mape> tmpvar: Doesn't work :)
[23:06] <tmpvar> doesnt work!?
[23:07] dysinger` has joined the channel
[23:07] <mape> tmpvar: if you typeof the data that is returned from readFile it is an object
[23:07] <mape> so you can't eval it, need to .toString() it
[23:08] <tmpvar> ah, this was working lol
[23:08] mrjjwright has joined the channel
[23:08] <tmpvar> damn you node!
[23:08] <JimBastard> yo
[23:08] <JimBastard> WTF
[23:08] <JimBastard> ive got silenced on hackernews
[23:08] <JimBastard> this is some fucked up shit
[23:08] <JimBastard> im really upset
[23:08] <mape> tmpvar: Btw any reason you used the now old fork of htmlparser?
[23:09] <mape> Seems like it doesn't work on any real life website, just does a more or less silent exit
[23:09] fizx has joined the channel
[23:09] <tmpvar> mape, yeah dav made some changes
[23:09] <mape> Seems like the entire api changed? 
[23:09] <tmpvar> i need to look up the  conversation.. he talked to the maintainer and there was some conflict
[23:10] fizx has joined the channel
[23:11] <tmpvar> im sorry guys, this jQuery example WAS working.
[23:11] <Phazm> I suppose I'll go back to regexing the response until it's resolved :'(
[23:12] <mape> I got it working but since the htmlparser is so fragile there is no real use of it
[23:12] <mape> tmpvar: But yeah, this is what I did to make it work http://gist.github.com/396970
[23:12] <mape> That fetches the headlines from the node api docs
[23:12] captainbenis has joined the channel
[23:14] captainbenis has left the channel
[23:15] <mape> JimBastard: so what did you do to get silenced?
[23:15] <JimBastard> ???
[23:15] <JimBastard> you tell me
[23:16] <JimBastard> http://news.ycombinator.com/user?id=JimBastard
[23:16] <JimBastard> i didnt do shit
[23:16] <JimBastard> the last thing i did was call dustin curtis a retard
[23:17] <mape> Might have something to do with that
[23:18] <JimBastard> ?!?!
[23:18] <JimBastard> i swear to god if HN banned me for this shit ill never forgive them
[23:19] <rauchg> JimBastard: you deserve to be banned 
[23:19] <JimBastard> for what?!?!
[23:19] <JimBastard> look at my history
[23:19] <rauchg> calling someone a retard for no reason ?
[23:19] <rauchg> :P
[23:19] <mape> rauchg: Welcome to the internets
[23:19] <JimBastard> and to be fair
[23:19] <JimBastard> i said
[23:20] <JimBastard> Am I the only one who thinks Dustin Curtis is kinda a retard with good design skills?
[23:20] <rauchg> mape: thanks, i like it :)
[23:20] <tmpvar> ok
[23:20] <tmpvar> i updated the example
[23:21] <rektide> who?
[23:21] <JimBastard> does anyone know anybody from HN?
[23:22] <tmpvar> mape, ah
[23:22] <mape> tmpvar: should the readFilereturn be an object?
[23:22] <tmpvar> umm
[23:22] <mape> Or I guess that is for when you read binary? Otherwise it doesn't make much sence
[23:23] <tmpvar> hrm
[23:24] <tmpvar> agreed, this wasn't an issue x commits ago
[23:24] <tmpvar> not sure where i was before
[23:24] <tmpvar> maybe a week behind?
[23:24] stepheneb has joined the channel
[23:25] <tmpvar> mape, is htmlparser really that flimsy?
[23:25] <JimBastard> i wonder how well HN is protected from bulk account creation and thread posting from a large group of distributed ip addresses 
[23:25] <NickP> Hi, I've tried asking this in #nginx but no response... I'm using nginx as a reverse proxy to a node app. About 1 request in 10 it only gets about 50% of the content, but if I request it from node directly it works every time. Anyone know what the problem might be? I've turned proxy_buffering off
[23:25] <JimBastard> thats strange NickP 
[23:26] <JimBastard> are you serving any static files from the disk?
[23:26] <tmpvar> jim, im going to stop by and make you finish some stuff for me :)
[23:26] <JimBastard> tmpvar: im going to make you post my rant on HN
[23:26] <tmpvar> i kid, but in reality, I will be stopping by in a few
[23:26] <JimBastard> im not
[23:26] <tmpvar> thats fine
[23:26] <broofa> ACTION starts a jimbastard .vs. HN betting pool.  (and puts his money on HN, btw. ;) )
[23:26] <NickP> yea there are static files on the same page JimBastard
[23:26] <JimBastard> lol
[23:26] <tmpvar> peace!
[23:26] <NickP> but nginx is serving those directly
[23:26] <JimBastard> NickP: how are you serving the static files from node?
[23:27] <NickP> I'm serving them from node when requesting from node directly... and it works every time when I do that
[23:27] <NickP> it's only when going through nginx it fails 1 in 10 times or so
[23:27] <JimBastard> broofa : its trivial to disrupt a non top-tier website . its just a matter of the level of disruption and duration 
[23:27] <NickP> it serves 50-90% of the content then stops
[23:28] <JimBastard> really though i dont have time to fuck with HN
[23:28] <JimBastard> but i am upset
[23:28] <NickP> and it's only 6kb
[23:28] <JimBastard> i had two really relevant / informative posts today that no one will ever see
[23:28] <JimBastard> well, comments
[23:28] <JimBastard> but still
[23:29] <JimBastard> i'd like to know if i got banned or this is an issue with the site
[23:29] <JimBastard> and if i got banned, thats some really weaksauce
[23:34] ncb000gt has left the channel
[23:35] <inimino> JimBastard: you also called the diaspora guys "pretty clueless" ...twice
[23:36] <JimBastard> lol that wasnt showing up
[23:36] <JimBastard> how you see that
[23:36] <JimBastard> is it in my history?
[23:36] <inimino> profile options
[23:36] <JimBastard> i met the diapsora guys
[23:36] <inimino> show dead
[23:36] <JimBastard> they are retards
[23:37] <pkrumins> _ry: added .toBase64() to Buffer.
[23:37] admc has joined the channel
[23:37] <pkrumins> _ry: cleaning up the patch and sending it to you!
[23:37] <JimBastard> nice they are deleting my account
[23:37] <JimBastard> my submissions just all disappeared
[23:39] <pkrumins> _ry: currently i used some public domain code for base64_encode, but I wonder if you'd like to add http://code.google.com/p/stringencoders/ to dependencies?
[23:39] <pkrumins> _ry: it says "A collection of high performance c-string transformations, frequently 2x faster than standard implementations (if they exist at all).
[23:41] <JimBastard> ugggggggggggggh
[23:41] nym has joined the channel
[23:42] rictic has joined the channel
[23:42] <nym> hello
[23:42] <mape> hey
[23:43] <nym> does guille hang out here?
[23:43] <nym> (Guillermo Rauch)
[23:43] <nym> of http://github.com/LearnBoost/Socket.IO-node
[23:44] <mape> rauchg: <-
[23:44] <pkrumins> socket.io is nifty 
[23:44] <rauchg> <-
[23:44] <pkrumins> \o/
[23:44] <rauchg> i just upgraded it today to .94
[23:44] <pkrumins> .94!
[23:44] <rauchg> with micheil's upgrade event changes
[23:44] <rauchg> for node 0.1.94 that is 
[23:44] <nym> rauchg is guille?
[23:44] <nym> oh yeah
[23:45] <nym> hi!
[23:45] Atmoz has joined the channel
[23:45] <rauchg> mape: nice twitter handle 
[23:45] <mape> in disguise
[23:45] <rauchg> ohh and nice domain
[23:45] <rauchg> haha
[23:45] <mape> rauchg: Are you making fun of my nick? :P
[23:45] charlesjolley has joined the channel
[23:45] <nym> rauchg: i've been using your socket.io 
[23:45] <nym> rauchg: very nice
[23:45] <rauchg> thanks nym 
[23:45] <rauchg> hopefully one day all we'll need is WebSocket
[23:45] <rauchg> :P
[23:45] <rauchg> i was hoping iPad would ship webkit with websocket
[23:46] <rauchg> i was wrong
[23:46] <mape> Next version
[23:46] <mape> Unless jobs hates it
[23:46] <aconran> mape, where'd you hear that?
[23:46] <nym> i have a very generic and poorly diagnosed error you might be able to help me with
[23:46] <mape> aconran: Somewhere..
[23:46] <aconran> beyond a rumor?
[23:46] <nym> i built a simple app that i was running locally, but when i deployed it i get "WebSocket connection invalid" errors
[23:46] <mape> As I recall yeah
[23:47] <rauchg> nym: do you have more debugging info ?
[23:47] <nym> the only change i made was from localhost -> 173.203.79.64
[23:47] <atmos> aconran: what's the address for the meetup ?
[23:47] <nym> rauchg: no, i haven't dug into it yet
[23:47] <mape> Ah yeah, the node hackaday is today?
[23:48] <nym> rauchg: i was hoping you would say something like "you're using an ip? that's not how you do it!"
[23:48] <rauchg> nym: cause many people pick any node version and any socket.io version :P
[23:48] <mape> crossdomain restrictions? Or is that a non issue on websockets?
[23:48] <rauchg> and then it won't work, with so many API changes 
[23:48] <nym> ahhhhh
[23:48] <rauchg> mape: should work, if you're doing cross domain only some transports will work
[23:48] <nym> so i might have the wrong version of node
[23:48] <mape> k
[23:48] <rauchg> but i'm working on cross-domain-fu on a local branch 
[23:49] <rauchg> pain in the ass for IE
[23:49] <mape> IE..
[23:49] <rauchg> but doable
[23:49] <rauchg> iframes / long polling JSONP for getting 
[23:49] <nym> rauchg: i'm using 0.1.94-20-gc90e44e
[23:49] <rauchg> (htmlfile should work)
[23:50] <rauchg> and not sure for sending, probably iframe l0l
[23:50] <rauchg> $ node --version
[23:50] <rauchg> 0.1.94
[23:50] <JimBastard> does anyone want to post my rant on HN? http://gist.github.com/399290
[23:50] <atmos> lol
[23:50] <atmos> that's so backwards
[23:51] <JimBastard> lol
[23:51] <rauchg> $ sudo node server.js 
[23:51] <rauchg> 12 May 20:50:27 - socket.io ready - accepting connections
[23:51] <rauchg> 12 May 20:50:53 - Initializing client with transport "websocket"
[23:51] <rauchg> 12 May 20:50:53 - Client 512893108651042 connected
[23:51] <JimBastard> i just dont understand why i got banhammer
[23:51] devinus has joined the channel
[23:51] <JimBastard> thats really not cool, i didnt do shit
[23:51] <rauchg> it's simple 
[23:51] <rauchg> http://en.wikipedia.org/wiki/Troll_(Internet)
[23:51] <JimBastard> i dont troll on HN
[23:51] <rauchg> http://en.wikipedia.org/wiki/Troll_(Internet)#JimBastard
[23:51] <JimBastard> i only post relevant shit
[23:51] <pkrumins> rauchg: do you know anything about streaming binary data over websockets?
[23:51] <rauchg> pkrumins: it's contemplated in the spec 
[23:51] <rauchg> right now it's utf8 
[23:52] <nym> rauchg: should i pull my node back to 0.1.9.4
[23:52] <pkrumins> can the data include arbitrary \0's?
[23:52] <franksalim> pkrumins, yes
[23:52] <rauchg> it will make sense when the streaming APIs like webcam are in place 
[23:52] <pkrumins> oh, interesting!
[23:52] <rauchg> nym: i wonder what changed 
[23:52] <franksalim> just not 0xFFs
[23:53] <nym> rauchg: i'll try doing that and let you know if it fixes things
[23:53] <nym> rauchg: it could be my code doing something funky
[23:53] <franksalim> but i expect browsers will replace invalid multibyte characters with the unicode replacement char. 0x00s should be fine, though
[23:53] <rauchg> this is hot: http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#stream-api
[23:53] <nym> rauchg: btw, i tried to run on heroku but got this error: http://beez.heroku.com/
[23:53] <rauchg> i hate heroku
[23:53] <rauchg> i emailed them to get access
[23:53] tmpvar has joined the channel
[23:53] <atmos> hahah
[23:54] <rauchg> they never got back
[23:54] <atmos> did you ask nicely or point them to your apps ?
[23:54] <rauchg> i only ask nicely 
[23:54] <rauchg> and i pointed to github i think
[23:54] <atmos> i pointed them to some github repos saying i wanted to ship stuff, it still took more than a week
[23:54] <nym> JimBastard: "Am I the only one who thinks Dustin Curtis is kinda a retard with good design skills? "
[23:54] <nym> JimBastard: seriously?
[23:54] <JimBastard> what?
[23:54] <JimBastard> can i not express my opinion?
[23:54] <rauchg> JimBastard: it's not even an argument, just a personal attack
[23:55] <rauchg> if you had said
[23:55] <atmos> JimBastard: it's kinda tasteless :\
[23:55] <rauchg> He's egocentric [1]
[23:55] <nym> you think he's literally a retard, or you're just insulting him?
[23:55] <rauchg> [1]: AA redesign post 
[23:55] <JimBastard> hes a good designer
[23:55] <JimBastard> i just hate people who think his word is god
[23:55] <rauchg> i think you deserved a ban :P
[23:55] Phazm has joined the channel
[23:55] <nym> JimBastard: that's totally a personal attack
[23:55] <nym> JimBastard: you should have said that then
[23:55] <rauchg> you should have created a new throwaway account 
[23:56] <JimBastard> do you think thats why they banned me?
[23:56] <rauchg> that's what trolls do
[23:56] <nym> JimBastard: possibly
[23:56] <JimBastard> thats still really really weak
[23:56] <JimBastard> espically for something like HN
[23:56] <nym> well HN is known for it's incredible S:N
[23:56] <JimBastard> ?
[23:56] <nym> you can't even be funny on there at all 
[23:57] <mape> http://github.com/timf/hubsecurity/blob/master/Manifesto hehe
[23:57] <nym> HN takes the signal to noise very seriously
[23:57] <rauchg> i'm sure pg has a `prune` button next to `upvote`
[23:57] <rauchg> and he sometimes misclicks
[23:58] <JimBastard> i take pride in getting banned from online services. this is an insult
[23:58] <nym> "When disagreeing, please reply to the argument instead of calling names. E.g. "That is an idiotic thing to say; 1 + 1 is 2, not 3" can be shortened to "1 + 1 is 2, not 3."  "
[23:58] Aria has joined the channel
