[00:05] <sechrist> JimBastard: did you manage to get any sort of decent option for extracting links from a string?
[00:06] <maushu> Something weird happened to setEncoding in the lastest version.
[00:10] <mscdex> gosub go!
[00:10] mikeal has joined the channel
[00:10] KungFuHamster has joined the channel
[00:10] tk has joined the channel
[00:10] NickP has joined the channel
[00:10] deanlandolt has joined the channel
[00:12] <ryah> so apparently v8 broke all os builds in 2.2.12
[00:12] <ryah> except mac, linux, and win
[00:12] <ryah> ACTION shakes his fist
[00:12] <isaacs> ryah: there are other operating systems?
[00:12] <ryah> solaris, openbsd, freebsd
[00:13] <isaacs> oh, right, the ones no one actually uses.  i forgot about those.
[00:13] <ryah> i use solaris
[00:13] <isaacs> really?  what for?
[00:13] beutdeuce has joined the channel
[00:14] <ryah> joyent only runs solaris
[00:14] <isaacs> crazy
[00:14] <beutdeuce> Lets say i want to load the content of a webpage (which is json), how would i do that?
[00:14] <isaacs> i think you meant to say "only joyent runs solaris"
[00:14] <isaacs> you swapped your words there.
[00:14] <technoweenie> zing
[00:14] <isaacs> i'm guessing someone at sun probably does, too.  didn't they write it?
[00:15] Validatorian has joined the channel
[00:16] <beutdeuce> I basically need to load content off of an external web page
[00:17] <ryah> beutdeuce: http.cat('http://tinyclouds.org/index.html', 'utf8', function (err, content) { })
[00:17] <beutdeuce> ryah: awesome, did not know about cat
[00:19] sechrist has joined the channel
[00:20] richcollins has joined the channel
[00:20] sechrist has joined the channel
[00:21] <ryah> anyone running freebsd here?
[00:23] <beutdeuce> ryah: i have access to one
[00:24] <ryah> beutdeuce: do you want to try a patch for me?
[00:24] softdrink has joined the channel
[00:24] <beutdeuce> i can give it a try
[00:24] <beutdeuce> its OpenBSD actually
[00:24] <ryah> git clone git://github.com/v8/v8.git v8
[00:25] <ryah> beutdeuce: that's okay too
[00:25] <ryah> do you have node on there?
[00:25] <mscdex> i can fire up my freebsd vm
[00:25] <beutdeuce> i dont think so ,but i have build tools
[00:26] <beutdeuce> would you like me to build head?
[00:28] <ryah> so yeah you need the latest v8 
[00:28] <ryah> then apply this patch:
[00:28] <ryah> http://s3.amazonaws.com/four.livejournal/20100526/0001-Implement-OS-ReleaseStore-for-FreeBSD.patch
[00:28] <ryah> ^-- this is for freebsd
[00:28] <ryah> i'll make one for solaris
[00:28] <ryah> er
[00:28] <ryah> openbsd
[00:29] <Validatorian> fictorial: any ETA on the multi/exec/discard/watch implementation in your redis module?
[00:29] <ryah> beutdeuce: http://s3.amazonaws.com/four.livejournal/20100526/0001-Implement-OS-ReleaseStore-for-OpenBSD.patch
[00:29] <beutdeuce> k
[00:30] <ryah> beutdeuce: basically do: python tools/test.py
[00:30] <ryah> beutdeuce: you need scons installed
[00:30] <ryah> mscdex: you need scons installed. get the latest v8. apply http://s3.amazonaws.com/four.livejournal/20100526/0001-Implement-OS-ReleaseStore-for-FreeBSD.patch
[00:30] <_announcer> Twitter: "damn, the node.js api changes so much"-- Carlo Cabanilla. http://twitter.com/clofresh/status/14798863148
[00:30] <_announcer> Twitter: "Great evening at #techvalleyrb. #goruco review, mocking and testing, node.js, pizza, and planning a bar camp."-- Mark Menard. http://twitter.com/mark_menard/status/14798865345
[00:30] <ryah> mscdex: python tools/test.py
[00:32] <ryah> beutdeuce, mscdex: actually python tools/test.py -S visibility=default -S snapshot=on
[00:32] <beutdeuce> k
[00:32] <ryah> make sure you're on HEAD, which should be ee4cef4ffbc56faa78222c1013868fc457652521
[00:33] <Validatorian> general sort of question -- I didn't know that node or redix existed two months ago, and now they have completely changed how I work and think about development. Are there any other groundbreaking type projects out there that the general population isn't aware of? I know it's a pretty open-ended question, but you never know...
[00:33] <Validatorian> redis*
[00:40] gwoo has joined the channel
[00:41] <maushu> ReferenceError: enc is not defined
[00:42] <maushu> Ok, you ruined the setEncoding?
[00:42] <maushu> *who
[00:42] <beutdeuce> ryah: got error during build, http://pastie.org/979160
[00:42] mitkok has joined the channel
[00:43] <_announcer> Twitter: "I really want to use node.js for something. Can't seem to think of anything!"-- Benjamin Sternthal. http://twitter.com/bensternthal/status/14799573272
[00:44] <ryah> beutdeuce: ok
[00:44] <ryah> apparently openbsd is broken
[00:44] <ryah> (that was unrelated to what i had changed)
[00:44] <ryah> mscdex: how's it going with yours?
[00:45] <_announcer> Twitter: "I was going to use node-msgpack until *someone* trampled over setEncoding in the latest git version. #node.js"-- Graphnode. http://twitter.com/graphnode/status/14799680171
[00:45] <maushu> ^^^^
[00:45] Ori_P has joined the channel
[00:45] <ryah> maushu: ?
[00:45] <maushu> ReferenceError: enc is not defined
[00:46] <ryah> maushu: where?
[00:46] <maushu> In a Script.
[00:47] <maushu> For a stdin.
[00:47] <ryah> *shrug*
[00:47] <ryah> nothing has changed 
[00:47] <mscdex> ryah: errors here too
[00:47] <maushu> It worked on 96.
[00:47] <mscdex> ryah: http://gist.github.com/415276
[00:47] batasrki has joined the channel
[00:47] <ryah> maushu: oh i think i know the problem
[00:48] <maushu> Yay!
[00:48] <sechrist> borkcode
[00:48] <maushu> Problem between keyboard and chair?
[00:48] <ryah> mscdex: huh. okay - also broken
[00:49] <ryah> mscdex: oh wait - can you delete -Werror from SConstruct
[00:49] <ryah> mscdex: and try again
[00:51] <mscdex> ryah: http://gist.github.com/415276
[00:52] <ryah> okay - whatever - i guess it's also broken
[00:52] <ryah> thanks for trying
[00:57] JimBastard has joined the channel
[01:00] <ryah> maushu: going to fix you in like 2 secs
[01:00] <maushu> What?! I need that!!!!!!
[01:00] <maushu> Don't fix me!
[01:05] <mscdex> ha
[01:06] <CIA-76> node: 03Ryan Dahl 07master * r29e867a 10/ lib/http.js : Simplify a few internal HTTP events. - http://bit.ly/d00V3t
[01:06] <CIA-76> node: 03Micheil Smith 07master * rd89de07 10/ (lib/fs.js src/node_file.cc): 
[01:06] <CIA-76> node: Adding experimental support for fs.chown and fs.chownSync.
[01:06] <CIA-76> node: Notes:
[01:06] <CIA-76> node: - Currently only accepts numeric user and group ids.
[01:06] <CIA-76> node: - No tests, as tests depend on getpwuid and getgrgid.
[01:06] <CIA-76> node: - No documentation, as there is no tests and this is experimental. - http://bit.ly/dlFFG2
[01:06] <CIA-76> node: 03Ryan Dahl 07master * r31854c7 10/ deps/v8/src/platform-solaris.cc : 
[01:06] <CIA-76> node: Fix Solaris V8 build
[01:06] <CIA-76> node: Patch submitted to V8: http://codereview.chromium.org/2282003/show - http://bit.ly/bOhlYf
[01:07] <ryah> maushu: something to do with fs.ReadStream, right?
[01:07] <maushu> Let me see.
[01:08] <maushu> Hmm, don't see any ReadStream... or fs for that matter.
[01:08] <ryah> oh, then i don't know what's wrong
[01:09] <maushu> Oh wait, there is a fs here.
[01:09] <maushu> ryah, https://gist.github.com/6bf9fba1ed17c47b9311
[01:09] <ryah> maushu: do you not have a stack trace?
[01:10] <mscdex> i got v8 compiling
[01:10] <maushu> That is what my sandbox stderr returns.
[01:10] <ryah> mscdex: oh, great
[01:10] <ryah> mscdex: what'd yo need to do?
[01:10] <mscdex> turns out it was guessing my arch wrong :S
[01:10] <maushu> xD
[01:10] <maushu> That is what it wants you to think.
[01:11] <mscdex> -m32 instead of -m64
[01:11] <maushu> It's just waiting to explode at the exact right moment.
[01:11] <mscdex> so i had to force it to x64
[01:11] <mscdex> ok, it finished
[01:12] <mscdex> yey
[01:12] <ryah> mscdex: was it just that change that i sent you?
[01:12] ditesh|cassini has joined the channel
[01:12] <ryah> mscdex: if so i can update my patch set that i already uplaod to v8
[01:13] <mscdex> i patched that in and it compiled fine
[01:13] <ryah> ok
[01:13] <mscdex> your patch wasn't causing any errors
[01:13] <ryah> mscdex: did you run tests?
[01:13] <mscdex> oh forgot that heh
[01:13] <ryah> tools/test.py
[01:14] <ryah> tools/test.py -S visibility=default -S snapshot=on -S arch=x64
[01:14] <maushu> ryah, it says that enc doesn't exist at fs line 638.
[01:15] bpot has joined the channel
[01:15] <maushu> On another news node-msgpack should work with 32bit, Peter fixed the bug.
[01:15] <maushu> And creationix left.
[01:15] <maushu> Drat.
[01:16] <mscdex> hrm
[01:17] <mscdex> i'm getting "Can't find shell executable: '/path/to/v8/shell'"
[01:17] <ryah> maushu: okay - going to fix it
[01:17] <maushu> Yay!
[01:17] <ryah> mscdex: have a look at that tools/test.py script
[01:18] <ryah> it should be obvious
[01:18] <ryah> just needs some kicking before it works
[01:18] <_announcer> Twitter: "When I'm done playing with Node.js on @heroku. I'm going to play with Web Sockets on @pusherapp. /thanks @chrisjpowers!"-- Dave Hoover. http://twitter.com/redsquirrel/status/14801691702
[01:20] JimBastard has joined the channel
[01:21] joshbuddy has joined the channel
[01:23] <_announcer> Twitter: "node.js น่าเล่นจริง ๆ http://simonwillison.net/2009/Nov/23/node/"-- จิตร์ทัศน์. http://twitter.com/jittat/status/14801998926
[01:24] <maushu> ...
[01:25] <maushu> moonspeak
[01:26] <Pilate> terrorist threats
[01:27] <_announcer> Twitter: "Dream last night, opened the high school mathematics books, actually is node.js Tutorial" [zh-CN]-- aki. http://twitter.com/aki_xavier/status/14802228583
[01:30] <mscdex> ryah: ok, managed to get the shell built finally heh. but now it tells me "No tests to run"
[01:30] <_announcer> Twitter: "Wish I could hack away at node.js for a few days straight."-- Chris Jaure. http://twitter.com/chrisjaure/status/14802436682
[01:31] <mscdex> oh wait, hold on
[01:31] <_announcer> Twitter: "[del] [from maleko] A HTTP Proxy Server in 20 Lines of node.js Code - good coders code, great reuse:  http://url4.eu/3mFPs"-- sldfjd ldajds. http://twitter.com/sldfjd/status/14802475062
[01:34] <CIA-76> node: 03Ryan Dahl 07master * r8840ce3 10/ (4 files in 3 dirs): 
[01:34] <CIA-76> node: Bugfix: fs.ReadStream.setEncoding
[01:34] <CIA-76> node: Improve test-fs-read-stream test. - http://bit.ly/9F9yzs
[01:35] <ryah> mscdex: just let me know once you've run those tests
[01:36] derbumi_ has joined the channel
[01:37] <_announcer> Twitter: "And just like that I'm-a running node.js with express.js. Sweet."-- Srdjan Pejic. http://twitter.com/batasrki/status/14802853141
[01:38] <batasrki> the announcer bot is fast
[01:39] <Aria> YEs it is.
[01:39] <Aria> Managed to announce me before I had the button up from hitting submit last night
[01:40] <batasrki> whoa
[01:41] <Aria> Yeah.
[01:41] <mscdex> Aria: pretty soon it'll announce you before you even press down on the button ;-)
[01:41] <Aria> ACTION grins
[01:41] <batasrki> mscdex, at that point we should all be scared, very very scared
[01:41] <ryah> negative latency :)
[01:42] <mscdex> hehe
[01:42] <JimBastard> I heard 80% of all tweets are generated by JimBastard. #bastardfacts
[01:42] <ryah> i think i'll tout that in my next node talk
[01:42] <JimBastard> ^_^
[01:42] <Aria> ACTION grins
[01:42] <ryah> "the webserver actually responds before you send a request"
[01:43] <JimBastard> you'll need a good look-ahead algorithm if you want to get negative latency going
[01:43] <mscdex> ryah: ok, it failed 1 test
[01:43] <Aria> (... SPDY ...)
[01:43] <ryah> JimBastard: you haven't seen deps/v8/src/flux-capacitor.cc ?
[01:43] <ryah> mscdex: good i'll submit it
[01:43] <ryah> mscdex: thanks
[01:43] <JimBastard> i told you man, i dont ever mess with any of the c code :-(
[01:43] <mscdex> np
[01:45] <ryah> mscdex: freebsd, right?
[01:45] <mscdex> ryah: yep
[01:46] <mscdex> hmm
[01:47] markwubben has joined the channel
[01:47] <ryah> mscdex: http://codereview.chromium.org/2282003/show
[01:49] beutdeuce has joined the channel
[01:50] <beutdeuce> help appreciated, can't figure this out: http://pastie.org/979232
[01:50] <_announcer> Twitter: "@tjholowaychuk is there a way to write an end to end test from jspec for node.js?"-- jamescarr. http://twitter.com/jamescarr/status/14803649293
[01:52] <batasrki> it'd be interesting if people could reply through announcer to twitter questions like the one above
[01:53] SubtleGradient has joined the channel
[01:53] <Aria> Heh, it'd sure be nice if twitter had a commentary system.
[01:54] <Aria> .oO(Which I'll hack on for people who use the proxy I'm writing...)
[01:54] <beutdeuce> any ideas? (http://pastie.org/979232)
[01:56] <Aria> what does cat() return?
[01:56] <mscdex> addCallback? is that promise or something?
[01:56] <JimBastard> twitter is about to get annotations 
[01:57] <Aria> Well then. Annotations might just do it.
[01:57] <ryah> beutdeuce: http.cat(url, encoding, function (err, content) { })
[01:57] <beutdeuce> oh, right, thanks
[01:59] <JimBastard> batasrki: i have all the pieces to set that up from IRC command line
[01:59] <JimBastard> its just a matter of actually doing it
[01:59] <JimBastard> :-\
[01:59] <mikeal> ryah: is that pump() patch something you want? 
[02:00] <batasrki> JimBastard, that'd be kinda cool. Need help?
[02:00] <JimBastard> i just dont have the time to take something like that on
[02:00] <mikeal> i'm using it in something and I'm wondering if I should just move it in to the app or keep using my local node that has the patch committed :)
[02:00] <JimBastard> but i can get you started if you want
[02:04] <batasrki> I'd love to take a look at it
[02:04] <batasrki> sure
[02:04] <beutdeuce> using expressjs, why does this code simply output "OK" to the screen, when if i try sys.puts(data), it displays the actual data i am looking for? http://pastie.org/979246
[02:05] <JimBastard> well you can start on one of two sides
[02:05] <JimBastard> the IRC, or the twitter
[02:05] <JimBastard> i would suggest IRC
[02:05] <JimBastard> get gf3's Jerk library
[02:05] <JimBastard> http://github.com/gf3/Jerk
[02:05] bradleymeck has joined the channel
[02:05] <JimBastard> setup a private room somewhere
[02:05] <JimBastard> have the bot join
[02:06] <JimBastard> then map some triggers to do some logic
[02:06] <JimBastard> make sense?
[02:06] <batasrki> yep
[02:07] <batasrki> high-level overview is good
[02:07] <JimBastard> theres gonna be a whole bunch of issues with auth, but we can hack that around
[02:07] <JimBastard> maybe make one node account for answers
[02:07] <JimBastard> once you have the bot going, there are lots of node libraries for talking to twitter
[02:07] <JimBastard> doing a post is easy
[02:08] <batasrki> ok
[02:08] <batasrki> writing this down
[02:08] <JimBastard> hi beutdeuce 
[02:08] <beutdeuce> JimBastard: hey
[02:09] <JimBastard> if you are doing sys.puts(data)
[02:09] <JimBastard> and you see "OK"
[02:09] <JimBastard> then your data is "OK"
[02:10] <beutdeuce> no, i see "OK" when i return it
[02:10] <beutdeuce> i see the actual data when i puts it
[02:10] <JimBastard> ok....
[02:12] <Aria> Ew. Geez. the commonjs packages talk has got to be the ugliest thing I've ever seen.
[02:12] <JimBastard> i dont use express, if you having an issue with that maybe open up an issue on the github? theres probably somehere that could help you
[02:12] <JimBastard> lol Aria 
[02:12] <beutdeuce> k, thnx
[02:13] <vnguyen> beutdeuce:  your code pastie doesn't appear to use expressjs o_O
[02:15] <Aria> No, seriously. Who wants require() to be that friggin complicated?
[02:15] <Aria> I'm not sure anyone on that list even has an idea what problem they're solving.
[02:16] <Aria> It's just this "how many automatic bay doors can we put on our bike shed?"
[02:16] <Aria> "And machine gun turrets!"
[02:16] <bradleymeck> i want require to require itself ala var require=new require("require",true,1.0);
[02:16] <bradleymeck> it makes sense i say!
[02:20] <Aria> ACTION grins.
[02:21] <bradleymeck> how do i compile a node addon such that it includes the debugging info
[02:22] <bradleymeck> or in other words, why is there an error in http://gist.github.com/414012 when i use callback->Call
[02:23] <Aria> Hm. Does export USE_DEBUG=yes work to add debug symbols?
[02:23] <bradleymeck> where would i put that? 
[02:24] <Aria> USE_DEBUG=yes node-waf configure ?
[02:24] <Aria> Just a guess.
[02:24] <Aria> The stuff in node's own wscript give a few hints, not that I'm any kind of expert on waf
[02:25] <ryah> Aria: yes, commonjs is largely counter-productive
[02:26] <Aria> Yeah, I'm starting to see just how much.
[02:26] <Aria> I should really get my java skills up to snuff and start tri-implementing things, just to add inertia to good ways of doing things
[02:27] <ryah> node.net, unfortunately, is quite nothing
[02:27] <Aria> Aw, bummer.
[02:27] <batasrki> ryah, yeah, I was wondering about that. No good, eh?
[02:28] <ryah> it's just very far from anything usable
[02:28] <ryah> good idea maybe
[02:28] <Aria> If I had the slightest interest in dealing with Windows, I'd have to go poke it.
[02:28] <Aria> But suck.
[02:29] <ryah> there is a way to use most of node on top of another platform with minmal pain
[02:29] <ryah> but node.net does not take that route
[02:29] <batasrki> ha, they take the good old MS NIH approach?
[02:30] <Aria> What way are you referring to?
[02:30] <ryah> and by minimal pain, i mean 2 months for an experienced systems engineer
[02:30] <Aria> Heh
[02:30] <ryah> reusing node's javascript and redoing the bindings
[02:31] <JimBastard> node.net is okay for getting started on dev, but its a major stop gap. you should be running v8
[02:31] <JimBastard> and if i ever see a node.net app running live on production, im dosing it
[02:31] <ryah> yeah, i don't know
[02:31] <ryah> have you tried it?
[02:31] <JimBastard> on gp
[02:31] <JimBastard> nope
[02:31] <JimBastard> lol
[02:31] <ryah> i seriously doubt it works
[02:31] <JimBastard> ahahaha
[02:31] <JimBastard> its not hard to stub out a few node modules in jscript
[02:31] <JimBastard> hes just copying the api
[02:32] <ryah> if you say so
[02:32] <JimBastard> its all smoke and mirrors though
[02:32] <JimBastard> i dunno
[02:32] <JimBastard> fuck .net
[02:33] <bradleymeck> the one big issue i see is the lack of addon support... which will be brutal in time
[02:33] <ryah> i think it'd be super cool to run on .net but not reusing node's js is rather insane
[02:34] <ryah> and getting the scafold to run on that is a serious undertaking
[02:34] <ryah> which is why it wasn't done
[02:34] <Aria> Yeah, the addon thing is hard no matter how you slice it.
[02:36] <ryah> node moves very fast - and has at least one full time person on it. it is impossible for someone to match the api and keep up with development
[02:36] <ryah> the only hope would be to reuse the js and bind at a lower level
[02:36] <Aria> Heh, yeah.
[02:36] jbrantly has left the channel
[02:47] richcollins has joined the channel
[02:49] <JimBastard> someone works full-time on node ryah ? we should get that guy in the IRC room
[02:49] <JimBastard> ;-)
[02:49] <fictorial> Validatorian: no, not really. unfortunately, I do not need it myself at this time so it is taking a bit of a lower priority to implement.  the parser needs to use a stack in order to nest multi-bulk replies if you are up for trying a patch.
[02:50] <bradleymeck> anyone have an example of a JS function being called inside of a node addon in C++?
[02:52] mikeal has joined the channel
[02:55] <Aria> Eugh, geez. Spidermonkey's build is still a mess.
[02:55] <Validatorian> fictorial: naw, I'm not really experienced enough to handle it, I'll wait for those more capable :) Thanks for the response
[02:55] <Aria> No wonder everyone's flocking to node. It's the only distro that actually freakin' works
[02:55] <JimBastard> have you guys seen this yet? i kinda love
[02:55] <JimBastard> http://github.com/Marak/JUP
[02:56] <JimBastard> JSON IN, HTML OUT
[02:56] <JimBastard> well JAVASCRIPT IN , HTML OUPT
[02:56] <fictorial> Validatorian: np!
[02:56] <JimBastard> very simple idea
[02:56] <Aria> Spiffy!
[02:56] <Aria> Like Markaby for Ruby.
[03:06] wilmoore has joined the channel
[03:07] <bradleymeck> do addons have access to the node global context? the only examples of using Function::Call i seem to make a contextscope right before the call
[03:09] charlesjolley has joined the channel
[03:09] charlesjolley has joined the channel
[03:14] <_announcer> Twitter: "Just a reminder: if you use #npm, it's beta software, as is #nodejs, and both change *very* often. Please update often. 
[03:16] PyroPete1 has joined the channel
[03:26] <mscdex> ryah: i'm running the tests with your patch on openbsd x64
[03:30] TheEnd2012 has joined the channel
[03:32] <mscdex> ryah: failed 3 tests
[03:33] <mscdex> ryah: here's the output if you're interested: http://gist.github.com/415417
[03:41] alexiskander has joined the channel
[03:45] jedschmidt has joined the channel
[03:47] darkf has joined the channel
[03:51] <_announcer> Twitter: "New post - Design goals for Pluto, an open source OT library for node.js http://bit.ly/dCEEHv #in"-- Andrew Jessup. http://twitter.com/startthesignal/status/14810753656
[03:53] <mscdex> i wonder if v8 builds on netbsd...
[03:54] <sechrist> why would you ever want to build on netbsd!
[03:55] <mscdex> heh
[03:55] <mscdex> another bsd to add to the list if it does work :-)
[03:59] gf3_ has joined the channel
[04:01] <mscdex> besides, netbsd is pretty quick -- at least compared to openbsd and maybe freebsd
[04:04] sudoer has joined the channel
[04:11] <Aria> Dear Mozilla.org, you fail: http://www.mozilla.com/js/util.js should not have a text/html content type.
[04:11] <_announcer> Twitter: "Was looking for a simple, lightweight web development framework to sit behind node.js - might have found it: http://expressjs.com"-- Chris Ricca. http://twitter.com/ChrisRicca/status/14811765440
[04:11] sh1mmer has joined the channel
[04:12] smtlaissezfaire has joined the channel
[04:12] <_announcer> Twitter: "@redsquirrel Apparently "for each...in" is a feature in JavaScript 1.6, but isn't ECMA. Maybe that's why Node.js chokes? http://is.gd/cqKp6"-- Michael P. Hines. http://twitter.com/michaelphines/status/14811813015
[04:16] <Aria> Sweet. Aside from some encoding issues and the occasional content-type glitch, I can browse the web through the HTML5 parser as a proxy.
[04:17] aaronblohowiak has joined the channel
[04:19] mjijackson has joined the channel
[04:25] mikeal has joined the channel
[04:25] <sechrist> Aria: hell yeh
[04:27] <JimBastard> lolwut
[04:27] <aaronblohowiak> lolhello
[04:27] <JimBastard> hey hey hey
[04:28] <JimBastard> hows it going aaronblohowiak 
[04:28] <aaronblohowiak> JimBastard: tired. i've been spending too much time at work lately.  people don't like bugs in their software. assholes.
[04:28] <aaronblohowiak> ;)
[04:29] <sechrist> then don't write bugs in the software
[04:29] <sechrist> lol
[04:29] <aaronblohowiak> sechrist: do you have any github repos ?
[04:29] <aaronblohowiak> ;)
[04:29] <sechrist> of course not
[04:30] <JimBastard> I don't really know what you mean by bugs. When I write front-end code the shit is soo rugged then even when the backend breaks the whole application still works. #bastardfacts
[04:30] <JimBastard> :-)
[04:30] <aaronblohowiak> JimBastard: hahahaha
[04:30] <sechrist> yep, and the browser gets the data before it's requested
[04:30] <aaronblohowiak> pre-pre-caching
[04:30] <JimBastard> its the new node look-ahead feature
[04:30] <_announcer> Twitter: "I watched node.js' YUI Theater podcast. It is cool. #node.js"-- Seung-jin Kim. http://twitter.com/seungjin/status/14812697020
[04:30] <_announcer> Twitter: "Oh man... I am so glad @MarioAquino introduced me to Node.js and Express"-- jamescarr. http://twitter.com/jamescarr/status/14812697438
[04:31] <JimBastard> flux-capacitor.cc i think
[04:31] <sechrist> two for one
[04:31] <JimBastard> ryah was talking about it
[04:31] <JimBastard> exppppreeessssss
[04:31] <JimBastard> time to kill express
[04:32] <aaronblohowiak> express isn't very asynch
[04:32] <JimBastard> why bother making a js application if you dont have sick ass client-side rendering and behavior libraries
[04:32] <JimBastard> might as well use sinatra or rails
[04:32] <JimBastard> i dunno
[04:33] <JimBastard> back to work now
[04:35] <sechrist> http://robertnyman.com/2008/10/16/beware-of-javascript-semicolon-insertion/
[04:35] <sechrist> I never thought about that before
[04:35] <sechrist> FML
[04:37] mattly has joined the channel
[04:38] technoweenie has joined the channel
[04:38] charlesjolley has joined the channel
[04:44] nsm has joined the channel
[04:45] wilmoore_ has joined the channel
[04:47] SamuraiJack has joined the channel
[04:54] ineation has joined the channel
[04:55] melgray has joined the channel
[04:57] <JimBastard> yo Validatorian 
[04:58] <Validatorian> hey JimBastard, what's up?
[04:58] ineation has joined the channel
[04:58] <JimBastard> i gotta merge your changes right
[04:58] <_announcer> Twitter: "@ Andrwj node.js simple websocket server it, and we&#39;ve got a question .. Ha ha" [ko]-- KyoungTaek Koo 구경택. http://twitter.com/boxersb/status/14813950279
[04:59] <Validatorian> you don't have to, no -- I was planning on just re-adding them when you have the new api sorted
[04:59] <JimBastard> i think its sorted out now
[04:59] <JimBastard> the build is working again, and im starting to clean up namespaces
[05:00] <JimBastard> you wanna like stash your changes somewhere and then just repull?
[05:00] <JimBastard> get the clean version from me
[05:00] <JimBastard> you can just rm -rf the dir and clone new
[05:02] <Validatorian> isn't that what 'git stash && git pull' does?
[05:02] <JimBastard> i mean
[05:03] <JimBastard> i keep it simple
[05:03] <JimBastard> i just copy the code and paste it into firebug console on github.com
[05:03] <JimBastard> and delete the dir and reclone
[05:03] <JimBastard> and paste it back in
[05:03] <JimBastard> *advanced technique, not recommended 
[05:03] <JimBastard> lol
[05:03] <Validatorian> ah, right -- yea, I'll take care of that tonight
[05:03] <JimBastard> well check it
[05:03] <JimBastard> it should be really easy
[05:04] <JimBastard> http://github.com/Marak/javascript-fu/blob/master/lib/dateTimeFu.js
[05:04] <JimBastard> you just gotta put your code in thar right?
[05:04] mattly has joined the channel
[05:04] binary42 has joined the channel
[05:07] <Validatorian> reckon so, but I don't know if my code, as-is, should be implemented
[05:07] <Validatorian> such as using the format method for the unix epoch
[05:07] <Validatorian> doesn't feel right
[05:07] <Validatorian> the week certainly should, I think
[05:12] mikeal has joined the channel
[05:12] <JimBastard> do you know about UTC time
[05:15] Tim_Smart has joined the channel
[05:16] smtlaissezfaire has joined the channel
[05:17] iwasbiggs has joined the channel
[05:21] <Validatorian> I am aware of it, yes
[05:21] <Validatorian> meaning timezone-agnostic time, correct?
[05:21] <Validatorian> btw, JimBastard, is this the setup you have with nginx? http://www.shinstudio.com/blog/backend-tech/setting-up-node-js-in-nginx/
[05:23] Neil_ has joined the channel
[05:23] bolson has joined the channel
[05:23] <JimBastard> no Validatorian 
[05:24] <JimBastard> hold on
[05:24] <Validatorian> not sure if you're saying no to the UTC or nginx dialogue ;)
[05:27] chewbranca has joined the channel
[05:28] <_announcer> Twitter: "@eliast you'd enjoy what I'm working on: node.js twitter api proxy allowing for UGC transforms (hopefully streamed)"-- Aaron White. http://twitter.com/aaronwhite/status/14815202334
[05:28] <JimBastard> yeah i cant find it sorry
[05:29] <JimBastard> use proxy_pass
[05:29] <Validatorian> that's in the code on that page... do you just have a different implementation?
[05:29] <Validatorian> proxy_pass http://app_cluster_1/;
[05:30] <JimBastard> zzzzzz bbl
[05:32] <_announcer> Twitter: "#nodejs html5 parser works. It really, really works. (I can write a proxy and surf the web through it)"-- Aria Stewart. http://twitter.com/aredridel/status/14815368602
[05:33] <Validatorian> Aria: woah. That's awesome!
[05:33] <Validatorian> O
[05:33] <Aria> Hehe.
[05:34] <Aria> Next steps: performance, encoding handling, and writing a module to let me use greasemonkey scripts.
[05:34] <Validatorian> *drool*
[05:35] <Validatorian> so it can accept/run javascript?
[05:35] <Validatorian> (currently)
[05:36] <Aria> No. But that wouldn't be hard to add
[05:36] <Tim_Smart> Hmm I have to say, the couchdb rap fails (no offense to anyone)
[05:36] <Tim_Smart> JimBastard needs to give them some tips
[05:39] <sechrist> the couch db
[05:39] <sechrist> is lol
[05:39] <sechrist> nonrelational databases turn me onn
[05:40] Validatorian has joined the channel
[05:40] <Validatorian> couchdb rap crashed my browser :'(
[05:44] <Validatorian> I can see, now that I have finished watching it.. my browser had the right idea.
[05:44] jedschmidt has joined the channel
[05:44] <sechrist> relax
[05:44] <sechrist> don't do it
[05:44] <sechrist> when you want to go do it
[05:44] <Tim_Smart> http://github.com/Tim-Smart/node-asset :D
[05:45] <sechrist> hey Tim_Smart what is your name
[05:45] <Tim_Smart> Tim Smart
[05:45] <sechrist> no way, really?
[05:45] <Tim_Smart> yeah
[05:46] <sechrist> neat lib
[05:47] <sechrist> Validatorian: so what is your idea for parsing javascript right out of html? having flat files that have javascript that executes server-side a la templating? like php?
[05:48] <Validatorian> ... I think you're looking for Aria.
[05:48] <Tim_Smart> sechrist: Have you looked at Aptana Jaxer?
[05:48] <Validatorian> my idea is to use whatever Aria implements ;)
[05:48] <sechrist> no Validatorian you asked about it
[05:48] <sechrist> oh hehe
[05:48] <sechrist> I mean I don't immediately see the value of executing js in html5 chunks
[05:48] <sechrist> unless you want a templating system
[05:49] <Aria> Hehe. I want to both use aptana jaxer style "runat='server'", and run things fully server-side, as an option
[05:49] <sechrist> or want to create a javascript-aware web crawler for the lulz
[05:49] <sechrist> but you'd have to sandbox it
[05:49] <Validatorian> I'm pretty green at this stuff -- I've been primarily a front-end (xhtml/css/light-weight ui based javascript) for the last few years
[05:50] <Validatorian> crawling the deep web is a good use-case, yea
[05:50] <sechrist> aptana jaxer is word
[05:51] <mikeal> man, jquery on node via jsdom is going to be the best thing that ever happened to web scrapers :)
[05:51] <sechrist> :)
[05:51] <sechrist> that's my use for it
[05:52] <sechrist> once aria gets node-html5 more optimal
[05:52] linuxsable has joined the channel
[05:52] <mape> Aria: How is the htmlparser moving along? jQuery rolling yet?
[05:52] <Aria> I've not tried jQuery. It doesn't touch parsing much
[05:53] <Aria> But I can surf the web through it
[05:54] <mape> Hmm k, could really use node as parser right about now
[05:54] <mape> But it is compatible with jsDom?
[05:54] <sechrist> yeah
[05:54] <Aria> Yep. That's the default DOM now
[05:54] <sechrist> full browser augmentation
[05:54] <sechrist> I have it working
[05:54] <mape> sechrist: Have the ability to do a quick check if it plays with jQuery?
[05:55] <sechrist> hmmmm
[05:55] <sechrist> I can try
[05:55] <sechrist> any innerhtml setting will fail atm tho
[05:56] themgt has joined the channel
[05:56] <mape> So guess that breaks any real parser usage?
[05:56] <sechrist> if you're just parsing
[05:56] <sechrist> why do you need to use innerhtml
[05:57] <Validatorian> that depends on if your server is IE based and can use innerText ;)
[05:57] <Aria> I haven't plumed those together yet
[05:57] <sechrist> Aria: what would I use as the window object
[05:57] <sechrist> i has document
[05:57] <Aria> Use the jsdom window augmentation
[05:58] <sechrist> it's argument is "dom", do I pass it p?
[05:58] <mape> sechrist: Well I don't know of the inner workings of using .text() .html() in jQuery
[05:59] hammerdr has joined the channel
[05:59] <Aria> Which's argument?
[06:00] <sechrist> var window = require(__dirname + "/../../lib/browser").windowAugmentation(dom);
[06:01] <Aria> That'd be the object returned from browserAugmentation, which takes a dom, which would be the require('level1/core').dom.level1.core...
[06:01] <Aria> jsdom is a bit crazy.
[06:01] <Aria> Lets you layer it all together
[06:01] <sechrist> yeah but window has to be attached to document does it now?
[06:01] <sechrist> not*
[06:01] <sechrist> or can do set window.document to my document
[06:04] admc has joined the channel
[06:05] smtlaissezfaire has joined the channel
[06:08] <Aria> No, window, I think, wraps the dom
[06:08] <Aria> And document gets attached to it when you use it. Don't quote me though. I haven't tried.
[06:08] <Aria> Outside my usecase currently
[06:08] Nohryb has joined the channel
[06:08] screen-x has joined the channel
[06:08] <Aria> (tmpvar might be able to shed better light currently)
[06:14] <sechrist> yeah I can't get it to work
[06:15] eto has joined the channel
[06:15] <sechrist> jQuery doesn't get defined.
[06:15] <eto> please add to dependencies on page that python is required
[06:16] <eto> more over i would like to know which version should i download?
[06:16] <eto> 2.4 2.5 or 2.6 ?
[06:16] felixge has joined the channel
[06:16] felixge has joined the channel
[06:18] <eto> nevermind i've found out is there indeed. i am blind
[06:19] <eto> it okay to proceed with 2.6? or shoul one stick with 2.4?
[06:23] rictic has joined the channel
[06:26] b_erb has joined the channel
[06:30] _cheerios has joined the channel
[06:31] <Aria> I got it working with 2.6 without trouble
[06:31] <Aria> WAF is pretty basic.
[06:34] <eto> hmm
[06:36] <eto> i get: Build failed:  -> task failed (err #1): {task: cc eio.c -> eio_1.o}
[06:36] <eto> $ cc --version
[06:36] <eto> cc (GCC) 3.3.5 (propolice)
[06:37] <eto> i am on openbsd
[06:38] <Tim_Smart> Anyone had an issue with CouchDB, Ubuntu and CPU usage?
[06:38] <Aria> You'll need GCC 4, eto 
[06:38] <eto> only that or also something else?
[06:39] <eto> i hope  gcc-4.2.4p2 is fine
[06:39] <Aria> Not sure if you'll need more, but I got relatively far compiling it before node had any openbsd support
[06:39] <Aria> Should be fine
[06:39] <eto> should i rerun configure?
[06:40] <Aria> Yeah. And tell it where to find the right gcc
[06:44] Dennus has joined the channel
[06:54] frodenius has joined the channel
[06:54] frodenius has joined the channel
[06:55] <eto> well i am stuck with telling it to where to find the compiler
[06:56] <Aria> One moment. Lemme fire up VirtualBox
[06:56] <eto> huh usually after pkg_add there is some info but there was none
[06:57] <Aria> Oh, it depends on what you're building
[06:57] <Aria> it's in /usr/lib/gcc/4.2.4, I think, or similar
[06:57] micheil has joined the channel
[06:57] <Aria> Aw, man, my work on node on openbsd is in the other vm
[06:59] mcarter has joined the channel
[06:59] felixge has joined the channel
[06:59] mscdex has joined the channel
[07:00] saikat` has joined the channel
[07:00] <eto> well there is /usr/local/lib/gcc/i386-unknown-openbsd4.6/4.2.4
[07:07] olegp has joined the channel
[07:09] Nohryb has joined the channel
[07:10] ineation has joined the channel
[07:16] <eto> well the path after severals find ended up rather convoluted
[07:16] <eto> at /usr/local/libexec/gcc/i386-unknown-openbsd4.6/4.2.4/cc1
[07:17] <Aria> How about /usr/local/bin/egcc?
[07:19] <eto> well you are right i did sudo find / -name 'gcc*' which was probably a mistake
[07:19] <eto> okay how can i tell your build system ro use it, please?
[07:20] <_announcer> Twitter: "@pamelafox Node.js/Redis is a fun one (you'd need to get a VPS, but http://prgmr.com/xen/ is pretty cheap) and Heroku has a Node beta."-- Saikat Chakrabarti. http://twitter.com/saikatc/status/14819330616
[07:23] <Aria> I'm reloading my dev environment. One moment
[07:23] <Aria> (I upgraded to OpenBSD 4.7 but tossed my old root fs)
[07:26] <eto> sorry to bother you that much
[07:27] <Aria> No problem!
[07:28] <Validatorian> dangit Aria.  One link from your blog and now I'm 30 pages deep learning about 'unschooling' :-P
[07:28] <Aria> ACTION grins.
[07:28] <Aria> It was one hell of an awesome way to grow up
[07:29] <halorgium> one should never grow up
[07:30] <Validatorian> yea -- my mom actually tried to 'home school' me -- didn't quite work out. Still, school wasn't really conducive to my education. I wish I had been unschooled now :)
[07:30] <Aria> Hehe. 
[07:30] <Aria> No time like the present. 
[07:31] <Validatorian> yea, well I'm more thinking about my kiddos at this point ;)
[07:31] <Validatorian> still, if I'm unschooling them, I suppose technically I would actually be getting the same unschooling experience
[07:33] <Aria> Hehe. Oddly, yes.
[07:33] <_announcer> Twitter: "Our nodejs chat server is up n' running for a month now. Probably node has been rewritten from scratch a couple of times since then :P #edge"-- Christos Trochalakis. http://twitter.com/ctrochalakis/status/14819749872
[07:34] <halorgium> the teacher becoming the student is the best way to learn
[07:34] <Aria> Realizing the deeper truth of that, that we all learn all the time, is I think the more important lesson
[07:34] <Aria> c'mon, OpenBSD. You can download faster!
[07:34] <eto> i did export CC=/usr/local/bin/egcc the build dies with same error
[07:36] <halorgium> also, learning when to get a faster internet connection is good too :P
[07:36] freshtonic has joined the channel
[07:37] <Validatorian> anyone have node running in nginx well, and willing to share how they integrated it (with code examples!)? :)
[07:37] <halorgium> Validatorian: as a static module?!
[07:38] <Validatorian> halorgium: Not initially, no -- basically, 99% of the pages that are going to be on my app will be generated once from node, and then they can be cached forevermore, as they are only for historical reference
[07:38] <Validatorian> but 1% of the site will be live-data, using websockets or whatever the flavor of the month is at that point
[07:39] <halorgium> Validatorian: and you can't just use files + nginx?
[07:39] <halorgium> or is that what you were wanting to know?
[07:39] <halorgium> where $code == nginx.conf?
[07:40] <_announcer> Twitter: "Real-time Collaborative Editing with Web Sockets, Node.js &amp;amp; Redis  http://phpc.in/i9sd7o shared by @onlyPHP"-- phpcamp. http://twitter.com/phpcamp/status/14819972565
[07:40] <Validatorian> I just installed nginx a couple mins ago, I'm not too familiar with it. Do you mean generating the static html from node, then just referencing it with nginx?
[07:41] <halorgium> Validatorian: yer, nginx can simply serve a directory of static files
[07:42] <halorgium> e
[07:42] <Validatorian> okay, well how about dynamic pages then -- where I will be pulling info from sites and displaying the data in real-time
[07:43] <halorgium> Validatorian: it can also proxy through to backends
[07:44] <halorgium> though, it has been shown that serving files is not slow with node
[07:44] <Validatorian> but node is still a bit unstable, and this needs to be pretty stable
[07:45] <Validatorian> the nginx will mostly just be a 'dumbwaiter' for the live pages, just filling the role of an http server, and then it will act as a static file server
[07:46] <halorgium> ah, so node is a cache-filler?
[07:46] <Validatorian> yep
[07:47] <Tim_Smart> I'm using node as a static file server on localhost
[07:47] <Tim_Smart> It's nice to have all the routing in one place
[07:48] <Validatorian> Tim_Smart: howtonode is just using node, right?
[07:49] <Validatorian> the other stipulation is that I need good auth, as these pages will be restricted access on a user level
[07:49] <halorgium> hrm, someone should tell creationix to not send gzip by default ;)
[07:50] virtuo has joined the channel
[07:52] <Aria> eto: try CC=/usr/local/bin/egcc ./configure --check-c-compiler=/usr/local/bin/egcc 
[07:54] <eto> Could not load the tool '/usr/local/bin/egcc'
[07:54] <Aria> Huh. Weird!
[07:54] <eto> Could not load the tool '/usr/local/bin/egcc' in ['/home/eto/node-v0.1.96/tools/wafadmin', plenty of references to some waf tool
[07:55] <eto> and stacktrace
[07:55] <eto> waf is the build tool?
[07:55] <Aria> Yeah
[07:56] <eto> probably i should read it's documentation
[07:56] <Aria> CXX=eg++ CC=egcc ./configure
[07:56] <Aria> There we go.
[07:56] pdelgallego has joined the channel
[07:56] <Aria> And change python to python2.6 in my case, in the Makefile that results
[07:56] rictic has joined the channel
[07:59] jedschmidt has joined the channel
[08:01] <_announcer> Twitter: "Interesting in many aspects: http://bit.ly/9Feoiq WebSockets, Node.js and a nice concept for real-time collaboration"-- bishoph. http://twitter.com/bishoph/status/14820700060
[08:03] <Aria> And you'll need libexecinfo
[08:03] <eto> hmm eg++ doesnt exist
[08:03] <eto> pkg_info -L gcc-4.2.4p2
[08:04] <Aria> g++
[08:04] <Aria> Not gcc
[08:04] <Aria> (obsd has separate packages for them)
[08:04] <eto> aha thx
[08:04] <Aria> Sure thing
[08:06] felixge has joined the channel
[08:07] <eto> adding g++
[08:08] <eto> man i hope i'll get it working
[08:10] <Aria> Me too. It's still compiling for me.
[08:11] <Aria> Ooh. Beware that you need the CC and CXX variables set at make time too
[08:11] <Aria> Not just at configure time
[08:11] <Aria> Stupid waf. Stupid v8.
[08:12] stagas has joined the channel
[08:12] <Aria> Anyway. I'm off to bed.
[08:12] <Aria> Night!
[08:12] <eto> thx Aria for everything
[08:12] <Aria> Sure thing!
[08:14] felixge_ has joined the channel
[08:14] felixge_ has joined the channel
[08:18] <_announcer> Twitter: "Real-time Collaborative Editing with Web Sockets, Node.js & Redis: Few months ago, I mentioned I’m developin... http://bit.ly/cd6rhx"-- GlobalTechNews. http://twitter.com/GlobalTechNews/status/14821248273
[08:21] dgathright has joined the channel
[08:21] jan____ has joined the channel
[08:22] N` has joined the channel
[08:25] <_announcer> Twitter: "Installing Redis and updating NodeJS - getting ready for some realtimeness"-- Pelle Wessman. http://twitter.com/voxpelli/status/14821499020
[08:26] <eto> huh
[08:27] <eto> now i end at same eroor at http://pastebin.com/jv2U9hr3 in eio
[08:28] jan____ has joined the channel
[08:28] jan____ has joined the channel
[08:28] rnewson has joined the channel
[08:29] jan____ has joined the channel
[08:29] mitkok has joined the channel
[08:31] jan____ has joined the channel
[08:31] romainhuet has joined the channel
[08:33] markwubben has joined the channel
[08:34] hammerdr has joined the channel
[08:39] kjeldahl has joined the channel
[08:46] <mscdex> eto: you need to install libexecinfo
[08:46] <eto> hmm latest "tunk" fails too ares_expand_string.c
[08:46] <eto> waaaah i forgot about that
[08:49] <mscdex> eto: also, are you trying to compile node v0.1.96 or head?
[08:49] <eto> i installed libexecinfo
[08:49] <eto> i try both
[08:49] <eto> both fail
[08:49] <mscdex> ok, because 96 doesn't work on openbsd, it needs some patching
[08:50] <eto> if head is this http://github.com/ry/node
[08:50] <mscdex> yes
[08:50] <_announcer> Twitter: "http://tinyurl.com/35a3hek  YUI Theater — Ryan Dahl: “Introduction to NodeJS” (58 min.) » Yahoo! User Interface Blog (YUIBlog)"-- onion_soup. http://twitter.com/onion_soup/status/14822300012
[08:50] <eto> well on head i get Waf: Leaving directory `/home/eto/ry-node-8840ce3/build'
[08:50] <eto> Build failed:  -> task failed (err #1):
[08:50] <eto> {task: cc ares_expand_string.c -> ares_expand_string_1.o}
[08:50] jan____ has joined the channel
[08:51] <mscdex> if there's details, can you gist them?
[08:51] <eto> gist?
[08:51] <mscdex> or pastebin
[08:51] <eto> excuse me but i don't know that word
[08:51] <eto> i am pastebinning w8
[08:51] <mscdex> gist is gist.github.com, similar to pastebin
[08:52] jan____ has joined the channel
[08:54] <eto> http://pastebin.com/zt5nnmS9 -96
[08:55] <eto> http://pastebin.com/CUMWu8g3 -head
[08:55] <eto> could it be that i am on 4.6 and nod the latest 4.7?
[08:56] <mscdex> ah... i'm guessing you're on 32-bit?
[08:57] Daniel_Paulus has joined the channel
[08:58] TomY has joined the channel
[08:59] hellp has joined the channel
[09:02] Nohryb has joined the channel
[09:03] mAritz has joined the channel
[09:05] <mAritz> goood morning #node.js
[09:06] <Daniel_Paulus> morning mAritz
[09:07] adulteratedjedi has joined the channel
[09:08] <micheil> Anyone know if Phazm / Valid is about?
[09:11] riq has joined the channel
[09:11] screen-x has joined the channel
[09:11] <eto> mscdex yes
[09:12] <mscdex> ok, that's why it doesn't work then. i only submitted a patch for 64-bit and forgot to do one for 32-bit
[09:12] <mscdex> let me create a patch for you
[09:12] <eto> pIII katmai dualcpu - could that be issue
[09:12] <eto> ?
[09:12] <eto> ah i see
[09:12] <eto> would you be so kind?
[09:15] <micheil> hmm.. how should the JS API for get uid from username and get gid from group name look?
[09:17] <Daniel_Paulus> anyone know what happened with multipart? I need to require the library but can't find it.
[09:18] admc has joined the channel
[09:20] screen-x has joined the channel
[09:20] Nohryb has joined the channel
[09:29] <halorgium> micheil: somewhat like the C apis?
[09:29] <micheil> well, where would they go in node itself?
[09:29] <halorgium> a new module?
[09:29] <micheil> they aren't really fs related (despite using libeio)
[09:30] <halorgium> etc.getuid() ?
[09:30] <micheil> and there is already code for setting / getting the processes uid / gid in the core node.cc
[09:30] <micheil> module
[09:31] <halorgium> ACTION can't use his machine, shrinking his FS
[09:31] <_announcer> Twitter: "http://xmppjs.prosody.im/ for all your #node and #xmpp needs. Not sure exactly  when I became a JS fanboy, but very keen to try this out."-- Dick Davies. http://twitter.com/rasputnik/status/14823720112
[09:32] <micheil> yeah, to implement anything that touches the disk, we need to use libeio, and if libeio doesn't have it, it's gotta be implemented using libeio's EIO_CUSTOM
[09:32] <halorgium> micheil: i'm basing my opinion on ruby's etc lib
[09:32] xla has joined the channel
[09:32] <micheil> hmm..
[09:32] <micheil> It almosts sounds like the thing to go in sys
[09:32] <halorgium> which has getpwent, getpwuid and all the set variants
[09:32] <micheil> sys.getuid(name)
[09:33] <micheil> because it's a system method.. although, sys module in node is for node related stuff like puts, log, inspect, etc.
[09:33] <micheil> ryah: thoughts if you're about.
[09:33] <halorgium> ACTION notes that sys is a pretty ambitious name ;)
[09:34] <halorgium> micheil: unlikely, it is 2:30 over here :P
[09:34] <micheil> :/
[09:34] <micheil> well, I mean, they are system functions, aren't they? there's no other better name for them
[09:35] <halorgium> micheil: 'etc' is ruby's way of saying "stuff which is 'user/group' related"
[09:35] <micheil> hmm..
[09:35] <micheil> what's that c module called..
[09:35] <halorgium> in linux?
[09:35] <micheil> sec
[09:35] <halorgium> nss?
[09:36] <halorgium> pam?
[09:36] <micheil> rather, the headers: pwd.h sys/types.h
[09:36] <halorgium> pwd would be confusing :P
[09:36] <micheil> yes
[09:37] <micheil> I'm not sure why it's even called pwd in C
[09:37] <halorgium> password?
[09:37] <micheil> getgrgid is even worse.
[09:37] <micheil> at least it's header is grp.h
[09:38] <Validatorian> why doesn't github have feeds for trending/new/updated repos? sheesh.
[09:38] <_announcer> Twitter: "Trying to figure out exactly where in the API of node.js that I should add in getgrgid and getpwuid (from the C api.)"-- Micheil Smith. http://twitter.com/miksago/status/14823959606
[09:39] <micheil> Validatorian: try grabbing it from Repopular
[09:39] <micheil> it's probably there
[09:39] <mscdex> eto: ok, patch your copy of head with this: http://gist.github.com/415637
[09:39] <mscdex> eto: and see if it compiles fine after that
[09:40] <eto> i will try my best , as i've never patched before, i am quite new to this
[09:41] <mscdex> eto: cd to the root of your node source tree, then do: patch -p1 < nameofpatchfile.patch
[09:42] <halorgium> mscdex: use raw ;)
[09:42] <halorgium> curl http://gist.github.com/raw/415637/cbfa2a7b9e06141228ec395f093563cf4644dbad/openbsd-i386-nodejs.patch |patch -p1 ;)
[09:42] <mscdex> meh
[09:42] <mscdex> there's always more than one way to something
[09:42] <mscdex> ;-)
[09:43] <halorgium> mscdex: sooo true ;)
[09:45] maushu has joined the channel
[09:53] <eto> patch: **** malformed patch at line 863:  namespace node {
[09:53] <eto> huh
[09:53] <eto> can i undo the patch?
[09:54] <micheil> mm.. git reset --hard HEAD
[09:54] <micheil> possibly
[09:55] <eto> okay maybe  i messed up something untarring
[09:56] <eto> i should get git and use halorgium's way
[09:57] fermion has joined the channel
[10:02] <eto> i am checking out the repo like this git clone git://github.com/ry/node.git
[10:02] <eto> is that right?
[10:03] <mscdex> that's fine
[10:03] <mscdex> i just hacked that patch from the old patch, it applied it though
[10:03] <mscdex> now try recompiling
[10:04] <eto> well maybe i messed somewhere
[10:04] fermion has joined the channel
[10:04] <eto> well checkout ended
[10:04] <mscdex> oh wait, one moment
[10:04] <eto> it is now node directory at HEAD?
[10:05] <mscdex> yes,  git clone git://github.com/ry/node.git is all you need
[10:05] <mscdex> let me modify the patch
[10:05] <eto> okay
[10:07] TobiasFar has joined the channel
[10:07] <_announcer> Twitter: "wrote a minimalistic replacement for cap/vlad for #nodejs... github soon. [capistrano is nice but bloated with stuff i don't need]"-- Francisco T. http://twitter.com/frank06/status/14824989873
[10:10] quirkey has joined the channel
[10:10] <_announcer> Twitter: "@iamdanw yeah, Node JS and jQuery have been conspiring to have the same effect on me too..."-- Chris Garrett. http://twitter.com/chrsgrrtt/status/14825111825
[10:11] ewdafa has joined the channel
[10:12] <mscdex> eto: ok, re-download the patch here: http://gist.github.com/raw/415637/a68cb4bbd43c9cc9d3707e84d9e4c52e876d97b9/openbsd-i386-nodejs.patch
[10:12] <mscdex> eto: then patch a clean copy of node head
[10:12] <mscdex> eto: then recompile
[10:14] <_announcer> Twitter: "googling 'nodejs + geolocation stuff' - with limited luck."-- Janos P Toth. http://twitter.com/tjp/status/14825237703
[10:17] <mscdex> someone should tell Janos about the node-geoip :P
[10:17] <eto> Hunk #1 succeeded at 1.
[10:17] <eto> done
[10:18] <mscdex> eto: ok, then: ./configure && make
[10:18] <eto> jj
[10:18] <eto> 'configure' finished successfully (14.479s)
[10:18] <_announcer> Twitter: "@tjp perhaps, try this query http://buzzzy.com/search?q=nodejs"-- william fischer. http://twitter.com/williamfischer/status/14825390367
[10:19] <eto> mscdex some warning but gost past 20+ already
[10:19] <mscdex> as long as it doesn't error out, you should be fine
[10:19] <eto> after that should i do make test?
[10:19] MattJ has joined the channel
[10:19] <mscdex> you can if you want
[10:20] <mscdex> and then 'make install' to install ;-)
[10:20] <eto> hehe
[10:22] rnewson has joined the channel
[10:23] yatiohi has joined the channel
[10:25] stagas has joined the channel
[10:26] <_announcer> Twitter: "@tjp http://github.com/strange/node-geoip #node.js"-- Graphnode. http://twitter.com/graphnode/status/14825663058
[10:27] <mscdex> hmm
[10:28] <mscdex> i guess i should have tried to compile on my openbsd installation before completing that patch hah
[10:29] <eto> hah
[10:29] <eto> well it's still building
[10:29] <eto> in any case i can return to previous state using that: git reset --hard HEAD
[10:29] <eto> ?
[10:30] <mscdex> no, you won't need to do that, just need to add another unrelated patch
[10:30] <eto> ok
[10:31] <eto> well both cpus are at 50-100%
[10:31] <eto> it is 550hz machine so i guess it'll take a while
[10:33] <mscdex> hehe, well feel free to kill the build process
[10:33] <mscdex> sorry about that
[10:33] <mscdex> i forgot about the patch ryah made earlier for head
[10:34] <mscdex> cd to deps/v8 then download and execute this patch: http://s3.amazonaws.com/four.livejournal/20100526/0001-Implement-OS-ReleaseStore-for-OpenBSD.patch
[10:35] <mscdex> then if the patch succeeded, recompile again :S
[10:35] <eto> how can i kill?
[10:35] <mscdex> ctrl-c i guess
[10:36] <eto> can i send ^C to it?
[10:36] <eto> okay ill try
[10:36] <eto> Interrupted
[10:36] <eto> okay i do make clean to be just sure
[10:36] <mscdex> ok
[10:38] <eto> the patch file contains also email address can i give it to diff directly? or do i need tos trip it?
[10:38] <eto> *strip
[10:39] <mscdex> you should just be able to patch normally using something like: patch -p1 < 0001-Implement-OS-ReleaseStore-for-OpenBSD.patch
[10:39] <mscdex> from deps/v8
[10:39] <eto> Hunk #1 succeeded at 94.
[10:39] <eto> Hmm...  Ignoring the trailing garbage.
[10:39] <eto> done
[10:39] <eto> okay patched
[10:39] <mscdex> cool
[10:40] <eto> so now to node's root and make again
[10:40] <mscdex> yeap
[10:40] <eto> okay building ...
[10:42] <maushu> ACTION dances.
[10:43] <eto> why maushu?
[10:43] <maushu> Why not?
[10:43] <eto> oh, i thought ypo achieved something awesome
[10:43] <eto> *you
[10:43] <maushu> Not really.
[10:44] <maushu> Just fixed a bug at work.
[10:44] <maushu> Not enough to make me happy though.
[10:44] <eto> ;)
[10:44] <mscdex> heh, that reminds me of that interview with that woman in the don't copy that floppy video
[10:45] <maushu> Btw, today I saw the living proof of http://dagnyosk.9gag.com/gag/21682/ 
[10:45] <mscdex> "you might hear me yelling down the hall, it's working it's working!" :P
[10:46] <maushu> I have seen many types of girls which fit to this graph but I thought it was just a fluke.
[10:46] <maushu> I mean, seriously, how could a hot & nice and specially *smart* girl date a asshole?
[10:47] <maushu> Well, I met today a girl which fit all three characteristics, guess what?
[10:48] <mscdex> she knows about the graph?
[10:48] <mscdex> :P
[10:48] <maushu> Nah, she was dating a jealous asshole.
[10:48] <maushu> It doesn't make sense.
[10:48] <maushu> They don't make sense.
[10:49] <mscdex> heh
[10:49] <halorgium> blah, someone tell me a reasonable http lib abstraction on current node ;)
[10:50] <halorgium> all of the ones i've tried are either using process.mixin or http_old :(
[10:50] <maushu> Well, they should!
[10:51] <maushu> Everyone knows the oldies rock.
[10:52] <maushu> ...what do you mean by http lib abstraction anyway?
[10:53] <maushu> halorgium: Have you checked http://wiki.github.com/ry/node/modules ?
[10:53] <halorgium> maushu: yer, gave up ;)
[10:53] <halorgium> maushu: i know how to build my own on node + http.js
[10:53] <halorgium> but i was hoping ;)
[10:53] <halorgium> ACTION is done ...
[10:55] <maushu> ...
[10:55] <maushu> I *still* don't know what you want.
[10:56] <halorgium> maushu: oh, didn't see you intermediary message
[10:56] <halorgium> something a little more high-level than raw http.js
[10:56] <maushu> ...
[10:56] <maushu> express?
[10:57] <halorgium> maushu: client side
[10:57] <maushu> Ah, wait a sec.
[10:57] <maushu> http://github.com/billywhizz/node-httpclient
[10:57] <maushu> Thats the only one I know.
[10:57] <halorgium> maushu: yer, http_old :)
[10:58] <eto> 'build' finished successfully (10m4.212s)
[10:58] <maushu> Drat.
[10:58] <eto> testing ...
[10:58] <maushu> halorgium: Let you be warned ryah might change the http client. A lot.
[10:59] <halorgium> maushu: heh, i've already dealt with several iterations ;)
[10:59] <eto> huh some errors
[10:59] <halorgium> hence my interest
[10:59] <eto> mscdex are you interested in dump later?
[10:59] <mscdex> eto: what dump?
[11:00] <eto> of the test suite
[11:02] <mscdex> nah
[11:02] <mscdex> it only failed 1 for me
[11:02] <maushu> ...it failed one...
[11:02] <maushu> wat.
[11:02] <mscdex> heh
[11:03] Nohryb has joined the channel
[11:07] <_announcer> Twitter: "Great time pairing w @jamescarr on #nodejs BDD w watchr & jspec. Lots of wheel-spinning but left w 1 working spec. Will use NoSpec next time"-- Mario Aquino. http://twitter.com/MarioAquino/status/14827235082
[11:07] <eto> mscdex maushu is this kosher? http://pastebin.com/cLcJYcZc
[11:09] <maushu> What the hell happened there.
[11:09] <mscdex> yeah
[11:10] <mscdex> the crypto fails are because you didn't have openssl installed
[11:10] <eto> hmm it says no openssl
[11:10] <eto> isn't it by default?
[11:10] <mscdex> and the other error is because you didn't have ab installed
[11:10] <mscdex> eto: no
[11:10] <eto> okay i will install openssl then
[11:10] <mscdex> it should have shown you that when you ran ./configure
[11:10] <eto> i guess i will need to rebuild
[11:11] <mscdex> regarding openssl
[11:11] <eto> well there was plenty of thing with off but it didn't say fail
[11:11] <mscdex> right, it's optional
[11:11] <eto> more over what is ab?
[11:11] <mscdex> it just means you can't do https stuff
[11:11] <mscdex> ab is the apache benchmarking tool
[11:12] <mscdex> it's used in the http response test
[11:12] <eto> ah i remeber i read about it
[11:12] <eto> 1  p5-Crypt-OpenSSL-Bignum-0.04p0     2  p5-Crypt-OpenSSL-DSA-0.13p2     3  p5-Crypt-OpenSSL-RSA-0.25p0     4  p5-Crypt-OpenSSL-Random-0.04p0
[11:12] <eto> which one?
[11:12] <mscdex> none of those
[11:13] <eto> aha that are the ones pkg_find suggested
[11:13] <maushu> hey ryah, you fixed that setEncoding problem. Thanks!
[11:13] <mscdex> the openssl dev packages may not be in the repo
[11:13] derbumi has joined the channel
[11:16] <halorgium> maushu: he fixed you hours ago, remember?
[11:16] <_announcer> Twitter: "LakTEK – Real-time Collaborative Editing with Web Sockets, Node.js &amp; Redis - (Lakshan Perera) http://goo.gl/V9by excellent work"-- papyromancer. http://twitter.com/papyromancer/status/14827635890
[11:18] <maushu> halorgium: Don't remind me!
[11:18] <maushu> I almost lost it!
[11:18] <halorgium> maushu: so true ;)
[11:22] <eto> mscdex like dev libraries?
[11:23] <mscdex> eto: yeah. i couldn't find any either as far as i could see
[11:24] <mscdex> eto: you could always compile openssl from scratch
[11:24] <maushu> I need crossbrowser websockets.
[11:24] screen-x has joined the channel
[11:24] <maushu> Anyone knows a transparent library?
[11:24] <mscdex> maushu: flash websocket ;-)
[11:24] <maushu> I know we talked about this yesterday.
[11:24] <maushu> The whole websocket -> flash -> comet
[11:25] <mscdex> well native and flash are the only two ways to do "websockets"
[11:25] <maushu> There is also java.
[11:25] <maushu> And comet, with lots and lots of hacking and slashing.
[11:26] <mscdex> it still wouldn't be the same with xhr or whatever other solution, since it's still request and response
[11:27] <mscdex> maushu: http://jwebsocket.org/ -- maybe that will help you as far as Java goes
[11:27] <maushu> I don't want Java, I just said java as the devil's advocate.
[11:28] <mscdex> well, but it is another option that a good number of people have installed
[11:29] <mscdex> anyway, why do you specifically need websockets?
[11:29] <eto> huh i don see ab in packages either
[11:30] <mscdex> eto: it comes with Apache i think
[11:31] <eto> apache 1.3 is by deafult in openbsd i think
[11:32] Tim_Smart1 has joined the channel
[11:33] <mscdex> old
[11:33] <mscdex> :P
[11:33] <_announcer> Twitter: "YUI Theater - Ryan Dahl: “Introduction to NodeJS” (58 min.) - http://su.pr/2NDMjF"-- Richard Laksana. http://twitter.com/rlaksana/status/14828335996
[11:34] <mscdex> eto: it may only come with apache 2.x, i dunno
[11:35] <eto> thanks
[11:38] <_announcer> Twitter: "[DMathieu] Introduction to node.js http://bit.ly/bYmN61" [fr]-- Damien Mathieu. http://twitter.com/dmathieu/status/14828556137
[11:52] <_announcer> Twitter: "We've no (technical) books in the office. Any recommendations to correct this :)? #js #php #web #nodejs #mongodb #sql"-- Andy Dawson. http://twitter.com/AD7six/status/14829226210
[12:04] <mscdex> hmm
[12:06] <mscdex> eto: have you compiled and installed openssl yet? if not, can you check and see if /usr/lib/libssl.a and /usr/include/ssl/ssl.h exist?
[12:10] sudoer has joined the channel
[12:12] Neil_ has joined the channel
[12:13] <mscdex> eto: if you do have those files, then all you need to do is edit the wscript in the root of the node source tree and change the line:       libssl = conf.check_cc(lib='ssl',   to:       libssl = conf.check_cc(lib=['ssl', 'crypto'],
[12:14] <mscdex> eto: then if you reconfigure it should show yes for the SSL_library_init check, and if you recompile you will have ssl support built in (the crypto/ssl tests pass)
[12:20] <_announcer> Twitter: "http://tinyurl.com/378lnmk  LakTEK – Real-time Collaborative Editing with Web Sockets, Node.js &amp; Redis - (Lakshan Perera)"-- onion_papa. http://twitter.com/onion_papa/status/14830565199
[12:24] <stagas> wait is that the reason i'm getting errors on crypto.js on some modules? because of not having installed ssl?
[12:25] fyorl has joined the channel
[12:26] <fyorl> I was wondering if node still has a multipart/form-data parser module or, if not, there's another easy way of dealing with it?
[12:27] <mscdex> fyorl: there's always modules like http://github.com/felixge/node-formidable
[12:27] <mscdex> stagas: maybe. depends on what output you saw when you did ./configure
[12:28] <fyorl> mscdex: Thanks, that looks like it could be useful.
[12:28] <fyorl> I was just confused is all, I remember there being a multipart module in node at one point and just wondered where it had gone.
[12:31] <stagas> mscdex: yep all ssl checks are: not found. also execinfo, port.h, event.h, kqueue not found. what should i do?
[12:32] <mscdex> stagas: do you have /usr/include/ssl/ssl.h ?
[12:32] <mscdex> stagas: what platform are you running on?
[12:32] <stagas> ubuntu
[12:32] <mscdex> ah ok
[12:33] <stagas> no such dir /usr/include/ssl
[12:33] <stagas> ..
[12:33] <mscdex> ok
[12:33] <mscdex> sudo apt-get install libssl-dev
[12:34] <stagas> thanks. should i ./configure and make again on node?
[12:34] <mscdex> then see if the ./configure shows yes for SSL_library_init
[12:35] <stagas> ok they're yes
[12:35] <mscdex> ok, you should be good to go now
[12:35] <micheil> alternatively you can do: ./configure --without-ssl
[12:36] <mscdex> micheil: right, but he was having problems with modules using crypto
[12:36] <micheil> ah, okay
[12:36] <stagas> thanks :)
[12:37] <stagas> what about those others, execinfo  port.h  sys/event.h  kqueue? are they required?
[12:37] <stagas> they show not found also
[12:37] <mscdex> that's fine. those are for other platforms
[12:37] <stagas> i see
[12:38] Ori_P has joined the channel
[12:38] TheEnd2012 has joined the channel
[12:40] <fyorl> hmm, formidable is trying to import a module called 'utf8decoder' which doesn't exist
[12:40] <fyorl> any idea what that's about?
[12:40] <fyorl> the git repo seems fairly up-to-date, I assumed it worked with the current version of node
[12:40] <micheil> hmm...
[12:40] <micheil> that module does exist
[12:41] <micheil> (node HEAD has it)
[12:41] <stagas> hmm still /usr/include/ssl doesn't exist and I still get errors on crypto
[12:41] <micheil> I don't know about the v0.1.96 tag
[12:41] <fyorl> maybe I'm the one out-of-date
[12:41] <mscdex> fyorl: you need at least 0.1.96
[12:42] <fyorl> thanks
[12:42] <micheil> yeah, 0.1.96 has it
[12:42] <fyorl> lets hope upgrading doesn't break the mongodb drivers
[12:42] <mscdex> stagas: sorry, for ubuntu it should be /usr/include/openssl
[12:43] <micheil> fyorl: I'll just test mongo-native one sec
[12:43] <micheil> so far most tests pass
[12:43] <mscdex> stagas: if you do this, what are the results?: dpkg --get-selections | grep libssl
[12:44] <micheil> fyorl: mongo-native tests pass
[12:44] <stagas> ok I guess the crypto errors then are unrelated to ssl.. specifically it's nun i'm trying to run
[12:44] <stagas> mscdex: it says install on two libssl things
[12:45] <micheil> node-mongodb is broken due to a missing module
[12:45] <mscdex> stagas: try doing 'make test' and see if you get any tests that fail mentioning crypto
[12:45] <stagas> on what? node?
[12:46] <stagas> or nun
[12:46] <micheil> stagas: no
[12:46] <micheil> in the node-crypto repo
[12:46] <fyorl> I'm pretty sure I'm using -native
[12:46] <fyorl> so that's cool, thanks again
[12:46] <mscdex> stagas: in the root of your node source tree
[12:46] <micheil> or both?
[12:47] <mscdex> stagas: you did 'make' again after you installed libssl-dev right?
[12:47] <stagas> yes
[12:47] <mscdex> ok
[12:48] <micheil> did you run ./configure after installing libssl-dev?
[12:48] <stagas> yes
[12:48] <micheil> hm...
[12:48] <stagas> i get a few errors but not crypto
[12:49] <micheil> hmm.. check for openssl
[12:50] <stagas> make test shows this: http://gist.github.com/415765
[12:50] mjijackson has joined the channel
[12:50] <_announcer> Twitter: "Antipodean: Node.js chat server in CoffeeScript - › I’ve been checking out [CoffeeScript] recently. It’s... http://tumblr.com/xgxajkcn1"-- Jack Russell SC. http://twitter.com/jackhq/status/14832127259
[12:50] <stagas> openssl seems to work
[12:50] <micheil> stagas: first error: apt-get install curl
[12:51] <micheil> second error is odd
[12:51] <mscdex> yeah, no crypto tests fail, so it's installed correctly
[12:51] <micheil> third error..
[12:51] <mscdex> and compiled in
[12:51] <mscdex> the third error is because ab isn't installed
[12:52] <micheil> apt-get install apache2-utils
[12:52] <mscdex> but yeah, the second error seems odd
[12:52] <micheil> (which also gives a few ssl libs)
[12:53] erichocean has joined the channel
[12:53] <micheil> Hi erichocean 
[12:53] <erichocean> hi
[12:53] <erichocean> is anyone having issues with WebSockets and node?
[12:53] <micheil> what issues?
[12:53] <erichocean> I'm getting an "invalid chunk" error pretty consistently
[12:54] <erichocean> from both WebKit and Chrome
[12:54] <micheil> I'm not getting that.
[12:54] <erichocean> on Mac OS X
[12:54] <erichocean> 10.6
[12:54] <micheil> I'm on os x.
[12:54] <micheil> 10.6
[12:54] <erichocean> what release are you on?
[12:54] <erichocean> of node..
[12:54] <micheil> (but then again, I'm using my own websocket server)
[12:54] <micheil> HEAD
[12:54] towski has joined the channel
[12:55] <micheil> so far I haven't yet seen the need for using chunks for websockets
[12:55] <mscdex> stagas: FWIW on 9.10 no tests fail on v0.1.96. what version are you running again?
[12:55] <erichocean> hmm, maybe this commit fixed it: http://github.com/ry/node/commit/895f89d62a63e02bd936deebafb494664bf4e248
[12:55] <stagas> ok errors 1 and 3 fixed. still nun fails :( 
[12:55] <stagas> v0.1.96-8-g3768aaa
[12:55] <stagas> http://github.com/akaspin/nun/issues#issue/2
[12:55] <felixge_> bah, why is curl such a bitch
[12:55] <micheil> erichocean: maybe, but any decent websocket library doesn't use those headers
[12:56] derbumi has joined the channel
[12:56] <erichocean> I'm using NodeRed ToT
[12:56] <micheil> erichocean: because using the new upgrade event, you get access to the raw socket
[12:56] <erichocean> I'll try with latest node
[12:58] <stagas> I guess it doesn't have anything to do that I'm using portable ubuntu on windows?
[12:59] <micheil> stagas: it could./
[12:59] <micheil> which version?
[12:59] <micheil> 10.04?
[12:59] <micheil> 9.10?
[12:59] <stagas> i think 9.10
[12:59] <stagas> yep
[13:02] <eto> mscdex 'build' finished successfully (2m2.308s)
[13:02] <mscdex> hrm, i don't see the "nun" module anywhere
[13:03] <stagas> http://github.com/akaspin/nun
[13:03] <mscdex> stagas: i downloaded that, but don't see it
[13:04] <stagas> there is no nun.js
[13:05] <stagas> in case you were looking for that
[13:05] <mscdex> then how does require('./node'); work?
[13:05] <mscdex> er
[13:05] <mscdex> './nun' rather heh
[13:06] <stagas> the folder is on the same dir as testing.js
[13:06] <stagas> her
[13:06] <stagas> here
[13:07] <erichocean> micheil: http://pastie.org/979832
[13:08] <erichocean> that's with node ToT and NodeRed ToT
[13:08] <maushu> ...pastie? In my #Node.js?!
[13:08] <stagas> I guess it reads ./nun/index.js
[13:08] <mscdex> stagas: ah ok, i see. it works now
[13:09] <erichocean> is there a better WebSocket library than the one included in NodeRed?
[13:09] <mscdex> stagas: although, i'm running node v0.1.96
[13:09] <mscdex> stagas: not sure if that has anything to do with it
[13:10] gwoo has joined the channel
[13:10] <stagas> it works ok for you? you don't get the error I'm getting?
[13:12] davidsklar has joined the channel
[13:12] <eto> http://pastebin.com/iP6P13SB
[13:12] <eto> only test which fail are ab - this i will ignore for now, what about ipc and memory?
[13:13] <mscdex> stagas: no
[13:13] Ori_P has joined the channel
[13:14] <mscdex> eto: the ipc fail seems a bit odd, but the other two are ok
[13:14] <eto> hmm
[13:14] <eto> yeah that ipc seems odd to me too
[13:14] <micheil> erichocean: I'm biased, but yes
[13:15] <eto> could it be becuse of privileges?
[13:15] <eto> there is some 80, is that a port number?
[13:15] <micheil> erichocean: I consider the library that's bundled with NodeRed to be a hack, but that's once again, personal opinion
[13:15] <eto> ports below 1024 can be acessed by root only
[13:15] <erichocean> micheil: what would you use?
[13:15] <micheil> or by priviledged processes
[13:15] <eto> can i safely run make test with sudo privs?
[13:15] <micheil> erichocean: mine, of course. :P
[13:16] <micheil> told you I was biased.
[13:16] <mscdex> eto: that assert:80 is just referencing a line number
[13:16] <eto> ah okay
[13:17] <eto> well still might be some priv issue or not?
[13:17] <eto> can i try sudo?
[13:17] <mscdex> eto: sure, worth a try i suppose
[13:17] <stagas> fixed it
[13:18] <mscdex> stagas: ok, i tried with the head version of node and it still works with no problem
[13:18] <stagas> forgot to make install
[13:18] <stagas> :/
[13:18] <stagas> so it was ssl then
[13:18] <eto> hmm even with sudo the results are same
[13:18] <eto> goess something slightly broken
[13:19] <eto> but nevertheless  i am gonan to isntall it
[13:19] <mscdex> stagas: ah ok
[13:19] <maushu> Why is this kurokikaze person following me.
[13:19] <stagas> mscdex: thanks :)
[13:19] <eto> thank you mscdex, and thanks to Aria too
[13:19] <eto> thx very much guys
[13:21] <micheil> is node-crypto the defacto encryption / crypt library?
[13:25] derbumi has joined the channel
[13:26] <stagas> I updated my wiki on http://wiki.github.com/ry/node/installation-on-windows-xp-through-portable-ubuntu-tres with all those packages by default in apt-get in case other people have the same problems too..
[13:26] pjb3 has joined the channel
[13:27] bradleymeck has joined the channel
[13:27] jherdman has joined the channel
[13:27] <stagas> you think any other package is essential and not in ubuntu by default?
[13:28] <_announcer> Twitter: "ExpressJS - High performance, high class web development for Node.js -&gt; http://expressjs.com/"-- Ahmad Gozali. http://twitter.com/gozali/status/14834289213
[13:28] <mscdex> micheil: afaik node-crypto is separate/different than the crypto binding shipped with node
[13:28] <micheil> mscdex: yeah, but node-crypto is pretty much the standard library people are now using for base64 md5, sha, etc, right?
[13:28] <micheil> I need something to do base64 encoding and md5 sums for node-websocket-server
[13:29] <mscdex> micheil: node has its own crypto built-in, as long as you have openssl installed at compile time
[13:29] <micheil> re-read what I said.
[13:30] <_announcer> Twitter: "Must find time to look at Node.js properly"-- Jim Neath. http://twitter.com/jimneath/status/14834429744
[13:30] <mscdex> micheil: http://nodejs.org/api.html#crypto-228
[13:30] Ori_P has joined the channel
[13:30] <mscdex> you can do base64 and md5 with that
[13:31] <mscdex> no need for extra bindings
[13:31] <micheil> okay
[13:32] <micheil> hmm.. \
[13:32] <mscdex> stagas: not that i'm aware of
[13:32] <micheil> I wonder if compiling with --without-ssl will remove the crypto.js module
[13:34] JAAulde has joined the channel
[13:38] behmann has joined the channel
[13:40] sudoer has joined the channel
[13:42] joshbuddy has joined the channel
[13:43] Ori_P has joined the channel
[13:43] <_announcer> Twitter: "@michaelphines I guarantee Node.js is running at least JS 1.6. How is it choking?"-- Frederick Polgardy. http://twitter.com/polgardy/status/14835228183
[13:45] SamuraiJack_ has joined the channel
[13:47] <mscdex> heh, why doesn't he just do 'for (foo in bar)' ?
[13:47] <micheil> for in is slow anyway, iirc.
[13:48] <mscdex> yeah but isn't that doing the same thing as 'for each (foo in bar)' ?
[13:49] mjijackson_ has joined the channel
[13:50] <micheil> noty really
[13:50] <mscdex> that michaelphines couldn't get 'for each' to work, i think he needs to drop the 'each' part
[13:50] <micheil> I think for each in is really: {}.each or something
[13:50] <mscdex> for v8 anyway
[13:51] <micheil> yeah, you've gotta take the mozilla docs with a grain of salt
[13:51] <micheil> JavaScript 1.6 is mozilla's javascript engine
[13:51] <mscdex> it even says it's not a part of ecma on the mozilla page heh
[13:52] gf3 has joined the channel
[13:53] <mscdex> i wish there was a way for us non-twitter users to reply back to people that have issues like this
[13:53] kevwil has joined the channel
[13:53] <mscdex> ACTION glares at _announcer
[13:53] <micheil> mscdex: you're not a twitter user?
[13:53] <mscdex> :P
[13:53] <mscdex> no
[13:53] <micheil> fair enough
[13:53] hassox has joined the channel
[13:53] <mscdex> no use for it really
[13:53] <micheil> ACTION uses twitter instead of facebook.
[13:53] <micheil> I use it purely for a back channel and a news channel
[13:54] <mscdex> i only use facebook to keep in touch with old school mates and such, not posting status updates
[13:54] <micheil> I closed my facebook after various privacy concerns and the fact I had no need for it.
[13:55] <micheil> even though I'm part of the 15-26 age bracket that facebook is probably targeting
[13:55] <mscdex> i guess i don't have enough interesting things to tweet about
[13:55] ceej has joined the channel
[13:55] <micheil> ACTION goes back to reading about quantum physics
[13:55] <mscdex> heh
[13:55] <behmann> ACTION closed his facebook as well... there is just to much data in there that is open to datamining 
[13:55] <micheil> mscdex: just talk to people about what they tweet then
[13:55] <stagas> ACTION closed facebook also
[13:56] <stagas> ACTION waits for diaspora
[13:56] <stagas> :P
[13:56] <behmann> stagas: don't hold your breath ;)
[13:57] <behmann> the diaspora guys have a cool concept, but no prototype to show how it is different than any number of other options
[13:57] <micheil> I'm not sure why I can require crypto when I don't compile node with ssl support.
[13:58] <behmann> like opera unite
[13:58] <stagas> we should register *spora.com and dia*.com domain names now before they're popular and sell them afterwards
[13:58] <micheil> behmann: they also have plenty of money to waste in bonuses.
[13:58] <stagas> hehe
[13:59] <mscdex> too bad there isn't a ".ra" tld ;-)
[13:59] <micheil> quantum physics is weird..
[13:59] <mscdex> micheil: yep
[13:59] <behmann> true, but I wonder how much money they will have left after they send out stickers, button's, t-shrirts, and all the other stuff they promised to people who donated.... besides they are college kids... they've probably drank away 10% of their funding by now :P
[14:00] <micheil> exactly what I mean. :P
[14:00] <behmann> ha
[14:01] <mscdex> man, if only no.de wasn't taken by a domain harvester....
[14:01] <micheil> I tried to get that one.
[14:01] <micheil> I ended up getting: thenoded.com
[14:01] <micheil> which I really need to get round to finishing up on building
[14:02] <mscdex> i think "inthenode" would make a good domain name ;-)
[14:02] bpot has joined the channel
[14:02] <mscdex> puns ftw
[14:03] mikemike86 has joined the channel
[14:04] keyvan has joined the channel
[14:05] <maushu> mscdex: Two words: pun hell.
[14:06] <mscdex> maushu: nine
[14:07] <mape> mscdex: buy nodejs.com, he only wants $10.000 for it
[14:07] <mscdex> ten dollars?
[14:07] <ewdafa> haha
[14:07] <mscdex> ;-)
[14:07] <ewdafa> that's a steal!
[14:07] <mscdex> yeah, a steal of your entire bank account
[14:07] <mscdex> ;P
[14:07] <ewdafa> mmm, campers. always a source of joy
[14:08] <mscdex> ACTION shakes a fist at domain squatters
[14:10] <maushu> mape: Seriously?
[14:10] <mape> maushu: yeah
[14:10] <mape> I offered 60, he countered with 10000
[14:11] <maushu> Yeah right.
[14:11] <maushu> You should've countered with "fuck off".
[14:11] <mape> hehe no such button
[14:11] <maushu> No one should give him anything.
[14:11] <mscdex> a domain squatter took my first choice of domain name too
[14:12] <mscdex> but thankfully .net was available :P
[14:12] <maushu> It's because of the people that pay that they do this.
[14:12] <maushu> If no one paid and just ignored them this would stop.
[14:12] <erichocean> micheil: is there a wrapper for your library somewhere that makes it look like TcpServer?
[14:12] <_announcer> Twitter: "Just realized that #apache and #perl have been deprecated and replaced by #lighttpd #nginx #python #ruby and #nodejs over a few years."-- Julien Portalier. http://twitter.com/ysbaddaden/status/14837045412
[14:12] <micheil> erichocean: no.
[14:12] mjijackson has joined the channel
[14:13] <maushu> Besides, node.js not commercial, it doesn't make sense to use .com 
[14:13] bradleymeck has joined the channel
[14:13] <mscdex> it's not an organization either
[14:13] <ewdafa> maushu: it will never stop :(
[14:13] <mscdex> heh
[14:14] <maushu> He also created after node.js, I wonder if there any laws against this.
[14:14] <mscdex> i doubt it
[14:14] <mscdex> unless node.js is a trademark or something
[14:15] <maushu> ryah could probably make it one.
[14:15] <maushu> If he was the first one to use it...
[14:15] kriszyp has joined the channel
[14:16] mertimor has joined the channel
[14:17] mertimor has joined the channel
[14:17] nsm has joined the channel
[14:18] <stagas> mscdex: even so I think regarding domains it's the first one who grabs it. I don't think there is a law that can grab a domain from someone..
[14:18] <mape> in sweden there is
[14:18] <mape> Or well, for .se that is
[14:18] mertimor has joined the channel
[14:18] <stagas> that sucks :P
[14:19] <mape> hehe depends, good for most, bad for some
[14:19] <mscdex> http://www.bitlaw.com/internet/domain.html
[14:19] mertimor has joined the channel
[14:21] mertimor has joined the channel
[14:22] mertimor has joined the channel
[14:23] <stagas> lol peta.org People Eating Tasty Animals vs People for the Ethical Treatment of Animals
[14:23] mertimor has joined the channel
[14:23] <mape> node bundle for textmate.. ?
[14:24] smtlaissezfaire has joined the channel
[14:24] mertimor has joined the channel
[14:25] mertimor has joined the channel
[14:26] <stagas> - Has the domain name holder behaved in a pattern of registering and selling domain names without intending to use them in connection with the sale of goods or services? 
[14:26] <maushu> stagas: Yes.
[14:27] <stagas> how so then people just buy domains just to sell them all the time?
[14:27] mertimor has joined the channel
[14:27] <maushu> ...yes?
[14:28] mertimor has joined the channel
[14:28] <stagas> I guess someone has to file a dispute
[14:28] <maushu> I wonder if I could start a profitable domain selling company.
[14:29] <stagas> I'll file a dispute on you :P
[14:29] <mscdex> maushu: as long as it runs on node.js, then it's ok ;-P
[14:29] <maushu> Nah, I mean selling .com domains for 9 dollars.
[14:29] mertimor has joined the channel
[14:29] <stagas> lol
[14:29] <maushu> Godaddy sells them for 10 dollars.
[14:29] <mscdex> just become a registrar
[14:29] bolson has joined the channel
[14:30] <maushu> mscdex: Yes, but is it worth it?
[14:30] <mscdex> that's for you to decide heh
[14:30] <maushu> I mean, do I have the kind of face where a person would want to buy a domain?
[14:30] mertimor has joined the channel
[14:30] <maushu> My face -> :3
[14:31] <stagas> - How distinctive and famous is the trademark owner's trademark? -- Court: So you're a javascript file wanting nodejs.com ? :P
[14:31] mertimor has joined the channel
[14:32] <mscdex> there ought to be some country on an island or something that can register the "js" tld
[14:32] <mscdex> :P
[14:33] <micheil> it costs 100,000 to register a tld or more.
[14:33] <stagas> kickstarter !
[14:33] <mape> hehe.. yeah
[14:33] <mscdex> heh! let's pool some moneh
[14:33] <mscdex> and sponsorship.... from google!
[14:33] <mscdex> :P
[14:34] <mape> best xml parser for node?
[14:34] <mscdex> "dear google, please register the .js tld plz and let us have node.js kthxbai"
[14:34] <mape> tried node-xml and node-xml2object but got throw new Error("Cannot find module '" + request + "'");
[14:34] <mscdex> mape: i use polotek's libxmljs
[14:35] <_announcer> Twitter: "@pixelparty i got some crazy html5 canvas shit planned. and some node.js server side funkiness too."-- Leon Chism. http://twitter.com/leonc/status/14838453741
[14:36] <stagas> we'll give as prizes to the highest donators to register the first 5 domains, then the next 5 then the next 5
[14:36] <stagas> people will just fall for it
[14:37] <maushu> stagas: True.
[14:38] <maushu> Or just kick the diaspora guys in the nuts and take their money.
[14:38] <mape> So, anyone read large files with node? (trying to read 3MB of xml)
[14:38] <mape> Seems to take ages..
[14:39] <mape> But the callback fires..
[14:39] <maushu> Ages as in stopped ages or background ages?
[14:39] <mape> Oh, seems sys.puts(sys.inspect('string')) doesn't play
[14:40] <maushu> Are you using libxmljs? It's in C it should be fast.
[14:40] <mape> maushu: Ah no right now it is just fs.readFile
[14:40] <mape> but seems it was the inspect
[14:40] <mape> sys.puts it takes no time
[14:40] <mape> the callback firing that is
[14:41] SamuraiJack has joined the channel
[14:43] <mape> Hmm libxml.parseXmlString(data.toString()); only returns {}..
[14:46] <mscdex> well, as far as reading big files goes, you might be able to use the sax push parser and parse it as you read in a chunk of the file at a time
[14:46] <mscdex> that's how i used libxmljs for parsing when reading a stream of xml in node-poormansmysql
[14:46] <mape> mscdex: http://gist.github.com/415879
[14:47] <mape> inspecting arguments instead of xml gives {}
[14:48] <mape> anything obvious?
[14:48] <mscdex> hmm, let me give it a try
[14:48] <mape> the xml I'm trying to parse is http://www.systembolaget.se/Applikationer/Knappar/Press/Alla+Artiklar/
[14:48] mikeal has joined the channel
[14:48] bmesh has joined the channel
[14:50] aho has joined the channel
[14:51] bolson has joined the channel
[14:51] <_announcer> Twitter: "Realie preview with real-time editing, chat and playback. http://screenr.com/X2A - node.js + redis = beauty"-- CloudMarc. http://twitter.com/CloudMarc/status/14839456070
[14:52] <mape> Hmm the onStartElementNS does output arguments.. but shouldn't the onEndDocument return something
[14:52] <maushu> I don't know.. I like mongodb too.
[14:52] <maushu> redis is too much... ram.
[14:53] <mape> mscdex: Like the output I want is a json-object for easy use
[14:53] <ewdafa> well it is basically memcache with periodic saves
[14:56] <stagas> I think it does a lot more
[14:56] aho has joined the channel
[14:56] <maushu> mape: Stacks and lists.
[14:57] <maushu> I mean, ewdafa.
[14:57] Yuffster has joined the channel
[14:58] quirkey has joined the channel
[15:00] <mscdex> mape: onStartDocument and onEndDocument don't pass in any parameters
[15:01] <mscdex> to the callback
[15:01] <mape> Hmm, k so where do I get the final document?
[15:04] riq has joined the channel
[15:04] linusoleander has joined the channel
[15:04] stagas has joined the channel
[15:05] <linusoleander> Hello :)
[15:05] <stagas> hi
[15:06] <ceej> my last commit to GIT [master 2badc45] FUCK YOU IE6!!!!!!!!!!!!!!!!!
[15:07] <ceej> should be IE666
[15:07] <ceej> http://www.screencast.com/users/brainyone/folders/Jing/media/8e6e6c3e-0330-4dcf-af4a-9acc9f06f73a <--------- spent an hour trying to figure this crap out
[15:10] <Validatorian> micheil: you around?
[15:11] Aria has joined the channel
[15:11] <micheil> yup
[15:11] <Aria> Morning!
[15:11] <Validatorian> got your email re: getpwuit, getgrgid
[15:11] james has joined the channel
[15:13] jherdman has joined the channel
[15:14] <micheil> Validatorian:  == Jon?
[15:14] <micheil> righteo.
[15:14] <micheil> so many different nicks you have over there.
[15:15] <Validatorian> if I understand the question correctly, I would keep the expected format as similar as possible to the unix command, so I would guess:  fs.chown('/some/dir/', 'user:group', callback) -- though, I'm not sure how you would add the -R flag, if needed, and I'm sure there are other uses for chown...
[15:15] <micheil> okay, recursive stuff would be difficiult, I think
[15:15] <Validatorian> I'm probably not the best person to ask, my knowledge of node and *nix is quite limited :)
[15:16] <micheil> but the big challenge at the moment is just being able to use a string to represent user &|| group
[15:16] <Validatorian> wouldn't you be able to do this?
[15:16] <Validatorian> bah, 1s
[15:16] <micheil> if you've looked at the latest code for it, it's simply: fs.chown('some/path', user_id, group_id, callback);
[15:17] <micheil> it's able to be done, but requires an extra addition to libeio
[15:17] <micheil> so, I have to write an EIO_CUSTOM handler for the event
[15:18] <_announcer> Twitter: "node.JS API Documentation - node.JS v0.1.31 [del.icio.us] http://goo.gl/fb/9ml8B # nodejsapinodejs" [lv]-- kayros_81. http://twitter.com/kayros81/status/14840897123
[15:23] <Validatorian> micheil: http://gist.github.com/415930 -- I may be way off base, it's just what I would assume would happen
[15:23] <micheil> yeah, but do getgrgid and getpwuid belong in the fs module?
[15:24] <Validatorian> why do you feel they don't?
[15:24] <Validatorian> or might not
[15:24] <micheil> because they aren't really a filesystem operation
[15:24] <micheil> their data retrieval
[15:24] <Validatorian> so is ls, isn't it?
[15:25] <bradleymeck> anyone know of a complement of v8::Object::GetRealNamedProperty for Indexed properties?
[15:26] <_announcer> Twitter: "Node.JS v0.1.31 page site: http://ow.ly/1QGAa" [ko]-- A.J. http://twitter.com/andrwj/status/14841415926
[15:27] <micheil> ls works directly with a file descriptor though
[15:27] <micheil> getpwuid and getgrgid work with username or group name strings
[15:28] <mscdex> mape: here's a way to stream and parse: http://gist.github.com/415935
[15:28] <Validatorian> ah, I don't know the inner workings of the commands -- from a purely layman perspective, they both get data from the fs
[15:28] <micheil> anyway, night chaps.
[15:28] <Validatorian> thanks micheil :)
[15:28] <micheil> found my prior art on EIO_CUSTOM now, so should be good to work on something more solid soon: http://gist.github.com/313398
[15:28] <mape> mscdex: thank :) I'll have a look
[15:29] xn-1L1a has joined the channel
[15:29] andrewmarsh has joined the channel
[15:32] kodisha has joined the channel
[15:32] JimBastard has joined the channel
[15:34] <_announcer> Twitter: "Understanding node.js » Debuggable Ltd http://ow.ly/17wh18"-- Javascript News. http://twitter.com/del_javascript/status/14841819261
[15:35] Daniel_Paulus has joined the channel
[15:35] mikeal has joined the channel
[15:35] Daniel_Paulus_ has joined the channel
[15:36] softdrink has joined the channel
[15:36] <ceej> is there downtime every time you update your live server?
[15:36] <ceej> or you just boot an instant kill the old?
[15:37] binary42 has joined the channel
[15:44] <mscdex> who was it that did the linked list implementation in node?
[15:48] <mscdex> nevermind, found it
[15:49] er1c_ has joined the channel
[15:53] ineation has joined the channel
[15:54] quirkey has joined the channel
[15:56] <_announcer> Twitter: "This is good: YUI Theater â  Ryan Dahl: âIntroduction to NodeJSâ (58 min.) - http://su.pr/71Sm0c #yahoo"-- Alex Hall. http://twitter.com/devseo/status/14843150699
[15:56] paul__ has joined the channel
[15:56] mjijackson has joined the channel
[15:58] dgathright has joined the channel
[16:05] <_announcer> Twitter: "Looks Amazing - Real-time Collaborative Editing with Web Sockets, Node.js & Redis http://ow.ly/1QDhL"-- FITC. http://twitter.com/FITC/status/14843711962
[16:06] TobiasFar has joined the channel
[16:10] devinus has joined the channel
[16:12] <_announcer> Twitter: "@D4V @seanhealy interested in starting a #homejs project?  Maybe using some #nodejs for non-blocking house hold events."-- Tys von Gaza. http://twitter.com/tvongaza/status/14844138708
[16:15] linuxsable has joined the channel
[16:17] sechrist__ has joined the channel
[16:17] steadicat has joined the channel
[16:18] <_announcer> Twitter: "node.js looks fun - though outside my Java-on-the-server comfort zone."-- Miguel Paraz. http://twitter.com/mparaz/status/14844544969
[16:19] <MattJ> Pft
[16:20] <sechrist__> pfft
[16:22] stevendavie has joined the channel
[16:24] <_announcer> Twitter: "node.js is insanely cool. Its creator, Ryan Dahl is brilliant. I hope many of his ideas take off in other languages. http://bit.ly/cazgVT"-- Kaleb Pederson. http://twitter.com/kalebpederson/status/14844862044
[16:24] bpot has joined the channel
[16:25] brianmario has joined the channel
[16:25] pdelgallego has joined the channel
[16:27] <maushu> ryah: Have you heard? You're brilliant. :3
[16:27] <JimBastard> get back in the bathtub maushu 
[16:28] <maushu> ._.
[16:28] <maushu> ACTION goes back to the bathtub.
[16:28] <maushu> It doesn't matter in the end.
[16:29] richcollins has joined the channel
[16:29] <maushu> JimBastard: graphnode > nodejitsu
[16:30] <JimBastard> we'll let the community decide that buddy
[16:30] <JimBastard> ;-)
[16:30] <maushu> graphnode is older.
[16:30] <JimBastard> k
[16:30] <maushu> "Creation Date: 28-mar-2008"
[16:34] <maushu> Heck, it's older than nodejs by almost a year.
[16:34] sh1mmer has joined the channel
[16:34] <maushu> I time traveled to the past so that in the future I can enjoy the fruits of node.js success.
[16:35] <mscdex> mape: if you haven't already done it, here's an example of async xml->js object conversion: http://gist.github.com/416021
[16:36] ayo has joined the channel
[16:36] <JimBastard> im coming back from the future to save the past, so put the past behind ya while you shake that ass against, evil computers who erase the past, transvestites shake your shaven ass
[16:37] <JimBastard> my cpu is a neural net processor, a learning computer 
[16:37] <mscdex> ARNOLD
[16:37] <mscdex> or shall i say, ahhhnold
[16:37] <JimBastard> http://www.youtube.com/watch?v=c2Id0mCZEII
[16:37] <JimBastard> Timinator 
[16:37] <behmann> does anyone why there are fs.*Sync functions in node?  I've been drinking the non-blocking cool-aid, so I'm confused as to why sync functions exist in the api.
[16:38] <behmann> does anyone know why...*
[16:38] <fictorial> I avoid XML as much as possible but I might have the need to parse XML with Node.js soon.  All the modules to do so seem to be SAX parsers but it seems easier to work with an entire parsed "document" if I know that the doc is not going to be "large".  Is there something that does non-SAX parsing for Node?
[16:38] <fyorl> because sometimes you want synchronous functions?
[16:39] <fyorl> I use them all the time ._.
[16:39] ayo has joined the channel
[16:40] <mscdex> fictorial: yes, libxmljs lets you do that too
[16:40] mjr_ has joined the channel
[16:40] <fictorial> mscdex: ah, good. I haven't done enough due-diligence and got lazy. thanks.
[16:40] <mscdex> fictorial: i wrote a version of xml2js that uses regular parsing too
[16:41] <mscdex> regular parsing meaning non-sax
[16:41] <fictorial> ok
[16:41] <mscdex> here it is if you're interested: http://mscdex.net/code-snippets/#xml2js
[16:42] WALoeIII has joined the channel
[16:42] deanlandolt has left the channel
[16:45] <fictorial> thanks
[16:45] <fictorial> looks perfect
[16:48] <rektide> are there any xpath modules that work on top of SAX ?
[16:50] <mscdex> libxmljs let's you do xpath on a document or element
[16:50] Aredridel has joined the channel
[16:51] <mscdex> but that's only if you go the synchronous method, because SAX does parsing a bit at a time
[16:54] deanlandolt has joined the channel
[16:55] dgathright has joined the channel
[17:03] dgathright_ has joined the channel
[17:06] bmizerany has joined the channel
[17:07] felixge has joined the channel
[17:07] felixge has joined the channel
[17:08] felixge has joined the channel
[17:11] vnguyen has joined the channel
[17:11] <_announcer> Twitter: "node-msgpack-0.1 out, with support for higher-level Stream abstraction, plus bugfixes #nodejs #msgpack"-- Peter Griess. http://twitter.com/pgriess/status/14847642789
[17:12] stagas has joined the channel
[17:15] phiggins has joined the channel
[17:17] creationix has joined the channel
[17:18] <bradleymeck> whew, explorations into node addon complete, http://github.com/bmeck/node-overload, no longer must i know property names beforehand for getters and setters ... still need to make up some more useful things with this 
[17:18] cloudhead has joined the channel
[17:21] rictic has joined the channel
[17:23] <JimBastard> morning cloudhead 
[17:23] <cloudhead> JimBastard oio
[17:23] <JimBastard> o-behave ?
[17:23] <JimBastard> >.<
[17:23] <JimBastard> behaveQuery
[17:23] <_announcer> Twitter: "@coreyhaines look at webmachine :-) nodemachine is an initial clone of webmachine for node.js I'm working on it to make it more usable"-- Gabriele Lana. http://twitter.com/gabrielelana/status/14848355220
[17:24] <JimBastard> wtf do you call a jquery behavior library
[17:25] derbumi has joined the channel
[17:26] <phiggins> slowerThanDojo.behavior
[17:26] <phiggins> :)
[17:27] qFox has joined the channel
[17:28] <devinus> JimBastard: bejavior
[17:28] <JimBastard> lulz
[17:28] <devinus> JimBastard: spanish speakers would lul
[17:28] <JimBastard> yo phiggins 
[17:28] <phiggins> yoo
[17:28] <JimBastard> :-)
[17:29] <JimBastard> sup man
[17:29] <JimBastard> good to see you in here
[17:29] charlesjolley_ has joined the channel
[17:29] <phiggins> I'm autojoining now. Hope I won't cause to much noise with my shit internet :)
[17:29] <mjr_> bradleymeck: overload looks pretty neat
[17:29] jbrantly has joined the channel
[17:29] <JimBastard> i really should be using dojo 
[17:29] <JimBastard> for a components library
[17:29] <bradleymeck> mainly its just to help me debug porting browser libs slowly into jsdom
[17:30] <phiggins> i dunno, out of dijit._Widget + _Templated I don't use much of it.
[17:30] <phiggins> Too easy to roll your own without the cowbell
[17:30] <phiggins> s/out/outside/
[17:30] <phiggins> the layout shit is cool if you are making something appy
[17:30] <phiggins> ACTION is more of a behavior type tho
[17:31] Ori_P has joined the channel
[17:31] jmar777 has joined the channel
[17:31] <phiggins> JimBastard: what's your jquery-behavior thing?
[17:32] <JimBastard> well im doing a single page app
[17:32] <JimBastard> and i took the 32 UI elements from that book
[17:32] <JimBastard> and picked the best ones
[17:32] <JimBastard> and added some others
[17:32] <JimBastard> and then just got all the jquery code for each one
[17:32] <JimBastard> and filled in the gaps
[17:32] <JimBastard> added some databinding
[17:33] <JimBastard> added some html5 data- attributes
[17:33] <JimBastard> im still working on it
[17:33] <JimBastard> and its all wrapped up in a nodejs build script that meta programs the shit out of the commonjs modules to autogenerate bundles for the browser and for SSJS
[17:35] <JimBastard> cloudhead is working on some other pieces to accompany this on the server
[17:35] <phiggins> see, it seems wrong to me that you have to 'meta program the shit out of commonjs' to get it to work in the browser and server
[17:35] <JimBastard> lol 
[17:35] <phiggins> it has "common" in the name for godsake
[17:35] <JimBastard> async asset loading cross browser is hard
[17:35] <mjr_> To be fair, they were talking about Common, the rapper / film star.
[17:35] <JimBastard> id rather not deal with that
[17:36] <phiggins> we've been doing it for years now
[17:36] <JimBastard> aye
[17:36] <phiggins> it's not _that_ hard
[17:36] <JimBastard> well
[17:36] <JimBastard> its just what im doing now, theres always room for improvement
[17:36] <JimBastard> but the commonjs structure is very clean
[17:36] <JimBastard> i do the same thing for faker.js
[17:37] <_announcer> Twitter: "I want some time to play in node.js."-- Jake Olsen. http://twitter.com/jakeo/status/14849086097
[17:37] <sechrist> does anybody know how to parse an html page with node-htmlparser and get a jsdom object for browser augmentation?
[17:37] <sechrist> I have it working with aria's node-html5 but it's too slow right now to be viable
[17:39] <JimBastard> http://github.com/Marak/Faker.js/tree/master/lib/
[17:39] <JimBastard> you could easily write a .requre() in the browser to load this stuff
[17:39] ineation has joined the channel
[17:39] <JimBastard> its just exports
[17:39] <JimBastard> phiggins: http://github.com/Marak/Faker.js/blob/master/index.js
[17:40] <JimBastard> im just creating bundles right now for ease of use
[17:40] Ori_P has joined the channel
[17:40] <JimBastard> my libraries are small
[17:40] <sechrist> what do you mean JimBastard 
[17:40] <sechrist> you have jsdom wrapped?
[17:40] <JimBastard> all client side
[17:40] <sechrist> btw node-html5 is 670ms average while node-htmlparser is 18ms :|
[17:40] <Aria> Holey moley.
[17:40] <sechrist> on the same markup
[17:41] <sechrist> yeah bro
[17:41] <phiggins> what's a few hundred ms amongst friends
[17:41] <Aria> Time for me to get cracking on profiling!
[17:41] <sechrist> .getTime() difference before and after
[17:41] <sechrist> however it's in a callback for node-htmlparser -- as you know mine was blocking and just subtracking on the next line for yours aria
[17:42] <Aria> Yea
[17:43] <sechrist> JimBastard: were you talking to me when you posted the faker link? I don't see the relevance
[17:43] <JimBastard> in what
[17:43] isaacs has joined the channel
[17:43] <sechrist> oh I was talking about scraping html
[17:44] <JimBastard> ohh
[17:44] <Aria> Makes me wonder what that parser's doing (and what it can handle)
[17:44] <JimBastard> yeah
[17:44] <JimBastard> scraping html is good
[17:44] <JimBastard> theres a lot of utility in that
[17:44] <sechrist> XD
[17:44] <JimBastard> ive solved that problem too many times
[17:44] <JimBastard> never again
[17:44] <JimBastard> EVER
[17:44] <JimBastard> FUUUUUUU PERL
[17:44] <sechrist> you were... using regexes
[17:44] <JimBastard> even the libraries are shit
[17:45] <sechrist> yardly
[17:45] <JimBastard> at least back when
[17:45] <JimBastard> aight back to work
[17:46] <binary42> Scraping? I thought we had mechanical turk?
[17:46] steadicat has joined the channel
[17:46] <sechrist> it costs
[17:46] <sechrist> but yeah I have no idea how to connect a htmlparser'd dom and get the browser shit like getElementById() from it
[17:46] <sechrist> there's no clear example of it
[17:47] <sechrist> except when building your own from jsdom -- not parsing existing
[17:47] <isaacs> sechrist: yeah, jsdom, that's how you do it
[17:47] <isaacs> sechrist: and jsdom needs html5 *bad*
[17:47] <_announcer> Twitter: "@kpopper Snap! Nginx, node.js & MongoDB for me ;)"-- Ollie Relph. http://twitter.com/ollieRelph/status/14849664330
[17:48] <isaacs> sechrist: since innerHTML should modify the dom by parsing teh html.
[17:48] <sechrist> isaacs: aria's library is awesome already -- i'm using it -- it's just orders of magnitude slower than htmlparser
[17:48] <sechrist> for now
[17:48] <isaacs> if you do something like getElementsByTagName("p")[0].innerHTML = "hello<div>world" then that should end up with the effective markup looking like "<p>hello</p><div>world</div>"
[17:48] <sechrist> ah I see
[17:48] <sechrist> doctypes and stuff though
[17:49] <isaacs> that too
[17:49] <isaacs> but you can pretty much just assume standards mode and deal with it, these days
[17:49] <isaacs> at least, for new parsers being written today
[17:49] <sechrist> so I create a browser augmented dom, and document.innerHTML = code_straight_from_website?
[17:50] <sechrist> I thought that -- just wasn't sure that was the way to do it
[17:50] <sechrist> it would seem more efficient to feed jsdom the html and get a augmented dom back
[17:50] <Aria> Either way, it's doing about the same.
[17:50] <isaacs> sechrist: it'd be best to just do p.innerHTML = "blerg<div>bloo", and have the DOM structure update for you
[17:51] <isaacs> sechrist: so that then you could have p.innerHTML === "blerg" after doing that, and a new div element show up in the DOM, so p.nextSibling === newDiv
[17:51] <isaacs> like browsers.
[17:54] joshbuddy has joined the channel
[17:57] Daniel_Paulus has joined the channel
[17:58] <sechrist> wonderful -- jsdom isn't compatible with node-htmlparser's recent versions ootb
[18:00] <JimBastard> where is tmpvar
[18:00] <JimBastard> what happened to it
[18:01] <sechrist> has no method 'ParseHtml' wat
[18:01] <sechrist> i'll make sure i'm doing this right
[18:01] <sechrist> because i'm not sure
[18:02] richcollins has left the channel
[18:02] <sechrist> I don't understand why I should set the innerhtml of an object inside the body as the full html of something right off the wire
[18:02] <sechrist> that will break stuff
[18:03] <_announcer> Twitter: "Great intro to NodeJS: http://yhoo.it/crPAnd"-- BrianEhmann. http://twitter.com/codelotus/status/14850484817
[18:03] <sechrist> document.innerHTML is an object but I still get the parse error -- maybe the prototype changed
[18:04] <isaacs> shouldn't document.innerHTML be a string?
[18:04] <sechrist> oh it is
[18:05] <sechrist> it's just the parsing is failing
[18:05] <sechrist> parsehtml doesn't exist
[18:05] <sechrist> I installed node-htmlparser, it works, and jsdom isn't complaining that setting innerhtml won't work(like it will if you don't have node-htmlparser)
[18:05] <sechrist> so I don't know what is wrong
[18:07] <sechrist> http://pastie.org/980406
[18:08] dridge has joined the channel
[18:09] <_announcer> Twitter: "@ollieRelph not familiar with nginx but keen to play with node.js."-- Ian Kynnersley. http://twitter.com/kpopper/status/14850812954
[18:10] <_announcer> Twitter: "Playing with the Tornado web server. I really want to use this in a project now. Node.js looks awesome, too."-- Sawyer Pangborn. http://twitter.com/spangborn/status/14850834137
[18:17] <sechrist> yeah it's just the interface to node-htmlparser changed
[18:18] gsf has joined the channel
[18:18] javajunky has joined the channel
[18:18] mjijackson has joined the channel
[18:19] <creationix> ryah: should an http server emit the startup message to stdout out stderr
[18:19] <creationix> I'm pretty sure logs should go to either stderr or a log file
[18:20] <creationix> (for my own framework, not node itself)
[18:23] Nohryb has joined the channel
[18:25] mattly has joined the channel
[18:26] <fictorial> creationix: FYI, your websocket lib was failing for some latest draft of the ws spec. draft 76 came out recently.
[18:28] Dennus has joined the channel
[18:29] dgathright has joined the channel
[18:30] <creationix> fictorial: thanks
[18:30] <creationix> those crazy moving specs
[18:31] <fictorial> I know... I just had to patch node-websocket-server into NodeRed quickly for Erich Ocean who is demoing it as part of a bigger project in Germany this week.  I liked how your module was a drop-in replacement.
[18:38] <fictorial> anyone here dive into telehash from the guy who created xmpp?  it looks kind of interesting if not a little vague at this point.  http://telehash.org/  
[18:38] <MattJ> Yes, I did a bit of reading on it
[18:39] <fictorial> Yeah? What'd you think?
[18:39] <MattJ> Interesting :)
[18:39] <fictorial> Right, bookmark-able.
[18:40] <fictorial> "bookmarkable" adj. Worthy of further review at some future time, but not worthy of immediate attention.
[18:40] <fictorial> heh
[18:42] <sechrist> ah, glad it was easy to re-adapt jsdom to node-htmlparser
[18:43] charlesjolley has joined the channel
[18:44] Azeroth-Working has joined the channel
[18:45] <sechrist> aria: to your defense--after jsdom  with node-htmlparser it's only half of yours now. 323 avg
[18:45] <sechrist> so I guess my initial comparison was skewed -- jsdom is slowz
[18:46] <sechrist> actually i'll double check this, I may have been counting at the wrong point. gawd i'm tired 
[18:48] bradleymeck has joined the channel
[18:48] <Validatorian> JimBastard: do you think getTime should return the epoch, like the php time() function does, or do you intend getTime to be used for/return something else
[18:51] <sechrist> oh agh in the 323 figure the the http request was in it. it's 98ish just of raw parsing -- 120ish after my own manipulation of the dom
[19:06] markwubben has joined the channel
[19:06] stagas has joined the channel
[19:08] <bradleymeck> mmm what are peoples favorite ways of doing multiple return values? i guess i could just do an array but that doesnt have any unpack easily...a full blown object might be overkill but its quite common
[19:09] <halorgium> bradleymeck: an object is as simple as {foo: 1, bar: 2}
[19:10] <_announcer> Twitter: "Since I have a few days free now, I think I'm going to tinker with node.js a bit."-- Jason Foreman. http://twitter.com/threeve/status/14853647931
[19:11] dgathright has joined the channel
[19:11] stephenlb has joined the channel
[19:12] <JimBastard> Validatorian getTime should just wrap new Date.now() ?
[19:12] <JimBastard> i feel like we could make that part of Date.format()
[19:12] <Validatorian> what if you want to get the time of a predefined date
[19:12] <JimBastard> maybe if you dont send it a parameter
[19:12] <JimBastard> then you pass it
[19:12] <JimBastard> right?
[19:13] <mjr_> bradleymeck: what's wrong with returning Object?  It's probably lighter weight than returning Array.
[19:13] N` has left the channel
[19:13] <Validatorian> now() wouldn't work in that case, if I'm understanding it correctly. I was about to implement getTime( timey, format ), similar to getDate
[19:13] <JimBastard> i dont even know if getDate and getTime make any sense
[19:14] <bradleymeck> technically it is except if you have to iterate its properties, indexed properties are somewhat faster than named properties.
[19:14] <JimBastard> what exactly are you trying to do again?
[19:14] <isaacs> telehash is really interesting.
[19:14] <Validatorian> spit out Epoch, pretty much.
[19:14] <Validatorian> of either now() or a predefined date
[19:15] <JimBastard> isnt that how it already works?
[19:15] <JimBastard> getTime()
[19:15] <Validatorian> but I also need a reverse-epoch, to convert epoch back to a normal date function that can be formatter
[19:15] <JimBastard> thats part of date time object
[19:15] <Validatorian> matted*
[19:15] <Validatorian> ... 1 sec
[19:15] <JimBastard> uhhh
[19:15] <JimBastard> go read the MDC page for Date object
[19:15] mitkok has joined the channel
[19:15] <JimBastard> all that shit is taken care of for you
[19:19] phiggins has joined the channel
[19:20] Neil_ has joined the channel
[19:20] botanicus has joined the channel
[19:21] bolson has joined the channel
[19:25] mjijackson has joined the channel
[19:26] stepheneb has joined the channel
[19:29] <Validatorian> ... yep. Dunno what's wrong with me.
[19:29] <JimBastard> ive been adding new method stubs to the library
[19:29] <JimBastard> honestly, i would stay out of dateTimeFu for a bit. matt tried diving in and failed a little
[19:30] <JimBastard> there are a lot of other methods to stub
[19:30] <JimBastard> you were just trying to add weeks to the date formatter right?
[19:30] <JimBastard> youve like read the new docs right
[19:30] <JimBastard> http://github.com/marak/javascript-fu
[19:30] <Validatorian> yea, didn't see any new info about weeks, though
[19:32] <Validatorian> I see getWeekOfYear in the file though
[19:38] joshbuddy_ has joined the channel
[19:38] freshtonic has joined the channel
[19:39] zomgbie has joined the channel
[19:40] sudoer has joined the channel
[19:46] botanicus has joined the channel
[19:55] olegp has joined the channel
[19:56] Aria has joined the channel
[19:57] <_announcer> Twitter: "Experimenting with node.js, thrown in at the javascript deep end. Learning about object prototype and function scope binding."-- Tim Hastings. http://twitter.com/timhastings/status/14855935892
[20:04] tilgovi has joined the channel
[20:05] saikat has joined the channel
[20:06] <_announcer> Twitter: "@cramforce it's #nodejs code - it would never agree to monogamy : | #concurrency #heartbreaking"-- Felix Geisendörfer. http://twitter.com/felixge/status/14856359883
[20:06] <felixge> damn, this twitter bot is fast
[20:06] <felixge> it feels like it send this stuff out before I even send it
[20:06] <felixge> :)
[20:07] <mjr_> I measured the latency of the twitter streaming API to be about 200ms, end to end.
[20:07] derbumi_ has joined the channel
[20:07] <mjr_> So from the time of the SYN packet when you post a new "status" to the time when the streaming API connection gets that JSON string is 200ms.  Pretty fast.
[20:09] richcollins has joined the channel
[20:09] dgathright_ has joined the channel
[20:16] <Validatorian> JimBastard: yea, I'm having a pretty rough time adding the week of year to format, so I'll will take your advice and stay out of it for a bit
[20:17] <JimBastard> theres tons to do though
[20:17] tpryme has left the channel
[20:17] rramsden has joined the channel
[20:20] <phiggins> formating dates?
[20:20] <bradleymeck> tidying up node-overload, do you think people would actually have a use for overloading the query operator (in) and delete operator?
[20:21] <Validatorian> I'm going to focus on figuring out how to add node to nginx as a cache-filler -- once I get my app 'working' for the most part, I'll spend a lot of time optimizing/improving my own code, as well as making contributions to the modules that I use
[20:23] <Validatorian> phiggins: yep. http://github.com/marak/javascript-fu
[20:23] JAAulde has joined the channel
[20:23] <Validatorian> JimBastard: I don't suppose you have a blog post showing how you use node with code snippets and such?
[20:24] <phiggins> oh yay
[20:24] <Validatorian> er, with nginx, that is
[20:24] <phiggins> more .prototype native extension
[20:24] <JimBastard> Validatorian: dont really have time to do that lately, too many projects
[20:24] <JimBastard> ill see what i can do, i might be taking vacation soon
[20:24] <isaacs> Validatorian: i'd recommend against nginx as a proxy
[20:24] <Validatorian> I hear ya
[20:24] <phiggins> Validatorian: http://code.google.com/p/dojotype/source/browse/trunk/Date.js
[20:24] <isaacs> Validatorian: varnish , squid, and TS are all very nice.  nginx is kind of a shit proxy.
[20:25] <JimBastard> Github is my blog. #bastardfacts
[20:25] <Validatorian> isaacs: you're still pushing for using node directly?
[20:25] <isaacs> Validatorian: oh no! not yet.
[20:25] <isaacs> Validatorian: but nginx is kind of annoying.  i've been using it as a proxy, because i heard good things.
[20:25] <phiggins> new Date.format(/* valid string */)
[20:25] <JimBastard> aye phiggins 
[20:25] <JimBastard> i was using datejs
[20:25] <isaacs> Validatorian: for serving static files, it's fanTAStic.  like, really very very good.
[20:25] <isaacs> Validatorian: but its proxy_pass leaves a lot wanting.
[20:25] <JimBastard> http://www.datejs.com/
[20:25] <isaacs> Validatorian: like streaming.
[20:25] <JimBastard> and also some other custom shit
[20:26] <isaacs> Validatorian: or passing along the content-length
[20:26] <elliottcable> ohai all
[20:26] <Validatorian> isaacs: 99% of the files I serve will be static (node will generate them once, then nginx will serve them as static files -- they are for historical reference only)
[20:26] <elliottcable> ’sup peeps?
[20:27] <isaacs> Validatorian: as long as you get to a place where you're putting the file where it belongs, and then nginx is serving it straight from disk 99% of the time, then yeah, it's a great fit.
[20:27] <Validatorian> perhaps I should have nginx for just the static files and node as the cache-filler, then have another server for the dynamic content?
[20:27] <isaacs> Validatorian: but the whole idea of "i
[20:27] <isaacs> "i'll put nginx in front for performance!" is a bad idea.
[20:27] b_erb has joined the channel
[20:27] joshbuddy has joined the channel
[20:27] <Validatorian> it is for performance, but for static files
[20:27] <isaacs> right
[20:28] <_announcer> Twitter: "Node.js (0.1.95) HTTP POST handling of form data - http://tinyurl.com/3ym3ezr"-- Elliott Carlson. http://twitter.com/elliottcarlson/status/14857427344
[20:28] <elliottcable> ryah, isaacs, JimBastard - I finished my first actual *program* in Paws, by the way. It’s a port of my Node.js URL shortener via Redis and Twitter: http://gist.github.com/415458
[20:28] <elliottcable> ooo felixge ^^ that’s for you, too
[20:29] <JimBastard> uhhh 
[20:29] <felixge> elliottcable: so paws is up and running? :)
[20:29] <JimBastard> elliottcable: i can haz pointy click demo?
[20:29] <elliottcable> lol
[20:29] <Validatorian> isaacs: what would you recommend, then, as an http server for dynamic pages (they will have real-time data streaming with websockets and fallback to long-polling when websockets aren't available)
[20:29] <elliottcable> not quite ;D
[20:29] <JimBastard> well then
[20:29] <elliottcable> was just stable enough to write an example program, to give people who code written in Paws is going to look like
[20:30] <phiggins> JimBastard: the only useful String.prototype extensions EVAR http://code.google.com/p/dojotype/source/browse/trunk/es3ex-String.js
[20:30] erichocean has joined the channel
[20:30] <isaacs> Validatorian: i looked at varnish.  it's quite nice.  but by that point, i was already using nginx
[20:30] <JimBastard> phiggins: MIT ?
[20:30] <isaacs> Validatorian: nginx is nice, though, if you are generating and serving static files, it's the best.
[20:30] <phiggins> AFL/BSD dual
[20:30] <JimBastard> aight, assimilated. thanks
[20:30] <JimBastard> :-)
[20:31] <phiggins> i jest, that link is for ms ecma-3 string extensions no one cares about
[20:31] <JimBastard> also, we dont prototype string
[20:31] <JimBastard> no
[20:31] <JimBastard> im making toBlink now
[20:31] <JimBastard> congrats
[20:31] <JimBastard> ill put your name on it
[20:31] <phiggins> but the whole dojotype project is just mapping dojo.* functions to whatever they would normally work on
[20:31] <elliottcable> JimBastard: whats a ‘pointy-click demo’ for a programming language, anyway?
[20:31] <phiggins> dojo.doit(SomeString, ....)
[20:31] <JimBastard> a program?
[20:32] <phiggins> to "SomeString".doit(...)
[20:32] <JimBastard> a textarea that compiles?
[20:32] <JimBastard> phiggins: you are okay with prototyping string?
[20:32] <elliottcable> textarea? huh?
[20:32] <phiggins> no
[20:32] <JimBastard> i thought not
[20:32] <elliottcable> what I linked is a program :D
[20:32] <JimBastard> elliottcable: web compiler
[20:32] <elliottcable> ahhh.
[20:32] <Validatorian> isaacs: are you using node as a cache-filler (generate once-off then done) for your nginx setup?
[20:32] <elliottcable> no compiler, it’s interpreted
[20:33] <JimBastard> we prototype Date, that is okay right>
[20:33] <phiggins> JimBastard: you should do it on Object.prototype and overload the function sig to work on anything
[20:33] <phiggins> call it cowbell()
[20:33] <isaacs> Validatorian: actually, i'm using nginx in front of php and couchdb, not node.
[20:33] <JimBastard> phiggins: >.<
[20:33] <_announcer> Twitter: "Made a post on the #nodejs list over lunch about #homejs. Exploded! http://bit.ly/dpswTf"-- Tys von Gaza. http://twitter.com/tvongaza/status/14857674485
[20:33] <JimBastard> we arent doing ecma5 fully
[20:33] <Validatorian> oh :-/
[20:33] <JimBastard> so no prototyping object
[20:33] <JimBastard> stop fucking with me im busy
[20:33] <phiggins> sissies
[20:33] <phiggins> ;)
[20:33] <phiggins> sorry
[20:33] <JimBastard> ahaha
[20:33] DracoBlue has joined the channel
[20:33] <isaacs> Validatorian: i'm going to put couch on a different machine, though, and just have it exposed directly on port 80, protected by its rewrites
[20:34] <isaacs> er, rather, forward port 80 on a specific hostname to port 5984 where couch lives.
[20:34] <JimBastard> dont make me take my javascript-fu and break down your dojo brick by brick
[20:34] <phiggins> sheeeeit
[20:34] <JimBastard> :-D
[20:35] <isaacs> Validatorian: basically, because of nginx's inability to stream large files to its backend server, npm's registry is limited to a pretty small file size.
[20:35] <isaacs> Validatorian: and that sucks.
[20:35] <isaacs> i mean, MOST js packages are really tiny, but a few have some included dep or something, and can get quite big.
[20:35] <Validatorian> yea
[20:35] <Validatorian> makes sense
[20:36] richcollins has left the channel
[20:37] stepheneb has joined the channel
[20:47] Kiba has joined the channel
[20:47] <Kiba> hello
[20:47] <Kiba> I am trying to use unit testing with node.js
[20:47] <Kiba> err
[20:47] <Kiba> jspec
[20:47] <JimBastard> ok Kiba 
[20:47] <Kiba> anybody have experience of using it
[20:48] <JimBastard> naah, ive been using vows
[20:48] <Kiba> how do you test in node?
[20:48] <JimBastard> just check out the github
[20:48] <JimBastard> make an issue
[20:48] <JimBastard> http://github.com/cloudhead/vows
[20:49] softdrink has joined the channel
[20:49] creationix has joined the channel
[20:51] <Kiba> what a pain
[20:51] <Kiba> nobody using jspec?
[20:52] <justinlilly> isaacs: thanks for the help re: tar/gzip issues yesterday. Is the cause of that your repo of all packages not being up to date or something?
[20:53] olegp has joined the channel
[20:53] <_announcer> Twitter: "loving nodejs (http://nodejs.org/) and djangode http://github.com/simonw/djangode)"-- saperduper. http://twitter.com/saperduper/status/14858638565
[20:58] <devinus> anybodu know of a restful json interface to postgresql or something like dbslayer for postgresql ?
[20:59] <isaacs> justinlilly: well, so, i released a version of npm that broke like 60% of the time.
[20:59] <isaacs> justinlilly: i just went through and deleted all the affected packages, and emailed the authors.
[21:00] <isaacs> justinlilly: worst kind of breakage, too, where the tarball *seems* to upload fine, but the actual bytes being sent were in the wrong order or something.
[21:00] <isaacs> devinus: no, but using node_postgres it should be pretty easy, no?
[21:01] <devinus> isaacs: i was trying to cull the knowledge of you guys, it's not actually for node
[21:01] <devinus> >_>
[21:01] <isaacs> devinus: i see.  i was suggesting that you build something like that on top of node :)
[21:02] <mjr_> non-node advice is subject to standard consulting rates
[21:02] <devinus> i may
[21:02] <devinus> either node or erlang
[21:02] <devinus> because i really need it
[21:02] <isaacs> devinus: npm install node_postgres
[21:04] <ryah> i feel 0.2 nearing
[21:04] <ryah> ugent bugs dieing off
[21:05] <mjr_> ryah: doesn't isaacs' uploading thing seem like something that needs fixing before 0.2?
[21:06] <isaacs> mjr_: ryah: +1
[21:06] <isaacs> also, modules need to be cahced based on filename rather than relative id
[21:07] <MattJ> Why would node print errors as "node.js:814:9" with no message and no stack trace? (the line is of process.loop() in node.js)
[21:07] <ryah> maybe - i'm a bit skeptical if it's really my bug though :)
[21:07] <_announcer> Twitter: "Starting to get into node.js - this could be really useful"-- Richard Cunningham. http://twitter.com/rythie/status/14859292714
[21:07] <ryah> no worries, it's probably going to be late june before a release
[21:07] <isaacs> ryah: it's fairly reproducible.
[21:08] <ryah> isaacs: can you make me a test?
[21:08] <isaacs> ryah: not one that works in isolation.
[21:08] <isaacs> ryah: from what i've observed, you need to have a bit of network lag.
[21:09] <ryah> hm
[21:09] <isaacs> i  kinda just tried all the different ways to read a file into memory and then write it to the http client until i got one that didn't die.
[21:10] <ryah> isaacs: if you just readFile() into a buffer, and push it to the client
[21:10] <isaacs> what works is to read the entire file into a single buffer, and send it all
[21:10] <isaacs> yeah
[21:10] <isaacs> but reading it in chunks does not work, and i suspect it's because you're writing into the buffer before it's done pushing through the http client.
[21:10] <creationix> ryah: is a windows port coming soon, or did that get derailed again?
[21:10] <ryah> i suspect you've got some race condition when pushing chunks though
[21:10] <isaacs> right
[21:11] <isaacs> if there was a drain event on the http client, i believe that this would be easy to work around.
[21:11] <isaacs> just don't read the next chunk into the buffer until the drain event.
[21:11] <ryah> creationix: i haven't worked on it lately - someone from microsoft emailed me recently - might be able to help
[21:11] <mjr_> need write to do the true/false thing before drain is useful though
[21:11] <isaacs> ryah: just tell people to use node.net ;P
[21:11] <creationix> cool, just wondering on an eta, I'm trying to plan spreading node to the masses
[21:11] <isaacs> mjr_: right.
[21:11] <ryah> but what i need is just like 2 days and someone to strap me to a windows machine
[21:11] rolfb has joined the channel
[21:12] <mjr_> ryah: what if I strap you to a Linux machine for 2 days and you finish write returning true/false?
[21:12] <isaacs> so, you need to have request.write() to return false indicating that there's a drain event coming, or maybe just emit drain immediately if it all wrote.
[21:12] <isaacs> yeah, the masses are not ready for node yet.  let windows wait.
[21:12] <isaacs> those guys can just use threading in java AIO or whatever.
[21:13] <creationix> ryah: sorry, I don't believe in such cruel and unusual punishment
[21:13] <isaacs> i do!
[21:13] <Validatorian> (I just went through the entire chat history, please forgive the flood of questions...)
[21:13] <Validatorian> creationix: did you end up using varnish?  It seems like you were going to for howtonode, but you were getting 2k requests/sec with just node, you you decided not to, if I am reading correctly?
[21:13] <ryah> what would really help is if someone who knew msys came to my office
[21:13] <Validatorian> ashb: You have mentioned varnish a few times, do you have node set up with varnish currently?
[21:13] <Validatorian> sveisvei: you said you were using it at work for ajax, which is pretty much what I want to do (though, I might just use it for all static file serving, as it seems to do fine with that as well?) do you have any ideas on how to implement node as a cache-filler?
[21:13] <isaacs> ryah: strap to a linux box! make http client drain right!
[21:13] <Validatorian> micheil: It looks like you have a node / varnish setup -- why are you using varnish AND nginx? I thought they were both just http servers?
[21:13] <ryah> and sat with me and helped me compile it
[21:13] <Validatorian> erichocean: How is your stat-machine project coming along? 
[21:13] <creationix> Validatorian: no, no varnish, just nginx for the virtualhosting
[21:14] <isaacs> Validatorian: also, creationix has howtonode caching aggressively to static files, iirc?
[21:14] <ryah> i'm working on something cool right now. going to try to finish it.
[21:14] <mjr_> isaacs: it is a bit disturbing that the simple buffer list in node right now isn't working for you though.  That's pretty disturbing.
[21:14] <ryah> ACTION disappears
[21:14] <creationix> Validatorian: agressive caching to ram actually
[21:14] <Validatorian> creationix: was there anything in particular that made you decide not to use varnish? Just wasn't needed?
[21:14] <creationix> based on the git sha
[21:14] <isaacs> mjr_: the issue is that the http client isn't done writing the buffer to the server, and then i write into it from the filesystem.
[21:15] <creationix> Validatorian:  I hate using stuff I don't have to
[21:15] <creationix> I feel bad for using nginx
[21:15] <creationix> but node isn't quite ready to replace nginx
[21:15] <mjr_> I think there's a buffer bug or two lurking that need to be uncovered before we get the kind of stability we are all looking for.
[21:15] <creationix> for reverse proxy stuff
[21:15] <isaacs> mjr_: it's actually intended behavior, if that's the case.  i just don't have what i need to Do It Right
[21:15] <isaacs> mjr_: buffers are mutable objects by design.
[21:15] <isaacs> that's why they're so fast, because they don't have to copy memory all over the place.
[21:15] <mjr_> isaacs: oh, you are re-using the same buffer for subsequent reads/writes?
[21:16] <isaacs> mjr_: yeah
[21:16] <mjr_> oh shit, that's notgoing to work.
[21:16] <Validatorian> yea -- I'm trying to figure out the best way to both generate/serve static files, and also have a few pages that are extremely dynamic (constantly updating in real-time)
[21:16] <isaacs> i guess i could allocate a new one for each chunk.
[21:16] <mjr_> The write queue is a list of buffers, and buffers don't know whether they are still refered to by someone else.
[21:16] <isaacs> right
[21:16] <isaacs> so i'd need "drain" to tell me when it's done with it
[21:17] <creationix> Validatorian: I'm working on a new framework, hopefully will come out this weekend
[21:17] <mjr_> The New Way that ryah and I talked about a couple of weeks ago was to have write take a callback that let's you know when the buffer was fully accepted by the kernel.
[21:17] <isaacs> sure, whatever.
[21:17] <isaacs> callback, drain, return value, something.
[21:17] <mjr_> drain would be fore the entire queue, the callback for just that buffer.
[21:17] <isaacs> anything would be better than what i have now, which is just faith.
[21:18] <isaacs> ah, i see
[21:18] <isaacs> yeah, that'd be rad.
[21:18] <creationix> I vote for callback
[21:18] <mjr_> There are a bunch of things that need to be re-organized first though in order to make that happen.
[21:18] <isaacs> of course.
[21:18] <mjr_> But yeah, I think that API will be fantastic.
[21:19] <Validatorian> creationix: what does your framework aim to solve? is it purely node based?
[21:19] charlesjolley has joined the channel
[21:19] <isaacs> or, perhaps, something like request.write(new FileReadStream(path))
[21:19] <isaacs> that'd be WAY better.
[21:19] <isaacs> and have streams just plug into each other wherever they go
[21:19] <mjr_> yeah, pump or whatever
[21:20] <mjr_> That is the future, my friend
[21:20] <isaacs> i'm not even talking about a pump, per se.
[21:20] <isaacs> or rather, not talking about a filter.
[21:20] <isaacs> i guess it would be a pump of sorts.
[21:20] charlesjolley has joined the channel
[21:20] <creationix> Validatorian: mostly it's a middleware stack, will provide a few built-in middleware filters (including static file serving)
[21:21] <Validatorian> isaacs: you were running both varnish and nginx, can you comment on whether varnish does a comparable job of serving pure static files as nginx? 
[21:21] <isaacs> no
[21:21] <isaacs> Validatorian: use nginx as one of the backends to varnish
[21:21] <creationix> I didn't know varnish could do static files directly
[21:21] <isaacs> Validatorian: hook nginx up to be what varnish proxies to when you hit static.yoursite.com
[21:21] <mjr_> isaacs: I think the workaround for now is to use enough buffers to hold the entire file, either as a single buffer or as a series of buffers.
[21:21] <isaacs> and then put your images and css and whatnot there.
[21:22] <Validatorian> ahh
[21:22] <isaacs> mjr_: right.
[21:22] <mjr_> isaacs: or, check this out, use JavaScript strings.
[21:22] <isaacs> mjr_: that's what i'm doing, and it seems to be working.
[21:22] <isaacs> mjr_: no thank you.
[21:22] <Validatorian> okay, I was under the impression that varnish was an http server, not just a proxy
[21:22] <isaacs> mjr_: i already went through a round of "tarballs are fscked because strings were encoded wrong"
[21:22] <mjr_> yeah, fuck strings
[21:22] <mjr_> I guess there's always tcp client, which does do true/false and drain.
[21:23] <mjr_> You know what seems simple but is actually really hard?  Nearly everything.
[21:24] <isaacs> mjr_: +1!!!
[21:26] <kriszyp> devinus: if you are looking for a restful json interface (for postgre), you might try using pintura on top of node-postgre
[21:26] <kriszyp> that's the type of thing pintura is good for
[21:27] riq has joined the channel
[21:27] mattly has joined the channel
[21:28] <mjr_> isaacs: you beat me to the twitterverse!
[21:28] <isaacs> haha
[21:28] sudoer has joined the channel
[21:29] riq has joined the channel
[21:30] <ashb> Validatorian: nope
[21:30] <ashb> not tried
[21:30] <Validatorian> k, thanks ashb 
[21:32] <bradleymeck> anyone have a cookie module for http lying about?
[21:32] technoweenie has joined the channel
[21:33] mikeal has joined the channel
[21:33] <mjr_> You know, I've got extra straps and extra Linux machines.  ryah has really lax security at his office.  Hmmmm.
[21:33] <isaacs> bradleymeck: client or server?
[21:33] admc has joined the channel
[21:34] <bradleymeck> pref both actually
[21:34] <isaacs> bradleymeck: check out jed's cookie-node.  npm install cookie
[21:35] <bradleymeck> guess ill get around to installing npm
[21:35] <isaacs> hehe
[21:36] <bradleymeck> not complaining, i use github like crack
[21:37] <isaacs> bradleymeck: let me know how it breaks for you :)
[21:37] <isaacs> bradleymeck: (kidding, kinda.  it's getting stabler, but still beta)
[21:38] <bradleymeck> and finally is there an addon that allows you to grab a new JS Context?
[21:40] <ashb> what's node specific about a cookie library?
[21:41] <isaacs> ashb: the server that it connects to, i believe.
[21:41] <ashb> oh it does the reading writing to, rather htan just deciphering the header
[21:41] <isaacs> ashb: i think it adds some sugar to the request object, so you can do request.cookie.foo or whatever.
[21:41] <ashb> people need to learn to separate their fucking concerns more.
[21:42] <bradleymeck> more i just didnt want to write exports etc
[21:42] <isaacs> ashb: go write a more general javascript cookie library.
[21:42] <isaacs> ashb: i'd love it.
[21:42] <ashb> might do some point soon actually
[21:42] <isaacs> ashb: awesome
[21:42] <ashb> good chance i'll need it
[21:43] darkf has joined the channel
[21:43] <ashb> i'm sorry it does WHAT?
[21:43] <ashb> http.ServerResponse.prototype.writeHead = function () {
[21:43] <ashb> no shit that's not hosker
[21:44] bolson has joined the channel
[21:44] <ashb> kosher
[21:44] <isaacs> ashb: it monkey-patches node's http server to handle cookies.
[21:44] <bradleymeck> isaacs boom, make on git clone blew up 
[21:44] <isaacs> ashb: i don't know if i agree that it's not kosher.
[21:44] <isaacs> bradleymeck: can you gist the explosion, please?
[21:44] <ashb> isaacs: i wouldn't have done it in that way
[21:45] <isaacs> ashb: well, sure.
[21:45] <isaacs> ashb: put another way, maybe it isn't kosher, but neither are cheeseburgers.
[21:45] <ashb> mmmmmm double double.
[21:45] <isaacs> INORITE!?
[21:45] <isaacs> and crickets and locusts are kosher.
[21:45] <bradleymeck> http://gist.github.com/416397
[21:46] <ashb> isaacs: i'd have probably done that as a mixin rather than a monkey patch
[21:46] <ashb> i have intense dislike for loading one class/module changing the behaviour of another
[21:46] <isaacs> bradleymeck: wtf?
[21:47] <ashb> ACTION attempts to decipher this: .expires = new Date( +new Date - 30 * 24 * 60 * 60 * 1000 );
[21:47] maushu has joined the channel
[21:47] <bradleymeck> indeed? i just did git clone ..; make
[21:48] <maushu> !so-last
[21:48] <_announcer> Last Question: "Add to language syntax in Netbeans/Eclipse" by Thomas. http://stackoverflow.com/questions/2913831
[21:48] <isaacs> bradleymeck: and you did the make in the npm dir, i'm guessing
[21:48] <ashb> i'll stop slagging off other peoples' code untill i've got some of my own now.
[21:48] <bradleymeck> ashb it says .expires is around a month ago, interesting redundancy though
[21:48] <bradleymeck> yes
[21:49] <ashb> bradleymeck: yeah - it just seems an interesting way of going about it.
[21:49] <ashb> might actually be the best, just flags as a 'code smell' at first glance
[21:50] <isaacs> bradleymeck: what does http://registry.npmjs.org/npm look like to you?  json or some kind of error?
[21:50] <ashb> oh. espeically given its .clearCookie. i'd have just hard coded a "1st Jan 1970" str - you're safe unless someone fucks with the clock or timetravels
[21:50] <bradleymeck> json goobldygook
[21:50] <isaacs> hm.
[21:50] <isaacs> bradleymeck: try again?
[21:50] creationix has left the channel
[21:50] <bradleymeck> tried a couple times, ill try a pull on node, mines a bit old
[21:51] <isaacs> bradleymeck: oh, yes, always use the latest node.
[21:52] <bradleymeck> mmmm, wonder if we could get require to work across transfer protocols...
[21:52] <isaacs> ashb: you mean you don't test your code for time travel safety?  jeez.  some people just have no discipline...
[21:52] <isaacs> bradleymeck: please not in node core.
[21:52] <isaacs> bradleymeck: that's a job for nodules or something else.
[21:52] <ashb> isaacs: i bet your code doesn't account for leap seconds either. NO DISCIPLINE
[21:52] <bradleymeck> i wouldnt, thinking something akin to urllib, to dangerous for core id think
[21:52] <isaacs> ashb: i actually just do everything with Epoch second count.
[21:53] <bradleymeck> s/to/too/
[21:53] <isaacs> ashb: when we're a fully space-faring race, things like "day" and "hour" will see quaint.
[21:53] <isaacs> *seem
[21:54] <mjr_> maybe we'll move the US on to metric system by then.
[21:54] <mjr_> Actually, probably not.
[21:54] <isaacs> mjr_: not likely.
[21:54] <mjr_> "inches" and "feet" make way more sense.
[21:55] <ashb> isaacs: as will seconds since some arbitrary point in time ;)
[21:55] <isaacs> but you know, when isolated from clocks and the sun, most humans naturally tend to gravitate towards a biorhythm of about 27-28 hour cycles.
[21:55] <isaacs> which is right at 100 kiloseconds
[21:56] <mjr_> I wonder if that's why Dark Side of the Moon syncs up with Wizard of Ozz.
[21:56] <isaacs> mjr_: it's because you were baked.
[21:56] <Aria> It also depends heavily on how much labor that human is doing ;-)
[21:56] <mjr_> oh, right.
[21:57] <isaacs> Dark Side also syncs up with commercials, CNN, and your mom.
[21:58] <maushu> Come to the Dark Side. We have cookies.
[21:58] <isaacs> maushu: nicely done, sir.
[21:58] <maushu> Why, thank you. I try.
[22:04] <_announcer> Twitter: "Home Automation: Home Re Node js js &amp; Home Automation ... http://tinyurl.com/2w9zj9v" [de]-- Its For Home. http://twitter.com/itsforhome/status/14862128288
[22:05] rictic has joined the channel
[22:08] <mjr_> Is there no end to the magic surprises lurking in various unicode character sets?  I just saw someone use a "recycling" symbol:  ♺
[22:09] <mjr_> ACTION boggles
[22:10] <_announcer> Twitter: "r @antirez: Real-time collaborative editing with node, websockets and #Redis: http://bit.ly/cS3J1H /cc @eolo999 @fregini @andreareginato #js"-- Marcello Barnaba. http://twitter.com/vjt/status/14862412521
[22:11] dgathright has joined the channel
[22:12] <rramsden> anyone know how i can close an http client after a timeout in node.js?
[22:12] <rramsden> http://stackoverflow.com/questions/2886191/how-do-i-close-a-socket-after-a-timeout-in-node-js
[22:13] <mjr_> maushu: why did your announcer not notice this?
[22:13] <maushu> mjr_, wat?
[22:13] <mjr_> SO question  ^^
[22:13] <maushu> No idea.
[22:14] <maushu> Ah, I think I know.
[22:14] <maushu> Node.js has two tags.
[22:15] <maushu> Wait, no.
[22:15] <maushu> It should've noticed that one.
[22:15] <maushu> !so-last
[22:15] <_announcer> Last Question: "Add to language syntax in Netbeans/Eclipse" by Thomas. http://stackoverflow.com/questions/2913831
[22:16] <maushu> mjr_, I think it did notice. That one was 6 days ago. This one was yesterday.
[22:16] <mjr_> Yeah, so I guess I'm supposed to look at timestamps before I start asking people to do work for me then?
[22:16] <mjr_> Hmm, OK.
[22:16] <bradleymeck> rramsden if you are streaming it you cant, however if you check on an interval it should be possible to do so
[22:18] <mjr_> rramsden: this is something that you should be able to do, but might not be able to right now.
[22:19] <_announcer> Twitter: "@polgardy @michaelphines #nodejs runs on google v8. Doing for each() on objects is a Mozilla extension in Rhino or Spidermonkey."-- Marco Rogers. http://twitter.com/polotek/status/14862906187
[22:21] <_announcer> New Question: "Is node.js ready for production use?" by Simon Wentley. http://stackoverflow.com/questions/2925414
[22:21] stagas has joined the channel
[22:26] <bradleymeck> isaacs (more npm make fun): npm ! Error: node version not compatible:  required: >=0.1.93 actual: v0.1.93-135-g8840ce3
[22:28] steadicat has joined the channel
[22:31] derbumi has joined the channel
[22:32] <bradleymeck> so no sandbox context addons out there?
[22:33] <maushu> bradleymeck, http://github.com/fictorial/jefe
[22:33] <maushu> Not addon though.
[22:33] <_announcer> Twitter: "Twitter Updates for 2010-05-19 « snellspace.com: Twitter Updates for 2010-05-19. Ok, node.js is just friggen cool.... http://bit.ly/cgAzUJ"-- Sara. http://twitter.com/twithelp101/status/14863628760
[22:33] <maushu> http://github.com/gf3/node-sandbox
[22:33] rnewson has left the channel
[22:34] <bradleymeck> yea, interesting but cant share across contexts 
[22:35] <maushu> ...use sockets?
[22:35] <bradleymeck> :( but i hates those
[22:35] jan____ has joined the channel
[22:35] derbumi has joined the channel
[22:38] dgathright_ has joined the channel
[22:39] jan____ has joined the channel
[22:40] mattly has joined the channel
[22:41] <bradleymeck> looks like i must use those...
[22:41] <ryah> oh man.
[22:41] <ryah> it's working
[22:42] <bradleymeck> ?
[22:42] <ryah> my patch.
[22:42] <bradleymeck> *goes to look*
[22:42] <ryah> not up yet
[22:43] sanitz has joined the channel
[22:43] <bradleymeck> oh, while you are here ryah, is it impossible to spawn a second v8 vm from one program?
[22:43] <ryah> no
[22:44] <bradleymeck> so, now to just find out how
[22:49] <isaacs> bradleymeck: check ou thte docs about child_process
[22:49] <isaacs> bradleymeck: and also, make sure you update node with the tags from ry before doing the configure make install dance
[22:49] <bradleymeck> yea... but sockets are le evil in my book and thats how id have to communicate
[22:50] <mjr_> git pull sadly does not get new tags
[22:50] <mjr_> Also, sockets are your friends.  Love them.
[22:51] <bradleymeck> sockets across my own machine makes me a sad panda
[22:51] <isaacs> mjr_: git pull does for me.
[22:51] <isaacs> not sure what's different.  some config or something
[22:52] gf3 has joined the channel
[22:52] <mjr_> After several altercations, I've stopped using or recommending git pull.  fetch + merge has been much more reliable for me.
[22:52] brapse_ has joined the channel
[22:53] <mjr_> But I've only been using git for one earth month, so who knows.
[22:53] <ceej> does anyone know why in express it always uses layout.html.haml ?
[22:53] <ceej> I have this http://pastie.textmate.org/private/swxiwszv0zwivymyqnva
[22:54] <ceej> saying to use index.html.haml but it just keeps using layout
[22:54] sanitz has left the channel
[22:57] bradleymeck has joined the channel
[22:57] <chilts> win 26
[22:57] <chilts> oopse, command fail :)
[22:58] Validatorian has joined the channel
[23:00] joshbuddy has joined the channel
[23:00] <micheil> ryah: you about?
[23:00] <ryah> yes
[23:00] <ryah> but i'm about to leave
[23:00] <micheil> Validatorian: btw, I'm not using varnish right now for node, but it was mainly to act as a cache
[23:00] <micheil> ryah: okay, where should getgrgid and getpwuid go?
[23:00] <ryah> micheil: oh right i was uspposed to email you
[23:00] <micheil> I'm thinking in the sys module (I think that's logical sense)
[23:00] <ryah> um, they should be in node_file.cc 
[23:00] <micheil> oh, okay
[23:00] <ryah> using eio_custom
[23:01] <ceej> anyone? :/
[23:01] <Validatorian> micheil: ah, alright -- thanks
[23:01] <micheil> ryah: yeah, and I'm using the old code from the Glob patch to work out how to properly setup the EIO_Custom calls
[23:04] <micheil> ryah: also, I agree about ritual coffee.
[23:04] jedschmidt has joined the channel
[23:05] <_announcer> Twitter: "node.js oAuth: http://github.com/ciaranj/node-oauth"-- Will Jessop. http://twitter.com/will_j/status/14865290215
[23:05] morganallen has joined the channel
[23:05] <chilts> mjr_: isaacs: you're both right ... git 'pulls' the tags but only if they are referenced by any branch that is automatically pulled (so in some cases, the tag _might_ not be pulled)
[23:06] <isaacs> ah
[23:06] <chilts> you can put something in your .git/config to make sure _all_ tags are pulled
[23:06] <isaacs> and now that i check it, my "gp" bash alias isn't git pull, it's doing a fetch -a and then a rebase
[23:06] <isaacs> so it's like git pull --rebae
[23:06] <chilts> fetch = refs/tags/*:refs/tags/* (in the [remote "origin"] section)
[23:07] <chilts> isaacs: I'm not sure if that's exactly true ... but it might be (I don't know, sorry)
[23:07] <isaacs> chilts: meh.
[23:07] <chilts> I usually do explicit fetches and rebases :)
[23:07] <isaacs> :)
[23:07] <chilts> or merges (as appropriate)
[23:09] <ceej> does anyone know why in express it always uses layout.html.haml ? I have this http://pastie.textmate.org/private/swxiwszv0zwivymyqnva
[23:13] <Kiba> I have a problem with line 40
[23:13] <Kiba> http://gist.github.com/416497
[23:14] <micheil> ryah: I suppose once we have the two apis, we can always move them about.
[23:14] <Kiba>     for(int i = 0; i < doc._names.size();i++)
[23:14] <Kiba>             ^
[23:14] <Kiba> SyntaxError: Unexpected identifier
[23:14] <micheil> no such thing as an int
[23:14] <Kiba> unexpected identifier?
[23:14] <micheil> var i = 0
[23:14] <Kiba> in server side javascript?
[23:14] <micheil> yes
[23:14] <Kiba> ACTION is suprised
[23:14] <_announcer> Twitter: "node.js &gt; life"-- kodisha. http://twitter.com/kodisha/status/14865759029
[23:14] <micheil> server side javascript is just like client side javascript
[23:15] <micheil> in fact, we directly use the javascript engine from chrome — v8
[23:15] <Kiba> then I must have a weird misconception
[23:15] <micheil> you must.
[23:15] <Kiba> ACTION extreminates his misconception
[23:17] <stagas> ceej: hm I haven't used express but try    layout: false    parameter in that render function
[23:17] hassox has joined the channel
[23:17] <micheil> ACTION disappears
[23:18] kodisha_ has joined the channel
[23:18] <ceej> stagas: I got it working but now it's escaping the html
[23:18] <ceej> &lt;h1&gt;Moo, World!&lt;/h1&gt;
[23:19] bolson has joined the channel
[23:20] <_announcer> Twitter: "I wonder how many people got into #nodejs for javascript and found themselves getting back into C/C++ to write addons. *raises hand*"-- Marco Rogers. http://twitter.com/polotek/status/14866050961
[23:25] <stagas> hm I guess layout.html.haml is required it's like a super template that has all the stuff except the body. see here http://expressjs.com/plugins.view.html
[23:25] <stagas> and with render() you pass the page you want to render in the body part
[23:25] rtomayko has joined the channel
[23:29] SteveDekorte has joined the channel
[23:29] <SteveDekorte> Is there a way to get the current working directoy?
[23:29] <stagas> ceej: and you can select the layout file if you want with the parameter  layout: 'file.html.haml' 
[23:30] <ceej> ah thank you
[23:30] <ceej> can you do this require.paths.unshift('apps/*')
[23:30] <isaacs> Kiba: serverside js is still js
[23:30] <ceej> to include all files and folders from that folder?
[23:31] <isaacs> ceej: no
[23:31] <ceej> isaacs: what would be the best way to do that?
[23:31] <isaacs> but you can use fs.readdir, and then call require() with each thing in there.
[23:31] <isaacs> fs.readdir and then path.join each of those things onto the folder's path to create an absolute url, strip off the .js or .node from the end
[23:32] <isaacs> ceej: and you might as well use readdirSync, since require() is gonna be doing sync io anyhow
[23:32] <ceej> like fs.readdir('apps')
[23:33] <_announcer> Twitter: "After listening to @rentzsch talk about node.js on Core Int #30 http://coreint.org/30 I'm installing it to a server to test on."-- Patrick McCarron. http://twitter.com/McCarron/status/14866744242
[23:33] <ceej> isaacs: would you be able to give me an example please?  It would really help out
[23:33] <isaacs> ceej: like fs.readdirSync(path.join(__dirname, "apps")).filter(function (p) { return p.match(/\.js$/) }).forEach(function (f) { require(path.join(__dirname, "apps", f).replace(/\.js$/, '')) })
[23:33] <isaacs> (untested, use at your own risk)
[23:34] <stagas> isaacs: nice :)
[23:34] <stagas> that was quick
[23:34] <isaacs> stagas: i was already typing it when he asked :)
[23:35] <ceej> thank you, would path be sys.path?
[23:36] <isaacs> ceej: path = require("path")
[23:36] <ceej> sys.readdirSync ----> has no method 'readdirSync'
[23:37] <isaacs> ceej: not sys.  no sys.
[23:37] <isaacs> fs
[23:37] SteveDekorte has left the channel
[23:37] <isaacs> fs = require("fs")
[23:37] <CIA-76> node: 03Brian White 07master * r7226206 10/ (3 files): Added support for OpenBSD 32-bit for c-ares - http://bit.ly/cQtyCZ
[23:37] <ceej> isaacs: ahh there we go....
[23:39] <ceej> hmmmm it seems to be ignoring the index.js file in frontend http://screencast.com/t/MmFmMDg3YT
[23:39] <ceej> as i get http://screencast.com/t/M2YzMWY3YT
[23:39] <stagas> q: is there a way to fetch the subdomain the user typed in node? like  mobile.server.com   to get the 'mobile' thing somehow?
[23:40] behmann has joined the channel
[23:42] <isaacs> ceej: well, yeah, that's not in the same folder.
[23:42] <isaacs> ceej: you didn't say you wanted a recursive search.
[23:42] <ceej> isaacs: doh that's what I meant :)
[23:42] <isaacs> ceej: for that, you'll have to stat each thing, and if it's a folder, search in there, too
[23:42] <isaacs> ceej: and it's not a one-liner any more.
[23:43] <isaacs> ACTION leaves it as an exercise for the reader.
[23:43] phiggins has joined the channel
[23:43] hellp has joined the channel
[23:44] <isaacs> ceej: this might help you.  it's a little function to mimic the unix "tree" command wiht the fs module: http://gist.github.com/377246
[23:45] <ceej> whoa
[23:46] pjb3 has joined the channel
[23:46] pzich has joined the channel
[23:47] <mjr_> that is some awesome recursive functionation.
[23:47] <ceej> doesn't seem to work though...throws some errors
[23:47] <ceej> wait nm....
[23:48] <ceej> no luck doing fs.treeSync("app");
[23:49] <ceej> no errors just doesn't seem to add the files
[23:49] <isaacs> ceej: it needs the absolute path
[23:50] <isaacs> ceej: fs.treeSync(path.join(__dirname, "app"))
[23:50] <isaacs> ceej: should give you a tree of Stats objects
[23:51] charlesjolley has joined the channel
[23:51] <ceej> nudda 
[23:52] <mscdex> stagas: it should just be a matter of doing a split on "." on the url's hostname
[23:52] <ceej> sys.puts(fs.treeSync(path.join(__dirname, "application"))) does show anything
[23:52] <ceej> app = application
[23:53] tlrobinson has joined the channel
[23:53] <ceej> man if only i could get this to work....
[23:53] <mjr_> you can
[23:54] <ceej> I'm trying :)
[23:54] <isaacs> ceej: works for me
[23:54] <ceej> http://pastie.textmate.org/private/hhrncdgb2ef7gnkevhwfq
[23:54] <isaacs> $ node fs.tree.js 
[23:54] <isaacs> [object Object]
[23:54] <ceej> http://screencast.com/t/OTVkMGRl
[23:54] <isaacs> ceej: yo'ure not outputting the results, you're just creating the object and then exiting
[23:55] <isaacs> ceej: please read line 76 and compare it to what you've pasted above.
[23:55] <isaacs> ceej: note that it doesn't have the sys.puts call
[23:55] <stagas> mscdex: yes but where in node do you get the full url with the domain in a string? request.url is past the /
[23:55] <isaacs> stagas: you need to check the request.headers.host
[23:55] <mscdex> stagas: with the url module
[23:55] <mscdex> or that
[23:56] <isaacs> stagas: the url MAY contain the hostname and/or protocol, but in practice, almost never ever does
[23:57] <stagas> mscdex: found it thanks
[23:58] <ceej> isaacs: even with it as sys.puts it doesn't output anything to the terminal
[23:58] <stagas> isaacs: what does that mean, what mscdex says wouldn't work some times?
[23:58] stephenlb has joined the channel
[23:58] <mscdex> i think he meant request.url
[23:58] <isaacs> stagas: yes.  request.url will usually not contain the host.  you must check request.headers.host
[23:58] <stagas> oh
[23:58] <isaacs> ceej: please show me your cod.
[23:58] <isaacs> *code
[23:59] <mscdex> that sounded fishy ;-)
[23:59] <isaacs> hahah
[23:59] <ceej> http://pastie.textmate.org/private/a0qzk5jwur6xl3g7nfujoa
[23:59] <ceej> lol
