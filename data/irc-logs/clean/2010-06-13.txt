[00:00] <tmpvar> arg, osx is really pissing me off now
[00:02] <tmpvar> http://imagebin.org/101066 -- thats supposed to be a cube
[00:02] <tmpvar> it is on linux.. but osx. FAIL
[00:03] <visnup> looks like a HYPERcube
[00:04] stepheneb has joined the channel
[00:06] <_announcer> Twitter: "RT: @pquerna: New blog post, Drinking the Node.js Kool-Aid:  http://bit.ly/d5NBd5  #nodejs #node.js &lt; Very cool. I need to play with that." -- Mike Bailey (mckt). http://twitter.com/mckt_/status/16037698411
[00:08] <_announcer> Twitter: "@webr3 would like to know your thoughts on node.js after you play with it a bit.  Haven't had time to yet." -- Seantron™ McCracken. http://twitter.com/Seantron/status/16037802149
[00:11] utgo has joined the channel
[00:14] <pufuwozu> tmpvar, I was getting segfaults for all GL calls. I stopped them by returning Undefined()
[00:16] <tmpvar> yeah, i made quite a few changes in the osx-glfw branch
[00:16] <tmpvar> if you use it you'll need to re-run gen.php
[00:16] <tmpvar> before building
[00:18] JimBastard has joined the channel
[00:19] <JimBastard> pretend i was crazy and really wanted to wrap async method to make it sync? how would you do it? this is my current approach but its not working, http://gist.github.com/436200
[00:19] <JimBastard> i think while(true) is no good without a timer either
[00:19] <JimBastard> too many loops
[00:20] <jashkenas> pass the remainder of the program as your callback.
[00:20] <JimBastard> is there magic to be had in process.binding? i was looking at the fs module code for the sync file IO but i couldnt understand
[00:20] <JimBastard> jashkenas: dude could you fork my gist and fix it? ill love you forever. if you busy its cool
[00:20] <JimBastard> i just am lost
[00:20] <JimBastard> >.<
[00:20] mrjjwright has joined the channel
[00:21] <jashkenas> Nah, I was just explaining how to do it async, but have the same effect as if it were sync...
[00:21] <technoweenie> JimBastard: ruby lets you do it with eventmachine and fibers :)
[00:21] <JimBastard> whats ruby?
[00:21] <jashkenas> You pass everything that you were going to do after the call ... as the callback.
[00:21] <JimBastard> huh
[00:22] <JimBastard> jashkenas: im trying to build a module that will take any async method and wrap it as sync 
[00:22] <ryah> JimBastard: it's rather impossible
[00:22] <jbrantly> JimBastard: afaik, you can't
[00:22] <jashkenas> that's not going to happen.
[00:22] <jashkenas> JimBastard: check this ticket out though: http://github.com/jashkenas/coffee-script/issues#issue/350 It's interesting.
[00:23] <JimBastard> dude
[00:23] <JimBastard> pretend i wasnt a retard for a second
[00:23] <technoweenie> whoa thats cool
[00:23] <technoweenie> jashkenas: i've been playing with coffeescript in a port of cijoe.  i love it
[00:23] <ryah> JimBastard: then you could implement coroutines
[00:23] <JimBastard> ahahahaha
[00:23] <JimBastard> ACTION is owned
[00:23] <jashkenas> technoweenie: sweet.
[00:24] <ryah> JimBastard: but it's a bad option
[00:24] <ryah> JimBastard: keeping everything async has its advantages
[00:24] <JimBastard> ryah: i think i have a pretty good use case
[00:24] <ryah> what is it?
[00:24] k23z__ has joined the channel
[00:24] <JimBastard> ryah: single node script running once on a single node instance used only as a user script / desktop script
[00:24] <JimBastard> so you fire the script, it runs sync, and it dies
[00:24] <k23z__> anyone here interested in writing together a game server with Node ? on github , starting uhh... now ? for fun and filling a CV with
[00:25] <JimBastard> one request
[00:25] <JimBastard> one user
[00:25] <mscdex> k23z__: zzt!
[00:25] <k23z__> mscdex, y/n ?
[00:25] <_announcer> Twitter: "My new startup stack goes #nodejs + #expressjs + #redis seriously, Maybe #mongodb for data layer. Has just begun coding actually, can't wait" -- Kadir Pekel. http://twitter.com/kadirpekel/status/16038605256
[00:25] <JimBastard> ohh yeah zzt
[00:25] <JimBastard> k23z__: 
[00:25] <jashkenas> JimBastard: can you gist the annoying nested part of your script?
[00:26] <JimBastard> jashkenas: ill post the whole thing
[00:26] <JimBastard> http://zzt.nodejitsu.com/
[00:26] <JimBastard> is that up? my hosts file is borked locally
[00:26] mscdex has joined the channel
[00:26] <JimBastard> http://gist.github.com/436200
[00:26] <mscdex> node-zzt is all the rage these days
[00:26] <JimBastard> http://github.com/marak/zztmmo
[00:26] <jbrantly> JimBastard: btw, http://www.neilmix.com/narrativejs/doc/
[00:27] <k23z__> "THIS Is a registered copy"
[00:27] <k23z__> omg !
[00:27] <k23z__> I was thinking of a MMO chess game server
[00:27] mscdex has joined the channel
[00:27] <JimBastard> reading jbrantly 
[00:27] <jashkenas> jbrantly: that ticket is similar to the narrativejs transformation ... but at compile time.
[00:27] <technoweenie> why is that mmo?  
[00:27] <mscdex> zzt lan parties!
[00:27] <technoweenie> unless you're talking about some kind of lobby
[00:27] <k23z__> technoweenie, err sorry, it's not, you're right
[00:27] <k23z__> technoweenie, lobby yea
[00:27] <jashkenas> k23z__: http://chessriot.com/
[00:28] JAAulde has joined the channel
[00:28] <jbrantly> jashkenas: I believe narrative is also at compile time
[00:28] <jbrantly> jashkenas: it's a rather old lib. never used it though.
[00:28] <JimBastard> why cant i just fake the blocking while tossing my node script into an infinite loop?
[00:28] <JimBastard> and break the loop when the async call comes back?
[00:29] <jashkenas> jbrantly: narrative is both compile and runtime ... it's abandoned by the author though ... he has a message about why that we can probably dig up.
[00:29] <jashkenas> ah, here:
[00:29] <jashkenas> "My thinking about such things has since evolved, and I no longer think narrativejs is the best way to approach the problems I was trying to solve. As a result, I’m no longer actively developing the project."
[00:29] <JimBastard> hee hee
[00:29] <jbrantly> jashkenas: ah :)
[00:29] <ryah> JimBastard: bad route
[00:29] <jbrantly> JimBastard: learn
[00:29] <JimBastard> i have no desire to write sync code
[00:29] <jbrantly> you apparently do
[00:30] <JimBastard> i want to have a sync API for my modules that i release to reflect my async methods
[00:30] <JimBastard> so users have the choice if they want
[00:30] <JimBastard> so like
[00:30] <jashkenas> JimBastard: that's the thing about async ... you can't just hide it like that. 
[00:30] <JimBastard> translate.text('foo', callback)
[00:30] <JimBastard> var x = translate.text('foo');
[00:30] <ryah> somehow node and serial batch scripts don't jive well
[00:30] <ryah> node an daemons do
[00:30] <JimBastard> serial batch scripts?
[00:30] <jashkenas> But what part of zzt is particularly bothersome async?
[00:30] <JimBastard> jashkenas: this has nothing to do with zzt
[00:31] stepheneb has joined the channel
[00:31] <JimBastard> i want to be able to easily reflect some of my async API methods to sync methods
[00:31] <JimBastard> so developers can pick
[00:32] <jbrantly> k23z__: http://websocketrpg.jbrantly.com/
[00:32] <k23z__> jbrantly, yeah , but I'm asking if anyone is interested in writing it like now
[00:32] <k23z__> like with me
[00:32] <k23z__> like on github
[00:33] <JimBastard> k23z__: zzt and websocketrpg are both on github
[00:33] <mscdex> jbrantly: is websocketrpg working?
[00:34] <JimBastard> ryah: is what im wanting to do really that terrible? why do you have sync methods in the FS module?
[00:34] <JimBastard> the sync file methods are really useful in simple admin scripts
[00:34] <jbrantly> mscdex: define "working"? it's just a proof of concept
[00:34] <ryah> JimBastard: it's possible it just requires coroutines. there are two problems 1) hard to implement 2) i forbid it in node
[00:34] <mscdex> jbrantly: working as in should i be able to get past the login window?
[00:34] <JimBastard> again, the sync fs module calls?
[00:34] <JimBastard> are those not sync?
[00:34] <ryah> JimBastard: those are true sync calls
[00:35] <jbrantly> mscdex: you're using draft76 prob. So won't work there (yet)
[00:35] <mscdex> jbrantly: oh, ok
[00:35] <JimBastard> yeah, fuck
[00:35] <ryah> JimBastard: fs.renameSync literally shuts down the process while it runs
[00:35] <JimBastard> ahahahaha
[00:35] <JimBastard> i was about to say
[00:35] <jbrantly> mscdex: I'm working on writing my own websocket module for Connect. It'll get there eventually.
[00:35] <JimBastard> so i guess there is no way for me to offer sync api calls
[00:36] Aria has joined the channel
[00:36] <JimBastard> the only thing that is gonna be sync in the special fs modules and json.parse and stuff like that
[00:36] <ryah> they're not async underneith, that is 
[00:36] <ryah> json.parse is sync, and fs already has sync methods
[00:36] <mscdex> jbrantly: micheil's websocket server and socket.io have draft 76 implemented if you need help with that
[00:36] <ryah> (or was that a question?)
[00:36] <JimBastard> i could stop execution but it would probaly pin my cpu to 100%
[00:37] <JimBastard> kinda useless
[00:37] <jbrantly> mscdex: purposefully *not* looking at that code :) it's a matter of time, not complexity
[00:37] <mscdex> jbrantly: hehe
[00:37] <JimBastard> tmpvar said it was easy and hes doing it already
[00:37] <JimBastard> tmpvar ryah says your a liar and your momma is ugly
[00:37] <ryah> you can implement coroutines and save the execution stack - drop back to the event loop
[00:37] <JimBastard> is that what a coroutine is?
[00:37] <JimBastard> ok
[00:38] <ryah> a way to hold execution while something async runs, pretty much
[00:38] <JimBastard> okay
[00:38] <JimBastard> ill see what i can do
[00:38] <technoweenie> yea thats how ruby fibers do it
[00:38] <JimBastard> is it possible to implement that without writing c code?
[00:38] <JimBastard> for node
[00:38] <ryah> JimBastard: no
[00:38] [[zz]] has joined the channel
[00:38] <JimBastard> ok
[00:38] <ryah> but you can talk to steve dekote
[00:39] <ryah> he's working on it
[00:39] <ryah> (again, against my will)
[00:39] <JimBastard> hee hee
[00:39] <JimBastard> ACTION bows to ryah's will
[00:39] <SteveDekorte> hey JimBastard 
[00:39] <JimBastard> hey SteveDekorte 
[00:39] <SteveDekorte> JimBastard: interested in helping me add coro support?
[00:40] <JimBastard> i dont think my paygrade is high enough for that
[00:40] <JimBastard> :-\
[00:40] <SteveDekorte> JimBastard: if you can get the v8-coroutine project compiling on OSX, I can do the rest
[00:40] <_announcer> Twitter: "abandoning server side js (v8,node.js) rather quickly, very good but not enough to be productive yet, could make awesome demo's w/ though" -- nathan. http://twitter.com/webr3/status/16039321370
[00:41] <technoweenie> JimBastard: that's some real man programming
[00:41] <mscdex> rut roe
[00:41] <JimBastard> i only write code in firebug on github.com
[00:41] <technoweenie> scramble the storm eagles
[00:41] <mscdex> scramble the eggs
[00:41] <JimBastard> lol
[00:42] <JimBastard> SteveDekorte: yeah sorry, i cant really help with that. im just trying to make the modules im writing have better APIs for the users. i thought what i was doing could be solved with some js-fu but apparently its not that simple
[00:42] <JimBastard> seriously though firebug and github is my usually IDE. then i copy paste to textmate and save
[00:42] <jashkenas> JimBaster: hey, you can always use CommonJS ;)
[00:43] <JimBastard> jashkenas >><<
[00:43] <JimBastard> whats that?
[00:44] <JimBastard> so no sync methods for now, case closed
[00:44] <JimBastard> its probaly better anyway
[00:44] <technoweenie> your kids will thank you
[00:44] <SteveDekorte> JimBastard: no, it's not :)
[00:44] <mscdex> your neighbors will thank you
[00:45] <JimBastard> SteveDekorte: i just want sync calls for quick and dirty scripts. like admin scripts
[00:45] <JimBastard> not for applications
[00:45] <JimBastard> ohh wrong reply
[00:45] <JimBastard> 10-4
[00:45] <JimBastard> aight back to code
[00:46] <ryah> JimBastard: by forcing you (the early adoptor) to produce async libs now, we've saved ummeasable anguish of developers down the line
[00:46] <JimBastard> ala twisted?
[00:47] <JimBastard> also to be clear, i only wanted to reflect my async APIs, there would be NO sync methods without an exact async counterpart
[00:48] <JimBastard> but i see, its really okay. i think we need better developed flow control libraries
[00:48] <mscdex> friends don't let friends perform synchronous operations.
[00:48] <JimBastard> i was reading a book about sweden, apparently they dont have lines
[00:48] <JimBastard> people take numbers and walk around
[00:49] <mscdex> like the bakery
[00:49] <JimBastard> aye
[00:51] <ryah> JimBastard: for say.js - you just need a queue
[00:51] <JimBastard> say is a unique one
[00:51] <JimBastard> thats easy
[00:51] <JimBastard> right now im working on translate.js
[00:51] <JimBastard> its just about done
[00:51] <JimBastard> but thanks, i appreciate the advice
[00:51] <JimBastard> its good stuff for sure
[00:51] <ryah> mm, yeah, i guess that requires callbacks
[00:52] <JimBastard> im already translate.text('yo quero tacos por favor')
[00:52] <JimBastard> to I want tacos please
[00:53] <JimBastard> just adding in the options now for all the other languages
[00:53] ajpiano has joined the channel
[00:53] <mscdex> quiero
[00:53] <JimBastard> si
[00:53] <mscdex> ;-)
[00:53] <JimBastard> the next step might be the att labs webservice
[00:53] <JimBastard> that returns multilingual tts
[00:53] <JimBastard> javascript time!
[00:53] <mscdex> javascript-fu!
[00:53] <JimBastard> dude, must finish javascript.fu
[00:53] <JimBastard> -
[00:53] <JimBastard> i need that shit by next month
[00:54] <JimBastard> or else my view engine has no helper library
[00:54] <JimBastard> i need to leave now im wasting to much time bbl
[00:54] <mscdex> huhu
[00:54] <_announcer> Twitter: "Paul Querna wrote a great post on drinking the #nodejs kool-aid: http://is.gd/cNbk7" -- Jeff Waugh. http://twitter.com/jdub/status/16039989187
[00:56] <SteveDekorte> coroutines don't make things any more synchronous AFAICS
[00:57] <jashkenas> SteveDekorte: why are you interested in building them for node? I assume you've already hashed all this out with ry.
[00:57] <SteveDekorte> the only difference is the amount of code in which one expresses the same thing
[00:57] <SteveDekorte> jashkenas: to reduce code by a factor of 10x or so
[00:58] <jashkenas> ah 10x. gulp. that sounds like something that needs to be demonstrated. can't wait to see it.
[00:58] <pquerna> tbh, I'd be more interested in promises/futures maybe, over trying to make coroutines.
[00:58] <pquerna> i've lived that life in lua-world already.
[00:58] <SteveDekorte> pquerna: Io implements futures with coros
[00:59] <SteveDekorte> jashkenas: you can demonstrate it easily - take any node.js code and rewrite it as if all the calls were sync (even though with coroutines, they are not)
[01:00] <mscdex> ugh, opensuse takes forever to install
[01:00] <_announcer> Twitter: "node.js "drinking the Koolaid" article: http://journal.paul.querna.org/articles/2010/06/12/node-js/" -- John Wright. http://twitter.com/mrjjwright/status/16040281798
[01:00] <ryah> we had promises at some point. remvoed them.
[01:01] <jashkenas> SteveDekorte: fair enough. Async operations inside of loops that have to behave as sync, in particular.
[01:01] jedschmidt has joined the channel
[01:01] <SteveDekorte> jashkenas: right, or any state machine - sendmail protocol for example
[01:01] <pquerna> ryah: great, so experiment already tried, works for me :)
[01:02] <jbrantly> SteveDekorte: is there additional overhead? is it significant?
[01:02] <saikat> i'm trying to use expresso to write some test code, but my test code requires some setup that calls asynchronous functions.  how can i make the expresso tests not run until the setup is done?
[01:03] <saikat> or i suppose, i could run my setup and teardown inside each expresso test
[01:03] <SteveDekorte> jbrantly: nothing significant AFAICS
[01:03] <technoweenie> saikat: wrap the setup code in an event emitter object and emit an event when they're ready
[01:03] <technoweenie> jashkenas: this is what it looks like in ruby: http://www.igvita.com/2010/03/22/untangling-evented-code-with-ruby-fibers/  look at code example #2
[01:04] <saikat> technoweenie: i think i'd still probably need to modify the expresso binary to not simply run everything in module.exports right?
[01:04] <saikat> and instead, wait for the event that setup is ready?
[01:04] <technoweenie> perhaps
[01:05] <jbrantly> SteveDekorte: I, for one, would be interested in seeing what you come up with :)
[01:05] jedschmidt has joined the channel
[01:06] <ryah> i like to think of [B[5~[6~[6~[6~j
[01:06] <ryah> :/
[01:06] <mscdex> wha
[01:06] <ryah> connection sucks
[01:07] <mscdex> oh, terminal escape codes?
[01:07] <technoweenie> ryah: i think you should see a doctor about that?
[01:08] <mscdex> this is so silly. i told opensuse to not install an X server and here it is installing it anyway
[01:09] <mscdex> ACTION shakes a fist
[01:10] pkrumins has joined the channel
[01:11] <_announcer> Twitter: "initial thoughts on server side js with v8 and node.js http://bit.ly/dBLfuC (basically my scoping work documented thus far)" -- nathan. http://twitter.com/webr3/status/16040788764
[01:12] stepheneb has joined the channel
[01:12] jakehow has joined the channel
[01:20] isaacs has joined the channel
[01:20] polotek has joined the channel
[01:28] <_announcer> Twitter: "josi is a web framework for node.js: http://thatismatt.github.com/josi/" -- Antonio Cangiano. http://twitter.com/acangiano/status/16041654032
[01:34] SteveDekorte has joined the channel
[01:39] fictorial has joined the channel
[01:40] <fictorial> "Implement datagram sockets" ... Yay!
[01:41] Aikar has joined the channel
[01:46] <isaacs> felixge: whenever you get a chance, please rectify this situation: http://registry.npmjs.org/dirty <-- 404
[01:46] <isaacs> felixge isn't here.
[01:47] <isaacs> ACTION targets the darkness...
[01:54] stepheneb has joined the channel
[01:54] <isaacs> the .npmignore file is the best thing ever.  i don't know why i didn't implement that ages ago.
[01:58] <_announcer> Twitter: ""josi is heavily influenced by ASP.NET MVC". That's not something you hear every day (Node.js web framework) http://goo.gl/6tIR" -- Kevin Dente. http://twitter.com/kevindente/status/16043186080
[02:00] derbumi has joined the channel
[02:09] hammerdr has joined the channel
[02:12] <hammerdr> is there a way to install a local package using npm without tarballing the package?
[02:12] <isaacs> hammerdr: npm link .
[02:12] utgo has joined the channel
[02:12] kschzt has joined the channel
[02:13] <_announcer> Twitter: "@mrdoob what are your thoughts after (surely) having tried #node.js?" -- kschzt. http://twitter.com/kschzt/status/16043956012
[02:13] <isaacs> hammerdr: that'll create a symlink to the folder, and run the install scripts, so it's like an install, but code will be auto updated as you change it.
[02:15] jakehow has joined the channel
[02:18] <hammerdr> isaacs: which is more useful anyway :) Thanks
[02:18] <isaacs> hammerdr: i usually make sure it works with npm install at some point, just to make sure some link weirdness isn't interfering or something
[02:19] phiggins has joined the channel
[02:20] <jedschmidt> isaacs: npm ls @active shows npm@0.1.11, even though i've just done npm install npm.
[02:20] <jedschmidt> isaacs: am i doing something wrong?
[02:21] <isaacs> jedschmidt: try this: npm --auto-activate always install npm
[02:21] <isaacs> jedschmidt: that's the default as of 0.1.16, i believe
[02:21] <isaacs> or maybe 0.1.15
[02:22] <jedschmidt> well, i've already installed 0.1.16, but i just tried that, and 0.1.11 is still active.
[02:22] <isaacs> jedschmidt: but you installed 0.1.16 *using* 0.1.111
[02:22] <isaacs> jedschmidt: npm activate npm 0.1.16
[02:22] <isaacs> jedschmidt: i know, it's lame.  that's why i changed the default
[02:23] <jedschmidt> isaacs: ah, okay.
[02:23] <jedschmidt> isaacs: that worked. i guess that's the last time i need to worry about that?
[02:23] <isaacs> jedschmidt: hopefully
[02:24] <isaacs> jedschmidt: running "make" in the code folder would do it, too
[02:24] <technoweenie> hey jedschmidt how goes fab.js
[02:24] <jedschmidt> isaacs: cool. thanks for the help.
[02:24] polotek has joined the channel
[02:24] <isaacs> jedschmidt: np
[02:25] <jedschmidt> technoweenie: had a few false starts, pondering how deep down the rabbit hole of async i should go.
[02:26] <jedschmidt> technoweenie: but back on it now, thankfully. sorry i haven't been terribly iterative on it of late, but it's getting there.
[02:27] <polotek> isaacs: so what's wrong with libxmljs?
[02:27] <isaacs> polotek: looks like the tarball is corrupted.
[02:27] <technoweenie> no need to apologize dude
[02:27] <jedschmidt> technoweenie: how ya?
[02:28] <isaacs> polotek: i sincerely hope that the days of corrupted uploads will be done with soon.  please "make" the most recent code and re-publish sil vous plait
[02:28] <isaacs> polotek: in fact, they should be mostly done with now
[02:28] <jedschmidt> technoweenie: seeing connect definitely inspired me to keep going... i don't think i'd be happy working on someone else's framework anymore, heh.
[02:29] <polotek> isaacs: The version that' sup there is the tarball from github
[02:29] <technoweenie> jedschmidt: good, just got back from railsconf, ready to hack on some shit
[02:29] <polotek> there's nothing to make
[02:30] <technoweenie> jedschmidt: i guess i always liked the api for fab over connect, but it looks interesting too
[02:30] <jedschmidt> technoweenie: yeah, conferences are supermotivating like that. jsconfeu can't come soon enough.
[02:30] <isaacs> polotek: the tarball that's up there isn't a valid tarball.
[02:30] <isaacs> polotek: $ tar tzf libxmljs-0.3.1.tgz 
[02:30] <isaacs> polotek: tar: Unrecognized archive format: Inappropriate file type or format
[02:30] <isaacs> polotek: tar: Error exit delayed from previous errors.
[02:31] <kschzt> how do you guys suggest I parallelize calculations in a dynamic cluster with Node? WebWorkers and AMQP for disco?
[02:31] <polotek> hmmm
[02:31] <jedschmidt> technoweenie: yeah, i think we have the same aesthetic sense there. i'm fairly allergic to a lot of the arbitrary decisions i see in other frameworks.
[02:31] <jedschmidt> technoweenie: would sure be nice to get paid like them to hack it, tho!
[02:32] <technoweenie> ha, yea
[02:32] <technoweenie> frameworks take a ton of work
[02:32] hassox has joined the channel
[02:37] <kschzt> I think I'll play with the WebWorkers API tomorrow, try to make 3-4 node.js's communicate and pass messages
[02:38] ph^ has joined the channel
[02:38] <kschzt> to be able to eventually have message-passing concurrency with a Node cluster
[02:39] <kschzt> prolly take me more than tomorrow though :) but that's the idea
[02:39] <maushu> Binary messages?
[02:40] <kschzt> you can't do that afaik :)
[02:40] <kschzt> well there is protobuf and msgpack
[02:41] <kschzt> but that's not really needed now. basic distributed message queue (AMQP can do it) 
[02:41] <_announcer> Twitter: "Watching Ryan Dahl's Node.js talk from JSConf... really good stuff. http://blip.tv/file/3735944" -- Jason Feinstein. http://twitter.com/JasonWyatt/status/16045495423
[02:43] fictorial has joined the channel
[02:44] <kschzt> maushu, but yes, binary messages optimally, of course
[02:44] <hammerdr> I'm getting this error when trying to install a library with npm.. anyone able to understand what the error is?
[02:44] <hammerdr> http://gist.github.com/436278
[02:44] <maushu> bson?
[02:44] <kschzt> why not
[02:45] <maushu> You can use Buffers with msgpack.
[02:45] <maushu> *can't
[02:45] <isaacs> hammerdr: first of all, please update npm.  npm --auto-activate always install npm
[02:46] rphillips has joined the channel
[02:46] <kschzt> not interested in msgpack atm
[02:46] <isaacs> hammerdr: secondly, it seems like the tarball from github is corrupted.
[02:46] <isaacs> hammerdr: this is why i host the tarballs myself now.
[02:47] <hammerdr> interesting. Is that a common github problem?
[02:47] <kschzt> the core distribution between a number of node nodes is hard enough
[02:47] <isaacs> hammerdr: yeah, i used to see that ALL the time.
[02:48] <kschzt> having task queues and a simple collection sync'd over UDP would be first step
[02:49] <kschzt> (s/UDP/AMQP/g if you will)
[02:50] <kschzt> later
[02:53] <_announcer> Twitter: "Projects like josi are making it impossible for me to ignore Node.js. too many awesome things I need to learn!" -- Alex Robson. http://twitter.com/A_Robson/status/16046109691
[02:55] jakehow has joined the channel
[03:01] <polotek> isaacs: works now
[03:01] <isaacs> polotek: w00t!
[03:02] JimBastard has joined the channel
[03:03] <JimBastard> hey hey does anyone wanna test translate.js? im about to go into photoshop mode and fix up that logo 
[03:03] <JimBastard> its translates any language to any language using node.js and magic
[03:03] <JimBastard> (and google)
[03:03] <JimBastard> https://github.com/Marak/translate.js
[03:03] <JimBastard> in the demo you can ask for tacos in spanish 
[03:04] <JimBastard> i mean english, it turns that into spanish and then back into english. normalizes
[03:04] <JimBastard>  Θέλω tacos παρακαλώ. 
[03:05] <JimBastard> does anyone speak any foreign languages here?
[03:05] <JimBastard> Я хочу тако пожалуйста. 
[03:05] <JimBastard> if so, i'd like to ask you for tacos
[03:06] <JimBastard> yo jedschmidt 
[03:06] <JimBastard> 私はタコスがしてくださいします。
[03:06] <JimBastard> 私はタコスがしてくださいします。 !!!!!
[03:06] <JimBastard> ^_^
[03:08] Validatorian has joined the channel
[03:09] SamuraiJack has joined the channel
[03:14] softdrink has joined the channel
[03:21] <Validatorian> so, who's winning the popularity contest for node non-static (at least, not only static) http servers?
[03:24] <JimBastard> antinode?
[03:24] <JimBastard> http://i.imgur.com/GJhm2.png
[03:24] <JimBastard> ive achieved taco normalization for 3 languages, there are like 20 more just too lazy to write the tests
[03:24] <JimBastard> tests are for people whose code fails
[03:25] <JimBastard> tests are for people whose code fails #bastardfacts
[03:28] <Validatorian> maybe I'm misunderstanding what a 'static web server' is -- is antinode  efficient at serving dynamic web pages as well?
[03:28] <JimBastard> ohh lulz
[03:28] <JimBastard> you said non-static
[03:28] <JimBastard> express ?
[03:28] <Validatorian> I thought you hated express
[03:28] <JimBastard> expessjs?
[03:28] <JimBastard> i dont hate anything
[03:29] <JimBastard> ive never written an application in express, not really a good judge
[03:29] <JimBastard> it has a lot of users
[03:29] <JimBastard> and lots of docs
[03:29] <JimBastard> and decent enough code
[03:29] <JimBastard> im working on 100% client side interfaces
[03:29] <JimBastard> so mvc is like lolwut
[03:30] <JimBastard> what are you trying to build Validatorian , why are you asking
[03:32] <Validatorian> a page serving data that is updated in real-time using gracefully degrading 'comet' technologies (pretty sure there's a module for that already)
[03:33] <JimBastard> yo mscdex can you help me with some photoshop fu? i need some changing of the babel fish i have @ https://github.com/Marak/translate.js
[03:33] <JimBastard> ill add you as a author
[03:33] <JimBastard> it could be funny
[03:33] <JimBastard> change each label with some nodejs something
[03:33] <JimBastard> ahh fuck
[03:33] <JimBastard> https
[03:33] <Validatorian> link not working
[03:33] <JimBastard> fuuck
[03:33] <JimBastard> hold up
[03:33] <JimBastard> im onit
[03:33] <fictorial> isaacs: pick a logo for npm?
[03:33] <jashkenas> Validatorian: check out the source for this one: http://mnutt.github.com/hummingbird/
[03:34] <isaacs> fictorial: not yet
[03:35] <JimBastard> im such a noob
[03:35] <JimBastard> http://github.com/Marak/translate.js
[03:35] <JimBastard> s/https/http
[03:35] <JimBastard> now where is mscdex 
[03:35] <fictorial> isaacs: how many contenders are there?  are they online?  I'm just curious.  I don't have any time to submit another.
[03:36] <isaacs> fictorial: nothing much.
[03:36] <isaacs> bbl
[03:41] <Validatorian> jashkenas: what browser(s) should the demo work in? I've tried ff, chrome and safari, and there's no data :-/
[03:41] hammerdr has joined the channel
[03:41] <jashkenas> i don't know if the demo's up at the moment, but it's a sweet app to learn from. 
[03:42] <Validatorian> k, I'll take a look at the source
[03:42] <Validatorian> thanks
[03:52] <hammerdr> Are there any examples, apis, references, libraries, etc. for authentication?
[03:52] jashkenas has left the channel
[03:54] <JimBastard> so now say.js can translate like 30 language
[03:54] <JimBastard> http://github.com/marak/say.js/
[03:54] <JimBastard> i can ask for tacos in spanish text and hear english
[03:54] <JimBastard> cheaaaa
[03:56] <Validatorian> any chance of a *nix port, or is it going to remain mac only?
[03:57] <zaach> Validatorian: my fork uses espeak on linux
[03:57] <Validatorian> awesome, I'll have to try it out
[04:05] mtodd has joined the channel
[04:06] <tmpvar> interesting v8 behavior. on linux I can set args[0] = Number::New(123); under mac osx, that does not work.
[04:07] <JimBastard> hey tmpvar 
[04:07] <tmpvar> (pass by reference)
[04:07] <tmpvar> yo
[04:07] <JimBastard> hows it going
[04:07] <tmpvar> getting my swerve on
[04:07] <JimBastard> cheaaa balmer peak
[04:07] <tmpvar> you?
[04:07] <JimBastard> you see translate and say update?
[04:07] <JimBastard> im speaking 30 languages son
[04:07] <JimBastard> in text and tts
[04:07] <tmpvar> haha
[04:07] <tmpvar> nice
[04:07] <tmpvar> via google?
[04:07] <JimBastard> you gotta check out my blog
[04:08] <JimBastard> http://github.com/marak
[04:08] <tmpvar> that shitty old thing? :P
[04:08] <JimBastard> ^^ bang
[04:08] <JimBastard> github is my blowiterbookface
[04:08] <JimBastard> github is my blowiterbookface #bastardfacts
[04:08] <tmpvar> hah
[04:09] <tmpvar> basard fact: when a bitch says she dun have the money, you slap that bitch.
[04:09] <tmpvar> s/basard/bastard*
[04:09] <tmpvar> 83 repos eh?
[04:09] <tmpvar> you are going to need a damn army to maintain them all
[04:10] <JimBastard> man tmpvar what i really need is soe photoshop-fu to turn the babel fish here http://github.com/marak/translate.js into a fucking funny pic
[04:10] <JimBastard> where is mscdex 
[04:11] <JimBastard> crop it and change all the labels to node and async terms
[04:11] <JimBastard> and add tacos
[04:11] <JimBastard> gold
[04:11] <JimBastard> i can do it but like ughhh i need to write more code
[04:11] <JimBastard> and i hate photoshop
[04:11] <JimBastard> ACTION has weak photoshop-fu
[04:12] <isaacs> JimBastard: srsly.
[04:12] <JimBastard> lol
[04:13] <isaacs> package.json that shit up, bro!
[04:13] <JimBastard> isaacs: you know what i really need
[04:13] <JimBastard> is an automated solution
[04:13] <isaacs> inorite!?
[04:13] <JimBastard> for both that + a lot of other things
[04:13] <JimBastard> you are right
[04:13] <JimBastard> i have to sit down
[04:13] <JimBastard> and do like 10+
[04:13] <JimBastard> you feel me
[04:13] <isaacs> like some kind of "npm package ." or something
[04:13] <JimBastard> im soooo laaaazy
[04:13] <isaacs> and have it walk through and ask you for a few things, and then you type in what it can't figure out
[04:13] <JimBastard> like seriously lazy
[04:14] <isaacs> it could even parse the README.md file for a h1 tag and default that to the name, and edit out node-* and *-js
[04:14] <JimBastard> i promise ill add a lot of repos to npm very soon
[04:14] <isaacs> it's better for you in the short term
[04:14] <isaacs> npm link . is super handy
[04:14] <JimBastard> i want those awesome namespaces
[04:14] <JimBastard> well yo
[04:14] <JimBastard> check this
[04:14] <JimBastard> i need my installs to work with AND without NPM for these little projects
[04:14] <isaacs> ok, that's no problem.
[04:14] <JimBastard> i cant cut out a segment of the developers
[04:14] <JimBastard> is there docs on that/
[04:15] <isaacs> don't think about who you're cutting out.  think about what you're cutting them INTO
[04:15] <tmpvar> lols
[04:15] <JimBastard> >><<
[04:15] <JimBastard> i think it would be easy to try catch trap that shit
[04:15] <JimBastard> fallback to dir include
[04:15] <tmpvar> isaacs, now you done gone corporate
[04:15] <isaacs> if they go "guess i need to install npm to use all the awesome marak squires awesomeness" then they'll see so much more waiting at their fingertips
[04:15] <JimBastard> i dunno
[04:16] <JimBastard> isaacs i dont think you appreciate how stupid and lazy people are
[04:16] <_announcer> Twitter: ""Backend services lack a Rails. They lack a Django. They lack a jQuery" -http://bit.ly/crRYhM  On #Node.js / #Twisted / #AMQP and others..." -- Alex Clemesha. http://twitter.com/clemesha/status/16050769907
[04:16] <isaacs> JimBastard: but that's just it, npm helps them be lazy productively, and share stuff so they can be even lazier
[04:16] <JimBastard> i know
[04:17] <JimBastard> what if they are in a env where they cant use NPM ?
[04:17] <isaacs> JimBastard: then they're in an env where they can't use node, and who cares?
[04:17] <JimBastard> or the ENV they are jailed in doesnt allow remote installs
[04:17] <JimBastard> negative
[04:17] <JimBastard> hrmmm
[04:17] <isaacs> JimBastard: oh, you mean like heroku or something?
[04:17] <JimBastard> i dunno man
[04:17] <JimBastard> people still run 1.31
[04:17] <isaacs> JimBastard: yeah, and they're stone man living in the stone ages
[04:17] <JimBastard> i dont want to cut ONE person
[04:18] <isaacs> aka last month
[04:18] <isaacs> :)
[04:18] <JimBastard> if ONE person says ughhh fuck i dont want to click another page and read
[04:18] <JimBastard> then its fail
[04:18] <JimBastard> i want people to be like
[04:18] <isaacs> so, yeah... that's why we need a nice single 3-line-install thing that sets you up with nave and npm.
[04:18] <JimBastard> zomg node + awesome = win
[04:18] <JimBastard> then after a day or so be like
[04:18] <JimBastard> yo where the package manager at
[04:18] <JimBastard> and be like NPM TIME!
[04:19] <tmpvar> eh, just ship npm with node
[04:19] <isaacs> tmpvar: i disagree with that iea.
[04:19] <isaacs> *idea
[04:19] <tmpvar> spam people without package.json
[04:19] <JimBastard> tmpvar: too soon
[04:19] <isaacs> tmpvar: but i'd love to see sudo apt-get install npm which depends on node
[04:19] <tmpvar> with a package.json, "hey, add this file to your repo, and .. etc"
[04:19] <isaacs> tmpvar: i've kinda been doing that.
[04:19] <isaacs> tmpvar: please join me.
[04:19] <tmpvar> isaacs, sure, something to that effect
[04:20] <isaacs> tmpvar: i think we're gonna do like a weekend package-a-thon at some point.
[04:20] <tmpvar> dude, I'm trying to catch my ass
[04:20] <tmpvar> need to finish off this node-ogl stuff so i can re-focus on jsdom
[04:20] <isaacs> order a few pizzas, get some beers, and sit around installing shit all day and sending pull requests.
[04:20] <zaach> isaacs: npm package . would be nice, even if it just generates a template
[04:20] <JimBastard> *cough* openAL lulz
[04:20] <tmpvar> isaacs, word, that sounds fun
[04:20] <JimBastard> sup zaach 
[04:20] <tmpvar> JimBastard, dude.
[04:20] <zaach> sup JimBastard 
[04:20] <isaacs> i hate server maintenance so much
[04:21] <JimBastard> <= Marak
[04:21] <tmpvar> we'll auto generate 90%, you prepared to finish it ?
[04:21] <zaach> chillin
[04:21] <JimBastard> im totally wearing my jsconf tshirt ahaha
[04:21] <zaach> :)
[04:21] <tmpvar> JimBastard ^^
[04:21] <isaacs> i gotta swap out nginx with varnish and just SO don't wanna.
[04:21] <isaacs> it's like cleaning the fridge
[04:22] <tmpvar> sounds horrible
[04:22] <JimBastard> tmpvar: finish what
[04:23] <tmpvar> openal
[04:23] <JimBastard> all i know is if you can give me low latency audio.play() calls i can slice up like 10 of the most awesome beats i have for demos
[04:23] <tmpvar> im sure we can get it to 80% with an autogenerated binding
[04:23] <JimBastard> convert the tracks into JSONloops
[04:23] <tmpvar> lol
[04:23] <tmpvar> sure
[04:23] <JimBastard> thats a big job
[04:23] <tmpvar> but you have to load in different formats
[04:23] <JimBastard> wavs
[04:23] <tmpvar> mp3?
[04:23] <tmpvar> ogg?
[04:23] <JimBastard> mp3s are cool too i guess
[04:23] <JimBastard> naah
[04:23] <tmpvar> flac?
[04:23] <JimBastard> wavs are fine for now
[04:23] <tmpvar> mov?
[04:23] <tmpvar> :P
[04:23] <tmpvar> fine fine
[04:24] <JimBastard> i'll output beat slices at 24bit stereo wavs
[04:24] <tmpvar> alut does some of that for us though
[04:24] <JimBastard> hardcode the format for all i care
[04:24] <tmpvar> loads different formats into a standard format that openal can read
[04:24] <JimBastard> if you can get just 24 bit stereo wavs playing at low latency i can get soo much attention
[04:24] <tmpvar> i need to go profile opengl on osx. YAY. ill be back
[04:24] <JimBastard> we'll be internet famous
[04:24] <JimBastard> javascript party
[04:24] <tmpvar> (we'll work on it, very soon)
[04:25] justinlilly has joined the channel
[04:25] <JimBastard> (function(){})(http://github.com/marak/JSONloops)
[04:26] <JimBastard> javascript audio sequencer ^^ 
[04:26] <JimBastard> its almost time to switch back to that actually and try to get the browser demo working
[04:26] <JimBastard> this babel fish image is bugging me
[04:26] <JimBastard> i think its beer and photoshop time
[04:32] hammerdr_ has joined the channel
[04:35] <_announcer> Twitter: "@tjhanley nice. thanks for sending me the link. i've been meaning to play with node.js too" -- Ben Curren. http://twitter.com/bcurren/status/16051789148
[04:36] <_announcer> Twitter: "Playing with ejs templates for a nodejs app. Just realized ejs' from fellow Chicagoans @jupiterjs. Good work, fellas! http://embeddedjs.com" -- Jason Huggins. http://twitter.com/hugs/status/16051836697
[04:39] <isaacs> anyone have any experience with the customFD stuff in child_process.spawn?
[04:46] zaach has left the channel
[04:47] hammerdr_ has joined the channel
[04:51] hammerdr_ has joined the channel
[04:56] <isaacs> ryah: how would you feel about adding stderrFD and stdinFD to process.binding("stdio")?
[04:56] joshbuddy has joined the channel
[05:00] ajpiano has joined the channel
[05:03] JimBastard has joined the channel
[05:03] <JimBastard> did mscdex ever come back
[05:06] hammerdr_ has joined the channel
[05:06] <hammerdr_> anyone know how I would get the payload of a PUT request?
[05:06] <JimBastard> parse the request.body yo
[05:06] <JimBastard> wait no
[05:06] <JimBastard> STOP
[05:06] <JimBastard> hammer time
[05:07] <JimBastard> dude OMG
[05:07] <JimBastard> someone made a fan video for one of my video game rap songs
[05:07] <JimBastard> wtf
[05:07] <tmpvar> stop, stammer time
[05:07] <JimBastard> http://www.youtube.com/watch?v=8aJB7Le2_kU
[05:07] <JimBastard> ahaha
[05:07] <JimBastard> thats not anyone i know ^^
[05:07] <JimBastard> SIIIICKKK
[05:07] <hammerdr_> request.body is undefined
[05:08] <JimBastard> i dunno im not very good with the internet
[05:08] <tmpvar> JimBastard, lmfao
[05:08] <JimBastard> and probably wrong
[05:08] <jedschmidt> JimBastard: yo, you rang?
[05:08] <JimBastard> hey jed
[05:09] <JimBastard> http://github.com/marak/translate.js
[05:09] <JimBastard> how off is the japanese on that?
[05:09] <JimBastard> (top image)
[05:09] <JimBastard> LOL WTF WTF WTF http://www.youtube.com/watch?v=woN_vG00ZKU&feature=related
[05:09] <JimBastard> man
[05:09] <JimBastard> fucking gamers
[05:10] <JimBastard> jedschmidt: can i have tacos?
[05:11] <jedschmidt> dude, that japanese translation is horrrrrrrrrible!
[05:11] <JimBastard> ahahahaha
[05:11] <JimBastard> :-(
[05:11] <JimBastard> i sorry i wrote the whole thing in < 4 hours
[05:11] <jedschmidt> i tacos do please does!
[05:11] <jedschmidt> is the literal translation.
[05:11] <JimBastard> ahahaha
[05:11] <JimBastard> awesome
[05:11] <jedschmidt> heh, not you, teh goog.
[05:12] <JimBastard> i think thats a pretty good SS then
[05:12] <JimBastard> it tells you EXACTLY what you are going to get
[05:12] <JimBastard> :-)
[05:12] <jedschmidt> the fact that it survived the round trip is incredible.
[05:12] <JimBastard> but it did get tacos and please right?
[05:12] <JimBastard> it also normalized...
[05:12] <jedschmidt> and "i"
[05:12] <JimBastard> i think maybe the code is wrong in demo
[05:12] <JimBastard> but yeah
[05:12] <JimBastard> what you think? im photoshopping up the babel fish now
[05:12] <JimBastard> can i put your name in there?
[05:13] <JimBastard> :-)
[05:13] <JimBastard> i got like 20 labels
[05:13] <jedschmidt> the gas bladder is too far forward.
[05:13] <JimBastard> i was gonna take that one
[05:13] <jedschmidt> heh.
[05:14] <jedschmidt> JimBastard: you should write an API to myGengo if you wanna make that lib serious.
[05:14] <JimBastard> olfactory bulb
[05:14] <JimBastard> since you can smell bad japanese
[05:14] <jedschmidt> http://mygengo.com/services/api/#benefits
[05:14] <JimBastard> jedschmidt: +babelfish
[05:14] <JimBastard> lots of things
[05:14] <jedschmidt> meh.
[05:14] <jedschmidt> babelfish sucks.
[05:15] <JimBastard> i added translate.js to say.js
[05:15] <JimBastard> btw
[05:15] <jedschmidt> i mean, i don't even think it's being maintained...
[05:15] <JimBastard> att bell labs
[05:15] <JimBastard> webservice
[05:15] <JimBastard> ftw
[05:15] <JimBastard> thats the next one
[05:15] <jedschmidt> certainly not at the pace of google's engine.
[05:15] <JimBastard> since they can return audio in foreign language, translated properly
[05:15] <jedschmidt> yeah, i'm familiar. i used it in a preso a while ago to prove how bad machine translation is.
[05:15] <JimBastard> with proper accents and what not
[05:15] <JimBastard> is it bad?
[05:15] <JimBastard> worth integrating ?
[05:16] <jedschmidt> machine translation in general is horrible.
[05:16] <JimBastard> well
[05:16] <jedschmidt> for languages that are difficult.
[05:16] <jedschmidt> spanish et al it does okay.
[05:16] <JimBastard> my credit card limit cant afford a turk account
[05:16] <jedschmidt> no no, i was thinking you could let folks plug their API code in.
[05:16] <JimBastard> hee hee
[05:16] <JimBastard> for sure
[05:16] <JimBastard> i accept pull requests
[05:16] <jedschmidt> i bet the mygengo folks would give you credits to test it.
[05:16] <JimBastard> its just javascript, even i can write it!
[05:16] <jedschmidt> heh.
[05:18] <jedschmidt> aight, time for lunch. good luck, mister bastard.
[05:18] <JimBastard> thanks
[05:18] <JimBastard> appreciate the help
[05:18] <JimBastard> tacos!
[05:19] <jedschmidt> i tacos do please does!
[05:20] <JimBastard> tacos + please = win
[05:20] <tmpvar> mister bastard
[05:20] <tmpvar> lol.
[05:20] <JimBastard> bastardson
[05:21] cloudhead has joined the channel
[05:21] <JimBastard> sup cloudhead 
[05:21] <JimBastard> javascript party
[05:21] <JimBastard> ACTION waits for new library release from cloudhead
[05:21] <JimBastard> what now
[05:21] <JimBastard> ahaha
[05:22] <cloudhead> JimBastard mahaha
[05:22] <JimBastard> ive normalized tacos
[05:22] <cloudhead> lolwut
[05:22] <JimBastard> finishing up the photoshop now
[05:23] <JimBastard> im adding you in shop
[05:23] <JimBastard> as part of the babel fish 
[05:23] <JimBastard> lolwut
[05:23] <JimBastard> you want real name or handle
[05:23] <cloudhead> handle!
[05:23] <JimBastard> 10-4
[05:24] <JimBastard> okay i got all the labels except gas bladder and liver
[05:24] <tmpvar> ill be a gas bladder
[05:24] <tmpvar> if you pay me
[05:24] <JimBastard> 10-4
[05:24] <JimBastard> -naah 
[05:24] <tmpvar> snuck that shit in there :P
[05:24] <JimBastard> i made yo liver
[05:24] <JimBastard> since you like the drink
[05:25] <JimBastard> pwnt
[05:25] <JimBastard> charlie is the gas blader
[05:25] <tmpvar> LOL
[05:25] <JimBastard> yo
[05:25] <tmpvar> indexzero, where you do!
[05:25] <JimBastard> if i dont pay someone to photoshop shit for me soon im gonna lose it
[05:25] <JimBastard> this isnt cool
[05:25] <JimBastard> for real
[05:26] <tmpvar> man, im fed up with this node ogl shit.
[05:26] <JimBastard> how far are you 
[05:26] <tmpvar> peek this.. http://imagebin.org/101067
[05:26] <tmpvar> that is supposed to be..
[05:26] <JimBastard> how many weeks have you been working on it?
[05:26] <tmpvar> http://github.com/tmpvar/node-ogl/raw/master/example/nehe/lesson6.png
[05:26] <tmpvar> umm
[05:27] <tmpvar> may 19
[05:27] <JimBastard> thats like a month
[05:27] <tmpvar> week shy of a month
[05:27] <JimBastard> i dunno, you can give it another week
[05:27] <tmpvar> 3 weeks dude
[05:27] <JimBastard> or put it down and get on jsdom and start up openAl
[05:27] <tmpvar> im close. 
[05:27] <tmpvar> so god damned close
[05:27] <JimBastard> i would say go 6 more days
[05:27] <tmpvar> fine
[05:27] <JimBastard> and then take a break
[05:27] <tmpvar> evil
[05:28] <JimBastard> next week put it down no mater what
[05:28] <JimBastard> by then maybe ill have better JSONloop demos
[05:28] <JimBastard> "working" in the browser
[05:28] <tmpvar> word
[05:28] <JimBastard> i can see audio latency is coming back to become my worst enemy again. #bastardfacts
[05:28] <_announcer> Twitter: "Real-time Collaborative Editing with Web Sockets, Node.js & Redis http://bit.ly/b9YtLp #javascript" -- HB Stone. http://twitter.com/hbstone/status/16054402779
[05:29] <tmpvar> dude, you arent there yet ;)
[05:29] <tmpvar> maybe #bastardsayings
[05:29] <JimBastard> ive fought ASIO latency very hard in the past
[05:29] <tmpvar> lol
[05:29] <tmpvar> audio latency
[05:30] <tmpvar> you spawn shit off, it *should play*
[05:30] <JimBastard> < 1ms delay
[05:30] <tmpvar> if its a shared lib..
[05:30] <JimBastard> i should be able to stack 1k before it even thinks of getting over 1ms
[05:30] <tmpvar> in memory, it shouldnt be a huge deal
[05:30] <JimBastard> 1k sounds
[05:30] <tmpvar> 1 thousand?
[05:30] <JimBastard> hell yeah
[05:30] <tmpvar> uhh
[05:30] <JimBastard> ahaha
[05:30] <tmpvar> negatory julio
[05:30] <JimBastard> < 20ms is acceptable
[05:31] <tmpvar> yeah, how many channels does a typical soundcard have?
[05:31] <tmpvar> 16?
[05:31] <JimBastard> oofa!
[05:31] <JimBastard> true life
[05:31] <JimBastard> route and mash
[05:31] <JimBastard> costs cpu
[05:31] <tmpvar> yah
[05:31] <JimBastard> okay
[05:31] <JimBastard> 16
[05:31] <JimBastard> thats cool
[05:31] <JimBastard> ahaha
[05:31] <tmpvar> lmfao
[05:31] <JimBastard> listen
[05:31] <tmpvar> we could build out a software renderer
[05:32] <tmpvar> or even build a custom dongle that you have to buy when using node-openal 
[05:32] <JimBastard> my tastes are simple tmpvar , only the finest will do. #bastardfacts
[05:32] <tmpvar> at 1k+ sounds per ms
[05:32] <JimBastard> word
[05:32] <tmpvar> im not doing either
[05:32] <JimBastard> well firmware is another story
[05:32] <tmpvar> too deep in the wrong direction for me bud
[05:32] <JimBastard> i think i might know someone who is at the media lab a columbia
[05:33] <tmpvar> oh yeah?
[05:33] <JimBastard> yeah
[05:33] <tmpvar> get charlie to do it
[05:33] <tmpvar> use his girly hands and pick up a soldering iron
[05:33] <JimBastard> it is him you nub
[05:33] <tmpvar> lol lol olol
[05:33] <tmpvar> chawlie!
[05:33] <JimBastard> aight, fuck. photoshop time 
[05:42] <_announcer> Twitter: "Hacking on basic CouchDB support for Geddy. http://geddyjs.org/ #node.js #nodejs" -- Matthew Eernisse. http://twitter.com/mde/status/16055022302
[05:46] <Validatorian> can't figure out how to make express stop caching -- anyone know?
[05:47] <Validatorian> the page linking to cache info is broken -- http://expressjs.com/plugins.cache.html
[05:50] visnup has joined the channel
[05:50] <cloudhead> who knows...
[05:51] <Validatorian> nevermind, I think it's my fault
[05:53] cloudhead has joined the channel
[05:55] user9 has joined the channel
[05:56] stevendavie has joined the channel
[06:00] <_announcer> Twitter: "new jeans and node.js are making for a good time." -- schleyfox. http://twitter.com/schleyfox/status/16055794193
[06:08] pufuwozu has joined the channel
[06:08] <Validatorian> atmos: you around?
[06:09] jedschmidt has joined the channel
[06:10] jedschmidt_ has joined the channel
[06:16] JimBastard has joined the channel
[06:16] <JimBastard> http://i.imgur.com/0XzuZ.png jedschmidt cloudhead tmpvar
[06:16] <JimBastard> et all
[06:16] <JimBastard> ryah
[06:16] <JimBastard> lol
[06:17] <cloudhead> lolwut
[06:17] <cloudhead> why's my name there
[06:17] <visnup> I feel like there's a part of that anatomy missing
[06:17] <JimBastard> colors.js
[06:17] <cloudhead> I'm a fin?
[06:17] <cloudhead> ahh
[06:18] <JimBastard> i can take you off if you want
[06:18] <JimBastard> i didnt mean to offend
[06:18] <JimBastard> just give props
[06:18] <cloudhead> haha no I'm kidding
[06:18] <cloudhead> you should make it accept stdin as input
[06:18] <cloudhead> so you can pipe stuff through it
[06:19] <JimBastard> if only there was like a platform we could code on together socially. like a distributed coding thing where we could push and pull code
[06:19] <cloudhead> echo I want tacos | babel --spanish > file
[06:19] <cloudhead> hehe
[06:19] <cloudhead> yea
[06:19] <JimBastard> we need opensource interns
[06:20] <JimBastard> for real
[06:20] <cloudhead> bespin might do that one day
[06:20] <cloudhead> ..or I might
[06:20] <JimBastard> or github
[06:20] <cloudhead> mmm yes
[06:21] <cloudhead> actually this is a great project
[06:21] <_announcer> Twitter: "I feel in the coming years node.js is gonna explode. The target audience is everyone. Designers as well as developers." -- abhirama. http://twitter.com/abhyrama/status/16056680216
[06:21] <cloudhead> I was just reading about http://github.com/laktek/realie
[06:23] <JimBastard> yo cloudhead 
[06:23] <cloudhead> it would work great with a modal editor actually
[06:23] <JimBastard> i got the realie guy on gchat
[06:23] <JimBastard> i got realie on nodejitsu
[06:23] <JimBastard> i talke to him for an hour or so
[06:23] <cloudhead> cause you know exactly when to send the patch
[06:23] <cloudhead> oh cool
[06:23] <JimBastard> not really
[06:23] <JimBastard> VAPOR WARE SHIT
[06:23] <JimBastard> CRAPWARE
[06:24] <cloudhead> huh?
[06:24] <JimBastard> ACTION waits for several updates
[06:24] <JimBastard> the software
[06:24] <JimBastard> is shit
[06:24] <cloudhead> oh, yea no doubt
[06:24] jedschmidt has joined the channel
[06:24] <cloudhead> was talking about the idea in general
[06:24] <JimBastard> no updates in a month
[06:24] <JimBastard> yeah
[06:24] <JimBastard> http://github.com/marak/translate.js
[06:24] <JimBastard> check out the new img
[06:24] <JimBastard> :p
[06:24] <cloudhead> it uses express anyone
[06:24] <cloudhead> anyway*
[06:24] <JimBastard> can anyone test this?
[06:24] <JimBastard> ive kinda lost it
[06:25] <JimBastard> literally and figuratively  
[06:25] <cloudhead> hehe
[06:25] <cloudhead> link/image works
[06:26] <JimBastard> i dare you to clone it
[06:26] <JimBastard> you speak french dude
[06:26] <cloudhead> give me built-in say.js support and I will
[06:26] <cloudhead> hehehe
[06:26] <JimBastard> add the normalization test
[06:26] <JimBastard> ohhh
[06:26] <JimBastard> uhh
[06:26] <JimBastard> what
[06:26] <JimBastard> http://github.com/Marak/say.js/blob/master/demo-translate.js
[06:27] <JimBastard> now go add french to the normlization chain http://github.com/Marak/translate.js/blob/master/demo.js
[06:27] <JimBastard> everybody stop!
[06:27] <JimBastard> heimer time
[06:28] <JimBastard> say.js can translate and speak several langauges now....just poorly on the speaking part
[06:28] <JimBastard> att labs has the webservice we want
[06:28] <JimBastard> fuck, issue time
[06:29] <JimBastard> http://github.com/marak/say.js/issues/issue/2
[06:29] <JimBastard> http://www2.research.att.com/~ttsweb/tts/demo.php
[06:30] <JimBastard> man we are gonna amass all these little decoupled node modules that do cool little stuff. if only we had a way to unite them all together into a simple api and then host them on a load balanced nodejs cloud. like maybe we could call it hook.io + broodmother
[06:30] <JimBastard> fuck i should think about building something like that
[06:30] <JimBastard> that would be sweet
[06:36] <cloudhead> JimBastard: seamless module loading from a cloud service would be neat
[06:36] <cloudhead> or yea, some simple api
[06:36] <JimBastard> ACTION im on it
[06:37] <cloudhead> the other nice thing would be a nice browsable website
[06:37] <cloudhead> with all this stuff
[06:37] jedschmidt has joined the channel
[06:38] <JimBastard> yeah
[06:38] <JimBastard> i need like 3k to do that
[06:38] <JimBastard> fuuuckkk
[06:38] <JimBastard> mrdoob.com style
[06:38] <cloudhead> lol
[06:38] <JimBastard> ill put together subdomains
[06:38] <JimBastard> with samples of each
[06:38] <JimBastard> and then ill put the interface on top
[06:38] <cloudhead> mrdoob style?
[06:38] <cloudhead> what did he do?
[06:38] <JimBastard> ACTION is accepting donations to pay designers
[06:38] <JimBastard> www.mrdoob.com
[06:38] <JimBastard> he owns your face 
[06:39] <JimBastard> with graphics
[06:39] <JimBastard> hard
[06:39] <cloudhead> haha
[06:39] <cloudhead> yea
[06:39] <cloudhead> I know his stuff
[06:41] <JimBastard> so does anyone here who speaks a foreign language want to try that language with http://github.com/marak/translate.js ?
[06:43] <JimBastard> i really dont want to release this without seeing it actually run on a computer that isnt mine
[06:43] <JimBastard> fuuuck
[06:43] <JimBastard> i guess i could do a server deploy...
[06:43] <JimBastard> put a demo up
[06:43] <JimBastard> i got other shit to do tonight though
[06:53] qFox has joined the channel
[06:54] <cloudhead> JimBastard: I tried it, it works
[06:54] <JimBastard> huzaah
[06:54] <JimBastard> i gotta be real
[06:54] <JimBastard> this shit is fucking magic
[06:54] <cloudhead> hehe
[06:54] <JimBastard> im wasted and i have no idea how im doing any of this
[06:54] <cloudhead> you should drink more often
[06:55] <JimBastard> im maintaing a balmer peak
[06:55] <JimBastard> i think paying homage to the volcano god helps
[07:02] <_announcer> Twitter: "Just Connect it Already http://is.gd/cNqjC connect for Node.js" -- Oliver Thylmann. http://twitter.com/othylmann/status/16058345997
[07:05] sechrist has joined the channel
[07:06] <sechrist> Is it possible to choose the interface/ip an httpclient should go out on? Or is this a routing problem that should be solved at the linux level? I'd like to delegate http connections to different IPs on my dedi -- but i have no idea how I would do that in node.
[07:09] mikeal has joined the channel
[07:11] micheil has joined the channel
[07:14] <sechrist> yeah seems like I'd have to have some sort of mechanism to force the route or something
[07:16] <_announcer> Twitter: "translate.js - a #javascript babel fish for #node.js and the browser. 30+ languages supported. #nodejs. http://github.com/marak/translate.js" -- marak squires. http://twitter.com/maraksquires/status/16058878190
[07:16] <JimBastard> okay i tweethackerredditspaceemailed that shit
[07:16] <JimBastard> i hate social media
[07:16] <JimBastard> okay i tweethackerredditspaceemailed that shit, i hate social media. #bastardfacts
[07:17] <pquerna> good thing irc isn't social
[07:17] <JimBastard> lol
[07:17] <JimBastard> irc is okay, if you can wield the noob hammer
[07:18] <JimBastard> it requires a high level of skill with hammering
[07:20] <JimBastard> im tired i think i need tacos
[07:20] smtlaissezfaire has joined the channel
[07:23] mtodd has joined the channel
[07:27] mikeal has joined the channel
[07:27] saikat has joined the channel
[07:30] micheil has joined the channel
[07:33] MattJ has joined the channel
[07:36] jetienne has joined the channel
[07:39] <jetienne> hi
[07:41] <MattJ> Hi
[07:52] JimBastard has joined the channel
[07:52] hassox has joined the channel
[07:52] <JimBastard> zzzz
[07:52] jbrantly1 has joined the channel
[07:52] Clooth has joined the channel
[07:53] <JimBastard> taco normalization achieved http://i.imgur.com/0XzuZ.png
[07:57] jbrantly1 has left the channel
[07:57] <_announcer> Twitter: "The connection / client manager in my node.js websocket server's development branch is actually rather simple (for now): http://is.gd/cNsNB" -- Micheil Smith. http://twitter.com/miksago/status/16060430138
[07:58] <sechrist> nice tacos JimBastard 
[07:58] <JimBastard> thanks
[07:59] <sechrist> Do you know how I can delegate httpclients to different ips on my dedicated server?
[07:59] <JimBastard> i think i might have one more module in me before its zzzz time
[07:59] <JimBastard> multiple node instances
[07:59] <JimBastard> bind to ip on start
[07:59] <JimBastard> i dunno how to bind to a device other then default for node
[07:59] <JimBastard> no clue
[07:59] <sechrist> not bind
[07:59] <JimBastard> do you have multiple IPs?
[07:59] <sechrist> use an outgoing ip
[07:59] <sechrist> yeah
[08:00] <sechrist> this is for outgoing connections -- not http serving on 80
[08:00] <JimBastard> do you have multiple devices that can send on those ip addresses?
[08:00] <sechrist> eth0:x ; x being the number
[08:01] <sechrist> you set them up in /etc/networking/interfaces ya
[08:01] <JimBastard> so i dunno how you bind
[08:01] <JimBastard> is it not in docs?
[08:01] <JimBastard> can you not bind on the start of the node instance?
[08:01] mtodd has joined the channel
[08:01] <sechrist> I have no idea -- the only bind I'm aware of is for binding a socket
[08:02] <sechrist> I've not found any documentation on picking outgoing traffic route
[08:02] <sechrist> binding sockets to different ips is fine -- that works fine in the same node instance even
[08:03] mitkok has joined the channel
[08:04] <micheil> sechrist: I don't think there's an API exposed to do that yet
[08:05] <sechrist> nooooooooo
[08:05] <sechrist> JimBastard: do that! :3
[08:05] <JimBastard> whats c++
[08:06] <sechrist> magnets
[08:06] <JimBastard> is that like borland turbo c 3.0
[08:06] <JimBastard> im nasty at that
[08:06] <pquerna> you can bind outgoing tcp sockets to a specific ip
[08:06] <sechrist> pquerna: oh?
[08:06] <JimBastard> i have to finish mastering javascript-fu before i can return to my roots
[08:06] <pquerna> just call bind on them
[08:06] <pquerna> more or less :)
[08:06] <JimBastard> there you go
[08:07] <sechrist> this can be done from jsland?
[08:07] <pquerna> yeah, i mean, all node does is bind the raw posixy functions
[08:08] <pquerna> the interface you are actually calling is JS already
[08:10] mscdex has joined the channel
[08:10] <pquerna> programs like irc bot and clients have always done this right
[08:10] <sechrist> I don't believe so -- i have never seen an example of it
[08:10] <sechrist> been looking for awhile
[08:10] <pquerna> you just call socket(), then call bind() with your outgoing IP as the address
[08:10] <jedschmidt> JimBastard: nice to know that you and i are just two sides of the same eyeball.
[08:11] <JimBastard> people make youtube videos for my video game rap songs http://www.youtube.com/watch?v=8aJB7Le2_kU
[08:11] <sechrist> pquerna: so how do I cook that for an http request (outgoing)? create the httpclient then somehow force a created socket into it?
[08:11] <JimBastard> ahaha hi jedschmidt 
[08:11] <sechrist> I'm not following here
[08:12] <JimBastard> mastering javascript-fu?
[08:12] <JimBastard> i really need to finish that lib, http://github.com/marak/javascript-fu
[08:12] <sechrist> node's http.Client is pretty high level
[08:13] <micheil> sechrist: in a way, not really
[08:13] <pquerna> yeah, you would need to create the socket yourself, and then insert it into the http.client instance
[08:13] <micheil> sechrist: it's just an instance of net.Stream with a http_parser instance in front of the data event
[08:13] <pquerna> i have no clue how to do that-- but its javascript, read the http client source, it can't be that hard :)
[08:16] <jetienne> http://github.com/ry/node/blob/master/lib/http.js#L825
[08:18] <jetienne> net.stream has nothing for local port
[08:19] softdrink has joined the channel
[08:22] <jetienne> http://github.com/ry/node/blob/master/lib/net.js even this doesnt seems to do the loval port
[08:22] <jetienne> local
[08:25] <sechrist> hmm
[08:26] <pquerna> what do you mean?
[08:26] <pquerna> 'local port'?
[08:26] <sechrist> localhost:1024-65565 -> google.com 80
[08:27] <pquerna> right
[08:27] <pquerna> so, you just need to get your raw FD
[08:27] <sechrist> yeah httpclient exposes the FD, but when do I set it? after createClient it's null, and I'm assuming it's populated as soon as I do .request
[08:27] <pquerna> then call, bind(fd, 655542,  'external-ip-2')
[08:31] <jetienne> client.bind(client.fd, 1234, "10.0.0.1");
[08:31] <jetienne> after parsing the code, no idea if it is correct :)
[08:31] <jetienne> but http client seems to inherit from net.stream which inherit from socket
[08:31] <sechrist> well i'm doing it before client.request but fd is null then -- so i'm getting "bad file descriptior argument"
[08:32] <jetienne> client.fd is null ?
[08:32] <sechrist> at that time in the code, yes
[08:34] <sechrist> https://gist.github.com/654edda5497e7e6ea61c
[08:34] <sechrist> fd is populated when it actually makes the connection i'm assuming
[08:34] <sechrist> since this all async *shrug*
[08:34] <jetienne> http://github.com/ry/node/blob/master/lib/net.js#L903
[08:35] <pquerna> yeah, you will want to intercept it before doConnect is called
[08:35] <pquerna> once the socket is connect()'ed you can't normally call bind() on it
[08:36] <jetienne> sechrist: in short, either you modify nnodejs, or you cant
[08:36] <sechrist> looks like for ease of use i'll have to hack up httpclient and connect
[08:36] <sechrist> yeah
[08:37] <jetienne> sechrist: in fact the key would be to create the socket in the constructor
[08:37] <jetienne> sechrist: thus you could do client.bind(client.fd, 1234, "10.0.0.1");
[08:38] <jetienne> http://github.com/ry/node/blob/master/lib/http.js#L918
[08:38] <jetienne> this is exactly what is done in create client. all those fields are from socket class
[08:38] <jetienne> according to my shallow understanding of the source
[08:39] b_erb has joined the channel
[08:39] <sechrist> hmm so, without getting ridiculous
[08:39] <sechrist> overridding these methods should work?
[08:39] <jetienne> yes js allow you to override functions
[08:40] <jetienne> but then you got closure which enter in the mix and ... this is another things
[08:40] jedschmidt has joined the channel
[08:40] <jetienne> in my understanding, fixing net.js is the easiest
[08:50] <sechrist> yeah because of scopehell -- but wouldn't I break compatibility with everything that uses streams? :(
[08:52] <jetienne> sechrist: well i consider this fd not in ctor as a bug
[08:52] <jetienne> sechrist: so it would be bug fixing
[08:53] <jetienne> we need more core devs on this
[08:53] <jetienne> ry cant do it all
[08:57] <sechrist> yeah
[08:58] <sechrist> well I added a simple fix -- if there's already an fd set -- don't create one
[08:58] <sechrist> and it seems to be working
[08:58] <sechrist> works in my case -- not elegant
[08:59] <jetienne> sechrist: you should email the list about this. with your patch. to get awareness at least
[09:00] <sechrist> well I have to configure the ips in /etc/networking before I know for sure -- and I want my hosting company to do that -- i'm not downing interfaces without a kvm/ip or physical access :)
[09:00] <sechrist> but I'm getting cannot assign address and no error -- so it seems like it's working properly
[09:01] femto has joined the channel
[09:16] markwubben has joined the channel
[09:20] <jetienne> anybody tried 0.1.98 ? working well ?
[09:33] <mscdex> jetienne: i haven't had any problems with it
[09:36] dabreaka has joined the channel
[09:36] <jetienne> http://phpjs.org a lot of nice server js fct in there
[09:36] <jetienne> mscdex: ok thx
[09:37] zomgbie has joined the channel
[09:40] <pandark_> ping mape
[09:41] adelcambre has joined the channel
[09:44] <mscdex> ping timed out ;-)
[09:48] <jetienne> Error: ECONNREFUSED, Could not contact DNS servers .... while trying to resolve "localhost"....
[09:50] <mape> pandark_: ?
[09:51] rnewson has joined the channel
[09:51] <jetienne> seems like doing 1000 http client in sequence (not in //)... cause this 
[09:52] <jetienne> maybe it is socket are not really closed... and max fd is reached for the process/os
[09:52] <pandark_> mape: I was about to ask a question about npm, then I searched on the internet and installed ssl-dev... and... I have no question anymore :P
[09:52] <mape> hehe k cool
[09:55] <jetienne> $ ls -l /proc/5337/fd | wc -l
[09:55] <jetienne> 262
[09:55] <jetienne> yep some fd are not closed :)
[10:00] felixge has joined the channel
[10:00] felixge has joined the channel
[10:00] <felixge> micheil: Heureka!
[10:00] <felixge> I figured out how to hijack node's core modules (any require calls really) for unit testing
[10:01] <felixge> Without any nasty tricks :)
[10:01] <mscdex> :-O !
[10:01] proffreud has joined the channel
[10:01] <felixge> requires only a single line on top of a file one may wants to test:
[10:01] <felixge> if (global.Gently) require = Gently.hijack(require);
[10:02] <felixge> by default all require calls will just be performed as usual, but a reference to the required module will be available
[10:02] <felixge> require('sys') -> Gently.hjacked.sys
[10:03] <felixge> using gently, one can now easily set up expectations: gently.expect(Gently.hijacked.sys, 'log')
[10:03] <felixge> one can also hijack class constructors:
[10:03] <felixge> var EventEmitterStub = Gently.stub('events', 'EventEmitter');
[10:04] <felixge> if a method now does 'new EventEmitter', one can catch it:
[10:04] <felixge> gently.expect(EventEmitterStub, 'new', function() {...})
[10:05] <jetienne> requirejs is playing stuff like this too
[10:06] <felixge> jetienne: requirejs ?
[10:06] <jetienne> felixge: like commonjs require but async
[10:07] <felixge> jetienne: ah
[10:07] <jetienne> felixge: a project to handle js dependancies in browser
[10:07] <felixge> jetienne: I see
[10:07] <felixge> jetienne: well, the whole point of this is to keep node's native module loading
[10:08] <jetienne> http://requirejs.org/docs/node.html
[10:08] <jetienne> felixge: ok
[10:08] <felixge> and only take a very simple man-in-the-middle approach to make stuff testable
[10:10] <jetienne> $ ./oload_stress_test.js 
[10:10] <jetienne> Segmentation fault
[10:12] <jetienne> related to setTimeout
[10:13] ditesh|cassini has joined the channel
[10:15] mpoz2 has joined the channel
[10:16] utgo has joined the channel
[10:20] <jetienne> trying 0.1.98
[10:27] markwubben_ has joined the channel
[10:29] markwubben_ has joined the channel
[10:40] <jetienne> no more coredump on settimeout
[10:40] <_announcer> Twitter: "Paul Querna: Drinking the Node.js Kool-Aid http://bit.ly/ar6iF8" -- Benjamin Kohler. http://twitter.com/kob42kob/status/16063961204
[10:40] <jetienne> but still httpclient is crashing on my prog
[10:42] user9 has joined the channel
[10:45] jbrantly has joined the channel
[10:45] teemow has joined the channel
[10:49] ewdafa has joined the channel
[10:56] mikelangelo has joined the channel
[11:10] <_announcer> Twitter: "@miksago Can't get your example to work on Chrome 5.0. Ran `node examples/echo-server.js` then `google-chrome examples/client.html`." -- James Coglan. http://twitter.com/jcoglan/status/16065079016
[11:20] <felixge> Ok, just released gently 0.7 for those of you who want to take their testing to the next level: http://github.com/felixge/node-gently :)
[11:23] romainhuet has joined the channel
[11:25] charlesjolley- has joined the channel
[11:27] <micheil> felixge: gently.. doing?
[11:28] <felixge> micheil: remember how we talked about testing core modules?
[11:28] <micheil> hmm.. yeah'
[11:28] <felixge> I mean testing that they are being called without them actually getting called
[11:28] <felixge> I figured out a clean way to do it :)
[11:28] <micheil> nice
[11:28] <felixge> micheil: http://github.com/felixge/node-gently scroll down to the 'hijack' and 'stub' docs
[11:30] <felixge> the code is really simple too: http://github.com/felixge/node-gently/blob/master/lib/gently/gently.js#L14-48
[11:30] <felixge> really just a minimum of magic to make it useful
[11:32] <felixge> micheil: what ya think?
[11:32] <micheil> not too bad
[11:33] <felixge> micheil: any suggestions?
[11:33] <micheil> not yet
[11:33] <micheil> but I probably wouldn't use gently for my testing needs, so I'm probably not the right person to ask
[11:35] <_announcer> Twitter: "playing with #node.js, I hacked together a bash script to reload your server upon file changes http://bit.ly/bgmxrj" -- Torgeir. http://twitter.com/torgeir/status/16066097744
[11:35] devtime has joined the channel
[11:38] aho has joined the channel
[11:42] <user9> how does this anouncer thing work? does it somehow search for node.js being mentioned in any random person's tweet?
[11:42] <user9> does it follow a certain group of people?
[11:43] <_announcer> Twitter: "@jcoglan In that case there are a few websocket implementations worth looking at. socket.io has one and node.websocket.js" -- Scott Barr. http://twitter.com/scottjbarr/status/16066428432
[11:46] <ewdafa> user9: yes it just picks up whenever nodejs is mentioned
[11:47] <ewdafa> i believe the standard twitter api handles the filtering, though i've never used twitter myself
[11:50] <_announcer> Twitter: "#reddit Drinking the Node.js Kool-Aid: submitted by  mariuz  [link] [comment] http://bit.ly/bQYEhr #rulez" -- REDDITSPAMMOR. http://twitter.com/REDDITSPAMMOR/status/16066702027
[11:51] sztanpet has joined the channel
[11:52] mitkok has joined the channel
[11:55] teemow has joined the channel
[12:00] Gruni has joined the channel
[12:03] <jetienne> there is
[12:07] <user9> not
[12:08] <_announcer> Twitter: "[del] [from FlatSpace] Drinking the Node.js Kool-Aid « Paul&#039;s Journal:  http://url4.eu/4QlxN" -- sldfjd ldajds. http://twitter.com/sldfjd/status/16067501606
[12:09] <_announcer> Twitter: "@scottjbarr node.websocket.js as far as I know is unmaintained. Also, it won't work with newer versions of chrome which use draft76 protocol" -- Micheil Smith. http://twitter.com/miksago/status/16067518429
[12:22] <_announcer> Twitter: "家里把网给停了…趁这几天把node.js的Api翻译成中文的" -- aki. http://twitter.com/aki_xavier/status/16068141592
[12:23] shomer has joined the channel
[12:23] <micheil> was there some node debugger that you could include in a file, and then interactively debug the code, remotely
[12:23] <micheil> like, repl into a running node process
[12:24] <shomer> Hi. I'm trying to get the code at http://blog.new-bamboo.co.uk/2009/12/7/real-time-online-activity-monitor-example-with-node-js-and-websocket (step 1) running with the current node.js api and have run into a problem.
[12:25] <micheil> okay, instant first question: what's your node version.
[12:25] <micheil> node --version
[12:25] <micheil> in the commandline.
[12:25] <shomer> v0.1.97-33-gb3b81d6
[12:25] <micheil> okay
[12:26] <micheil> that blog article dates pre 0.1.97
[12:26] <shomer> I've moved all of the api across (I think) but the addListener event never seems to be called.
[12:26] <micheil> I'm just going to make sure I read the code, then I'll respond, could you create a gist or paste of your code?
[12:27] <shomer> yep will do
[12:27] <shomer> http://gist.github.com/436620
[12:28] <shomer> BTW I'm a complete beginner with both node and javascript so it's probably something stupid like a missing semicolon!
[12:29] <micheil> it's cool, node is a community open to everyone.
[12:30] <micheil> shomer: okay, line 24, it should be a lower case L on listen
[12:33] <shomer> ah thanks. I think something else is wrong as there are a few other things missing that were working last night. I'll fix them up and see what happens.
[12:33] phiggins has joined the channel
[12:33] <micheil> yeah, I'm just thinking that this code won't actually do what you want
[12:34] <shomer> I must have gone on a deleting spree last night. Must have been tired.
[12:34] <micheil> yeah, basically for this code to show you anything you'll need to be loading that page that it's serving
[12:35] kriszyp has joined the channel
[12:37] <shomer> Okay taking out the missing body reference (moving to just having content-type in the header) and running fails with a TypeError: Object #<a Stream> has no method 'addlistener' error. Switching back to addListener removes the error but connecting via a web browser just sits and waits.
[12:38] <micheil> yes
[12:39] <micheil> most of node's functions are in camelCase
[12:39] <micheil> to follow up: http://gist.github.com/436631
[12:39] <micheil> you'll notice a few things:
[12:40] <micheil> 1) moved require()'s to the top, as their one of the only blocking pieces of code in node
[12:40] <micheil> 2) use process.exit(1); to tell node to explicitly exit, rather then relying on the event loop
[12:40] <micheil> 3) data.length, instead of body.length (like you already pointed out)
[12:42] <shomer> Yes that makes sense. It still spins on the web browser side however.
[12:42] <micheil> it will block page loading until there is data from tail
[12:43] Aria has joined the channel
[12:43] <micheil> which could be an issue if it's not using keepAlive
[12:44] <shomer> I've changed the code to less the file with the same result. Would you expect that?
[12:46] <micheil> okay, first things there: less returns data near instantly (or in million years in node time)
[12:46] <micheil> so, by the time you make your request, the stdio event has already happened
[12:47] <micheil> this effectively means that your request is waiting on an event that will never happen
[12:48] <micheil> shomer: one way to improve this (and possibly do it more efficiently), would be to use a stream pump connector (I know that sounds odd)
[12:48] <micheil> have a look at http://wiki.github.com/ry/node/streams (but don't c+p the code, as it probably won't work 100% now)
[12:49] <shomer> I will do. Thanks for your help.
[12:49] <micheil> so essentially you build a connector to join the two together
[12:50] probablyCorey has joined the channel
[12:51] <skampler> a single
[12:52] <shomer> micheil : Yes it's working with tail. If I set everything up and running and then pipe some text to the watched file all is well. Many thanks for your help. 
[12:52] romainhuet has joined the channel
[12:52] <micheil> no worries :)
[13:02] <_announcer> Twitter: "Понравилась фраза: “two languages will never go away, C and JavaScript.” - Ryan Dahl (создатель nodeJS)" -- Edward Tsech. http://twitter.com/edtsech/status/16069968598
[13:03] <_announcer> Twitter: "@elliottkember No, Real men use Node.js." -- Micheil Smith. http://twitter.com/miksago/status/16070011780
[13:06] maushu has joined the channel
[13:14] teemow has joined the channel
[13:20] <_announcer> Twitter: "So.. I'm busy challenging people to write stuff in node.js, what next?" -- Micheil Smith. http://twitter.com/miksago/status/16070906384
[13:25] utgo has joined the channel
[13:31] xla has joined the channel
[13:39] geojeff has joined the channel
[13:50] steadicat has joined the channel
[13:58] jherdman has joined the channel
[14:09] <mscdex> _announcer is not translating anymore?
[14:11] teemow has joined the channel
[14:12] kocolosk has joined the channel
[14:18] <micheil> not sure
[14:18] <micheil> and hey mscdex 
[14:19] <mscdex> yo
[14:19] <micheil> mscdex: got node-websocket-server doing draft76
[14:19] <mscdex> cool
[14:19] <_announcer> Twitter: "@hartley Sounds good. I haven't yet done a prefork for websocket server, so tell me if it works. #node.js" -- Micheil Smith. http://twitter.com/miksago/status/16074261296
[14:21] jherdman has joined the channel
[14:26] stepheneb has joined the channel
[14:27] <micheil> hmm.. defineProperty seems not to like emitter
[14:33] <micheil> actually, it does.
[14:33] <micheil> it was my code.
[14:33] <micheil> the events were happening so fast that by the time I hit where I hitched to the event, the event had already fired >_>
[14:35] dji has joined the channel
[14:37] MattJ has joined the channel
[14:39] romainhuet_ has joined the channel
[14:42] rolfb has joined the channel
[14:43] <_announcer> Twitter: "Express - Node.js Web Development Framework: http://expressjs.com/" -- Hernan Garcia. http://twitter.com/theprogrammer/status/16075686341
[14:48] user9 has joined the channel
[14:49] ditesh has joined the channel
[14:52] <_announcer> Twitter: "node.js package management system -- GIT / RubyGems / Gemcutter / http://github.com/visionmedia/kiwi" -- Hernan Garcia. http://twitter.com/theprogrammer/status/16076275378
[14:58] tisba has joined the channel
[15:01] ditesh|titan has joined the channel
[15:03] jakehow has joined the channel
[15:04] stepheneb has joined the channel
[15:04] teemow has joined the channel
[15:04] henrik_ has joined the channel
[15:06] jherdman has joined the channel
[15:07] charlesjolley- has joined the channel
[15:08] keyvan has joined the channel
[15:08] keturn_ has joined the channel
[15:10] <mscdex> that's a first -- node is too fast ;-)
[15:11] Gruni has joined the channel
[15:12] <rolfb> :D
[15:24] derbumi has joined the channel
[15:28] <_announcer> Twitter: "@danbri fwiw I found node.js has xmpp lib's infact it has way more than I expected!" -- nathan. http://twitter.com/webr3/status/16078535694
[15:31] gJ|Alex has joined the channel
[15:31] polotek has joined the channel
[15:31] stepheneb has joined the channel
[15:35] smtlaissezfaire has joined the channel
[15:37] <_announcer> Twitter: "I just added support for urlencoded (regular) forms to node-formidable. Enjoy! http://bit.ly/duCzQw #nodejs" -- Felix Geisendörfer. http://twitter.com/felixge/status/16079111957
[15:37] <polotek> felixge: nice
[15:38] <felixge> polotek: the querystring parser is using the built-in node stuff, so it's not quite as sexy as the multipart one, but oh well
[15:38] <polotek> what's wrong with the node querystring parser?
[15:38] <felixge> I'll write a sexy parser for that at some point, even if it's a little overkill :)
[15:38] <felixge> polotek: it's blocking
[15:38] <felixge> polotek: you need to buffer the entire POST before you parse it
[15:39] <felixge> which is ok, since normal web forms are only a few kb usually
[15:39] <polotek> word
[15:39] <felixge> but this is node, so it's WRONG
[15:39] <felixge> (even so it's probably fine in the real world)
[15:39] <felixge> ;)
[15:40] zaach has joined the channel
[15:40] <felixge> but doing these hand-written parsers usually takes a day or two and I needed something working for now :)
[15:41] <polotek> node is already so fast
[15:41] <polotek> but keep finding these sync bottlenecks and providing async alternatives
[15:41] <polotek> it's insane
[15:41] <polotek> The only thing I haven't tried yet is the async template engines
[15:41] <polotek> that's the real money
[15:42] <polotek> now that the data retrieval is async
[15:42] <felixge> well, a streaming parser might actually be slower for querystring
[15:42] <polotek> per request maybe
[15:42] <felixge> but you could keep memory footprint low if you handle a huge request
[15:42] romainhuet has joined the channel
[15:42] <polotek> but the system throughput will go up
[15:42] <felixge> polotek: no
[15:43] <felixge> if the parser is slower it doesn't matter if it's streaming or not
[15:43] isaacs has joined the channel
[15:43] <felixge> it would however keep the system "moving"
[15:43] <polotek> why wouldn't it?
[15:43] <polotek> that's what I mean by throughput
[15:43] <felixge> that is, there is never a large period of time where the entire process is frozen due to parsing
[15:44] <felixge> polotek: right
[15:44] <polotek> it's not blocking so other requests can continue
[15:44] <polotek> okay, I'm not nuts then.  you had me worried for a sec :)
[15:44] <felixge> :)
[15:44] <felixge> well, if all requests are form posts
[15:44] <felixge> you'd get less req/sec with a streaming parser
[15:44] <felixge> (probably)
[15:44] <_announcer> Twitter: "[del] [from euler] Drinking the Node.js Kool-Aid « Paul&#039;s Journal: Node is exciting because it provides a http://url4.eu/4RAax" -- sldfjd ldajds. http://twitter.com/sldfjd/status/16079636966
[15:44] <felixge> but if there is a mix (GET/POST) requests, a streaming parser might help overall system throughput
[15:45] mfeiri_ has joined the channel
[15:45] <polotek> I forgot you're the transloadit guy.  So you're concerned about the throughput of posts
[15:45] <felixge> polotek: well, I'm concerned about file uploads mostly
[15:45] <felixge> but we need regular POSTs for other parts of the API
[15:46] <felixge> so I just implemented this
[15:46] <felixge> :)
[15:46] <polotek> For my purposes I'm like if you're posting, you can wait :)
[15:46] Kiba has joined the channel
[15:46] <Kiba> hello
[15:46] <Kiba> my server likes to crash randomly
[15:46] <polotek> ACTION has to cook breakfast.
[15:46] <felixge> Kiba: what does it say when it crashes?
[15:46] <polotek> cheers
[15:46] <felixge> Kiba: and what does 'node -v' say?
[15:46] <Kiba> err
[15:46] <felixge> polotek: ttyl :)
[15:46] <Kiba> let me
[15:46] polotek has left the channel
[15:47] <Kiba> post my error message
[15:47] rnewson has joined the channel
[15:47] <Kiba> is there a timeout function when nothing network-wise?
[15:48] <Kiba> http://gist.github.com/436762
[15:48] zaach has left the channel
[15:48] tlrobinson has joined the channel
[15:49] <felixge> Kiba: you are not allowed to write to socket after it has been closed
[15:49] <felixge> Kiba: either by the receiver or by yourself
[15:49] <Kiba> ah
[15:49] <felixge> Kiba: you can catch this error by doing: socket.addListener('error', ...)
[15:50] <Kiba> I think the client close the connection but the server didn't get the memo?
[15:50] <Kiba> where?
[15:50] <felixge> Kiba: wherever your socket is
[15:50] <felixge> I don't know your app
[15:50] <felixge> :)
[15:50] felixge has left the channel
[15:50] <Kiba> server?
[15:50] felixge has joined the channel
[15:51] <isaacs> felixge: lolz http-one-osaurus
[15:52] <Kiba> god
[15:52] <Kiba> I wish I have sounds
[15:52] zaach has joined the channel
[15:53] <Kiba> all the headphones in the world have a tendancy to die after a year or two
[15:53] <felixge> isaacs: in sowjet russia http 1.1 is considered luxury apparently ;)
[15:53] <Kiba> or a few weeks
[15:53] <isaacs> hahaa
[15:53] <isaacs> nginx does http 1.1 flawlessly with file serving
[15:54] <isaacs> basically, what i've found is that it's awesome at serving files really really efficiently, but everything else it sucks a lot at
[15:54] zomgbie has joined the channel
[15:54] <felixge> isaacs: I don't agree with that
[15:54] <felixge> isaacs: I think nginx is pretty excellent all the way, except for not support http 1.1 when talking to backends
[15:54] <felixge> I love nginx config files
[15:54] <isaacs> well, "talking to backends" is what you're doing if you're not serving files.
[15:55] <isaacs> unless you want to write your own custom module in c, and screw that
[15:55] <felixge> or let me say: I hate them so much less than those of apache, lighttpd and cherokee
[15:55] <felixge> ;)
[15:55] <isaacs> the config files ARE awesome
[15:55] <isaacs> but that's like a one-time pain
[15:55] <felixge> isaacs: it talks just fine to fcgi backends, which is what lots of people need
[15:55] <isaacs> felixge: no, it's http 1.0 there, too
[15:55] <felixge> isaacs: hm
[15:55] <felixge> isaacs: that would suck
[15:55] <isaacs> felixge: so if you want to stream something through php with flush(), forget about it
[15:55] <felixge> :)
[15:56] <isaacs> i mean, so much php is so badly written, it hardly matters, but still
[15:56] <felixge> isaacs: now by the time you are using PHP, you've already chosen the wrong technology for streaming - so you had it coming :)
[15:56] <isaacs> sure
[15:56] <felixge> but it does suck
[15:56] <isaacs> but uploading to a fcgi is just as sucky
[15:56] <isaacs> as uploading to any other proxy_pass server
[15:57] <micheil> hmm..
[15:57] <felixge> oh well
[15:58] <micheil> hmm.. my new linked list in my websocket-server is broken.. in a way
[15:58] <felixge> at least we know why the world will end in 2012 now
[15:58] <isaacs> really, nginx should not be your front-end.  it should be the backend server that handles static files, with some other routing server in front of both it and other stuff
[15:58] <isaacs> unless the box does nothing on port 80 but serve files
[15:59] <felixge> By 2012 all web servers will be powered by node.js, causing the internet to overload and thous throwing us back into stone age
[15:59] <Kiba> hmm
[15:59] <Kiba> oh my
[15:59] <Kiba> this is a problem
[15:59] <Kiba> my websocket connection end after some time
[15:59] <mscdex> haproxy!
[16:00] <Kiba> but the server doesn't know it
[16:00] <Kiba> and I would like to keep connections alive
[16:00] <felixge> too bad haproxy doesn't do SSL
[16:02] probablyCorey has joined the channel
[16:03] mrjjwright has joined the channel
[16:05] kjeldahl has joined the channel
[16:06] <mscdex> felixge: you could always use stunnel
[16:07] mfeiri_ has joined the channel
[16:08] <felixge> mscdex: what good would that do?
[16:08] <mscdex> it would allow haproxy to read the decrypted request
[16:09] <felixge> mscdex: reading the description of it it seems it does the opposite, add SSL where there wasn't ssl before
[16:10] <felixge> mscdex: but I guess it does it the otherway around as well
[16:10] <mscdex> yeah
[16:10] jedschmidt has joined the channel
[16:10] <mscdex> there's an example in the haproxy doc
[16:19] <Kiba> does websocket time out after idling for too long?
[16:19] mrjjwright_ has joined the channel
[16:19] utgo has joined the channel
[16:20] <Kiba> Yo?
[16:21] <mscdex> not as far as i know
[16:24] <mscdex> how long until it disconnects/times out for you?
[16:24] <Kiba> 118 seconds
[16:24] <Kiba> which is probably 120 seconds
[16:25] <mscdex> hmm... there is a 2 minute timeout somewhere in node's http module. maybe that's what's causing it somehow?
[16:26] <Kiba> don't know
[16:26] <Kiba> but I don't like nasty surprise
[16:26] <Kiba> it's in the client
[16:26] <Kiba> not the node.js server
[16:26] <Kiba> when the client timeout, the server doesn't even know about it
[16:27] <mscdex> well the client shouldn't timeout unless you are explicitly setting one using setTimeout and then closing the connection
[16:27] <Kiba> and cause the server to crash
[16:27] <Kiba> well
[16:27] <Kiba> I don't remember setting a timeout anyway
[16:28] <mscdex> here's the 2 minute timeout thing i was talking about if it helps any: http://github.com/ry/node/blob/master/lib/http.js#L729
[16:28] <Kiba> http://gist.github.com/436785
[16:29] <Kiba> that's the client-side
[16:29] <mscdex> so onclose fires?
[16:30] <Kiba> it just give me info about when the client have its connection closed
[16:30] <Kiba> but I didn't give it commands to cut off the connection
[16:31] <Kiba> not that it matters much. I am going to have the server run the game rather than the client having it in the future
[16:31] <Kiba> but in the meantime, I'll need to work around this timeout.
[16:32] <mscdex> well i don't know what to suggest really. maybe try doing a request.connection.setTimeout(0); in the node http server
[16:32] Gruni has joined the channel
[16:33] <mscdex> when they connect
[16:33] <Kiba> is request a method of something?
[16:33] <mscdex> ServerRequest
[16:33] <Kiba> well
[16:33] <Kiba> I am using websocket
[16:34] <mscdex> ah that's right, then just use setTimeout(0) on the tcp socket then
[16:34] <Kiba> http://gist.github.com/436790
[16:35] <mscdex> that's what socket.io does anyway
[16:35] <mscdex> what websocket lib is that?
[16:36] <Kiba> hmm
[16:36] <Kiba> I have no idea.
[16:36] <Kiba> I'll look it up
[16:38] <Kiba> this guy: http://github.com/miksago/node-websocket-server/tree/development
[16:38] <mscdex> ah ok
[16:39] <Kiba> I am not sure where to set the time out
[16:39] sechrist__ has joined the channel
[16:41] <mscdex> hmm, well looking at the code it looks like it sets the timeout to 0 already and even sets the keepalive to true
[16:42] <mscdex> that's micheil's project. he'd know it better than i do
[16:42] <micheil> heh?
[16:42] <mscdex> ;-)
[16:42] <micheil> Kiba: what up?
[16:42] <Kiba> my client code likes to well
[16:43] stevendavie has joined the channel
[16:43] <Kiba> time out at 118 seconds..which is probably 120 seconds
[16:43] <Kiba> I tested it twice
[16:44] jashkenas has joined the channel
[16:44] <micheil> so, you're using the request event?
[16:44] <micheil> pastie your server.
[16:44] <micheil> or gist it.
[16:45] cloudhead has joined the channel
[16:46] <Kiba> http://gist.github.com/436798
[16:46] <Kiba> hmm
[16:47] <micheil> brb
[16:49] <Kiba> ACTION fixed a bug unrelated to networking in the mean time
[16:50] <micheil> Kiba: okay, so, what's it that you're wanting to do?
[16:50] saikat has joined the channel
[16:50] <micheil> oh, also, I sure hope you're not using the development branch there.
[16:50] fitzgen has joined the channel
[16:51] <micheil> because currently that will be causing things to die
[16:51] <saikat> do people have any techniques to make sure that every execution path within a method will call the callback?
[16:51] <micheil> uhh..
[16:51] <micheil> saikat: what do you mean "every execution path" ?
[16:51] <saikat> or is it just an exercise of checking by hand along each if + adding try/catches everywhere
[16:52] <saikat> so for example, i had a bug just now
[16:52] <saikat> where i was forgetting to do a try/catch at the top level
[16:52] siculars has joined the channel
[16:52] <saikat> micheil: http://gist.github.com/436803 is my method
[16:52] <micheil> uhh.. why are you using try/catch?
[16:52] <saikat> how would i catch an exception in redisClient.hget otherwise in this case?
[16:52] <Kiba> micheil: it's so long ago that I am not sure what I am using.
[16:52] <saikat> i would love to not use try/catches if there is a better way to do this
[16:53] <micheil> Kiba: try pulling from master
[16:53] <micheil> Kiba: there's been a lot of changes recently, especially with the push of 1.1.00
[16:53] <micheil> saikat: so, it's a library that's throwing
[16:54] <saikat> micheil: no, but i had a test that simulated throwing
[16:54] <micheil> uhh..
[16:54] <saikat> like yes, the callback should always get an "err" if the library itself never throws
[16:54] <Kiba> micheil: all I am trying to do is make sure that the client doesn't die after 120 seconds
[16:54] <saikat> but what if the exception is in my code?
[16:54] <Kiba> it's just a top 100 score server, really.
[16:54] <micheil> Kiba: oh, don't I expose the setTimeout method?
[16:54] visnup has joined the channel
[16:54] <saikat> for example, for whatever reason, say redisClient isn't set correctly
[16:54] <micheil> damn. I don't.
[16:55] <saikat> and so redisClient.hget throws an "hget called on undefined" exception
[16:55] <saikat> how would i catch that without a try/catch?
[16:56] <micheil> yeah, but redisClient should always be defined if you're using it.
[16:56] <saikat> sure, but my code should also always work when i want it to
[16:56] <saikat> errors happen for strange reasons, is it not better to defend against them?
[16:57] <_announcer> Twitter: "if considering node.js - see: http://bit.ly/biRf9t" -- nathan. http://twitter.com/webr3/status/16084021506
[16:57] <Kiba> micheil: you want me to pull from branch or just download a release?
[16:57] <micheil> Kiba: download 1.1.00
[16:57] <Kiba> ok
[16:57] <micheil> (which is also HEAD in master)
[16:57] <micheil> saikat: that's expecting you to break your code.
[16:58] <micheil> unless of course you have something that is deleting your own code.
[16:58] <saikat> in this specific case
[16:58] <saikat> like yes, this is a simple bit of code
[16:58] <saikat> but presumably people write non-trivial code that could throw exceptions?
[16:58] <micheil> so, basically, the only time that you want have redisClient through a require() is when redisClient can not be found
[16:59] ddollar has joined the channel
[16:59] <micheil> in which case your process will probably die with an error
[16:59] <saikat> ok
[16:59] <saikat> but in general
[16:59] <micheil> throw is or, rather should, be only used in the worst case scenario
[16:59] <saikat> do you not have exception handling around pieces of code?
[17:00] <saikat> like in a synchronous language
[17:00] <saikat> i'd juts have a global try/catch that sends my clients a 500 in most cases
[17:00] <micheil> I don't throw exceptions.
[17:00] <saikat> since these are all runtime errors
[17:00] ddollar has joined the channel
[17:00] <saikat> is it always up to you to decide whether or not ot throw exceptions? =)
[17:00] <micheil> if you get what I mean?
[17:01] <micheil> do you put an exception handler around nginx or apache to handle if your config is wrong?
[17:01] <saikat> but config is checked at startup
[17:01] <saikat> this isn't
[17:01] <saikat> most of my code, in fact, won't be checked until someone exercises it
[17:01] <micheil> if you're using something that throws, then you'd need to try {} catch(){} that
[17:01] <Kiba> time for lunch
[17:01] <Kiba> !
[17:01] <Kiba> bbl
[17:02] <micheil> Kiba: please do extend on what you need to use setTimeout for
[17:02] <saikat> hm, i guess it just seems off to me to assume that i'm writing exception free code, no matter how little i throw exceptions myself
[17:02] <saikat> especially when my code isn't precompiled
[17:02] <micheil> Kiba: actually, just occured to me, node's http Connection handler automatically kills connections after 120 seconds
[17:03] mrjjwright has joined the channel
[17:03] <micheil> saikat: well, I know I never try to throw an exception.
[17:03] <saikat> right
[17:03] <micheil> if something in my code does, then it's probably throwing it for a damn good reason
[17:03] <micheil> and that reason would stop me from shipping my code.
[17:03] <saikat> but exceptions can happen for unintended reasons
[17:04] <saikat> some stateful variable might get set to null and you don't expect it
[17:04] <saikat> and you might not catch some corner case
[17:04] <saikat> until after you ship your code
[17:04] <micheil> true, but it's sort of really edge case.
[17:04] <saikat> not in all cases - i mean
[17:04] stepheneb has joined the channel
[17:04] <saikat> people have been harping about defensive programming
[17:04] <saikat> for years
[17:04] <micheil> it's the difference between code safe, and code paranoid
[17:05] <saikat> i guess
[17:05] <saikat> it's just
[17:05] deanlandolt_home has joined the channel
[17:05] <saikat> usually the things that cause bugs are things you haven't thought of
[17:05] <saikat> since that's exactly why they cause bugs
[17:06] <saikat> so i guess i'm used to always assuming i haven't thought of everything when writing my code, and exception handling is one safeguard against it
[17:06] <micheil> also, http://nodejs.org/api.html#event-uncaughtexception-52
[17:06] <micheil> if you're really paranoid.
[17:06] <saikat> micheil: actually that's exactly what i wanted
[17:07] <saikat> i've been basically implementing that myself so far using those errorWrapper calls i sent in my gist
[17:07] <saikat> thanks a lot!
[17:08] <saikat> since i'm running this on a server, i need to make sure my program itself doesn't crash in most cases
[17:13] isaacs has joined the channel
[17:15] maushu has joined the channel
[17:16] javajunky has joined the channel
[17:29] sveisvei has joined the channel
[17:46] JimBastard has joined the channel
[17:46] <JimBastard> zzzz
[17:46] <JimBastard> where is felixige when you need him
[17:46] <JimBastard> sup guys
[17:46] <JimBastard> javascript party
[17:54] ewdafa has joined the channel
[17:56] <_announcer> Twitter: "Damn ... node.js gained impressive momentum: http://wiki.github.com/ry/node/modules #module #index" -- Peter Geil. http://twitter.com/peter_geil/status/16087339995
[17:57] mitkok has joined the channel
[17:58] <mscdex> when isn't there a javascript party?
[17:58] <mde> Damn skippy, every day is a JS party for us. 
[18:04] admc has joined the channel
[18:07] sechrist__ has joined the channel
[18:13] <JimBastard> i gotta add some of my libs to the wiki modules page. what categories do say.js and translate.js fall under? should i make new categories for Accessibility and Localization? 
[18:15] <micheil> other
[18:16] <JimBastard> i guess it would be appropriate  to wait for at least a few entries before making a new category 
[18:17] <_announcer> Twitter: "Server side: Node.js or Django? Or something else?" -- Stephane Rodet. http://twitter.com/rodet/status/16088468197
[18:18] <technoweenie> why would you use node.js or django for the same project
[18:19] <micheil> because you're a sadomasochist?
[18:19] <JimBastard> its probably  the same reason you'd feel it was a good idea to ask that question on twitter
[18:19] <technoweenie> i just mean that the types of projects you use django for would not be the same type you use node for
[18:19] <JimBastard> stupidity 
[18:19] <_announcer> Twitter: "Of course the node.js online documentation is a marvel of JavaScript :) http://bit.ly/cTN5bU" -- Stephane Rodet. http://twitter.com/rodet/status/16088573162
[18:19] <technoweenie> true dat
[18:27] fitzgen_ has joined the channel
[18:28] <isaacs> i wonder if the django irc channel has an announcer bot that listens to tweets about django, and if they're making fun of node right now?
[18:28] <isaacs> poor stephane...
[18:29] <technoweenie> hey i'm not saying django isnt cool
[18:29] <mde> They'd probably say the same thing. 
[18:29] <mde> That's like saying, "should I use Python, or Rails?"
[18:31] hammerdr has joined the channel
[18:32] <JimBastard> DJ Ango
[18:32] weepy has joined the channel
[18:32] <JimBastard> DJ Anglo Saxmon
[18:32] <JimBastard> He's a white Jamaican sax player whose also a DJ
[18:33] <micheil> k, now I think you've lost 99% of us, JimBastard 
[18:33] <weepy> hi - can anyone recommend how to 'install' node libaries system wide ? 
[18:33] <JimBastard> im not even sure where i am 
[18:33] <JimBastard> or how i got here
[18:33] <mde> Heheh
[18:33] <micheil> weepy: generally we don't.
[18:33] <JimBastard> weepy: NPM
[18:33] <JimBastard> weepy: the node package manager
[18:33] <micheil> NPM does per user directory, iirc.
[18:33] <isaacs> JimBastard: not "the"
[18:34] <weepy> so is that like rubygems ?
[18:34] <isaacs> micheil: not if you use sudo
[18:34] <JimBastard> you install a package and then you can do require('packagename'); no matter what dir you are in
[18:34] <JimBastard> is that what you want weepy ?
[18:34] <technoweenie> i remember dj ango
[18:34] <isaacs> weepy: except that npm is crappy in completely different ways
[18:34] <micheil> isaacs: okay then, kooky.
[18:34] <technoweenie> that video was funny but kind of painful to watch
[18:34] <weepy> i want to run edge 'mongoose'  
[18:34] <isaacs> weepy: rubygems is crappy by design.  npm is crappy because there are bugs.
[18:34] javajunky has joined the channel
[18:34] <JimBastard> technoweenie: was that a real parody video?
[18:34] <technoweenie> http://www.youtube.com/watch?v=PLUS00QrYWw dj ango!
[18:34] <JimBastard> hee hee while we are at it
[18:35] <mde> Oh, I remember those.
[18:35] <isaacs> weepy: but yeah, i'm being facetious a little bit.
[18:35] <isaacs> weepy: http://github.com/isaacs/npm
[18:35] <JimBastard> some random internet fan took one of my video game rap songs and posed it on youtube
[18:35] <JimBastard> http://www.youtube.com/watch?v=8aJB7Le2_kU
[18:35] <JimBastard> Marak - Heimer Time
[18:35] <JimBastard> i made that shit as a joke and posted it to some forum months ago
[18:35] <JimBastard> had no idea it was on youtube
[18:35] <weepy> isaacs - you imply that npm will one day be non-crappy : - ) 
[18:35] <isaacs> weepy: that's the goal
[18:36] <micheil> weepy: in my eyes, it's already not crappy.
[18:36] <isaacs> micheil: that's only because you're not responsible for fixing it when it breaks.
[18:36] <micheil> weepy: the only part I think is crappy is the server, but I'm opinionated.
[18:36] stephenjudkins has joined the channel
[18:36] <isaacs> micheil: it's been decided, i dunno if you heard.  the server will one day be npm itslef.
[18:36] <isaacs> micheil: where "one day" might well be some time next year or something
[18:37] <micheil> fun, I didn't hear that.
[18:37] <weepy> does it use github as the repo?
[18:37] <JimBastard> yeah weepy 
[18:37] <isaacs> weepy: no, there's a couchapp it's using for now as the registry
[18:37] <isaacs> i mean, the code is on github, of course
[18:37] ajpiano has joined the channel
[18:38] <weepy> is there a way to browse the current shizzle ?
[18:38] <JimBastard> http://www.youtube.com/watch?v=kU-4D51FY98&feature=related is the best, CF versus Rails
[18:38] <weepy> just found the docs folder :)
[18:38] <isaacs> weepy: http://registry.npmjs.org/ or "npm ls"
[18:38] <isaacs> weepy: yeah, or those get installed as "man npm-whatever"
[18:38] <isaacs> where "whatever" is the name of the doc
[18:39] <isaacs> but, now that i can pass file descriptors into a child process, "npm help" won't be crappy
[18:39] <micheil> does anyone know if anyone is using the routes part of node-websocket-server?
[18:39] <weepy> ok - so what if i want to install something that's not on npm ? 
[18:40] <_announcer> Twitter: "Can someone tell me why I would want to use Node.js for an application instead of say, Event Machine? What's all the hubbub about? :P" -- Keith Hanson. http://twitter.com/keith_hanson/status/16089781453
[18:40] <isaacs> weepy: put a package.json in it, and then install it directly
[18:40] <_announcer> Twitter: "Does anyone know if anyone is using the routes part of my node.js websocket-server?" -- Micheil Smith. http://twitter.com/miksago/status/16089783639
[18:40] <isaacs> weepy: check out the "install" doc.  you can give it a tarball file like ./package.tgz or a url to a tarball, or a folder
[18:40] <isaacs> weepy: you can also use "npm link <folder>" to symlink a package into place, so you can edit it without re-installing repeatedly
[18:41] <weepy> ah cool
[18:42] joshbuddy has joined the channel
[18:42] <weepy> npm install git_url  <-- would be kool ?
[18:42] <isaacs> weepy: it has to be a url to a tarball
[18:43] <isaacs> weepy: so npm install http://github.com/user/project/tarball/master would work
[18:43] <weepy> k
[18:43] <isaacs> or .../tarball/tag
[18:43] <weepy> lovely - i'll give it a whirl :)
[18:43] <isaacs> weepy: the most important part is the package.json file.
[18:43] <isaacs> weepy: if it can find a tarball with a single folder containing a package.json, it'll happily install the contents.
[18:44] <isaacs> yeah.  that's right.  i said it.  "happily"
[18:44] <isaacs> npm has emotions.
[18:44] <weepy> gotcha
[18:45] <weepy> what's the communities feeling re: npm vs kiwi  ?
[18:46] <micheil> +1 npm.
[18:46] <JimBastard> weepy: +2 npm
[18:47] <cloudhead> npm for sure
[18:47] <micheil> JimBastard: just had to one up me.
[18:47] <JimBastard> micheil: i cant help one upping you, its just too easy
[18:47] <weepy> from the looks of it, the trouble with kiwi is that u have to require it
[18:47] <JimBastard> morning cloudhead 
[18:47] <micheil> weepy: right now it seems to be the defacto standard.. some use kiwi, but I think most use npm
[18:47] <cloudhead> heilo JimBastard 
[18:47] <JimBastard> im thinking i might write some javascript code today
[18:47] <JimBastard> you in?
[18:48] <JimBastard> maybe like some variables and a couple of functions
[18:48] <JimBastard> a conditional or two
[18:48] <cloudhead> JimBastard: I'm always in
[18:48] <JimBastard> maybe if im feeling spicy a switch case
[18:48] <cloudhead> heh eh
[18:48] <JimBastard> :p
[18:48] <weepy> Connect looks pretty good stuff
[18:49] <weepy> looking forward to a semi stable version
[18:49] <JimBastard> weepy: if you are building an app and want it to run multicore
[18:49] <weepy> - i like the look of the architecture
[18:51] <weepy> isaacs: I tried it on sass.js - no worky
[18:51] <weepy> i presume that the package.json is not exlicit enough
[18:51] <weepy> http://github.com/visionmedia/sass.js/raw/70c2dd2e28452fea4760dde55f7d065dbb946fc7/package.json
[18:52] <cloudhead> weepy: use less.js, it's better : )
[18:53] <weepy> you would say that :-)
[18:53] <weepy> why so ?
[18:53] <cloudhead> well, for one it's a full implementation
[18:53] <weepy> i like the fact u can just paste in some normal CSS
[18:53] <cloudhead> where as sass.js isn't
[18:53] <weepy> so less.js is _ready_ now ?
[18:53] <jashkenas> cloudhead: 'grats on hijs ... that's pretty great.
[18:53] <cloudhead> weepy: yea
[18:54] <cloudhead> jashkenas: thanks, I'm surprised how well it's been working for me so far, for such a simple solution
[18:54] <jashkenas> < 70 loc ... you gotta love it.
[18:54] <mrjjwright> weepy: I have been using Connect since yesterday evening.  It's working well so far.  This is the first router/microframework that I have tried on top of the core Node http apis. 
[18:54] <cloudhead> weepy: it's not officially ready, but I'd say it's miles ahead of the original already
[18:55] <weepy> kewl !
[18:55] <weepy> I've been playing with Connect
[18:55] <weepy> done a fair bit of Express before
[18:55] <mape> Thoughts on http://mape.me/npm-logo.png ? Bloated?
[18:55] <JimBastard> express is for communists and canadians  
[18:55] <weepy> Express is great - but it's still has that Railsey 'some magic shizzle is happening here' feel.
[18:56] <JimBastard> ohh i dunno mape 
[18:56] <weepy> whereas Connect doesn't
[18:56] <cloudhead> and rubyists who don't understand javascript
[18:56] <cloudhead> :)
[18:56] <JimBastard> weepy: express and connect are apples and oranges
[18:56] <JimBastard> also, i highly disagree with the MVC approach for web aps
[18:56] <JimBastard> the express approach is old and dated
[18:56] <weepy> yars
[18:56] <cloudhead> weepy: less.js has nice color functions too, which the ruby version doesn't have, and has pattern matching on mixins :>
[18:56] <JimBastard> porting rails and or Sinatra  is just not good enough for me
[18:57] <weepy> totally
[18:57] <JimBastard> thats why we've been working on our web framework in secret
[18:57] <JimBastard> oops
[18:57] <cloudhead> >,>
[18:57] <weepy> haha
[18:57] <JimBastard> but it is 100% cient side templated
[18:57] <JimBastard> client side
[18:57] <weepy> i see
[18:57] <JimBastard> and makes single page apps
[18:57] <mape> JimBastard: So ok just not great?
[18:58] <JimBastard> mape: the vertical lines on the barcode are epic distracting
[18:58] utgo has joined the channel
[18:58] <jashkenas> cloudhead: If you want to snipe some tokenizing regexes for hijs ... I'm sure you already have your sources ... but feel free to pilfer from here if you like: http://jashkenas.github.com/coffee-script/documentation/docs/lexer.html#section-48
[18:58] <JimBastard> i dunno, its not bad but its not that breat
[18:58] <mape> Not so bad on the non large ones?
[18:58] <JimBastard> great
[18:58] <JimBastard> ehhh
[18:58] <JimBastard> i dunno, i think you can do better
[18:58] <cloudhead> jashkenas: oh thanks!
[18:58] <JimBastard> maybe rotate the box so the front facing edge is more prevalent 
[18:58] <mape> What, you are my mom? :P
[18:59] javajunky has joined the channel
[18:59] <mape> You can do better is always a good way to not say stuff is awful hehe
[18:59] <JimBastard> i mean, you want my opinion. im telling you im not thrilled by that image, think you could do better
[18:59] <JimBastard> maybe someone else likes it
[19:00] <JimBastard> i just steal all my art from google images
[19:00] <mape> JimBastard: Nah just liked the phrasing, will take a look at rotating it
[19:00] <JimBastard> yeah well, i think its a good start and its great you are actually making an NPM logo
[19:00] <JimBastard> so i'd rather not offend
[19:00] <mape> This is the internet! There is no offending here
[19:00] <cloudhead> I like the logo
[19:01] <weepy> how about something like http://www.dafont.com/font.php?file=cmc7&page=1&nb_ppp_old=10&text=NPM&nb_ppp=10&psize=l&classt=alpha
[19:01] <JimBastard> maybe if you made the box have straight lines
[19:01] <JimBastard> its a bit skewed
[19:01] <mape> Yeah, I'm trying to not be to plain/straight, that might be the wrong path though
[19:02] <_announcer> Twitter: "@keith_hanson Nothing is stopping you from using event machine, I just think node.js is better suited to the job." -- Micheil Smith. http://twitter.com/miksago/status/16091109493
[19:03] <cloudhead> mape: maybe a barcode like this might work better: http://bentleyjones.com/blog/wp-content/uploads/2009/03/final_night_barcode.jpg
[19:03] <cloudhead> more fun too
[19:03] <cloudhead> and the thin lines will anti-alias better
[19:03] <cloudhead> er, thick lines
[19:03] <jashkenas> and then pixel-font-spell NPM in the middle?
[19:03] <mape> hmm yeah qr.. Does those work when scewed?
[19:03] <cloudhead> haha
[19:03] <cloudhead> yea
[19:05] <mape> that is actually a nice idea
[19:05] <mape> have the qr link the page
[19:05] <visnup> I like the logo
[19:06] <visnup> reminds me of a factory
[19:06] <mape> hm the morphing seems to be to much
[19:06] <weepy> isaacs - i tried to install less via NPM - Epic FAIL. here's the gist -> http://gist.github.com/436900
[19:07] <weepy> jashkenas: hello - nice to see you 'in person'
[19:08] <JimBastard> weepy: do you goto NYC.js?
[19:08] <jashkenas> howdy weepy. given your honorable history of tickets and suggestions, consider stopping by #coffeescript too...
[19:08] <weepy> I'm in London at the mo
[19:09] <JimBastard> also where did isaac go
[19:09] <weepy> but my gf has just applied for a job in NYC -> so maybe I'll go one day !
[19:09] <JimBastard> i want to know why NPM install failed
[19:09] <cloudhead> weepy: can you try that again, I just pushed a more recent version
[19:09] <weepy> booom
[19:09] <weepy> success
[19:09] <cloudhead> awesome
[19:09] <JimBastard> huzaaah
[19:09] <JimBastard> open source win
[19:09] <JimBastard> good stuff cloudhead 
[19:10] <cloudhead> :>
[19:11] <cloudhead> weepy: let me know how it goes, I've mainly been using it in the browser
[19:11] <weepy> k will do do
[19:12] <mape> cloudhead: http://mape.me/npm-logo.png That actually works as well :) the qr-code that is for an url
[19:12] <cloudhead> mape: yea, much better
[19:12] <cloudhead> now if you can make it not stretch, it'll be even better
[19:13] Yuffster has joined the channel
[19:13] <cloudhead> not sure how to generate a rectangular qr
[19:13] <cloudhead> could also just be square, and towards the front
[19:13] <mape> Well it does work, but you mean more estetical?
[19:14] <cloudhead> yea
[19:14] <cloudhead> like, a aquare
[19:15] tisba has joined the channel
[19:15] <cloudhead> square*
[19:16] hammerdr_ has joined the channel
[19:18] <mape> cloudhead: http://mape.me/npm-logo.png
[19:19] <cloudhead> mape: yes!
[19:19] <cloudhead> that's the ticket
[19:20] o_o has joined the channel
[19:27] <mscdex> o_o
[19:29] <JimBastard> mscdex: 
[19:29] <JimBastard> you bastard
[19:30] <JimBastard> i want to exhort free photohshop work from you
[19:30] <JimBastard> i had to do it myself
[19:30] <JimBastard> http://github.com/marak/translate.js
[19:30] <JimBastard> i wanted to *
[19:32] deanlandolt_home has joined the channel
[19:32] <JimBastard> ahh fuck i am missing a label
[19:32] <JimBastard> just noticed
[19:36] jbrantly has joined the channel
[19:38] <mscdex> heh
[19:39] <JimBastard> see
[19:39] <JimBastard> this is what happens when you let me photoshop
[19:39] <JimBastard> but i guess its good enough for now
[19:40] <mscdex> mspaint!
[19:40] javajunky has joined the channel
[19:43] <JimBastard> i wonder if i should make a module that wraps http module in browser ajax
[19:43] <JimBastard> maybe just make a browser version of http module
[19:43] <JimBastard> that is a fall back
[19:43] <JimBastard> thats a good idea
[19:44] <JimBastard> someone must have done this already
[19:44] jashkenas has left the channel
[19:46] <JimBastard> maybe just porting node to the browser would be the right move
[19:46] <JimBastard> stub out all the major modules and require system
[19:46] <JimBastard> sys.puts => console.log
[19:46] <JimBastard> http.createClient => ajax
[19:46] <JimBastard> eventemitter => custom event dispatcher
[19:46] rolfb has joined the channel
[19:47] <JimBastard> that would actually work
[19:47] <JimBastard> you wouldnt port 100% but just most of it
[19:47] <JimBastard> ryah you alive?
[19:49] zomgbie has joined the channel
[19:53] <JimBastard> yeah im gonna port nodejs to the browser
[19:55] <mde> JimBastard: We're going to do something kind of similar with Geddy's models, where there's a client-side DB 'adapter' that's just Ajax calls to the REST API on the server.
[19:55] <JimBastard> mde: im talking a drop in replacment
[19:55] <mape> mde: You saw the messages I left you?
[19:55] <JimBastard> so you include node.js.js
[19:55] <JimBastard> and then your scripts work
[19:56] <mde> Yeah, it's a similar idea, just at a higher level.
[19:56] <JimBastard> i get pretty high
[19:56] <JimBastard> level
[19:56] <mscdex> rush!
[19:56] <mape> JimBastard: What if I use Object.keys(myObj) in my node-code and I run that in IE7?
[19:56] <JimBastard> mape: good point, i'll have to mimic as much ecma5 as i can
[19:56] <mde> mape: I lost the PMs re-setting up irssi, sorry.
[19:56] <JimBastard> but its gonna break
[19:56] <JimBastard> on defineProperty
[19:56] <mde> What was the deal?
[19:56] <JimBastard> unless i use some serious magic
[19:57] <mscdex> mape: it'll do an alert() that makes fun of you for using IE
[19:57] <JimBastard> mape: i might have to exclude some of the fancy emca5 in the very first versions.....but like i think there is promise
[19:57] <mde> mape: Yes, writing code that runs everywhere is interesting.
[19:57] <mape> mde: Some issues with scaffolding
[19:57] <mde> geddy-model now runs in all the major browsers, plus Node, plus therubyracer.
[19:58] <mape> mde: ok If I spam you with the old convo?
[19:58] <JimBastard> but like, with toSting(), eval(), and static code analysis i can do ANYTHING
[19:58] <mde> mape: Yeah, sure -- or open a GitHub issue.
[19:58] <mde> That way other people with the same problem can see.
[19:58] <mde> Or shoot a mail to the list.
[20:04] jherdman has joined the channel
[20:09] <JimBastard> where is a good browser implementation of CommonJS require() ?
[20:09] <JimBastard> deanlandolt_home ?
[20:09] <JimBastard> deanlandolt_home ?
[20:09] <JimBastard> err
[20:09] <JimBastard> kriszyp ?
[20:10] <jbrantly> JimBastard: http://github.com/jbrantly/Yabble  (but I'm biased)
[20:10] <jbrantly> JimBastard: an alternative is RequireJS
[20:10] <JimBastard> reading code
[20:11] <jbrantly> kriszyp's transporter works with both
[20:11] <JimBastard> jbrantly: why would i want to use yours over http://github.com/jrburke/requirejs ?
[20:12] <JimBastard> whats the diff / value add
[20:12] <JimBastard> i want sync script loading before the page loads for the modules
[20:12] <JimBastard> keep it simple and fast for now
[20:13] Phrogz has joined the channel
[20:13] <jbrantly> JimBastard: one obvious difference (not necessarily a benefit) is that mine supports XHR and script tags, whereas RequireJS is just script tags
[20:13] <JimBastard> yeah
[20:13] <JimBastard> hrmm
[20:13] <jbrantly> JimBastard: RequireJS is also more.. "full featured", but comes at a cost in size
[20:13] <JimBastard> requirejs is kinda cool i think
[20:13] <JimBastard> im not using any of these for my dual-sided libraries
[20:13] <JimBastard> i generate a bundle 
[20:13] Phrogz has left the channel
[20:15] <jbrantly> JimBastard: requirejs is cool. I wrote Yabble because it fills a different niche. I wanted to be able to write non-Transport-wrapped code and have it "just work"
[20:16] <jbrantly> JimBastard: note that requirejs requires that you write your modules in a certain way (transport wrapped). Not sure if its build tool can do it for you. 
[20:17] <JimBastard> ohh hrmmm
[20:17] <JimBastard> i cant be having people change their code
[20:17] <JimBastard> im pretty sure i can write my own require script in like < 20 lines
[20:17] <jbrantly> mine doesn't require that if you use XHR. Then it has a currently half-assed tool to automatically wrap your modules in a transport format for use with script tags
[20:18] <JimBastard> whats a transport format?
[20:18] <jbrantly> JimBastard: if all your scripts come "preloaded", then thats true (very simple require)
[20:18] <JimBastard> what do you mean preloaded?
[20:18] <JimBastard> you mean that everything blocks until my node.js.js modules are loaded?
[20:19] <jbrantly> JimBastard: a commonjs module on it's own isn't very browser-friendly. local variables become globals, etc. Thus there are "Transport" specifications which just adds boilerplate code around the module and makes it more <script /> tag friendly
[20:19] <jbrantly> JimBastard: preloaded I mean it's all transport-wrapped and concatenated into one file. No dynamic loading.
[20:19] <JimBastard> naaah i can just wrap those files in closures
[20:19] <JimBastard> using toString and eval
[20:20] <JimBastard> is that transport wrapped?
[20:20] <JimBastard> ohhhh
[20:20] <JimBastard> hrmmm
[20:20] <JimBastard> im just gonna roll my own require
[20:20] <jbrantly> JimBastard: http://wiki.commonjs.org/wiki/Modules/Transport/D
[20:20] <JimBastard> if i cant do it in < 20 lines ill look at these libs more
[20:20] <jbrantly> JimBastard: good luck
[20:21] <JimBastard> failing would be acceptable
[20:21] <JimBastard> because if i fail it will be for a specific reason
[20:21] <JimBastard> and that reason has probably been addressed
[20:21] <JimBastard> we'll see
[20:21] <jbrantly> JimBastard: I've seen very simple requires (for non-dynamic loading scripts). If I could I'd link ya.
[20:21] <JimBastard> its cool im on it
[20:21] <JimBastard> thanks
[20:27] <_announcer> Twitter: "Any interesting node.js persistence options?" -- bazzers mc bazzatron. http://twitter.com/briancollins/status/16095870667
[20:27] carlocci has joined the channel
[20:30] <weepy> what DB backends have you guys used ?
[20:35] <mde> weepy: Geddy supports Postgres, SQLite, and now CouchDB.
[20:38] reid has joined the channel
[20:40] <Kiba> god damn it
[20:41] <Kiba> ACTION wonders why his HTTP connection keeps getting closed after like 2 minutes
[20:42] <Kiba> only one thing left to do
[20:42] <Kiba> ask the mailing list
[20:44] <_announcer> Twitter: "Drinking the Node.js Kool-Aid http://is.gd/cO0Pu #nodejs" -- Rui Vieira. http://twitter.com/ruimvieira/status/16096709268
[20:50] hammerdr has joined the channel
[20:53] hammerdr_ has joined the channel
[20:54] jbrantly has left the channel
[20:59] <mscdex> Kiba: what version of node and micheil's websocket module are you using?
[21:00] <micheil> mscdex: it seems to be node, we've just done tests
[21:00] <_announcer> Twitter: "Interesting audio interview with Node.js  core developer (high-performance Javascript Web server): http://ht.ly/1XTGl :#javascript #v8" -- Manu Sporny. http://twitter.com/manusporny/status/16097485166
[21:00] <mscdex> ah
[21:01] <micheil> seems that http server just dies on connections after two minutes, even when the timeout is set to 0
[21:04] reid has joined the channel
[21:05] dabreaka has joined the channel
[21:09] <weepy> mde: cool - just looking at mongo !
[21:12] <sechrist> mongo mongo mongoooo
[21:12] <_announcer> Twitter: "Currrently: http://drp.ly/1byYaC #node.js #websockets :D" -- Micheil Smith. http://twitter.com/miksago/status/16098073701
[21:16] <mde> weepy: Right on, the next NoSQL store for Geddy is probably Mongo.
[21:16] <weepy> trying out mongoose
[21:16] <weepy> seems quite nice
[21:16] <mscdex> they call me the working man!
[21:16] mikeal has joined the channel
[21:16] <mde> Haha, right on. :)
[21:18] <micheil> weepy: mongoose just isn't cool, I mean, it makes an async lib sync.
[21:18] <_announcer> Twitter: "Сейчас попробую собрать http-proxy на node.js. Если не полетит — придётся копать nginx :(" -- Devgru. http://twitter.com/Devgru/status/16098333531
[21:18] <weepy> it's not sync
[21:18] <micheil> pretty much is.
[21:18] <micheil> it blocks.
[21:19] <micheil> for what it allows, it has to be sync.
[21:20] mikeal has joined the channel
[21:20] <weepy> hm
[21:20] <weepy> i thought it just made a queue buffer
[21:21] <micheil> which essentially makes it sync
[21:21] <micheil> anyway, G'night, it's 7:30am.
[21:22] grahamalot_ has joined the channel
[21:22] <mscdex> that sounds like morning to me heh
[21:22] <micheil> new websocket server version coming in the morning
[21:22] <micheil> mscdex: I've been up all night.
[21:22] <mscdex> :-P
[21:22] <micheil> only just realised it's 7am.
[21:22] <mscdex> yep i know how that goews
[21:22] <micheil> so, G';night
[21:23] <mscdex> man, i think winuae has gotten progressively worse over the years
[21:24] <mscdex> i used to be able to play archon 1 and 2 just fine
[21:29] markwubben_ has joined the channel
[21:29] <_announcer> Twitter: "@manusporny I'm on the node.js path now; currently in tabulator rdflib code and looking to get running in node" -- nathan. http://twitter.com/webr3/status/16098880783
[21:31] felixge has joined the channel
[21:31] felixge has joined the channel
[21:35] <_announcer> Twitter: "@webr3 I'm currently benchmarking Node.js vs. Monarch/Apache - it's not doing so well. About as fast as Apache2+PHP5 : http://ht.ly/1XU84" -- Manu Sporny. http://twitter.com/manusporny/status/16099127541
[21:36] <mape> git is killing me
[21:36] <Aria> Slowly or quickly?
[21:36] <mape> I can't even tell
[21:37] <pquerna> or softly.
[21:37] <mape> I'm trying to make sure my fork of node is up to date with ryans but I'm to dumb to make it happen
[21:38] <mape> if I forked it on github, I git clone that, add a remote using ryan, do a git checkout -b ry/master
[21:38] <mape> pull that, I should just checkout master and git merge ry/master ?
[21:38] <mape> and I should be up to snuff?
[21:39] <mape> or do I have to pull this changes, do commit locally and then merge them, and commit the merge, and push?
[21:42] reid has joined the channel
[21:43] grahamalot has joined the channel
[21:44] jedschmidt has joined the channel
[21:44] <Aria> If your pull is private, you should rebase; if you're pushing a forked copy out, then merge.
[21:44] <Aria> You only have to commit merges when there's conflict.
[21:45] <_announcer> Twitter: "@epplestun es impresionante nodejs hoy he jugado con socket.io, muy interesante" -- karlos g liberal. http://twitter.com/patxangas/status/16099601706
[21:47] <mape> hmm k
[21:53] jakehow has joined the channel
[21:55] ceej has joined the channel
[21:55] sveimac has joined the channel
[21:57] <Kiba> The Node shall conquers all!
[21:58] zaach has joined the channel
[21:58] javajunky has joined the channel
[22:00] <mape> Aria: But so if I have a repo that has a patch to into node, and I add the remote ry/node , i should be able to do git fetch ry master and that should update my master?
[22:01] <mscdex> i'm so glad git guis exist huhu
[22:01] mikeal has joined the channel
[22:01] <mape> mscdex: Well I want to understand it though, which is where I am failing hard
[22:03] zomgbie has joined the channel
[22:05] k23z__ has joined the channel
[22:05] <k23z__> how do I serialize a req so I can see it on console ?
[22:05] <k23z__> JSON.stringify ?
[22:07] <k23z__> where do I find a JSON parser ?
[22:07] <k23z__> or serializer for node.js ?
[22:07] <mscdex> you can use sys.inspect
[22:07] <mscdex> sys.puts(sys.inspect(req));
[22:08] <mscdex> for json parsing: JSON.parse(jsonString);
[22:08] icebox has joined the channel
[22:09] <k23z__> awesome
[22:09] <k23z__> mscdex: apparently node.js doesn't know about the JSON module
[22:09] mpoz2 has joined the channel
[22:09] <mscdex> the JSON methods are built into V8
[22:10] <mscdex> both stringify and parse
[22:14] <ryan[WIN]> same with regex
[22:19] <mikeal> ryah: is there are a reason we don't just not allow people to response.send() before response.writeHead?
[22:22] linuxsable has joined the channel
[22:23] charlesjolley- has joined the channel
[22:24] adamwiggins has joined the channel
[22:26] ollym has joined the channel
[22:27] <ollym> how difficult would it be to port Node.JS to windows?
[22:32] <mscdex> someone already ported it to cygwin
[22:33] <mscdex> there's a thread on it here: http://groups.google.com/group/nodejs/browse_thread/thread/721f061380fe50a1/e4196553d6ca151c
[22:33] reid has joined the channel
[22:33] <ollym> i mean natively
[22:33] <ollym> using MinGW or alike
[22:34] <mscdex> not yet
[22:34] <mscdex> i think ryah and someone else were working on a native port?
[22:34] <mscdex> i dunno the status though
[22:40] <javajunky> the cygwin move is a pretty good start, gives you an exe that can happily standalone
[22:41] <javajunky> http://drop.io/2dwcadi  has a copy you could play with
[22:41] <javajunky> the native port was going to be a GSoC thing I think but that never transpired :(
[22:42] <mape> heh.. guess I just royally scewed my repo up
[22:43] <mscdex> :0
[22:43] <mape> ACTION puts on the silly hat
[22:44] <mape> http://github.com/ry/node/network not even sure how I am able to get a head in commits of the repo I rebased with but yeah..
[22:44] <mape> at least I'm on the cutting edge
[22:45] TommyM has joined the channel
[22:46] <_announcer> Twitter: "@grantmichaels with nodejs? Are you using a web framework? I'm trying out Express right now..." -- Keith Hanson. http://twitter.com/keith_hanson/status/16102569402
[22:47] derbumi has joined the channel
[22:48] <ryan[WIN]> node still doesn't have a mingw port?
[22:49] fictorial has joined the channel
[22:49] <mscdex> not that i'm aware of
[22:49] blackdog_ has joined the channel
[22:50] <ryan[WIN]> hmmmmmmmmmmmmmmmmmmmmmmmmmmm
[22:59] <mape> yay there we go
[23:08] <fitzgen_> Is there a nice date/time parsing and formatting lib?
[23:08] mikeal has joined the channel
[23:09] fitzgen_ has left the channel
[23:09] fitzgen_ has joined the channel
[23:10] <sechrist> what is the obsession with frameworks?
[23:11] <sechrist> express is cool -- but it doesn't solve anything I couldn't do myself -- and relying on other people to maintain code that interfaces with something rapidly changing isn't really a good idea >.>
[23:11] <mape> sechrist: People want something that makes it easier to do stuff?
[23:11] <sechrist> perhaps in a few months
[23:11] <sechrist> mape: then they shouldn't be using node yet?
[23:12] <mape> If someone can build stuff for me so I can stick to the custom stuff I'm all happy
[23:12] <mape> sechrist: Well it has to start somewhere?
[23:12] <mde> sechrist: I've been waiting for credible SSJS since Yegge supposedly ported Rails to Rhino.
[23:13] <sechrist> I guess -- express is one of the more maintained ones. I've used it myself. but i've seen people "WELL IF NODE DOESN'T HAVE A FRAMEWORK I'M NOT USING IT"
[23:13] <mde> I'm sick of doing everything twice. :)
[23:13] <sechrist> i was like lulz
[23:13] hammerdr has joined the channel
[23:13] <mde> Yeah, it's still really early.
[23:17] markwubben has joined the channel
[23:20] Tim_Smart has joined the channel
[23:21] <_announcer> Twitter: "@grantmichaels Ok, so playing around, nodejs is only as fast as the slowest component, ie the database. Pulling 50 records from Mongo crawls" -- Keith Hanson. http://twitter.com/keith_hanson/status/16104389021
[23:27] <ollym> sechrist, what is express?
[23:27] <sechrist> a "framework" for "web apps"
[23:28] <sechrist> pulling 50 records from mongo is slow? what the fuck is he doing -- folding in each mapreduce?
[23:30] <chilts> heh
[23:31] JimBastard has joined the channel
[23:32] <mape> Hmm anyone poked with Connect recently?
[23:33] mattly has joined the channel
[23:34] <mscdex> javascript-fu!
[23:36] <sechrist> fu
[23:37] Tim_Smart has joined the channel
[23:38] <mscdex> one likes to believe in the freedom of javascript
[23:39] <mscdex> ^ Geddy's new tagline! ;-)
[23:39] <JimBastard> where is the good jquery.require code hiding
[23:39] <JimBastard> lol
[23:39] <JimBastard> fuck it
[23:39] <JimBastard> :p
[23:40] <mscdex> that's record speed
[23:40] <mde> Haha
[23:40] <mde> mscdex: That's is absolutely great. :)
[23:41] <mde> I'd lean more toward the 2112 thing, something like "I can't wait to share this new wonder."
[23:44] <mscdex> :P
[23:45] <ollym> sechrist, link?
[23:45] <sechrist> http://github.com/visionmedia/express ?
[23:46] <ollym> yea, thx
[23:46] <mscdex> it's on the modules page too: http://wiki.github.com/ry/node/modules
[23:47] <mde> ollym: Do please kick the tires on Geddy too: http://geddyjs.org
[23:47] <ollym> im interested in something simple
[23:48] <ollym> with regex based routing
[23:48] <ollym> and mvc
[23:48] <mscdex> regex is slow :S
[23:48] <mde> ollym: Depends on what you mean by simple. Geddy is siimple to set up and use.
[23:49] <ollym> simple code
[23:49] <ollym> mscdex, i didnt say fast
[23:49] <mde> Yeah, it's pretty dead-simple. 
[23:49] <mscdex> lol ok
[23:50] <mde> Resource-based routing looks like this:
[23:50] <mde> router.resource('my_model');
[23:51] Tim_Smart has joined the channel
[23:52] <ollym> im new to JS/Node.JS
[23:52] <ollym> coming from PHP using the Kohana PHP Framework
[23:53] <ollym> so im hoping to create a similar port of that in Node.JS, but to the strengths of node.js
[23:53] <mde> Ah, right on. Welcome to the web-framework party. 
[23:53] <ollym> which isnt necessarily just built to be a standard http web server 
[23:53] <ollym> and heroku support too
[23:54] <mde> It's a great learning experience, that's for sure.
[23:59] <ollym> Ejscript is interesting too
