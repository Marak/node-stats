[00:00] ollie has joined the channel
[00:03] Connorhd_ has joined the channel
[00:08] davidjrice: guys anyone good with C ?
[00:08] davidjrice: :)
[00:14] ryah: davidjrice: ?
[00:15] davidjrice: ryah: found an excellent hashing library
[00:15] davidjrice: http://github.com/brainfucker/hashlib
[00:15] ryah: ok
[00:15] konobi: patches welcome?
[00:16] davidjrice: next piece of the puzzle is a hmac function
[00:16] davidjrice: except, I'm not sure where to start
[00:16] davidjrice: (I'm building towards oauth for node)
[00:17] davidjrice: konobi: I assume so! just sent the developer a ping
[00:17] teemow has joined the channel
[00:17] ryah: http://nodejs.ru/ <- wow haven't seen this
[00:17] evilhackerdude has joined the channel
[00:17] davidjrice: I looked at a lot of the JS crypt libraries, they seemed foobar (apart from base64) 
[00:18] davidjrice: until that is... I found that library above. Able to get results from it according to the SHA1 specs etc.
[00:19] ryah: good
[00:20] ryah: i guess this node-waf thing actually worked out
[00:20] davidjrice: ryah: try building it. flawless
[00:20] davidjrice: (for me)
[00:20] ryah: big repo
[00:21] ryah: yeah 
[00:21] ryah: seems to work
[00:21] ryah: i'm glad i didn't try to write my own build system and instead was lazy and just threw waf into the distro
[00:22] davidjrice: jake?
[00:22] ryah: i mean waf sucks but it's better than i could make :)
[00:22] ryah: what's jake?
[00:22] ryah: oh right - the narwhal thing?
[00:23] ryah: build systems are really really hard.
[00:23] davidjrice: the (so-far) non existent javascript make
[00:23] ryah: http://github.com/jcoglan/jake
[00:24] ryah: oh maybe thats not it
[00:25] ryah: i think tlrobinson has a make clone in narwhal
[00:26] unomi has joined the channel
[00:27] davidjrice: ryah: was just joking! I guess when someone writes make for js they'll call it jake
[00:29] rictic: jake looks very specialized, it doesn't look like it's a general purpose build tool like make or rake
[00:30] ryah: here is the real jake
[00:30] ryah: http://github.com/280north/jake
[00:34] davidjrice: wow
[00:34] davidjrice: already!
[00:39] davidjrice: so I'm guessing I might try bunging open ssl header and implementation files into this library and see what happens
[00:39] davidjrice: man, talk about barebones. All I wanted to do yesterday was post a message to twitter :)
[00:51] deformated has joined the channel
[00:52] deformated: microtemplates, lets get the words rolling on that front
[00:54] deformated: anyone who deals with tmpl knows
[00:55] deformated: but how can we get it for format the output correctly? furthermore, is that important?
[00:58] nefD has joined the channel
[01:02] tisba_ has joined the channel
[01:11] joshbuddy has joined the channel
[01:11] dnolen has joined the channel
[01:24] deformated has left the channel
[01:30] cloudhead has joined the channel
[01:32] jcrosby has joined the channel
[01:43] charlenopires has joined the channel
[01:51] steadicat has joined the channel
[02:00] tisba_ has joined the channel
[02:03] JoePeck has joined the channel
[02:05] deformated has joined the channel
[02:22] randomekek has joined the channel
[02:30] teemow has joined the channel
[02:30] keeto has joined the channel
[02:39] JimBastard has joined the channel
[02:39] JimBastard: javascript party time!
[02:44] JimBastard has joined the channel
[02:50] dnolen_ has joined the channel
[03:03] binary42 has joined the channel
[03:26] dnolen has joined the channel
[03:27] omygawshkenas has joined the channel
[03:41] jchris has joined the channel
[03:42] bpot has joined the channel
[03:44] jchris1 has joined the channel
[03:44] omygawshkenas: hey node -- what happened to posix.truncate?
[03:44] omygawshkenas: Does it live somewhere else now?
[03:57] randomekek: i think posix -> fs
[03:59] omygawshkenas: thanks
[04:07] aho: mh. documentation generators... which one is popular for js?
[04:08] aho: HeaderDoc looks good, but is there some kind of sorta standard?
[04:10] unomi: I think that most follow javadoc
[04:10] unomi: @param etc
[04:10] aho: ye, headerdoc also supports javadoc-style annotations
[04:13] aho: mmmh... headerdoc uses /*! though (instead of /**)
[04:15] unomi: what do you like about headerDoc?
[04:15] masuidrive has joined the channel
[04:16] masuidrive has joined the channel
[04:17] aho: ah... yuidoc looks slightly nicer
[04:17] unomi: yeah, thats what I am following
[04:18] aho: http://developer.yahoo.com/yui/yuidoc/ example: http://developer.yahoo.com/yui/docs/
[04:18] aho: ye, looks surely usable :)
[04:21] unomi: http://javascript.neyric.com/inputex/api/index.html
[04:21] unomi: this is an external project applying yuidoc
[04:23] aho: ye, i think i'll go with yuidoc
[04:27] siong1987 has joined the channel
[04:38] bpot_ has joined the channel
[04:40] voodootikigod has joined the channel
[05:06] joshbuddy has joined the channel
[05:06] joshbuddy has joined the channel
[05:15] cadorn has joined the channel
[05:17] joshbuddy has joined the channel
[05:17] joshbuddy has joined the channel
[05:33] JimBastard: break time!
[05:33] JimBastard: LoL time
[05:35] masuidrive: Hi there
[05:35] masuidrive: I started project for mysql driver on node.js http://github.com/masuidrive/node-mysql/
[05:36] masuidrive: Now, could connect and authenticate only.
[05:39] masuidrive: I still learning English, when I used wrong English, please tell me
[05:53] micheil_mbp has joined the channel
[06:02] masuidrive has joined the channel
[06:04] omygawshkenas: are there any built-in convenience helpers for writing files these days?
[06:04] omygawshkenas: I'm doing posix.open(path, process.O_CREAT | process.O_WRONLY | process.O_TRUNC, 0755) ...
[06:05] omygawshkenas: but it's a little longish, and I was wondering if there was something already in the stdlib.
[06:09] sveisvei has joined the channel
[06:56] nsm has joined the channel
[07:02] unomi: if you are doing that on a regular basis you could store process.O_CREAT | process.O_WRONLY | process.O_TRUNC and refer to it
[07:04] unomi: then you are down to fs.open(path, fsOpenCfg, 0755)
[07:27] masuidrive has joined the channel
[07:38] elliottcable: wtfuxup
[07:38] elliottcable: anybody in here written any EBNF syntaxes?
[07:38] elliottcable: or any Backus-Naur stuff
[07:39] elliottcable: trying to figure out how to specify that some stuff *canâ€™t* be followed by something else
[07:46] sveisvei has joined the channel
[07:49] piranha has joined the channel
[08:06] icebird has joined the channel
[08:09] icebird has joined the channel
[08:09] sveisvei has joined the channel
[08:09] rictic has joined the channel
[08:12] qFox has joined the channel
[08:25] gf3 has joined the channel
[08:30] brosner has joined the channel
[08:35] masuidrive has joined the channel
[08:42] aguynamedben has joined the channel
[08:54] voodootikigod has joined the channel
[09:07] drostie has joined the channel
[10:02] teemow has joined the channel
[10:24] kennethkalmer has joined the channel
[10:25] masuidrive has joined the channel
[10:32] markwubben has joined the channel
[10:40] felixge has joined the channel
[10:40] felixge has joined the channel
[11:11] kjeldahl has joined the channel
[11:12] rictic has joined the channel
[11:33] lifo has joined the channel
[12:18] masuidrive has joined the channel
[12:21] markwubben has joined the channel
[12:21] markwubben has joined the channel
[12:31] piranha has joined the channel
[12:35] jed has joined the channel
[12:35] Atmoz has joined the channel
[12:42] masuidrive has joined the channel
[12:43] markwubben has joined the channel
[12:45] sveilin has joined the channel
[12:51] piranha_ has joined the channel
[12:59] piranha has joined the channel
[13:01] piranha_ has joined the channel
[13:13] eikke has joined the channel
[13:27] perky2 has joined the channel
[13:27] perky2: yo
[13:28] perky2: anyone here?
[13:30] markwubben_ has joined the channel
[13:32] perky2: jedediah smith
[13:32] perky2: jedediah schmidt
[13:53] Atmoz has joined the channel
[13:53] nsm has joined the channel
[14:03] JoePeck has joined the channel
[14:18] jdee has joined the channel
[14:19] tlynn_ has joined the channel
[14:27] creationix has joined the channel
[14:32] sveisvei has joined the channel
[14:43] alex-desktop has joined the channel
[14:49] markwubben has joined the channel
[14:50] pjb3 has joined the channel
[14:51] pjb3: For an HTTP Server, is there a way to have it not set a Transfer-Encoding header in the response?
[14:57] inimino: pjb3: set Content-Length so it doesn't have to chunk the response
[15:01] omygawshkenas has joined the channel
[15:02] r11t has joined the channel
[15:02] omygawshkenas: 'morning, folks, I'm trying to make a nice command-line utility, backed by node, and can't seem to get the "--help" flag past node's own detection of it.
[15:03] omygawshkenas: Which is to say, I'm using the standard nix shebang: #!/usr/bin/env node
[15:03] omygawshkenas: And I'd like to be able to parse and print my own help message for "--help" instead of the Node default.
[15:03] omygawshkenas: Possible?
[15:07] micheil has joined the channel
[15:09] micheil_mbp has joined the channel
[15:10] omygawshkenas: It looks like node-repl has the same problem -- just printing out the help for vanilla "node".
[15:11] micheil_mbp_ has joined the channel
[15:41] felixge: omygawshkenas: I'm not sure if its possible right now, you may need to patch node.c
[15:41] felixge: * node.cc
[15:41] omygawshkenas: alright -- thanks felix.
[15:42] felixge: omygawshkenas: actually, it seems node will allow you to pass args after '--', let me try
[15:42] binary42 has joined the channel
[15:43] felixge: omygawshkenas: yip
[15:43] felixge: omygawshkenas: try this: https://gist.github.com/d0fe5c5cb929562b7188
[15:44] felixge: it will give you all args you pass to ./sample.js
[15:44] omygawshkenas: awesome, I'll try it.
[15:44] felixge: omygawshkenas: good luck :)
[15:46] omygawshkenas: It works beautifully, thanks felix.
[15:47] felixge: omygawshkenas: np
[15:47] omygawshkenas: binary42: you around?
[16:09] joshbuddy has joined the channel
[16:09] joshbuddy has joined the channel
[16:26] sztanphet has joined the channel
[16:36] creationix_ has joined the channel
[16:37] charlenopires has joined the channel
[16:49] mattly has joined the channel
[16:54] omygawshkenas has joined the channel
[16:55] pdelgallego has joined the channel
[17:02] piranha has joined the channel
[17:06] omygawshkenas has joined the channel
[17:25] chakrit has joined the channel
[17:37] omygawshkenas_ has joined the channel
[17:39] dnolen has joined the channel
[17:45] dnolen has joined the channel
[17:46] creationix_ has joined the channel
[18:01] piranha has joined the channel
[18:14] Connorhd has joined the channel
[18:31] dnolen has joined the channel
[18:38] aho has joined the channel
[18:42] cloudhead has joined the channel
[18:43] joshbuddy has joined the channel
[18:43] joshbuddy has joined the channel
[18:44] siong1987 has joined the channel
[18:47] teemow has joined the channel
[18:48] Atmoz has joined the channel
[18:57] Atmoz has joined the channel
[19:00] omygawshkenas has joined the channel
[19:04] teemow has joined the channel
[19:13] teemow has joined the channel
[19:15] teemow has joined the channel
[19:20] dnolen has joined the channel
[19:22] omygawshkenas has joined the channel
[19:23] cadorn has joined the channel
[19:31] tmpvar has joined the channel
[19:45] omygawshkenas: hey #node -- what convention are y'all using to set up scripts for both server-side and browser deploy?
[19:45] omygawshkenas: Sniff the exports object? The process object?
[19:46] omygawshkenas: if (require !== undefined) sys = require('sys');
[19:46] omygawshkenas: Something like that?
[19:48] tmpvar: there has been a bit of experimentation
[19:48] tmpvar: let me find a gist
[19:49] tmpvar: omygawshkenas, http://gist.github.com/281374
[19:49] tmpvar: some thing to that effect should work
[19:49] omygawshkenas: hmm
[19:49] omygawshkenas: Seems like there should be a CommonJS convention for it.
[19:50] tmpvar: yeah, unfortunately the browser / server are two different worlds heh
[19:50] omygawshkenas: thanks.. I appreciate it.
[19:51] tmpvar: yep, I believe there have been talks on the CommonJS ml regarding this issue
[19:52] eikke has joined the channel
[19:53] tmpvar: the same problem exists when trying to run browser scripts (e.g. Sizzle, jQuery) on node
[19:56] teemow has joined the channel
[20:02] omygawshkenas: whoa --
[20:02] omygawshkenas: does node so some sort of static analysis?
[20:02] omygawshkenas: And if you assign to the "exports" variable in your code
[20:02] omygawshkenas: It doesn't include it in your script's scope?
[20:02] felixge: omygawshkenas: no analysis
[20:03] charlenopires has joined the channel
[20:03] felixge: omygawshkenas: you can actually read the source of the module system, it's in src/node.js
[20:03] omygawshkenas: thanks
[20:03] omygawshkenas: oh, nevermind -- it was a variable declaration tripping me up.
[20:03] omygawshkenas: sorry
[20:04] rtomayko has joined the channel
[20:05] sveisvei has joined the channel
[20:07] dnolen has joined the channel
[20:16] tmpvar: is there a convenient way to build node in "debug" mode?
[20:19] felixge: tmpvar: ./configure --debug && sudo make install ?
[20:23] BBB has joined the channel
[20:25] kennethkalmer has joined the channel
[20:26] tmpvar: felixge, yeah, possibly
[20:26] felixge: tmpvar: well, that's how it works afaik :)
[20:26] felixge: you just have to use the './node_g' binary which is the debug one
[20:27] tmpvar: ah!
[20:28] felixge: by default node will just build the regular binary
[20:28] felixge: the --debug flag tells configure to build both
[20:28] tmpvar: aha, that is a much better output
[20:30] felixge: tmpvar: trying to use gdb ?
[20:31] tmpvar: yeah, trying to debug why setting a breakpoint in the eclipse v8 debugger causes a segfault
[20:32] felixge: tmpvar: cool : ). I do wish we had a tool independent from eclipse for this so
[20:32] felixge: I'd never use eclipse, not even for debugging :)
[20:32] tmpvar: haha
[20:33] tmpvar: i guess the idea is to get node debuggable then build out a tool ;)
[20:33] felixge: A command line client as well as a web interface would probably be nice
[20:33] felixge: makes sense
[20:33] felixge: :)
[20:34] tmpvar: here's what is going on if you are curious: http://gist.github.com/303663
[20:35] unomi: the json format for the v8 dbgp seems 'ok'
[20:35] unomi: don't really seem to need the chromedevtools for the majority of the work we should be seeing
[20:36] unomi: ryah would likely be in a different situation though
[20:37] tmpvar: I also believe that it is very valuable to have a debugger available to developers
[20:37] unomi: it could simple be that the eclipse v8 debugger is targetting something that is not 'google chrome'
[20:37] unomi: for sure
[20:37] unomi: http://code.google.com/p/chromedevtools/wiki/ChromeDevToolsProtocol
[20:37] unomi: The existing V8 Debugger Protocol is not sufficient to provide Google Chrome, Chromium, or any other browser that supports the protocol, with the capability of remote debugging via TCP/IP sockets. The V8 Debugger protocol covers only JavaScript debugging operations, and only within a single V8 virtual machine (VM).
[20:38] unomi: yet that is exactly 'our' scenario
[20:38] unomi: try giving node.js a poke with this: http://code.google.com/p/v8/wiki/DebuggerProtocol
[20:39] tmpvar: unomi, it is actually functional up until a breakpoint is set
[20:39] tmpvar: im going to simplify the js that im testing and see if i can shed some light on the situtation
[20:39] tmpvar: s/situtation/situation/
[20:40] atcrabtree has joined the channel
[21:00] omygawshkenas_ has joined the channel
[21:01] pdelgallego has joined the channel
[21:07] atcrabtree: what do you guys use for debuggin JS?
[21:07] atcrabtree: i mean node?
[21:07] unomi: alert()
[21:07] unomi: :p
[21:08] unomi: we were actually just talking about that
[21:08] unomi: tmpvar: is poking at an eclipse debugger for v8
[21:09] tmpvar: it works for js type stuff
[21:09] unomi:  http://code.google.com/p/v8/wiki/DebuggerProtocol
[21:09] tmpvar: there are some things in node that it croaks on.. so far callbacks from the http server
[21:15] atcrabtree: unomi: tmpvar thx, i'll look into it
[21:15] atcrabtree: we're going to be using node in production here at http://blastoffnetwork.com for our new social shopping web app
[21:16] atcrabtree: granted only for comet using a Django back-end, but I never thought I'd be doing professional SSJS so soon
[21:16] unomi: http://code.google.com/p/chromedevtools/wiki/EclipseDebugger
[21:16] unomi: sounds good 
[21:17] jdee has joined the channel
[21:21] piranha_ has joined the channel
[21:25] kennethkalmer has joined the channel
[21:28] rictic has joined the channel
[21:28] mattly has joined the channel
[21:30] omygawshkenas: yo mattly --
[21:30] mattly: ....hi?
[21:31] omygawshkenas: I don't know if you already saw, but CoffeeScript-in-CoffeeScript just successfully self-compiled yesterday.
[21:31] omygawshkenas: If you want to kick the tires, using bin/node_coffee for now will run the entirely in-Node, in-CoffeeScript version.
[21:32] mattly: oh i did see that
[21:32] mattly: i wonder if the ruby compiler will be kept up to date
[21:32] mattly: i gotta maintain rack-coffee now :D
[21:32] omygawshkenas: Do you think it should be?
[21:32] mattly: idk
[21:32] omygawshkenas: Yeah, we could go either way.
[21:32] mattly: whatever i could just shell out
[21:35] tmpvar: ryah, fyi: basic js debugging is functional using the v8 eclipse plugin (under node).  there is some weirdness however with breakpointing inside of callbacks
[21:36] tmpvar: node based callbacks, the first instance I noticed was :: Handle<Value> Connection::ReadyStateGetter() seems to fail an assertion (in the context of http.createServer()
[21:37] ryah: i just downloaded eclipse and am trying to try it now
[21:37] ryah: getting 'failed to connect to remote host'
[21:37] unomi: node_g ?
[21:37] tmpvar: unomi, node(_g) both 'splode
[21:38] unomi: i mean to be able to connect in the first place
[21:38] tmpvar: both also work heh
[21:38] tmpvar: you have to run the node script, then launch the debugger
[21:39] unomi: full disclosure, I have had eclipse running exactly 2 times for a total of 20 minutes, and both times I thought my comp was going to have a cpu attack
[21:39] unomi: 15 minutes of those were probably starting up and shutting down
[21:39] charlenopires has joined the channel
[21:40] tmpvar: ryah, http://gist.github.com/303663
[21:40] ryah: do you get
[21:40] ryah: ChromeDevToolsHandshake: (no value)
[21:40] ryah: Error 0
[21:40] tmpvar: no
[21:41] tmpvar: i get a bunch of "{"seq":709,"type":"event","event":"afterCompile","success":true,"body...."
[21:41] ryah: did you have to create a workspace with your script?
[21:41] tmpvar: you using the standalong v8 vm debugger?
[21:41] ryah: (never used eclispe before)
[21:41] tmpvar: a project
[21:42] tmpvar: not sure if that is "required" but its what I did heh
[21:42] ryah: oh. 
[21:42] ryah: (never used eclispe before)
[21:44] voodootikigod has joined the channel
[21:45] lifo has joined the channel
[21:45] tmpvar: yeah, im a bit lost here.. first dive into node/v8 internals
[21:46] ryah: oops, i was using chrom, not standalone
[21:46] tmpvar: ah
[21:48] ryah: so - how do i do something? i just get all these events in the console
[21:48] tmpvar: so what i did was launch node, launch the eclipse debugger, went into the project explorer tab, expanded NODE, opened test.js and added a breakpoint
[21:48] tmpvar: which is just double clicking on the left margin
[21:50] ryah: god. what a POS - this ide
[21:50] ryah: how do you add a breakpoint?
[21:51] omygawshkenas: Is there a CommonJS equivalent to node's process.mixin() ?
[21:51] omygawshkenas: or do you have to iterate over the keys in the exports object?
[21:52] tmpvar: HAHA
[21:52] tmpvar: double click on the left margin (in the text editor)
[21:52] tmpvar: should drop a blue dot
[21:53] ryah: hm.. it says something about a bookmark
[21:53] ryah: is that the same?
[21:53] tmpvar: no
[21:53] tmpvar: oh man, you have to change perspectives haha
[21:54] unomi: this is the kind of stuff that makes people burn mechanized looms
[21:55] ryah: change perspectives? meh
[21:55] ryah: sorry - i mean i shouldn't judge this - i know nothing of it
[21:56] ryah: okay found the debug perspective
[21:56] tmpvar: while debugging you can set a breakpoint
[21:56] tmpvar: ill push a screeny up as an "example"
[21:56] tmpvar: http://ww23.rr.com/index.php?origURL=http://imageshack/
[21:56] tmpvar: wow
[21:56] tmpvar: http://img52.imageshack.us/img52/3875/screenshot009r.png
[21:57] tmpvar: so if you were to expand the NODE directory in the Project Explorer (right pane) and open a file you could double click on the margin in the editor and drop a breakpoint
[21:59] ryah: so confused
[21:59] tmpvar: like so: http://img714.imageshack.us/img714/7301/screenshot011.png
[21:59] ryah: i lost my project explorer
[22:00] tmpvar: haha, bottom left there is a button to add a view
[22:01] tmpvar: and this is actually how you get aids.. so be careful
[22:02] ryah: i'm also on a macintosh - which is further hindering me
[22:04] tmpvar: ah
[22:09] ryah: got it:)
[22:10] tmpvar: nice
[22:10] ryah: well the window disappeared
[22:10] ryah: shit
[22:11] ryah: okay
[22:11] ryah: got the segfault
[22:11] ryah: christ..
[22:11] tmpvar: its actually an assertion failure in unwrap
[22:14] ryah: somehow when i try to "debug as..." it creates a new project
[22:16] tmpvar: oh yeah, generally you can just sit in the debug perspective and press the V next to the bug looking button (top leftish)
[22:17] tmpvar: choose the "debugging profile" and that should launch it
[22:17] tmpvar: yeah, this whole process is a bit hard to explain!
[22:20] Zoka has joined the channel
[22:21] skampler: since node.js is totally asynchronous, it should never get stuck if some block device changes state and all reads from it starts to block?
[22:21] skampler: should it*
[22:21] skampler: given that the program isn't design to get stuck in such situatiosn
[22:22] omygawshkenas has joined the channel
[22:22] ryah: skampler: i does fs reads in a thred pool
[22:22] ryah: so , no it won't get stuck
[22:23] ryah: tmpvar: i can't find the "V"
[22:23] ryah: i'm such a noob.
[22:24] tmpvar: its more like a down arrow
[22:25] ryah: tmpvar: is it in this screenshot http://img52.imageshack.us/img52/3875/screenshot009r.png
[22:25] tmpvar: yeah
[22:25] ryah: next to the "play" button?
[22:25] tmpvar: correct
[22:25] tmpvar: press the down arrow
[22:26] tmpvar: should show you the debugging profile you created earlier 
[22:26] ryah: got it
[22:26] ryah: thnks
[22:26] Zoka: Next to the bug button 
[22:28] tmpvar: so ryah, if you get to a place where you "know" what is causing this.. I wouldn't mind taking a stab at it
[22:39] ryah: hm.. 
[22:44] ryah: tmpvar: have you seen src/node.cc - there are some comments explaining the debugging a bit
[22:44] tmpvar: i have not, will peek
[22:52] Zoka has joined the channel
[22:56] pdelgallego has joined the channel
[22:58] maritz has joined the channel
[23:01] maritz: hey. i'm going to create a small i18n module for use in templates like haml. my question now: would it be better to pass an entire language array (that is in the ram already) to the template or give it a tr() function that looks it up in a global array?
[23:06] unomi: as much as it pains me to say, for things like that I always use (namespaced) global arrays
[23:06] ryah: tmpvar: yeah. well had a quick look. i think src/node.cc:905 can be changed to "Debug::ProcessDebugMessages();"
[23:06] ryah: tmpvar: that is, the ExecuteString()
[23:06] ryah: that doesn't help, but it's one obvious cleanup
[23:07] ryah: tmpvar: basically there are two threads, debug and v8
[23:07] ryah: the debug thread runs the debug server, accepts connections, parses them
[23:07] maritz: unomi: you mean for i18n?
[23:07] unomi: maritz: yes
[23:07] tmpvar: ryah, got ya
[23:08] ryah: tmpvar: an ev_async watcher is used to notify the v8 thread about incoming messages. then it needs to process those incoming messages.
[23:08] tmpvar: makes sense
[23:08] ryah: tmpvar: but it seems its resuming in some foobar state
[23:08] ryah: getting this assert error
[23:08] unomi: also, if you use 'proper' objects with prototypal inheritance, you can keep a good number of repitition out of it
[23:08] ryah: that assert should definitely be true
[23:09] tmpvar: the one in unwrap?
[23:09] ryah: yeah
[23:09] maritz: unomi: well, if you create a scope for your everything that handles requests, you can put it there. but else it really doesn't make sense to not have global access to it.
[23:09] ryah: it might be that info.This() refers to some other object in the debugger state? which can't be unwrapped?
[23:09] ryah: no idea.
[23:09] unomi: trans.yes = "Oui"; trans.popup.yes should go to trans.yes if not defined on itself
[23:10] tlrobinson_ has joined the channel
[23:10] ryah: so i'm not going to play around with it for the next week or two at least - i need to finish some other stuff, but i'd be very happy to have any patches
[23:10] tmpvar: ryah, alright. thanks for looking into this... I'll take another look
[23:11] tmpvar: sounds good, ill send them your way (assuming i figure anything out hehe)
[23:11] ryah_away: cool
[23:11] maritz: unomi: that seams wrong. why should it support lazyness? :D
[23:12] maritz: unomi: hm, on another though, it could make sense in some cases. gonna think about it a bit more.
[23:16] sztanpet has joined the channel
[23:18] pdelgallego has joined the channel
[23:19] maritz: my question still stands. ^^ passing the array to the template or passing a function that looks it up? 
[23:20] maritz: I'd benchmark it myself, if I wouldn't know that there are some serious js magicians in here who know what the pro/con of each is.
[23:22] felixge: jed: you get my PM's?
[23:22] r11t has joined the channel
[23:23] jed: felixge: just did!
[23:27] pdelgallego has joined the channel
[23:29] masuidrive has joined the channel
[23:34] tjholowaychuk has joined the channel
[23:34] tjholowaychuk: holy lots of people for a saturday 
[23:35] unomi: people don't turn off their machines any more
[23:40] pdelgallego has joined the channel
[23:48] JimBastard has joined the channel
[23:59] charlenopires has joined the channel
