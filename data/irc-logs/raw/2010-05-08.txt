[00:00] tmpvar: *shakes fists*
[00:00] isaacs: tmpvar: i'm going to give you early adopters probably another week or so of pain, clean up a few of the more painful issues, and then write up a very simple "how to npm" article for how to node.
[00:00] isaacs: tmpvar: but there are a few things that are still too much of a pita.  like having to put the tarball somewhere else already.  that's a pain.
[00:01] Fuxx: finally node-waf build is linking against my librarys ;o
[00:01] tmpvar: ah, the github tarballer is pretty lame eh?
[00:01] isaacs: tmpvar: well, you sometimes might have multiple "packages" in a single repo, which is annoying to manage.
[00:02] isaacs: tmpvar: but if you could just, say, "npm publish ./folder" and then have it tar up the folder and send it, that'd be rad.
[00:02] tmpvar: i see
[00:02] JimBastard: nice domain tmpvar
[00:02] isaacs: tmpvar: i really don't like dictating workflows.
[00:03] JimBastard: ;-)
[00:04] tmpvar: lol.
[00:04] tmpvar: isaacs, yeah i hear that
[00:04] tmpvar: really dont want to package all this shit together, but i think im going to have to for the time being
[00:04] sudoer has joined the channel
[00:04] alex-desktop_ has joined the channel
[00:06] joshbuddy has joined the channel
[00:07] alex_____ has joined the channel
[00:08] tmpvar: i guess i just dont want to spend a long time getting this going heh
[00:09] isaacs: tmpvar: by npm's standards so far, we just went from 0-60 in no time.
[00:09] isaacs: tmpvar: and by package manager standards, npm has taken off like a rocket.
[00:12] darkf_ has joined the channel
[00:12] isaacs: tmpvar: rubygems took 3 years to get from initial public release to 1.0.0
[00:13] tmpvar: ah yeah, im not trying to be a pain hehe
[00:14] tmpvar: got some fun for ya though : <head><title>400 The plain HTTP request was sent to HTTPS port</title></head>
[00:14] tmpvar: when i run : node npm/install-npm.js
[00:14] isaacs: tmpvar: yeah, you need to either have tls compiled in, or set your registry to not be https.
[00:14] isaacs: tmpvar: fixed that one last night
[00:14] isaacs: it'll be in the next release.
[00:14] tmpvar: k
[00:15] isaacs: tmpvar: you can also get the npm code from github, and then you'll be up to date :)
[00:15] isaacs: if you like bleeding edges.
[00:15] isaacs: which i know you do!
[00:15] tmpvar: haha
[00:15] tmpvar: yeah, that i do
[00:18] Aria has joined the channel
[00:18] isaacs: tmpvar: in fact, if you get ambitious, you could even try to tackle some of these: http://github.com/isaacs/npm/issues/labels/easy
[00:23] tmpvar: hehe, lets see how this example goes first lol
[00:27] fernmicro has joined the channel
[00:30] felixge has joined the channel
[00:30] felixge has joined the channel
[00:32] robrighter has joined the channel
[00:35] tekky has joined the channel
[00:39] saikat has joined the channel
[00:40] dekz has joined the channel
[00:45] SvenDowideit has joined the channel
[00:47] polotek has joined the channel
[00:47] polotek has left the channel
[00:54] paul__ has joined the channel
[00:56] nym: hey, i'm trying to use Socket.IO-node, and it requires oo-js
[00:56] mscdex: yep
[00:56] nym: but it's not included in the repo... where can i get that from?
[00:56] mscdex: http://github.com/visionmedia/js-oo
[00:56] mscdex: download that into the js-oo directory
[00:57] nym: thanks
[01:09] mcarter has joined the channel
[01:10] mjr_ has joined the channel
[01:12] mjijackson has joined the channel
[01:14] stevendavie has joined the channel
[01:14] joshbuddy has joined the channel
[01:24] charlesjolley has joined the channel
[01:24] jedschmidt has joined the channel
[01:25] avidal: hrrrrrm
[01:25] JimBastard: yo
[01:25] JimBastard: someone port this to JSDOM http://github.com/DmitryBaranovskiy/raphael/blob/master/raphael-min.js?raw=true
[01:25] JimBastard: and node
[01:25] JimBastard: thanks
[01:25] avidal: that's a lot of minified js
[01:27] JimBastard: your mom is a lot of minified js
[01:27] avidal: how would you use it with node anyway? it's a client-side thing, so can't you just spit out some html that uses it?
[01:27] JimBastard: jsdom.org
[01:28] mikeal has joined the channel
[01:35] tekky: vector as in VML and SVG?
[01:36] tekky: yup sound slike it....
[01:40] joshbuddy has joined the channel
[01:40] gingivitis has joined the channel
[01:46] charlesjolley has joined the channel
[01:55] keyvan has joined the channel
[01:57] gwoo has joined the channel
[02:01] gf3 has joined the channel
[02:05] fermion has joined the channel
[02:07] charlesjolley has joined the channel
[02:07] ceej_ has joined the channel
[02:08] CIA-75: node: 03Ryan Dahl 07master * r3ac6dee 10/ src/node.cc : 
[02:08] CIA-75: node: Change GC idle notify so that it runs along side setInterval
[02:08] CIA-75: node: Doesn't appear any slower. Also checks for high memory usage and tries to
[02:08] CIA-75: node: force more notifications. - http://bit.ly/d4fjXM
[02:11] cates has joined the channel
[02:15] alexiskander has joined the channel
[02:16] rdrake: Would anyone care to help me figure out why I'm getting an undefined symbol error when trying to include my addon in a script?
[02:24] rdrake: Whoops, disregard that.
[02:30] mnutt has joined the channel
[02:33] cerberos has joined the channel
[02:33] Aria has joined the channel
[02:34] mattly has joined the channel
[02:51] ddollar has joined the channel
[02:51] ddollar has joined the channel
[02:52] ddollar has joined the channel
[02:52] ddollar has joined the channel
[02:55] hsuh has joined the channel
[02:56] hsuh has left the channel
[02:58] cerberos has joined the channel
[03:00] mikeal has joined the channel
[03:03] isaacs_ has joined the channel
[03:04] keyvan has joined the channel
[03:05] tlrobinson_ has joined the channel
[03:07] brianmario has joined the channel
[03:07] ddollar has joined the channel
[03:08] micheil has joined the channel
[03:09] PyroPete1 has joined the channel
[03:13] Tim_Smart has joined the channel
[03:18] ddollar has joined the channel
[03:19] ddollar has joined the channel
[03:19] ddollar has joined the channel
[03:23] ddollar has joined the channel
[03:27] cloudhead has joined the channel
[03:28] siculars has joined the channel
[03:31] ddollar has joined the channel
[03:40] hsuh has joined the channel
[03:40] hsuh has left the channel
[03:41] spoob has joined the channel
[03:43] siculars_ has joined the channel
[03:43] micheil has joined the channel
[03:49] smtlaissezfaire has joined the channel
[03:50] smtlaissezfaire: Are there any guidelines/docs on contributing to node's internals aside from http://nodejs.org/#contributing ?
[03:50] smtlaissezfaire: Specifically, any docs on conventions, etc?
[03:51] ddollar has joined the channel
[03:55] isaacs has joined the channel
[04:00] tmpvar: creationix, yo, you around?
[04:01] smtlaissezfaire: tmpvar: you are speaking at the nyc js group on Thursday, right?
[04:01] tmpvar: i am
[04:01] tmpvar: jsdom style
[04:01] tk: tmpvar: you are in NY or just visiting?
[04:02] tmpvar: i live here :P
[04:02] tk: well damn, we could have met up several times had I known/remembered (if we ever talked about that before) heh
[04:03] creationix: tmpvar: what's up
[04:03] smtlaissezfaire: Cool.  I hope to see you there.  I think I accidentally met Brian Mitchell the other day, who I guess is running the group.
[04:03] tk: been to NY like 6 or so times in the last 2 years heh
[04:03] tmpvar: tk, you should let me know the next time you are out here
[04:04] isaacs: creationix: all packed up?
[04:04] tmpvar: smtlaissezfaire, nice
[04:04] tmpvar: creationix, i was going to ask you about node-router if you have a few seconds
[04:04] creationix: isaacs: almost, packing luggage now
[04:04] creationix: tmpvar: sure
[04:04] tk: tmpvar:  prolly not go ing back anytime soon
[04:05] tmpvar: creationix, server.staticDirHandler(root, prefix) what do the params mean?
[04:05] tk: tmpvar: that job is long gone :P
[04:05] creationix: tmpvar: One is the root directory on the filesystem, and the other is the prefix to the url that needs to be removed before mapping
[04:06] creationix: tmpvar: though I have been working on a simple static file server that's super fast
[04:06] tmpvar: ah, got ya, that makes sense
[04:06] creationix: the one in node-router is pretty slow
[04:06] tmpvar: oh? well this wont be too heavyweight
[04:06] tmpvar: i like that its restful, going to make things sexy
[04:06] creationix: tmpvar: I'll integrate the new one into node-router either wat
[04:07] creationix: :)
[04:07] tmpvar: sweet, nice work.. once again :)
[04:08] Tim_Smart has joined the channel
[04:08] ddollar has joined the channel
[04:08] ddollar has joined the channel
[04:09] mjijackson has joined the channel
[04:11] tmpvar: yeah dude, this works pretty well for what im doing
[04:17] ddollar has joined the channel
[04:23] ddollar has joined the channel
[04:23] ddollar has joined the channel
[04:32] mscdex has joined the channel
[04:33] ddollar has joined the channel
[04:33] ddollar has joined the channel
[04:41] mscdex: so, is there a process.nextTick()-like function available for node addons?
[04:41] mikeal has joined the channel
[04:42] stevendavie has joined the channel
[04:43] phazm has joined the channel
[04:45] silverfish has joined the channel
[04:49] tmpvar: mscdex, yes
[04:53] mnutt has joined the channel
[04:56] mscdex: does it involve using ev_prepare or... ?
[04:57] charlesjolley has joined the channel
[04:58] mscdex: or does node provide something on top of libev that i'm missing?
[04:59] mjr_: mscdex: are you making ncurses bindings?
[05:03] mscdex: yeah, it's something different heh
[05:04] mjr_: Good luck.  We need those.
[05:04] kriskowal has joined the channel
[05:06] smtlaissezfaire has joined the channel
[05:07] steadicat has joined the channel
[05:20] mikeal has joined the channel
[05:32] ineation has joined the channel
[05:35] tmpvar has joined the channel
[05:35] _ry: mscdex: hey
[05:35] mscdex: yo
[05:36] _ry: mscdex: what are you working on?
[05:36] mscdex: trying to work on an ncurses binding
[05:37] JimBastard has joined the channel
[05:41] mrjjwright has joined the channel
[05:48] Phazm: what would be the easiest way to create an rss feed using node? I haven't had much luck using the xml parsers listed in the node modules page
[05:49] mscdex: create or parse one?
[05:49] Phazm: well, both -- I will create the structure manually, but I want to append new items to it
[05:50] Phazm: using the rss structure I define
[05:50] mscdex: libxmljs can parse and create xml, but i've only used it for the former
[05:52] Phazm: http://github.com/polotek/libxmljs/blob/master/experiments/loop.js <-- handy ;)
[05:53] mscdex: ha yeah i saw that before i think
[05:55] technoweenie has joined the channel
[06:04] smtlaissezfaire has joined the channel
[06:04] elliottcable: smtlaissezfaire: hrm, why is your nick familiar?
[06:04] elliottcable: also holy crap there’s 140 people in here O_O
[06:04] smtlaissezfaire: You've seen me on github, of course.
[06:04] elliottcable: when the hell did it get so damn big
[06:04] smtlaissezfaire: http://github.com/smtlaissezfaire
[06:04] ineation has joined the channel
[06:05] tmpvar: we got the internet goin nutz
[06:05] tmpvar: we got the internet goin nutz
[06:05] tmpvar: etc..
[06:05] smtlaissezfaire: elliotcable: I think I discovered some testing framework you were writing at some point.
[06:05] elliottcable: smtlaissezfaire: hrm. Did I write a testing framework?
[06:06] elliottcable: smtlaissezfaire: I seem to remember you further back than that… right around when I started ruby, years and years and years ago…
[06:07] smtlaissezfaire: I don't know.  I have a ton of (unsuccessful) projects.  Maybe FixtureReplacement from back in the day?
[06:08] _ry: mscdex: sorry - i disappeared
[06:08] _ry: mscdex: ncurses is great :)
[06:08] SamuraiJack has joined the channel
[06:08] mscdex: it's ok, I'm reading up on v8 docs
[06:08] mjr_: First ncurses, then readline.  Step 3: profit.
[06:08] _ry: ncurses, ?, profit!
[06:09] smtlaissezfaire: elliotcable: http://github.com/elliottcable/Speck
[06:09] _ry: mscdex: i guess you're wondering where you put the while(1) { getc() } ?
[06:09] _ry: because that's what i'm wondering too :)
[06:09] elliottcable: smtlaissezfaire: yeah, I gathered that much, but that’s recent ish. in fact, I don’t remember talking to you about that. I just remember you from some IRC channel, wayyyyy back when. just don’t remember exactly when or where
[06:10] elliottcable: _ry: what is this about ncurses?
[06:10] mscdex: heh that's not good
[06:10] elliottcable: ACTION is an ncurses nexpert
[06:10] smtlaissezfaire: elliotcable: I used to be much more involved in rspec.  It might be from back then.
[06:10] _ry: mscdex: so stdio in node is pretty complicated
[06:10] elliottcable: perhaps… was never the biggest Rspec fan
[06:10] mscdex: well, there's no while loop, just need to check for input each tick
[06:10] elliottcable: Rspec and Rails always pretty much fell into the same pile of fail IMHO
[06:10] _ry: elliottcable: how to merge in the ncurses event loop
[06:10] elliottcable: _ry: that is going to be HELLA FUN.
[06:11] elliottcable: _ry: by which I mean not fun at all.
[06:11] mscdex: at least that's how i was planning it
[06:11] _ry: mscdex: right - first - stderr is different
[06:11] elliottcable: _ry: maybe run them side by side, threaded… and just have the ncurses C module communicate to the Node event loop outside of the Node model or something?
[06:11] technoweenie: hey smtlaissezfaire
[06:11] _ry: it's synchronous
[06:11] smtlaissezfaire: hey technoweenie - haven't talked to you in a while.  How are things?
[06:11] _ry: mscdex: but stdin - it's polled from (using select() or whatever) 
[06:11] technoweenie: smtlaissezfaire: pretty good, cant complain -- you?
[06:12] elliottcable: all the coolest Ruby peeps are in here now :D
[06:12] _ry: mscdex: there is actually a callback that node gets when stdin is readable
[06:12] smtlaissezfaire: technoweenie: Oh - pretty good.  I can't complain. 
[06:12] _ry: mscdex: it's just that - it's not really - on the surface - it's buried in this stream class :)
[06:12] technoweenie: elliottcable: now? i've been here since january
[06:13] tmpvar: yo _ry, burning the friday oil eh?
[06:13] elliottcable: technoweenie: lol
[06:13] smtlaissezfaire: haha - I bring the party!
[06:13] tmpvar: js party
[06:13] tmpvar: smtlaissezfaire, you are in nyc?
[06:13] elliottcable: technoweenie: gotcha beat, I been here since…
[06:13] elliottcable: july or august?
[06:13] elliottcable: maybe september at the lastest
[06:13] elliottcable: … latest*
[06:13] _ry: mscdex: this is for the case someone does node script.js < hugefile
[06:13] mnutt has joined the channel
[06:13] smtlaissezfaire: tmpvar: Oh yeah.
[06:13] _ry: well
[06:13] elliottcable: I think I have a mailing list post complaining about the *original* require() from august, lol
[06:13] _ry: mscdex: let me just point you at some code..
[06:14] mscdex: heh ok
[06:14] mjr_: Don't most ncurses programs sort of give up control of stdin / stdout for the ncurses magic to happen?
[06:14] tk has joined the channel
[06:14] _ry: http://github.com/ry/node/blob/3ac6deefa8112a285fb578875c0aa8eb741e1e23/src/node.js#L140-159
[06:14] tmpvar: smtlaissezfaire,  I hack out with JimBastard aka js party randomly during the week
[06:15] tmpvar: hit me up on thurs, we can write some scriptzzz hehe
[06:15] elliottcable: mjr_: they don’t *give it up*, but you don’t generally want to touch them
[06:15] _ry: fd = binding.openStdin(); <-- i.e. give me the stdin fd (and set it nonblocking)
[06:15] _ry: (if it's a tty)
[06:15] elliottcable: tmpvar: where do you live?
[06:15] fernmicro has joined the channel
[06:15] tmpvar: im in bk
[06:15] elliottcable: bk?
[06:15] tmpvar: brooklyn
[06:15] elliottcable: ah
[06:15] _ry: mscdex: forget about the case where binding.isStdinBlocking() is true
[06:15] smtlaissezfaire: elliottcable: Actually, it is pretty interesting seeing the early ruby adopters being a core part of the nyc-js group.  
[06:15] _ry: mscdex: ncurses programs are always tty , nonblocking
[06:15] elliottcable: I wish I had a JS group around here.
[06:16] elliottcable: or even a Ruby group.
[06:16] elliottcable: or any sort of programming group.
[06:16] elliottcable: the only freaking programmers up here are, well, java. and C#.
[06:16] tmpvar: elliottcable, where are you?
[06:16] elliottcable: and this one dude who writes Ruby.
[06:16] _ry: mscdex: the important line is this: http://github.com/ry/node/blob/3ac6deefa8112a285fb578875c0aa8eb741e1e23/src/node.js#L153
[06:16] elliottcable: but he’s a furry.
[06:16] elliottcable: and really, really creepy.
[06:16] _ry: mscdex: you need to short circuit that
[06:16] elliottcable: he offered to make me a hand-made raccoon fursuit, and fly me to furcon with him.
[06:16] _ry: and not create that stream object
[06:16] elliottcable: tmpvar: Alaska
[06:16] smtlaissezfaire: tmpvar: Yeah, certainly.  Who's JimBastard?
[06:16] tmpvar: oh damn
[06:16] tmpvar: marak on github
[06:16] _ry: mscdex: instead set up your own IOWatcher
[06:16] elliottcable: smtlaissezfaire: JimBastard is another person who’s been in here forevar
[06:17] _ry: mscdex: to find out when that fd is readable
[06:17] smtlaissezfaire: marak is the guy who's been posting on the node.js mailing list a ton, right?
[06:17] _ry: mscdex: at least i think that's the route you want to go
[06:17] elliottcable: I’m disappointed, having been zeroed in on Paws for so long, to come back and find CommonJS having such a hold )-:
[06:17] mscdex: hmmm ok
[06:17] elliottcable: I browse around, see sooooooo many references to CommonJS in *everything* )-:
[06:17] _ry: mscdex: of course before that you need to do all the ncurses setup - where you make the stdin character buffered instea of line buffered
[06:17] _ry: etc
[06:17] kloeri has joined the channel
[06:17] mscdex: right, that's how i have it setup now
[06:18] _ry: mscdex: there should be a call like
[06:18] _ry: require('curses').start()
[06:18] mscdex: oh
[06:18] _ry: which does that whole thing
[06:18] _ry: you need to take over that stdin fd
[06:18] smtlaissezfaire: technoweenie: You joined github the other day, right?
[06:19] elliottcable: lol
[06:19] technoweenie: smtlaissezfaire: yea its been a month now
[06:19] _ry: mscdex: you have to be aware that stdin fd is nonblocking though
[06:19] _ry: its setup that way in c
[06:19] smtlaissezfaire: tmpvar: How large are the nyc js meetups?
[06:19] technoweenie: smtlaissezfaire: what are you doing these days
[06:19] _ry: mscdex: hmm - 
[06:20] _ry: mscdex: sorry this sounds so complicated
[06:20] _ry: mscdex: it's my unorganized thoughts rather than actual complexity
[06:20] _ry: :)
[06:20] mscdex: heh
[06:20] elliottcable: technoweenie, smtlaissezfaire, /join ##Paws :3
[06:20] smtlaissezfaire: technoweenie: Still client work.  Matt's out on the west coast now - I think he just need some time off.  He's been at Eastmedia for 10 years or something like that.
[06:20] elliottcable: oh _ry thanks for your input by the way, I got a system I *really* like
[06:20] tmpvar: smtlaissezfaire, not that big, you should come check it out man
[06:20] _ry: mscdex: http://github.com/ry/node/blob/3ac6deefa8112a285fb578875c0aa8eb741e1e23/src/node_stdio.cc#L49
[06:21] technoweenie: oh he left? i saw he was looking for some place to go for the summer -- i suggested portland 
[06:21] _ry: mscdex: that's the same call as in the other file binding.openStdin()
[06:21] tmpvar: smtlaissezfaire, im guessing 10-30 depending
[06:21] _ry: mscdex: maybe you can put your own call in there instead of that
[06:21] smtlaissezfaire: tmpvar: I noticed that it was at pivotal.  How many of those people are ruby people?
[06:21] tmpvar: dunno, there are a few i guess
[06:21] tmpvar: Brian is (binary42)
[06:22] _ry: elliottcable: good - i look forward to reading about it :)
[06:22] _ry: is inimino helping?
[06:22] smtlaissezfaire: tmpvar: I saw Jen Linder had posted to the list - A face I keep bumping into.
[06:22] elliottcable: _ry: heh it’ll be a while before I write any documentation about it
[06:22] tmpvar: smtlaissezfaire, not sure who that is
[06:22] elliottcable: _ry: but I ended up with a *really* neat coroutines/threading/CPS/blahblahblah system that is completely unique and sexy
[06:23] _ry: cps?
[06:23] smtlaissezfaire: tmpvar: Well, she's a female, so if she's there, I'm sure that will narrow it down :)
[06:23] elliottcable: _ry: it’s also kinda/sorta threading-agnostic; it‘s just as useful in a single-threaded blocking interpreter (a lá V8/Node) or my current impl of a massively parallel auto-threaded interpreter
[06:24] tmpvar: smtlaissezfaire, are you stalking this poor girl?
[06:24] tmpvar: lol.
[06:24] elliottcable: _ry: ‘continuation passing style’ - ask inimino, not me. He said it was called that. hah.
[06:24] tmpvar: nah, its generally just a bunch of dudes
[06:24] elliottcable: somebody call the cops on smtlaissezfaire
[06:24] smtlaissezfaire: technoweenie: How's github going?  That seems like an insane site to managing.
[06:24] elliottcable: he’s acting up again
[06:24] elliottcable: sausagefeeessst
[06:25] mscdex: _ry: i'm not exactly sure what you mean
[06:25] mscdex: :S
[06:26] mikeal has joined the channel
[06:26] elliottcable: mikeal! lol
[06:26] _ry: mscdex: how's your nblcoking io / evnet loop knowledge?
[06:26] smtlaissezfaire: _ry: Usually in CPS you end up recurring, passing the rest of the computation as the last parameter, which happens to be a function.
[06:26] elliottcable: wait, comcast? wrong mikeal …
[06:26] elliottcable: smtlaissezfaire: yeah, sort of that
[06:26] elliottcable: smtlaissezfaire: you familiar with coroutines?
[06:26] technoweenie: smtlaissezfaire: github's doing great, we're over the rough patches for now 
[06:26] mscdex: i've done a little nonblocking io in *nix before, but never anything with libev or anything like that :\
[06:27] elliottcable: technoweenie: lol I envy you, that’s a pretty neat job
[06:27] smtlaissezfaire: _ry: A super lispy thing to do.  I don't think other languages really take it on.  I remember it being a mind-bending part of "The Little Lisper"
[06:27] technoweenie: smtlaissezfaire: we're focusing on tightening things up, they did a great job w/ the new arch
[06:27] mjijackson has joined the channel
[06:27] technoweenie: i'm scheming up ways to sneak node.js in somehow
[06:28] mjr_: I just started sending github the princely sum of $22/mo for their services.
[06:28] elliottcable: smtlaissezfaire: srsly /join ##Paws; how are you familiar with CPS? Have you ever written a language?
[06:28] technoweenie: cps reports?
[06:28] _ry: mscdex: so where you getc() from stdin, you can't block
[06:28] elliottcable: technoweenie: tps*
[06:28] smtlaissezfaire: technoweenie: Having a case of the Mundays?
[06:29] _ry: mscdex: you theoretically could do that in a different thread - but that is also hard - and wrong
[06:29] mjr_: poor _ry is trying so hard to convey deep node internals amidst the drunken late night chatter.
[06:29] JimBastard: sup elliottcable 
[06:29] JimBastard: you rang
[06:30] tmpvar: what up ya fsck
[06:30] _ry: that's how bad i want ncurses :)
[06:30] tmpvar: lol
[06:30] tmpvar: ncurses
[06:30] tmpvar: win!
[06:30] _ry: if node had ncurses
[06:30] JimBastard: ahh i see
[06:30] _ry: oh man.
[06:30] elliottcable: JimBastard: I just wanted your beautiful, beautiful face
[06:30] JimBastard: javascript party
[06:30] mscdex: hmm, i haven't looked at how ncurses actually does getch when nodelay is on, but i assumed it was non-blocking?
[06:30] JimBastard: o.O
[06:30] mscdex: it returns right away anyway
[06:31] elliottcable: _ry: do you want me to take a stab?
[06:31] JimBastard: id be freaked out if i wasnt balmer peaking atm
[06:31] _ry: mscdex: mind you i don't know ncurses API - so that doesn't help :)
[06:31] mscdex: sorry heh
[06:31] elliottcable: _ry: I’m kind of busy, but… I doubt there’s anyone here more familiar with ncurses than I. I rewrote ncurses-ruby, and was in the middle of a huge ncurses/terminal-application abstraction library for Ruby when I left
[06:31] mscdex: yeah, normally getch() blocks, but if you set a flag it won't block
[06:31] _ry: okay
[06:31] elliottcable: mscdex: what’re you trying to build with Ncurses and Node.js?
[06:31] _ry: yeah so that's what you want :)
[06:32] _ry: mscdex: you need to bind that to v8
[06:32] _ry: mscdex: and use an "IOWatcher"
[06:32] smtlaissezfaire: technoweenie: You must be talking about the new stuff rolled out in the last week or two?
[06:32] _ry: mscdex: (inside js)
[06:32] _ry: mscdex: that will give you a callback when stdin has stuff to read
[06:32] _ry: then you can call getch()
[06:32] mjr_: elliottcable: we want to be able to use ncurses from JavaScript with node.
[06:32] mscdex: _ry: oh, i was hoping i would be able to do it within my addon :S
[06:33] _ry: mscdex: you can do it from the c layer
[06:33] _ry: mscdex: but then you need to know a bit of libev
[06:33] technoweenie: smtlaissezfaire: yea, and of course the boring backend work that you cant really see
[06:33] elliottcable: mjr_: tbh it sounds like you and _ry just got everything you really need.
[06:33] _ry: mscdex: at the c layer you also use an iowatcher
[06:33] _ry: (they're present in both js and c)
[06:33] elliottcable: mjr_: if you bind a non-blocking getch into the Node event loop, you’re golden, afaict
[06:34] _ry: mscdex: but you need to get some callback when you know there is input on STDIN_FILENO
[06:34] _ry: (aka 0)
[06:34] keyvan has joined the channel
[06:34] smtlaissezfaire: technoweenie: The backend part is the best part.  I haven't done *any* CSS since in the last 2 years.  Or for that matter, really created much markup.
[06:34] _ry: mscdex: otherwise you don't know when to call getch()
[06:35] mjr_: elliottcable: I'm not actually doing the work, just providing encouragement for others to do it so I can use it.
[06:35] mjr_: Too much actual work this week.
[06:35] technoweenie: smtlaissezfaire: hell yea, im so glad not to do front end crap
[06:35] mscdex: _ry: ah ok, easier than i thought then
[06:35] _ry: as soon as there are ncurses bindings  - i'm going to write irssi
[06:35] _ry: but with js scripting config
[06:36] elliottcable: _ry: heh
[06:36] elliottcable: _ry: github.com/elliottcable/rat
[06:36] _ry: mscdex: yeah, i guess it's not too bad
[06:36] mjr_: I'm going to write emacs, only with JavaScript instead of emacs lisp.
[06:36] _ry: mscdex: it's kind of annoying though
[06:36] mscdex: i'll see what i can get going
[06:36] elliottcable: _ry: that’s why I dug into ncurses; I wanted to write an irssi-esque IM client, with Ruby bindings
[06:36] elliottcable: I’m going to write MySpace, only with… javascript… um…
[06:36] elliottcable: something!
[06:36] tmpvar: JimBastard, what up dawg
[06:36] _ry: elliottcable: nice
[06:36] technoweenie: has anyone played with neo4j
[06:37] elliottcable: JBTMND
[06:37] elliottcable: (JimBastard the Man Now, Dog)
[06:37] smtlaissezfaire: the graph database?
[06:37] _ry: mscdex: http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod <-- your friend
[06:38] k3yvn has joined the channel
[06:38] mscdex: _ry: yeah, i've been reading it tonight :-)
[06:38] _ry: mscdex: you need to setup and iowatcher for STDIN_FILENO for when it's readable
[06:38] _ry: ev_io_init(watcher, STDIN_FILENO, EV_WRITE)
[06:38] smtlaissezfaire: technoweenie: Who's using it?
[06:38] elliottcable: _ry: but yeah ended up with a sort of stackless rolling interpreter: as you call async routines, *you* get destroyed, and your execution state gets passed (along with your routine object, which contains the AST) to your callee as a special argument, which it can then call (‘return to’) at its leisure
[06:38] JimBastard: sup
[06:38] smtlaissezfaire: technoweenie: Mind if I PM you?
[06:38] JimBastard: tmpvar: did you get the jquery examples up yet
[06:38] technoweenie: smtlaissezfaire: i dont know, i'm asking.  
[06:38] technoweenie: smtlaissezfaire: a/s/l?
[06:38] technoweenie: um yea go ahead :)
[06:38] tmpvar: JimBastard, a basic example yes
[06:39] JimBastard: link?
[06:39] _ry: elliottcable: sounds bizarre
[06:39] tmpvar: dude
[06:39] tmpvar: its in the repo
[06:39] JimBastard: but whose gonna blog about it
[06:39] elliottcable: _ry: extremely. Then again, everything about Paws is. :3
[06:39] tmpvar: JimBastard, im working on that unobtrusive stuff
[06:40] JimBastard: kk
[06:40] tmpvar: that we can blog about
[06:40] tmpvar: im thinking a simple contact app
[06:40] tmpvar: degradable, etc
[06:40] JimBastard: http://github.com/tmpvar/jsdom/blob/master/example/jquery/run.js ?
[06:40] elliottcable: anyway, g’nite all :3
[06:40] tmpvar: yeah
[06:40] tmpvar: peace out elliottcable 
[06:40] elliottcable: or whatever time of day it is there
[06:41] tmpvar: balmer curve time
[06:42] _ry: mscdex: i have to run - but email me if you need any superficial questions answered :)
[06:42] JimBastard: peak
[06:42] JimBastard: pea
[06:42] JimBastard: k
[06:42] _ry: mscdex: ry@tinyclouds.org
[06:43] JimBastard: topeka
[06:43] mscdex: _ry: alright, thanks for the help
[06:44] tmpvar: lol
[06:45] tmpvar: balmer curve
[06:45] tmpvar: or peak
[06:45] JimBastard: http://xkcd.com/323/
[06:45] tmpvar: i know
[06:45] JimBastard: dont be a nub
[06:45] tmpvar: damn it, goodle
[06:45] tmpvar: google*
[06:45] JimBastard: its okay i forgive you tmpvar because you made jQuery work in node.js
[06:45] tmpvar: yaaas
[06:45] JimBastard: just saying that sentence makes me pee my pants a little
[06:45] tmpvar: that did happen
[06:46] tmpvar: :)
[06:46] tmpvar: need level 2 / events for more stuff
[06:46] tmpvar: but its goodness now heh
[06:46] Tim_Smart has joined the channel
[06:46] tmpvar: what up Tim_Smart 
[06:46] tmpvar: how you been dude?
[06:48] Tim_Smart: I have been good. Just about to head off to a 21st actually
[06:56] tk has joined the channel
[07:05] tmpvar: Tim_Smart, well, nice of you to stop by ;)
[07:07] jedschmidt has joined the channel
[07:09] sudoer has joined the channel
[07:14] dekz has joined the channel
[07:20] pydroid has joined the channel
[07:33] mikeal has joined the channel
[07:35] DracoBlue has joined the channel
[07:43] saikat has joined the channel
[07:49] Azeroth-IsWorkin has joined the channel
[07:51] botanicus has joined the channel
[07:52] charlesjolley has joined the channel
[07:55] darkf has joined the channel
[08:00] hellp has joined the channel
[08:00] cerberos has joined the channel
[08:05] tmpvar has joined the channel
[08:05] steadicat has joined the channel
[08:06] Nohryb has joined the channel
[08:16] steadicat has joined the channel
[08:19] micheil: hmm.. would it be useful to do something that is do(something, max_seconds)
[08:19] SvenDowideit_ has joined the channel
[08:19] micheil: which envokes the function something, but kills it if it runs for longer then max_seconds?
[08:31] tlrobinson_ has joined the channel
[08:32] admc has joined the channel
[08:33] jedschmidt: micheil: what do you mean kills it?
[08:33] SvenDowideit_ has joined the channel
[08:33] micheil: well stops it running
[08:33] micheil: like a long_running task style thing
[08:33] micheil: long running script
[08:34] micheil: jedschmidt: by the way, I think I understand (Fab) now
[08:34] micheil: jedschmidt: however... :D
[08:34] jedschmidt: micheil: nice. i'm going to be implementing what you're talking about, i think, as a ternary app.
[08:34] micheil: jedschmidt: okay, lol.
[08:34] jedschmidt: micheil: yeah, that's how i think these days.
[08:34] micheil: check out this jedschmidt, http://github.com/miksago/Bernard/tree/master/js/
[08:34] jedschmidt: micheil: for better or worse.
[08:35] micheil: It's sorta meant to be (Fab) for organising frontend js
[08:35] micheil: but I couldn't get it (fab)ish
[08:35] jedschmidt: micheil: this looks like Sammy.js
[08:35] micheil: yeah
[08:35] micheil: only, it's not working on the #'s in the urls
[08:36] micheil: it's meant to be working on the location's domain/subdomain, and filepath
[08:36] jedschmidt: micheil: ah, sure.
[08:36] micheil: which makes it a good solution for organising resources for say a rails app or something
[08:37] micheil: where you have a bunch of routes determined server side, but want those to also control what JS get's run on the client
[08:37] micheil: that way you could serve up your JS pretty much as one file, and it'd only run if the paths matched (like Fab's routing)
[08:38] jedschmidt: well, i've always wanted to port (fab) to the client. someday i'll get around to it.
[08:38] micheil: I just couldn't work out how fab works
[08:38] micheil: I know the key is probably in collect / reduce, but then what?
[08:38] jedschmidt: i'm trying to keep the stuff that requires node separate so that it wouldn't be too hard to run it on the client, and do what you're talking about.
[08:39] jedschmidt: micheil: well, do you know how continuations work? that's basically what (fab) is, a single continuation engine.
[08:39] micheil: yeah, it returns a new function
[08:39] micheil: eg, function(){return function(){};}
[08:40] jedschmidt: read (2) in this: http://www.ps.uni-saarland.de/~duchier/python/continuations.html
[08:42] jedschmidt: all i'm doing is turning a list of functions into a tree, where each function is a branch
[08:42] micheil: so in fab's case, info is the request
[08:42] micheil: sort of 
[08:44] jedschmidt: i'm not sure i follow, but you should probably DM me if you'd like to chat about it, so that we don't clutter up this channel with stuff unrelated to node.
[08:44] micheil: once I can work out the core of fab, then I can get this Bernard library doing awesome things
[08:44] micheil: true
[08:45] jedschmidt: micheil: jah, sure.
[08:45] ditesh|cassini has joined the channel
[08:47] SvenDowideit has joined the channel
[08:50] Tekerson has joined the channel
[08:55] SvenDowideit_ has joined the channel
[09:01] SvenDowideit has joined the channel
[09:05] bpot has joined the channel
[09:06] SvenDowideit_ has joined the channel
[09:07] SvenDowideit has joined the channel
[09:10] SvenDowi- has joined the channel
[09:15] SvenDowideit_ has joined the channel
[09:20] SvenDowideit_ has joined the channel
[09:20] binbash^ has joined the channel
[09:28] SvenDowideit has joined the channel
[09:29] tmpvar has joined the channel
[09:32] SvenDowideit has joined the channel
[09:32] Phazm: is this the correct syntax for http listeners? http://pastebin.com/Ev4q3mKx
[09:33] Phazm: there aren't any examples on the api page that have 'request' 'data' AND 'end'
[09:36] micheil has joined the channel
[09:40] SvenDowideit_ has joined the channel
[09:42] mape: Hmm anyone used Step with async callbacks that are recursive?
[09:45] SvenDowideit_ has joined the channel
[09:45] markwubben has joined the channel
[09:55] SvenDowideit has joined the channel
[10:09] Fuxx has joined the channel
[10:18] isaacs: Phazm: yeah, that looks right
[10:18] Phazm: dang -- was hoping that was the issue I'm running into :-/
[10:18] Phazm: something in my script is blocking -- can't figure out what
[10:19] isaacs: what doy ou mean by "blocking"?
[10:19] isaacs: like, your script never ends, and you don't see anything happening?
[10:19] dekz has joined the channel
[10:19] Phazm: it stops the other areas from the script from running until it completes
[10:20] isaacs: Phazm: grep for "Sync"
[10:20] Phazm: nope, not syncing (intentionally)
[10:20] isaacs: the only ways to block in node are the fs *Sync functions and infinite loops
[10:21] isaacs: an infinite process.nextTick recursion will behave almost like an infinite loop, since it's higher priority than the other things onteh ev loop
[10:21] Phazm: yes... I'm somewhat magical in that way. I am guessing I have something wrapped wrong or something else
[10:22] Phazm: it's not infinite -- it starts running again after the process completes
[10:22] felixge has joined the channel
[10:22] felixge has joined the channel
[10:22] isaacs: put more loggingin.  trace through your program.
[10:22] isaacs: i dunno.
[10:22] isaacs: restart your computer.  clear your temp folder.
[10:23] Phazm: the problem with the nextTick and setTimeout is that it's in a for loop, so due to the asyncronisity (....) the [i]'s are all set to the last in the array, not where they should be..
[10:23] isaacs: Phazm: no, they're set where they should be, which is the last item in the array.
[10:23] isaacs: Phazm: that's how closures work.
[10:23] isaacs: everyone sees the same "i"
[10:23] isaacs: so when you modify it, you modify everyone's, becasue your'e losing iver that.
[10:24] Phazm: should, in this case, means 'intended'
[10:24] tobeytailor has joined the channel
[10:24] isaacs: i think you should intend for your code to do what you tell it to ;)
[10:24] Phazm: ahh, perhaps I should go watch 'The Secret'
[10:24] isaacs: ew
[10:24] Phazm: the power of intention
[10:24] Phazm: ;)
[10:25] isaacs: nonono
[10:25] isaacs: you should modify your understanding.
[10:25] isaacs: so that your intent and your code are the same, rather than reading it, and thinking it should do something other than it does.
[10:25] isaacs: the secret is backwards.
[10:25] Phazm: I'm willing you to fix my code.... really strongly... I can almost see the waves of energy leaving my body into the cosmos.  Is it working?
[10:26] isaacs: are these waves of energy carrying money?
[10:26] SvenDowi- has joined the channel
[10:26] Phazm: lol, no, I'm intending all money come directly to me
[10:27] isaacs: i see
[10:27] wil_ has joined the channel
[10:27] chuck has joined the channel
[10:27] jwm has joined the channel
[10:27] isaacs: it's been fun. g'nite
[10:27] Phazm: well.
[10:33] SvenDowideit has joined the channel
[10:37] SvenDowideit_ has joined the channel
[10:45] woolia has joined the channel
[10:45] mape: Testing one testing two
[10:50] mape: And three and four
[10:54] Phazm: mape: any chance you're testing a node irc client?
[10:54] mape: Phazm: http://ipad-chat.mape.me/
[10:55] mape: More like a realay of information
[10:55] mape: *relay
[10:55] Phazm: _ry testing http://www.someurl.com/
[10:55] Phazm: what are ry mentions?
[10:56] mape: messages including the name in the beginning, not sure why it doesn't work..
[10:56] Phazm: that's what I figured
[10:57] Phazm: where's the "Phazm mentions" section? ;)
[10:57] Phazm: ahh, there ya go
[10:57] Phazm: I like rye bread...
[10:58] Phazm: heh, might want to ease up on the sensitivity there :)
[10:58] mape: There you go, if you refresh
[10:59] mape: Now it should only take messages starting with the nick
[10:59] Phazm: _rye bread
[10:59] sveisvei has joined the channel
[10:59] Phazm: woah... it's 4:00. time for sleep.
[10:59] Phazm: g'night all
[10:59] mape: nn
[11:00] tisba has joined the channel
[11:03] N` has joined the channel
[11:03] SvenDowideit_ has joined the channel
[11:09] SvenDowi- has joined the channel
[11:10] charlesjolley has joined the channel
[11:13] javajunky has joined the channel
[11:19] mortens has joined the channel
[11:19] jazzychad has joined the channel
[11:19] javarants has joined the channel
[11:19] plhw_ has joined the channel
[11:19] adamholt has joined the channel
[11:19] martyn___ has joined the channel
[11:21] dekroning has joined the channel
[11:21] botanicu_ has joined the channel
[11:22] kloeri has joined the channel
[11:26] kloeri has joined the channel
[11:31] technoweenie has joined the channel
[11:46] micheil has joined the channel
[11:56] botanicus has joined the channel
[12:01] smtlaissezfaire has joined the channel
[12:03] derbumi has joined the channel
[12:27] botanicus: Hey guys, is there a chef cookbook for Node.js somewhere?
[12:37] Tim_Smart has joined the channel
[12:40] mape: botanicus: might want to take a look at http://howtonode.org/
[12:41] botanicus: mape: I know the page and I remember there was something for monit, I'm just asking if someone has already written chef cookbook
[12:42] mape: Don't think there is one no
[12:42] botanicus: OK
[12:46] dekz has joined the channel
[12:51] dekroning has joined the channel
[12:56] maushu has joined the channel
[13:01] smtlaissezfaire has joined the channel
[13:01] qFox has joined the channel
[13:02] charlesjolley has joined the channel
[13:06] mortens has joined the channel
[13:06] jazzychad has joined the channel
[13:06] javarants has joined the channel
[13:06] plhw_ has joined the channel
[13:06] adamholt has joined the channel
[13:06] martyn___ has joined the channel
[13:08] xla has joined the channel
[13:09] Tim_Smart has joined the channel
[13:22] mape: Bonkers
[13:24] technoweenie has joined the channel
[13:46] nsm has joined the channel
[13:48] technoweenie has joined the channel
[13:48] kriskowal has joined the channel
[14:02] mape: And a _
[14:05] blowery_zzz has joined the channel
[14:09] cerberos has joined the channel
[14:09] dekz has joined the channel
[14:21] dekroning has joined the channel
[14:27] felixge has joined the channel
[14:27] felixge has joined the channel
[14:37] maushu has joined the channel
[14:42] pkrumins: so what good is jQuery in node.js?
[14:42] pkrumins: i just read someone made it work with node.js
[14:43] tlrobinson_ has joined the channel
[14:45] micheil: pkrumins: not much
[14:45] TobiasFar_ has joined the channel
[14:45] nsm: pkrumins: some people don't know JavaScript, they know jQuery :-)
[14:45] micheil: the stuff that jquery implements is probably pretty much already available
[14:45] micheil: nsm: I guess that.
[14:45] micheil: nsm: in which case I'd say (Fab)
[14:46] pkrumins: http://github.com/tmpvar/jsdom/blob/master/example/jquery/run.js
[14:46] pkrumins: here is jquery in node.js
[14:46] micheil: right, so DOM building
[14:46] micheil: (that's the last thing I'd want, sorry.)
[14:46] pkrumins: :)
[14:52] mape: pkrumins: what parts of Node?
[14:52] mape: *jQuery
[14:52] micheil: what's that thing called.. Select on a Socket?
[14:53] pkrumins: mape: i didn't look into it, see that link i pasted
[14:54] mape: A use I could see is scraping websites with node +jquery
[14:55] ineation has joined the channel
[14:55] pkrumins: mmm
[14:55] pkrumins: that's a good one actually
[14:56] micheil: ACTION sticks his nose out of the DOM, I'll leave that to where it came from.
[14:58] mnutt has joined the channel
[15:03] Aria has joined the channel
[15:08] voodoo1 has joined the channel
[15:12] micheil: Has anyone made a Fake filesystem / web / etc module for node, so that you can fake filesystem calls and such for testing?
[15:16] voodoo1: does anybody know how a simple node-based static webserver compares to ie. apache when serving static files?
[15:17] Aria: I don't think there's sendfile(), so inferior, probably, but also not likely by that much.
[15:20] N`: voodoo1: take a look at http://nodejs.org/cinco_de_node.pdf
[15:21] mrjjwright has joined the channel
[15:23] alexiskander has joined the channel
[15:28] jashkenas has joined the channel
[15:29] chakrit has joined the channel
[15:37] voodoo1: well, the figures are more about nginx it seems
[15:38] voodoo1: although the idea behind is similar, nginx might compete different
[15:40] freshtonic has joined the channel
[15:42] smtlaissezfaire has joined the channel
[15:43] N`: imho, node.js performances will be good, compared to apache2
[15:43] N`: but less features and node.js is young, so it might be not as secured as apache
[15:44] itistoday has joined the channel
[15:44] ineation has joined the channel
[15:44] mscdex has joined the channel
[15:45] technoweenie has joined the channel
[15:46] sudoer has joined the channel
[15:46] derbumi has joined the channel
[15:57] Aria has joined the channel
[15:58] voodoo1: hmm, i picked up a static web server based on node (even using buffers)
[15:58] voodoo1: nginx outfactored it about 8 times in requests per second
[15:59] voodoo1: so much difference only due to sendfile?
[15:59] pkrumins: wow 8x.
[15:59] pkrumins: i thought nginx was like 2x better.
[16:00] voodoo1: without buffers it was even worse
[16:00] voodoo1: is that realistic?
[16:00] voodoo1: I served an image with ~20 kB , 100 concurrent requests, 10000 requests in total
[16:01] voodoo1: nginx: 8400 r/s
[16:01] pkrumins: wowzy.
[16:01] voodoo1: node (w/ buffer): 1481 r/s
[16:01] voodoo1: node (w/o buffer) 1100 r/s
[16:02] SamuraiJack has joined the channel
[16:03] voodoo1: of course, run locally
[16:04] maushu has joined the channel
[16:05] maushu: Who created elusive hippo?
[16:07] chakrit1 has joined the channel
[16:12] joshbuddy has joined the channel
[16:12] jashkenas: quick thing: nodejs.org/api is a 404, while nodejs.org/api.html works... It used to work both ways.
[16:13] micheil: jashkenas: a few things changed recently there, but api.html is what it should be
[16:19] mnutt has joined the channel
[16:24] keyvan has joined the channel
[16:24] siculars has joined the channel
[16:30] xla_ has joined the channel
[16:41] derRichard has joined the channel
[16:41] derRichard: hi
[16:43] derRichard: is it safe to use fork() within a node.js addon module? 
[16:45] mau has joined the channel
[16:45] micheil: why do you need to fork?
[16:46] derRichard: micheil: my addon calls to a blocking method. my plan is to fork(), call the bad blocking method and wait with libev for the forked process.
[16:47] micheil: hm..
[16:47] micheil: is this a C addon?
[16:47] derRichard: the blocking method does not work with file descriptors. so i cannot use ev_io_* :(
[16:47] derRichard: yes (c++)
[16:47] jashkenas has left the channel
[16:47] micheil: okay, that's fair
[16:48] micheil: (although, ev_io_custom can handle a lot)
[16:48] derRichard: okay, i'll have a look at it. currently my plan is to use ev_child()
[16:49] micheil: okay, I was just about to suggest looking at node_child_process.cc which may offer clues
[16:50] derRichard: but using fork() within node will not kill anything?
[16:50] micheil: I'm not sure, to be honest
[16:50] micheil: I haven't done much stuff requiring child processes / forking
[16:50] micheil: try it and find out, when you do, email the mailing list about your results
[16:51] derRichard: hehe, ok :)
[16:54] maushu has joined the channel
[16:57] itistoday has left the channel
[17:00] _ry: jquery on node!
[17:00] _ry: great
[17:00] smtlaissezfaire has joined the channel
[17:03] mape: does it do selector usage?
[17:15] marktlang has joined the channel
[17:22] Aria has joined the channel
[17:24] keyvan has joined the channel
[17:26] bpot has joined the channel
[17:37] technoweenie: _ry: http://newcome.wordpress.com/2010/05/08/node-net-node-js-implemented-in-javascript-on-the-net-runtime/  node.js on the .net runtime :)
[17:38] binary42 has joined the channel
[17:38] developit has joined the channel
[17:38] pkrumins: i got to blog about mape's idea of using jquery + node as the ultimate web scraper
[17:38] pkrumins: all the other shit out there doesn't even come close to the power of this
[17:38] developit: Hi. I am confused about HTTP.Server.listen()
[17:39] developit: The docs say the arguments are:  (Number) port, (String) host
[17:39] developit: myStream.listen(80, 'test.domain.com');  responds for any requests to port 80 - the domain is disregarded.
[17:39] mape: pkrumins: well you do have phpquery, or pyquery, should be handy to use node if you are fetching a ton of sites though
[17:41] pkrumins: mape, pyquery is synchronous, isn't it?
[17:41] mape: oh yeah 
[17:41] pkrumins: all of them are synchronous, so you got to put a lot of effort to scrape at masses
[17:41] mape: Yeah
[17:41] pkrumins: that's why i used 'shit'
[17:41] mape: But yeah, neat to see jQuery being used in that fashion
[17:42] pkrumins: i once had to do some mass scraping, i don't know how much effort i had to put to get pyCurl work correctly.
[17:42] pkrumins: the blog post title could be 'scraping at masses with node.js'
[17:43] mape: well be sure to give me a poke if you get that blogpost done :)
[17:43] pkrumins: yes sir
[17:44] pkrumins: My last blog post about nodejs proxy last week was read 23,000 times. Teaching people great technology for great good!
[17:45] dnolen has joined the channel
[17:47] hsuh has joined the channel
[17:49] dnolen has joined the channel
[17:49] Phazm: that the one that was on digg?
[17:49] hsuh has left the channel
[17:50] mape: think it was on hacker news as well
[17:50] alexiskander has joined the channel
[17:54] saikat has joined the channel
[18:00] SamuraiJack_ has joined the channel
[18:03] felixge has joined the channel
[18:03] felixge has joined the channel
[18:03] smtlaissezfaire has joined the channel
[18:07] smtlaissezfaire_ has joined the channel
[18:11] developit: Anyone having issues with HTTP.Server.listen ?
[18:12] voodoo1: no, but i can second that the binding to a distinct host will be ignored
[18:13] developit: Any luck in finding a workaround? I have started checking request.headers.host and calling req.connection.end();
[18:14] developit: But that won't work for multiple servers listening on port 80.
[18:15] developit: I have been thinking about running a single Server in my main application, and allowing other apps to listen on that single connection.
[18:16] xla_: can someone tell me how to enable static in wsscripts for node-waf?
[18:17] tmpvar has joined the channel
[18:18] fernmicro has joined the channel
[18:24] inimino: developit: there's no way for more than one server to listen on the same port; the domain is just used to resolve the IP address you want to listen on
[18:24] inimino: that is to say, the interface
[18:25] developit: Is there a way, then, to map different subdomains to different IPs without having to get new static IPs?
[18:25] inimino: developit: no
[18:25] Aria: I wish, but no. HTTP's so old it doesn't use SRV records.
[18:25] inimino: developit: so if you want to do name-based virtual hosting you will have to look at every request and dispatch appropriately
[18:25] steadicat has joined the channel
[18:25] Aria: You'd have to handle that at the application level, parsing HTTP, switching on the Host: header, and then passing to the right HTTP server as you see fit.
[18:26] developit: So the only real solution is to have a global listener on port 80 and custom EventEmitter.
[18:26] inimino: "EventEmitter" isn't part of the only solution to anything, but you have to have some process listening on 80, and dispatching
[18:27] inimino: could be node, nginx, whatever you want
[18:27] developit: ahhh.
[18:28] Aria: Man, someone needs to write something like Swiftiply in Node.
[18:28] developit: It just means having multiple node apps on port 80 requires that you break away from the API.
[18:38] voodoo1: ok, anybody an idea how to handle Expect: 100-continue in node.js? I mean server-side?
[18:39] pkrumins: http
[18:39] pkrumins: oops
[18:39] pkrumins: http's so old that even you momma knows what it stands for
[18:39] voodoo1: yeah, how can i send a raw header like "HTTP/1.1 100 Continue"
[18:40] voodoo1: i can't use req.write, because that is no entity
[18:40] voodoo1: and i can't execute res.writeHead() more than once, can i?
[18:43] alexiskander has joined the channel
[18:43] teemow has joined the channel
[18:44] voodoo1: any idea?
[18:47] micheil: hmm..
[18:47] micheil: try it.
[18:48] voodoo1: well, i can execute it mor than once
[18:48] micheil: what do you get if you telnet it?
[18:49] voodoo1: but than that is not a intermediate response anymore
[18:49] voodoo1: i jsut want i single "HTTP/1.1 100 Continue"
[18:49] micheil: and then close?
[18:49] voodoo1: res.writeHead(100, {}); results in:
[18:49] voodoo1: HTTP/1.1 100 Continue
[18:49] voodoo1: Connection: keep-alive
[18:49] voodoo1: Transfer-Encoding: chunked
[18:50] voodoo1: i must not close the connection yet
[18:50] hellp has joined the channel
[18:51] cloudhead has joined the channel
[18:52] micheil: that shouldn't close the connection/
[18:52] micheil: you could also hijack the request, depending on your needs.
[18:52] voodoo1: that's right,but i'm note sure if the first response header is correct according to the RFC
[18:53] voodoo1: in every example, the 100 Continue is a one-liner, however node.js creates additional header fields
[18:54] micheil: what sort of connection is this?
[18:54] micheil: maybe this is a special request? 
[18:54] voodoo1: PUT
[18:55] voodoo1: regular http/1.1
[18:56] micheil: okay, one think to know now is the http_parser.c supports put
[18:56] micheil: voodoo1: try ._send()
[18:56] micheil: res._send()
[18:57] voodoo1: is that some kind of raw socket writing?
[18:57] micheil: sorta
[18:57] tmpvar has joined the channel
[18:57] voodoo1: ok thx, i'll check this out
[18:57] micheil: writes it to the send queue instantly, it's what writeHead and write invoke
[18:57] micheil: under the hood
[18:58] micheil: well, writeHead goes writeHead -> sendHeaderLines -> multiple _send's
[18:59] micheil: what's the best way of doing a memory benchmark on a node app (to test for slow case / leaks?)
[18:59] kennon has joined the channel
[19:00] sveisvei has joined the channel
[19:00] micheil: I'm working with an object, two or more levels deep, and I need to unset a property, currently I'm deref'ing using level.two[key] = undefined;
[19:00] micheil: then I'm doing: delete level.two[key];
[19:03] ctp has joined the channel
[19:04] mnutt has joined the channel
[19:05] ctp: hi folks. anyone here coding node.js + ext js? do you know any examples / webapps running both?
[19:06] Aria: I am beginning to.
[19:07] Aria: but not much yet
[19:08] tmpvar has joined the channel
[19:09] ctp: Aria: ah, cool. me too ;-) i'm not sure where to start ;-) do you use geddy, express, picard or some of the frameworks?
[19:10] developit: So does anyone have a solution to the muliple servers on a port issue?
[19:11] ctp: Aria: i began with rails3 + ext but node looks to sexy to be ignored for this project 8-)
[19:12] olegp has joined the channel
[19:18] bpot has joined the channel
[19:18] juvenn has joined the channel
[19:20] teemow has joined the channel
[19:24] micheil: how do you benchmark webscokets? tell chrome to open a new on every 100miliseconds.. 
[19:24] micheil: or not.
[19:26] steadicat has joined the channel
[19:27] jpld has joined the channel
[19:29] keyvan has joined the channel
[19:32] brianmario has joined the channel
[19:39] tisba_ has joined the channel
[19:41] derbumi_ has joined the channel
[19:48] mscdex: yuck extjs
[19:56] charlesjolley has joined the channel
[19:56] siculars has joined the channel
[19:58] unomi has joined the channel
[19:58] teemow has joined the channel
[20:00] ddollar has joined the channel
[20:00] ddollar has joined the channel
[20:03] gf3 has joined the channel
[20:03] ciju has joined the channel
[20:04] ciju_ has joined the channel
[20:05] gf3 has joined the channel
[20:08] gf3 has joined the channel
[20:12] juvenn has left the channel
[20:14] siculars_ has joined the channel
[20:14] ewdafa has joined the channel
[20:18] voodoo1: what is the right variable for accessing the http header content-length? request.headers.[…]
[20:18] mikeal has joined the channel
[20:19] Aria: ['content-length']
[20:20] isaacs has joined the channel
[20:21] voodoo1: thx
[20:30] ctp: Aria: have you seen any node+ext examples on the net?
[20:31] Jimbastard has joined the channel
[20:31] sveimac has joined the channel
[20:33] ciju has joined the channel
[20:36] siong1987 has joined the channel
[20:36] brainproxy has joined the channel
[20:39] mrjjwright has joined the channel
[20:47] javajunky has joined the channel
[20:55] maushu has joined the channel
[20:56] teemow has joined the channel
[20:58] bmizerany has joined the channel
[20:59] mape: pkrumins: Did you have any luck getting jQuery to run?
[21:05] sveimac has joined the channel
[21:06] pkrumins: mape, didn't try yet
[21:06] smtlaissezfaire has joined the channel
[21:06] mape: Just cloned the git repo and all I'm getting is "ReferenceError: jQuery is not defined"
[21:06] darkf has joined the channel
[21:06] dgathright has joined the channel
[21:06] mape: Even though it reads the file fine and evals it
[21:10] pkrumins: send a quick msg to author on github
[21:12] keyvan has joined the channel
[21:13] derRichard: i've a question on the postgres demo addon (http://github.com/ry/node_postgres/blob/master/postgres.js). how does this addListener()-thing work? can i plug on every exported node-symbol a listener and trigger it with Emit()?
[21:18] mape: pkrumins: Hmm works when I copypaste the jquery source into the file, doesn't seem to work when it uses eval though
[21:19] ciju__ has joined the channel
[21:19] pkrumins: mape: interesting.
[21:20] pkrumins: let me know if you figure out what is going on there.
[21:20] pkrumins: so i didn't have to go through all of that myself when I try it.
[21:20] keyvan has joined the channel
[21:21] mrjjwright has joined the channel
[21:21] mape: hehe yeah
[21:31] c has joined the channel
[21:32] mape: Hmm doesn't seem to wanna play
[21:33] mape: works for simple strings but not the external site I'm pulling in
[21:33] polo has joined the channel
[21:33] cij has joined the channel
[21:35] olegp has joined the channel
[21:36] mape: Jup works just like it should If I paste the src from firebug rather
[21:36] mape: guess it is the html parser that isn't up to snuff then
[21:37] saikat has joined the channel
[21:39] micheil_mbp has joined the channel
[21:39] pkrumins: pesky
[21:43] mape: guess it is the html parser that isn't up to snuff then
[21:43] mape: wrong window 
[21:46] mape: wrong window 
[21:46] mape: ACTION goes of and dies
[21:49] polo: I have a strange behavior here with Class.js
[21:50] devinus has joined the channel
[21:50] mape: "Asynchronously reads the entire contents of a file. Example:" Is that true? It doesn't do chunks?
[21:50] devinus: Jimbastard: dude, there's gotta be somebody following you on reddit downvoting all your comments
[21:50] Jimbastard: lol
[21:50] devinus: Jimbastard: i had to go back through ad get you out of the negatives
[21:51] Jimbastard: link?
[21:51] maushu: mape, true but bad idea regarding big files.
[21:51] mape: maushu: Yeah.. Seems that jsdom is trying to fetch jquery.js and eval ut but it isn't getting the entire file
[21:51] mape: So it is evaling half of it and then fails
[21:52] mape: Which is no good
[21:52] devinus: Jimbastard: http://www.reddit.com/r/programming/comments/c1d8h/jquery_now_works_serverside_in_nodejs/
[21:53] Jimbastard: looks
[21:53] Jimbastard: fine to me
[21:55] mape: Jimbastard: You got the example working?
[21:55] Jimbastard: tmpvar
[21:55] Jimbastard: its a bit of a premature post
[21:55] Jimbastard: testing the waters out
[21:55] Jimbastard: will do a real post once tmpvar gets the examples up and running 
[21:55] Jimbastard: (so you can see them)
[21:56] mape: Well I got it working only that it meant cp the entire jQuery source into the example file since readFile only got half of it
[21:56] mape: And the htmlparser doesn't seem to handle wonky websites well
[21:58] mape: So how do you handle readFile on large files? It only has one callback and there are no end events i relation to it?
[22:02] charlesjolley has joined the channel
[22:04] felixge has joined the channel
[22:05] mape: Hmm nm seems it was just the output that didn't catch up 
[22:09] mape: Hmm nm seems it was just the output that didn't catch up 
[22:17] polo has joined the channel
[22:22] smtlaissezfaire has joined the channel
[22:25] mape: pkrumins: Seems to work if you add a .toString() for the eval of data, use node-jquery instead of jquery.js as well as removing the exports wrapper
[22:25] mape: Still the issue with the html parser though
[22:26] siculars_ has joined the channel
[22:28] pkrumins: aha
[22:31] mape: pkrumins: Hmm nm, jquery.js works fine, only that you have to do jquery = window.jQuery
[22:34] felixge has joined the channel
[22:35] pkrumins: got it
[22:38] mape: pkrumins: http://gist.github.com/394810 if you want to poke at it
[22:39] mape: crap code but should be good enough as a light reference
[22:41] fernmicro has joined the channel
[22:41] pkrumins: sweet, thank you!
[22:42] pkrumins: btw, var body  = [], body.push(chunk) and then body.join() is now slower than body += chunk
[22:42] mape: Oh k, noted :)
[22:42] pkrumins: if that is of any concern at all.
[22:43] pkrumins: cause don't optimize prematurely
[22:43] mape: Hehe
[22:45] mscdex: finally, a compilable, working ncurses module! :-D
[22:45] mscdex: hello world ftw
[22:46] joshowens has joined the channel
[22:48] SvenDowideit_ has joined the channel
[22:50] Ned___ has joined the channel
[22:52] cij has joined the channel
[22:52] markwubben_ has joined the channel
[22:53] freshtonic_ has joined the channel
[22:54] mikeal has joined the channel
[22:55] mape: Hehe
[22:57] polotek has joined the channel
[22:59] polotek has left the channel
[22:59] polotek has joined the channel
[22:59] polotek has left the channel
[23:00] polotek has joined the channel
[23:00] bmizerany has joined the channel
[23:00] ctp has joined the channel
[23:00] mortens has joined the channel
[23:00] jazzychad has joined the channel
[23:00] javarants has joined the channel
[23:00] plhw_ has joined the channel
[23:00] adamholt has joined the channel
[23:00] martyn___ has joined the channel
[23:00] jpld has joined the channel
[23:00] jpld has joined the channel
[23:01] bmizerany has joined the channel
[23:01] ctp has joined the channel
[23:01] mortens has joined the channel
[23:01] jazzychad has joined the channel
[23:01] javarants has joined the channel
[23:01] plhw_ has joined the channel
[23:01] adamholt has joined the channel
[23:01] martyn___ has joined the channel
[23:01] polo: what's happening there ?
[23:02] polo: whatever
[23:02] mscdex: netsplit i guess
[23:02] polo: ok
[23:04] polo: so Class.js issue
[23:04] polo: I really am a noob in JS
[23:04] polo: but this is strange
[23:05] mape: bah node-htmlparser really isn't as forgiving as it states to be
[23:06] polo: hom this : var obj = new Object(); obj.name ="bob"; or var obj = {name:bob}
[23:07] mape: polo: {}
[23:07] polo: is different from : var User = new Class({ constructor(name) { this.name = name; } }); var obj = new User("bob");
[23:07] polo: because if I do JSON.stringify
[23:07] polo: it works well for the 3
[23:08] polo: however if I insert them in my mongo database
[23:08] polo: the 2 first only works
[23:08] maushu: I'm trying to do a cloud of node processes, should I use stdout or unix sockets?
[23:08] polo: so problem with node-mongodb-native Binary parser and clas.js object ?
[23:08] polo: how cant hey be different !!!
[23:12] inimino: polo: I suggest not using a class abstraction and learning the language's more powerful native features first...
[23:14] polo: inimino: ok fine, so I am missing something ?
[23:14] inimino: otherwise you are bolting on a weaker model to what JavaScript already has
[23:14] inimino: polo: well, they are different kinds of objects
[23:15] polo: o_O
[23:15] polo: noobzor
[23:15] inimino: they have different constructors
[23:16] polo: mm, never read anything about it
[23:16] inimino: http://eloquentjavascript.net/contents.html
[23:16] inimino: recommended
[23:16] polo: ok thanks !
[23:16] polo: a lot :)
[23:16] inimino: also Doug Crockford has some pages on how he tried to use classical inheritance in JavaScript but eventually saw the light
[23:17] inimino: if you embrace JavaScript's strong points it's a very nice little language
[23:17] inimino: if you try to turn it into Java, you'll be in for a lot of pain :)
[23:17] polo: yeah :s
[23:17] polo: I think it's what I am trying to do from the very beginning
[23:18] polo: and my project is going very very slowly
[23:19] inimino: I really recommend that book, it covers all the basics of good solid JavaScript programming
[23:19] polo: ok thank you
[23:20] polo: and Doug Crockford's page are in ?
[23:20] inimino: hm...
[23:20] derbumi has joined the channel
[23:20] polo: ok no I misunderstood
[23:20] polo: thought it was in th book
[23:21] polo: I'll find it on the web then
[23:21] inimino: http://javascript.crockford.com/inheritance.html
[23:21] inimino: especially the note at the end
[23:21] polo: oki :)
[23:21] inimino: "... I have never once found need to use an uber function."
[23:22] inimino: I have never either
[23:23] polo: an uber function ?
[23:23] inimino: "super" methods
[23:23] polo: ok
[23:23] polo: I'm using it
[23:23] polo: very painful
[23:24] polo: with async model
[23:24] polo: :s
[23:24] inimino: yes
[23:24] mape: hehe
[23:24] inimino: painful in JavaScript generally
[23:24] inimino: learn to use functional patterns and closures and you will come to regard the classical OOP pattern as an antiquated toy
[23:24] polo: ok
[23:25] inimino: ...suitable only in languages like Java where you have no other practical options
[23:26] polo: man
[23:26] charlesjolley has joined the channel
[23:26] polo: I have to rethink my view of the universe
[23:26] inimino: :)
[23:27] dekz has joined the channel
[23:32] polotek: So what's the official API for js Error objects?  Is it err.message isn't always set
[23:32] polotek: I'm sure you can rearrange that question to actually make sense
[23:34] charlesjolley has joined the channel
[23:35] polotek: err.stack seems pretty consistent in node at least
[23:35] mjijackson has joined the channel
[23:35] maushu: Huh, anyone had problems with unix sockets? I tried net.createConnection with a unix socket file and it doesn't find the file.
[23:36] maushu: Error: ENOENT, No such file or directory
[23:37] maushu: When I do cat on the file it does this: cat: /tmp/node/node8398: No such device or address
[23:37] maushu: Is it supposed to do that? I never worked with unix sockets.
[23:45] spoob has joined the channel
[23:47] maushu: Nevermind, I was connecting to it too fast.
[23:48] mnutt has joined the channel
[23:49] polo: in the api, it seems that createConnection accepts a port and a host only not a socket file.
[23:50] maushu: polo, it does. It's just not in the documentation.
[23:50] maushu: Well, it *is* in the documentation, just really hidden.
[23:50] polo: I think you're too low level, you don't need to create sockets in node
[23:50] polo: ok didn't know
[23:50] maushu: ...
[23:52] maushu: I like making sockets! ♫ They make the world go around! ♪♫
[23:52] polo: ... ? sorry don't see why you need to bypass this simple method
[23:52] polo: ok :)
[23:52] maushu: Aaaaround! ♪♫ Aaaaaaaaaaaround! ♪♫♪♫
[23:53] polo: ok I stfu
[23:53] maushu: ♪♫
[23:53] maushu: ACTION continues humming.
[23:54] maushu: I need to abstract this pool into a javascript object.
[23:54] jedschmidt has joined the channel
[23:54] polotek has left the channel
