[00:02] _announcer: Twitter: "@rpflo Writing code with the same language in the client and server side has advantages beyond code-sharing. #node.js" -- Guillermo Rauch. http://twitter.com/rauchg/status/19696608884
[00:02] charlesjolley- has joined the channel
[00:03] nrstott has joined the channel
[00:04] rauchg_: oh shit mistyped his name
[00:04] pkrumins: just ran node via valgrind, getting invalid free / delete / delete [] warning!
[00:04] nrstott has joined the channel
[00:04] kodisha has joined the channel
[00:04] pkrumins: and this is not my code, just created empty js file!
[00:05] SubStack: expresso looks delicious
[00:05] pkrumins: gonna create a ticket!
[00:05] SubStack: Inline tests! I like this idea.
[00:05] pquerna: expresso is awesome.
[00:05] pkrumins: SubStack: expresso!
[00:05] SubStack: pkrumins: I'm giving it a go for traverse
[00:06] SubStack: turning those examples into some tests
[00:06] pkrumins: roger!
[00:06] aheckmann has joined the channel
[00:07] SubStack: hmm npm install expresso failed
[00:07] SubStack: install: cannot create regular file `/usr/local/bin/node-jscoverage': Permission denied
[00:07] SubStack: pesky thing
[00:07] SubStack: it should know better than to hard-core paths like that
[00:08] SubStack: or maybe that's npm's fault
[00:08] pkrumins: bwahahaha, done with node-gif, pushing and announcing
[00:08] SubStack: pkrumins: \o/
[00:08] pkrumins: just wrote the last code line.
[00:09] steadicat has joined the channel
[00:09] mape: pkrumins: animated gifs?!
[00:09] SubStack: npm config binroot "/home/substack/prefix/bin"
[00:09] PyroPete1 has joined the channel
[00:09] pkrumins: currently transparent, and stackable (for stackvm), but not yet animated
[00:09] SubStack: and yet, not respected!
[00:09] mape: pkrumins: used for what? 
[00:10] pgriess has joined the channel
[00:10] pkrumins: for stacked, transparent stackvm updates!
[00:10] pkrumins: :D
[00:11] pkrumins: via gif.
[00:11] pkrumins: already have that via png, but now also via gif.
[00:11] pkrumins: gonna hack animated gifs after some time, want to hack on other things now. animated gifs will be awesome for terminal screencasts.
[00:12] akahn has joined the channel
[00:12] mape: arent you using canvas for that?
[00:12] _announcer: Twitter: "I always find myself wondering how to do something and then remembering that it is just JavaScript #nodejs" -- dave johnson. http://twitter.com/davejohnson/status/19696994573
[00:12] SubStack: ACTION fixes expresso to do binroot correctly
[00:14] _announcer: Twitter: "A single core on my MacBook Pro is 2.5 times faster on a #nodejs, #expressjs and #connectjs benchmarks than an EC2 small instance." -- James Sadler. http://twitter.com/freshtonic/status/19697037320
[00:15] pkrumins: mape, canvas on modern browsers, stacking on older ones
[00:15] pkrumins: another crazy method is terminal via <video>
[00:15] [[zz]] has joined the channel
[00:15] pkrumins: s/terminal/virtual machine screen/
[00:16] pkrumins: and another crazy method is via streaming GIFs
[00:16] adinardi has joined the channel
[00:16] pkrumins: streaming animated
[00:16] SubStack: progressive loading \m/
[00:16] mape: pkrumins: oh k, sounds like fun :)
[00:16] pkrumins: sure is.
[00:17] pkrumins: progressive loading! :D
[00:17] pkrumins: progressive loading is one bit away.
[00:18] _announcer: Twitter: "@ Paraboul what is the advantage of ape on nodejs? Ape seems more complicated." [fr] -- Olivier Bregeras. http://twitter.com/stunti/status/19697197565
[00:19] ashleydev_: any word how to get node.js with SSL support?
[00:20] _announcer: Twitter: "Just wrote node-gif, a library for node.js to produce GIF images. http://bit.ly/bvAkmH Wrote it for my StackVM http://stackvm.com startup." -- Peteris Krumins. http://twitter.com/pkrumins/status/19697258447
[00:20] pkrumins: sweet.
[00:21] freshtonic has joined the channel
[00:21] freshtonic has left the channel
[00:22] freshtonic has joined the channel
[00:22] khug1 has joined the channel
[00:23] mape: how does the animated gifs scale performance wise?
[00:23] _announcer: Twitter: "Recommended: @al3x's "Scaling in the Small vs Scaling in the Large", a balanced analysis of Node.js' strengths. http://quig.ly/ddTRDF" -- Sam Quigley. http://twitter.com/emerose/status/19697407924
[00:24] pkrumins: mape: pretty crappy i would say, since each frame has to be the same size
[00:24] SubStack: pkrumins: is it properly async?
[00:24] pkrumins: nope :(
[00:24] SubStack: /o\
[00:24] mape: pkrumins: yeah thought so :/
[00:26] isaacs has joined the channel
[00:26] pkrumins: ryah: you should try dnode for your web_ircd project.
[00:27] pkrumins: SubStack: no worries, will get to it (soon) :)
[00:28] ryah: eh
[00:29] mape: isn't the ircd the old demo from way back?
[00:29] ryah: yeah
[00:29] ryah: i added a web frontend
[00:29] ryah: mape: http://github.com/ry/web_ircd
[00:30] ryah: so you can see what's going on in the #web channel
[00:30] pkrumins: oh thought you were writing a new project
[00:30] pkrumins: since it was created 2hrs ago
[00:30] pkrumins: so i suggested dnode.
[00:30] SubStack: blah the expresso install process sucks
[00:30] pkrumins: SubStack: what is expresso?
[00:30] pkrumins: thought it was coffee before
[00:30] pkrumins: but now it turned out to be code.
[00:30] SubStack: test framework
[00:31] tisba_ has joined the channel
[00:31] mape: ryah: Ah, probly doesn't matter but next time you are poking at it might want to update the jQuery file
[00:31] SubStack: wtf there is no main
[00:32] _announcer: Twitter: ""Node and Scaling in the Small vs Scaling in the Large" http://al3x.net/2010/07/27/node.html by @al3x #nodejs #scaling #performance" -- John D. Mitchell. http://twitter.com/johndmitchell/status/19697974417
[00:33] ryah: geh
[00:33] ryah: gah
[00:34] _announcer: Twitter: "What will happen if Node.JS scratch in a twitter. It&#39;s a good parallelism" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/19698066494
[00:35] SubStack: pquerna: you actually got expresso to run?
[00:36] SubStack: Error: Cannot find module '/home/substack/prefix/lib/node/.npm/expresso/0.5.0-LINK-f511f02d/package/bin/expresso'
[00:36] SubStack: >_<
[00:36] SubStack: something screwy going on inside this thing
[00:38] jxson has joined the channel
[00:39] _announcer: Twitter: "incorporated as a module for nginx V8, Node.JS do best to use some of the libraries" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/19698389766
[00:40] SubStack: ah npm is to blame after all
[00:40] SubStack: module.exports = require("/home/substack/prefix/lib/node/.npm/expresso/0.5.0-LINK-f511f02d/package/bin/expresso")
[00:40] SubStack: ^ isaacs 
[00:42] mape: isaacs: you removed the mtime from the json response on the repo?
[00:43] softdrink has joined the channel
[00:44] _announcer: Twitter: "Spectacular example of the kind of stuff you can do with node.js and WebSockets: http://bit.ly/9890rW" -- Jeff Croft. http://twitter.com/jcroft/status/19698692619
[00:46] kriskowal has joined the channel
[00:47] _announcer: Twitter: "@jkreeftmeijer The node.js mouse demo is awesome (and somewhat creepy).  Lots of possibilities.  http://bit.ly/cDCzsE" -- Benjamin Oakes. http://twitter.com/benjaminoakes/status/19698856938
[00:47] _announcer: Twitter: "Cool use of Web Sockets: http://jeffkreeftmeijer.com/2010/experimenting-with-node-js/ (Seeing everyone's mouse!)" -- Dan Cole. http://twitter.com/dancole/status/19698896851
[00:50] _announcer: Twitter: "Updated the Connect article with latest #node.js and #connect APIs http://howtonode.org/connect-it" -- Tim Caswell. http://twitter.com/creationix/status/19699058525
[00:50] ajpiano has joined the channel
[00:50] _announcer: Twitter: "Article worth reading -&gt; Alex Payne talking about Node.js and scaling: http://al3x.net/2010/07/27/node.html" -- Tim Haines. http://twitter.com/timhaines/status/19699090111
[00:51] sztanpet has joined the channel
[00:51] mape: seems it's twitter time..
[00:52] cardona507: yeah - that mouse/mode example is all the rage
[00:53] mscdex: is there any way to instead have connect supply a callback that takes in request and response objects, instead of having the opposite with a middleware?
[00:53] mape: cardona507: I actually have a more fun demo of that I did quite a while ago, that replicated the users experience, so if you inserted that on your site you got a popup that had the same resolution the user had, showed the users cursor, scrolled alongside with the user and matched when resized
[00:53] cardona507: mape url?
[00:54] mape: cardona507: 1sec
[00:54] cardona507: k
[00:55] mape: cardona507: http://mape.me:1338/ (chrome/safari)
[00:56] cardona507: mape - is that your mouse?
[00:56] mape: yeah
[00:56] cardona507: wow!
[00:56] mjr_: mape: thta's awesome
[00:56] cardona507: this is great!
[00:56] cardona507: can I retweet this?
[00:56] ryah: man
[00:57] ryah: kids these days
[00:57] cardona507: haha
[00:57] mape: cardona507: well, it is kinda useless, I got out of bed to move the cursor, unless I say up all night moving the mouse it doesn't make for an decent demo ;)
[00:57] steadicat has joined the channel
[00:58] mape: mjr_: Could be useful for user testing and whatnot
[00:58] ryah: mape: you should make it so people share a ui
[00:58] mjr_: Yeah, I love the high resolution of the updates.  Super smooth.
[00:58] cardona507: mape: good point - nice work
[00:59] mape: :)
[00:59] mape: ryah: like a helpdesk kinda deal?
[00:59] pnewhook has joined the channel
[01:00] ryah: mape: pretty sweet though
[01:00] ryah: yeah, maybe
[01:00] mape: yeah thought it was a neat idea, easy enough to do
[01:00] cardona507: ryah: you at google talking tomorrow?
[01:01] ryah: cardona507: yeah
[01:01] creationix: ryah: whew, updated all my howtonode articles to node v0.1.102 and messages the authors of the other articles
[01:01] cardona507: cool - see ya there :)
[01:01] ryah: cardona507: :)
[01:01] mape: but gets harder the more you try to emulate, clicking elements, selecting text, sharing logged in state and whatnot
[01:01] ryah: creationix: cool
[01:02] mape: but for like shoppingsites or whatever it should be easy as pie
[01:02] ryah: mape: i think what you've got is pretty awesome
[01:02] SteveDekorte has joined the channel
[01:02] ryah: selecting would be crazy
[01:03] _announcer: Twitter: "Ok, I finally updated all my articles on howtonode.org.  This should help lessen the confusion by outdated information. #nodejs ftw" -- Tim Caswell. http://twitter.com/creationix/status/19699895384
[01:04] mape: ryah: hehe, the hard step is to do the last 10%, as always
[01:04] cardona507: mape - so where is the nodejs 'go to meeting' ? :)
[01:04] creationix: ryah: btw, I never asked you, but will you be able to come to a meetup on the 10,11,or 12th in either Palo Alto or SF?
[01:04] cardona507: 'node to meeting'
[01:04] ryah: creationix: yeah
[01:05] creationix: ryah: awesome, do you want to give a short presentation too?
[01:05] ryah: yes
[01:05] phiggins: that was too easy
[01:05] mape: Hehe, yeah, I'm not a product guy, I just make things people don't use 
[01:05] phiggins: be elusive man
[01:05] mscdex: mape: how do you compensate for when the viewer's browser takes longer to load a page than the person being watched?
[01:05] creationix: ryah: sweet, just let me know what you need and what day and place you prefer
[01:05] cardona507: meetup? creationix - open to the public?
[01:05] creationix: phiggins: don't worry most the time he ignores me
[01:06] creationix: cardona507: yep, there is a thread on the mailing list
[01:06] ryah: creationix: i think we should do it in the south bay
[01:06] phiggins: phew
[01:06] mape: mscdex: I demo it with that in mind, but even if I move quick it syncs up,  (this will end up on the node story)
[01:06] ryah: creationix: palo alto that is
[01:06] ryah: creationix: the last few times we were up here
[01:06] creationix: ryah: fine by me of course :)
[01:06] creationix: ryah: should be start a nodejs users group for the area so I quit spamming the mailing list
[01:07] creationix: though it's no less useful than endless semicolon debate
[01:07] mape: mscdex: it only really changes the src of an iframe, so it never looses connection with the ws server
[01:07] mscdex: not sure if you could do something like detect the viewer's onload event, then send the current scroll value and stuff
[01:07] creationix: s/should be/should we/
[01:07] mscdex: in the new page is much longer than the one the viewer is still on
[01:07] cardona507: is anyone going to the GTUG campout next month on the 13th? I want to work on a project with HTML5 & node - anyone else interested?
[01:07] ryah: ACTION is thinking about doing a web socket library
[01:07] mscdex: and you've scrolled way down or something
[01:08] mape: it should sync every time I scroll
[01:08] mtodd has joined the channel
[01:08] ryah: i want a server that you can pump messages to the client - but set the messages as "non-necessary" or something
[01:08] ryah: that they get dropped if the socket backs up
[01:08] ryah: and have that be the default
[01:08] ryah: i think in most cases that's what you want
[01:09] creationix: ryah: yeah, especially for games
[01:09] creationix: you only care about the latest state usually
[01:09] ryah: right
[01:09] ryah: give updates as fast as possible until tcp backs up
[01:09] ryah: then you drop until you catch up
[01:09] dnolen_ has joined the channel
[01:09] mape: mscdex: If you wanna try it out just man in the middle inject http://mape.me:1338/static/external-js/123123/client.js in any website and you will show up in the list
[01:09] ryah: would work well for mape's thing
[01:09] creationix: ryah: go for it, but be warned it's a time sink
[01:10] ryah: tempted to just build it into node's http lib
[01:10] ryah: :)
[01:10] ryah: but .. no
[01:10] ryah: must retrain myself
[01:10] mape: isn't that pretty much udp?
[01:10] mape: only even more loose?
[01:11] ryah: mape, web sockets are tcp
[01:11] mape: yeah
[01:11] mape: but what you are talking about
[01:11] mjr_: udp is all crazy and can deliver things out of oder
[01:11] mjr_: order
[01:11] mjr_: But it does quite nicely frame individual messages
[01:11] ryah: yes,would be nice for sending such "mouse pointer is here" updates
[01:12] jakehow has joined the channel
[01:12] rauchg_: good job creationix on updating howtonode 
[01:12] creationix: rauchg_: thanks, I hope it was worth the work
[01:12] mape: Ok, people happy with the demo? (or should I scroll around aimlessly in hacker news a while longer?)
[01:13] jacoblyles has joined the channel
[01:13] mape: take that as a yes
[01:13] mscdex: heh
[01:14] mape: but yeah, this room should get somekinda market guy that can take cool ideas and make money out of them
[01:14] mjr_: Time to head home.  Good luck on your talk tomorrow, ryah.
[01:15] SubStack: mape: trying that
[01:15] mape: SubStack: yeah but I mean for all of us, or at least me.. Or well, mostly me ;)
[01:15] SubStack: heh
[01:16] _announcer: Twitter: "@hugoware you should see if you could port jLinq to Node.js :)" -- Javier Lozano. http://twitter.com/jglozano/status/19700735548
[01:16] SubStack: well if my startup is a runaway success we'll need lots of talent
[01:16] mape: Guess I'll have to be an "entrepreneur" like the cool kids
[01:16] mscdex: well, we have a stock market guy in here
[01:16] mscdex: :P
[01:16] SubStack: mscdex: oh really
[01:16] mscdex: tmedema i think
[01:16] mscdex: he's working with stock market apis anyway :p
[01:17] mape: for private stuff? if I recall correctly
[01:18] creationix: ryah: btw, where is the talk tomorrow?
[01:18] ryah: creationix: google campus, 10am
[01:18] ryah: want to go?
[01:18] creationix: ryah: yes
[01:19] isaacs: ryah: video?
[01:19] ryah: creationix: need to get you access
[01:19] SubStack: ACTION can't wait to live in the echo chamber that is silicon valley
[01:19] mape: ryah: nice :) should make them put it on google tech talks / youtube
[01:19] isaacs: ryah: oh, right, this is the google tech talk thing
[01:19] creationix: ryah: if you can that would be awesome
[01:20] softdrink has joined the channel
[01:20] ryah: creationix: i'll email you - isaacs, you want to come too?
[01:20] mape: demand the video recording and some grapes, just to show em whos the man
[01:20] creationix: isaacs: skip work, you're not far
[01:20] isaacs: ryah: if you can hook that up, yeah, sure
[01:21] pgriess: http://www.youtube.com/user/Domreis7337
[01:21] pgriess: ah
[01:21] pgriess: wrong window
[01:21] pgriess: heh
[01:21] pgriess: what's up everyone
[01:21] isaacs: hiya, pgriess 
[01:21] mape: isaacs: saw the mtime thingy?
[01:21] isaacs: mape: which thingy?
[01:22] mape: kinda broke the listing without it
[01:22] jwcooper has joined the channel
[01:22] isaacs: (er, i guess, no)
[01:22] mape: seems it isn't in the json anymore from npm repo
[01:22] mape: was earlier
[01:22] isaacs: oh, hrm... whoops.
[01:22] mape: hehe
[01:22] isaacs: you just need mtime?
[01:22] mape: yeah
[01:22] maushu: Tomorrow I will upload my pre-launch landing page. (Finally!)
[01:22] isaacs: ACTION recently pared down that info drastically
[01:22] sh1mmer: hm
[01:22] sh1mmer: not impressed with al3x's post
[01:23] mape: and the site is available at http://npm.nodejs.se/ now as well
[01:23] isaacs: sh1mmer: the impressive thing wasn't anything in particular that he said, but more the fact that he isn't ranting like a bloody lunatic.
[01:23] SubStack: maushu: what kind of product?
[01:23] maushu: SubStack, if your startup is a runaway success, my startup will eat it!
[01:23] sh1mmer: isaacs: hah
[01:23] SubStack: oh really!
[01:23] maushu: Omnomnomnom.
[01:24] SubStack: maushu: we shall see, we shall see
[01:24] sh1mmer: isaacs: I was directly insulted "If you look at who’s flocking to Node, it’s largely web developers who have been working in dynamic languages with what we could politely call limited performance characteristics"
[01:24] isaacs: sh1mmer: yeah... dynamic languages with limited performance characteristics.
[01:24] sh1mmer: Dear, al3x. Fuck you. My big site was bigger than your big site and it was written in PHP and Perl.
[01:24] phiggins: c'mon sh1mmer you fall right into that cat
[01:24] SubStack: like haskell
[01:24] maushu: SubStack, what kind of product? Hmm, virtual machines on the cloud.
[01:24] isaacs: sh1mmer: ie, php, ruby, python
[01:24] SubStack: oh really maushu oh really
[01:24] maushu: Just kidding.
[01:25] SubStack: k
[01:25] maushu: x3
[01:25] maushu: Nah, it's node.js hosting.
[01:25] sh1mmer: phiggins: Yahoo.com still trumps the Twitter homepage for scaling.
[01:25] SubStack: stackvm has a "don't say cloud" policy
[01:25] isaacs: sh1mmer: as someone well versed in the various backflips and contortions required to make php perform halfway decently, nodejs is AWESOME.
[01:25] SubStack: I fucking hate that term.
[01:25] sh1mmer: isaacs: indeed.
[01:25] phiggins: don't troll sh1mmer 
[01:25] maushu: SubStack, your startup feels cloudy.
[01:25] mape: isaacs: oh and check out http://nodejs.se/ (shamelessly plugging)
[01:25] phiggins: don't hate.
[01:26] SubStack: maushu: feeling is fine so long as it goes unspoken
[01:26] sh1mmer: isaacs: compared to any system I've used Node is awesome. My biggest personal worry is spaghetti code.
[01:26] creationix: mape: it only picked up half my tweets today :P
[01:26] SubStack: ACTION is subtle like that
[01:26] sh1mmer: phiggins: I'm just annoyed because al3x is well respected and he just trolled us by not raving.
[01:26] maushu: SubStack, when your startup is released I will link it on HN.
[01:26] maushu: With the title: "Virtual Machines on the Cloud!"
[01:27] SubStack: ACTION needs more HN karma so he can downvote
[01:27] isaacs: sh1mmer: there are things that some platforms can do very easily that nodejs can't do very easily.
[01:27] mape: creationix: yeah I know, you keep doing the wonky #node.js thing (and I blame twitter-node !), ryan uses #nodejs so I suggest you do as well ;)
[01:27] isaacs: sh1mmer: we're working on changing that, of course.
[01:27] mape: isaacs: thanks for the mtime 
[01:27] isaacs: mape: no problem, bro.
[01:27] rauchg_: SubStack: when your startups is released i'll uninstall vmware fusion 
[01:27] tmpvar has joined the channel
[01:27] SubStack: rauchg_: \o/
[01:27] sh1mmer: isaacs: I agree, but is that a characteristic of the platform of the age?
[01:27] creationix: mape: excuses!
[01:28] isaacs: sh1mmer: s/platform of/platform or/ ?
[01:28] mape: that's all I'm good for
[01:28] SubStack: rauchg_: soon enough you should be able to `npm install stackvm`
[01:28] sh1mmer: isaacs: yes.
[01:28] isaacs: sh1mmer: well, probably a little of both.  it's software, right?
[01:28] sh1mmer: Sure
[01:28] isaacs: sh1mmer: i mean, we can do anything.
[01:28] tmpvar: good evening
[01:29] mscdex: evenin'
[01:29] ditesh|cassini has joined the channel
[01:29] tpryme has joined the channel
[01:29] sh1mmer: isaacs: the last paragraph before the conclusion is maybe the most interesting.
[01:30] sh1mmer: I think the problem is that he's accusing us of saying that node should do all and everything for everyone.
[01:30] sh1mmer: because he's pulled a couple of aims off nodejs.org
[01:30] tpryme: Any work being done on any streamed protocol parsing libraries for node.js?
[01:31] creationix: sh1mmer: "anyone" who says "anytinh" is "everything" for "everyone" is crazy
[01:31] sh1mmer: creationix: right
[01:31] pquerna: SubStack: hmmm
[01:32] sh1mmer: so because a stated goal is to make it easy to right for scalability suddenly he's criticising us for trying to be a magic bullet
[01:32] creationix: sh1mmer: I do think that node's first market to consume will be the ruby crowd wanting to do massive concurrency
[01:32] mape: creationix: so that would be crazy for everyone?
[01:32] ryah: it's a very JVM mentality al3x touts, in my opinion. That you have one monolitic solution. I imagine modern programs as many little daemons all talking to each other.
[01:32] sh1mmer: I don't think anyone here would suggest you use node at scale without testing and optimizing and picking the right tool for the job.
[01:33] SubStack: I hate monoliths. So. Much.
[01:33] creationix: mape "some" generalizations are wrong "most" of the time
[01:33] JimBastard has joined the channel
[01:33] creationix: ;)
[01:33] mape: hehe
[01:33] creationix: sh1mmer: agreed
[01:33] mape: when did al3x get onto twitter?
[01:34] tmpvar: long time ago
[01:34] mape: early start?
[01:34] JimBastard: hey guys, i read about this node.js thing today and i wrote a little library. i was hoping somebody would be willing to download it and try it out? see if it actually works? its a http-proxy
[01:34] JimBastard: http://github.com/nodejitsu/node-http-proxy
[01:34] maushu: ...
[01:35] JimBastard: if anyone can actually install the npm package and run the demo, that would be amazing
[01:35] JimBastard: +20 internet points
[01:35] sh1mmer: mape: you know who al3x is right?
[01:35] pquerna: SubStack: is the stackvm stuff something that would connect to ec2 nodes?
[01:35] isaacs: ACTION just won 20 internet points
[01:35] tmpvar: JimBastard, looks like you could optimize it a bit
[01:35] JimBastard: sh1mmer: prob not, hes a swede
[01:35] mape: sh1mmer: not really, kinda but wouldn't buy him a beer if I met him
[01:35] SubStack: pquerna: would be possible
[01:35] isaacs: sh1mmer: so, who is al3x? seems like everyone follows the dude.
[01:35] JimBastard: tmpvar: how so? not using prototype?
[01:36] JimBastard: hes the banksimple guy
[01:36] sh1mmer: mape: isaacs: he was chief architect for twitter
[01:36] JimBastard: who was at that other place
[01:36] isaacs: sh1mmer: oh, ok
[01:36] sh1mmer: I think he was one of the odeo employees too
[01:36] tmpvar: JimBastard, by hooking the server's data event directly up to the client
[01:36] tmpvar: let me see if I can cook up an example
[01:36] mape: yeah, but when did he join? Is it his fault so many fail whails are dead?
[01:36] JimBastard: tmpvar: make sure it passes all the tests
[01:37] JimBastard: tmpvar: you are aware you have to buffer the events right?
[01:37] isaacs: testing is easy.  npm install vows; npm test http-proxy
[01:37] JimBastard: isaacs: should i make vows a depend?
[01:37] maushu: JimBastard, http://github.com/nodejitsu/node-http-proxy/blob/master/lib/node-http-proxy.js#L32
[01:37] pquerna: SubStack: how is windows done then? Implemented RDP?
[01:37] maushu: That doesn't seem to be doing anything.
[01:37] isaacs: JimBastard: meh.  it's not required for normal operation, so i'd say no.
[01:37] SubStack: pquerna: vnc backend on kvm
[01:38] SubStack: pquerna: also #stackvm
[01:38] pquerna: SubStack: ah, cool
[01:38] isaacs: JimBastard: i've considered having a "required for tests" dependency list, but i always pass since it's not a common need.
[01:38] JimBastard: maushu: thanks, fixed
[01:38] tmpvar: lol
[01:38] tmpvar: 2 tests
[01:38] tmpvar: k
[01:38] isaacs: JimBastard: at some point, i'll have to have a way for you to express what's required to make your tests pass, so i can do the CI thang.
[01:38] JimBastard: tmpvar: obviously, we need more coverage
[01:38] JimBastard: isaacs: <3, no homo
[01:39] mape: homo erectus
[01:39] mape: its all love here in node land
[01:39] maushu: JimBastard, don't thank me yet! I'm looking for your weakpoints FOR MASSIVE DAMAGE!
[01:40] mape: maushu: how is that startup going?
[01:40] maushu: Swell! Tomorrow I will upload the prelaunch landing page.
[01:40] mape: nice
[01:40] maushu: The one where you can write your email to be notified if you want.
[01:40] isaacs: JimBastard: you raise up my hopes, and then you dash them soundly, sir.
[01:41] JimBastard: back, sorry bumped version 
[01:41] JimBastard: lol
[01:42] tmpvar: ah, I misread it the first time through
[01:43] tmpvar: looks fine, now that I've forked, cloned, npm'd, opened in vim, etc 
[01:43] tmpvar: stupid eyes.
[01:43] maushu: isaacs, maybe next time you should read his nick more carefully. :p
[01:43] JimBastard: its cool tmpvar , does it work?
[01:44] JimBastard: did the demo run for you?
[01:44] KungFuHamster has joined the channel
[01:44] tmpvar: umm
[01:45] tmpvar: npm install node-proxy is fail
[01:45] tmpvar: i lie, it worked that time
[01:45] JimBastard: tmpvar: you really gotta lay off the sauce bro
[01:45] JimBastard: npm install http-proxy
[01:45] tmpvar: yeah it works
[01:45] isaacs: tmpvar likes to talk trash
[01:45] tmpvar: eh?
[01:45] JimBastard: did you get double raindbow?
[01:45] tmpvar: yeah
[01:45] isaacs: OH MY GOD
[01:46] JimBastard: I THOUGHT I SAW A TRIPPLE
[01:46] isaacs: DOUBLE RAMBO WHAT DOES IT MEANNNNNNNNNNNNNNNNNNNNNNNNNNN!?!?!?!?!????
[01:46] mape: that is just silly
[01:46] JimBastard: ahahaha
[01:46] mscdex: rambo?
[01:46] mscdex: :p
[01:46] mape: teletubbies
[01:46] mape: on PCP
[01:46] isaacs: it almost looks like a TRIPLE RAMBO!!
[01:47] isaacs: OH MY GOD
[01:47] Aria has joined the channel
[01:47] mape: rambow the best bow
[01:48] ryan_gahl: (just got the chance to read the scrollback and only have time for about $.01 of my $.02 available to say something about al3x's post)... I think he makes some very good points. That said, I happen to believe every problem of "scale" is eventually "easy" just as a matter of the principles of progress. It's all relative really. Basically, at some point in the next X years, something with the scale of Twitter will be push-button/
[01:49] benburkert has joined the channel
[01:49] JimBastard: ryan_gahl: having to scale is a really good problem
[01:49] markwubben has joined the channel
[01:49] pquerna: the word scale is turning into cloud
[01:49] JimBastard: i wish i had scaling problems
[01:49] ryan_gahl: right, but I'm saying his thesis is only correct if he qualifies it with an envelope of relativity
[01:49] mape: well isn't it "just" a matter of building the project in as small pieces as possible so you can move/scale/optimize them separatly
[01:50] steadicat has joined the channel
[01:50] JimBastard: pquerna: cloud computing + auto scaling = ????
[01:50] ryan_gahl: anyway, that's my penny
[01:50] mape: then each of them will eventually turn into a pain point but still easier then one big blob
[01:50] mape: JimBastard: expensive bills
[01:50] JimBastard: mape: gotta set the cap....
[01:50] mape: 2?
[01:51] JimBastard: aye
[01:51] pquerna: JimBastard: cloud computing + auto scaling + node.js = cloudkick cast
[01:51] mape: great, I'll write that down so we can use that for later
[01:51] pquerna: (did i say that?)
[01:51] JimBastard: pquerna: i might have it forked?
[01:51] JimBastard: :p
[01:52] ryan_gahl: it's kind of cool to see something like node being considered "low-level", yet it's based on a an interpreted language
[01:53] JimBastard: pquerna: you got any eta on getting something working?
[01:53] JimBastard: ACTION is reading the source again
[01:53] pquerna: JimBastard: its becoming a higher priority in a few weeks, having a few other time sink projects to finish first
[01:54] maushu: ...
[01:54] maushu: Someone from #redis went to ask something about node.js and redis since the nodejs channel just had 7 users.
[01:54] JimBastard: nice
[01:54] mape: hehe
[01:54] _announcer: Twitter: "I have a sys.debug line immediately before a failing line & the debug isn't printed out. In #nodejs sys.debug is supposed to be synchronous" -- James Sadler. http://twitter.com/freshtonic/status/19703315866
[01:55] mape: someone write a bot to greet people in #nodejs
[01:55] maushu: *sigh*
[01:55] Aria: Augh. #ruby vs #ruby-lang again.
[01:55] maushu: http://twitter.com/JustinCampbell
[01:55] maushu: I think its this guy.
[01:55] JimBastard: i know him
[01:56] mscdex: he's that justin campbell guy
[01:56] robotarmy has joined the channel
[01:56] JimBastard: HI robotarmy 
[01:56] JimBastard: WELECOME TO SKYNET
[01:56] maushu: !tweet @JustinCampbell You foo'! You went to the wrong channel! Go to #node.js (notice the dot)!
[01:56] ajpiano has joined the channel
[01:57] JimBastard: !tweet @JustinCampbell GET IN THE CHOPPA #NODE.JS NOT #NODEJS
[01:57] robotarmy: lol
[01:57] mscdex: he's going to come after you now maushu
[01:57] robotarmy: JimBastard:  thanks for the wake up
[01:57] mape: Aria: how is the parsing coming along? :)
[01:57] JimBastard: anytime robotarmy 
[01:57] maushu: BRING IT ON!
[01:58] mscdex: better have your pew pew pew ready
[01:58] maushu: ACTION arms his hand-held thermonuclear weapon.
[01:59] JimBastard: pew pew pew
[01:59] ryan_gahl: (very small church)
[01:59] maushu: ACTION jumps into his 360k tons BOLO.
[01:59] Aria: Hehe. Haven't had a chance to work on it again, stupid paying work, but it works. Been playing with making jquery work.
[02:00] maushu: ACTION parks the BOLO inside his Death Star.
[02:00] mape: :)
[02:00] jimt has joined the channel
[02:00] maushu: mscdex, I'm ready. Bring it on!
[02:01] aheckmann: issacs: when trying to publish my module to npm it just hangs. thoughts?
[02:01] dshaw has joined the channel
[02:01] aheckmann: isaacs: no error msg, just "not ok"
[02:03] wilmoore has joined the channel
[02:04] ajpiano has joined the channel
[02:05] _announcer: Twitter: "Finally tinkered with Node.js a little.  Definitely worth my play time." -- Evan Light. http://twitter.com/elight/status/19704050229
[02:06] DTrejo has joined the channel
[02:06] DTrejo: hey guys
[02:06] DTrejo: and gals
[02:07] DTrejo: I think node is entering a period where a bunch of people start questioning / arguing about it :)
[02:08] SubStack: first they ignore you...
[02:08] mape: guess that means people care
[02:08] SubStack: then you win!
[02:08] DTrejo: if you don't have any haters then you've failed :)
[02:08] DTrejo: not that anyone is hating
[02:10] softdrink has joined the channel
[02:12] akahn has joined the channel
[02:13] ryan_gahl: JimBastard hates all over the place
[02:14] _announcer: Twitter: "clean and robust reverse proxy for #node.js http://github.com/nodejitsu/node-http-proxy #nodejs #javascript double rainbow in ReadMe file." -- marak squires. http://twitter.com/maraksquires/status/19704652628
[02:14] SubStack: DTrejo: then php is a smashing success
[02:14] SubStack: I was going to say rails
[02:15] SamuraiJack has joined the channel
[02:15] SubStack: and I just did
[02:15] JimBastard: people have been hating on me since i was 5
[02:15] DTrejo: SubStack: well, it does have tons of people using it (php
[02:15] DTrejo: )
[02:15] JimBastard: at least thats as far back as i can remember
[02:15] ryan_gahl: you poor bastard
[02:15] SubStack: ACTION lays down the hate on jim
[02:15] JimBastard: go lay down the retweet on that last tweet
[02:15] JimBastard: twitter is stupid
[02:15] elliottcable: GET IN THE CHOPPA
[02:15] JimBastard: ACTION gets in
[02:16] elliottcable: ACTION flies away with JimBastard 
[02:16] JimBastard: double rainbowed
[02:16] elliottcable: I was *really* tempted to /quit after sending that
[02:16] elliottcable: but then I wouldn’t be able to see if JimBastard /quit too D:
[02:16] khug has joined the channel
[02:16] _announcer: Twitter: "Deliver real-time information to your users using node.js - http://bit.ly/9GGWr3" -- Rodrigo Faccini. http://twitter.com/digonez/status/19704803272
[02:17] ryan_gahl: if node == scalable/fast on 1 machine, then what's the name for the abstraction layer that scales nodes (machines) of node?
[02:17] ryan_gahl: document?
[02:18] ryan_gahl: system.js?
[02:18] ryan_gahl: double rainbow?
[02:19] JimBastard: ryan_gahl: broodmother
[02:19] JimBastard: ryan_gahl: ive been building it for 4 months
[02:19] ryan_gahl: meh
[02:19] pquerna: you mean scalable internet architectures
[02:19] pquerna: by theo
[02:19] ryan_gahl: not meh to your project, meh to the name :P
[02:20] DTrejo: I like that name
[02:20] DTrejo: reminds me of starcraft
[02:20] ryan_gahl: not a parallelism with node
[02:20] DTrejo: and the zerg
[02:20] JimBastard: theres a whole starcraft metaphor to it
[02:20] JimBastard: plus DoTa
[02:20] JimBastard: with drones and hive and carapace, etc
[02:20] DTrejo: with broodmother you'll soon control a swarm!
[02:21] ryan_gahl: but, node+node+node+node+node+node == broodmother?
[02:21] JimBastard: :-D
[02:21] JimBastard: ryan_gahl: its not like silver bullet time
[02:21] ryan_gahl: no, i'm just looking for the name that's obvious
[02:21] ryan_gahl: just a game
[02:21] pquerna: nodefest
[02:21] JimBastard: lol
[02:21] ryan_gahl: noderack
[02:21] JimBastard: broodmother controls many drones
[02:22] ryan_gahl: nodetown
[02:22] ryan_gahl: :)
[02:22] ryan_gahl: node != drone
[02:22] JimBastard: actually in my case, it does
[02:22] ryan_gahl: i get your analogy, looking for a better one (not for your project)
[02:22] JimBastard: each drone is a new node instance
[02:22] ryan_gahl: yep, i understand
[02:22] JimBastard: nodefarm
[02:23] ryan_gahl: yeah, already thought of that one too (domain is taken)
[02:23] ryan_gahl: that one's obvious
[02:23] ryan_gahl: nodecloud too
[02:23] JimBastard: yeah anyway, back to real work
[02:23] pquerna: nodeerdoodle
[02:23] mscdex: nodeville
[02:24] ryan_gahl: i like nodeville, nodetown, etc
[02:24] mscdex: nodevillage
[02:24] mscdex: lol
[02:24] ryan_gahl: nodestorm
[02:24] mscdex: nodevilla
[02:24] ryan_gahl: noderunner
[02:24] manveru: does anyone have some code that checks for the IIN range of credit cards instead of just the luhn checksum?
[02:24] JimBastard: nodeshitstain
[02:24] JimBastard: its arabic for awesome town
[02:25] mscdex: nodenyingit
[02:25] mscdex: :p
[02:25] ryan_gahl: nodeJimBastardRawks
[02:25] manveru: nodealicous?
[02:25] mscdex: inthenode
[02:25] manveru: nodælicous :)
[02:25] JimBastard: kid.js
[02:26] mscdex: KID.JS!
[02:26] manveru: no kidding...
[02:26] pquerna: nodenoodle
[02:26] pquerna: nodegetti
[02:27] ryan_gahl: OH NO I GOT ITTTTT
[02:27] ryan_gahl: broodmother!!!
[02:27] ryan_gahl: lol
[02:27] manveru: i like nodeghetti
[02:27] manveru: with lots of sugo.js
[02:27] mscdex: i like nodegeddy
[02:27] mscdex: :p
[02:28] manveru: nude.js
[02:28] mscdex: o_O
[02:28] manveru: adds a stripper to any website
[02:28] mscdex: manveru: made it remote with dnude.js
[02:28] mscdex: :>
[02:28] manveru: :D
[02:29] mscdex: rpc strippers
[02:30] ryan_gahl: just bought nodetown.com
[02:30] ryan_gahl: wee
[02:30] chilts: nodecode :)
[02:30] chilts: ah, you got it already
[02:30] chilts: ACTION was late to the suggestions party
[02:31] pnewhook has left the channel
[02:31] ryan_gahl: heh
[02:32] DTrejo: gangnode
[02:32] chilts: heh, gives me a new idea for a website too!
[02:32] DTrejo: nodegange
[02:32] mape: ryah: Are you drunk?
[02:32] ryan_gahl: here's another fun game... what domain do you own that you consider the coolest?
[02:32] DTrejo: *gang
[02:32] chilts: (not gangnode, but before that)
[02:32] ryan_gahl: mape: if you mean me no, and I'm not ryah
[02:32] softdrink has joined the channel
[02:33] chilts: ryan_gahl: x.geek.nz :)
[02:33] DTrejo: typo i think
[02:33] mape: ryan_gahl: I know and I don't mean you. Meant his tweet
[02:33] bradleymeck1 has joined the channel
[02:33] ryan_gahl: ohh, k, just cuz... you know... i get that
[02:33] DTrejo: ACTION wishes ryan_gahl's last name was first
[02:33] bradleymeck1: ello all
[02:33] ryan_gahl: i missed his tweet
[02:33] ryan_gahl: yo
[02:34] mape: "PHP, what a great project. A simple solution that solved/solves a problem for countless people."
[02:34] bradleymeck1: tmpvar you actually in here?
[02:35] bradleymeck1: phps simplicity is a strength, but it also is a pitfall for anything beyond a simple purpose, command line php... /shudder
[02:35] SvenDowideit has joined the channel
[02:36] DTrejo: bradleymeck1: is it bad practice to use node to execute command line stuff like curl etc for your app? Is it bad to use built-in *nix stuff?
[02:36] mape: DTrejo: might be an issue if you spawn to much stuff
[02:36] Aria: Heh. I say use it if you need it, but be aware of what dependencies you're creating -- if you control the platform and that's no problem, by all means!
[02:36] mape: like to many instances
[02:36] dgathright has joined the channel
[02:36] Aria: And there's a certain overhead for some things, of course, so don't shoot yourself in the foot. 
[02:37] tyler_ has joined the channel
[02:37] DTrejo: Aria: good point. Also, I noticed that I pass user generated data straight into some parameters for curl, oopsie. Good thing there won't be any malicious users in this case
[02:37] bradleymeck1: dtrejo its not bad practice, but you really need to know what you are asking, like dont curl on 5k child processes, but that should be self explanatory
[02:38] Aria: That said, for networking stuff, I'd probably use Node ;-)
[02:38] Aria: Rather than going external. It's what node is really good at.
[02:38] _announcer: Twitter: "@al3x good points, but nothing said nothing empirical as to why node won't scale large. #nodejs /cc @funkatron" -- RyanGahl. http://twitter.com/RyanGahl/status/19706333313
[02:39] DTrejo: it would be nice to hear from those "scaling big things" people and see what they have to say
[02:39] bradleymeck1: alex never really explained what is needed to aid scalability
[02:39] bradleymeck1: for clustering, small events = good, async = good, fd passing = good...
[02:40] bradleymeck1: but what about scaling is needed more than those?
[02:40] _announcer: Twitter: "Python + Django + buildout + fabric have completely spoiled me.  The excitement of node.js was pretty quickly killed by new software bumps." -- Jonathan Lukens. http://twitter.com/jonathan_lukens/status/19706448393
[02:40] manveru: i think he wants to use more than one cpu per process?
[02:41] _announcer: Twitter: "@al3x ...also, it feels a bit like saying "that tool you're building won't work in a factory", even though it probably will - #nodejs" -- RyanGahl. http://twitter.com/RyanGahl/status/19706534020
[02:42] bradleymeck1: manveru, shared memory spaces across cores are bad ideas generally
[02:42] bradleymeck1: it requires a lot of synchronization overhead, a lot
[02:42] manveru: yeah, but you can share by communicating
[02:43] Aria: ... And node is good at communication.
[02:43] bradleymeck1: its kinda like having 1 car and giving 2 ppl steering wheels but only letting on go left, and one go right
[02:43] Aria: I think Ryah's got a good point. Processes, not threads, are where the win is at.
[02:43] manveru: if go had more impressive performance, i could cite it :)
[02:44] bradleymeck1: single process intercommunication of OS level threads are you trying to cite?
[02:45] _announcer: Twitter: "@funkatron @al3x agreed. "easy network programming/concurrency" is a boon to building out the larger system, one would think  // #nodejs" -- RyanGahl. http://twitter.com/RyanGahl/status/19706836744
[02:45] bradleymeck1: i mean nothing is more dangerous than having a second cpu rummaging about your memory space
[02:46] bradleymeck1: thats why we use processes, to sandbox them
[02:47] dnolen_ has joined the channel
[02:47] manveru: bradleymeck1: nope, go uses multiple processors, it even allows to share memory, but that's not the way you should use it
[02:47] manveru: http://blog.golang.org/2010/07/share-memory-by-communicating.html
[02:48] mau2 has joined the channel
[02:48] _announcer: Twitter: "@durbin I've started to look at the @closure library too (terrible name?) but node.js has a ton of cool projects on github." -- Jeff Pelton. http://twitter.com/comster/status/19707010638
[02:48] manveru: that's just what you do when using multiple processes already, unless you use mmap
[02:49] mscdex: rackspace open sourced their stack?
[02:49] mscdex: :o
[02:50] bradleymeck1: manveru, not sure i understand, it seems to me just like memory management on shared memory
[02:51] cij_ has joined the channel
[02:54] bradleymeck1: do channels do something else besides pass resources? (idk go)
[02:55] manveru: bradleymeck1: they can buffer and block
[02:56] bradleymeck1: the buffering is interesting, not sure why i want it to block though (i presumed like a coroutine, saving stack state, etc)
[02:56] manveru: so, you could for example have an uuid generator on the other side that fills some channel buffer until there are 100 uuids
[02:57] manveru: then when the other side pops one uuid, the generator runs one cycle
[02:57] manveru: silly example, but hey :)
[02:57] bradleymeck1: but why block? why not just say fill a structure then wait for a request without blocking?
[02:58] manveru: only the generator is blocked
[02:58] manveru: because it's not needed
[02:58] bradleymeck1: i know but its still wait looping
[02:58] manveru: the scheduling is really efficient
[02:58] bradleymeck1: blocking on a stack w/o putting process into idle means the IP in asm must be saved along w/ the whole stack then reloaded
[02:59] bradleymeck1: the advantage is code is very tidy though, wonder if it could be masking something else on the back end
[03:00] manveru: when the channel is blocked, the other process can just be merged into the original
[03:00] bradleymeck1: the terminology of process i know cant merge, mmm
[03:00] manveru: heh
[03:01] manveru: yeah, it doesn't really use processes
[03:01] bradleymeck1: i presume its using coroutine stacks
[03:01] manveru: http://golang.org/doc/go_lang_faq.html#goroutines
[03:02] WALoeIII has joined the channel
[03:02] bradleymeck1: ah, so its using segmented coroutines
[03:03] manveru: yeah, pretty much
[03:03] manveru: sorry, i'm not an expert on this stuff :)
[03:04] bradleymeck1: ACTION nerds out on low level stuff
[03:04] manveru: i just found it much nicer to use than, say, green threads :)
[03:04] bradleymeck1: oh, heck ya
[03:04] chilts: I've been playing with Go too, am liking it at the moment, but have no use cases for it yet :)
[03:04] chilts: not that I can think of anyway
[03:05] manveru: i wrote some games with Go-SDL and Go-OpenGL
[03:05] chilts: nice :)
[03:05] _announcer: Twitter: "@funkatron @al3x very true. IMHO scaling (at any scale) has more to do with the assemblage of pieces at that tier... (cont.) #nodejs" -- RyanGahl. http://twitter.com/RyanGahl/status/19708198421
[03:06] _announcer: Twitter: "@funkatron @al3x  The better each tier scales within itself, the better the entire sytem scales. so #nodejs == A Good Idea for _that tier_" -- RyanGahl. http://twitter.com/RyanGahl/status/19708273515
[03:07] cataska has joined the channel
[03:07] elliottcable: Gah! How the hell do I use ndb?
[03:07] damienkatz has joined the channel
[03:07] damienkatz has joined the channel
[03:07] bradleymeck1: but yea, for clusters small evented systems are like drugs
[03:08] elliottcable: I tried --local, but I just get “Could not connect to host 127.0.0.1 on port 5858.  Will try again in 2 seconds.”
[03:08] bradleymeck1: i really wanna see some clusters come out soon
[03:08] manveru: heh
[03:08] manveru: i tried with connect clustering
[03:08] manveru: pretty impressive
[03:09] manveru: afaik it uses the fd passing
[03:09] bradleymeck1: nah, thats just multicore i thought
[03:09] manveru: oh, you mean cross-machine?
[03:09] elliottcable: ;_;
[03:10] manveru: hmh, yeah... i wish someone would write node-0mq soon :)
[03:10] matt_c has joined the channel
[03:11] elliottcable: nobody’s used the ndb? :x
[03:11] manveru: elliottcable: the what?
[03:11] elliottcable: node debugger
[03:11] elliottcable: manveru 3» http://github.com/smtlaissezfaire/ndb
[03:11] manveru: nope
[03:13] bradleymeck1: well someone could just wrap the 0mq header file
[03:14] jesusabdullah: Someday I might :)
[03:14] jesusabdullah: In fact I'd like to!
[03:14] jesusabdullah: but I've been BUSY
[03:14] jesusabdullah: and I DON'T KNOW C++
[03:14] jesusabdullah: :(
[03:15] elliottcable: is there any other debugging solution for node? :x
[03:15] bradleymeck1: yea, what os you on?
[03:15] elliottcable: jesusabdullah 3» do you know ANSI/ISO C?
[03:15] elliottcable: bradleymeck1 3» OS X
[03:15] jesusabdullah: elliottcable: Not really
[03:15] elliottcable: jesusabdullah 3» … oh. Damn.
[03:15] jesusabdullah: I've used c++ for some classes, but it was really basic stuff, y'know?
[03:16] jesusabdullah: The API is dead simple, though
[03:16] jesusabdullah: and I know where to find some examples of .node files
[03:17] jesusabdullah: and waf looks quite reasonable3
[03:17] jesusabdullah: so it's really just a matter of me finding the time to mess with it, y'know?
[03:17] jesusabdullah: at least, that's what I hope :)
[03:17] bradleymeck1: the eclipse debugger http://wiki.github.com/ry/node/using-eclipse-as-node-applications-debugger, trying to find the chrome debugger tut too
[03:17] elliottcable: oh gods eclipse :x
[03:17] elliottcable: I suppose ndb is unmaintained… *sighs*
[03:18] elliottcable: I wonder if I can plug gdb into it
[03:18] elliottcable: I know some dude wrote a Ruby plugin for gdb
[03:18] elliottcable: or, better yet, lldb
[03:18] bradleymeck1: http://github.com/dannycoates/node-inspector
[03:18] elliottcable: my problem doesn’t really seem to be within ndb, though
[03:18] elliottcable: because node just isn’t breaking when I pass --debug-brk
[03:18] elliottcable: as I understand it, --debug-brk is supposed to break as soon as Node starts
[03:19] bradleymeck1: ryah? ^
[03:19] donspaulding has joined the channel
[03:19] elliottcable: bradleymeck1 3» it looks like the Eclipse connection uses the same --debug-brk
[03:19] elliottcable: bradleymeck1 3» are you *using* the eclipse solution?
[03:21] bradleymeck1: i havent yet needed a debugger
[03:21] cataska has joined the channel
[03:21] bradleymeck1: even after like 4 months
[03:21] elliottcable: I’ve been avoiding it, but after spending the last six hours banging my head against a quite annoying, elusive bug…
[03:27] mtodd has joined the channel
[03:27] tpryme has joined the channel
[03:27] _announcer: Twitter: "Finally trying out #nodejs looks pretty sweet." -- Christian. http://twitter.com/euforic/status/19709745455
[03:28] ryah: bradleymeck1: ?
[03:28] bradleymeck1: elliotcable was asking about --debug-brk
[03:29] ryah: oh right
[03:29] creationix has joined the channel
[03:30] eday has left the channel
[03:31] _announcer: Twitter: "@jadedoto if you're interested in a project I've got some cool stuff in the pipeline. ;) considering rails or node.js on top of mongodb" -- Randy Luecke. http://twitter.com/me1000/status/19710022897
[03:32] EyePulp has joined the channel
[03:32] bradleymeck1: on a diff topic, the slashdot article on java's async io being slower seems off, i should try running the C++ equivalents 
[03:32] jesusabdullah: slower than what?
[03:33] _announcer: Twitter: "Interesting to find out Yahoo! is hiring node.js developers." -- Takaaki Kato. http://twitter.com/takaakikato/status/19710107022
[03:33] micheil has joined the channel
[03:33] bradleymeck1: slower than sync, the dmc should make that the opposite on the hardware level
[03:34] jesusabdullah: Hmm :S
[03:34] jesusabdullah: Maybe too much overhead for the particular problem?
[03:34] bradleymeck1: im thinking that
[03:34] jesusabdullah: I'm certainly not a concurrency expert, but that seems like a common theme
[03:35] jesusabdullah: It'd make sense if the processes were CPU-bound anyway
[03:35] bradleymeck1: it seems java.nio is a cluster to get working and im thinking all the sync work needed to get it running is causing the overhead
[03:35] jesusabdullah: hmm
[03:37] CIA-77: node: 03Ryan Dahl 07master * rb5b83b2 10/ lib/module.js : Fix --debug-brk; hacky solution - http://bit.ly/aPi16t
[03:37] ryah: elliottcable, bradleymeck1 ---^
[03:38] bradleymeck1: <3
[03:38] jesusabdullah: Awww :3
[03:38] bradleymeck1: or i could compare sync io in java threads vs async in node, has to be io bound model, since v8 is faster than java on cpu
[03:40] mindeavor has joined the channel
[03:40] damienkatz has joined the channel
[03:40] damienkatz has joined the channel
[03:40] steadicat has joined the channel
[03:42] mscdex: ooo another commit
[03:42] mscdex: watching it build 
[03:42] mscdex: :-D
[03:42] mscdex: nodebuilderrrrrrrrr!
[03:49] creationix: bradleymeck1: is v8 faster than the jvm?
[03:53] ditesh|cassini has joined the channel
[03:58] hassox has joined the channel
[04:00] rauchg_: is v8 faster than a plane?
[04:01] JimBastard: than a train?
[04:02] satori_: v8 is one faster than v7.
[04:02] SubStack: so much talk about how fast or slow computer programs are
[04:02] ajpiano has joined the channel
[04:02] SubStack: but there aren't any good units
[04:03] _announcer: Twitter: "Working on the Django Dash site & node.js (separately)." -- Daniel Lindsley. http://twitter.com/daniellindsley/status/19712173707
[04:04] satori_: Can anyone tell me why is node is called 'node'?
[04:04] JimBastard: satori_: caus its one node
[04:04] satori_: k. makes sense.
[04:06] jesusabdullah: a node in what?
[04:06] ryah: http://shootout.alioth.debian.org/u64/benchmark.php?test=all&lang=v8&lang2=java
[04:06] jesusabdullah: ...the network, I guess
[04:06] bradleymeck1: creationix v8 appears faster on teh shootout
[04:06] creationix: bradleymeck1: cool
[04:07] _announcer: Twitter: "great post about scaling and node.js http://al3x.net/2010/07/27/node.html" [ja] -- Toshihiro Shimizu. http://twitter.com/meso/status/19712399062
[04:07] jesusabdullah: where did the name v8 come from? the engine block config? Or the tomato drink?
[04:07] bradleymeck1: well ryahs shootout got diff, need to see which machine it was faster on
[04:07] satori_: lol. @ tomato drink
[04:07] bradleymeck1: jesusabdullah, node is a single eventloop node. v8 from the engine
[04:07] jesusabdullah: have to be honest, that was my first thought ever
[04:07] jesusabdullah: was v8 the drink
[04:08] jesusabdullah: bradleymeck1: I see!
[04:08] bourne has joined the channel
[04:08] bradleymeck1: creationix ^ see varied results, on x64 v8 is slower by a ways
[04:08] _announcer: Twitter: "Expresso for node.js is pretty nifty. I just hacked in a crappy patch to get the  Makefile to install into the bindir set by npm." -- James Halliday. http://twitter.com/substack/status/19712522921
[04:09] bourne: whoa, just came in late... v8 is slowed on 64bit than 32bit?
[04:09] jesusabdullah: SubStack: twitter? WAT
[04:09] SubStack: I KNOW RIGHT?
[04:09] creationix: bourne: makes sense, the 32-bit assembly is more mature
[04:09] jesusabdullah: FOR SHAME
[04:09] jesusabdullah: tisk tisk!
[04:10] SubStack: jesusabdullah: but if you make a tweet the robit will talk about it
[04:10] SubStack: I find this to be highly excellent.
[04:10] ryah: http://shootout.alioth.debian.org/u64/which-programming-languages-are-fastest.php
[04:10] creationix: ACTION just bought howtomeetup.org
[04:10] pgriess: creationix: any thoughts on adding a license to the spark README.md?
[04:10] jesusabdullah: SubStack: Nice bio XD
[04:10] creationix: pgriess: oh, sorry
[04:10] creationix: pgriess: it is in the code right?
[04:10] creationix: pgriess: I'll add it to the README too though
[04:10] pgriess: creationix: not sure, actually. checking.
[04:10] jesusabdullah: oh, you tweeted about the KO
[04:11] pgriess: creationix: yeah its in the code
[04:11] pgriess: creationix: i think our lawyers would prefer to see a license that purports to cover the entire project
[04:11] pgriess: creationix: even if that's just 1 file now
[04:11] creationix: pgriess: I'll add it to the README so it's easier to find.
[04:11] pgriess: creationix: much obliged
[04:11] bradleymeck1: whew java whoops v8s butt in that
[04:11] damienkatz has joined the channel
[04:11] damienkatz has joined the channel
[04:11] jesusabdullah: Hmm
[04:11] jesusabdullah: Twitter reminds me of ticker tape
[04:11] pgriess: creationix: also, i'm having an interesting time running spark -n NN under daemontools
[04:11] creationix: pgriess: hey if it means more people will use it!
[04:12] ryah: http://shootout.alioth.debian.org/u64/which-programming-languages-are-fastest.php?gcc=on&java=on&v8=on&hipe=on&python3=on&yarv=on&calc=chart 
[04:12] pgriess: creationix: daemontools sends the master process a SIGINT to shut down. of course that nukes the parent and orphans all the children. not exactly shutting down.
[04:12] creationix: pgriess: I'm not 100% sold that several processes sharing a port is a good way to scale
[04:12] pgriess: creationix: oh? do tell
[04:12] ryah: note logrithmic horizontal axis
[04:12] Vekz has joined the channel
[04:12] jesusabdullah: What happens when you run out of ports?
[04:13] ryah: creationix: why
[04:13] akahn has joined the channel
[04:13] jesusabdullah: Hmm! v8 holding its own
[04:13] ryah: *vertical
[04:13] jesusabdullah: Nice
[04:13] jesusabdullah: ACTION noted
[04:13] creationix: pgriess: well, it greatly simplifies your code when you don't have to worry about IPC for core logic, and you can scale a long ways by having specific worker processes doing the heavy lifting
[04:13] pgriess: creationix: a real app will be running on multiple boxes anyway (for redundancy if not perf)
[04:14] creationix: I mean a single hello-world app can handle 10k req/sec
[04:14] ryah: creationix: indeed
[04:14] pgriess: creationix: this is a problem you have any in all but toy situations
[04:14] dnolen_ has joined the channel
[04:14] creationix: pgriess: true, but then the sharing port trick doesn't help
[04:14] creationix: but I guess if you're syncing state externally then maybe it helps
[04:14] pgriess: creationix: if you can't rely on being in the same address space, why not run multiple procs on the same host?
[04:14] creationix: same address space?
[04:15] creationix: not quite sure what that means
[04:15] pgriess: creationix: e.g. handling all reqs in a single process
[04:15] creationix: exactely
[04:15] bourne: creationix / pgriess : how are you binding multiples procs to the same port
[04:15] pgriess: creationix: sorry lame hacker jargon
[04:15] JimBastard: routing table + multiple load balancers + hive = win
[04:15] JimBastard: ^_^
[04:15] creationix: bourne: through some awesome patch that pgriess did and helpers in my spark launcher
[04:15] SamuraiJack has joined the channel
[04:15] pgriess: creationix: so if you need to deal w/ your app running in multple processes anyway, why not run those multiple processes on the same box?
[04:16] bourne: pgries: sounds interesting, could you link me?
[04:16] creationix: pgriess: well, the less nodes to sync the less ipc overhead
[04:16] creationix: once per machine isn't bad
[04:16] pgriess: bourne: http://developer.yahoo.net/blog/archives/2010/07/multicore_http_server_with_nodejs.html, http://www.sitepen.com/blog/2010/07/14/multi-node-concurrent-nodejs-http-server/
[04:16] creationix: but since it's so easy to do, I added it to spark anyway
[04:16] bourne: pgriess: thanks
[04:16] creationix: it does make hello world benchmarks faster
[04:17] pgriess: creationix: i guess i don't know why you're claiming that an app could never need mor than 1 CPU's worth of horsepower
[04:17] pgriess: creationix: that's what this argument comes down to, afaict
[04:17] creationix: pgriess: no, I'm saying that most apps will never need to, some do, like the hello-world benchmark
[04:17] jesusabdullah: I'm supposedly running simulations on, oh, 4x5 processors right now
[04:17] creationix: depend on your use case
[04:17] jesusabdullah: was supposed to be 4x6
[04:18] pgriess: creationix: ok, so for those that do need > 1 cpu, running multiple node instances on the same box seems a reasonable thing to do, no?
[04:18] pgriess: creationix: that's all i'm getting at. for users who need the horsepower, this is a reasonable way to go
[04:19] creationix: pgriess: of course, but for a lot of cases, I think it's better to split the work out logically using specific workers than to split it all evenly across clones of the same app
[04:19] jesusabdullah: Man I really need to make a node-based mapreduce framework
[04:19] jesusabdullah: I really want to do this
[04:19] jesusabdullah: :/
[04:19] pgriess: creationix: sure, if you need the affinity for something. but you pay a penalty for that affinity, whether in increased configuration / management, or in perf
[04:20] ryah: pgriess: it makes people happy anyway to feel like they can scale to multiple cpus :)
[04:20] bradleymeck1: one per core process per core seams reasonable, dont think v8 does anything fancy for multicores like pipelines
[04:20] chilts: jesusabdullah: I have written a nice small queueing system and am starting doing a notification system :)
[04:20] chilts: very simple like
[04:20] jesusabdullah: chilts: Link? Open source?
[04:20] jesusabdullah: I would be interested in this
[04:20] creationix: pgriess: don't misunderstand, I just don't want people to think it's the only option
[04:20] joshdulac has joined the channel
[04:20] pgriess: creationix: fair enough
[04:20] chilts: jesusabdullah: http://github.com/appsattic/sensi
[04:20] jesusabdullah: Awesome
[04:20] creationix: I think sharing a port is incredibly fast for a lot of uses
[04:20] chilts: I think it needs some refactoring
[04:20] jesusabdullah: Figures XD
[04:20] jesusabdullah: My current node project needs massive refactorings
[04:21] chilts: and I think I'll change the license to be more liberal I guess
[04:21] pgriess: ryah: i like to make people happy. i'm like a clown.
[04:21] jesusabdullah: well, refactoring of a refactoring :P
[04:21] ryah: creationix: if you need to load balnce a bunch of cores - it's a good way to go
[04:21] ryah: vs proxying connections
[04:21] ryah: most people will not need that
[04:21] jesusabdullah: It also depends on what you're doing--some problems are kinda embarassingly parallel after all
[04:22] ryah: eh
[04:22] creationix: of course, proxying is almost always a bad idea, that's not what I'm talking about
[04:22] chilts: jesusabdullah: I should update the docs too :)
[04:22] chilts: oopse
[04:22] ryah: pgriess: me too
[04:22] creationix: pgriess: README updated!
[04:22] chilts: and package it for npm
[04:22] pgriess: creationix: lawyers, engage!
[04:22] jesusabdullah: *nod*
[04:22] bradleymeck1: give me some cuda primitives and lemme go
[04:22] jesusabdullah: pew pew!
[04:22] creationix: pgriess: oops, push fail
[04:23] _announcer: Twitter: "Node # reddit-http-proxy - full featured HTTP reverse proxy node.js (ReadMe contains double rainbow) submitt ... http://bit.ly/aqivYD # rulez" [lt] -- REDDITSPAMMOR. http://twitter.com/REDDITSPAMMOR/status/19713428796
[04:23] jesusabdullah: lolwat
[04:23] joshdulac: that is the worst tweet ive ever seen
[04:23] jesusabdullah: Yeah, it's definitely up there
[04:23] elliottcable: ryah 3» I love you forever :D
[04:24] elliottcable: bradleymeck1 3» and I love you for hilighting ryah :D
[04:24] bradleymeck1: awesome i post some code from work and forget to run git add .
[04:24] creationix: pgriess: ok, its there this time
[04:24] jesusabdullah: !tweet @REDDITSPAMMOR Show some pride in your tweets. Stand up straight!
[04:24] pgriess: creationix: so would it be fair to say that addressing shutdown via SIGINT to the master process is not super high on your list of priorities? ;)
[04:24] creationix: pgriess: no, but tj wants it
[04:24] ryah: creationix: so, if you're in the camp that needs to scale beyond one process - arguably you probably aren't - and you happen to have a machine with a couple cores
[04:24] creationix: you're welcome to submit a patch, should be pretty easy
[04:25] pgriess: creationix: yeah, but can't do that until i get the cla done. if tj isn't going to get around to it for a week or so, i'll prob just patch locally and then submit once i've got the cla signed
[04:26] jesusabdullah: CLA?
[04:26] jesusabdullah: Is that the paperwork thing?
[04:26] creationix: pgriess: I thought you already submitted it
[04:26] pgriess: jesusabdullah: contributor license agreement
[04:26] creationix: pgriess: ok, what do you want it to do?
[04:26] pgriess: creationix: nah, not yet. its a long story, but not yet.
[04:26] jesusabdullah: Ah, so what I thought then
[04:27] jesusabdullah: ACTION isn't feeling eloquent
[04:27] pgriess: creationix: if the master processes receives a SIGINT, it should shut down its children and then itself
[04:27] creationix: pgriess: ok, sounds easy enough, I'll try it
[04:27] pgriess: creationix: if you don't need it, don't sweat it. happy to do it myself, but i just won't be able to contrib back for a week or two
[04:28] creationix: so I listen for "sigint" on process?
[04:28] bradleymeck1: creationix are you guys setting processor affinities for your programs that spawn out multiple processes?
[04:28] creationix: bradleymeck1: I have no clue what that means
[04:28] pgriess: bradleymeck1: no
[04:28] creationix: ok, I have a clue, but that's about it
[04:29] pgriess: bradleymeck: just a straight vfork() + execve()
[04:29] bradleymeck1: k
[04:29] creationix: is that where you choose what core to run on?
[04:29] _announcer: Twitter: "@smtlaissezfaire it looks like it was a Node.js issue. @ryah fixed it with http://github.com/ry/node/commit/b5b83b! :D" -- ell.io. http://twitter.com/elliottcable/status/19713830938
[04:29] bradleymeck1: yes
[04:30] creationix: pgriess: should I send the children SIGINT or SIGTERM ?
[04:30] bpot has joined the channel
[04:31] pgriess: creationix: that's a good question. i'm not an expert on POSIX signal semantics. 
[04:31] creationix: well, I'll to SIGTERM for now then
[04:31] creationix: it's easy enough to change
[04:31] pgriess: creationix: maybe just mirror the signal out (so children get SIGINT as well -- node will die on it anyway)
[04:31] pgriess: creationix: and then exit() in the parent
[04:31] creationix: hmm, the examples for kill use SIGHUP
[04:31] creationix: but I guess any of those should kill it
[04:31] pgriess: creationix: by dfeault, almost all signals are deadly when received
[04:31] pgriess: creationix: yeah
[04:32] pgriess: creationix: unless the app is doing specific things w/ signals, it won't matter
[04:32] pgriess: creationix: for your average http app, i can't image that's the case
[04:32] bradleymeck1: i should make some stuff for checking cpu count and assigning process to a cpu set
[04:33] pgriess: bradleymeck1: sounds cool. what system calls exist for that?
[04:33] bradleymeck1: sysctl and sched_setaffinity
[04:33] bradleymeck1: hw.ncpu is the ctl i believe
[04:33] creationix: bradleymeck1: how would that help, optimize L1 and L2 caches?
[04:34] lachlanhardy has joined the channel
[04:34] bradleymeck1: not sure, but since node is largely singlethreaded im thinking it might keep context switches from going across cpus, would have to test, still useful otherwise to say bind a child to a single cpu
[04:35] mjijackson has joined the channel
[04:35] jesusabdullah: YES there are actual results for searching the #twittershitter label
[04:35] creationix: pgriess: should I forward SIGHUP and SIGTERM to the children too?
[04:35] creationix: or do you just need SIGINT
[04:36] pgriess: creationix: i think i just need sigint
[04:36] creationix: pgriess: what's the use case
[04:36] creationix: when I control+c the children die without the patch
[04:36] pgriess: we use daemontools to start / stop / restart-on-crash our processes
[04:36] creationix: ahh, that makes sense
[04:37] pgriess: creationix: daemontools seems to use SIGINT (i should check tho) to kill the one process that it knows about (it manages only a single process, not its children)
[04:37] pgriess: creationix: the managed process exits, children live on
[04:37] pgriess: creationix: so shutdown doesn't work
[04:37] creationix: hmm, zombies
[04:37] pgriess: creationix: yeah. look out.
[04:37] creationix: so how can I test this without installing daemontools
[04:37] pgriess: creationix: sigint is the chainsaw to use on these particular zombies
[04:37] pgriess: creationix: just send a sigint to the master process and make sure they all die
[04:38] elliottcable: ndb is neat :D
[04:38] elliottcable: exactly what I needed!
[04:38] jesusabdullah: Awesome!
[04:38] damienkatz has joined the channel
[04:38] damienkatz has joined the channel
[04:38] jesusabdullah: I should try it!
[04:39] elliottcable: jesusabdullah 3» do it!
[04:39] elliottcable: jesusabdullah 3» clone, then ./bin/ndb --local a/node/file.js
[04:39] elliottcable: standardish gdb commands; no display though )-:
[04:39] janne has joined the channel
[04:40] freshtonic: creationix: I have been running node on quad core machines (4 node proceses) each bound to a different port and then use iptable round robin rules to redirect port 80 to each of the other 4 ports
[04:40] creationix: freshtonic: that's one way to do it
[04:40] creationix: with this port sharing you don't need the round-robin
[04:41] freshtonic: it's handy if you don't want to deal with dealing with master/slave processes and signal handling semantics
[04:41] creationix: freshtonic: but you still have to handle the 4 processes
[04:41] creationix: I don't need the master process once the children are created
[04:41] pgriess: nite all
[04:41] creationix: pgriess: night, I'ma bout to push the patch
[04:41] freshtonic: creationix: what are you using to monitor the processes?
[04:41] creationix: enjoy in the morning
[04:42] pgriess: creationix: awesome. i'll give it a shot tomorrow and let you know how it goes
[04:42] creationix: freshtonic: I use upstart on my linux boxes
[04:42] tmpvar: im here now.. eh
[04:42] freshtonic: creationix: right, makes sense
[04:43] creationix: freshtonic: http://howtonode.org/deploying-node-with-spark
[04:43] jesusabdullah: What's upstart?
[04:43] freshtonic: creationix: so you have upstart launching the master process, which spawns N more (1 per core) and then the master quits?  How do you handle failures of individual child processes?
[04:43] creationix: jesusabdullah: it's a new version of init.d
[04:43] jesusabdullah: Oh, okay
[04:43] creationix: freshtonic: I don't yet, but I'll add monitoring in the master process
[04:43] freshtonic: creationix: checking out the link...
[04:43] creationix: it's on my todo list
[04:44] creationix: freshtonic: also with the master-slave combo, you can monitor for code changes and restart the children when code changes
[04:44] creationix: great for development mode
[04:44] creationix: also on my TODO list
[04:44] shreekavi has joined the channel
[04:44] freshtonic: creationix: but in development mode, you probbaly don't need the multicore setup anyway eh? :)
[04:45] freshtonic: creationix: spark looks nice.  Will consider using , thanks.
[04:45] creationix: freshtonic: nope, but it's good to test with at least two to make sure you're not dependent on local state
[04:45] creationix: if you plan on deploying to multiple cores
[04:45] creationix: and the auto-restart will be a nice feature
[04:45] creationix: even if it's just one master and one child
[04:46] tyler_: how do i get the payload on a request object for POST?
[04:46] tyler_: i don't see any properties for it in sys.inspect(req);
[04:46] freshtonic: creationix: true.
[04:48] ashleydev has joined the channel
[04:48] creationix: tyler_: correct
[04:49] creationix: tyler_: you have to listen for "data" and "end" events on the req object
[04:49] creationix: and build it yourself
[04:49] mikeal has joined the channel
[04:49] tyler_: creationix, awesome thanx
[04:49] creationix: tyler_: or use connect with the bodyDecoder middleware
[04:49] creationix: node is really low level
[04:49] creationix: connect brings it up a couple levels of abstraction
[04:50] creationix: tyler_: http://howtonode.org/connect-it
[04:50] tyler_: creationix, sweet thanks
[04:50] creationix: tyler_: no problem
[04:50] freshtonic: creationix: speaking of connect & bodyDecoder (converting my app to latest expressjs as we speak)... I'm having trouble getting at the post params
[04:51] creationix: freshtonic: I'm afraid I don't know much about express, but I can try
[04:51] tpryme: freshtonic: You have to include the bodyDecoder module
[04:51] creationix: tpryme: does express not include it for you?
[04:51] maqr: freshtonic: i wonder if that's still the same bug... put the bodyDecoder call in the constructor instead of the use() call, and see if that fixes it
[04:52] maqr: if it does, yell at tj :P
[04:52] freshtonic: from reading the documentation, it would seem that I app.use(connect.bodyDecoder()) and then on a POST I should see request.body ... except I don't
[04:52] tpryme: freshtonic: and then use req.param("body_param_name");
[04:52] creationix: freshtonic: I do know that with body decoder you will only see request.body if it's able to decode properly
[04:52] creationix: but there should always be req.rawBody 
[04:53] creationix: if you have the body-decoder
[04:53] tpryme: creationix: it doesn't include it automatically
[04:53] freshtonic: maqr: creationix: thanks, will try your suggestions
[04:53] maqr: creationix: i hit a bug a while back with the routing, which i thought tj fixed, where you had to put it in the constructor instead of with use()... i'm not sure if he patched it, i thought he did, but maybe it's not in npm or something
[04:53] tpryme: creationix: at least not on the release i was using last week
[04:53] creationix: tpryme: I think express should include it, but I don't know
[04:53] _announcer: Twitter: "thoughtful critique of Node.js by @al3x http://bit.ly/b6M3B0 -- yes, it provides one step (out of 100) in the journey towards scalability." -- Kent Beck. http://twitter.com/KentBeck/status/19715293815
[04:53] creationix: I did add a helper to raw connect that makes it almost as high level as express
[04:53] creationix: Connect.createApp
[04:53] tpryme: creationix: i struggled with the same body extraction question for over an hour
[04:53] jesusabdullah: creationix: Nice article on connect so far
[04:53] tpryme: creationix: before realizing that wasn't included
[04:54] creationix: has anyone tried Connect.createApp (vs createServer)?
[04:54] creationix: it's documented in the spark article http://howtonode.org/deploying-node-with-spark
[04:54] dannycoates has joined the channel
[04:54] creationix: well, was before I deleted a lot of prose
[04:54] creationix: now it's just used
[04:55] creationix: http://github.com/senchalabs/connect/blob/master/lib/connect/index.js#L307
[04:55] jesusabdullah: ACTION rubs chin
[04:55] _announcer: Twitter: "Alex Payne on Node.js and the difference between being fast and being scalable: I wish I was half as good a writer ... http://awe.sm/58mor" -- linklog. http://twitter.com/linklog/status/19715415375
[04:55] creationix: it includes a bunch of stuff by default and takes a router app
[04:55] creationix: including bodyDecoder
[04:56] SubStack: all the noders down in nodeville liked callbacks a lot
[04:56] SubStack: but the alex who lived just north of nodeville did not
[04:56] jesusabdullah: Dr. Seuss he ain't ^^
[04:57] creationix: SubStack: did you just now read the article? or just been thinking about it?
[04:57] SubStack: nah just saw the tweet, read it earlier
[04:57] creationix: oh, hah, I tune out announcer and don't even see it sometimes
[04:57] freshtonic: member:maqr: member:creationix: turned out that once I put the call connect.bodyDecoder() in the constructor, it all worked fine :)
[04:58] freshtonic: argh, forgive the copy and paste crap
[04:58] creationix: np
[04:58] maqr: creationix: we're clearly in a secret club
[04:58] freshtonic: maqr: hah
[04:58] tpryme: creationix: What are the major differences btwn express and that?
[04:58] freshtonic: crappy IRC client copy and paste rubbish.
[04:58] creationix: tpryme: honestly I don't know.  I think express has more conventions and defaults
[04:59] tpryme: creationix: I've been meaning to look into the express code this weekend. And then decide whether I needed it or not.
[04:59] maqr: freshtonic: are you working out of express master btw?
[04:59] creationix: and a minimal view interface
[04:59] freshtonic: maqr: no, I'm in 1.0.0beta2
[04:59] maqr: creationix: you srsly need to make tj fix that in whatever version people are using, because i've seen a lot of people ask about that bodyDecoder thing
[04:59] tpryme: creationix: What are you using for orm - node-persistence?
[05:00] creationix: btw, connect head has a different router api than the released version
[05:00] creationix: tpryme: I wish, that project was a stillbirth
[05:00] freshtonic: creationix: does tj work for you or something? (regardin maqr's comment)
[05:00] creationix: freshtonic: we're coworkers
[05:00] freshtonic: creationix: ah, makes sense. :)
[05:00] tpryme: freshtonic: Did you get things working?
[05:01] creationix: tpryme: I use nStore most recently
[05:01] creationix: but it's hardly an orm
[05:01] freshtonic: tpyrme: all good now.  bodyDecoder working fine when specified in createServer()
[05:01] creationix: http://github.com/creationix/nstore
[05:01] coobr has joined the channel
[05:01] creationix: yeah, someone should file a ticket on express's github
[05:01] creationix: tj is pretty good about responding to those
[05:01] freshtonic: creartionix: I'll do it now...
[05:02] tpryme: creationix: What was the motivation to create something new as opposed to creating a client lib for redis or tokyo cabinet?
[05:02] jesusabdullah: Man I am having a Hell of a brain fart
[05:02] creationix: tpryme: I wanted something with no dependencies
[05:02] creationix: that would just work with nothing but a bunch of js and node
[05:02] creationix: and implementing a database is a good exercise for node
[05:03] tpryme: creationix: Do you know if anyone is working on a model layer so you write once for both the server and client side? I know that's one of the promises of using both js on front and back.
[05:03] maqr: http://github.com/visionmedia/express/issues/issue/345
[05:03] creationix: tpryme: I think geddy has that, we may eventually have it at work, but it's a ways off
[05:03] jesusabdullah: Auugh
[05:03] jesusabdullah: Found it
[05:04] creationix: tpryme: you want to share validations and stuff like that right?
[05:04] coobr has joined the channel
[05:04] isaacs has joined the channel
[05:04] tpryme: creationix: I was thinking even more than that long-term
[05:04] freshtonic: creationix: done http://github.com/visionmedia/express/issues#issue/377
[05:04] tpryme: creationix: server-to-client bindings over comet maybe
[05:04] maqr: tpryme: i don't know about the model, but i've got client and server side templates that are the same
[05:05] creationix: tpryme: why comet?
[05:05] freshtonic: gargh, duplicate....
[05:05] maqr: tpryme: oh, i see what you mean now, that's probably hard to do
[05:05] tpryme: creationix: For collaborative apps
[05:05] tpryme: which are most apps of the future
[05:06] creationix: tpryme: yeah, I would love something like that
[05:06] tpryme: creationix: So if user B changes a cell in a spreadsheet, user A's cell changes client side as well
[05:06] tpryme: creationix: I was thinking the best way to implement that is as a dsl + compiler
[05:06] creationix: tpryme: how would server-side re-validation work into that?
[05:06] creationix: tpryme: nah, javascript is expressive enough
[05:06] creationix: no need for another language
[05:07] maqr: tpryme: are you aware of any solutions for that in other langauges?
[05:07] maqr: i don't think i've heard that proposed before, outside of like soap or something
[05:07] tpryme: creationix: see asana.com/luna
[05:07] micheil: tpryme: I'd use websockets.
[05:07] creationix: socket.io
[05:07] hassox has joined the channel
[05:07] micheil: pah!
[05:07] creationix: micheil: :P
[05:07] micheil: trust tim to say that.
[05:07] micheil: node-websocket-server's better :P
[05:08] tpryme: micheil: sorry i use comet and websockets almost interchangeably lang-wise
[05:08] statim has joined the channel
[05:08] creationix: well long-poll is pretty nice too
[05:08] creationix: and works on more devices
[05:08] creationix: like iPads
[05:09] maqr: micheil: oh, i didn't even see you here... you're hooking up a rode to an canon? shooting a movie or something? :p
[05:09] creationix: tpryme: so compile luna to js?
[05:09] creationix: that could be fun
[05:10] tpryme: creationix: luna compiles to other languages including js.
[05:10] tpryme: creationix: But the idea is write a simple dsl similar to luna that compiles to js + node.js code
[05:10] sh1mmer: ACTION trying to pick a good datastruct
[05:10] micheil: maqr: cannon XLR is a type of cable
[05:10] creationix: sh1mmer: what for?
[05:11] maqr: micheil: ohh, i've never heard it termed that before, i've always just heard it as 'XLR'
[05:11] sh1mmer: creationix: dns
[05:11] micheil: maqr: yeah, picked up the name of cannon from an audio geek I worked with
[05:12] maqr: micheil: ah, makes sense now that i see it on wikipedia :)
[05:13] creationix: sh1mmer: no clue, though I just bought a domain if you want to test a domain that's only halfway propagated howtomeetup.org
[05:13] JimBastard has joined the channel
[05:14] JimBastard: mailing list exploding today!
[05:14] JimBastard: new projects all around!
[05:14] creationix: yeah, it's been a busy day
[05:15] _announcer: Twitter: "node.js is worth learning the design point is very beautiful ... api" [zh-CN] -- aki. http://twitter.com/aki_xavier/status/19716545092
[05:16] freshtonic: does anyone know what the equivalent of a 'before' filter is connect (or express). Express < 1.0.0beta1 had 'before' but seems to have gone
[05:16] tpryme: JimBastard: Any cool ones?
[05:16] JimBastard: well
[05:17] JimBastard: i dunno, do you know who these guys are? http://github.com/nodejitsu/
[05:17] JimBastard: i saw that reverse proxy thing, double rainbowed
[05:17] tpryme: JimBastard: I think they're a team on node knockout
[05:17] JimBastard: cool
[05:19] daniellindsley has joined the channel
[05:19] creationix: ok, I'm off to bed, you east-coasters should already be asleep
[05:19] creationix: ;)
[05:19] maqr: :o
[05:20] jesusabdullah: I heard he once held an opponent's hand
[05:20] JimBastard: have you not heard? no one sleeps in nyc
[05:20] jesusabdullah: in a jar of acid
[05:20] jesusabdullah: at a party
[05:20] creationix: yeah, when I was there with JimBastard we stayed up all night
[05:20] creationix: I remember
[05:20] creationix: g'night
[05:20] JimBastard: hee hee
[05:22] isaacs: JimBastard: lol @ "do you know who these guys are"
[05:22] isaacs: see, i can't play that game, cuz i use my name everywehre.
[05:22] JimBastard: too bad your name isnt on that repo :-(
[05:22] jesusabdullah: XD
[05:22] JimBastard: its fun having multiple personalities
[05:23] JimBastard: you can just ngaf all the time
[05:23] _announcer: Twitter: "I&#39;m looking for a team tightened node.js knockout http://nodeknockout.com/ Kitsu" [ja] -- Toshihiro Shimizu. http://twitter.com/meso/status/19717020730
[05:27] BryanWB has joined the channel
[05:27] _announcer: Twitter: "Got my first #node.js program working" -- Stephan Schmidt. http://twitter.com/codemonkeyism/status/19717242523
[05:28] _announcer: Twitter: "Interesting comments on node.js and scaling http://al3x.net/2010/07/27/node.html" -- Mac. http://twitter.com/wmacgyver/status/19717277044
[05:29] matt_c has joined the channel
[05:32] bradleymeck1 has joined the channel
[05:33] _announcer: Twitter: "node.js knockout I&#39;m registered for one team, and that people want to do that with anyone? Any ideas what to make but completely blank. http://nodeknockout.com/teams/16dc474c7393085a51020000" [ja] -- Toshihiro Shimizu. http://twitter.com/meso/status/19717560883
[05:37] bradleymeck1 has left the channel
[05:38] ChrisPart has joined the channel
[05:39] mtodd has joined the channel
[05:40] tyler_ has joined the channel
[05:42] jansc has joined the channel
[05:44] sudoer has joined the channel
[05:48] _announcer: Twitter: "@sh1mmer @izs where? I want in. Bring it to @Node.js :D" -- ell.io. http://twitter.com/elliottcable/status/19718321157
[05:48] jesusabdullah: I think my KO group has a plan already, actually
[05:48] hassox has joined the channel
[05:48] elliottcable: isaacs, sh1mmer 3» that means you :3
[05:48] isaacs: wait wut?
[05:49] isaacs: haha, oh, there it is
[05:49] elliottcable: isaacs 3» tweet tweet
[05:49] elliottcable: I have 4 hours to kill while this damn SCII downloads :x
[05:49] sh1mmer: elliottcable: I think the mailing list proves that public forums aren't always the best place to talk about stuff
[05:49] sh1mmer: :P
[05:49] sh1mmer: I was just enjoying the conversation
[05:50] elliottcable: sh1mmer 3» I don’t use mailing lists, so I think your point passes me by…
[05:50] elliottcable: at the very least, take it to a private channel on IRC so I can tag along? :x
[05:50] sh1mmer: elliottcable: you missed the joy of the semicolon debate
[05:50] elliottcable: damn. v.v
[05:52] elliottcable: ugh, 6 hours. Damnit, Blizz, why does it have to be a torrent?
[05:52] isaacs: wasn't much of a debate, really
[05:52] elliottcable: and their webseed is only giving me 500KB/s
[05:52] isaacs: elliottcable: summary: "why?"  "cuz"  "yeah, guess that makes sense"
[05:52] bean0r1___ has joined the channel
[05:53] bean0r1___: do i have to close the stream after i handled a connection?
[05:53] bean0r1___: my node app has much open sockets
[05:53] elliottcable: isaacs 3» why what? Which side were you arguing for? :3
[05:53] sh1mmer: isaacs: you had an excellent point. my project. i win. :D
[05:53] isaacs: haha
[05:53] elliottcable: ryah 3» I can’t thank you enough for that one line change. I wish smt was in here as well so I could thank him. `ndb` is invaluable, in the literal sense of the word :O
[05:53] isaacs: sh1mmer: sure, if you're talking about npm
[05:54] sh1mmer: isaacs: ya
[05:55] elliottcable: ryah likes PHP? blasphemy! it can’t be good just because it solves a problem, it also has to have a perfect design in every aspect!
[05:55] isaacs: elliottcable: the perfect is the enemy of the good.
[05:55] isaacs: (and the done)
[05:55] elliottcable: ’s a joke
[05:55] isaacs: oh, ok
[05:55] elliottcable: was responding to a tweet
[05:56] elliottcable: _announcer 3» should also track replies to @ryah. ;D
[05:59] elliottcable: Error: partition length of 17179197360 sectors exceeds the loop-partition-table-imposed maximum of 4294967295
[05:59] elliottcable: grrrrr.
[06:00] mscdex: bean0r1___: yes, unless you are depending on the client to manually disconnect
[06:01] jesusabdullah: Whose bot is _announcer? where did it come from?
[06:01] jesusabdullah: Is it running on node.js? >:O
[06:01] elliottcable: yep iirc
[06:01] elliottcable: I remember when it was brought in here
[06:01] elliottcable: barely :x
[06:02] jesusabdullah: hmm
[06:02] jesusabdullah: Whose is it?
[06:02] bean0r1___: mscdex: after calling response.end() ?
[06:02] mscdex: maushu
[06:02] mscdex: bean0r1___: no, not if you're calling .end()
[06:02] bean0r1___: i do
[06:03] mscdex: then you should be set
[06:03] bean0r1___: lsof has many line like this: node       7706     assets   35u     sock        0,5           90625174 can't identify protocol
[06:03] bean0r1___: i do a sys.pump over NFS, maybe sys.pump does not close the FD properly?
[06:04] elliottcable: jesusabdullah 3» don’t remember
[06:04] jesusabdullah: Curses!
[06:04] mscdex: bean0r1___: sys.pump doesn't close connections, it just handles the pausing, draining, etc
[06:05] mscdex: well, i take that back
[06:05] mscdex: it does end the write stream
[06:05] mscdex: when it detects an end on the readstream
[06:06] _announcer: Twitter: "http://bit.ly/bsNoLn Node.js available modules @_stevenp_" -- Ariel. http://twitter.com/chazzuka/status/19719215899
[06:06] mscdex: bean0r1___: what are the statuses of those extra connections?
[06:06] bean0r1___: mscdex: how can i see this?
[06:07] sh1mmer: ah crap
[06:07] sh1mmer: I should go to bed
[06:07] sh1mmer: 6am flight
[06:07] bean0r1___: sh1mmer: n8 ;)
[06:07] mscdex: bean0r1___: netstat has a -p option that shows the PID the connection belongs to
[06:07] sh1mmer: I said should
[06:07] mscdex: but you have to be root
[06:08] bean0r1___: mscdex: i know the PID, its my node app
[06:09] mscdex: no, i mean for every connection it shows the associated PID
[06:09] mscdex: then just grep on your PID
[06:09] mscdex: or something
[06:10] martoche has joined the channel
[06:10] _announcer: Twitter: "cheto Hotz try proektik hast done harm to node.js and a string key-value database ... just4fun so to speak, left to find the time" [ru] -- SovGVD. http://twitter.com/sovgvd/status/19719439173
[06:10] martoche has joined the channel
[06:13] akahn has joined the channel
[06:15] konobi: does pgriess hang out on IRC?
[06:15] mscdex: yup
[06:16] konobi: ryah: http://code.google.com/p/python-bitstring/
[06:28] jamesduncan has joined the channel
[06:28] admc has joined the channel
[06:29] _announcer: Twitter: "I am LOVING the migration changes #ExpressJS has made in 1.0b... particularly around route parameters! #nodejs" -- Clint Andrew Hall. http://twitter.com/clintandrewhall/status/19720334102
[06:30] matt_c: konobi: now you've got me jonesing for erlang binary matching.
[06:31] jesusabdullah: I haven't had to work with bitstrings yet. :S
[06:32] matt_c: node and the net module make dealing with text-based TCP streams really easy but I haven't played with binary stuff yet in node.
[06:33] konobi: matt_c: i've been trying to get perl's pack/unpack functionality into node... but damn, it's tricky
[06:33] kuya: 2/3
[06:33] matt_c: konobi: "non-trivial" is a hyphenated word that comes to mind.
[06:34] martoche has left the channel
[06:37] jesusabdullah: pack/unpack?
[06:37] jesusabdullah: Is that like python's pickle?
[06:38] jesusabdullah: nvm
[06:38] jesusabdullah: hooray google
[06:38] jesusabdullah: Gnight all y'all
[06:41] crohr has joined the channel
[06:42] _announcer: Twitter: "Amazing experiment with node.js and web sockets! http://bit.ly/9890rW (by @jkreeftmeijer)" -- Noor Alhiraki. http://twitter.com/N00R/status/19720913322
[06:52] _announcer: Twitter: "Bound the node.js hype. Building for scale is (most likely) not what you think it means http://bit.ly/ctfaRu" -- Jason Brownlee. http://twitter.com/jbrownlee/status/19721343606
[06:57] konobi: matt_c: http://www.leonerd.org.uk/code/libpack/libpack-0.3.tar.gz
[06:57] konobi: woot
[06:57] kuya: mscdex: still awake?
[06:59] matt_c: konobi: ooh nice!
[07:00] kevm__ has joined the channel
[07:00] konobi: not sure how far I could get with that
[07:00] BryanWB has joined the channel
[07:02] _announcer: Twitter: ".@al3x is right but missed the point of node.js  http://bit.ly/bOo21H node is about scaling I/O-heavy apps, not processing power" -- Hugo Hardel. http://twitter.com/tifroz/status/19721798315
[07:03] BryanWB: couldn't node.js also do lots of compute heavy work if we had a good binding to a C++ math library? like numpy does?
[07:07] konobi: BryanWB: no reason that couldn't be done as an addon
[07:19] jspiros has joined the channel
[07:22] SteveDekorte has joined the channel
[07:24] ryah: konobi: nice
[07:27] _announcer: Twitter: "Very interesting post about #nodejs, scalability, threads and events. http://bit.ly/bdhi6w" -- Pascal Hartig. http://twitter.com/passy/status/19722896434
[07:27] jsilver has joined the channel
[07:28] jsilver: o.o
[07:28] jsilver: o/ *tweet tweet*
[07:28] jsilver: Twittah
[07:28] jsilver: beep beep
[07:28] jsilver: Zig Zaag
[07:28] jsilver: WOWOWOwowoWOwoWow;
[07:28] jsilver: "this"
[07:28] jsilver: a++b+=d lol!
[07:29] robotarmy has joined the channel
[07:30] mjr_ has joined the channel
[07:34] pdelgallego has joined the channel
[07:36] virtuo has joined the channel
[07:37] teemow has joined the channel
[07:38] beanie___ has joined the channel
[07:40] konobi: ryah: btw... http://www.leonerd.org.uk/code/libpack/doc.html
[07:40] konobi: no idea how to add that as a deps though
[07:41] konobi: ryah: not sure what your opinion on that library is, though it seems to have some of the stuff you were interested in
[07:41] jetienne has joined the channel
[07:42] BryanWB: isaacs, is an npm package only updated each time it is published?
[07:43] isaacs: BryanWB: yes.
[07:43] BryanWB: isaacs, ah, that explains why the npm package for connect doesn't work w/ creationix's latest blog post
[07:44] _announcer: Twitter: "back from indian with @izs, and fired up about the future of #node.js." -- Jed Schmidt. http://twitter.com/jedschmidt/status/19723613281
[07:50] ryah: konobi: there's nothing in pack that needs a lib - we'll just do it by hand
[07:51] konobi: ryah: mkay... if you say so... i reckon it's trickier than you might expect
[07:52] ryah: nah
[07:53] ryah: just some bits here and there :)
[07:54] liesen has joined the channel
[07:54] konobi: writing tests wil be a bitch i reckon
[07:54] shockie has joined the channel
[07:55] ryah: still worried about parsing integers that lay on buffer boundaries
[07:55] ryah: really think it requires some BufferArray type thing...
[07:56] sooli has joined the channel
[07:57] konobi: that's more of a concern for binary streams rather than predefined protocols, right?
[07:58] ryah: protocols come over binary streams
[07:58] sooli: Hi there
[07:59] konobi: ryah: yar... some are easier than others =0)
[08:00] ryah: konobi: nod
[08:01] ryah: your's is over udp no?
[08:01] ryah: in that case streams aren't so important..
[08:01] sooli: I have to write a website with a lot of simultaneous visitors (around 5000) will I need to create a cluster of node.js applications ?  
[08:01] _announcer: Twitter: "Super-quick hack with node.js and @CampaignMonitor API: http://github.com/jdennes/cmnode Lots of ideas brewing." -- James Dennes. http://twitter.com/jdennes/status/19724327736
[08:02] konobi: ryah, yeah
[08:02] ryah: sooli: depends
[08:02] sooli: What is the best way to create a Node.js cluster ? 
[08:02] ryah: sooli: likely one will handle it
[08:02] ryah: sooli: there are different methods - you can load balance over them - with haproxy for example
[08:02] konobi: ACTION has a node webapp idea... shame i missed the knockout registration though
[08:03] ryah: sooli: or you could share a server socket between node processes
[08:03] TomY_ has joined the channel
[08:03] sooli: ryah: what about sessions ? redis session storage ? 
[08:03] konobi: interesting one with tokyo cabinet, some stuff based on digital signal processing and a "social" aspect
[08:03] ryah: sooli: redis is okay
[08:03] sooli: what do you think about riak ? 
[08:04] ryah: sooli: i don't know much about it. sounds heavy
[08:04] bmizerany has joined the channel
[08:04] ryah: sooli: you might want to try in-memory sessions
[08:04] ryah: with just one processes
[08:04] ryah: 5000 connections is pushing it
[08:04] hellp has joined the channel
[08:04] ryah: but i think you'll be okay
[08:04] sooli: 5000 today ... how much tomorrow ;)
[08:05] FransWillem has joined the channel
[08:05] ryah: or 100 today and 5000 in a year :)
[08:05] sooli: :D
[08:05] sooli: no, it's for an existing community actually
[08:05] ryah: unless you already have those 5000 people - i would design the app around a single server
[08:05] ryah: ah
[08:06] wao: :)
[08:06] ryah: sooli: you might want to try load balancing in the kernel: http://developer.yahoo.net/blog/archives/2010/07/multicore_http_server_with_nodejs.html
[08:06] sooli: ok let's go reading
[08:07] muhqu has joined the channel
[08:07] sooli: what I love in those new cool technologies => learning
[08:07] sooli: :)
[08:07] ryah: me too
[08:07] jspiros has joined the channel
[08:08] sooli: It's for creating a multi player cards game with multiple rooms
[08:09] sooli: each users will be connected to a ws
[08:09] sooli: there is a limitation about simulatneous WS?
[08:09] ryah: sooli: shard on the room
[08:09] ryah: sooli: 65000 WS connections per ip
[08:10] jonathantaylor has joined the channel
[08:10] sooli: ok nice
[08:10] ryah: ;)
[08:10] sooli: brb coffee time
[08:12] _announcer: Twitter: "@ Vincicat ago, taught me do my hack (or abuse) JS is Atrium, can only say that I love ECMAScript. (Node.js points of time since we go to see how architecture.)" [zh-TW] -- Kelvin. http://twitter.com/kelvw/status/19724769011
[08:12] _announcer: Twitter: "@ Stunts Hmm, Node and EPA have nothing to do. EPA is a Comet server + a Framework client (who was as common server-side JS)." [fr] -- Anthony Catel. http://twitter.com/paraboul/status/19724770120
[08:13] satori_ has joined the channel
[08:13] akahn has joined the channel
[08:15] konobi: wonder how async safe tokyo cabinet is
[08:16] matt_c has joined the channel
[08:17] ntelford has joined the channel
[08:17] _announcer: Twitter: "This http://mnutt.github.com/hummingbird/ also said pake node.js @ Gozali" [id] -- Didik Wicaksono. http://twitter.com/DidikFirewalker/status/19724971872
[08:20] bridge has joined the channel
[08:23] jelveh has joined the channel
[08:27] shreekavi has left the channel
[08:27] shreekavi has joined the channel
[08:27] jspiros has joined the channel
[08:28] sveimac has joined the channel
[08:30] _announcer: Twitter: "@ Vincicat this issue in the play node.js, WebSocket and MongoDB. You play WebGL?" [zh-TW] -- Kelvin. http://twitter.com/kelvw/status/19725465123
[08:31] CrabDude has joined the channel
[08:32] _announcer: Twitter: "Fun with node.js - http://jeffkreeftmeijer.com/2010/experimenting-with-node-js/ #nodejs" -- Arvis Zeile. http://twitter.com/a_z_e/status/19725563060
[08:34] N` has joined the channel
[08:35] zomgbie has joined the channel
[08:35] _announcer: Twitter: "Deliver real-time information to your users using node.js | Stéphane Caron – No Margin .. http://bit.ly/cZnmIr" -- Davide De Maestri. http://twitter.com/gleenk/status/19725669044
[08:35] zomgbie_ has joined the channel
[08:37] FransWillem has joined the channel
[08:38] FransWillem: sooli: What card games ?
[08:38] FransWillem: sooli: I'm actually working on a TiChu/Tai-pan server in Node.js, maybe we could work together :)
[08:50] FransWillem: SubStack: Are you available ?
[09:00] _announcer: Twitter: "@ Paraboul so I can interface EPA and nodejs for my applications? (I begins in the JS server). What proxy for the WebSocket? tks" [fr] -- Olivier Bregeras. http://twitter.com/stunti/status/19726714257
[09:03] sooli: FransWillem: It's a french card game (I guess)
[09:04] sooli: Coinche (kinda belote)
[09:04] jetienne: what is this 'epa' they talk about
[09:04] sooli: I have create a first chat using node.js and socket.io ... but it's not very stable actually
[09:05] sooli: sometimes the script just stop 
[09:05] sooli: I think it's a socket.io issue
[09:05] jetienne: is there a working implementation of websocket ?
[09:06] _announcer: Twitter: "@yassiryahya About the web socket (node.js). Does it work in your chrome? I have tested but it is not working as the article claim." -- anthony_yio. http://twitter.com/anthony_yio/status/19726951039
[09:08] caolanm has joined the channel
[09:11] _announcer: Twitter: "Wondering if anybody ever tried #hotruby with #nodejs?" -- Julien Portalier. http://twitter.com/ysbaddaden/status/19727159903
[09:12] micheil: jetienne: yes. node-websocket-server or npm install websocket-server
[09:12] micheil: I'm the maintainer of the project, and it is very stable.
[09:12] micheil: (apart from the API which is changing a little in a bit.)
[09:13] jetienne: micheil: how to make the example/ work ? i started the server and pointed chrome to it. but nothing happen (on web page or in server terminal)
[09:14] micheil: okay, have a look at the development branch, node examples/chat-server.js
[09:14] jetienne: my bad, chrome doesnt work but chromium does
[09:14] micheil: then open up chrome and point it to :8080
[09:14] micheil: or, http://brandedcode.com:8080
[09:14] mAritz has joined the channel
[09:15] micheil: chrome 5+ should support websockets
[09:15] jetienne: micheil: 5.0.375.125 beta doesnt work on client.html
[09:15] micheil: it should.
[09:15] jetienne: 6.0.427.0 (49012) Ubuntu does work tho
[09:15] micheil: odd, I have no idea then.
[09:15] micheil: It'd surprise me if the different os's shipped different protocol versions
[09:16] jetienne: micheil: cant you autodetect this in the browser js ?
[09:16] mscdex: kuya: i'm here
[09:17] micheil: auto detect what?
[09:17] mAritz: good morning noders  (wow, that's an anagram to nerdos :( )
[09:17] mscdex: i thought it was chrome 4+?
[09:17] jetienne: micheil: if websocket are supposed to work with the node lib
[09:17] micheil: I'm meaning v5 on mac os x supports websockets but v5 on ubuntu doesn't
[09:17] mscdex: wha?
[09:17] mscdex: huh
[09:17] micheil: (that'd be like IE8 acting different on different versions of windows.)
[09:18] jetienne: micheil: would be indeed quite surprising to have chrome v5 being != on mac and linux
[09:18] micheil: jetienne: well, next time I get a chance, I'll install a VM and check it out.
[09:18] jetienne: ok
[09:18] mscdex: i dunno why ubuntu would compile chrome without websocket support
[09:18] micheil: as for protocol versions, NWS automatically choose unless you tell it otherwise.
[09:19] ryah: yo
[09:19] micheil: hey ryah
[09:22] hellp has joined the channel
[09:22] ewdafa has joined the channel
[09:22] kuya: mscdex: i think iv worked out my issue now ... i was trying to get connect and grappler to play together but iv realised its not very possible
[09:22] kuya: mscdex: seems the connect session middleware screws things up a bit
[09:22] mscdex: kuya: i tried asking about it a few times, but got no response :\
[09:24] mscdex: if there could be a way to hook into it early in the process there wouldn't be a problem
[09:24] mscdex: it=connect
[09:25] _announcer: Twitter: "Well supported, known, in production library = bad #glow. Unknown, unconventional, flavor of the month = good #nodejs. Strategy is unclear." -- Matt Chadburn. http://twitter.com/commuterjoy/status/19727783372
[09:26] kuya: well you can do module.exports = new grappler.Server({...}, function(req, resp) { your_connect_server.handle(req, resp, function() {}; })
[09:26] kuya: but i keep getting an error about the resp not having a writeHead method 
[09:27] FransWillem: kuya: Try http://github.com/Frans-Willem/RequestRouter instead, that was made specifically to be able to plug in different request handlers.
[09:27] mscdex: kuya: yeah, res is a plain net.Stream for upgrade requests
[09:28] mscdex: using the same callback for upgrade/websocket requests is nice because you can check the cookie field first, if you need to
[09:28] mscdex: or if there are different upgrade requests in the future
[09:29] kuya: i wonder if i just need to stick in some middleware to abort if the request is a net.Stream...
[09:29] mscdex: well i don't know how connect works, but with plain grappler, you could just do a return if req.headers.upgrade
[09:30] _announcer: Twitter: "Deliver real-time information to your users using node.js, http://bit.ly/cEAqK3 (with demo and explanation)" -- Jeremy DESVAUX. http://twitter.com/jdmweb/status/19727968721
[09:30] mscdex: if you didn't want to bother checking cookies
[09:30] mscdex: or any other headers
[09:30] _announcer: Twitter: "node.js is great because it's empowering web devs to build things outside of their traditional "comfort zone" of the web page. #webng" -- Mark Mayo. http://twitter.com/mmayo/status/19727994706
[09:30] shreekavi has joined the channel
[09:30] kuya: hah 
[09:30] kuya: works now 
[09:30] kuya: =]
[09:30] loftus has joined the channel
[09:30] mscdex: cool
[09:31] mscdex: yeah, i'm going to be adding a few additional notes to the readme
[09:31] mscdex: about things like that
[09:31] kuya: i stuck in a one line middlware function to abort the request if( resp instanceof net.Stream ) 
[09:31] kuya: ill code up a mini example if you want
[09:34] mscdex: sure
[09:34] BryanWB has joined the channel
[09:37] romainhuet has joined the channel
[09:43] BryanWB: anyone know a command-line utility i can use to look at the raw http header and body that my node server returns?
[09:43] BryanWB: am trying to use curl but not having much success
[09:44] bmizerany has joined the channel
[09:44] _announcer: Twitter: "W00t! I finally have Silverlight talking to Node.js / socket.io" -- Howard van Rooijen. http://twitter.com/HowardvRooijen/status/19728628735
[09:45] mscdex: BryanWB: wget?
[09:45] mscdex: although curl should work too
[09:46] BryanWB: mscdex, no which options to use?
[09:46] mscdex: or if you're on windows you could use fiddler, or wireshark maybe
[09:46] BryanWB: mscdex, have been playing w/ curl for 10 mins butcan't find right option to view the header info
[09:46] mscdex: or tcpdump
[09:46] mscdex: heh
[09:46] mscdex: ok 1 sec
[09:47] wang: bryan: -v
[09:47] mscdex: yeah it's -v
[09:47] _announcer: Twitter: "Drinking the Node.js Kool-Aid http://journal.paul.querna.org/articles/2010/06/12/node-js/" -- Geonix Technical. http://twitter.com/geonixtech/status/19728763058
[09:48] BryanWB: wang, curl -v?
[09:48] wang: ya
[09:48] BryanWB: wget --save-headers also seems to work
[09:48] BryanWB: wang, tks
[09:48] wang: nps
[09:50] FransWillem: Hmmm
[09:50] FransWillem: Who would be interested in an IDProvider class, that will provide ID-numbers, and will automatically re-use free IDs ?
[09:51] proppy has joined the channel
[09:51] proppy: http://nodeknockout.com/ down ?
[09:52] _announcer: Twitter: "I want the next node.js Kyakkyaufufu but in Windows it difficult to move it there .... Oh, Hyper V in Linux, so the server was up so I see I see Why do not you slide." [ja] -- neuecc. http://twitter.com/neuecc/status/19728957689
[09:53] mscdex: proppy: looks to be
[09:55] _announcer: Twitter: "Upgrading #nodejs for @transloadit to HEAD. Feels good to have a huge test suite : )" -- Felix Geisendörfer. http://twitter.com/felixge/status/19729082117
[09:57] _announcer: Twitter: ""Scaling in the small" vs "Scaling in the large" from @al3x (http://bit.ly/aRLx3i). Ignore the Node.js distraction, some good ideas here." -- Jamie. http://twitter.com/jamiei/status/19729177697
[09:59] sat has joined the channel
[09:59] bridge has joined the channel
[10:05] ryah: proppy: hm
[10:10] kuya: mscdex: http://github.com/dunkfordyce/grappler/commit/3c2993af6f77a08b5804ab6327daaa17d0696cc0
[10:10] _announcer: Twitter: "I will try running some #ruby code with #nodejs using the #hotruby VM this next week-end." -- Julien Portalier. http://twitter.com/ysbaddaden/status/19729746944
[10:11] _announcer: Twitter: "Presentation: Getting Started with MongoDB and Node.js - The main point behind Grant Goodale’s presentation... http://tumblr.com/xzjee3qne" -- Alex Popescu. http://twitter.com/al3xandru/status/19729779869
[10:11] mscdex: kuya: thanks
[10:14] akahn has joined the channel
[10:14] kuya: its a bit messy to get it to work i guess... 
[10:15] kuya: id love to just do connect_server.use('/grappler', grappler_middleware) :)
[10:16] mscdex: eh
[10:16] mscdex: *heh
[10:16] henrikl has joined the channel
[10:17] mscdex: gah it won't let me apply via fork queue
[10:17] mscdex: ACTION shakes a fist at github
[10:17] kuya: fork queue?
[10:18] kuya: im rubbish with git hub :)
[10:18] kuya: s/hub//
[10:19] _announcer: Twitter: "really loving node.js, except for it not reloading. anyone have any ideas as to how i can do this in development?" -- Sam Elliott. http://twitter.com/Lenary/status/19730082475
[10:19] mscdex: i also have an improved "sample" index.htm that automatically uses the best connection method
[10:19] mscdex: i'll probably be uploading that sometime soon too
[10:20] kuya: ah nice 
[10:28] matclayton has joined the channel
[10:30] _announcer: Twitter: "A benchmark: ScaleStack Eventlet Node.js and Twisted http://bit.ly/aWvsnl" -- Nicholas Piël. http://twitter.com/Nichol4s/status/19730595297
[10:36] SvenDowideit has joined the channel
[10:38] _announcer: Twitter: "Ok, #nodejs upgrade for @transloadit went well : )" -- Felix Geisendörfer. http://twitter.com/felixge/status/19730968809
[10:40] liesen has joined the channel
[10:40] omarkj has joined the channel
[10:40] _announcer: Twitter: "@jplana jum i agree, There is (commercially speaking) life outside jvm: node.js, erlang, objective-C ..." -- Javier Neira. http://twitter.com/jneira/status/19731060772
[10:40] tyler_ has joined the channel
[10:42] hassox has joined the channel
[10:42] N` has joined the channel
[10:43] d0k has joined the channel
[10:44] crohr has joined the channel
[10:48] fermion has joined the channel
[10:50] javajunky has joined the channel
[10:54] aheckmann has joined the channel
[10:59] bridge has joined the channel
[11:01] _announcer: Twitter: "Node.js and MongoDB for high performance applications: http://bit.ly/daujiN" -- Hernan Garcia. http://twitter.com/theprogrammer/status/19732010420
[11:01] geojeff has joined the channel
[11:03] damienkatz has joined the channel
[11:04] damienkatz has joined the channel
[11:07] rubydiamond has joined the channel
[11:11] mAritz: btw: what's up with regards to hot code reloading? any news on a possible implementation?
[11:11] aliem has joined the channel
[11:11] mscdex: there's been several attempts at it i think
[11:12] mAritz: yeah, but none really successful, right?
[11:12] maushu has joined the channel
[11:12] mscdex: node-supervisor is one of them
[11:12] mscdex: can't remember the others off the top of my head
[11:12] mscdex: mAritz: http://github.com/isaacs/node-supervisor
[11:14] mscdex: mAritz: http://github.com/kriszyp/nodules
[11:15] mscdex: mAritz: http://github.com/lrbabe/node-DJs
[11:15] mscdex: that should get you started :-)
[11:16] maushu: dun dun dun
[11:16] mAritz: mscdex: node-supervisor restarts the entire program with every change, that's not going to work for me. looking at the others now
[11:16] mscdex: maushu: pew pew pew
[11:17] maushu: zing zing zing
[11:17] maushu: Note to self, find a way to index and organize channel logs.
[11:17] mscdex: i've decided to write a multiplayer game as another grappler example
[11:17] Tim_Smart has joined the channel
[11:18] mscdex: i think i may go with Uno
[11:18] maushu: UNO!
[11:18] maushu: I love that game.
[11:18] mscdex: who doesn't?
[11:19] mscdex: i'll answer that -- probably people who are allergic to potentially drawing massive amounts of cards
[11:19] mscdex: :p
[11:20] mscdex: i wish there was a site with card graphics
[11:20] mscdex: :s
[11:23] kennon has joined the channel
[11:23] maushu: mscdex: Hmmm.
[11:25] JustinCampbell has joined the channel
[11:26] _announcer: Twitter: "this is the future: great stuff with websockets http://jeffkreeftmeijer.com/2010/experimenting-with-node-js/" -- we are telescopic. http://twitter.com/wearetelescopic/status/19733224649
[11:30] skampler has joined the channel
[11:40] bridge has joined the channel
[11:44] sat: mscdex: multiplayer node uno would be totally awesome
[11:46] _announcer: Twitter: "Reading about node.js lots of interesting possibilities" -- Richard Sage. http://twitter.com/richardsage/status/19734261829
[11:47] jetienne has joined the channel
[11:48] pdelgallego has joined the channel
[11:52] shreekavi has left the channel
[11:59] FransWillem: Anyone active here ?
[11:59] jelveh has joined the channel
[11:59] mscdex: yep
[11:59] _announcer: Twitter: "Absolutely bang on post by Alex Payne on scalable solutions and "hot" new tech such as Node.js  http://bit.ly/aRLx3i" -- Boris Terzic. http://twitter.com/boristerzic/status/19734980110
[12:00] beanie___ has joined the channel
[12:01] beanie___: mikeal: can i query zou? i have a question about request :)
[12:01] beanie___: *you
[12:02] mscdex: maybe you can jquery him :p
[12:02] mscdex: ok, time to work on uno
[12:03] mscdex: :>
[12:03] beanie___: i suspect request to not close the client connection properly
[12:03] beanie___: :/
[12:03] micheil: mscdex: uno?
[12:03] FransWillem: Could anyone help me brainstorm a bit about IPC use-cases ? e.g. where would you want to use something like DNode for
[12:03] micheil: one. what about it.?
[12:03] mscdex: the card game
[12:03] micheil: yeah, and?
[12:03] mscdex: using it as a grappler example
[12:03] micheil: this knockout or?
[12:03] mscdex: no, i'm not in knockout
[12:03] micheil: mscdex: but.. but... but.. :(
[12:03] micheil: you're demo shall flog the crap out of my simple demo.
[12:04] micheil: *tyour
[12:04] mscdex: lol i only have a simple demo right now too
[12:04] mscdex: trying to come up with other ideas
[12:04] micheil: oh well, I'm on team HMS Dreadnode in knockout, so, yeah
[12:04] mscdex: kuya did add an example for using grappler with connect though
[12:05] mscdex: not sure how much i'll get done today though
[12:06] _announcer: Twitter: "Socket.io looks nice for node.js messaging" -- Stephan Schmidt. http://twitter.com/codemonkeyism/status/19735365682
[12:06] mjijackson has joined the channel
[12:07] stagas has joined the channel
[12:10] dnolen_ has joined the channel
[12:14] akahn has joined the channel
[12:18] proppy: Hi, is there an howto somewhere on how to create package for npm ?
[12:18] proppy: ah maybe http://github.com/isaacs/npm/blob/master/doc/developers.md
[12:18] Matsimitsu has joined the channel
[12:19] _announcer: Twitter: "I had to have some fun with @jkreeftmeijer's node.js + jQuery "see all visitors' cursors" demo: http://youtu.be/jULOA7mSOac" -- Einar Otto Stangvik. http://twitter.com/einaros/status/19736077424
[12:23] zapnap has joined the channel
[12:26] _announcer: Twitter: "@Presentation: Getting Started with MongoDB and Node.js / http://retwit.me/2jz" -- Sid Sidberry. http://twitter.com/SidSidberry/status/19736468298
[12:26] femto has joined the channel
[12:27] FransWillem: w000t, wrote my own IPC library that shouldn't leak memory :D
[12:27] keeto has joined the channel
[12:30] javajunky has joined the channel
[12:33] maushu has joined the channel
[12:33] tmedema has joined the channel
[12:37] proppy: is mjsunit packaged ?
[12:38] d0k has joined the channel
[12:41] ntelford has joined the channel
[12:42] _announcer: Twitter: "Added #NodeAMF to the rapidly growing list of NodeJS modules listed here: http://bit.ly/4UiYuk" -- Tim Whitlock. http://twitter.com/timwhitlock/status/19737436313
[12:42] BryanWB has joined the channel
[12:45] proppy: does assert.throws take its block argument as a string ?
[12:46] proppy: oh, it seems it takes a function 
[12:47] micheil: hm.. nodejs.se is really something that could've gone on the TheNoded domain
[12:49] mape: Huh?
[12:49] maushu: TheNoded?
[12:50] mape: Had no idea about it
[12:50] maushu: Graphnode?
[12:50] maushu: Linode?
[12:50] davidsklar has joined the channel
[12:50] maushu: ACTION explodes.
[12:50] mape: micheil: what was the idea for it?
[12:51] micheil: the noded was meant to be a blog for what was happening in the community + screencasts + podcast or something
[12:51] micheil: I just never managed to launch it
[12:51] mape: Ah k, you should have told me :P
[12:51] micheil: it's actually The Noded, not TheNoded, I typoed
[12:52] mape: But yeah, still a place for that
[12:52] micheil: I'm still thinking of doing screencasts and stuff, just sure not what yet
[12:52] mape: Like I mentioned, ajaxian/changelog but node only with editorial
[12:52] mape: mine is just a link scraper
[12:52] micheil: well, the funny part with /changelog is that I've been doing some.. close work with both Adam and Wynn, so, yeah
[12:53] micheil: (y'know, co-hosting an episode and such)
[12:53] mape: In regards to node?
[12:53] micheil: well, not in regards to node in particular.
[12:53] micheil: look for episode 0.2.9
[12:53] micheil: and also look for what may be 0.3.1
[12:54] micheil: which reminds me, I need to listen to 0.3.0
[12:54] mape: hehe, I'll just keep it in iTunes and listen to all of em
[12:54] micheil: yeah, I do that too.. but I gotta get round to listening to them
[12:54] robotarmy has joined the channel
[12:58] rsms has joined the channel
[12:59] micheil: howdy' rsms
[13:00] claudio has joined the channel
[13:00] javajunky: nodejs.se isn't that JimBastard's thing ?
[13:01] _announcer: Twitter: "If I ever build a porn site I'll use Nude.js. #Node.js" -- d0k. http://twitter.com/d0k/status/19738622309
[13:01] proppy: just forked geonode to rewrote test using assert, to figure out there was already a fork ahead of me
[13:01] javajunky: ughh no fair why does noone ever fork mystuff to fix/rewrite the tests, goddamn :)
[13:02] proppy: I don't find the ui for the network graph of github very convenient
[13:02] kuya: talkling of ajaxian - does anyone have any replacement blogs for me to read? webmonkey is the only one i know 
[13:03] mape: javajunky: huh?
[13:03] javajunky: mape: in respect to twhat ?
[13:04] mape: nodejs.se
[13:04] javajunky: yeah, I thought that was JimBastard's thing, is it yours ?
[13:04] mape: Yeah
[13:04] mape: swedish domain ;)
[13:04] javajunky: yeah-yours
[13:04] javajunky: ?
[13:05] mape: Yeah mine, I own and use
[13:05] javajunky: ah, I likes the style
[13:05] mape: Hopefully it turns out useful
[13:06] chrischris has joined the channel
[13:07] micheil: rsms: is this so? http://github.com/rsms/oui/blob/master/client/lib/oui/anchor.js#L200
[13:11] steadicat has joined the channel
[13:11] dylang has joined the channel
[13:12] shockie_ has joined the channel
[13:13] liesen has joined the channel
[13:18] Egbert9e9 has joined the channel
[13:18] dshaw has joined the channel
[13:19] wattz: morning sweethearts!
[13:21] sveimac has joined the channel
[13:22] ben_alman has joined the channel
[13:24] javajunky: mape: it would be cool if links were clickable on nodejs.se ?
[13:24] mape: the headlines are
[13:24] mape: guess that isn't clear enough
[13:25] javajunky: ahhh so the link gets extracted, decoded and made into a headline 
[13:25] javajunky: right
[13:25] mape: there, now if you refresh and hover they will be more linky
[13:26] wattz: hey, opinions, if you guys extend say String.prototype for us in your node app, do you put them in their own file and require them, or just extend where you need it?
[13:27] javajunky: aj
[13:27] FransWillem: Hmm, yay, new IPC system seems fully operational :D
[13:27] javajunky: err 'ah' even
[13:27] javajunky: wattz: I try and avoid extending the default prototypes where possible.
[13:27] wattz: it's really just one method
[13:27] wattz: .fmt, format
[13:27] wattz: clone of sprintf/printf
[13:28] javajunky: did you see visionmedia's one of those ?
[13:28] wattz: naa
[13:28] wattz: mine is 4 lines, used it for couple years now
[13:28] javajunky: fair.
[13:28] _announcer: Twitter: "Presentation: Getting Started with MongoDB and Node.js http://ping.fm/WojvK http://bit.ly/aR4Bf3" -- Hugues Dubois. http://twitter.com/hugdubois/status/19740463381
[13:28] wattz: brb
[13:31] _announcer: Twitter: "Great article by @al3x about real world scaling issues (backed by some Node.js criticism): http://bit.ly/9lrDtS" -- Sergio Bossa. http://twitter.com/sbtourist/status/19740634374
[13:35] jherdman has joined the channel
[13:36] stagas has joined the channel
[13:37] daniellindsley has joined the channel
[13:38] termie has joined the channel
[13:40] olegp has joined the channel
[13:49] _announcer: Twitter: "node.js come out or motivation" [ja] -- Sn0wNight. http://twitter.com/Sn0wNight/status/19741894999
[13:49] _announcer: Twitter: "Getting Started with MongoDB and Node.js ... http://welu.se/kd" -- Thomas Schedler. http://twitter.com/chirimoya/status/19741912900
[13:50] _announcer: Twitter: "&quot;Let&#39;s do it together node.js!&quot; The rhythm of" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/19741938047
[13:50] termie: yikes, lots of people :)
[13:50] termie: i'm trying to figure out how to deal with stream disconnects
[13:50] coobr has joined the channel
[13:51] termie: if the remote connection drops off i currently run into a broken pipe error that i can't seem to catch
[13:51] termie: stream.writable is still true at that point
[13:52] termie: (i am on 1.100, but the docs for 1.102 don't seem to imply that anything has changed ragarding this)
[13:52] _announcer: Twitter: "What are the disadvantages node.js it work or shared server. Naa mon root can not even install and do not have authority" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/19742124743
[13:53] steadicat has joined the channel
[13:55] akahn has joined the channel
[13:59] mtodd has joined the channel
[14:00] davidsklar has joined the channel
[14:00] gf3 has joined the channel
[14:02] kriszyp has joined the channel
[14:04] ceej has joined the channel
[14:04] zaach has joined the channel
[14:05] davidwalsh has joined the channel
[14:05] _announcer: Twitter: "Discussing semi-colons in the javascript is PROHIBITED. # Nodejs" [de] -- Aaron Heckmann. http://twitter.com/aaronheckmann/status/19743029054
[14:07] _announcer: Twitter: "Reading up on node.js, looking into using it for a high performance analytics collection server.  Server side JS, who wou…http://nodejs.org/" -- Joe McGlynn. http://twitter.com/jbmcglynn/status/19743201355
[14:08] davidsklar:  /join #codereview
[14:09] _announcer: Twitter: "Very interesting blog post about Node.js and scalability http://tinyurl.com/3yeky56" -- Raul H Macias. http://twitter.com/raulhmacias/status/19743313887
[14:10] JimBastard has joined the channel
[14:11] JimBastard: javascript
[14:13] rsms: micheil: hola! yes, it's buggy in both FF and Chrome.
[14:13] zaach: javascript;
[14:13] micheil: okay
[14:13] micheil: thanks
[14:13] rsms: micheil: I have however reworked that lib since, but not yet pushed to the Hub'. Interested?
[14:15] ThePub has joined the channel
[14:15] ThePub has joined the channel
[14:16] everton has joined the channel
[14:16] micheil: rsms: sure
[14:16] micheil: I was just reading it because I'm working on a custom lib for a client
[14:16] Eber has joined the channel
[14:18] termie: it sounds like, from the mailing lists, http server stuff was given protection from EPIPE, but perhaps the underlying net library was not?
[14:19] samdk has joined the channel
[14:19] justinday has joined the channel
[14:20] justinday: Can anyone recommend a mysql module? I'm having trouble getting any of them to work. 
[14:20] feydr has joined the channel
[14:21] termie: i guess i'll check further later on
[14:22] rwaldron has joined the channel
[14:24] aheckmann has joined the channel
[14:25] ajpiano has joined the channel
[14:27] nrstott has joined the channel
[14:32] bradleymeck_ has joined the channel
[14:33] Gruni has joined the channel
[14:33] zomgbie has joined the channel
[14:34] zomgbie_ has joined the channel
[14:35] kriszyp_ has joined the channel
[14:38] matt_c has joined the channel
[14:38] bradleymeck_: bleh, upgraded node and it broke my node-overload
[14:40] _announcer: Twitter: "Cool fashion presentation on vebdevu. Cast NodeJS and MongoDB http://j.mp/9XK0VK" [ru] -- SniXx. http://twitter.com/snixx/status/19745566450
[14:40] kodisha has joined the channel
[14:41] donspaulding has joined the channel
[14:41] daniellindsley has joined the channel
[14:43] coobr has joined the channel
[14:47] elliottcable: any you mofos got SCII and wanna ‘party up?’
[14:47] javajunky: I have indeed got SCII, but sadly working
[14:49] jelveh has joined the channel
[14:49] jelveh_ has joined the channel
[14:50] saikat has joined the channel
[14:50] khug has joined the channel
[14:51] elliottcable: javajunky 3» your name is javajunky, why would I want to?
[14:51] elliottcable: javajunky 3» ;D
[14:53] rsms: micheil: http://hunch.se/hunchor/basic-example.html http://github.com/rsms/hunchor
[14:53] micheil: hmm..
[14:53] rsms: look at hunchor.js which houses the interesting code
[14:54] jacoblyles has joined the channel
[14:54] micheil: rsms: currently what I'm looking at implementing is a custom stack which includes pretty much a client side MVC
[14:54] micheil: (slightly less on the model side, as the app's driven by amn API)
[14:55] micheil: I already have code to handle templating and things like that, it's just a matter of refactoring it
[14:56] rsms: ah! so you meant "oui" rather than the URL anchor code?
[14:56] rsms: oui is what drives both the backend and the frontend of http://dropular.net/
[14:56] rsms: micheil: ^
[14:56] rsms: we developed oui as part of dropular.net
[14:56] micheil: well, yeah, but oui isn't quite what I need
[14:57] mape: rsms: Isn't awfully obvious what dropular does at a quick glance, probly by design but just a though
[14:57] rsms: I see. Yeah, oui is quite specific -- it's for writing app-style "web sites" and has authentication and other concepts already outlines.
[14:57] micheil: rsms: I've currently got code like: http://gist.github.com/494786
[14:58] rsms: mape: it's like fffound.com
[14:58] micheil: and it's running on sammy.js, but all I use in same is the hashchange, nothing else
[14:58] mape: rsms: And how is dropular different from forrst and.. yeah
[14:58] robinduckett has joined the channel
[14:58] mape: and dribbble.com
[14:58] micheil: mape: it's node.js powered?
[14:58] micheil: and it looks more awesome
[14:58] mape: micheil: For actual products the tech isn't that important
[14:59] micheil: rsms: I'm thinking to tie this system together I'll be using something like require.js, and yeah
[14:59] micheil: rsms: because I actually need to do specific actions on different pages and stuff
[14:59] _announcer: Twitter: "@LearnBoost Wow, you guys are working with node.js and mongoDB? I'm jealous. My wife's a teacher and once I show her this she'll be excited." -- James Bathgate. http://twitter.com/jamesbathgate/status/19747011535
[15:00] damienkatz has joined the channel
[15:00] mape: rsms: Look at forrst? Really like that their page autoloads the next images, perhaps something that could be implemented instead of the "Load ** more..."
[15:00] dylang has joined the channel
[15:00] rsms: mape: dribbble is something totally different. Dropular is about a smaller group of explicitly invited people in the design industry (currently about 4000+ members) which posts interesting content to the site. Quite simple.
[15:01] robinduckett: Hey people, I am managing to make node segfault :(
[15:01] robinduckett: http://gist.github.com/494797 Any ideas why this makes node segfault?
[15:01] mape: rsms: so more like forrst but without the social aspect?
[15:01] rsms: micheil: yeah, I see. I'm more interesting in how to get as close as possible to the "natural" platform (i.e. the js environment, DOM etc in a web browser) than using old concepts of templates and MVC etc.
[15:02] jetienne: robinduckett: no idea. but i confirme it is segfaulting here too
[15:02] robinduckett: Sad times
[15:02] robinduckett: It's the setTimeout I think
[15:03] wattz: Websphere is so sad.
[15:03] quirkey has joined the channel
[15:03] rsms: mape: not really. have a look at: http://dropular.net/#about/about and http://dropular.net/#drops http://dropular.net/#drops/1encHBlYv2Lh094WGXN6icGwtht http://dropular.net/#users/rsms
[15:03] micheil: rsms: well, it's purely because of the type of app.
[15:04] micheil: while it'd be great, I don't want to be trying to manage a 10,000 line javascript file.
[15:04] bradleymeck_: idk but im getting some bus errors on things that used to work robinduckett, sec
[15:04] jetienne: robinduckett: nah replacing setTimeout by function(){} still crashed
[15:04] rsms: micheil: yeah, the tricky part when writing "frameworks" are hitting the spot in between re-inventing the actual platform and making development of the most common use-cases easier
[15:04] jetienne: robinduckett: removing addlistener 'done' and it still crash
[15:05] micheil: yeah, basically I've got something that works, but I'm repeating myself heaps.
[15:05] robinduckett: D:
[15:05] micheil: so I'm rewriting parts to remove that repetition
[15:05] maushu: Yay, landing page done. Hooking up the email eater now.
[15:05] robinduckett: wtf
[15:05] robinduckett: ooopp
[15:05] robinduckett: i'm an idiot
[15:05] mape: rsms: hmm k, btw when I'm in your user profile and click something, there is no "back" button, easy enough to go back if one uses mouse gestures but perhaps it would be useful for some users
[15:05] robinduckett: null sandbox
[15:06] robinduckett: YES
[15:06] robinduckett: :D
[15:06] robinduckett: it works
[15:06] maushu: robinduckett: ...
[15:06] micheil: for example, have the router know that: #people/1523 => "/people/:id" => pages/people/show.jade
[15:06] mape: or well, click something that links to things inline on the site, not external things
[15:06] robinduckett: I'm happy now.
[15:06] maushu: ACTION does while(true); on robinduckett's sandbox.
[15:06] jetienne: robinduckett: still send an email to the mailing list. crashing is not acceptable behavior
[15:06] micheil: and then only have the application logic in the controller, instead of the templating logic
[15:06] jetienne: or im lost
[15:06] _announcer: Twitter: "“The fundamentals of scalable systems are fast networking and non-blocking design—the rest is message passing.” http://nodejs.org/" -- Mikol Graves. http://twitter.com/ambientpunk/status/19747563216
[15:06] rsms: micheil: before I wrote oui I had the eureka moment of realizing what I always do with web apps/sites — I _think_ in modules but I write the code in fragments, in different files (lines 12-193 in CSS, lines 30-50 in HTML and line 1-50 in JS)
[15:07] robinduckett: jetienne: true but at least I know it was my stupid fault
[15:07] robinduckett: basically
[15:07] robinduckett: don't pass an undefined variable instead of a sandbox
[15:07] rsms: micheil: however, the obvious solution would be to have one HTML, CSS and JS file for each logical module, right?
[15:07] micheil: yeah
[15:07] micheil: I guess
[15:07] jetienne: robinduckett: good thing :)
[15:08] rsms: micheil: but web browsers would be very sad about loading many files (3 is themagic number of modern browsers cuncurrency capabilities). So oui performs pre-processing.
[15:08] maushu: Does fs.writeFile append or writes over the contents?
[15:08] maushu: No info on the docs.
[15:08] robinduckett: anyway
[15:08] micheil: rsms: yeah, currently I make heavy use of an in-memory cache for data
[15:08] rsms: micheil: ah, but that sounds like classic MVC thinking (maybe not a bad thing though)
[15:08] robinduckett: Very simple module for using Script with EventEmitter: http://gist.github.com/494797
[15:08] micheil: rsms: see the pm
[15:09] micheil: rsms: that explains why I'm thinking that.
[15:09] jetienne: maushu: overwrite
[15:09] maushu: Drat.
[15:09] micheil: rsms: if it was an app like Ideocase, then I'd use something lighter weight, like how oui does it, but it's not, so I need some bigger infrastructure behind it
[15:10] softdrink has joined the channel
[15:10] mape: http://github.com/ahe/choco "another client side JS MVC framework"
[15:10] jetienne: fs.open(path, flags, mode=0666, [callback]) <- maushu this one support the usual 'a' stuff
[15:10] shockie_ has joined the channel
[15:11] rsms: micheil: I see (read your dm)
[15:12] _announcer: Twitter: "Interesting article about LearnBoost, a startup running on #node.js (the same guys behind Mongoose and Socket.io) http://cot.ag/ammDXK" -- Aaron Heckmann. http://twitter.com/aaronheckmann/status/19747973742
[15:13] rsms: micheil: I believe you are very likely to fail in writing a universal/general framework for sites in that size (I have got alot of experience in this field) and in almost every case it's both better and cheaper to build a custom solution than to try to integrate an existing product.
[15:13] micheil: rsms: the aim isn't for a generic framework
[15:14] rsms: micheil: :)
[15:14] micheil: I'm probably going to fork off this code and write something smaller, but this code base will be a custom code base
[15:14] rsms: micheil: which is "this code base"?
[15:15] micheil: erm, the client's code base
[15:15] rsms: :P
[15:15] maushu: jetienne: Yeah, I'm using it.
[15:18] creationix has joined the channel
[15:18] bradleymeck_: sweet jesbus multiple inheritence using proxies
[15:18] creationix:  bradleymeck_ ala ruby ?
[15:19] bradleymeck_: idk ruby
[15:19] creationix: oh, well ruby uses proxies to simulate multiple inheritance
[15:19] creationix: calls them "mixins"
[15:19] bradleymeck_: then, yes
[15:19] bradleymeck_: on the prototype object it should act like that
[15:20] bradleymeck_: speed is kinda crappy, but meh
[15:20] dmcquay has joined the channel
[15:21] JimBastard has joined the channel
[15:21] JimBastard: damn i really need to put google analytics back on www.asciimo.com
[15:21] JimBastard: check this out
[15:21] JimBastard: http://twitter.com/#search?q=asciimo
[15:24] ryan_gahl has joined the channel
[15:24] _announcer: Twitter: "Most likely going to get a virtual host later on to use nosql and nodejs/fabjs." -- A'braham Barakhyahu. http://twitter.com/BlessYahu/status/19748844708
[15:31] tmedema: Anyone knows a javascript library for data analysis? Eg. recognition of patterns, checking whether a certain range represents a linear increase (with or without certain extremes etc.) 
[15:31] KiwiBulldog has joined the channel
[15:32] mape: stock related?
[15:32] tmedema: doesn't have to be but does that exist?
[15:32] voxpelli has joined the channel
[15:33] mape: not that I know of
[15:33] tmedema: =)
[15:33] KiwiBulldog: is anyone having issues with SIGINT not firing an event on the process object with v102?
[15:34] beanie___: KiwiBulldog: i remember that there is a issue with that
[15:35] KiwiBulldog: beanie__: ok thanks! apparently it affects all signal events.
[15:36] SubStack: tmedema: node> var dt = []; [1,4,2,0,7,3].reduce(function (a,b) { dt.push(a - b); return b; }, 0); dt.reduce(function(acc,x) { return acc + x }) / dt.length
[15:36] SubStack: -0.5
[15:36] SubStack: like that?
[15:36] shockie has left the channel
[15:37] tmedema: I guess that's an example SubStack, but I'm looking for those kind of calculations worked out in an api
[15:38] SubStack: there's nothing on http://github.com/ry/node/wikis/modules anyways
[15:38] _announcer: Twitter: "node.js in Ajax, pretty hard. But now I&#39;m making a system that matches the event type. Modules do no good" [ja] -- ishikawan(21). http://twitter.com/scraperonce/status/19749865857
[15:38] tmedema: yeah SubStack, it's not related to node though so that makes sense
[15:39] mape: look at a c lib and make bindings?
[15:39] tmedema: if I just knew how mape ^^
[15:39] tmedema: but it's okay, I can do the maths myself
[15:40] hober has joined the channel
[15:44] keeto has joined the channel
[15:46] dylang has joined the channel
[15:49] tisba has joined the channel
[15:51] akahn has left the channel
[15:51] blackdog has joined the channel
[15:52] d0k has joined the channel
[15:53] _announcer: Twitter: "I think http://nodejs.se is somewhat better than coder.io in node.js category. What do you think?" -- Jai-Gouk Kim. http://twitter.com/jaigouk/status/19750896459
[15:54] _announcer: Twitter: "checking if this tweet shows on @mape latest node.js app :D" -- CamonZ. http://twitter.com/CamonZ/status/19750998463
[15:55] mape: !tweet @CamonZ It won't, it only shows tweets with links in them :)
[16:00] donspaulding has joined the channel
[16:05] _announcer: Twitter: "Cool #nodejs / #expressjs news aggregator app by @mape http://nodejs.se/" -- TJ Holowaychuk. http://twitter.com/tjholowaychuk/status/19751786962
[16:07] stride: mape: nice :)
[16:07] mape: stride: :)
[16:07] stride: node-twitter?
[16:07] kodisha: hey mape you have new app (except wargamez ?)
[16:07] mape: kodisha: http://nodejs.se
[16:08] mape: stride: yeah, have an issue though, seems it doesn't pick up #node.js but it does node.js and #nodejs, nodejs
[16:08] _announcer: Twitter: "Very simple module for using Script with EventEmitter: http://gist.github.com/494797 #node.js" -- Robin Duckett. http://twitter.com/robinduckett/status/19751970483
[16:09] kodisha: mape:  what is with black overlay? list of retwitters?
[16:09] mape: not retweets but people who posted the same url
[16:09] stride: mape: that's normal I guess, the dot breaks hashtags for the twitter API
[16:09] kodisha: ah, i see
[16:09] mape: so the idea is to only show the first one who posted, to find people who break stuff "good people to follow"
[16:09] mape: stride: Ah k, good to know
[16:09] stride: retwitterers? I want buzzword-free 1999 back :D
[16:09] Blink7 has joined the channel
[16:10] kodisha: great app!
[16:10] kodisha: love it!
[16:11] kodisha: you need one "what is this all about" page, though 
[16:11] stride: mape: long time since I used the search API but I think I slightly remember that you could quote it to fix that. have you tried "#node.js" (including the quotes)?
[16:11] mape: stride: hmm nope, will do
[16:11] brianmario has joined the channel
[16:11] benburkert has joined the channel
[16:12] donspaulding has joined the channel
[16:14] jpld has joined the channel
[16:15] javajunky: mape:  I take it you got on ok with express in the end then ?
[16:15] mape: javajunky: never got the reload to work
[16:15] mape: but other then that it is fine :)
[16:15] javajunky: did you mention that to tj, I never got a chance to look at it :9
[16:15] caolanm: mape: bookmarked nodejs.se... ;)
[16:15] caolanm: looks great
[16:15] mape: javajunky: jup
[16:16] mape: caolanm: let me know if something is wonky/strange!
[16:16] caolanm: mape: what are all the tag things that appear when hovering over an item?
[16:16] mape: people who tweeted the same url after the first one did
[16:16] caolanm: ah I see
[16:16] mape: Hmm need to add some descriptions on the site
[16:16] caolanm: mape: yeah, I thought it might be that but could use a description ;)
[16:17] mape: yeah
[16:17] rauchg_ has joined the channel
[16:18] JimBastard: lol, why did i get banned from jquery-ot
[16:19] bpot has joined the channel
[16:19] _announcer: Twitter: "This is really cool stuff: http://bit.ly/cDCzsE - Uses Node.js and HTML5 to show all other user's cursors that are on that page in real time" -- patgannon. http://twitter.com/patgannon/status/19752746582
[16:20] hpoydar has joined the channel
[16:21] _announcer: Twitter: ".@ryah Hot new long blog post about #nodejs and #meryl. Comments greatly aprreciated :) http://bit.ly/9RTXgu" -- Kadir Pekel. http://twitter.com/kadirpekel/status/19752847475
[16:23] devinus has left the channel
[16:24] gingerbbm has joined the channel
[16:24] JimBastard: morning hpoydar 
[16:24] mikeal: anyone know who beanie___ was?
[16:24] hpoydar: JimBastard: good morning
[16:24] mikeal: he had some crazy http issues i was looking at
[16:25] rsms has joined the channel
[16:25] khug has joined the channel
[16:25] JimBastard: hpoydar: javascript party ! :D
[16:26] JimBastard: mikeal: i hear binary42 is doing the audio production work on rap today
[16:26] JimBastard: maybe have mp3 to listen to by eod
[16:26] jakehow has joined the channel
[16:26] mikeal: awesome
[16:26] mikeal: i saw him last night
[16:26] mikeal: had a good time at the meetup, and then geeked it up with Greg for like hours outside of that fry place on 2nd
[16:27] JimBastard: who is Greg again
[16:27] mikeal: he goes to ITP
[16:27] JimBastard: you gotta stop dropping first names like i know them ahaha
[16:27] mikeal: he started a company with jchris in Portland
[16:28] mikeal: everyone at the meetup seemed to know him, i run in to random people in SF who are like "you work with jchris, do you know Greg?"
[16:28] mikeal: now that he's out here i just figured everyone would already know him :)
[16:29] stride: mikeal: according to /whowas and some googling I guess he's http://github.com/beanieboi http://abwesend.com/  http://twitter.com/beanieboi
[16:29] mikeal: thanks!
[16:29] stride: np
[16:29] WALoeIII has joined the channel
[16:29] ehaas has joined the channel
[16:29] mikeal: JimBastard: you coming to the NoSQL thing tonight?
[16:30] JimBastard: perhaps
[16:30] ehaas has left the channel
[16:30] tjholowaychuk has joined the channel
[16:31] mikeal: i feel like if i don't bring some people i might get jumped by 10gen before i walk in the building :P
[16:31] mikeal: j/k
[16:32] tjholowaychuk: so for deployment any suggestions beside NODE_ENV ? I want to get rid of this {SPARK,CONNECT,EXPRESS}_ENV crap
[16:33] CrabDude has joined the channel
[16:33] maushu: http://www.zdnet.com/blog/burnette/oracle-rebrands-java-breaks-eclipse/2012
[16:33] JimBastard: cool, i got perma banned from jquery-ot 
[16:33] mindeavor has joined the channel
[16:34] maushu: JimBastard: Expanding your horizons?
[16:35] JimBastard: maushu: ive been in that room for a while
[16:35] JimBastard: apparently some of the bitchier members dont like me
[16:35] maushu: How the heck did you get banned?
[16:35] JimBastard: dunno, i guess they made a group decision when i wasnt online
[16:35] maushu: Don't tell me this is the vb code business again.
[16:36] JimBastard: its not like i got kicked, just woke up this morning to be banned
[16:36] JimBastard: im kinda over jquery anyway, i think i have it 92% mastered
[16:37] JimBastard: i blame ben_alman , its all his fault
[16:37] ben_alman: right on
[16:37] JimBastard: naaah im just kidding, you're alright
[16:37] ben_alman: thisis the first anyone's heard of any of this, anyways
[16:38] o_o has joined the channel
[16:38] _announcer: Twitter: "The current Node.js culture reminds me of the early Rails culture... promises, experiments, strong opinions." -- Kent Fenwick. http://twitter.com/kentf/status/19754052626
[16:38] peol has joined the channel
[16:39] maushu: JimBastard: http://paulirish.com/i/3a60.png
[16:39] rauchg_: but async
[16:39] JimBastard: lol
[16:39] JimBastard: so i guess paul decided he didnt want me in there
[16:39] tjholowaychuk: boo rails
[16:40] JimBastard: i was getting tired of rebecca murphey describing herself as a "hot chick" anyway. 
[16:40] tjholowaychuk: JimBastard: any luck with table.js? I will probably close source it again until its finished lol
[16:40] _announcer: Twitter: "Cool end-user performance javascript library called Boomerang. Might try to integrate this with node.js. http://goo.gl/87pm" -- Rob Faraj. http://twitter.com/robfaraj/status/19754166126
[16:40] JimBastard: tjholowaychuk: been distracted, havent actually started yet
[16:40] JimBastard: i got a local clone though, you can close if you want
[16:40] JimBastard: sorry
[16:41] femto has joined the channel
[16:41] tjholowaychuk: no worries was just curious
[16:42] mape: Daniel Garcia?
[16:42] donspaulding has joined the channel
[16:42] tisba has left the channel
[16:43] tjholowaychuk: jesus, github still does not have a confirmation to set something to private
[16:43] paul__ has joined the channel
[16:43] tjholowaychuk: and lose all your followers lol
[16:43] _announcer: Twitter: "A nice aggregator by tweets #nodejs app using #express. Now, @mape, can you let me follow it? :) http://nodejs.se/" -- Dion Almaer. http://twitter.com/dalmaer/status/19754382809
[16:43] justinday has left the channel
[16:44] mape: Hmm
[16:45] cardona507 has joined the channel
[16:46] tjholowaychuk: mmm nDistro is sweet
[16:46] caolanm: tjholowaychuk: sure that's the reason for loosing your followers? ;)
[16:46] tjholowaychuk: coalanm: well no im not loosing any lol but I close-sourced one project that was not really finished and they dont even have a confirmation
[16:46] tjholowaychuk: I accidentally did that to JSpec way back and lost everyone :D
[16:46] caolanm: wow
[16:46] caolanm: that does seem pretty mental
[16:46] creationix has joined the channel
[16:47] tjholowaychuk: slightly yeah
[16:47] khug has joined the channel
[16:47] _announcer: Twitter: "Experimenting with Node.js http://bit.ly/aMz8qV #nodejs" -- Régis Gaidot. http://twitter.com/rgaidot/status/19754638932
[16:47] robinduckett: I went out with a girl once who deemed herself FAR hotter than she actually was
[16:47] robinduckett: Describing it as "my loss" when I dumped her
[16:48] maushu: robinduckett: your loss.
[16:48] robinduckett: She was shaped like a sphere and had a diameter of roughly 5 feet
[16:48] ryah: irc.nodejs.org
[16:48] robinduckett: She rolled more than walked
[16:48] maushu: ryah: Dammit. I'm at work! I can't join! ;_;
[16:49] isaacs has joined the channel
[16:49] JimBastard: ryah: http://chat.mibbit.com/ wont connect
[16:49] mape: Seems to work fine
[16:49] ashleydev has joined the channel
[16:49] maushu: JimBastard: It's not implemented... or at least there is a problem registering or something. Mibbit does send the USER command.
[16:50] robinduckett: ryah: doesn't work with mIRC?
[16:50] isaacs has joined the channel
[16:50] damienkatz has joined the channel
[16:52] SubStack: ryah: which channel?
[16:52] SubStack: /list doesn't seem to work
[16:53] robinduckett: SubStack #web
[16:53] maushu: SubStack: Not implemented.
[16:53] mape: bah I lost my status window in irssi :S
[16:53] maushu: Real men don't need list!
[16:53] robinduckett: maushu: /window 1?
[16:53] maushu: They find the channel by brute forcing every channel name!
[16:55] _announcer: Twitter: "good benchmark "Scale Stack vs node.js vs Twisted vs Eventlet" http://bit.ly/dzAaqA #nodejs  #twisted #eventlet  #scalestack" -- Régis Gaidot. http://twitter.com/rgaidot/status/19755148716
[16:56] robinduckett: awh the web interface is escaped :P
[16:57] _announcer: Twitter: "HQ @ google tech talk on # For A nodejs." [nl] -- Carlos Cardona. http://twitter.com/cgcardona/status/19755312485
[16:58] cardona507: wow - that came through twisted :p
[16:58] mape: do google ever livestream the tech talks?
[16:59] maushu: cardona507: I KNEW IT! You are a Dutch!
[16:59] EyePulp has joined the channel
[16:59] _announcer: Twitter: "How to Install Node.JS on Windows: http://blog.dtrejo.com/how-to-install-nodejs-on-windows" -- Cristóferson Bueno. http://twitter.com/cbueno/status/19755430365
[16:59] _announcer: Twitter: "Meryl:  a thin web layer for nodejs /by @kadirpekel http://bit.ly/bYguiv #nodejs #meryl #webframework" -- Régis Gaidot. http://twitter.com/rgaidot/status/19755432088
[16:59] cardona507: :D
[16:59] mape: ryah: you should poke paul sitting right infront of you, he seems happy about it
[17:00] maushu: Anyways, time to go home.
[17:00] _announcer: Twitter: "I &lt;3 Node.JS" -- Elliott Carlson. http://twitter.com/elliottcarlson/status/19755501183
[17:00] mape: or well, depends on the formation, and if you are actually speaking.. and he is in front of you, duh
[17:00] maushu: Really need to fix that escaping.
[17:00] dylang has joined the channel
[17:01] deepthawtz has joined the channel
[17:01] isaacs: hey, sign into irc://irc.nodejs.org#web
[17:01] mape: They really should live stream the tech talks, use the tubs for what they are worth
[17:01] deepthawtz: wooo. go ryah
[17:01] jamesduncan_ has joined the channel
[17:02] _announcer: Twitter: "really worth reading: "Node and Scaling in the Small vs Scaling in the Large" by @al3x #nodejs  http://al3x.net/2010/07/27/node.html" -- Soenke Ruempler. http://twitter.com/s0enke/status/19755627271
[17:02] mjr_ has joined the channel
[17:02] chewbranca has joined the channel
[17:04] mape: where is the url to the web-irc-thingimadoo?
[17:04] shockie has joined the channel
[17:07] JimBastard: !tweet @elliottcarlson #node.js loves you too
[17:07] _announcer: Twitter: "beautiful post by @al3x on node.js but real meat is the eloquent, accurate, perspective on scale. http://bit.ly/c2QJod" -- Jud Valeski. http://twitter.com/jvaleski/status/19755987991
[17:07] bean0r1___ has joined the channel
[17:07] _announcer: Twitter: "this #nodejs irc bot just created a cool real-time feedback loop -&gt; send tweet mentioning node and get notified by xchat-notify-osd immed." -- Soenke Ruempler. http://twitter.com/s0enke/status/19756014327
[17:08] benburkert has joined the channel
[17:08] s0enke: heheh this is fun :D
[17:08] zapnap has joined the channel
[17:09] robinduckett: !tweet test
[17:09] robinduckett: hmmm
[17:09] robinduckett: !tweet !tweet #nodejs
[17:10] robinduckett: !tweet !tweet #node.js
[17:10] robinduckett: lol feedback loop exploit fail
[17:10] robinduckett: :D
[17:11] Nathan_ has joined the channel
[17:12] JimBastard: lol robinduckett i wonder if that works
[17:12] robinduckett: I suspect if I put a twitter bot in here we could do a battle of the bots
[17:12] robinduckett: just posts whenever someone says #nodejs
[17:12] mscdex: node-battlebot
[17:12] robinduckett: on twitter
[17:12] robinduckett: which in turn gets picked up by the announce bot
[17:12] JimBastard: Twitter: "!tweet test
[17:13] robinduckett: It's probably because it doesn't begin with !tweet
[17:13] JimBastard: yep
[17:13] mscdex: maybe it doesn't pick up its own messages
[17:13] JimBastard: that too
[17:13] robinduckett: it would make sense as IRC doesn't echo back what you privmsg
[17:14] robinduckett: so you just have to trust your message got through to the server
[17:14] robinduckett: (everyone goes quiet to make me paranoid)
[17:15] grahamalot has joined the channel
[17:17] fil`work has joined the channel
[17:18] _announcer: Twitter: "We Say thee yeah! #MongoDB Wwe say thee yeahe say thee yeah, Node.js" -- pit. http://twitter.com/0xPIT/status/19756712859
[17:19] [[zz]] has joined the channel
[17:19] BBBB has joined the channel
[17:19] _announcer: Twitter: "Yeah! to #MongoDB / Yeah! to Node.js" -- pit. http://twitter.com/0xPIT/status/19756792270
[17:20] _announcer: Twitter: "OH: "#nodejs is a nonblocking jail, and it is impossible to escape" -- @ryah" -- Ⓘⓢⓐⓐⓒ. http://twitter.com/izs/status/19756818972
[17:20] dylang has joined the channel
[17:20] creationix: isaacs: I was about to tweet that!
[17:22] creationix: mape: where was your gist with the quad core benchmarks?
[17:22] technoweenie has joined the channel
[17:23] mape: creationix: una sec
[17:26] _announcer: Twitter: "http://nodejs.se/ This is my model for the new #pixelame" -- manel villar. http://twitter.com/galchwyn/status/19757201896
[17:26] creationix: isaacs: https://gist.github.com/dbf90f0b7f8866b3ab2f https client
[17:26] rektide: fun little read by Al3x, but i wish he'd started by saying his doubts were about whether node.js fit _his problem_, rather than "Suffice to say, I don't begrudge anyone a tool they enjoy using, but I am more than a bit skeptical."
[17:27] gwoo has joined the channel
[17:27] Aria has joined the channel
[17:27] rektide: there are plenty of use cases where an evented model works superb, and node.js ought be ideal for those.
[17:27] mape: creationix: hmm http://gist.github.com/434521 that isn't the one right?
[17:27] dmcquay has joined the channel
[17:28] creationix: mape: no
[17:28] creationix: hmm
[17:28] mape: you tweeted it
[17:28] creationix: heh, searching old tweets is hard, I'll try
[17:28] mjr_: rektide: also, his claim is sort of that everybody needs a solution that lets them do either evented or threaded and switch around as necessary.  I don't think everybody does need that.
[17:28] mape: http://gist.github.com/434549
[17:29] mape: there?
[17:29] mape: Requests per second:    35231.05 [#/sec] (mean)
[17:29] creationix: yeah, think so
[17:29] creationix: thanks
[17:29] rektide: mjr_: yes, agreed.  "there are plenty of use cases where an evented model works superb," you just have to be able to know that ahead of time.
[17:29] tjholowaychuk: mape: whats the response?
[17:29] tjholowaychuk: mape: just hello world stuff?
[17:30] mape: tjholowaychuk: buffer cache of the static index.html If I recall correctly
[17:30] tjholowaychuk: I was getting about 35k with beam
[17:30] claudiu__ has joined the channel
[17:30] mape: I wanna get a faster server but I have no use for it :(
[17:31] jchris has joined the channel
[17:32] saikat has joined the channel
[17:33] tjholowaychuk: I have so many legacy server stuff sitting around lol wish I could get rid of them
[17:33] tjholowaychuk: to lazy to move everything over
[17:35] _announcer: Twitter: "Meryl - A thin web layer for NodeJS - http://su.pr/2jh1rS" -- eBot. http://twitter.com/kicauan/status/19757793142
[17:36] sudoer has joined the channel
[17:38] _announcer: Twitter: "as @sogrady stated, #nodejs is opinionated software. @al3x's skepticism doesnt address those whose goals coincide with the evented model." -- rektide de la fey. http://twitter.com/rektide/status/19757999506
[17:39] pgriess has joined the channel
[17:40] tjholowaychuk: creationix: who deals with these CLAs?
[17:40] creationix: tjholowaychuk: forward them to Adam
[17:40] creationix: and let me know so I know who to accept patches from
[17:40] tjholowaychuk: creationix: k thanks man
[17:40] tjholowaychuk: yup ill cc
[17:40] jxson has joined the channel
[17:41] _announcer: Twitter: "the false implication i find dangerous: it's only simply-scalable solutions that evented is good for solving. #nodejs" -- rektide de la fey. http://twitter.com/rektide/status/19758174077
[17:41] rektide: i expect better from al3x
[17:42] _announcer: Twitter: "As a JS devotee, node.js is exceedingly interesting. May change what I do, as well as the way I do what I do now. http://nodejs.org/" -- Mikol Graves. http://twitter.com/ambientpunk/status/19758221041
[17:42] rektide: implication is too kind; "In fact, taking a hybrid approach to concurrency seems to be the way forward if the academy is any indication. Computer scientists at the University of Pennsylvania found that a combination of threads and events offers the best of both worlds."
[17:42] chewbranca has joined the channel
[17:42] [[zz]] has joined the channel
[17:42] ceej: tjholowaychuk: I saw this slide http://www.slideshare.net/ggoodale/getting-started-with-mongodb-and-nodejs I never knew express had built in mongo support :) http://screencast.com/t/YzNlNTU5
[17:43] tjholowaychuk: creationix: haha nvm he sent the dojo one, I sent him a link
[17:43] tjholowaychuk: ceej: it doesnt lol
[17:43] ceej: I know :)
[17:43] tjholowaychuk: wtf
[17:43] tjholowaychuk: haha
[17:43] creationix: tjholowaychuk: oops
[17:43] ceej: made me chuckle 
[17:44] creationix: ceej: how goes Texas weather?
[17:44] creationix: it was 65 here this morning
[17:44] nrstott has joined the channel
[17:44] javajunky has joined the channel
[17:44] kodisha has joined the channel
[17:44] ceej: creationix: It was cool this morning, now it's about 86
[17:44] javajunky: mape: did you put up the source for nodejs.se ?
[17:44] ceej: miss it? :)
[17:44] creationix: nice
[17:45] creationix: ceej: not too much, my wife misses having a summer
[17:45] mape: javajunky: No that I haven't yet
[17:45] creationix: it never gets hot here
[17:45] mape: Need to figure out some nStore things before
[17:45] joshdulac has joined the channel
[17:45] ceej: ye.....but sometimes it's just too hot out here
[17:45] creationix: ceej: agreed
[17:45] mape: don't really trust it is saving
[17:45] javajunky: mape: I was just interested to see how simple it would be to use my connect-auth to add in re-tweet capabilities (I'm always looking to check the api exposes enough things to people) 
[17:45] creationix: mape: really?
[17:45] creationix: hmm
[17:46] keeto has joined the channel
[17:46] mape: creationix: I closed it down and it lost a lot of progress, so now I don't want to close it down at all
[17:46] mape: but I guess it gets worse the longer I wait
[17:46] creationix: hmm, that sucks
[17:47] jamesduncan_ has joined the channel
[17:48] robotarmy has joined the channel
[17:49] TommyM has joined the channel
[17:50] programble has joined the channel
[17:51] _announcer: Twitter: "Node.js framework: the next section on my radar." [fr] -- Nicolas Martignole. http://twitter.com/nmartignole/status/19758841103
[17:53] silentrob has joined the channel
[17:54] _announcer: Twitter: "nodejs news, tweets, and joy:  http://nodejs.se/  #nodejs" -- Steve Davie. http://twitter.com/stevendavie/status/19758984438
[17:54] tyfighter has joined the channel
[17:56] JimBastard: ahaha #jquery trolled again
[17:58] mischief has joined the channel
[17:59] maushu has joined the channel
[18:00] aliem has joined the channel
[18:01] bmizerany has joined the channel
[18:01] maushu: When logging do the servers keep the log file open or do they open and close it each time?
[18:02] _announcer: Twitter: "that said, not looking forward to mucking with IPC again. baked in multithreaded #WebWorker's is high on my wish list. #nodejs #actor" -- rektide de la fey. http://twitter.com/rektide/status/19759481394
[18:03] rektide: ok i need to chill now
[18:04] aconran has joined the channel
[18:04] jacoblyles has joined the channel
[18:05] isaacs has joined the channel
[18:06] creationix has joined the channel
[18:06] Aria has joined the channel
[18:07] _announcer: Twitter: "Just watched @ryah present #node.js at Google" -- Tim Caswell. http://twitter.com/creationix/status/19759802871
[18:07] matclayton has left the channel
[18:07] mape: creationix: Good presentation? Anything new and shiny?
[18:08] Tobsn has joined the channel
[18:08] kodisha has joined the channel
[18:08] Tobsn: ah, thats better.
[18:09] JimBastard: aye welcome Tobsn 
[18:09] creationix: mape: talked a lot about why node is awesome and what it is
[18:09] Tobsn: :)
[18:09] mape: creationix: Ah, did he talk about not trying to fake a sync coding style?
[18:09] Tobsn: is someone here using socket.io? for some reason the connection gets lost after ~300 seconds
[18:10] mape: Tobsn: Know micheil talked about that earlier
[18:10] _announcer: Twitter: "Slides from tech talk: http://nodejs.org/tech_talk_july.pdf" -- Ryan Dahl. http://twitter.com/ryah/status/19759964346
[18:10] SubStack: Tobsn: which transport?
[18:11] Tobsn: oh really? - its really odd... i see all kinds of weird stuff... like in firefox it uses websockets (through which type of resource i dont know (flash/blah)) and after the connection gets lost for a second it starts using XHR longpolling and starts a new connection with every try
[18:11] Tobsn: also in IE 6.0 without flash it tries to connect but never establishes a connection
[18:12] felixge has joined the channel
[18:12] felixge has joined the channel
[18:12] mape: Tobsn: oh, em micheil has issues with that on websockets, think safari timed out or something, think he fixed it if I recall correctly
[18:12] Tobsn: i made some workarounds for the disconnects cause im sending a id every 2 seconds to the server - so if there is no reply in the last 5 seconds i reconnect
[18:12] mape: but that was on his websocket server
[18:13] huyhong has joined the channel
[18:13] _announcer: Twitter: "thoughtbot News: Rock &#39;Em Sock&#39; Em Robots: Node.js Knockout is a programming competition, simil ... http://bit.ly/bYz2Jo http://ischroedi.de" [pt] -- ischroedi. http://twitter.com/ischroedi/status/19760164464
[18:13] JimBastard: Tobsn: rauchg_ uses socket.io
[18:13] JimBastard: i think
[18:13] _announcer: Twitter: "#nodejs looks like one huge #javascript #monad" -- Vyacheslav Egorov. http://twitter.com/mraleph/status/19760199370
[18:14] EyePulp has joined the channel
[18:14] _announcer: Twitter: "good post "Deliver realtime information with nodejs" http://bit.ly/cndzaN #nodejs" -- Régis Gaidot. http://twitter.com/rgaidot/status/19760213415
[18:15] murz has joined the channel
[18:16] Tobsn: hmm
[18:17] rauchg_: Tobsn: 
[18:17] rauchg_: that's being address in `master` (http://cl.ly/1nyB) as we speak
[18:17] rauchg_: by implementing heartbeats
[18:17] Tobsn: ah i see
[18:17] Tobsn: wait i show you what i got
[18:17] rauchg_: it'll be probably released tonight 
[18:18] Tobsn: http://dev.wee.sh/test/test.html
[18:18] huyhong has left the channel
[18:19] FransWillem has joined the channel
[18:20] mape: hmm that injects the flash even though I have websocket support?
[18:20] Tobsn: no idea... i cant follow what its doing
[18:21] Gruni has joined the channel
[18:21] rauchg_: mape: 
[18:21] Tobsn: rauchg_, heartbeats make sense yep... but you also have to make sure socket.connected is up to date
[18:21] rauchg_: unfortunately 
[18:21] rauchg_: web socket js didn't work with dynamic injection of scripts
[18:21] Tobsn: i see that the connection drops - disconnect gets called but socket.connect still shows true
[18:22] mape: rauchg_: can't it just check for wb support and use swfobject if it fails?
[18:22] Tobsn: and i really dont know why its using XHR longpolling for no reason
[18:22] rauchg_: web-socket-js should be doing that
[18:22] rauchg_: i committed a patch
[18:22] rauchg_: he didn't use to check for flash support even
[18:22] mape: hmm k
[18:22] _announcer: Twitter: "Node.js is genuinely exciting http://bit.ly/9IRXu4" -- Jeremy Day. http://twitter.com/jeremyday/status/19760730619
[18:22] rauchg_: if actionscript didn't suck so bad i'd rewrite it 
[18:22] _announcer: Twitter: "The MongoDB NoSQL Database Blog - Node.js and MongoDB http://bit.ly/9tZXFZ" -- Jeremy Day. http://twitter.com/jeremyday/status/19760737866
[18:22] Tobsn: oh btw. HUGE bug: if i dont set the transportremember:false and it sets a cookie to remember the second time i go to the page it goes completely berserk
[18:23] rauchg_: Tobsn: interesting, did you check why ?
[18:23] Tobsn: you can check it out
[18:23] tjholowaychuk: rauchg_: as far as rps goes ejs vs jade is not much of a difference surprisingly 
[18:23] tjholowaychuk: kinda weirds me out
[18:23] tjholowaychuk: should be quite a bit faster
[18:23] Tobsn: http://dev.wee.sh/test/test.html
[18:24] rauchg_: it should yeah
[18:24] Tobsn: load it - let it connect - close the tab - open a new one with the same url
[18:24] Tobsn: lol here it just stops
[18:24] rauchg_: uhm
[18:24] _announcer: Twitter: "rebuilt my nodejs long polling server today to use redis for messaging as well as storage. code is so much simpler now." -- Daniel Knell. http://twitter.com/danielknell/status/19760857567
[18:24] rauchg_: it worked for me 
[18:24] mjr_ has joined the channel
[18:24] Tobsn: it did?
[18:25] Tobsn: doesnt here
[18:25] rauchg_: the only reason remember transport is there is because flash doesn't work through proxies unfortunately 
[18:25] rauchg_: so it'll time out 
[18:25] rauchg_: and another transport should be checked
[18:25] rauchg_: and that takes time
[18:25] rauchg_: so we want to remember it 
[18:26] lvh has joined the channel
[18:26] lvh: Hey :-)
[18:26] mape: howdy
[18:26] lvh: I'm a twisted programmer and I'd like to try node for fun.
[18:26] lvh: The stuff we do now has (like all websites who respect themselves nowadays) websocket stuff.
[18:26] lvh: http://wiki.github.com/ry/node/modules
[18:27] lvh: Also, we use TDD for everything.
[18:27] lvh: I noticed there's many modules doing the same thing.
[18:27] lvh: How do I know which one to use?
[18:27] _announcer: Twitter: "[del] [from mrphoebs] kadir pekel » Blog Archive » Meryl – A thin web layer for NodeJS:  http://url4.eu/6W8Ez" -- sldfjd ldajds. http://twitter.com/sldfjd/status/19761004696
[18:27] rauchg_: lvh: expresso by tjholowaychuk 
[18:27] rauchg_: for TDD
[18:27] tjholowaychuk: rauchg_: express should have named splats
[18:27] tjholowaychuk: might look kinda ug
[18:27] Tobsn: yep - here it cant connect
[18:28] tjholowaychuk: could add to the syntax i guess
[18:29] Tobsn: rauchg_, i get an error in firebug saying "No transport available"
[18:29] Tobsn: if i have the remember thing on
[18:29] lvh: Also, for videos to watch with popcorn: http://www.yuiblog.com/blog/2010/05/20/video-dahl/ # reccomended?
[18:29] rauchg_: Tobsn: what value does the cookie contain ?
[18:30] kriszyp_ has joined the channel
[18:30] Tobsn: "websocket"
[18:31] Guest36371 has joined the channel
[18:32] _announcer: Twitter: "@ryah do you have any regrets regarding choosing #js for #nodejs?" -- Vyacheslav Egorov. http://twitter.com/mraleph/status/19761302502
[18:32] khug has joined the channel
[18:32] mscdex: !tweet @mraleph never!
[18:32] technoweenie: should've used ruby
[18:33] JimBastard: technoweenie: you ever use ruby?
[18:33] technoweenie: no
[18:33] JimBastard: i hear its kinda cool
[18:33] mscdex: node.rb
[18:33] mscdex: lol
[18:33] JimBastard: we gotta deal with this handprint calculator thing at work though, its mostly ruby
[18:33] mattly has joined the channel
[18:34] V1_ has joined the channel
[18:34] technoweenie: high five!
[18:34] JimBastard: :-D
[18:35] JimBastard: yeah, we got some Dick working on it now
[18:35] technoweenie: i hope its a good Dick
[18:35] JimBastard: well i think he goes by Dix
[18:36] JimBastard: lulz
[18:36] stride: so you have multiple Dick(s) working on it?
[18:36] mizerydearia has joined the channel
[18:36] JimBastard: naah just the one Dix
[18:37] CIA-77: node: 03Brainfucker 07master * r29ff62b 10/ lib/net.js : fix OpenSSL 100% CPU usage on error - http://bit.ly/c3gDVs
[18:37] _announcer: Twitter: "reading about evented IO in node.js. and also looking at pattern matcher :-/ ! Should have done that earlier!" -- Nishant Modak. http://twitter.com/nishantmodak/status/19761596478
[18:37] CIA-77: node: 03Ben Noordhuis 07master * r461bdd0 10/ (4 files in 2 dirs): 
[18:37] CIA-77: node: Buffer: adjust buffer size so the base64-decoded input fits snugly.
[18:37] CIA-77: node: Stops Valgrind from complaining about uninitialized memory access. - http://bit.ly/9Y7rYC
[18:37] ryah: fuck
[18:37] mape: ?
[18:37] ryah: force push
[18:37] _announcer: Twitter: "yay, my expresso TDD #nodejs lib featured in the first "Node Roundup" http://bit.ly/aihDyL" -- TJ Holowaychuk. http://twitter.com/tjholowaychuk/status/19761627917
[18:37] CIA-77: node: 03Ben Noordhuis 07master * r95638c9 10/ (4 files in 2 dirs): 
[18:37] CIA-77: node: Buffer: adjust buffer size so the base64-decoded input fits snugly.
[18:37] CIA-77: node: Stops Valgrind from complaining about uninitialized memory access. - http://bit.ly/b4dnv8
[18:37] ryah: sorry
[18:37] ryah: didn't want to have Brainfucker's commit
[18:38] ryah: or user name -_-
[18:38] cardona507: cool - a node roundup - bookmarked!
[18:39] V1_: ryah: Theres in error in your tech_talk.pdf :p
[18:39] V1_: an error*
[18:40] ryah: V1_: yes?
[18:40] V1_: net.on(’connection’, function (c) { <-- shouldn't that be s.on('connection')
[18:40] mscdex: woot, there goes nodebuilder
[18:40] mscdex: :>
[18:40] ryah: oh, thanks
[18:40] V1_: yw
[18:40] derferman has joined the channel
[18:41] V1_: v
[18:41] V1_: v
[18:41] V1_: o, wrong copy paste ;$
[18:42] V1_: some F* stole my nick again, and ghosting it doesn't help -_-
[18:42] mscdex: :S
[18:42] _announcer: Twitter: "Further to # node.js RT: @ janl: &quot;In a system of significant scale, there Is no magic bullet.&quot; - @ # Al3x in http://jan.io/cTpa nodecontent" [de] -- Benjamin Erb. http://twitter.com/b_erb/status/19761930411
[18:42] V1_: freenode doesn't have KILL settings on registered nicknames ;(
[18:43] V2: v
[18:43] mscdex: shouldn't it automatically rename them after some timeout of not registering?
[18:43] V1: yay
[18:43] FransWillem has joined the channel
[18:43] mscdex: heh
[18:43] V1: that what's the /ns set kill should do
[18:43] V1: but freenode doesn't support that setting
[18:44] shockie has joined the channel
[18:44] V1: for some obscure reason
[18:44] coobr has joined the channel
[18:45] c4milo has joined the channel
[18:46] bradleymeck_: isaacs you about?
[18:47] tjholowaychuk: wahoo base64 fixed
[18:47] mape: :)
[18:48] b_erb has joined the channel
[18:49] cardona507: whoever put this together http://nodejs.se/ - nice job
[18:49] maushu: When logging do web servers keep the log file open or do they open and close it each time?
[18:50] _announcer: Twitter: "Today I wondered what it would take to replicate a memcached "server" in nodejs. I found it out, 350 lines of code, awesome but pointless." -- Arnout Kazemier. http://twitter.com/3rdEden/status/19762377799
[18:50] mape: cardona507: Thanks :)
[18:50] _announcer: Twitter: "I chose #nodejs neither for small scaling nor for large scaling, but for code reuse working with with CouchDB" -- Jason Smith. http://twitter.com/_jhs/status/19762417269
[18:51] bradleymeck_: maushu, generally just open, flushed
[18:51] maushu: Hmmm.
[18:51] donpdonp has left the channel
[18:54] JimBastard: http://www.msn101.com/content/forums/2008/10/23/lolcopter7ro_4WX3NR.gif
[18:54] _announcer: Twitter: "@davisml A node.js tech talk, if you're interested. http://bit.ly/d3aXNT" -- Steve Streza. http://twitter.com/SteveStreza/status/19762637186
[18:55] _announcer: Twitter: "I'm impressed by node.js and the Python frameworks: "node.js vs Twisted vs Eventlet vs Scale Stack" http://oddments.org/?p=494" -- Eric Day. http://twitter.com/edaypdx/status/19762663578
[18:55] mscdex: maushu: i would think keep it open in append mode
[18:55] mscdex: maushu: iirc you can't delete an access_log with apache while it's running
[18:55] aheckmann has joined the channel
[18:56] mscdex: er, you can't delete apache's access_log rather
[18:56] maushu: I see.
[18:57] eday has joined the channel
[18:58] eday: hey all, I put node.js up against Twisted, Eventlet, and a C++ server based on libevent. It did quite well :) http://oddments.org/?p=494
[18:59] _announcer: Twitter: "Yet Another node.js based web framework - Criteria http://ow.ly/2hVLd" [sl] -- Martin Rusev. http://twitter.com/martin_rusev/status/19762915513
[18:59] _announcer: Twitter: "Slides from @ryah s Google Tech Talk this morning on #nodejs http://bit.ly/d3aXNT" -- Carlos Cardona. http://twitter.com/cgcardona/status/19762918089
[19:00] eday: if anyone has feedback on how to make it faster for larger payloads, please leave a comment. not sure if it's extra buffering happening going on or just the js overhead
[19:00] technoweenie: are you using buffers
[19:00] technoweenie: ryan's talk about from jsconf talked about why node was slow with larger payloads, and how buffers fixes it
[19:01] eday: technoweenie: ahh, didn't see that. you can see the code on the post, it's the basic echo server example
[19:01] technoweenie: oh right. that should be using buffers internally i think. hmm
[19:02] bradleymeck_: also eday, you can pass around stuff to multiple cores, i just dont have experience w/ it i think only connect's really does it through multiple processes w/o set affinities
[19:03] eday: bradleymeck_: hmm, form what I understood the main socket I/O loop was a single thread. I know there are disk I/O threads and other worker threads, but sockets and socket handling was single core. is this not the case anymore?
[19:03] FransWillem has joined the channel
[19:04] bradleymeck_: idk how it works exactly, you should be able to pass sockets to children from what i understand of it
[19:04] eday: bradleymeck_: sure, multi-process would be easy enough, but then you're out of process and need IPC if you have socket cross-chatter (ie, IRC server)
[19:05] _announcer: Twitter: "from @ry: Goal: write high-performance servers easily. Easily != C http://bit.ly/d3aXNT #nodejs" -- Scott González. http://twitter.com/scott_gonzalez/status/19763260747
[19:05] bradleymeck_: true
[19:05] mape: ry :(
[19:08] tyler_: is there a good date module? javascript support for dates is kinda weird
[19:09] _announcer: Twitter: "http://jeffkreeftmeijer.com/2010/experimenting-with-node-js/ cool little article using node.js" -- Bradley Price. http://twitter.com/bradleyprice/status/19763485738
[19:10] mape: tyler_: just find a good js one and use that? :)
[19:10] mape: it's all just js after all
[19:10] tyler_: mape, any suggestions?
[19:11] mape: http://www.datejs.com/ ?
[19:12] pgriess has joined the channel
[19:13] mscdex: yeah there is an error in ryah's slides :S
[19:14] tyler_: mape, thanks
[19:14] mape: np, haven't tried it but google seems to think it is lucky
[19:14] _announcer: Twitter: "node.js knockout (like Rails Rumble for node.js) - http://pvlnk.me/cVZWhl (where is the .NET version?)" -- Patrick Veverka. http://twitter.com/veverkap/status/19763813625
[19:15] tyler_: mape, how do you include libraries in nodejs? in html you can do <script src=> do i just copy and paste the whole lib?
[19:15] mape: tyler_: no put it in a file and do a require('filename_without_the_dot_js');
[19:15] claudio has joined the channel
[19:15] claudio has joined the channel
[19:16] tyler_: mape, oh. awesome thanks
[19:16] mape: :)
[19:16] tyler_: i thought that only works for commonJS mods
[19:17] SubStack: which version did .on appear?
[19:17] _announcer: Twitter: "#reddit Scale Stack vs node.js vs Twisted vs Eventlet: submitted by  dlsspy  [link] [comment] http://bit.ly/bJcOMi #rulez" -- REDDITSPAMMOR. http://twitter.com/REDDITSPAMMOR/status/19763956614
[19:17] JimBastard: SubStack: 0.1.100ish
[19:17] SubStack: kk
[19:17] mape: tyler_: well it is fairly easy to make it into one, just use exports.myFunction = function(){}; to make it useable in node
[19:18] SubStack: JimBastard: thanks # now your "thanks" column will be ++
[19:18] SubStack: wherever that irc table went
[19:18] _announcer: Twitter: "a small json-http server i coded for testing and prototyping issues with Node.js  http://bit.ly/aUtoh1 Quite nice for dev purposes." -- Marc Logemann. http://twitter.com/logemann/status/19764042228
[19:19] JimBastard: stats.nodejs.se
[19:19] SubStack: aha
[19:20] JimBastard: !tweet @logemann nice! you might want to also check out http://github.com/cloudhead/journey
[19:20] JimBastard: i love how logemann went from being a hater to a blogger + module writer in one day
[19:20] jbrantly1 has joined the channel
[19:20] JimBastard: bradleymeck_ gets +15 more for announcer
[19:21] JimBastard: errr, utility rather
[19:21] JimBastard: maushu gets the other pts
[19:21] maushu: How many points in total?
[19:22] JimBastard: maushu: thats 7.5 each
[19:22] mape: hmm.. http://diy.stackexchange.com/ (home improvement)
[19:23] mape: strangest url in a long time
[19:23] JimBastard: how is that strange mape ?
[19:23] JimBastard: www.expertsexchange.com is strange
[19:23] JimBastard: www.expertssexchange.com is strange
[19:24] JimBastard: i give up
[19:24] mape: most people on the web don't think diy is home improvement, rather hacking a webcam into a car is diy
[19:24] rektide: anyone seen any decent negative posts / tweets on al3x's comments? :/
[19:24] mape: heh, trying to find something to throw at someone else?
[19:24] rektide: too many people agreeing w/ al3x, need some counter points
[19:24] rektide: its just boring is all, mape
[19:24] bradleymeck_: rektide if you want me to list quite a few i can?
[19:25] Tobsn: is there some sort of nodejs manager? like php-fpm for php
[19:25] rektide: bradleymeck_: post em!! :)
[19:25] mape: rektide: check the ycombinator post?
[19:25] Tobsn: that checks if instance xy is still running and monitors it etc.
[19:25] bradleymeck_: i dont post things on the net, i talk and discuss and yell
[19:25] rektide: mape: ah, good call, have not, will do.  was heading to the google group.
[19:26] mape: http://news.ycombinator.com/item?id=1552908
[19:26] bradleymeck_: Tobsn if its just servers, spark is there, and monit can be used, was a tutorial on it a while back w/ monit
[19:27] Tobsn: so its basically just daemon watching?
[19:27] Tobsn: is there something that spawns x instances of a nodejs app like a daemon (apache -> fork children)
[19:28] Tobsn: maybe something that starts/kills instances based on load
[19:28] _announcer: Twitter: "A dirt-simple URL dispatcher for Connect: http://bit.ly/aH73eL #nodejs #connect" -- Caolan McMahon. http://twitter.com/caolan/status/19764590530
[19:29] caolanm has joined the channel
[19:29] mizerydearia has joined the channel
[19:30] hellp has joined the channel
[19:30] pgriess has joined the channel
[19:30] Tobsn: uh that dispatch thing looks really neat with quip
[19:30] caolanm: thanks Tobsn :)
[19:31] Tobsn: no seriously - that looks really nice
[19:31] Tobsn: :P
[19:31] Tobsn: it looks like nodejs sucks me in... poor php roots.
[19:32] Tobsn: caolanm, if you do a require - where is the file coming from?
[19:32] Tobsn: would it be user.js stored in the path?
[19:32] _announcer: Twitter: "@kuroikaze Node.js Knockout: http://is.gd/dPeDh" -- Федор Игоревич. http://twitter.com/suxxes/status/19764831487
[19:32] Tobsn: (im still learning the syntax of the nodejs stuff)
[19:32] caolanm: yeah, user.js would need to be in your path somewhere
[19:33] caolanm: in the README I think I used require('./user')
[19:33] Tobsn: those required files, do they have to start with something special? like could user.js just have "console.log('im here');" in it?
[19:34] caolanm: Tobsn: take a look at some peoples node modules on github, usually the interesting stuff is in /lib ;)
[19:34] caolanm: but basically you have an exports object
[19:34] Tobsn: well the only other thing i wonder is how it works internal
[19:34] voodootikigod has joined the channel
[19:35] caolanm: and anything you assing to the exports object is available outside the module
[19:35] Tobsn: like if you do a require() - is it event driven included or does it load it once when parsing the script the first time - if its even driven - does it stay in memory or does it get read into the parser every time it gets required
[19:35] bradleymeck_: tobsn it is cached
[19:36] Tobsn: on first execution or on first parse of the whole thing?
[19:36] bradleymeck_: execution
[19:36] Tobsn: hmm thats nice
[19:37] Tobsn: is there some sort of filecheck if it changed or do you need to restart the node?
[19:37] mape: restart
[19:37] Tobsn: k
[19:37] caolanm: mape: can you make the links clickable on nodejs.se?
[19:37] bradleymeck_: there are a few hotswappers but they take perf hits
[19:37] Tobsn: well, now i just need to find out how to control this beast.
[19:37] mape: caolanm: the headlines are
[19:37] mape: but yeah, will do
[19:37] caolanm: cheers
[19:38] Tobsn: bradleymeck_, yeah i saw pokenode or so
[19:38] caolanm: didn't realise I could click the headlines
[19:38] mape: if you hover them you should get an underline, and cursor pointer
[19:38] mape: but it isn't obvious
[19:38] Tobsn: that tight might be helpful while developing... just pokenode every 5 seconds or so
[19:39] mape: Nice, Bryan Cantrill is working at Joyent now
[19:39] caolanm: I'm so un-inventive with my module names, heh
[19:39] Tobsn: thats for sure
[19:39] Tobsn: :P
[19:39] kriszyp: nodules takes less than 1% cpu for hot loading (for monitoring) for even a large number of modules, not too big of load for dev
[19:39] _announcer: Twitter: "http://bit.ly/9AObfL if you are a *nix hacker and aren't jizzing your pants over #node.js something is inherently wrong w/you" -- ian eyberg. http://twitter.com/feydr/status/19765233230
[19:39] mape: Guess ryan has someone to talk to about DTrace now :)
[19:40] Tobsn: kriszyp, url?
[19:40] kriszyp: github.com/kriszyp/nodules
[19:40] Tobsn: thx
[19:40] Tobsn: uh, complicated
[19:40] Tobsn: :P
[19:41] kriszyp: the main focus is on dependency management
[19:41] samdk has joined the channel
[19:42] _announcer: Twitter: "@feydr nice to see a fellow COMO person is into node.js ;)" -- jamescarr. http://twitter.com/jamescarr/status/19765382651
[19:43] Tobsn: btw. what exactly is the connect lib vs. http?
[19:44] robotarmy: music http://soundcloud.com/you/tracks
[19:44] robotarmy: sorry
[19:44] robotarmy: http://soundcloud.com/robot-army-made/drum-and-bass-dubstep-hiphop
[19:46] konobi: ryah: the news is out
[19:46] jbrantly has joined the channel
[19:48] ehaas has joined the channel
[19:49] ehaas: can someone tell me where the node libraries live after installation
[19:49] ehaas: i'm on OS X
[19:50] bradleymeck_: ~/.node_libraries
[19:50] ehaas: thx
[19:51] bradleymeck_: if you are looking for the internal js modules they are compiled in staticly
[19:51] ehaas: sorry...that's actually not what i meant
[19:51] ehaas: oh ok
[19:51] jherdman_ has joined the channel
[19:51] ehaas: that is what i was looking for
[19:51] technoweenie: man can you compile your own js modules for a custom node binary or something
[19:51] bradleymeck_: doesnt nDistro do that?
[19:52] technoweenie: whaaat
[19:52] bradleymeck_: i dont think it staticly compiles it into the binary, but it can bundle
[19:55] _announcer: Twitter: "@ryah & @orlandov wanted dtrace probes for node.js & v8. sure, here you go dudes. http://bit.ly/d7BcwD #cantrill" -- Mark Mayo. http://twitter.com/mmayo/status/19766137708
[19:55] technoweenie: oh dang
[19:56] bradleymeck_: technoweenie if you got a good usecase for it, im sure we could write one
[19:57] tjholowaychuk has joined the channel
[19:57] bradleymeck_: you dont really gain speed after startup from static links
[19:59] _announcer: Twitter: "@JonKruger hmmm... At this point if I had to take a guess I'd say something about the awesomeness of nodejs" -- Scott Walker. http://twitter.com/pragma_tech/status/19766365239
[20:00] bradleymeck_: tj i got an example of eph tables being able to list all outstanding callbacks up (well, that havent been gc'd), dont know if you might use it for expresso with a manual gc at end of tests etc
[20:01] technoweenie: i'm not concerned about speed
[20:01] tjholowaychuk: bradleymeck_: that would be cool, im trying to get deps out of expresso tho, ideally removing node-jscoverage as well
[20:01] bradleymeck_: ah
[20:01] technoweenie: i want to bundle a binary w/o source code for an enterprise app
[20:02] technoweenie: for instance, maybe i want to include more node in http://fi.github.com/  nodeload is a silly 2 file app, i dont mind distributing the js source there
[20:02] jacoblyles has joined the channel
[20:02] tjholowaychuk: technoweenie: did you check out nDistro?
[20:02] technoweenie: not yet bradleymeck_ just pointed me to it
[20:02] _announcer: Twitter: "@DallasJS Seems like I need to be there I have actually played around with node.ws.js the module @rem used to build that demo." -- Stephen Middleton. http://twitter.com/Rixius/status/19766570677
[20:02] technoweenie: "bradleymeck_: i dont think it staticly compiles it into the binary, but it can bundle"   
[20:02] kevwil has joined the channel
[20:02] sudoer has joined the channel
[20:02] tjholowaychuk: fresh out of the oven but its pretty sweet
[20:03] tjholowaychuk: ohhh you want a binary out of your app?
[20:03] tjholowaychuk: hm
[20:03] technoweenie: yea
[20:03] MattJ has joined the channel
[20:03] tjholowaychuk: would be cool to work that in
[20:03] technoweenie: well... if i really wanted it i'd do it or find a way to pay someone to do it :)   but that IS a reason against using node more heavily at github
[20:04] mape: caolanm: There should be fixed now
[20:04] tjholowaychuk: technoweenie: I would be interested in that as well
[20:05] technoweenie: yea its great for enterprise use
[20:05] BBB- has joined the channel
[20:05] bradleymeck_: ACTION goes to look at how the modules are bound in
[20:06] tjholowaychuk: bradleymeck_: we should chuck that in nDistro if possible, would be dope to use it to bundle up your app then compile it down
[20:07] mjr_: eday: have you profiled node to see where your time is going on your benchmarks?
[20:07] bradleymeck_: so it just needs to throw the package.json main's into the lib dir, but those mains have to be compiled themselves to include all the stuff that the modules would include...
[20:07] eday: mjr_: nope, everything I did so far is on my blog
[20:07] caolanm: mape: sweet, thansk
[20:08] dcolish has joined the channel
[20:08] caolanm: mape: ah, you added a note to the people who tweeted this url bit too.. much better :)
[20:08] mape: caolanm: yeah, a lot of people mentioned it didn't make sence
[20:08] caolanm: or sense
[20:08] caolanm: ;)
[20:09] bradleymeck_: so basically a mapping of requires to {"path":"src"} , and a fudged require function inside that?
[20:09] mape: nah, sence, like it better that way
[20:09] bradleymeck_: kinda ugly, but should work
[20:10] mjr_: eday: I'd be curious to see where the time is going on the 512K test.  I think there is some badness with how the buffer pool is managed.
[20:10] bean0r1___ has joined the channel
[20:11] bradleymeck_: do we have a glob module lying about?
[20:11] mjr_: eday: also, we'd all be really excited if you were able to improve node to do better on that benchmark.
[20:12] tjholowaychuk: bradleymeck_: npm maybe?
[20:12] tjholowaychuk: ive seen a few around i think
[20:12] mjr_: eday: I'd like to see the oprofile numbers if you have an oprofile-able kernel, and then the V8 profile dump from running with --prof.
[20:13] bean0r1___: mikeal: sorry for the late response
[20:13] femto has joined the channel
[20:13] bean0r1___: mikeal: it happens with every URL, even google.com if i use the responseBodyStream
[20:14] _announcer: Twitter: "Funky shizzle #nodejs http://bit.ly/cDCzsE and so little code needed," -- Ben Gerrissen. http://twitter.com/bgerrissen/status/19767273567
[20:15] eday: mjr_: I don't have oprofile handy, but if I get some free time I'll certainly do that. I tried to put as much info out there so folks could reproduce and dig further, and I'm happy to help if someone else wants to. Unfortunately my free time to dig deeper for node is limited right now (not actively using it for anything yet)
[20:18] bridge has joined the channel
[20:19] nrstott has joined the channel
[20:20] brainproxy has joined the channel
[20:20] mjr_: eday: yeah, I understand.  If you do dig into it more, we'd all be in interested in finding out where the bottlenecks are.
[20:22] mau2 has joined the channel
[20:22] grahamalot has joined the channel
[20:22] SubStack: unit tests saved the day!
[20:22] bradleymeck_: fs.stat(x).ino = inode number?
[20:23] jtsnow has joined the channel
[20:25] tjholowaychuk: bradleymeck_: yup
[20:25] caolanm: tjholowaychuk: just writing something for Connect and I want to add some headers to a response. Should I've override res.writeHead or what? not sure what's best to do...
[20:25] bradleymeck_: sweet, thats how i can check if we already hit a file , things get so odd w/ linking
[20:25] tjholowaychuk: caolanm: tough call, In Express I have res.headers = {}; early on so you can alter them before actually hitting writeHead()
[20:26] tjholowaychuk: but obviously that is not something node supports out of the box
[20:26] caolanm: yeah
[20:26] tjholowaychuk: we do proxy writeHead quite a bit though
[20:26] caolanm: sounds like I'm going to be overriding writeHead then
[20:26] caolanm: cool, just wanted to make sure I wasn't doing anything crazy
[20:29] khug has joined the channel
[20:30] kodisha has joined the channel
[20:35] lvh: hey
[20:35] lvh: I'm new to node, but I love TDD/BDD. why should I pick expresso over vows/gently?
[20:36] tjholowaychuk: depends what you are into
[20:36] SubStack: try them and see
[20:36] tjholowaychuk: expresso has code coverage, and is extremely fast, and has the executable.
[20:36] tjholowaychuk: vows has the executable
[20:36] tjholowaychuk: and nicer reports
[20:36] _announcer: Twitter: "Holy shit! Looks like V8 now has a native `Function#bind`. Sexy! #js #v8 #node" -- Gianni Chiappetta. http://twitter.com/gf3/status/19768559138
[20:36] tjholowaychuk: but is run sequentially 
[20:37] lvh: oh. okay.
[20:37] lvh: I like speedy tests, because tests should be run all the time.
[20:37] tjholowaychuk: so it really depends if you want speed or what
[20:37] caolanm: lvh: just so you know, running sequentially is obviously slower but avoids all kinds of race conditions if you like to use mocks
[20:37] lvh: caolanm: Right.
[20:38] caolanm: so depends what you're testing
[20:38] caolanm: :)
[20:38] lvh: The big problem is that I have no idea how fast it is :)
[20:38] lvh: caolanm: Well, to get my feet wet with node I want to try something simple that fits right into what we're doing now
[20:38] lvh: basically it's an AMQP -> websocket bridge.
[20:38] tjholowaychuk: yeah it depends, if your not experienced with testing vows would probably be easier
[20:38] lvh: tjholowaychuk: We're hardcore test freaks.
[20:39] tjholowaychuk: nice thing about expresso is that its so fast you dont need to mock :D
[20:39] lvh: tjholowaychuk: It's impossible to commit code to trunk that does not have 100% branch coverage.
[20:39] tjholowaychuk: well sometimes its necessary but meh
[20:39] lvh: tjholowaychuk: Huh? I don't understand how speed makes mocking unneccessary
[20:39] lvh: I thought the point of mocking was to isolate systems-under-test.
[20:39] caolanm: tjholowaychuk: depends how strict you like to be about a unit test being a unit test, instead of an integration test
[20:39] blowery: lvh: brawno has electrolytes
[20:39] tjholowaychuk: some people will mock things just for the sake of them being fast, but yea some things you need to/should
[20:39] lvh: blowery: the only word in that sentence i understood is "has"
[20:40] lvh: caolanm: Very strict. We have integration tests too; they're something else
[20:40] caolanm: lvh: right ;)
[20:40] tjholowaychuk: expresso supports CI properly, not sure about vows
[20:40] aho has joined the channel
[20:40] pedrobelo has joined the channel
[20:40] tjholowaychuk: im just updating the docs
[20:40] caolanm: lvh:  sounds like you'll be wanting the usuall setup teardown too?
[20:41] caolanm: *usual
[20:41] lvh: caolanm: Perhaps. I'm unfamilar with node, but I would imagine so
[20:41] tjholowaychuk: i never use that
[20:41] blowery: lvh: http://www.brawndo.com/
[20:41] caolanm: tjholowaychuk: neither do I tbh
[20:42] mattly has joined the channel
[20:42] lvh: I have never needed it in twisted.
[20:42] tjholowaychuk: thats the beauty of expresso though, you can do whatever you need to. my "keys" project does some "metaprogramming" to generate tests for me
[20:42] tjholowaychuk: to test all the stores
[20:42] matt_c has joined the channel
[20:42] lvh: (Oh, yes, we're an entirely twisted shop, so event-driven IO comes naturally to me)
[20:42] tjholowaychuk: where as in some BDD framework it would probably be that behaves_like_whatever crap
[20:42] tjholowaychuk: but you can just roll your own whatever you need
[20:42] caolanm: :D
[20:42] caolanm: ACTION never got BDD
[20:43] tjholowaychuk: I used to like it, but ive changed my mind. only thing I hated about most tdd frameworks was the language
[20:43] lvh: so how does expresso get in the way of mocking? I would expect different unit tests to test different parts of behavior
[20:43] tjholowaychuk: didnt like setup/tearDown blah blah
[20:43] ceej has joined the channel
[20:43] caolanm: tjholowaychuk: I obviously agree on this one ;)
[20:43] lvh: I suppose I could imagine it going wrong; but I can't think of any use cases that couldn't be fixed by writing a smarter mocking lib.
[20:44] caolanm: lvh: its because of the module cache
[20:44] tjholowaychuk: its more for unit testing
[20:44] tjholowaychuk: i dont mock anything in any of my test suites ATM
[20:44] tjholowaychuk: and hundreds and hundreds of Connect response assertions are completed in < one second
[20:44] caolanm: lvh: if you mock or stub a function in another module and that function is used in another test, then you'll get a race condition
[20:44] tjholowaychuk: its great
[20:44] tjholowaychuk: yup, unless you roll your own queue
[20:44] tjholowaychuk: which is something I might add in expresso so that some tests can run serially 
[20:45] caolanm: tjholowaychuk: you mean, executing sequentially? :O
[20:45] caolanm: heh
[20:45] caolanm: jk
[20:45] tjholowaychuk: haha OmoOmg
[20:45] lvh: tjholowaychuk: but I'm writing an amqp bridge
[20:45] lvh: tjholowaychuk: wouldn't that require either a mock or a working broker?
[20:45] tjholowaychuk: dunno
[20:46] tjholowaychuk: "keys" depends on redis etc
[20:46] tjholowaychuk: but ill kill myself before I mock out redis and the others
[20:46] tjholowaychuk: that just leads to more bugs
[20:46] tjholowaychuk: in your tests
[20:46] shockie has joined the channel
[20:47] Tobsn: anyone answered whats the diff between connect and http?
[20:47] rwaldron has joined the channel
[20:47] tjholowaychuk: connect is a middleware framework
[20:49] Tobsn: rauchg_, you said the 5.0 gets released tonight right?
[20:49] Tobsn: tjholowaychuk, oh i see
[20:50] _announcer: Twitter: "node-http-proxy: Reverse proxy for Node.js - Reverse proxies are a pretty standard part of any modern web... http://tumblr.com/xqief8fx1" -- The Changelog. http://twitter.com/changelogshow/status/19769333818
[20:52] _announcer: Twitter: "node-http-proxy: Reverse proxy for Node.js from @maraksquires and @indexzero http://wynn.fm/3g" -- The Changelog. http://twitter.com/changelogshow/status/19769425493
[20:53] jxson has joined the channel
[20:55] SvenDowideit has joined the channel
[20:55] mau2: Yay! My pre-launch landing page (what a mouthful) is done!
[20:56] mape: url
[20:56] mau2: http://www.graphnode.com/
[20:57] SubStack: I click zee link.
[20:57] SubStack: kinda blurry
[20:57] adrienf: mau2: thought I forgot putting my glasses on
[20:57] mape: yeah not very sharp
[20:58] SubStack: another one of those, meh
[20:58] mape: mau2: like mysql workbench but thingys instead?
[20:58] mau2: You don't understand art!
[20:58] mau2: ART!
[20:59] _announcer: Twitter: "toying with node.js. Surprisingly refereshing" -- Laurens Van Houtven. http://twitter.com/lvh_/status/19769825760
[20:59] mau2: mape, kinda.
[20:59] tjholowaychuk: I get it :) but it confused me for a sec
[20:59] mape: mau2: Just kinda strange since the pattern I see on the "what is" plane is close to the photoshop one for transperancy
[20:59] tjholowaychuk: thought I could click and the box would go away
[20:59] mau2: tjholowaychuk, you wish.
[21:00] tjholowaychuk: :D
[21:00] tjholowaychuk: got me all excited :p
[21:00] mau2: tjholowaychuk, thats the point!
[21:00] mau2: Or goal.
[21:00] mape: "Scale your project while it is running." like a slider?
[21:00] femtoo has joined the channel
[21:00] mau2: mape, basically.
[21:01] mape: ec2ish?
[21:01] mau2: Pretty much.
[21:01] mape: or yahoo pipes?
[21:01] tjholowaychuk: personally I would never edit code in a browser though. and by never i mean probably quite a long time
[21:01] mape: and etherpad
[21:01] mau2: It creates more instances to handle the load. 
[21:02] mape: Why would multiple people be sliding the slider at the same time in real time
[21:02] mattly_ has joined the channel
[21:02] mau2: tjholowaychuk, one goal that isn't there is to hook up with git. So you can use any editor you want and just commit the changes.
[21:02] mape: mau2: http://raphaeljs.com/graffle.html
[21:02] mau2: mape, what do you mean?
[21:02] tjholowaychuk: ya that would be nice
[21:03] tjholowaychuk: ACTION wants to learn real math
[21:03] mape: tjholowaychuk/0
[21:03] tjholowaychuk: :D
[21:04] mau2: tjholowaychuk, here is some real math for you: http://news.cnet.com/8301-17852_3-10309716-71.html?tag=rtcol;pop
[21:04] tjholowaychuk: ahaha
[21:04] mape: mau2: but the idea is to do an ui like the one I pasted?
[21:04] mau2: mape, yeah, I'm going to use raphael for the links, not for the nodes since it doesn't perform well.
[21:05] jelveh has joined the channel
[21:05] mape: What is the ETA to launch? 
[21:06] creationix has joined the channel
[21:06] Tobsn: is there a way to manage multiple node instances? lets say i have one running per core (16) and i want to monitor them all...
[21:07] bradleymeck_: what do you mean manage?
[21:07] bradleymeck_: keep them up?
[21:07] maushu has joined the channel
[21:07] tjholowaychuk: monit.js 
[21:07] tjholowaychuk: haha
[21:07] jelveh_ has joined the channel
[21:08] maushu: back
[21:08] maushu: :3
[21:08] tjholowaychuk: jk
[21:08] maushu: <mau2> mape, yeah, I'm going to use raphael for the links, not for the nodes since it doesn't perform well.
[21:08] maushu: <mau2> These connections are like saying who is using/connected to what. Example: If you want to add a new database to a application you create a new database and link it up. That's it.
[21:08] Tobsn: tjholowaychuk ;)
[21:08] mape: maushu: so kinda like yahoo pipes
[21:08] Tobsn: i had that github page open 5 minutes ago and was like "monit.js - and who monits monit.js?"
[21:09] maushu: Besides databases you can link virtual file systems, web services, other applications.
[21:09] bradleymeck_: where was that benchmark of prototype based construction vs setting in constructor?
[21:09] tjholowaychuk: Tobsn: yeah man lol im going to remove that project anyways it was a fun little prototype but not practical
[21:09] maushu: mape, similar. There is also http://tarpipe.com/
[21:09] Tobsn: its yours? haha :)
[21:09] tjholowaychuk: ya
[21:10] mape: maushu: ah yeah
[21:10] Tobsn: well its probably fun to write - process monitoring etc.
[21:10] tjholowaychuk: i just hate monit for managing clusters, at least from what i know of monit
[21:10] Tobsn: but i still trust monit much more than a node.js script
[21:10] Tobsn: ;)
[21:10] Tobsn: managing clusters?
[21:10] Tobsn: shouldnt you use cactai or so?
[21:10] maushu: mape, got rid of the photoshop transparency wannabe.
[21:11] mape: maushu: yeah makes it easier to read :) Perhaps a faint shadow as well?
[21:11] _announcer: Twitter: "node-http-proxy: Reverse proxy for Node.js http://thechangelog.com/post/872114581" -- Fabien Penso. http://twitter.com/fabienpenso/status/19770527196
[21:11] maushu: mape, on the text?
[21:11] Tobsn: im looking for a good framework right now (with template "engine") - anyone a recommendation?
[21:12] mape: maushu: no on the box -***-box-shadow: 3px 3px 7px rgba(0,0,0,0.3);
[21:12] tjholowaychuk: Tobsn: http://expressjs.com
[21:12] mape: not sure if it looks better, just a though
[21:12] maushu: mape, oh good idea. Totally forgot about that.
[21:13] mape: 3px 3px 15px rgba(0,0,0,0.4) looks nice
[21:13] mape: makes the box seem separated from the fuzzy bg as well
[21:13] maushu: Yeah, I see it.
[21:13] tpryme has joined the channel
[21:14] admc has joined the channel
[21:14] sh1mmer has joined the channel
[21:15] sh1mmer: got a bunch of stuff done on the plane
[21:15] sh1mmer: dnsserver.js is getting close to something I can release
[21:15] mjr_: I need to go on a plane with no internet so I can get some more code written
[21:15] sh1mmer: it's awesome
[21:15] mjr_: and sit next to someone boring
[21:15] mjr_: yet small
[21:16] sh1mmer: and I got upgraded to business and first, so the stewardess just fed me coffee the whole time
[21:16] ryah: ACTION is at train station and still can't not use hte internet
[21:17] ryah: fucking google and their damn .. train stations
[21:17] creationix: ryah: :)
[21:17] creationix: :(
[21:17] mscdex: man, i think i'll be spending more time designing these uno cards than coding the front and backend
[21:17] sh1mmer: ryah: i <3 caltrain
[21:18] sh1mmer: I much prefer it to driving up 101
[21:18] sh1mmer: or being driven, even
[21:18] creationix: sh1mmer: but have you tried a motor bike on 101?
[21:18] maushu: Wait, how is google related to trains stations?
[21:18] mjr_: caltrain is so much better than BART.
[21:18] sh1mmer: creationix: no
[21:18] creationix: mjr_: so true
[21:19] sh1mmer: creationix: although technically neither have you :P
[21:19] skampler: sh1mmer: how does the rr parser look?
[21:19] _announcer: Twitter: "Now this is a use of #JavaScript I could be okay with: http://bit.ly/aWigRb #mongodb and #nodejs" -- Robert Roland. http://twitter.com/robertrolandorg/status/19770973744
[21:19] mjr_: creationix: I've taken my motorbike up and down 101 quite a lot.  It gets tedious.
[21:19] creationix: sh1mmer: my "vehicle" is a registered "motorcycle"
[21:19] Tobsn: well the only thing i really need is a memcache lib that supports multiple servers (pooling) and a session library that uses memcache (with pooling) as session storage
[21:19] Tobsn: anyone an idea?
[21:19] sh1mmer: skampler: it's fine, although since I'm writing an authority server I haven't finished yet
[21:19] sh1mmer: creationix: technically a scooter with a motor is a motorbike in california
[21:19] sh1mmer: so bite my shiny metal ass
[21:19] ryah: gtg
[21:20] skampler: sh1mmer: ok.. i'm writing a dns library that is essentially a clone of libresolv
[21:20] creationix: sh1mmer: and how many scooters can go 80 mph?
[21:20] sh1mmer: skampler: didn't you show that me already?
[21:20] mjr_: skampler: you could finish my dns decoder which almost does full rr.
[21:20] Tobsn: mscdex, you saw my reply yesterday on socket.io?
[21:20] mscdex: Tobsn: not sure
[21:21] Tobsn: IE6 problems
[21:21] Tobsn: on the client
[21:21] mscdex: heh
[21:21] sh1mmer: skampler: mjr_ mostly I'm focused on serving records right now, rather than decoding, although I'm planning to make it proxy later
[21:21] mscdex: no surprise there ;-)
[21:21] Tobsn: ;)
[21:21] Tobsn: well it works with flash installed
[21:21] sh1mmer: there are a _ton_ of security issues to consider writing dns proxies
[21:21] sh1mmer: so that's a definite stage 2
[21:21] creationix: tjholowaychuk: what's the latest version of connect in npm?
[21:21] creationix: does it have the new router API?
[21:21] mjr_: oh yeah, recursive queries are are annoying to get right
[21:21] bradleymeck_: does require execute in new context?
[21:21] tjholowaychuk: creationix: should yup, should be 0.2.3
[21:22] gf3: js> function nxy (x, y) { return this.n + x + y }; var x = nxy.bind({ n: 5 }, 5)
[21:22] gbot2: gf3: Error: TypeError: nxy.bind is not a function 
[21:22] gf3: old node, I suppose
[21:22] mscdex: Tobsn: yeah i dunno, it should switch to long poll if flash isn't there. rauchg_ might know about the issue?
[21:22] _announcer: Twitter: "In case anyone missed it (I did), ExtJS, jQTouch, & Raphael are now "Sencha", and they are working on #nodejs stuff, too: http://j.mp/dgudTZ" -- Matthew Taylor. http://twitter.com/rhyolight/status/19771167227
[21:22] creationix: tjholowaychuk: so my example is wrong? http://howtonode.org/deploying-node-with-spark/memory_bank.js
[21:22] Tobsn: mscdex, also talked to rauchg_, when the transport remember thing is on - the second time the browser loads the script it has "websocket" in the cookie value and socket.io.js reports "no transport protocol found"
[21:22] rauchg_: Tobsn: the ie issue is really simple to fix, i'm releasing probably tonight or tomorrow
[21:22] tjholowaychuk: creationix: yup
[21:22] bradleymeck_: and tj i might have solved how to tie in files for a static build, but itll take some time to implement
[21:22] creationix: tjholowaychuk: cool, time to update yet again
[21:22] rauchg_: and it'll be rock-solid 
[21:22] skampler: mjr_: ok, where is it?
[21:22] _announcer: Twitter: "http://bit.ly/czdNMA mongodb and # # # nodejs nosql" [sk] -- Pete Hanlon. http://twitter.com/petehanlon/status/19771191854
[21:23] Tobsn: ;)
[21:23] Tobsn: k - i'll keep quiet :P
[21:23] tjholowaychuk: bradleymeck_: wicked!
[21:23] mjr_: skampler: http://github.com/mranney/node_pcap/blob/master/pcap.js#L573
[21:23] Tobsn: does anyone know a session handler that supports memcache as storage
[21:24] c4milo: I have an strange error using fs.readFile 
[21:24] gf3: Gentlemen, did node break `Function#bind`? (v0.1.95-23-g2420f07) http://img.gf3.ca/ab5bbecbc0d9edd80035d7cf040cea71.png
[21:24] kevwil has joined the channel
[21:25] mjr_: gf3: print?  Strange
[21:25] gf3: mjr_: indeed
[21:25] tjholowaychuk: ahaha "A Fucking Whale"
[21:25] gf3: tjholowaychuk: :)
[21:25] tjholowaychuk: so awesome
[21:26] mape: gf3: console.log()?
[21:26] gf3: mape: I'm not even touching print/puts/console.log
[21:26] gf3: it must be node, because native bind is working in Chromium
[21:26] mape: oh yeah..
[21:28] maushu: gf3, or maybe repl.
[21:28] tjholowaychuk: gf3: I *think* node has older v8
[21:28] tjholowaychuk: not sure
[21:28] tjholowaychuk: i think that is what the deal was
[21:29] gf3: maushu: no it's broken in node globally, not just repl
[21:29] tilgovi has joined the channel
[21:30] aconbere has joined the channel
[21:30] maushu: Crap.
[21:30] maushu: Time to panic.
[21:30] mscdex: :O!
[21:30] gf3: Looks like this fucker right here: http://github.com/v8/v8/commit/fcfec20146c12d454347a6e0d50727a0477d57f2#L2R1115
[21:31] maushu: Maybe I shouldn't have used node.js in nuclear power plants.
[21:31] gf3: mjr_, maushu, mape ^^
[21:31] mape: ah
[21:31] mjr_: well, shit
[21:31] maushu: gf3, wait. it wasn't renamed to .on() or I'm confusing something.
[21:31] mjr_: global.print
[21:31] mscdex: carp!
[21:32] maushu: "Looks like this global.print call should be removed."
[21:32] maushu: Indeed.
[21:36] c4milo: args 
[21:36] hdon has joined the channel
[21:36] stride: indeed
[21:36] c4milo: segmentation fault with the new node version :(
[21:37] tjholowaychuk: booo, gf just painted walls ugly color
[21:37] caolanm: anyone know how you do multiple Set-Cookie headers in node?
[21:38] satori_ has joined the channel
[21:39] josemoreira has joined the channel
[21:40] jetienne has joined the channel
[21:41] maushu: tjholowaychuk, red?
[21:42] bradleymeck_: caolanm i use my node-cookiejar module
[21:42] tjholowaychuk: maushu: its supposed to be a chocolate-ish brown for a feature wall but it looks like baby food / puke
[21:42] bradleymeck_: its bit manual
[21:42] maushu: tjholowaychuk, that color came to mind.
[21:42] ryan_gahl: tjholowaychuk: it's not "ugly", it's "off-tope"
[21:42] JimBastard has joined the channel
[21:42] maushu: Maybe she is trying to tell you something.
[21:42] caolanm: bradleymeck_: I'll take a look
[21:42] ryan_gahl: http://www.colourlovers.com/color/6B5543/Tope
[21:42] ryan_gahl: yum
[21:43] Tobsn: guess i have to build my own session management...
[21:43] ryan_gahl: Tobsn - try Connect
[21:43] tjholowaychuk: Tobsn: use Connect :)
[21:43] tjholowaychuk: we have hammered out the bugs in session
[21:43] ryan_gahl: http://github.com/senchalabs/connect
[21:43] keeto has joined the channel
[21:44] JimBastard: Tobsn: there is a shit ton of session management code already
[21:44] maushu: I built my own, I need replicated session management in a cluster.
[21:44] dannycoates has joined the channel
[21:44] JimBastard: Tobsn: just remember, weeks of coding can save you from hours of research 
[21:44] maushu: I think it's the reverse.
[21:45] caolanm: tjholowaychuk: uh, connect has session support?
[21:45] shockie has joined the channel
[21:45] caolanm: becuase right now I'm writing some session middleware for it :\
[21:45] tjholowaychuk: caolanm:  yup, use connect.cookieDecoder() / connect.session()
[21:45] JimBastard: caolanm: i would hope a middleware had session support
[21:45] JimBastard: caolanm: weeks of coding can save you from hours of research :-)
[21:45] caolanm: damn
[21:46] caolanm: JimBastard: so true
[21:46] JimBastard: nothing is lost though
[21:46] JimBastard: even if you toss it all, you still learn
[21:46] JimBastard: so dont despair !
[21:46] caolanm: ok, this is actually still useful I think
[21:46] tjholowaychuk: hell yeah, ive written tons of projects only to turf them
[21:46] JimBastard: totally
[21:46] tjholowaychuk: or feel free to contrib to our session api
[21:46] tjholowaychuk: if you have suggestions
[21:46] creationix: if you haven't thrown away the first two versions, it's no good
[21:47] caolanm: I'm writing a secure cookie-based session middleware
[21:47] JimBastard: creationix: so true
[21:47] caolanm: so session data is encrypted and stored in a cookie
[21:47] caolanm: am I right in thinking connect doesn't do that?
[21:47] creationix: caolanm: I think tjholowaychuk has a cookie store at one time
[21:48] creationix: I prefer to keep the session data on the server and only store the id in the cookie
[21:48] JimBastard: caolanm: whats wrong with just storing a key in the cookie and doing a lookup on the server?
[21:48] JimBastard: or is that just not the approach you are going for
[21:48] tjholowaychuk: I had it but I hate that you cant enumerate so i turfed it
[21:48] creationix: JimBastard: if the session data is small and you have LOTS of visitors, then storing it in the browser is better
[21:48] creationix: thinkg google tracking stuff
[21:48] caolanm: JimBastard: 2 reasons: 1. I wanted to learn about this ;) 2. It makes scaling really easy if you only have a small amount of session data
[21:48] JimBastard: that makes a lot of sense
[21:49] caolanm: don't need to 'stick' to an instance
[21:49] caolanm: when load balancing
[21:49] JimBastard: yeah, sticky sessions
[21:49] JimBastard: its all coming back now
[21:49] creationix: caolanm: yep, just have to make sure it's safe
[21:49] JimBastard: *J2EE shudder*
[21:49] pquerna: +1
[21:49] creationix: but with crypto stuff if shouldn't be too hard
[21:49] caolanm: creationix: yep, and I'm no expert
[21:49] caolanm: I'm following a process developed by smarter people than me
[21:49] caolanm: seems pretty sensible
[21:50] creationix: caolanm: and with the vhost middleware, you can serve your static resources on a subdomain
[21:50] creationix: to save in cookie traffic
[21:50] caolanm: sweet
[21:50] caolanm: tjholowaychuk: any idea if you've already written this for connect?
[21:50] tjholowaychuk: creationix: are you actually using that middleware? I just chucked it in there for fun but I havent touched it
[21:51] creationix: I like the vhost one
[21:51] tjholowaychuk: caolanm: it was wayyy back so I couldnt really revert it now anyways
[21:51] creationix: and people have asked me about it
[21:51] tjholowaychuk: interesting
[21:51] tjholowaychuk: super basic, could probably use some loven
[21:51] creationix: tjholowaychuk: I'd have to look closer, but it seemed nice to me
[21:51] caolanm: tjholowaychuk: sooo... there isn't a cookie store for session? sorry, I'm confused :\
[21:51] tjholowaychuk: its like 10 lines
[21:52] _announcer: Twitter: "i had fun visiting the googleplex for the node.js talk. i even sat on magic toilets that squirted water at my butt." -- Dylan Clendenin. http://twitter.com/deepthawtz/status/19772909284
[21:52] creationix: caolanm: I think there was, but it got deleted
[21:52] tjholowaychuk: caolanm: not currently nope, it just ships with Memory
[21:52] caolanm: right
[21:52] creationix: tjholowaychuk: and I think for a cookie store it's best to write a whole new middleware and not try to write a provider for the current session middleware
[21:52] caolanm: creationix: oh?
[21:52] creationix: but I could be wrong, it may have enough hooks to use
[21:52] tjholowaychuk: ya not positive anymore
[21:53] tjholowaychuk: probably not
[21:53] caolanm: well, I should at least be trying to follow the same conventions as the current one
[21:53] creationix: oh course
[21:53] caolanm: API-wise
[21:53] JimBastard: !tweet @deepthawtz those toilets are actually powered by node, we know how to flush buffers on the backend
[21:53] caolanm: that might go out the window at first and get updated later on though ;)
[21:54] deepthawtz has joined the channel
[21:54] creationix: JimBastard: if only, but we're trying to sell Google on node
[21:54] creationix: it was a fun meetup
[21:54] JimBastard: creationix: good stuff man
[21:54] JimBastard: you gonna hold up the high road (enterprise), ill hold down the low (bastardize)
[21:54] tjholowaychuk: whose selling Google on node?
[21:54] maushu: Crap. That is bad.
[21:55] creationix: tjholowaychuk: ryah 
[21:55] mscdex: maushu is
[21:55] mscdex: :-D
[21:55] _announcer: Twitter: "Call it a personal development day: awesome talk on node.js by @ryah, and another awesome talk on JRuby/Mirah by @headius" -- Denton Gentry. http://twitter.com/dgentry/status/19773099234
[21:55] tjholowaychuk: creationix: wicked, in regards to what usage?
[21:55] creationix: tjholowaychuk: I was just there to help support and tell them about connect
[21:55] stride: did someone already run statistic tests on the generated session IDs in connect to see if they could be guessed by someone who wants to steal a session?
[21:55] mattly has joined the channel
[21:55] maushu: If Google decides to do an app engine with node I will be ruined.
[21:55] JimBastard: ohh hey check it out
[21:55] JimBastard: http://github.com/explore
[21:55] ceej has joined the channel
[21:55] JimBastard: ACTION is holding down the homepage again
[21:55] creationix: tjholowaychuk: nothing specific
[21:55] mscdex: appnode
[21:55] mscdex: nodengine
[21:55] mscdex: :>
[21:56] creationix: JimBastard: I wonder who wrote that article
[21:56] JimBastard: i dunno, its pretty WIN
[21:56] tjholowaychuk: creationix: what did they think
[21:56] creationix: tjholowaychuk: well, the developers there seemed to like it
[21:56] creationix: but google uses c++ and Java for about everything
[21:57] creationix: I invited a bunch of them to the meetup in two weeks
[21:57] tjholowaychuk: wicked
[21:58] creationix: tjholowaychuk: how much is a plane ticket down here? you should visit
[21:58] tjholowaychuk: creationix: no clue, depends when it changes a lot
[21:58] creationix: or drive, it's not that far ;)
[21:58] tjholowaychuk: with my non-vehicle haha :D
[21:59] creationix: tjholowaychuk: what city are you in?
[21:59] tjholowaychuk: creationix: victoria bc
[22:00] creationix: ok, now I remember
[22:00] tjholowaychuk: sucks our stupid ferry takes a few hours alone
[22:00] creationix: nevermind, it's pretty far 16-21 hours depending on the route
[22:01] creationix: I keep forgetting about Oregon
[22:01] tjholowaychuk: yikes
[22:01] creationix: still closer than my old house
[22:01] josemoreira: hi
[22:01] josemoreira: what was the name of that node webserver mod?
[22:01] josemoreira: node-webserver?
[22:01] josemoreira: :/
[22:01] tjholowaychuk: the flight is not to bad at all
[22:02] creationix: josemoreira: no clue?
[22:02] maushu: node webserver mod? Wat.
[22:02] josemoreira: module
[22:02] creationix: josemoreira: connect!
[22:02] maushu: connect?
[22:02] creationix: http?
[22:02] josemoreira: no, a premade webserver in node
[22:02] creationix: josemoreira: node has "http" built-in
[22:02] maushu: ...express?
[22:02] josemoreira: node-webserver, node.simpleserver
[22:02] josemoreira: i dunno :/
[22:02] maushu: http?
[22:02] josemoreira: no
[22:02] creationix: josemoreira: what does it need to do?
[22:02] josemoreira: that a core mod
[22:03] Tobsn: tjholowaychuk, JimBastard but does it support memcache as storage?
[22:03] josemoreira: need to serve static content and some templates
[22:03] creationix: josemoreira: node-router?
[22:03] josemoreira: no but that could do
[22:03] tjholowaychuk: Tobsn: connect sessions? I have a redis store, creationix has a nStore.. store lol
[22:03] creationix: josemoreira: I'd recommend connect
[22:03] josemoreira: ye? ill checkj oit out
[22:03] creationix: josemoreira: http://github.com/senchalabs/connect
[22:03] josemoreira: i just need to get some dynamic pages up
[22:04] josemoreira: creationix, thank you
[22:04] Tobsn: hmm but the benefit of session storage within memcache is the memcache pool capabilities
[22:04] creationix: no templating built-in, but it's got everything else
[22:04] Tobsn: thats why you would for example chose memcache in php
[22:04] Tobsn: as session storage
[22:04] creationix: maybe express, it adds a little more on top of connect http://expressjs.com/
[22:04] josemoreira: can i get your opinion on a gist diff tool?
[22:04] Tobsn: express looks overly complicated
[22:04] josemoreira: im using taht as a simple start project
[22:04] creationix: gist? you mean git?
[22:04] josemoreira: yes
[22:05] josemoreira: to compare 2 gist urls
[22:05] creationix: josemoreira: what os?
[22:05] josemoreira: not revisions
[22:05] josemoreira: a webapp
[22:05] creationix: oh, no clue
[22:05] creationix: I've seen some diff implementations in js on the web
[22:05] josemoreira: no, i ment i was implementing it
[22:05] josemoreira: sorry
[22:06] tjholowaychuk: Tobsn: just depends what you need. connect is not really an app framework, more of a framework framework
[22:06] josemoreira: and asked your opinion on the usefulness
[22:06] tjholowaychuk: Tobsn: which Express is built on to provide utilities, views, configuration etc
[22:07] creationix: josemoreira: I think being able to compare two urls would be cool
[22:07] josemoreira: ok
[22:07] creationix: tjholowaychuk: 29 hours to my old house
[22:07] zapnap has joined the channel
[22:07] tjholowaychuk: creationix: shit lol thats pretty bad, the drive from here to my old place in Alberta is about 12 through the mountains 
[22:08] javajunky has joined the channel
[22:08] creationix: node knockout is down!!
[22:09] javajunky: 'oops'
[22:09] cardona507 has joined the channel
[22:09] Dmitry has joined the channel
[22:09] creationix: who is in charge of that site?
[22:10] bradleymeck_: gerad, anyone know how to emulate requiring a .node file?
[22:10] mjr_: gerad and visnup aren't here
[22:10] jacoblyles has joined the channel
[22:10] creationix: mjr_: is it just them?
[22:10] mjr_: Those are the main guys, as far as I know.
[22:11] mjr_: It's been busted for a while.  Looks like maybe heroku broke out from under them.
[22:11] creationix: dang, I need to show it to someone
[22:13] tjholowaychuk: boo github symlinks should redirect
[22:14] Blackguard has joined the channel
[22:15] _announcer: Twitter: "A cookie-based session store for Connect: http://bit.ly/bUGU8M #nodejs #connect" -- Caolan McMahon. http://twitter.com/caolan/status/19774310873
[22:15] hij1nx has joined the channel
[22:16] hij1nx has joined the channel
[22:16] javajunky: tjholowaychuk: yeah, you mean on the site..that always gets me :( 
[22:16] _announcer: Twitter: "@peepcode  Do you have any plans for a screencast on Node.js?  I'll happily buy it" -- Mark Cotton. http://twitter.com/mcotton/status/19774399085
[22:16] tjholowaychuk: javajunky: ya :(
[22:16] javajunky: ^^—^^ nice one I don't have to port mine
[22:16] creationix: caolanm: make sure to list it on the connect wiki on github
[22:17] javajunky: caolanm: sweet, I don't have to port my one <g>
[22:18] caolanm: creationix: will do, ta
[22:19] caolanm: second connect middleware of the night ;)
[22:19] caolanm: maybe I'll try for a third...
[22:19] creationix: caolanm: I think your readme has a typo
[22:19] creationix: what's "sessions"
[22:19] caolanm: probably, I'm quite tired :(
[22:20] caolanm: creationix: yep, thanks
[22:20] Tobsn: tjholowaychuk, exactly - complicated :P
[22:20] tjholowaychuk: :p
[22:20] Tobsn: im still surfing around for a good solution to actually manage the node instances...
[22:20] creationix: caolanm: so why .filter instead of exporting the function as the module itself?
[22:20] Tobsn: like starting and stoping x of them and monitoring them
[22:20] Tobsn: kinda like php-fpm
[22:20] creationix: Tobsn: http://howtonode.org/deploying-node-with-spark my setup
[22:20] _announcer: Twitter: "node-http-proxy: Reverse proxy for Node.js http://bit.ly/chj0Qp #nodejs" -- Régis Gaidot. http://twitter.com/rgaidot/status/19774647132
[22:20] creationix: Tobsn: still in development
[22:20] javajunky: creationix: / caolanm I was going to ask about that, the old filters+ modules stylee of connect seems unused now , is that correct ?
[22:21] creationix: javajunky: yeah, I just merged everything to "middleware" or "layers"
[22:21] Tobsn: hmm
[22:21] Tobsn: does it start multiple instances?
[22:21] creationix: and the built-in stuff is all hocked to the Connect object using auto-loaders
[22:21] creationix: Tobsn: instances of the same app?
[22:21] Tobsn: yep
[22:22] creationix: Tobsn: spark can
[22:22] Tobsn: hmm you know what i mean with php-fpm?
[22:22] caolanm: creationix: I want the other methods in the module to be available to people just incase they want to implement it for something other than connect
[22:22] caolanm: creationix: although they can be attributes on an exported funcitonof course
[22:22] creationix: caolanm: yep
[22:22] caolanm: is that the preferred connnect way now?
[22:22] creationix: Tobsn: I don't know php-fpm
[22:22] Tobsn: http://php-fpm.org/ - read it up - im gonna head out for a second - something like that for nginx as frontend would be interesting
[22:22] creationix: caolanm: yeah, I updated my connect article to use the new style
[22:22] caolanm: cool
[22:23] caolanm: I'll update my modules to use that then
[22:23] creationix: caolanm: http://howtonode.org/connect-it
[22:23] creationix: look at log-it and serve-js
[22:23] javajunky: creationix: yeah I totally ripped that auto-loading idiom off as I liked it so much: http://github.com/ciaranj/connect-auth/blob/master/lib/auth.js#L146
[22:23] creationix: nice
[22:23] javajunky: creationix: I take it you got my response to your 'could you rewrite your howtonode article' question on github ?
[22:24] creationix: let me check, I got swamped in emails today
[22:24] steadicat has joined the channel
[22:24] javajunky: creationix: no bother, it basicly says, nope, not yet, when the next release of connect is through marketing and in npm I will though ;)
[22:25] creationix: javajunky: so connect 1.0 will be a ways off, but we're releasing small versions regularly
[22:25] creationix: the latest if 0.2.3 and it has the new router API
[22:25] javajunky: caolanm: its quite amusing how we all like to re-write the code, are two versions are very similar (and mine was originally 'weepy's' ) ; http://github.com/ciaranj/express-session-cookie
[22:25] creationix: and I updated the spark article this morning to use the new router API
[22:26] _announcer: Twitter: "Just sent/received my first push notification. Building around Node.js very cool system." -- Andrew Naylor. http://twitter.com/argon/status/19774977362
[22:26] javajunky: creationix: so does 0.2.3 track git HEAD atm  ? 
[22:26] creationix: javajunky: pretty close
[22:26] creationix: let me check
[22:26] javajunky: and thats in npm ?
[22:26] tjholowaychuk: javajunky: should be close ya
[22:27] creationix: yep, there is only one commit since the 0.2.3 tag
[22:27] javajunky: if I can take everything out of npm then I'll try and find a spot of time to move it to npm + jade instead of kiwi + haml .. might as well keep it cool and trendy ;)
[22:27] tjholowaychuk: we have been pushing some silent patch levels
[22:27] javajunky: (oh and connect ;) )
[22:27] javajunky: 'silent patch levels' .. wtf are they .. or do I not want to know.
[22:27] creationix: 0.2.x releases
[22:27] tjholowaychuk: just not promoting those
[22:27] creationix: without big announcements
[22:27] javajunky: ah, so they are numbered, not quite so silent ;)
[22:28] creationix: yeah, HEAD is the real silent release
[22:28] javajunky: ah, but thats a known silence, thats ok and good ;)
[22:28] javajunky: re-issuing 0.2.1 would be what I would consider 'silent' ..i.e the SHA's different, but th version number is, that would be un-cool ;) 
[22:28] tjholowaychuk: at this stage in the game npm is almost useless IMO, well any PM
[22:29] tjholowaychuk: haha ya that is no good
[22:29] creationix: tjholowaychuk: well some people only use npm releases
[22:29] tjholowaychuk: I just meant me not spamming the world over it
[22:29] tjholowaychuk: creationix: for sure
[22:29] javajunky: tjholowaychuk: meh, its like semicolons :) 
[22:29] tjholowaychuk: things are just not ready for that  yet, easier to maintain some submodules
[22:29] javajunky: I do find it much easier to explain things to people when I don't have to involve git ;)
[22:29] tjholowaychuk: javajunky: check out nDistro
[22:29] tjholowaychuk: no GIT, no npm etc
[22:30] javajunky: I'd rather introduce people to git, when the 'easier' things are proving difficult
[22:30] tjholowaychuk: supports wget/curl now so it is pretty portable
[22:30] javajunky: yeah I did briefly take a look ivy++ ? 
[22:30] bradleymeck_: tj the bundling just needs a crawler to compile the paths to files now i think
[22:30] _announcer: Twitter: "@mcotton Definitely planning some Node.js screencasts soon. Talking to some authors and may do one myself, too." -- PeepCode. http://twitter.com/peepcode/status/19775231183
[22:30] tjholowaychuk: bradleymeck_: do you have something in the works? that I can see?
[22:30] creationix: tjholowaychuk: nDistro looks like my ivy without git
[22:30] javajunky: which reminds me, ivy's already a well known dependency management solutoijn in the java world, that was very confusing to my silly head, creationix ;)
[22:30] tjholowaychuk: it does quite a bit more
[22:30] bradleymeck_: i can post the proof of concept for bundling under a single file, sec
[22:30] tjholowaychuk: different idea really
[22:31] creationix: javajunky: yeah, I may rename it when it becomes npm based
[22:31] javajunky: tjholowaychuk: I'll take another look when I get a chance, I'm ridiculously snowed under at the mo :(
[22:31] creationix: javajunky: how about ivy.js ;)
[22:31] javajunky: creationix:  ;)
[22:31] tjholowaychuk: javajunky: sounds good, check my blog for the intro
[22:31] javajunky: tjholowaychuk: will do
[22:32] creationix: hmm, peepcode was supposed to talk to me about making a node screencast back in may
[22:32] creationix: I wonder what heppened to that
[22:32] javajunky: also tjholowaychuk and creationix have you decided whether what I'm doing with magic routes in a new server in connect-auth is an 'ok' thing to do or not ?
[22:33] ashleydev has joined the channel
[22:33] creationix: javajunky: I'm ok with anything until it proves to be a bad idea
[22:33] tjholowaychuk: javajunky: im not against it, if they dont collide I dont see it being a big deal
[22:33] tjholowaychuk: ideally none of that, but if it is a must its a must
[22:33] bradleymeck_: http://gist.github.com/496565 , its based upon the idea of package.json's main, and require.paths isnt impl yet, but basically, just add strings to the bottom
[22:34] ashleydev has joined the channel
[22:34] javajunky: tjholowaychuk: creationix ok, thats cool then I'll worry less about it :)  
[22:35] tjholowaychuk: bradleymeck_: I thought we were looking at compiling these to a binary, or was this just the beginning of that?
[22:36] bradleymeck_: its just the beginning, i need to bulk bundle modules into single files, then its easy street
[22:36] jimt: How can I connect a slow serial (9600 baud RS232C) device to my node server?  Is there an async serial library that will get me there on Linux?
[22:36] tjholowaychuk: bradleymeck_: cool man
[22:37] creationix: tjholowaychuk: do you understand this patch? http://github.com/senchalabs/connect/issues#issue/67
[22:37] tjholowaychuk: bradleymeck_: nDistro grabs the binary for you so we could have a js script after that, but the main stuff bash
[22:37] keeto has joined the channel
[22:38] tjholowaychuk: creationix: yeah but I dont get why '//' would ever be valid really
[22:38] bradleymeck_: i need to compile the binary locally if we want static compiled into the bin
[22:38] tjholowaychuk: I think he was the same guy complaining to me a long time ago about that
[22:38] javajunky: creationix tjholowaychuk didn't I fix that same issue in express ? 
[22:38] creationix: I think it's a bug in Url.parse
[22:38] tjholowaychuk: bradleymeck_: hmMmM 
[22:38] creationix: it should always have a pathname property
[22:38] tjholowaychuk: ah
[22:39] jchris has joined the channel
[22:39] creationix: ryah: who's in charge of the Url module?
[22:39] tjholowaychuk: bradleymeck_: not sure what a good solution would be, would be wicked to build your app with nDistro then compile it all
[22:39] bradleymeck_: as long as we get nDistro to compile locally w/ the bash script i think its doable
[22:39] bradleymeck_: after that we can ship out the bin
[22:40] _announcer: Twitter: ""A full-featured http reverse proxy for node.js "" -- Jeremy Dunck. http://twitter.com/jdunck/status/19775815023
[22:44] deepthawtz has joined the channel
[22:44] creationix: tjholowaychuk: ok, so the problem is that req.url isn't the whole url
[22:44] creationix: and Url.parse is expecting a full url
[22:44] creationix: Url.parse('//') should be what?
[22:45] micheil has joined the channel
[22:45] javajunky: tjholowaychuk:  hah! I just spotted your fix for mape's issue: http://github.com/visionmedia/express/commit/262b110f9f5d0f515fec10f89255f0df6fd57e5c
[22:45] tjholowaychuk: javajunky: pretty much lol
[22:45] tjholowaychuk: said fuck it to the whole potential reloading of views in production
[22:46] tjholowaychuk: just hopes that people actually switch envs lol
[22:46] javajunky: so they'll auto-reload (i.e. never cache) in dev, and not reload at all in production ? (which is fine, but I'm just checking)
[22:46] tjholowaychuk: or we will see the "OMG EXPRESS IS SLOW" thing a lot
[22:46] tjholowaychuk: yup
[22:46] javajunky: just make sure all the examples set the prod env up  ;)
[22:46] tjholowaychuk: maybe there should always be a warning when in dev mode
[22:47] tjholowaychuk: wouldnt hurt
[22:47] javajunky: famous last words ;)
[22:48] javajunky: did anyone bench nodejs.se ? .. I've no intention of spamming his system while he's not here, just interested
[22:48] bradleymeck_: he was tracking 'apple' last night, so im pretty sure he will be fine
[22:49] javajunky: its nice to have some good express/connect examples up and running and public, rather than the usual incubator stuff ;)
[22:49] creationix: it is using nStore under the hood, I hear he had problems with that
[22:50] javajunky: yeah he was complaining about not being able to turn the system off without losing data, did you find out what could cause that ?
[22:51] tjholowaychuk: ya at least someone is using it for real, I dont even have an express app lol
[22:51] hassox has joined the channel
[22:51] tjholowaychuk: I suck at ideas for apps
[22:51] tjholowaychuk: we still need some connect demos
[22:52] javajunky: tjholowaychuk: I never even checked my auth stuff worked with express, but I got a chunk of ims over the last week telling me that people had used it successfully for stuff (woot!)
[22:52] tjholowaychuk: javajunky: wahoo! dope man
[22:52] tjholowaychuk: good to hear
[22:53] javajunky: I was going to add retweet functionality to mape's thing, but he's not opened the source up so I can't test how feasible it would be
[22:53] tjholowaychuk: Express might need it's own page for the app list I have had quite a few PMs
[22:53] mape: javajunky: what in the backend source would you need to see to add retweet ability?
[22:53] bradleymeck_: node-overload now has examples for some of the odd uses it is meant to fill /falls over
[22:53] javajunky: mape: ahh, you *are* around ;)  .. nowt in the backend 
[22:53] mape: it is express with one app.get that gets variables from a new NewsFeed()
[22:54] steadicat has joined the channel
[22:54] javajunky: yeah so I just need to throw in an isAuthenticated('facebook')  call around a 'retweet' button ;) 
[22:54] javajunky: (in the express route)
[22:56] proppy has joined the channel
[22:56] joshbuddy has joined the channel
[22:56] caolanm: how do people here feel about automatically appending a trailing slash to urls?
[22:56] freshtonic has joined the channel
[22:56] caolanm: good idea? bad?
[22:57] creationix: caolanm: bad for node
[22:57] creationix: we mess with endings in connect, but it gets messy
[22:57] bradleymeck_: i hate it
[22:57] [[zz]] has joined the channel
[22:57] javajunky: caolanm: it has consequences all over the place, especially with oauth
[22:58] Tobsn: creationix, you looked at the php fpm stuff?
[22:58] javajunky: One of the RFCs is pretty clear on what should + shouldn't happen
[22:58] creationix: I'm reading through urlParse right now
[22:58] creationix: Tobsn: no, sorry
[22:58] Tobsn: ;)
[22:58] bradleymeck_ has left the channel
[22:58] creationix: Tobsn: I mean I've used it before, just not sure how it applies to node
[22:58] _announcer: Twitter: "http://jeffkreeftmeijer.com/2010/experimenting-with-node-js/ &lt;- awesome" [sw] -- Gonçalo Oliveira. http://twitter.com/gpalaio/status/19776975745
[22:59] creationix: php is run once per request, node servers are long running
[22:59] mjijackson has joined the channel
[22:59] Tobsn: but it would be nice if there would be an instance manager for it
[22:59] Tobsn: similar to the fpm
[22:59] Tobsn: something that keeps track of all the running instances
[22:59] creationix: Tobsn: I think the closest thing for node is spark
[22:59] Tobsn: maybe even kills/starts instances
[23:00] Tobsn: assuming you would use nginx up front
[23:00] creationix: we intend to add child-process monitoring and restarting
[23:00] creationix: Tobsn: I use upstart for starting my whole node process
[23:00] Tobsn: hmm would it be possible to have a node script that responses to sockets isntead of ports?
[23:00] creationix: Tobsn: yep
[23:01] Tobsn: that would be interesting
[23:01] creationix: Tobsn: pass a file path to listen instead of a port integer
[23:01] Tobsn: oh really? that simple?
[23:01] Wandrewvious has joined the channel
[23:01] creationix: yep
[23:01] tjholowaychuk: Tobsn: that is built into http.Server
[23:01] Tobsn: how nice
[23:01] javajunky: creationix:  you were right before btw (just revising RFC3986) there should always be a path, even if it is empty  
[23:02] Tobsn: im coding in php since 12 years now for web stuff and i think im switching to node.js as soon as i figured out all the edges of how to run it controlled & stable ;)
[23:03] javajunky: Tobsn: I happen to use monit and have my node processes right out their pids to /var ..  I've not had time to play with spark yet.
[23:04] satori_: If I had been coding for 12 years in PHP, I would be keen to learn something else too :P
[23:04] Tobsn: but you write one config block in the monitrc per node process right?
[23:04] Tobsn: satori_ - you can even mail me at tobsn@php.net - but yeah you're def. right ;)
[23:04] javajunky: yeah	, not entirely ideal
[23:04] tjholowaychuk: gah
[23:04] tjholowaychuk: thats what i hate about monit
[23:04] Tobsn: yep
[23:04] tjholowaychuk: raggge
[23:04] Tobsn: see thats what i mean... something like the php fastcgi process manager would be nice... for larger projects
[23:04] tjholowaychuk: hey wait.. i guess it would be easy to add some sugar on top of monit
[23:04] javajunky: …however… it was very quick to setup and has worked flawlessly for the last 6months ;)
[23:05] tjholowaychuk: duh
[23:05] javajunky: indeed
[23:05] tjholowaychuk: go self
[23:05] tjholowaychuk: haha
[23:05] tjholowaychuk: but ya that makes me rage
[23:05] javajunky: speaking of rage, I need sleep or my colleagues tomorrow in t'office will suffer my tired-induced-anger :(
[23:05] Tobsn: monit is definitly flawless yes. but it monitors only one process... the thing is - what if i want to have 40 node processes running (assuming all one sciprt blah.js) and i want to have them all stable - writing 40 config blocks in monit would be a bit retarded
[23:06] Tobsn: also upstart daemons for all of them...
[23:06] tjholowaychuk: ACTION is going to write a script for monit
[23:06] Tobsn: you do that - and im going to write antony from php-fpm :P
[23:07] mape: build more pylons
[23:07] mape: ACTION does the robot dance
[23:07] _announcer: Twitter: "@couchdb thank you for relax my life =D  my driver for couchdb in nodejs: http://bit.ly/chcm6g write only  in 2 days =D" -- renatoelias. http://twitter.com/renatoelias/status/19777525970
[23:07] javajunky: yeah I'm not really using upstart, just scripts in /etc/init.d/ atm .. but their boilerplate so I can generate em
[23:07] javajunky: but I do keep meaning to come back to check spark out again
[23:09] javajunky: mape: I need to find some time to rewrite http://howtonode.org/express-mongodb  I've never had chance to do any styling properly for the result of that, any issues if I rip-off your style from nodejs.se (obviously I'll fully credit you ;) ) for when I get around to re-writing it ?
[23:09] mape: javajunky: sure
[23:10] creationix: javajunky: actually I'm looking at the urlParse code, and it's worse than expected
[23:10] javajunky: mape: coolio 
[23:10] javajunky: creationix: good times, at least its not an important bit of code ;)
[23:10] creationix: it's thinking that '//' should be { href: '//', slashes: true, host: '', hostname: '' }
[23:10] creationix: but '/' is { href: '/', pathname: '/' }
[23:11] creationix: and '///' is { href: '///', slashes: true, host: '', hostname: '', pathname: '/'}
[23:11] _announcer: Twitter: "&quot;Write&quot; HTTP Products may have a suspicious RT @ changelogshow: node-http-proxy: Reverse proxy for Node.js from @ maraksquires and @ indexzero http://wynn.fm/3g" [ja] -- Masakazu . http://twitter.com/studiomaestro/status/19777780594
[23:11] creationix: so the pathname of '/' is '/' and '///' is '/', but '//' is undefined
[23:12] javajunky: :( 
[23:12] creationix: the slashes code is eating it
[23:12] javajunky: a very simple fix would be to default pathname to "" 
[23:12] javajunky: the rfc suggests there should always be one.
[23:12] joshbuddy_ has joined the channel
[23:12] creationix: yes, but I don't want '///' to be '/' either
[23:12] javajunky: http://tools.ietf.org/html/rfc3986#section-3.3 para 4ish 
[23:13] Tobsn: path is always /
[23:13] creationix: javajunky: http://github.com/ry/node/blob/master/lib/url.js#L36
[23:13] Tobsn: at least
[23:14] Tobsn: to indicate root
[23:14] javajunky: its getting pretty unclear at that point the spec would it should do in that situation… I've seen urls containing multiple slashes like that before now…  the rfc seems to allow /*pchar/  which could validly be // (or ///) however it does say that path-absolute cannot be '//' :(    
[23:14] Tobsn: rfc allows multiple slashes but most servers eat them up
[23:14] Tobsn: //// => /
[23:14] Tobsn: apache etc. merge them
[23:14] eday has left the channel
[23:14] creationix: well, node should do the most minimal thing which is correct
[23:14] Tobsn: at least at root level
[23:15] javajunky: Tobsn: really ? my interpretation suggests that an empty path is perfectly legal .. but that there should always be one…but I'm happy to be wrong.
[23:15] jchris has joined the channel
[23:15] creationix: and eating the first two slashes is just wrong
[23:15] Tobsn: no its legal
[23:15] javajunky:  A path is always defined for a URI, though the
[23:15] javajunky:    defined path may be empty (zero length).
[23:15] javajunky: http://tools.ietf.org/html/rfc3986#section-3.3  <!— is that superceeded ?
[23:15] Tobsn: buti think i remember that at least at root level webservers merge them
[23:15] Tobsn: http://google.com//
[23:15] Tobsn: http://www.google.com//intl/en_us/ads/ads_0.html
[23:15] Tobsn: see
[23:16] Tobsn: http://www.youtube.com////watch?v=Z_coS8w7W1Q&feature=popular
[23:16] Tobsn: but with those sites you also never know if thats just a feature to protect idiots who doesnt know how to type urls ;)
[23:16] creationix: Tobsn: yeah something is eating the slashes, I'm just not sure node itself should assume that
[23:17] Tobsn: well at root level you can always assume that
[23:17] chilts: I usually find the webserver eats them, but not sure what node would do in that case
[23:17] creationix: and what node does right now is just plain wrong
[23:17] creationix: it easts the first "2"
[23:17] javajunky: Tobsn: I would expect that to be up to a slightly higher level perhaps
[23:17] Tobsn: http://domain.com => http://domain.com/ || http://domain.com////// => http://domain.com/
[23:17] chilts: that's a little bizarre :)
[23:17] creationix: that's something connect middlewares themselves should be worrying about
[23:18] Tobsn: yeah that should be in connect or http etc.
[23:18] ajpiano has joined the channel
[23:18] creationix: well, maybe in Url.parse
[23:18] creationix: if done right
[23:18] Tobsn: well see it from a linux directory viewpoint
[23:18] Tobsn: a / folder will not exist
[23:18] Tobsn: also a empty folder does not exist
[23:19] creationix: Mapping a url path to a filesystem is clearly outside the responsibility of node or Url.parse
[23:19] creationix: that belongs in the framework
[23:19] Tobsn: on the other side you might want to parse variables on different positions in the uri... like http://api.myapi.com/geodata/lat/lang/optional/optional/ - first optional could be empty so /lat/lang//optional/ should still work
[23:19] javajunky: Tobsn: I'm probably just tired, but that section of the RFC declaring how a URI should be parsed seems reasonably clear, as-distinct-to how a server maps a url down to how it returns resources ? 
[23:19] creationix: I'm pretty sure req.url is right (meaning not having the protocol and host/port)
[23:20] Tobsn: i mean has to still work to be able to explode on / and so on
[23:20] tjholowaychuk: ACTION likes comma first for 2 spaces
[23:20] Tobsn: RFC... well it would be in the http rfc i guess?
[23:20] Tobsn: 1409?
[23:21] Tobsn: oh wait, yeah there is one for the uri
[23:21] javajunky: yes, the one I keep referencing ;)
[23:21] javajunky: http://tools.ietf.org/html/rfc3986#section-3.3
[23:21] creationix: javajunky: so the problem is that Url.parse can parse full urls and partial urls
[23:21] creationix: what is the correct interpretation of the string '//'
[23:21] javajunky: depends on the context <g>
[23:21] creationix: null protocol, null host, and no path?
[23:21] creationix: seems strange to me
[23:22] javajunky: so what you mean is url.parse can parse 'urls' and 'paths' ...
[23:22] creationix: Url.parse(req.url)
[23:22] creationix: is the most common use case
[23:22] creationix: but req.url isn't a full url
[23:22] creationix: it's the part after the host and port
[23:22] creationix: the part in the http head
[23:22] javajunky: dammnit I've really got to go or my better half is gonna scalp me, just as its getting interesting!  … hmm yes that's exactly how I use it .
[23:23] javajunky: that isn't a url
[23:23] dannycoates has joined the channel
[23:23] creationix: SubStack: will your stuff be open source?
[23:23] Tobsn: javajunky
[23:23] Tobsn: http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2
[23:24] surreal1212 has joined the channel
[23:24] javajunky: creationix: its a request-uri 
[23:24] Tobsn: doesnt really say anything,... besides empty equals /
[23:25] Tobsn: also http rfc doesnt say anything about #
[23:25] javajunky: there's no way of knowing what that url can contain, it coul dbe blank/absoluteurl, absolout path or an authority!
[23:25] javajunky: ( http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2 ) 
[23:25] javajunky: 'nice' )
[23:25] Tobsn: well you know that // as root is not allowed and so isnt /../
[23:26] Tobsn: so it has to be / or empty which is also / and after that it has to be ? or # or .+ ;)
[23:27] javajunky: um, why is // as root not allowed ? 
[23:27] Tobsn: no idea
[23:27] javajunky: http://tools.ietf.org/html/rfc3986#section-3.3  says that it is not allowed if there is *no* authority
[23:27] Tobsn: it says it in the uri rfc
[23:27] javajunky: an authority is something like http://foo:80  or somesuch 
[23:27] lachlanhardy has joined the channel
[23:27] creationix: javajunky: I think I'll just submit a patch to Url.parse to not be stupid
[23:28] Tobsn: well i guess its just "not right"
[23:28] javajunky: ;) rfcs are fun
[23:28] Tobsn: yeah
[23:28] chilts: tjholowaychuk: I saw that you use redis on that mailing list thread, you using the new 2.0 yet or the old one?
[23:28] Tobsn: i bet there is a reason for the not // right after domain etc. - maybe to not confuse url parsers etc.
[23:28] javajunky: creationix: I don't envy you, much inevitable downstream breakages ahead ;) 
[23:29] javajunky: gotta run. night all
[23:29] chilts: am just curious because of the new features of 2 and whether the client can talk that yet
[23:29] Tobsn: http:// vs. domain.com//
[23:29] Tobsn: n8
[23:29] javajunky: well I think the host forms part of the authority doesn't it.
[23:29] tjholowaychuk: chilts: older
[23:29] Tobsn: possible
[23:29] Tobsn: would explain it
[23:29] Tobsn: guess it just looks bad if there are two //
[23:29] javajunky: Tobsn: well according to 3.2.2 of rfc3986 it does.. but anyway I've gotta go ro I"m a dead man
[23:30] Tobsn: ;)
[23:30] Tobsn: have a good night
[23:30] javajunky: but you're right I Guess thats where the confusion slips in 
[23:30] Tobsn: yep
[23:30] Tobsn: /host//
[23:30] Tobsn:  - //host//
[23:30] Tobsn: would be bad
[23:30] chilts: ahah, just found http://howtonode.org/node-redis-fun which is what I wanted to find the node-redis-client :)
[23:30] javajunky: cu
[23:30] chilts: tjholowaychuk: thanks :)
[23:31] tjholowaychuk: chilts: im using 1.2.6 i think
[23:31] Tobsn: chilts, redis is not a database :P
[23:31] hassox: does howtonode.org have a feed?
[23:31] hassox: I can't see one in chrome
[23:31] chilts: Tobsn: I know what Redis is :)
[23:31] Tobsn: i just read "blazing fast database"
[23:31] Tobsn: :P
[23:32] Tobsn: its just blazing fast memcache with queues and consistant storage
[23:33] hassox: creationix: does howtonode.org have a feed?
[23:33] chilts: http://howtonode.org/feed.xml
[23:33] creationix: yep
[23:33] hassox: gracia
[23:33] hassox: gracias
[23:33] _announcer: Twitter: "Disappointed. Have refreshed http://nodejs.se/ twice and no new #nodejs frameworks. Oh, wait..." -- David Taylor. http://twitter.com/zensatellite/status/19779235952
[23:36] _announcer: Twitter: "Met @jedschmidt in person finally. Dude says he's "not much of a programmer and not very smart". Couldn't disagree more. qv: (fab) #nodejs" -- Ⓘⓢⓐⓐⓒ. http://twitter.com/izs/status/19779409831
[23:38] rauchg__ has joined the channel
[23:43] troymg_ has joined the channel
[23:44] Tobsn: hmm is there a docu for node.js with all the comparison functions listed?
[23:46] mjr_: Tobsn: what do you mean by comparison functions?
[23:46] Tobsn: isNaN... kinda like php functions like is_numeric etc.
[23:46] Tobsn: just wondering if there are more  than in normal javascript
[23:46] hober: Tobsn: you want a JavaScript reference
[23:46] mjr_: Oh, that's just standard JavaScript then.  Node doesn't do anything special.
[23:46] Tobsn: oh okay
[23:47] Tobsn: uh right there is phpjs.org
[23:47] Tobsn: :P
[23:47] Tobsn: that works with nodejs
[23:47] Tobsn: awesome,
[23:48] Tobsn: .
[23:48] creationix: what should '//user:pass@example.com:8000/foo/bar?baz=quux#frag' parse to?
[23:48] creationix: I think that's all in path
[23:48] Tobsn: http://
[23:48] Tobsn: yep
[23:48] creationix: (except for the ? part)
[23:48] Tobsn: ? and # are terminators
[23:49] creationix: why would you ever have a url that starts with // but intent to be part of the protocol?
[23:49] Tobsn: guess which ever comes first cuts the path
[23:49] Tobsn: ?
[23:49] Tobsn: why would it start only with //?
[23:49] creationix: Tobsn: well, that's the use case I'm trying to fix
[23:50] maushu: creationix, a protocoless url? :p
[23:50] creationix: maushu: yeah
[23:50] Tobsn: hu?
[23:50] kodisha has joined the channel
[23:50] creationix: now req.url could easily start like that
[23:50] _announcer: Twitter: "People need to stop touting #nodejs benchmarks. Performance is poor sale. Write about #expressjs instead, or fab" -- Julio Cesar Ody. http://twitter.com/julio_ody/status/19780298324
[23:50] creationix: just type http://localhost:3000//user:pass@example.com:8000/foo/bar?baz=quux%23frag in the browser and you will get the string above
[23:51] Tobsn: no thats wrong
[23:51] creationix: Tobsn: what's wrong?
[23:51] Tobsn: is @ even allowed in a path?
[23:51] Tobsn: oh yeah because the browser takes the first //
[23:51] creationix: sure
[23:51] Tobsn: i mean first before the host/path match
[23:52] creationix: Tobsn: http://user:pass@example.com:8000/foo/bar?baz=quux%23frag is a perfectly legal url
[23:52] creationix: and common too
[23:52] Tobsn: yyep thats a legal url
[23:52] Tobsn: but http://host.com//host.com/ is not
[23:52] creationix: Tobsn: sure it is
[23:52] creationix: the path can have about anything
[23:53] Tobsn: not based on the rfc
[23:53] creationix: maybe it's not an RCP proper url, but browsers will send it if people type it
[23:53] Tobsn: starting characters has to be / or empty but can not be // or /../
[23:53] creationix: *RFC
[23:53] Tobsn: but it will never happen in real life anyway
[23:53] creationix: Tobsn: http://github.com/senchalabs/connect/issues#issue/67
[23:53] creationix: I'm only responding to a support ticket, it already happened in real life
[23:54] Tobsn: well than tell the person who did a domain.com// url that hes doing it wrong
[23:54] Tobsn: :P
[23:54] creationix: the patch in the ticket only goes around the issue, the root of the problem is in Url.parse not giving me a pathname
[23:54] Tobsn: what do you get  if you give it //blah/blah?bla=123 ?
[23:54] Tobsn: just nothing?
[23:55] Tobsn: i mean http://domain.com//blah/blah?bla=123
[23:55] creationix: Tobsn: you get 'blah/blah' as the path name
[23:55] Tobsn: what would you get with only one / ?
[23:55] creationix: in HTTP (the protocol) only the part after the port is actually sent over the wire
[23:55] Tobsn: yeah the GET /path/
[23:55] creationix: GET //blah/blah?bla=123
[23:55] creationix: and that's stored in req.url by node
[23:55] Tobsn: so the uri parser is cutting out the // to nothing?
[23:55] creationix: then I want to get the //blah/blah part using Url.parse
[23:56] creationix: Tobsn: yep and setting "slashes" to true
[23:56] Tobsn: wheres the source for that function?
[23:56] Tobsn: the Uri.parse
[23:56] Tobsn: *Url
[23:57] creationix: Tobsn: http://github.com/ry/node/blob/master/lib/url.js#L36
[23:57] creationix: Tobsn: basically if the url starts with // it gets cut out and the parser is put in host mode
[23:57] Tobsn: rest = rest.substr(2);
[23:57] Tobsn: well there ya go
[23:58] Tobsn: no idea why that is in there
[23:58] Tobsn: i mean normally it should be rest = rest.substr(1);
[23:58] Tobsn: i assume
[23:58] Tobsn: to turn //blah into /blah
[23:58] Tobsn: to make it rfc compliant
[23:58] creationix: though, I think something is wrong with the logic
[23:58] Tobsn: yeah
[23:58] creationix: Tobsn: no it thinks it's still before the host
[23:58] Tobsn: oooh
[23:58] Tobsn: haha
[23:58] creationix: if proto is set then you expect // next
[23:58] Tobsn: there is your reason why you shouldnt use // to start a path :P
[23:59] Tobsn: wait, i gotta go for an hour - signing my new lease
[23:59] creationix: have fun
[23:59] Tobsn: gonna look into that url.js later
[23:59] Tobsn: brb
[23:59] SubStack: creationix: stackvm is already open source
[23:59] Tobsn: i bet there is some dummy misstake that assumes pathes never have // in it
[23:59] rauchg__ has joined the channel
[23:59] Tobsn: brb
[23:59] creationix: SubStack: oh on github right?
