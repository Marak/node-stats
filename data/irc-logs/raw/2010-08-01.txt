[00:01] creationix: mscdex: ok, that may be possible, I'd file a ticket
[00:01] mscdex: yeah, i'm working on a patch
[00:01] manveru: bradleymeck2: i wish for oniguruma :)
[00:02] bradleymeck2: i was thinking re2
[00:02] bradleymeck2: its faster
[00:02] manveru: faster than?
[00:03] bradleymeck2: oniguruma?
[00:03] indexzero has joined the channel
[00:03] riottaba__ has joined the channel
[00:03] manveru: ACTION wouldn't know
[00:03] pufuwozu has joined the channel
[00:03] manveru: i just need the features of onig :)
[00:03] riottaba_ has joined the channel
[00:04] JimBastard: indexzero in the house, its a javascript party
[00:04] bradleymeck2: need pfff i just need fing lookbehind and \A personally, but ill see if there is an overlayer
[00:04] mscdex: quick fix :-)
[00:05] manveru: bradleymeck2: with oniguruma, i could implement syntax highlighting using textmate bundles
[00:05] bradleymeck2: does it do anything outside of pcre?
[00:06] manveru: yeah
[00:06] creationix: Buffers are hot!
[00:06] creationix: I got a custom db storing 100 million records in 2d space (on a 10,000x10,000 grid)
[00:07] creationix: and I can initialize it, populate it, and take a binary snapshot of it
[00:07] creationix: all in one second!
[00:07] creationix: only limitation is I can't have more than 256 unique items
[00:07] creationix: with is fine for my use case
[00:08] JimBastard: bad ass creationix 
[00:08] _announcer: Twitter: "Setting up virtual server for node.js testing, gonna be a fun sunday" -- Ariel. http://twitter.com/chazzuka/status/20027186061
[00:08] JimBastard: nStore?
[00:08] creationix: not a chance
[00:08] creationix: nstore is a generic key/value system
[00:09] creationix: this is a specific engine for a MMORTS game
[00:09] JimBastard: 10-4
[00:09] JimBastard: i like games like that
[00:09] creationix: too bad I suck at front-end stuff
[00:11] creationix: taking a snapshot of the entire db takes 76ms
[00:11] creationix: gotta love memcpy
[00:12] bradleymeck2: manveru, i cant find what it has that pcre does?
[00:12] bradleymeck2: doesnt*
[00:14] _announcer: Twitter: "I liked a YouTube video -- Node.js: JavaScript on the Server http://youtu.be/F6k8lTrAE2g?a" -- Craig Talbert. http://twitter.com/craigtalbert/status/20027497440
[00:14] micheil: morning chaps'
[00:15] creationix: mornin'
[00:15] manveru: bradleymeck2: i'm pretty sure the syntax is different
[00:16] _announcer: Twitter: "@suttree Have some time to discuss the performance issues from PMOG? I'm considering NodeJS and a key-value store for high frq objects." -- FesterCluck. http://twitter.com/FesterCluck/status/20027577572
[00:16] bradleymeck2: well, looking up the benches onig is beating pcre, so yea, ill add an issue to overload
[00:16] _announcer: Twitter: "Asynchronous framework based on Django, written in Javascript for node.js by @isntitvacant. Sweet! Serious WANT on the "jsdtl" piece. When?!" -- Jeff Croft. http://twitter.com/jcroft/status/20027615470
[00:16] bradleymeck2: need a name for it though
[00:17] manveru: bradleymeck2: i haven't got much experience with pcre
[00:17] bradleymeck2: perhaps just going to call it Pattern since the engine behind it isnt important cause of Perl language compatibility
[00:17] riottaba has joined the channel
[00:18] Nathan_ has joined the channel
[00:19] manveru: but seems like pcre provides some compat with onig
[00:19] mscdex:  /Pattern/
[00:19] mscdex: :p
[00:20] bradleymeck2: im going to match the JS pattern api unless some deficiency can be pointed out
[00:21] dannycoates has joined the channel
[00:29] riottaba_ has joined the channel
[00:29] JimBastard: hey creationix , ive got an interesting problem using spark if you have a second
[00:29] creationix: sure
[00:30] JimBastard: so i think i can fix this if i just create two separate apps. what im trying to do is benchmark http-proxy using spark
[00:30] JimBastard: so i have http://gist.github.com/502787 as my app
[00:30] JimBastard: but the problem is, i need to actually export 2 http servers
[00:30] JimBastard: one being the proxy, one being the local
[00:31] JimBastard: if i try to spark with just one exporting, it tries to run the other one n times, getting port bind error obviously
[00:31] JimBastard: should i just separate it into two files and start them up separately ?
[00:32] creationix: yeah
[00:32] riottaba__ has joined the channel
[00:33] creationix: hmm, though actually require should cache and it shouldn't matter
[00:33] creationix: JimBastard: ^
[00:33] creationix: oh, but they are in child processes, so the require cache is clean
[00:33] creationix: yeah, two files
[00:33] teemow has joined the channel
[00:33] JimBastard: i figured
[00:33] JimBastard: cool
[00:34] JimBastard: are you guys accepting patches for spark?
[00:34] JimBastard: i was thinking about making .listen() work
[00:34] JimBastard: so you can still set the port inside the app
[00:34] JimBastard: dunno if that makes sense
[00:35] softdrink has joined the channel
[00:38] jamescarr: man... Array Extras rock
[00:38] manveru: bradleymeck2: http://blog.stevenlevithan.com/archives/fixing-javascript-regexp
[00:38] creationix: if there a way to zero out node buffers without resorting to a for loop?
[00:39] JimBastard: hey whats up jamescarr 
[00:39] JimBastard: << marak
[00:39] jamescarr: although I wish Array.reduce was the same as reduce in scala
[00:39] jamescarr: hey
[00:41] manveru: jamescarr: what's reduce there?
[00:43] jamescarr: currently it feels like reduce in js acts more like a fold in scala
[00:43] jamescarr: since it needs to be primed with an initial value
[00:44] riottaba has joined the channel
[00:44] jamescarr: its what threw me off during my late night node.js hacking last night
[00:46] nrstott has joined the channel
[00:46] JimBastard: creationix: isnt spark suppose to increase the amount of requests per second an http server can handle?
[00:46] creationix: JimBastard: depends on the use case
[00:46] jlilly has joined the channel
[00:46] JimBastard: creationix: http-proxy ?
[00:46] jamescarr_ has joined the channel
[00:46] JimBastard: it seems to actually slow it down the more processes i ad
[00:46] creationix: JimBastard: probably should speed it up
[00:46] JimBastard: d
[00:46] creationix: don't add more than the number of cores
[00:47] JimBastard: i figured that
[00:47] JimBastard: so im on the macbook pro which has 2 cores
[00:47] JimBastard: so -n 2 ?
[00:48] JimBastard: using apache ab im seeing no real difference, ive got a friend setting up tsung on another machine we are going to try to confirm 
[00:49] JimBastard: hrmmm wait
[00:49] JimBastard: i guess if im running two spark apps and i only have 2 cores?
[00:49] JimBastard: its not gonna do anything?
[00:50] riottaba_ has joined the channel
[00:51] riottaba__ has joined the channel
[00:51] jamescarr_: doh
[00:52] creationix: yeah, then you don't need it
[00:52] JimBastard: i mean, im not gonna start complaining about getting 5.2k requests per second with a concurrency of 50
[00:52] JimBastard: ill come back to this stuff once we upgrade some of our servers
[00:52] JimBastard: a:p
[00:53] JimBastard: :p
[00:53] jamescarr_: heh
[00:53] jamescarr_: I need to update nodejs so often ...
[00:54] jamescarr_: I actually created a shell script to automatically clone from github, compile and install ;)
[00:55] SubStack: isaacs should hack in an npm rebuild for when node gets recompiled
[00:56] JimBastard: SubStack: i was thinking that
[00:56] isaacs: SubStack: not a bad idea.  to rebuild packages, or node itself?
[00:56] JimBastard: node itself
[00:56] isaacs: SubStack: like, compiled things?
[00:56] SubStack: I was just thinking packages
[00:56] SubStack: yeah, compiled packages
[00:56] JimBastard: o
[00:56] isaacs: JimBastard: you could just use nave
[00:56] isaacs: or create a bash shortcut for make && make install
[00:56] isaacs: SubStack: yeah, cuz addons have to be rebuilt, right?
[00:57] SubStack: yep
[00:57] SubStack: compiled ones anyways
[00:57] isaacs: SubStack: so, there *is* a command for that, but it super duper sucks.
[00:57] isaacs: SubStack: npm build <path>
[00:57] jamescarr_: I've been using npm as my gradle/maven/ant for my node.js projects
[00:57] SubStack: oh really
[00:57] isaacs: but path is something like: /usr/local/lib/node/.npm/name/version/package
[00:57] isaacs: so yeah, not ergonomic.  build is mostly just plubming
[00:57] SubStack: erm, except rebuild all packages in one go
[00:58] isaacs: righg
[00:58] geojeff: vows has a dependency, eyes.js, which isn't found. but npm list shows it. how to troubleshoot?
[00:58] SubStack: for pkg in $PREFIX/lib/node/.npm/*/latest/package; do npm build $pkg; done
[00:59] SubStack: perhaps that'd work
[00:59] isaacs: SubStack: except s/latest/active/
[00:59] SubStack: k
[00:59] isaacs: SubStack: that might work, sure
[00:59] riottaba has joined the channel
[00:59] jamescarr_: what is this JSGI I keep hearing about?
[00:59] jamescarr_: havent glanced at it yet
[00:59] isaacs: geojeff: works for me?
[00:59] riottaba_ has joined the channel
[01:00] geojeff: isaacs: i've uninstalled vows, npm even and reinstalled
[01:00] isaacs: SubStack: could you add an issue for "rebuild"?  I like the idea.
[01:00] SubStack: k
[01:00] JimBastard: geojeff: sudo npm install eyes ?
[01:00] isaacs: geojeff: can you gist the output from the command that's failing?  that's usually helpful
[01:01] geojeff: ok
[01:01] geojeff: JimBastard: tried, it says nothing to install
[01:01] JimBastard: cloudhead: lolsup?
[01:02] riottaba___ has joined the channel
[01:03] SubStack: isaacs: done
[01:03] geojeff: isaacs, JimBastard: http://gist.github.com/502807 
[01:04] jamescarr_: marak: what was the project management app tied to vows.js that you were brainstorming?
[01:04] JimBastard: jamescarr_: did i post that on the mailing list? i forgot
[01:04] ag90 has joined the channel
[01:04] sechrist has joined the channel
[01:04] jamescarr_: JimBastard, yeah, bit kinda left it in the wind
[01:05] jamescarr_: I'm kind of liking vows.js
[01:05] JimBastard: hee hee ya, maybe gonna be a node knockout thing
[01:05] JimBastard: or a product we sell as a service
[01:05] jamescarr_: heh
[01:05] jamescarr_: I'm on a team
[01:05] jamescarr_: but we still dont have any ideas for an app except for stuff that's run of the mill :(
[01:05] joshdulac: anyone know of a good tutorial for working with HTTPS in node.js?
[01:06] jamescarr_: the best I came up with so far is a code kata type site
[01:06] JimBastard: jamescarr_: http://seancribbs.com/tech/2009/08/24/lowdown-our-rails-rumble-09-application/ i think
[01:06] JimBastard: like that
[01:06] jamescarr_: joshdulac, not a tutorial per se, but I blogged about HTTPs awhile back when using http.Client
[01:06] jamescarr_: http://blog.james-carr.org
[01:07] jamescarr_: JimBastard, on the subject of BDD, someone on twitter claimed to be using Cucumber with Node.js
[01:07] jamescarr_: but the bastard never replies when I ask him about it
[01:07] joshdulac: jamescarr_: thank you. Did you do any work with http.Server in HTTPS ?
[01:08] aheckmann has joined the channel
[01:08] JimBastard: jamescarr_: hrmmm yeah
[01:08] JimBastard: well vows is a bit like that
[01:08] jamescarr_: I mean, not using webrat, but using the V8 bindings
[01:08] JimBastard: i gotta go focus for a bit ill be back
[01:09] isaacs: geojeff: i think you might either have a) an old npm or b) a corrupted setup from a previous version of npm
[01:09] isaacs: geojeff: try this:
[01:09] isaacs: geojeff: npm rm vows; npm rm eyes; npm install vows
[01:09] geojeff: probably so, after unsintall tries
[01:09] isaacs: geojeff: then do it again
[01:10] creationix: I wish I had memory mapping
[01:10] geojeff: isaacs: nope, will try with sudo
[01:10] isaacs: creationix: like mmap?
[01:10] creationix: yep
[01:11] geojeff: isaacs: no luck
[01:11] isaacs: geojeff: gist the npm output, plz?
[01:11] creationix: though I'm not sure is mmap could be blocking 
[01:11] creationix: since it sometimes hits the disk
[01:12] creationix: s/is/if/
[01:12] jamescarr_: creationix, any idea what this might be caused by? http://gist.github.com/502814
[01:13] jamescarr_: (offhand I mean)
[01:13] geojeff: isaacs: now on bottom http://gist.github.com/502807
[01:13] isaacs: I will say this right now: if anyone does a multiuser command line game a la nethack that uses ncurses on the client and talks to a server (or peers) using tcp, i will award your team 9000 internets.
[01:13] creationix: MemoryStore isn't defined, maybe missing require somewhere
[01:13] creationix: jamescarr_: might be a bug in connect where you have to specify the store option
[01:14] isaacs: geojeff: remove vows, THEN remove eyes
[01:14] creationix: jamescarr_: yeah, it's on connect, I see the file and lineno
[01:14] creationix: jamescarr_: just manually specify a store when setting up the session layer
[01:14] isaacs: (that sounds really gory)
[01:15] creationix: jamescarr_: and then file a ticket against connect saying the default for session stores isn't working
[01:15] jamescarr_: creationix, I'm a little skeptical... this worked on my desktop just fine, but not on my laptop... perhaps its just some misconfiguration
[01:16] creationix: maybe you have an older version of connect
[01:16] geojeff: isaacs: updated gist. still have some old vows?
[01:16] mape: isaacs: Wouldn't it be better to do a game like uplink but multiplayer?
[01:17] isaacs: mape: not familiar with uplink.  but i think a client+server app that is 100% node would be so super badass.
[01:17] isaacs: especially if it did something interestingly peer-to-peer
[01:17] riottaba has joined the channel
[01:17] mape: isaacs: http://www.mrcracker.com/wp-content/images/uplink.jpg hacker game
[01:17] bradleymeck2 has left the channel
[01:17] isaacs: oh, jesus, that's complicated.
[01:18] mape: http://image.gamespotcdn.net/gamespot/images/2001/pc/str/uplink/uplink_790screen001.jpg
[01:18] isaacs: i'm talking about a node knockout project.
[01:18] isaacs: like, a 48 hour hack
[01:18] rauchg_: what are the rules of knockout 
[01:18] mape: Yeah sure, but the idea could be simplified
[01:18] mikeal has joined the channel
[01:18] rauchg_: how do you tell if the project wasn't premade ?
[01:18] isaacs: geojeff: ok, dude, drastic measures are called for.
[01:18] mape: multiple people, and when you hack someone you have to code a snippet that does a specific function
[01:18] geojeff: isaacs: :)
[01:19] isaacs: geojeff: rm -rf /Users/geojeff/.node_libraries/{.npm/vows,.npm/eyes,vows,eyes}*
[01:20] isaacs: then install vows
[01:20] isaacs: geojeff: it looks like some dependent links weren't cleaned up properly for some reason.
[01:20] geojeff: isaacs: what's the deal with needing sudo sometimes -- should i need that if proper setup?
[01:20] isaacs: geojeff: since that didn't really work properly until pretty recently, it's not surprising, but it should be ok moving forward.
[01:21] riottaba_ has joined the channel
[01:21] isaacs: geojeff: i'd recommend chown-ing your npm "root" and "binroot" directories
[01:21] geojeff: ok
[01:21] isaacs: geojeff: binroot defaults to "wherever node is located", and root it looks like is set to ~/.node_libraries
[01:22] isaacs: geojeff: in the standard ./configure make install setup, that's /usr/local/bin/
[01:22] ag90 has joined the channel
[01:22] geojeff: isaacs: i could have problem of installing by npm and by make install
[01:23] ag90 has joined the channel
[01:23] geojeff: isaacs: also, if you try npm install package, and it fails
[01:23] geojeff: and then sudo npm install package
[01:24] isaacs: geojeff: not following, sorry..
[01:24] isaacs: .
[01:24] geojeff: could be problem -- at least that just happened with vows -- it now works, btw
[01:24] geojeff: isaacs: thank you!
[01:24] isaacs: oh, kewl!
[01:24] isaacs: np!
[01:25] geojeff: isaacs: i meant to say that i removed all with rm -rf cmd you gave me, then tried to install vows with npm install vows, which failed on permissions. then tried with sudo, but it didn't work with sudo. had to do rm -rf and do sudo npm install vows at the get-go.
[01:26] isaacs: is ee
[01:26] riottaba has joined the channel
[01:26] isaacs: if you do this, you should be sudo-less moving forward:  sudo chown -R $USER $(npm config get binroot)
[01:26] geojeff: great
[01:26] isaacs: that would also mean you can install node with just ./configure && make install
[01:27] isaacs: using npm with sudo is very dangerous.
[01:27] isaacs: any package manager, really
[01:27] steadicat has joined the channel
[01:27] geojeff: i gather :)
[01:27] isaacs: ACTION hates that dpkg has trained so many people into bad behavior patterns
[01:27] geojeff: yep
[01:28] isaacs: if you have a single-user machine, then /usr/local should be yours, and /usr the "system's"
[01:28] geojeff: isaacs: in python i like virtualenv for making isolated dev areas
[01:28] isaacs: geojeff: kewl.
[01:28] isaacs: geojeff: you might want to check out nave or nvm
[01:28] geojeff: i have single user machine
[01:29] geojeff: ah, i forgot i have nvm
[01:29] geojeff: well, wrong machine. must be on other.
[01:29] geojeff: will do
[01:30] geojeff: ah, nave :)
[01:31] isaacs: nave is an acronym for: "Nave: A Virtual Environment"
[01:31] geojeff: nice
[01:31] isaacs: it's just a bash script, and hasn't gotten much play testing.  i use it all the time, but that means it's really only good for what i use it for.
[01:31] geojeff: sure
[01:32] isaacs: tim caswell (creationix) has done a lot of exploration in this area, too.  he wrote nvm and ivy
[01:32] geojeff: but nice to see action in this area
[01:32] jwcooper has joined the channel
[01:32] creationix: :)
[01:33] isaacs: nvm is a lot like nave, but using a bash function instead of subshells.  ivy is a first pass at a full on node distribution with bundled packages and everything.
[01:33] creationix: ndistro is like ivy without git
[01:33] creationix: nDistro is tj's thing
[01:33] isaacs: oh, right ndistro, too
[01:33] _announcer: Twitter: "But this: http://dtrace.org/blogs/bmc/2010/07/30/hello-joyent/ was quite surprising. I *just* drank the node.js kool-aid last week." -- Ananth Shrinivas. http://twitter.com/ananthshrinivas/status/20031942020
[01:33] creationix: (visionmedia on github)
[01:33] isaacs: the thing is, you don't really need the virtualenv stuff unless you want different versions of node itself.
[01:34] creationix: yeah, I don't use nvm anymore
[01:34] isaacs: npm is enough to get you out of dependency hell, which is what python's virtualenv is mostly used for.
[01:34] isaacs: creationix: orly?  why not?
[01:34] creationix: isaacs: just don't need it with ivy
[01:34] isaacs: ah, yeah
[01:34] isaacs: that makes sense
[01:36] geojeff: creationix: i'll take a look at ivy. i made a deploy script with a python lib called Fabric, for sending up sproutcore static files to server. 
[01:37] creationix: geojeff: ok, but be warned Ivy is opinionated 
[01:37] geojeff: :)
[01:37] geojeff: specialized, you mean?
[01:37] riottaba_ has joined the channel
[01:37] creationix: it only works with modules packaged in rubygem style and you can't use binary extensions
[01:37] geojeff: ok
[01:37] creationix: but stick to those rules and it's a breeze
[01:37] geojeff: cool
[01:38] isaacs: ivy isn't just opinionated, it's downright conservative.
[01:38] isaacs: religious, even
[01:38] creationix: ;)
[01:38] creationix: ACTION goes back to writing database engines for massive online games
[01:39] geojeff: the thing i made with Fabric just makes a tarball and sends, then explodes, etc. http://github.com/geojeff/sproutcore-utils/tree/master/deploy/fabric-all/
[01:40] tong7 has joined the channel
[01:40] geojeff: and is specific to needs of sproutcore
[01:40] isaacs: neat
[01:43] tong7: var f = fs.createWriteStream("myfile",{"flags":"w+",'encoding':'utf8','mode': 0777}); f.write();   ... does not append but overwrites the content of the file .. whta am i missing ?
[01:43] sechrist has joined the channel
[01:43] riottaba has joined the channel
[01:45] sechrist has joined the channel
[01:45] tong7: ( of course i write some data .. f.write("OK"); )
[01:47] isaacs: tong7: use a+, not w+
[01:47] technoweenie: TypeError: Cannot set property '�d' of undefined  == sad panda :(
[01:47] sechrist_ has joined the channel
[01:47] isaacs: "w+" == "write, and also create the file if it doesn't exist"
[01:48] technoweenie: i thought the plus was for binary shit
[01:48] tong7: uuupps.. thx!
[01:48] technoweenie: w+ vs w
[01:48] tong7: works
[01:48] technoweenie: (which only matters on windows)
[01:50] ag90 has left the channel
[01:50] isaacs: oh, wait, the + is for "read, also"
[01:50] isaacs: case "w+": return process.O_CREAT | process.O_TRUNC | process.O_RDWR;
[01:50] isaacs: vs:
[01:50] isaacs:     case "w": return process.O_CREAT | process.O_TRUNC | process.O_WRONLY;
[01:50] technoweenie: oh wow
[01:50] technoweenie: no thats right... wb+ is binary
[01:50] isaacs: (in lib/fs.js, line 120 or so)
[01:50] technoweenie: B is for Binary
[01:51] isaacs: right, but in node, you don't sweat that.  just write a binary buffer if you want to write bytes exactly
[01:51] isaacs: or a string with an encoding if you want that
[01:51] technoweenie: it might become an issue if node gets windows support
[01:51] isaacs: orly?
[01:52] isaacs: why, windows opens binary files different than non-binary files?
[01:52] technoweenie: i guess... the open codes are different
[01:52] isaacs: (also, what does it store non-binary files in?  ternary?  some kind of quantum computing thing?)
[01:53] technoweenie: Windows offers a text-mode translation flag ('t') which will transparently translate \n to \r\n when working with the file. In contrast, you can also use 'b' to force binary mode, which will not translate your data. To use these flags, specify either 'b' or 't' as the last character of the mode parameter. 
[01:53] technoweenie: http://www.php.net/manual/en/function.fopen.php
[01:53] isaacs: weird
[01:53] isaacs: why would you want to convert \n to \r\n?
[01:53] technoweenie: no idea
[01:54] isaacs: oh, right windows likes using 2 bytes for line breaks.
[01:55] isaacs: i <3 those three notes.
[01:55] cloudhead: Anyone managed to fork a node process?
[01:55] isaacs: note 1: long explanation of the issue.  note 2: do it this way.  note 3: srsly, guy, do it this way
[01:56] satori_: cloudhead: You mean like this? http://slashed.posterous.com/writing-daemons-in-javascript-with-nodejs-0
[01:57] cloudhead: satori_: it doesn't seem to work anymore
[01:57] jamescarr: I say just ignore windows... no reason to run  a server on that crap anyway ;)
[01:57] cloudhead: in node 0.100
[01:57] satori_: I haven't used it for ages either
[01:57] jamescarr: everyplace I worked at that maintained their sites on IIS always faced problems
[01:58] technoweenie: isaacs: there's probably a few comments about it too
[01:58] cloudhead: satori_: the call to fork() throws a libev error
[01:58] jamescarr: my favorite was the place with admins that couldn't get the anti-virus scanner to scan at a reasonable time...
[01:58] jamescarr: causing their cpu usage to spike to 99% during their busiest timeframe
[01:58] satori_: libev is way over my head
[01:58] cloudhead: yea
[01:59] cloudhead: satori_: the error I'm getting is 'bad file descriptor'
[01:59] cloudhead: so I'm guessing it's an issue with the child's descriptors being different from the parents
[01:59] satori_: anything to do with the descriptors for stdin/out
[01:59] satori_: ?
[01:59] cloudhead: satori_: yea
[02:00] cloudhead: I'm pretty sure it has to do with that
[02:00] satori_: daemon.node closes them somehow?
[02:00] satori_: Have you tried playing with the daemon.node code? it's pretty simple.
[02:00] cloudhead: yea I have
[02:00] cloudhead: I tried everything
[02:00] satori_: :P
[02:00] cloudhead: closing the file descriptors causes other problems
[02:01] satori_: I know the feeling. I am not a posix/unix guru so I sometimes can't tell if it's my crap code or my crap understanding of unix 
[02:01] satori_: that causes my problems
[02:03] bpot has joined the channel
[02:03] riottaba_ has joined the channel
[02:04] riottaba__ has joined the channel
[02:04] cloudhead: satori_: hehe yea
[02:06] dylang has joined the channel
[02:06] isaacs: cloudhead: any particular reason why you can't use the os/bash for daemonizing?
[02:06] isaacs: cloudhead: node my-program.js & disown
[02:08] Blink7 has joined the channel
[02:08] isaacs: cloudhead: or even something like this: http://github.com/isaacs/dotfiles/blob/master/.extra.bashrc#L85-101
[02:08] isaacs: cloudhead: that's what i use to map my local port 5984 to the npm registry's 5984 so i can manage stuff with futon
[02:10] riottaba has joined the channel
[02:13] cloudhead: isaacs: interesting, I didn't know about disown
[02:13] isaacs: disown is superwin
[02:13] saikat: hm, does anyone see something obviously wrong here?  My assertion in an expresso test is failing on a deepEqual for two objects that seem identical (and in fact, if i do assert.equal(JSON.stringify(obj1), JSON.stringify(obj2)) I don't get an assertion error) - http://gist.github.com/502856
[02:13] isaacs: process management is what bash was designed to do.  it's all it's good it
[02:13] saikat: the top is the part from my tests
[02:14] saikat: and the most confusing part is if i copy and paste those exact objects in a node repl
[02:14] saikat: i can't reproduce the deep equal failure
[02:16] isaacs: saikat: does one have some kind of extra property or something?
[02:16] saikat: isaacs: hmmm would JSON.stringify not print that property?
[02:16] saikat: good idea though, let me check
[02:16] isaacs: saikat: nope.  not if it was an array
[02:16] saikat: ahh ok
[02:17] isaacs: saikat: try it out:  x=[{"action":"edit","path":["bar","objects",{"id":10},"children"]}]; x.foo="bar"; require("assert").deepEqual(x, [{"action":"edit","path":["bar","objects",{"id":10},"children"]}])
[02:17] ivan has joined the channel
[02:18] mikeal has joined the channel
[02:19] saikat: isaacs: good catch - i didn't know that. i'll try to see if that's it
[02:19] saikat: thanks a lot
[02:19] isaacs: saikat: np
[02:20] saikat: isaacs: do you know if it's possible to get the pretty-printed objects that print in the node repl from my node script?
[02:20] saikat: those seem to show extra properties
[02:20] isaacs: saikat: require("sys").inspect
[02:20] saikat: cool, thanks
[02:23] saikat: ah it was actually
[02:24] saikat: an undefined property inside one of the objects, not in the array
[02:24] saikat: but the property itself didn't exist in the other object
[02:24] saikat: something else i didn't know JSON.stringify doesn't catch
[02:24] saikat: er, doesn't output*
[02:26] creationix: does the GC run during tight blocking code?
[02:26] creationix: I'm assuming not
[02:34] steadicat has joined the channel
[02:36] _announcer: Twitter: "Serious day of #nodejs: @nycjs Hackshop in DUMBO; Updates to #Apricot and #node-http-proxy. @nodejitsu private beta coming soon..." -- Charlie Robbins. http://twitter.com/indexzero/status/20035746969
[02:39] strixv has joined the channel
[02:39] strixv: Anybody have experience with connect.gzip() garbling large-ish files?
[02:39] maushu: garbling?
[02:41] mikeal has joined the channel
[02:43] lelosh has joined the channel
[02:43] strixv: Yeah, like
[02:43] strixv: instead of obj.propert="stuff"
[02:44] aurynn has joined the channel
[02:44] strixv: it's like obj.MzkdkjMMMzaaa))));;):
[02:44] lelosh has left the channel
[02:44] strixv: It's a 350k file, and it only starts garbling around halfway to 3/4 through
[02:45] jwcooper has joined the channel
[02:45] aniero has joined the channel
[02:48] lelosh has joined the channel
[02:50] tilgovi has joined the channel
[02:50] lelosh has left the channel
[02:54] strixv: Nothing? Hm, well does anybody know how I could use an alternative gzip system? I'm using connect.gzip, but in the API there are 3 versions of gzip... I'm just not sure how to make it call a different one
[02:55] rauchg_: strixv: what kind of `alternative gzip system` do you want to use ?
[02:55] rauchg_: a javascript one ?
[02:55] rauchg_: i wrote one, awfully slow 
[02:55] strixv: rauchg, no I should clarify - in the connect library docs, there are 3 mentioned
[02:56] rauchg_: oh, they're in order of priority 
[02:56] technoweenie: child.spawn 
[02:56] rauchg_: you should have the first 
[02:56] strixv: but the first 2 link to the same docs page, and the last one doesn't have a page (404)
[02:56] strixv: rauch ok, how can I get another one? (since the first is destroying my stuff)
[02:57] rauchg_: what do you mean destroying your stuff
[02:58] strixv: http://i.imgur.com/HoI9w.png
[02:58] strixv: It only does that when I move the source over to the staging server. On my laptop, it works just fine
[02:58] strixv: http://i.imgur.com/QWGPD.png <-- exact same code on laptop
[03:01] robotarmy has joined the channel
[03:10] _announcer: Twitter: "Yei... im parsing Http Post on Node.js, have it conected to Faye pubsub hub and CouchDb... its starts to feel like WAMP... lol..." -- Loki Zavala. http://twitter.com/Siedrix/status/20037841475
[03:21] creationix_ has joined the channel
[03:21] hdon has joined the channel
[03:31] _announcer: Twitter: "@izs I'm can't wait until @banksimple launches. Although now @al3x is slagging off Node.js maybe I won't ;)" -- Tom. http://twitter.com/sh1mmer/status/20039159444
[03:35] JimBastard has joined the channel
[03:37] programble has joined the channel
[03:39] _announcer: Twitter: "Node.js and MongoDB http://j.mp/c6qZJR" -- tzangms / 小海. http://twitter.com/tzangms/status/20039599952
[03:39] matt_c has joined the channel
[03:43] Tobsn has joined the channel
[03:43] Tobsn: hu
[03:44] JimBastard: huhu
[03:44] danielzilla has joined the channel
[03:44] Tobsn: anyone the nerves to quickly help me with a module im writing?
[03:44] JimBastard: sure why not
[03:45] JimBastard: gist?
[03:45] Tobsn: well, i know i asked before but now im actually doing it and it confuses me a bit
[03:45] Tobsn: too much stuff for gist but i can break it down as example
[03:45] JimBastard: break it down
[03:46] jakehow has joined the channel
[03:46] Tobsn: i want to initiate the thing like an object var x = foo( 123, 'abc' ); (sorta like a db connector) and than feed it data to that copy of the copy x.add( 'something' ); - now how do i structure the object correctly? right now i have var myObject = function( a, b ) { var method = function() { do something; } } - but i think that is wrong
[03:47] Tobsn: *copy of the object
[03:47] technoweenie: myObject.prototype.method = unction() { do something; }
[03:47] Tobsn: i also do exports.myObject = myObject; - when i require it and try to do the var x = new blah(123); nodejs tells me object is not a function
[03:48] technoweenie: dont define your functions inside the constructor
[03:48] technoweenie: module.exports = myObject
[03:48] technoweenie: Tobsn: http://github.com/frank06/riak-js/blob/master/lib/mapper.js
[03:48] Tobsn: yeah thats basicllay what i didnt get correctly because im so into the php scheme... class bla { __constructor() {} or function bla(){} }
[03:49] Tobsn: and thats the right way to do it?
[03:49] technoweenie: thats my preferred way.   js doesnt really have classes
[03:49] technoweenie: that function Mapper(phases, riak) { is the 'constructor'
[03:49] Tobsn: i wasnt sure because i think jim said prototype is bad (i worked with prototype before but i of course dont know if there are any downsides related to nodejs)
[03:50] Tobsn: client side i wouldnt give a fuck but in nodejs i dont know the "right way" yet
[03:50] technoweenie: you're confusing prototype the clientside js framework vs prototype the style of oo programming
[03:50] Tobsn: probably
[03:50] Tobsn: oooh no no
[03:50] technoweenie: when people say javascript is prototype based, they dont mean it uses the prototype framework
[03:50] Tobsn: i know what prototype is
[03:50] Tobsn: and what prototype.js is ;)
[03:50] technoweenie: it doesnt relate to node.js at all then
[03:51] technoweenie: prototype.js
[03:51] Tobsn: i know
[03:51] Tobsn: i meant i worked with prototype (OO)
[03:51] technoweenie: oh, then i'm confused
[03:51] Tobsn: im just not sure if its the best way to do it that way with nodejs
[03:51] technoweenie: ok hold on
[03:54] sh1mmer: oh damn
[03:54] technoweenie: https://gist.github.com/0017418b32da78bba541
[03:54] sh1mmer: I messed up the test yesterday
[03:54] technoweenie: any of those work... there's also some JS.Class thing.  i think Socket.IO uses it
[03:54] sh1mmer: dnsservers.js is only doing 3k qps not 15k
[03:54] technoweenie: i prefer to keep it as close to js as possible but ymmv
[03:54] sh1mmer: I should install bind to compare
[03:55] Tobsn: sh1mmer, you really think its faster than bind?
[03:55] sh1mmer: Tobsn: I was hoping it might be comparable
[03:55] saikat has joined the channel
[03:56] Tobsn: technoweenie, with MyObj = {...} there is basically no contructor right? right way to do is than var x = new MyObj; and than initiate it with a function or so... i think thats how you get some sort of constructor in there
[03:56] technoweenie: Tobsn: yea, thats why i prefer option 1
[03:56] Tobsn: hmm i think i like the functions inside the object
[03:56] technoweenie: also, coffeescript uses option 1
[03:56] Tobsn: whats the downside on the redefined functions?
[03:56] Tobsn: sh1mmer, you tried similar daemons? because bind is not the "best"
[03:57] aniero: technoweenie: hey, just started looking at your chain gang lib. kick-started something i'm working on
[03:57] aniero: technoweenie: so, thanks
[03:57] technoweenie: just strikes me as odd.  very slight memory/speed issues since each instance would have its own method instances
[03:57] technoweenie: but thats probably not a big deal :)
[03:57] technoweenie: aniero: rad
[03:57] Tobsn: i see
[03:57] Tobsn: so just a bit more to stuff into the workspace :P
[03:58] sh1mmer: Tobsn: I wouldn't be surprised
[03:59] Tobsn: function obj(a) {this.a = a;} obj.prototype.method = function() { console.log(this.a); } --- var x = new obj( 'Test' ); obj.method(); would that output "Test" or do i have to pass the reference down somehow?
[03:59] Tobsn: sh1mmer, its actually just the oldest most common one - like apache ;)
[03:59] sh1mmer: Tobsn: I know
[03:59] sh1mmer: I was using bind like 10 years ago
[03:59] Tobsn: yeah its super old
[03:59] technoweenie: Tobsn: that would print 'Test' if you used sys.puts :)
[04:00] Tobsn: lemme see... someone told me hes using a difference daemon now... they're serving live dns queries for some tv station sites etc. - just need a list of daemons to remember the name
[04:00] Tobsn: technoweenie, perfect ;)
[04:00] aniero: what's the deal with HEAD responses being wonky? looks like node, talking to node running express, totally barfs if I do a HEAD request. the response, that is, throws a parse error on whatever it gets back
[04:01] technoweenie: weird, i fixed a head bug once
[04:01] aniero: there's a comment in http.js in node,       // Responses to HEAD requests are AWFUL. Ask Ryan.
[04:01] technoweenie: http://github.com/ry/node/issues/closed#issue/162
[04:01] _announcer: Twitter: "@timheuer on the plus side I can now use silverlight to communicate with node.js over HTML 5 websockets." -- Howard van Rooijen. http://twitter.com/HowardvRooijen/status/20041004593
[04:01] aniero: also setting NODE_DEBUG=4 doesn't seem to enable HTTP debugging
[04:01] creationix has joined the channel
[04:02] Tobsn: hmm cant find it sh1mmer
[04:02] technoweenie: are you setting a content length
[04:02] sh1mmer: Tobsn: find what?
[04:02] aniero: technoweenie: oh, that looks pretty much like the error i'm seeing. and no, not unless express is doing it for me
[04:02] Tobsn: the daemon he told me about
[04:02] aniero: there's probably some express middleware to set content-length
[04:02] Tobsn: and i cant remember the name
[04:03] technoweenie: aniero: technically, a HEAD should load up the same body as a GET and send the length
[04:03] technoweenie: i think node assumes you're streaming everything
[04:03] Tobsn: technoweenie, you sure?
[04:03] technoweenie: well, it should return the same header data as the get
[04:03] Tobsn: wasnt it only the last modified time ?
[04:04] aniero: technoweenie: while it's a problem, it's a bit of a yak. have other things to get working...
[04:04] technoweenie: no it should send content length and content type too
[04:04] Tobsn: ah youre right
[04:04] Tobsn: The HEAD method is identical to GET except that the server MUST NOT return a message-body in the response.
[04:04] technoweenie: aniero: actually my problem was in the client PARSING the request
[04:05] Tobsn: what was the problem?
[04:06] Tobsn: oh and another question i didnt got a real answer the other day... all those libs (mongodb, memcache) do they share the resource ID or is there a new connection everytime a new request comes in and do they auto reconnect if the connection dies...
[04:06] technoweenie: i dont recall, that issue i pasted in had the gory details
[04:06] Tobsn: ;)
[04:07] Tobsn: maybe a bit to general the question
[04:07] technoweenie: Tobsn: depends on the lib probably
[04:07] Tobsn: yeah i guess
[04:08] aniero: technoweenie: right, same here. it so happens that (for the moment) i'm having node issue requests against itself :p
[04:08] aniero: technoweenie: so it's blowing up on the response parse
[04:09] technoweenie: damn that sucks
[04:09] _announcer: Twitter: "shares the creator of the Node.js http://tinyurl.com/27utc7j http://plurk.com/p/6o8356" -- honestyhuang. http://twitter.com/honestyhuang/status/20041485591
[04:09] technoweenie: i'm curious why ryan thinks head requests suck
[04:09] technoweenie: maybe because in cases where you're streaming, you do have to read it and discard the body
[04:10] Tobsn: cause you need to run the same stuff as with a normal request but dont return anything besides the header - really ineffective ;)
[04:10] Tobsn: i guess on streams or stream content you can just set the content length to 0 since you dont know it anyway
[04:11] jamescarr: technoweenie, if you hear the answer on why he thinks they suck, let me know :)
[04:11] jamescarr: I'm curious too
[04:12] JimBastard: hey technoweenie, if i rename repo do watchers still disappear?
[04:12] technoweenie: still?
[04:12] JimBastard: or is that like a quantum physics question 
[04:12] technoweenie: did renames ever kill watchers?  it shouldnt
[04:12] JimBastard: cool 
[04:12] Tobsn: hehe im right
[04:12] JimBastard: im paranoid sorry
[04:13] Tobsn: there is a post about it from google about google
[04:13] Tobsn: HTTP/1.1 200 OK
[04:13] Tobsn: Content-Type: application/octet-stream
[04:13] unomi has joined the channel
[04:13] Tobsn: Date: Wed, 03 Feb 2010 23:29:14 GMT
[04:13] Tobsn: Server: Google Frontend
[04:13] Tobsn: Content-Length: 0
[04:13] Tobsn: they return 0 if its a stream
[04:13] Tobsn: well "stream"
[04:13] jamescarr: ah, attachment-fu
[04:13] jamescarr: that's what I used that was by you
[04:13] jamescarr: recognized the nick, couldn't remember where I'd seen it ;)
[04:14] technoweenie: JimBastard: oh yea? well i was testing some shit for a caching change... so i made restful auth private for a sec 
[04:14] technoweenie: didnt realize it'd kill my watchers.  i was able to cancel it but i still lost like 800 of them.  went way down on the top 20 list
[04:14] JimBastard: i like javascript
[04:15] JimBastard: ooofa!
[04:15] technoweenie: it was like #2 for so long
[04:15] technoweenie: but now its like 15 haha
[04:15] JimBastard: you had the biggest technoweenie of them all
[04:15] JimBastard: im trying to get 300 projects
[04:15] jchris has joined the channel
[04:15] JimBastard: thats my goal
[04:17] creationix: gogo SSD drive 190mb/sec
[04:17] creationix: from noce
[04:17] creationix: *node
[04:17] Tobsn: oh you can now watch netflix in safari
[04:17] Tobsn: just need to install silverlight  ...
[04:18] Tobsn: if i install silverlight on my imac i guess some blackhole opens up in my cd rom...
[04:19] gbot2 has joined the channel
[04:21] technoweenie: man has anyone ever written a connection pool
[04:22] Tobsn: in php
[04:22] tilgovi has joined the channel
[04:22] JimBastard: http://en.wikipedia.org/wiki/Dining_philosophers_problem
[04:23] JimBastard: hrmmm thats not right
[04:23] JimBastard: fail town
[04:23] mscdex: ?
[04:23] JimBastard: redbull time
[04:23] mscdex: node.js rules!
[04:23] mscdex: just sayin'
[04:23] jamescarr: yes it does
[04:24] jamescarr: and you know what else rules? :)
[04:24] jamescarr: My sessions at the Rich Web Experience on it got accepted ;)
[04:24] Tobsn: lol
[04:24] Tobsn: nobody knows if that will rule
[04:24] Tobsn: yet :P
[04:24] jamescarr: true :)
[04:25] jamescarr: now I got to put together the half day workshop
[04:25] Tobsn: oh i remember where i wrote that technoweenie, for a scraper
[04:25] Tobsn: together with elias
[04:26] Tobsn: well more for a http class that simulates a browser
[04:26] Tobsn: i cant remember the name - its still online somewhere
[04:27] _announcer: Twitter: "@TechWraith hey! We want to hire you! :-) We need someone in SF to hack with us some #nodejs awesomeness. Do you think you can move?" -- Xavier Damman. http://twitter.com/xdamman/status/20042575231
[04:27] jamescarr: for scrapers I always used HtmlUnit or HtmlUnitDriver that is part of the WebDriver framework
[04:27] jamescarr: HtmlUnit really rocks for it's full javascript support
[04:29] Tobsn: aaah
[04:29] Tobsn: multicurl
[04:30] Viriix: node.js noob, can some one point me towards some good doc on net.Stream? nodejs.org is confusing
[04:35] Tobsn: technoweenie, thats the version i could find before we split it up into loadable modules and put it on git (fuckin somewhere... its 3 years old...) - http://jailba.it/class.multicurl.v3.txt
[04:36] jakehow has joined the channel
[04:40] JimBastard has joined the channel
[04:41] mscdex: Viriix: nodejs.org/api.html is the best place really. what were you looking for?
[04:41] JimBastard: jamescarr: ping
[04:41] jamescarr: back
[04:41] Viriix: mscdex, i'm just a little confused on how exactly a net.Stream instance is created
[04:42] Viriix: from there i'm sure i can figure out how to assign the event listeners
[04:42] mscdex: net.createConnection
[04:42] Viriix: and does the instance get assigned to a variable?
[04:42] Viriix: thats my question really
[04:42] mscdex: yes
[04:43] mscdex: var conn = net.createConnection(8000);
[04:43] mscdex: for example
[04:43] Viriix: ok, thats what i was confused about
[04:43] Viriix: then i just add the listeners to conn
[04:43] Viriix: cool
[04:43] Viriix: thanks man
[04:43] mscdex: then stuff like: conn.on('connect', function() { });
[04:43] mscdex: :->
[04:47] JimBastard: hey whats the name of an online merchant that will work internationally? 
[04:47] JimBastard: authorize.net is a no go right?
[04:48] mscdex: an online merchant?
[04:49] JimBastard: like a payment gateway
[04:50] mscdex: i dunno offhand. there was discussion about this with felixge and a couple others awhile ago
[04:51] kriszyp has joined the channel
[04:51] danielzilla: JimBastard: You thinking of BrainTree?
[04:52] danielzilla: http://www.braintreepaymentsolutions.com/services/global-payments
[04:52] Tobsn: JimBastard, paypal and moneybookers :P
[04:53] mscdex: i read that as "moneyhookers" at first
[04:54] Tobsn: ;)
[04:54] royi has joined the channel
[04:54] Tobsn: i like moneybookers a lot - same exact thing as paypal just supports more countries a higher payout amount and more bank accounts and creditcards in any country get faster appproved
[04:54] Tobsn: also their fee is way less...
[04:55] Tobsn: and they're not such big dickheads if you have a support question
[04:57] royi has left the channel
[04:57] Tobsn: JimBastard, i think you mean worldpay maybe?
[04:57] Tobsn: besides that auth.net is the biggest i think
[04:57] amerine has joined the channel
[05:05] jamescarr: i totally suck at regex :(
[05:06] jamescarr: call me stupid
[05:06] jamescarr: sheesh
[05:06] eisd: jamescarr: What do you need?
[05:06] jamescarr: I was trying to craft clever regex for something simple split could do ;)
[05:06] jsilver has joined the channel
[05:08] stepheneb has joined the channel
[05:12] Viriix: TypeError: Object #<a Stream> has no method 'on'
[05:12] Viriix: >_<
[05:15] jamescarr: hmmm
[05:15] jamescarr: I wish V8 had the capability to Destructuring assignments
[05:16] jamescarr: so I could do something like var [a,b] = [b,a]
[05:21] mscdex: Viriix: ?
[05:21] mscdex: Viriix: what version of node are you running?
[05:22] Viriix: 0.1.100
[05:22] mscdex: you need a newer version for .on
[05:23] mscdex: at least 0.1.101
[05:24] mscdex: otherwise you have to use .addListener
[05:24] jamescarr: I have too many integration tests :S
[05:25] jwcooper: anyone having issues with the latest version of npm?  In particular, require('express') no longer works, but it used to prior to 0.1.22 
[05:28] creationix_ has joined the channel
[05:34] mtodd has joined the channel
[05:44] bmizerany has joined the channel
[05:45] qFox has joined the channel
[05:45] eisd has left the channel
[05:49] rednul has joined the channel
[06:01] rtomayko has joined the channel
[06:03] hdon has joined the channel
[06:07] saikat has joined the channel
[06:08] _announcer: Twitter: "node.js/V8 needs a __noSuchMethod__ or some method_missing equivalent. Just sayin'." -- Christopher Burnett. http://twitter.com/twoism/status/20048254798
[06:08] aurynn: .agree
[06:08] SubStack: likewise
[06:09] aurynn: method_missing would be really nice to have
[06:10] SubStack: well for javascript's case the ability to hook into hash lookups is all that would take
[06:15] dnolen has joined the channel
[06:22] bradleyprice has joined the channel
[06:28] jamescarr: doesnt methodMissing exist?
[06:34] tmpvar has joined the channel
[06:41] mscdex: not that i'm aware of
[06:44] strixv has joined the channel
[06:45] mikeal has joined the channel
[06:50] V1 has joined the channel
[06:55] hassox has joined the channel
[06:57] Tobsn: how do i make a function chainable?
[06:57] Tobsn: var x = new foo(); x.add(1).add(2).add(3);
[06:58] creationix_: Tobsn: just return the object every time
[06:59] Tobsn: aaaah
[06:59] Tobsn: of course
[06:59] Tobsn: return this
[06:59] creationix_: yep
[06:59] Tobsn: thx ;)
[07:00] Tobsn: almost done with flexihash
[07:00] Tobsn: (i think)
[07:00] Tobsn: haha
[07:01] Tobsn: i dont get it
[07:01] Tobsn: i always get this:
[07:01] Tobsn: var flexi = new flexihash();
[07:01] Tobsn:             ^
[07:01] Tobsn: TypeError: object is not a function
[07:01] elliottcable: awesome evil, or awesome evil?
[07:01] elliottcable:     defineGetter(Array.prototype, "-1",    function(){ return this[this.length - 1] })
[07:01] elliottcable:     defineGetter(Array.prototype, "-2",    function(){ return this[this.length - 2] })
[07:01] elliottcable: foo[-2] gets coerced into foo["-2"] which triggers the getter…
[07:01] elliottcable: I can’t blanket-define it for every number, but I can sure define it for the two I want to use 99.999% of the time :D
[07:02] elliottcable: defineGetter is just `if (!propertyAlreadyExists) Object.defineProperty(prototype, property, { get:getter, enumerable:false })` btw
[07:04] Tobsn: ha
[07:05] Tobsn: exports.flexihash = flexihash; doesnt work but module.exports = flexihash; works...
[07:05] Tobsn: do i have to understand that?
[07:06] ewdafa has joined the channel
[07:07] Tobsn: there is no crc32 in crypto?!
[07:10] keeto has joined the channel
[07:13] V1: nop
[07:13] V1: openssl doesn't support crc32
[07:14] mscdex: http://phpjs.org/functions/crc32:377
[07:14] mscdex: er
[07:14] mscdex: http://phpjs.org/functions/crc32
[07:15] Tobsn: yeah just found that one out ;)
[07:15] Tobsn: erm...
[07:15] jamescarr: egads
[07:16] Tobsn: this._hasher = ( hasher != null ) ? hasher : (function(data) { crypto.createHash('sha').update(data).digest('hex') });
[07:16] Tobsn: well that doesnt work ha?
[07:16] jamescarr: looks like my payment-authorizenet-aim module can reuse code from payment-paypal-payflow
[07:17] Tobsn: anyone objections against that line or is that doable?
[07:20] sh1mmer: debugging with eclipse is so sick
[07:20] sh1mmer: I don't want to like Eclipse but it's not to be able to trace everything
[07:20] Tobsn: sh1mmer, you know if that line would work?
[07:20] Tobsn: would/should
[07:21] sh1mmer: Tobsn: which line?
[07:21] sh1mmer: the one above?
[07:21] Tobsn: this._hasher = ( hasher != null ) ? hasher : (function(data) { crypto.createHash('sha').update(data).digest('hex') });
[07:21] Tobsn: yep
[07:21] V1: your
[07:21] V1:  forgot a return statement
[07:21] Tobsn: oh
[07:21] sh1mmer: yeah
[07:21] Tobsn: well that did it
[07:21] Tobsn: hahaha
[07:22] Tobsn: dang
[07:22] Tobsn: thanks ;)
[07:22] V1: =p
[07:22] sh1mmer: I've done that a few times :)
[07:22] sh1mmer: lint actually catches that
[07:22] sh1mmer: 'anonymous function does not return'
[07:22] Tobsn: i thought that isnt working at all because i always got "undefined" back
[07:22] Tobsn: lint does?
[07:22] Tobsn: nice
[07:22] sh1mmer: Well I'm not sure if it's actually lint
[07:23] sh1mmer: but whatever is in the javascript tools plugin for textmate
[07:24] b_erb has joined the channel
[07:26] hassox has joined the channel
[07:27] Tobsn: sh1mmer, how can i dump an array?
[07:27] Tobsn: kinda like var_dump/print_r or console.log() in firebug
[07:28] V1: console.dir
[07:28] Tobsn: thanks
[07:28] sh1mmer: Tobsn: you want sys.inspect
[07:28] V1: or console.log( JSON.stringify( array ) )
[07:28] sh1mmer: no, no, no
[07:28] sh1mmer: sys.inspect is made for that
[07:28] V1: conole.dir is a wrapper for sys.inspect if i remember correctly
[07:29] Tobsn: console.dir works pretty well
[07:29] DraX_ has joined the channel
[07:29] jamescarr: so, who can give me some late night feedback?
[07:29] Tobsn: jamescarr, im debugging right now anyway...
[07:29] sh1mmer: V1: console.dir is not in the docs
[07:29] sh1mmer: jamescarr: smoke less, make love more
[07:29] jamescarr: I have started 2 new payment modules and noticed that they can reuse stuff from my paypal one.. should I combine them all into just one module where you choose the api from...
[07:29] Tobsn: [Circular] <- what does that mean?
[07:29] jamescarr: or just have separate npm packages
[07:30] jamescarr: whcih depend on a common npm package?
[07:30] jamescarr: Tobsn, circular reference
[07:30] V1: sh1mmer: http://github.com/ry/node/blob/master/src/node.js#L208-232
[07:31] DraX_: yay, i got my imap implementation far enough to write INBOX biff in it
[07:31] Tobsn: jamescarr, yep one module
[07:31] Tobsn: make it loadable or so
[07:31] Tobsn: jamescarr, what does it mean (circ. ref.)?
[07:32] jamescarr: Tobsn, so I have been thinking... http://github.com/Shopify/active_merchant is pretty much what I am making
[07:32] jamescarr: but for the node world
[07:32] jamescarr: hmmmm
[07:32] sh1mmer: V1: sick.
[07:32] sh1mmer: ACTION will use that more
[07:32] DraX_: http://14914685b5349c08.paste.se/ 
[07:32] Tobsn: uh thats pretty cool
[07:32] jamescarr: I think I will rename my library as paynose
[07:32] V1: Save you from including the sys module each time you wish to debug something ;)
[07:32] jamescarr: er
[07:32] jamescarr: paynode
[07:32] Tobsn: just take all their api stuff and convert it into one loadable module thing
[07:33] Tobsn: yep do it
[07:33] Tobsn: sounds good
[07:33] Tobsn: http://github.com/Shopify/active_merchant/tree/master/lib/active_merchant/billing/gateways/
[07:33] Tobsn: good luck... ;)
[07:34] Tobsn: you better get payed for doing that ;)
[07:34] rauchg_ has joined the channel
[07:34] saikat has joined the channel
[07:34] pdelgallego has joined the channel
[07:39] DraX_: need to write code to handle queueing commands that may result in ambigious results if run in parallel though :(
[07:39] DraX_: imap is so evil
[07:40] sh1mmer: has anyone else played with datagram
[07:40] sh1mmer: ?
[07:49] tekky has joined the channel
[07:52] Tobsn: sh1mmer, nope
[07:53] V1: nop
[07:53] jamescarr: gah, writers block
[07:53] Tobsn: well this is interesting... i fill an array in one prototyped function and its not there in the other
[07:56] kjeldahl has joined the channel
[07:56] kjeldahl_ has joined the channel
[07:56] creationix_: mape: ping
[08:02] SubStack: I am tempted to use event emitters to pass up some callbacks
[08:03] V1: Pff, the hardest part about writing modules is... writing documentation... It's so boring.
[08:03] creationix: http://creationix.com:3000/
[08:03] SubStack: V1: examples > documentation
[08:03] V1: Already got those SubStack :p
[08:04] V1: But some kind of documentation would always be good. You can't expect everybody to learn from examples
[08:04] SubStack: sometimes I think that I'm just a little too comfortable with continuations
[08:05] SubStack: it just /feels/ so good
[08:08] Tobsn: why would a arr.length return 0 if the array is full with elements?
[08:08] V1: got example code?
[08:08] Tobsn:         console.log( 'positionToTarget: ' + this._positionToTarget.length );
[08:08] Tobsn:         console.dir( this._positionToTarget );
[08:08] Tobsn: first is 0 and the dir() returns like 80 items
[08:09] Tobsn: positionToTarget: 0
[08:09] Tobsn: [ b8f6f2fac265a4f6073d65280783850575f22661: 'server1'
[08:09] Tobsn: , dcd63d2fde1442c400115a5599e33dbc86aa34f5: 'server1'
[08:09] Tobsn: , d08613a99d16b8b95ba9c09278a2bb08915e941a: 'server1'
[08:09] Tobsn: etc.
[08:09] V1: And you didn't modify any prototypes?
[08:09] SubStack: is it really an array?
[08:10] Tobsn: well the console.log and the dir are like i pasted them
[08:10] Tobsn: right after each other
[08:10] Tobsn: this._positionToTarget = Array();
[08:10] Tobsn: in the constructor
[08:10] femto has joined the channel
[08:10] Tobsn: this._positionToTarget[position] = target; // lookup
[08:10] SubStack: s/Array()/[]/
[08:10] Tobsn: position is a return hex value from crypto
[08:10] Tobsn: and target is a string
[08:10] V1: oh it's a named array?
[08:10] Tobsn: means position should be a string too
[08:10] Tobsn: assoc
[08:10] Tobsn: yep
[08:11] Tobsn: i guess
[08:11] V1: .length doesn't work on them
[08:11] V1: and you should use an object for that instaead
[08:11] Tobsn: erm
[08:11] Tobsn: well its a code i converted so i kept it as original as possible
[08:11] SubStack: then you can get the link with Object.keys(hash).length
[08:11] Tobsn: what would keys() return?
[08:12] Tobsn: an array with all the keys?
[08:12] SubStack: yes
[08:12] Tobsn: hmm
[08:12] Tobsn: is there a values() too?
[08:13] SubStack: I haven't found one
[08:13] V1: just loop over it
[08:13] Tobsn: yeah thats what im doing right now
[08:13] SubStack: bah llops
[08:13] SubStack: s/ll/lo/
[08:13] V1: Object.keys().forEach( function( key ){ console.log( array[key] ) }) something like that
[08:14] Tobsn: hmm
[08:14] Tobsn: SubStack whats the "hash" in for in keys?
[08:14] SubStack: the object with the keys in it
[08:15] Tobsn: hmm
[08:15] Tobsn: Object.keys(this._positionToTarget) ?!
[08:16] V1: yup
[08:16] Tobsn: Object.keys().forEach( function( key ){ console.log( array[key] ) }) <- but that doesnt make sense then
[08:16] Tobsn: on what does it execute the foreach on
[08:16] Tobsn: ?
[08:16] V1: the returned array of keys
[08:17] Tobsn: from what?
[08:17] SubStack: Object.keys(this._positionToTarget).forEach(...)
[08:17] Tobsn: there ya go
[08:17] V1: Object.keys(this._positionToTarget)).forEach( function( key ){ console.log( array[key] ) }
[08:17] Tobsn: okay - now all is in order again ;)
[08:17] V1: somehting like that ;p
[08:17] Tobsn: :P
[08:17] Tobsn: yeah right - you just confused the shit out of
[08:17] V1: :%
[08:17] Tobsn: *me
[08:17] Tobsn: ;)
[08:18] Tobsn: is there anything about Object.* ?
[08:18] Tobsn: in the docs or so
[08:18] SubStack: Object.getOwnPropertyNames(Object)
[08:18] SubStack: Object.getOwnPropertyNames(Object.prototype)
[08:18] SubStack: these
[08:18] Tobsn: ositionToTarget: 128
[08:18] Tobsn: that was easy.
[08:19] Tobsn: thank god push() and all that crap works on objects too :P
[08:19] Tobsn: thx
[08:20] SubStack: not really, you're still using an array
[08:20] SubStack: sort-of, prototypes are strange
[08:22] jamescarr: paynode
[08:27] Tobsn: ha
[08:27] Tobsn: it works
[08:27] Tobsn: im done
[08:27] Tobsn: flexihash.js
[08:27] Tobsn: :)
[08:28] V1: ah consistent hashing
[08:28] Tobsn: yep
[08:29] V1: just like my hashring: http://github.com/3rd-Eden/node-memcached/blob/master/lib/hashring.js
[08:29] V1: p
[08:29] V1: :p*
[08:29] Tobsn: pretty much
[08:29] Tobsn: but more proven
[08:29] Tobsn: :P
[08:30] V1: more proven? Mine is based on libketama :P
[08:30] SubStack: hmmm this paynode business will be useful later on
[08:30] Tobsn: :P
[08:30] Tobsn: "based on" says everything
[08:30] Tobsn: :PPP
[08:30] SubStack: jamescarr: 3 watchers without any code!
[08:30] V1: ;D
[08:32] V1: So that is what why you wanted the crc32 huh for the hashing ;P
[08:34] jamescarr: SubStack, lol
[08:34] jamescarr: SubStack, I guess the heat is on
[08:34] jamescarr: I'm doing some chopping up.. payment-paypal-payflowpro is going to be morphed into paynode ;)
[08:34] jamescarr: I'm reworking it as we speak to make the first cut of an authorize.net implementation
[08:36] SubStack: nifty
[08:37] Tobsn: V1 yep ;)
[08:37] Tobsn: thats the default for flexi
[08:37] Tobsn: but well... sha1 will do too
[08:37] Tobsn: same shit anyway
[08:37] Tobsn: esp for that kind of stuf
[08:37] Tobsn: f
[08:37] Tobsn: well, now i just need to clean it up
[08:37] Tobsn: and put it on github
[08:45] hassox has joined the channel
[08:48] qFox: Announcing #js1k. Write an awesome javascript demo in or under 1k, using NO externals. Good luck! http://js1k.qfox.nl
[08:51] ditesh|cassini has joined the channel
[08:53] jamescarr: heh
[08:53] jamescarr: require('authorizenet/response-parser') <-- shouldnt this work if authorizenet is a dir under lib and I added lib to my require paths?
[08:54] V1: aww we can't include a 100k library for free qFox 
[08:54] qFox: sure, if you can compress it under 1k
[08:54] qFox: well okay. that wouldnt be "free", sure.
[08:58] adrienf: qFox: what do you mean by "Create a fancy pancy Javascript Canvas demo. (Canvas not required)" ?
[08:58] adrienf: especially the "canvas not required" part
[08:59] qFox: a visual demo tends to be more perceived as more attractive. i just want to clarify that you can do awesome stuff without canvas
[08:59] micheil_mbp has joined the channel
[09:00] ditesh has joined the channel
[09:00] adrienf: oh, ok
[09:00] qFox: is it unclear? :)
[09:01] adrienf: a little, maybe you should change it to "Create a fancy pancy Javascript demo. (Canvas suggested)" ?
[09:03] qFox: hmmm, strugling with "suggested"
[09:04] qFox: ok i've removed all canvas notions.
[09:17] zemanel has joined the channel
[09:17] hassox has joined the channel
[09:20] micheil_mbp has joined the channel
[09:27] Dmitry has joined the channel
[09:27] _announcer: Twitter: "Nice performance comparison of async servers like twisted, node.js, and eventlet, + Scale Stack by Eric Day - http://oddments.org/?p=494" -- Orangutan Cloud. http://twitter.com/orangutancloud/status/20051330727
[09:28] DraX_: yat, FETCH works, though it only does parsing if it's a BODY response
[09:31] Tobsn: hmm
[09:31] Tobsn: the phpjs.org crc32 function deosnt work with nodejs
[09:32] Tobsn: nevermind
[09:41] Tobsn: well no it doesnt
[09:41] Tobsn: returns negative numbers
[09:42] TobiasFar has joined the channel
[09:42] ewdafa has joined the channel
[09:42] V1: Tobsn: implement this instead: http://www.webtoolkit.info/javascript-crc32.html
[09:43] Tobsn: well thats exactly what i have
[09:43] Tobsn: thats just the two utf and crc32 functions from phpjs.org mixed together in one
[09:44] V1: oh.
[09:45] unomi has joined the channel
[09:45] Tobsn: actually the utf function is not the same
[09:45] V1: Btw instead of using the utf8 function you can use the Buffer object
[09:45] Tobsn: but i thin kthe one on phpjs is just newer
[09:45] Tobsn: well either way it returns a signed interger
[09:45] Tobsn: instead of a unsigned one
[09:48] Tobsn: well it does not say anything about the interger size
[09:48] Tobsn: how nice
[09:52] keeto has joined the channel
[09:52] Tobsn: fixed it.
[09:54] claudiu__ has joined the channel
[09:55] Tobsn: sweet
[09:55] Tobsn: returns now the exact same thing as the original
[10:04] jetienne has joined the channel
[10:05] Tobsn: well
[10:05] Tobsn: http://github.com/tobsn/flexihash.js
[10:05] Tobsn: done.
[10:09] tyler-bounce has joined the channel
[10:09] tyler-bounce: hipster javascript: http://gist.github.com/503187
[10:10] Tobsn: shouldnt can be a clone of container? ;)
[10:11] Tobsn: class Can extends Container { dimensions: shape:...}
[10:11] Tobsn: :P
[10:11] Tobsn: brb
[10:11] Tobsn: also the console.log is lame - you should animate can or something frame by frame DOS style :P
[10:11] micheil has joined the channel
[10:12] tyler-bounce: Tobsn, this is serverside
[10:12] Tobsn: and?
[10:12] Tobsn: i said DOS
[10:12] Tobsn: that is "server side"
[10:12] Tobsn: ;)
[10:12] tyler-bounce: how do you animate? is there an ncurses lib for node?
[10:12] Tobsn: aka console based
[10:12] Tobsn: lol.
[10:13] Tobsn: what was your frist computer?
[10:13] tyler-bounce: 486 dx2
[10:14] Tobsn: i had a pc schneider, c64, 286, 386, 486, pentium, amd... etc.
[10:14] Tobsn: you probably never saw those old school animations
[10:14] Tobsn: well they basically go frame by frame
[10:14] Tobsn: in basic you just wrote it line by line
[10:14] Tobsn: because you knew how high the screen was
[10:14] Tobsn: how many rows
[10:15] Tobsn: so you could super simple write one "frame" by printing line by line - sleep - and again line by line - sleep... etc.
[10:15] tyler-bounce: 1980 called, they want their nostalgia back
[10:15] Tobsn: ;)
[10:15] Tobsn: well
[10:15] Tobsn: im 28.
[10:16] Tobsn: but i started playing with my dads pc schneider when i was 6
[10:17] Tobsn: and those shit bricks couldnt do much more than simple basic crap
[10:18] Tobsn: http://www.youtube.com/watch?v=Mud7QCTH0tI
[10:18] Tobsn: most amazing game back then.
[10:20] Tobsn: http://www.youtube.com/watch?v=33CCXg8B4aM - thats the first PC game i ever played.
[10:22] Tobsn: and the worst was, my dad let me play it for 5 minutes - turned of the c64 and said "now get it running again"
[10:22] Tobsn: and that is easier said than done.
[10:23] manveru: :)
[10:23] manveru: ACTION had a CPC Schneider as well
[10:23] manveru: those cassettes were slow as hell...
[10:25] Tobsn: yeah
[10:26] Blink7 has joined the channel
[10:27] mtodd has joined the channel
[10:27] manveru: i remember the loading screen of winter games, it built pixel by pixel :)
[10:27] manveru: and after 20 minutes or so it was finally loaded...
[10:29] manveru: my favorite was some jump&run with a squirrel... forgot the name unfortunately
[10:29] manveru: might've been a hamster or something :)
[10:31] Tobsn: remember nebulus?
[10:32] Tobsn: http://www.youtube.com/watch?v=lNfsY4CnJzA
[10:32] Tobsn: oh my i played that one too
[10:32] Tobsn: forever...
[10:32] shreekavi has joined the channel
[10:33] manveru: don't think i played this
[10:33] manveru: we only had like 3 or 4 games
[10:37] olegp has joined the channel
[10:39] Dmitry has joined the channel
[10:41] MattJ has joined the channel
[10:48] jetienne: http://www.youtube.com/watch?v=XxDMhy7W8dg <- i played this. 10points to the one able to explain the color bugs :)
[10:49] captain_morgan has joined the channel
[10:49] Tobsn: hmm
[10:49] Tobsn: know what really sucks?
[10:49] Tobsn: if you got a ticket on a road trip
[10:49] Tobsn: and you lost the ticket
[10:49] Tobsn: and you cant even remember in which state it was
[10:49] Tobsn: hmm.
[10:49] Tobsn: well im gonna find out this coming week... haha.
[10:50] creationix has joined the channel
[10:50] Tobsn: i can just remember that the highway trooper told me i have to mail the check to "Maryland Oakba Court"
[10:50] Tobsn: which makes no sense because i think i was in utah at the time
[10:50] Tobsn: anyway. n8
[10:51] bvleur has joined the channel
[10:53] rsms has joined the channel
[10:58] mape: creationix: pong
[10:59] bvleur: Hi. Has anyone used (connect) spark in combination with coffee-script here maybe?
[10:59] creationix: mape: just wanted to show you something I was working on
[10:59] creationix: it's down at the moment though
[10:59] mape: k
[11:01] mape: putting it online again or was it a once in a liftime deal?
[11:06] creationix: mape: I'll put it back up when I get it working
[11:06] creationix: it will be awesome
[11:09] shockie has joined the channel
[11:16] mape: hehe k
[11:21] d0k has joined the channel
[11:24] jetienne: grumble, my soft runs ok with i add a console.log("bla") BUT freeze if i dont
[11:36] SamuraiJack has joined the channel
[11:38] leepa has joined the channel
[11:38] sechrist has joined the channel
[11:44] liesen has joined the channel
[11:45] unomi has joined the channel
[11:49] caolanm has joined the channel
[11:51] ditesh|titan has joined the channel
[11:56] rednul has joined the channel
[11:59] ditesh has joined the channel
[11:59] _announcer: Twitter: "Got a bad feeling that EyeOS wasted alot of time on this last year. Could have probably done better with HTML5, CSS3, and jQuery & Node.js" -- #Shadow. http://twitter.com/Taggerz/status/20057544035
[12:15] hassox has joined the channel
[12:15] ditesh|titan has joined the channel
[12:24] creationix_ has joined the channel
[12:24] shreekavi has left the channel
[12:27] ben_alman has joined the channel
[12:28] maushu has joined the channel
[12:33] ditesh|titan has joined the channel
[12:38] _announcer: Twitter: "Wow, the #nodejs modules page is growing an alarming rate. Alarming like surprise cupcakes! http://wiki.github.com/ry/node/modules" -- Jeff Waugh. http://twitter.com/jdub/status/20059395133
[12:48] mscdex: has anyone done/started working on something like eyeos that uses node?
[12:48] elliottcable: surprise cupcakes!
[12:48] everton has joined the channel
[12:50] micheil: someone doesn't understand the idea of listing your module/project once
[12:50] micheil: have a look at the middleware section for a start.
[12:51] micheil: almost all of the JSGI middlewares are part of either Jack or Pintura
[12:52] mscdex: middlewareeeee!
[12:52] mscdex: ACTION shakes a fist at middleware
[12:53] micheil: should unmaintained projects be removed?
[12:53] mscdex: what determines unmaintained though?
[12:54] micheil: (ie, the author has stated in the README that the project is unmaintained)
[12:54] mscdex: ah
[12:54] mscdex: maybe not removed, but there should be some indicator on the list page perhaps
[12:55] jetienne: this github calendar of nothing is cruel
[12:55] mscdex: ?
[12:56] micheil: hmm..
[12:56] micheil: I think removed.
[12:57] mscdex: micheil: if they're removed, that may lead to reinventing the wheel when someone looks at the list to see if a certain binding or module has already been started or developed
[12:57] ditesh has joined the channel
[12:57] qschzt has joined the channel
[12:57] micheil: well, in this particular case that I'm looking at, there's plenty of solutions, and it's been deprecated as work is focused on a project by the same author that is a rewrite + more
[12:57] mscdex: and github's search is far from ideal
[12:58] micheil: ref: http://github.com/Guille/node.websocket.js
[12:58] mscdex: i say just deal with that specific case
[12:58] mscdex: and if there's other instances, shoot a message to the author
[12:58] micheil: hmm, okay
[12:59] mscdex: especially since most module authors are the ones who add their modules to the list, they may not want them automatically removed without being contacted first
[12:59] mscdex: that's my 2 cents anyway
[12:59] elliottcable: jetienne 3» it certainly is
[12:59] mscdex: brb
[12:59] everton has left the channel
[12:59] elliottcable: jetienne 3» I managed 14 days once, but I’ve never beat that
[13:00] jetienne: elliottcable: i was all happy about a 8 days... i go in family for my mother birthday... and back to one. unfair :)
[13:00] rednul has joined the channel
[13:01] elliottcable: hah jetienne IKR
[13:01] elliottcable: jetienne 3» most annoyingly, it only pays attention to *pushes*, not *commits*
[13:01] elliottcable: jetienne 3» I often work for days, and then push a bundle of commits at once
[13:01] elliottcable: but all those days don’t count )-:
[13:01] jetienne: elliottcable: we should patch it :)
[13:02] teemow has joined the channel
[13:02] elliottcable: jetienne 3» no kidding
[13:02] elliottcable: but I’m too lazy
[13:03] femto has joined the channel
[13:04] zomgbie has joined the channel
[13:07] _announcer: Twitter: "Experiment with HTML5 API Node.js &amp; WebSockets http://goo.gl/kxQl Really Cool!" [es] -- natos. http://twitter.com/natos/status/20060899685
[13:10] _announcer: Twitter: "Node.js: JavaScript on the Server http://bit.ly/cE131k #design #how-to" -- Jessyka. http://twitter.com/yummymashup/status/20061037295
[13:14] [[zz]] has joined the channel
[13:20] ditesh|titan has joined the channel
[13:21] mscdex: aw man, my ncurses binding be borked
[13:21] mscdex: and nobody has said anything lol
[13:25] mscdex: hrm.. undefined symbol :S
[13:29] tmedema has joined the channel
[13:30] _announcer: Twitter: "Connect Node.JS or write a wrapper for the library. That is hard to use." [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/20062174389
[13:33] jchris has joined the channel
[13:33] jetienne: EADDRNOTAVAIL, Cannot assign requested address <- i got this from http client on error event... does this ring a bell to anyone ?
[13:35] jetienne: EADDRNOTAVAIL (A  nonexistent  interface was requested or the requested address was not local.)
[13:35] _announcer: Twitter: "UDP is also supported from Node.JS, UHP or want to try on P2P" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/20062447852
[13:39] matt_c has joined the channel
[13:39] _announcer: Twitter: "Node.js: JavaScript on the Server http://ping.fm/nqLkO" -- David Dorey. http://twitter.com/DoreyMedia/status/20062645468
[13:41] zemanel: how hard would it be to create an appengine clone to run node apps?
[13:44] ph^ has joined the channel
[13:46] slaskis has joined the channel
[13:47] jetienne: dunno but for sure, it would be popular :)
[13:51] qschzt: zemanel not sure if i would want to run a v8 instance for each
[13:52] qschzt: didn't find a nice way to give scopes for each, so I did a similar thing with Rhino
[13:52] stepheneb has joined the channel
[13:52] qschzt: zemanel, look at http://nodejs.org/api.html#script-97
[13:53] ben_alman has joined the channel
[13:53] qschzt: zemanel, then of course every scope runs in the same thread ;)
[13:53] ph^ has joined the channel
[13:54] qschzt: zemanel, http://blog.heroku.com/archives/2010/4/28/node_js_support_experimental/
[13:54] qschzt: ...
[14:00] qschzt: I would think building a GAE _clone_ in Node would be very hard and pretty pointless :D
[14:02] elliottkember has joined the channel
[14:03] iheartnodejs has joined the channel
[14:03] iheartnodejs: :-D
[14:06] micheil: a mr. elliottkember...
[14:09] elliottkember: hey Micheil
[14:09] micheil: I'm curious what bring's you around here; was that cpu monitor in node by any chance?
[14:11] mscdex: he's here to be the other elliott
[14:11] mscdex: :p
[14:11] elliottkember: no that was a Rails app
[14:11] _announcer: Twitter: "Paying close attention to node.js, lightweight, powerfull, almost totally a-synchronous http://bit.ly/dsd6kK" -- Oghme Comics. http://twitter.com/oghme/status/20064509369
[14:11] mscdex: almost totally?
[14:12] qschzt: not totally is it
[14:12] micheil: elliottkember: ah, okay; just wondering, because if you needed a hand in adding websockets as a transport, I could've offered one
[14:12] mscdex: i dunno, the only sync things that i can think of off the top of my head are the specially named fs functions
[14:12] micheil: yeah, and require()
[14:12] qschzt: mscdex, yeah that's what I'm thinking
[14:12] mscdex: yeah and require
[14:12] micheil: and setuid and setgid
[14:12] micheil: on process
[14:13] Gruni has joined the channel
[14:13] mscdex: but require isn't that big of a deal
[14:13] mscdex: that's during the initial stages
[14:13] mscdex: or at least should be
[14:14] zemanel: qschzt, thx
[14:14] _announcer: Twitter: "Still, this Twitter client (Web-based) decision is needed. Heck why both httpClient Node.JS of Hama POST I do not fly too?" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/20064683104
[14:14] stepheneb has joined the channel
[14:16] mscdex: i'm so tempted to reply to him
[14:16] mscdex: er tweet back
[14:17] mscdex: bradleymeck: _frankie needs translation capabilities :p
[14:17] mscdex: bradleymeck: when tweeting
[14:17] stride: just use !translate before !tweet
[14:18] mscdex: yeah but i don't know if the characters would work if i copied and pasted *shrug*
[14:18] mscdex: plus it'd be easier to do it in one go
[14:18] mscdex: :>
[14:19] mscdex: !translate --help
[14:19] _frankie: --help
[14:19] mscdex: heh
[14:19] mscdex: i forget the syntax :(
[14:19] stride: !translate help
[14:19] _frankie: help
[14:20] mscdex: !translate en:es more corn
[14:20] _frankie: more corn
[14:20] mape: !translate Swedish:English Detta verkar funka som det ska.
[14:20] _frankie: This seems to work properly.
[14:20] mscdex: hrm
[14:20] qschzt: how do I use !tweet then
[14:20] stride: 13:42 < manveru> !translate Japanese:English 日本人の英語はちょっと。。。
[14:20] stride: meh :)
[14:21] mscdex: it shows up as boxes for me ;o
[14:21] mape: not utf-8? or a crappy font?
[14:21] mscdex: i dunno... monospace
[14:21] mscdex: xchat's default
[14:22] qschzt: !translate Finnish:English perkele, eihän se toimi
[14:22] _frankie: damn it, surely it was
[14:23] qschzt: buncha crap
[14:24] mscdex: !translate English:Japanese domo arigato mr. roboto
[14:24] _frankie: どうもありがとうございますミスター。 roboto
[14:24] mscdex: gah, still boxes and i'm using a unicode font
[14:24] mape: !translate Japanese:English どうもありがとうございますミスター
[14:24] _frankie: Thank you Mr.
[14:24] mape: heh
[14:25] mscdex: !translate Japanese:English どうもありがとうございますミスター。 roboto
[14:25] _frankie: Thank you mr. roboto
[14:25] mscdex: :>
[14:28] qschzt: amazing how that's still such an issue in 2010, i also see boxes
[14:29] mscdex: i guess you need a font that has superb unicode coverage
[14:29] mscdex: :/
[14:29] qschzt: afaik I'm all UTF-8 but often the iso8859-1 default bites me
[14:31] bradleymeck2 has joined the channel
[14:32] bradleymeck2: tmpvar you up?
[14:32] pkrumins: Anyone knows if there is a way to make javascript return a falsy value from `new` constructor? For example: var display = new CoolDisplay || new LousyDisplay. If CoolDisplay can't be constructed, new should return falsy value, so that LousyDisplay can be constructed
[14:33] qschzt: pkrumins throw new Error()
[14:34] micheil: no, not an error.
[14:34] micheil: I think you can return false
[14:34] pkrumins: it seems to ignore false returns
[14:34] micheil: hm..
[14:35] pkrumins: qschzt: that would kill the whole program!
[14:36] Neil_ has joined the channel
[14:36] qschzt: heh :)
[14:36] bradleymeck2: pkrumins, no
[14:37] qschzt: pkrumins, try catch the error, if you can't construct it, try the other
[14:37] bradleymeck2: new operator performs new Y -> var x = Object.create(Y);Y.call(x);return x
[14:37] bradleymeck2: what about using valueof?
[14:38] KungFuHamster_ has joined the channel
[14:38] pkrumins: valueof! never heard of it, knew only typeof and instanceof
[14:39] bradleymeck2: object.valueOf is used in type coercions but dont know if its used on boolean ops
[14:41] jamescarr: had to go to sleep :(
[14:41] bradleymeck2: welcome back though
[14:41] softdrink has joined the channel
[14:43] jamescarr: yeah, i was excited at getting this first cut of authorize.net integration done but crashed out
[14:44] elliottkember: micheil - sorry missed your message earlier
[14:44] elliottkember: thanks for the offer :)
[14:45] elliottkember: I've been doing some node.js socket stuff using socket.io on nur.ph recently
[14:45] elliottkember: whoops, pub o'clock! catch you guys later
[14:47] kriszyp has joined the channel
[14:47] jamescarr: grunt work :(
[14:48] jamescarr: mapping pipe delimited fields to an object
[14:50] zapnap has joined the channel
[14:50] bradleymeck2: ah, good ole de/serialization
[14:52] jakehow has joined the channel
[14:57] everton has joined the channel
[15:00] jamescarr: isnt the author of vows in here?
[15:00] bradleymeck2: he comes in from time to time
[15:01] jamescarr: heck, maybe I just need another set of eyeballs... anyone notice a difference between the top and bottom?
[15:01] bradleymeck2: of?
[15:03] _announcer: Twitter: "Learning Node.js today. It's going well. I like Ruby's EventMachine better, but since JS is conceptually similar to Ruby, this ain't bad." -- Brian Hogan. http://twitter.com/bphogan/status/20067737378
[15:04] mscdex: jamescarr: yeah one is the top and the other is the bottom
[15:04] mscdex: :>
[15:04] qschzt: what really often bothers me here is the reference to Ruby :)
[15:04] _announcer: Twitter: "But now are drawn to Node.JS" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/20067835179
[15:04] jamescarr: qschzt, yes
[15:05] mscdex: !translate English:Japanese node.js loves you
[15:05] _frankie: node.jsはあなたを愛して
[15:05] bradleymeck2: ruby could have been great
[15:05] jamescarr: cool
[15:05] mscdex: !tweet @KOBA789 node.jsはあなたを愛して
[15:05] mscdex: i hope that worked
[15:05] mscdex: heh
[15:05] _announcer: Twitter: "One clone from github or have ー 動Kasen node_chat compilation errors. node.js wish and let me downgrade ..." [ja] -- Sn0wNight. http://twitter.com/Sn0wNight/status/20067911414
[15:05] bradleymeck2: most japanese programmers can read some simple english
[15:06] jamescarr: "javascript is a lot like ruby"
[15:06] mscdex: they pretty much have to
[15:06] jamescarr: frown
[15:06] mscdex: are there any programming languages that don't use english keywords?
[15:07] jamescarr: if I tweeted that Node.js is good and I like it because javascript is a lot like Java, people would be throwing stones at me
[15:07] mscdex: i'd take those stones and use it for building materials
[15:08] jamescarr: whew, found the mistyped key
[15:09] jamescarr: this certainly wasn't any fun
[15:09] jamescarr: http://gist.github.com/503451
[15:09] jamescarr: mapping of pipe delimited fields to their names
[15:09] jamescarr: 40-49 are "reserved for future use"
[15:09] jamescarr: hence why I didnt just use an array
[15:12] astrolin has joined the channel
[15:13] charlesjolley- has joined the channel
[15:21] knuckolls has joined the channel
[15:29] ruf has joined the channel
[15:36] gfodor has joined the channel
[15:37] manveru: mscdex: that was pretty weird japanese :)
[15:37] manveru: node.jsはあなたお愛しています might've been better
[15:38] manveru: google translate is really the worst :|
[15:41] bradleymeck2: its the worst but its better than any of the others
[15:46] mscdex: manveru: it's better than nothing since i don't know japanese ;-)
[15:46] manveru: mscdex: i think "X loves you" is pretty international by now :)
[15:47] mscdex: but i wanted to personalize it in their language ;p
[15:47] Blink7 has joined the channel
[15:48] manveru: you get a star for effort :D
[15:48] mscdex: woot
[15:51] _announcer: Twitter: "... very interested in node.js lately" -- Radovan Lozej. http://twitter.com/xrado_/status/20070793869
[15:54] mscdex: lol i love google's translation of: node-v0.1.102でちゃんと動いてるよー
[15:54] mscdex: "Yo I'm running fine on node-v0.1.102"
[15:54] mscdex: yo!
[15:57] bvleur: If I'm handling a request inside an HTTP server and need to do something async before I can attach a listenere to the request data event.. how can I prevent 'data' events from getting lost? Should pause() and resume() work?
[15:57] jamescarr: is err in function(err, result) supposed to represent a system error?
[15:58] mscdex: jamescarr: it's an instance of Error
[15:58] jamescarr: ah so I thought
[15:58] jamescarr: thank you
[15:59] mscdex: bvleur: i've read that pause() doesn't always keep the 'data' event from being emitted. maybe set a handler for 'data' early on and manually buffer the contents?
[16:00] femto has joined the channel
[16:00] mscdex: or maybe there's a better way to handle the situation in question
[16:00] mscdex: ACTION shrugs
[16:01] jamescarr: thank you
[16:01] jamescarr: oops
[16:01] zomgbie has joined the channel
[16:02] bvleur: mscdex, Yeah, pause doesn't seem to work. Some kind of "event buffer" to sys.pump to would be nice. Guess I have to write that
[16:02] jamescarr: oopshmmm... I need to simulate an async call in a stub
[16:03] mscdex: bvleur: there's been lengthy discussions on how to improve the pause events and such
[16:03] mscdex: i think ryan_gahl had some modifications to event emitter or something that would internally buffer events for you if you wanted
[16:03] mscdex: so you might take a look at his changes somewhere on his github account
[16:04] bradleymeck2: yes, but they werent added cause of them slowing the more common use of just pumping one to the other, still the source is there :D
[16:05] creationix has joined the channel
[16:08] mscdex: what source?
[16:08] bvleur: mscdex: I've found: http://github.com/ryedin/node-core-enhancements/tree/master/events/ . Thank for the tip.
[16:08] johan__ has joined the channel
[16:08] bvleur: I've also found: http://github.com/nodejitsu/node-http-proxy/blob/master/lib/node-http-proxy.js#L54 (and line 123-125) which is a less generic but more obvious way to do it
[16:09] mscdex: yeah
[16:16] astrolin has joined the channel
[16:17] _announcer: Twitter: "Saturday is out. http://o.sitepen.com/labs/persevere.php/ to compete with little NodeJS # CreativeHacker." [th] -- roofimon. http://twitter.com/roofimon/status/20072363401
[16:17] mscdex: :O
[16:18] mscdex: little node.js?
[16:18] mscdex: :S
[16:19] bradleymeck2: wonder how that scales... php calling java...
[16:21] bradleymeck2: mmm can only extend w/ rest / java?
[16:21] omarkj has joined the channel
[16:27] saikat has joined the channel
[16:28] technoweenie has joined the channel
[16:35] jblanche has joined the channel
[16:36] maxsilver has joined the channel
[16:46] d4yo has joined the channel
[16:46] d4yo: hi
[16:46] d4yo: does anyone know how to setup a nodejs server so that it doesn't have to be restarted to see code changes?
[16:47] d4yo: so that i can just refresh the page instead of starting and stopping the service
[16:48] mape: d4yo: check noodles or dj
[16:49] omarkj: I read about hot code loading in Node.js once 
[16:50] _mythz has joined the channel
[16:50] qschzt: d4yo nodules http://github.com/kriszyp/nodules
[16:50] keeto has joined the channel
[16:51] johan__: I'm having trouble with a node.js HTTP server that serves static mp3 files to the client, the first request works fine, the second sends HTTP/0.9 and skips the headers, why is that?
[16:51] johan__: Here is the code: http://pastebin.com/4x2xu3y2
[16:52] omarkj: Yeah, here, it's not going to solve your problem d4yo, but it's a cool idea. http://bit.ly/9QybdP
[16:53] d4yo: @omarkj it's a good start. thanks :)
[16:53] V1 has joined the channel
[16:55] astrolin has joined the channel
[16:56] sudoer has joined the channel
[17:01] jakehow has joined the channel
[17:04] joshdulac has joined the channel
[17:05] jamescarr: hmmm
[17:05] slaskis has joined the channel
[17:06] Tim_Smart has joined the channel
[17:07] _announcer: Twitter: "@rk Using a #nodejs deriviative with some of @rem's twitterlib. See http://gist.github.com/468983. @themattharris confirmed removal on IRC" -- Michael Payne. http://twitter.com/hartley/status/20075215349
[17:11] zemanel has joined the channel
[17:13] astrolin_ has joined the channel
[17:13] grantmichaels has joined the channel
[17:15] astrolin_ has joined the channel
[17:15] maushu has joined the channel
[17:22] _announcer: Twitter: "Pure Ruby implementation of #nodejs native libraries http://github.com/aslakhellesoy/rednode" -- Denis Jacquemin. http://twitter.com/denisjacquemin/status/20076072540
[17:22] ewdafa has joined the channel
[17:22] mikec2 has joined the channel
[17:24] _announcer: Twitter: "GoogleTechTalks 2010 "Node.js: JavaScript on the Server" http://www.youtube.com/watch?v=F6k8lTrAE2g" -- Marc Schneider. http://twitter.com/snrmwg/status/20076211800
[17:26] mape: anyone have experience with hijacking the closing of a node instance?
[17:27] omarkj: mape: As in catching SIGINT..?
[17:28] mape: yeah, seems it doesn't work when i do it
[17:28] mape: process.on('SIGINT', function () {console.log('Got SIGINT.');});
[17:28] mape: doesn't fire when I do Ctrl+c
[17:28] hober has joined the channel
[17:28] omarkj: Hm, on OSX?
[17:29] mape: running on linux, terminal is osx
[17:29] omarkj: Ok.
[17:30] omarkj: Just going to try it here again.
[17:31] omarkj: It's working here..
[17:31] omarkj: wait.
[17:32] omarkj: http://pastebin.org/438962 <-this works
[17:33] maxsilver has joined the channel
[17:33] omarkj: Sorry about the oldie syntax..
[17:33] omarkj: mape: I got it.
[17:34] omarkj: Using .on() doesn't work for a very strange reason.
[17:34] mape: yeah, this works, thanks :)
[17:34] omarkj: np
[17:34] stepheneb has joined the channel
[17:35] omarkj: I guess that's a bug ?
[17:35] omarkj: Unless on isn't just a shorthand for addListener.
[17:35] coobr has joined the channel
[17:36] isaacs has joined the channel
[17:39] tmedema has joined the channel
[17:40] programble has joined the channel
[17:41] V1: on is shortHand for the eventEmitter
[17:41] V1: I don't the processes are based on the eventEmitter
[17:42] V1: i don't think*
[17:43] omarkj: V1: Ah, okay. That would make sense.
[17:43] omarkj: I'm going to look at it anyway.
[17:44] V1: http://github.com/ry/node/blob/master/src/node.js#L70-111 don't have a on
[17:44] V1: easy fix though
[17:45] _announcer: Twitter: "#akka well hmm, just decouple your rest/comet away from atmosphere into socket.io on #node.js with #rabbitmq. Try it!" -- kschzt. http://twitter.com/kschzt/status/20077348619
[17:46] omarkj: Yes.
[17:48] omarkj: http://github.com/ry/node/blob/master/lib/events.js#L79
[17:48] V1: oh fuck, i just a complete rm -rf * of all my git repositories -_-"
[17:49] omarkj: Æj, shit. Sorry to hear that.
[17:49] V1: well that just sucks -_-
[17:50] V1: A well, thanks god they where just repositories ;$
[17:50] bmesh has joined the channel
[17:52] bpot has joined the channel
[17:53] qschzt: V1 *clap* *clap*
[17:54] V1: A well, at least the clutter is gone 
[17:55] omarkj: That's looking on the bright side.
[17:58] Viriix: is there a good way to pass 'this' to a closure? 
[17:59] Viriix: for a listener that is
[17:59] technoweenie: func.apply(this, arguments)
[17:59] technoweenie: one common trick is to set this to something else right above it
[17:59] technoweenie: var foo = this; this.on('click', function() { foo.bar() })
[17:59] omarkj: Yeb, that seems to be most common.
[18:00] technoweenie: if you use coffee script, you can do:   @on 'click', => @bar()
[18:00] coobr has joined the channel
[18:00] Viriix: hmmm, doesn't that take advantage of the global namespace though?
[18:00] aaronblohowiak: lots of people use 'self' to mean 'this that's not really this'
[18:00] technoweenie: yea i like using a more descriptive var name, but 'self' works
[18:01] omarkj: Viriix: Not really no, it's defined within the scope of the function containing the closure.
[18:01] omarkj: Hope that made sense.
[18:01] Viriix: oh yeah, JS has that crazy rolling scope thing
[18:01] aaronblohowiak: Viriix: not crazy!
[18:01] omarkj: Oh yes!
[18:02] Viriix: :) thanks guys
[18:05] Viriix: does that work for assignments though? like : var foo = this; this.on('click', function() {foo.value = newVal}); // would this.value be set to newVal?
[18:05] omarkj: Yes.
[18:06] V1: I'm impressed with V8's idiotic Array performance. The array.push( item ) is totally faster than array[ arry.length ] = item; 700k ops / sec vs 334k ops / sec 
[18:06] omarkj: Well, depends where this is coming from.
[18:06] aaronblohowiak: Viriix: http://howtonode.org/what-is-this
[18:06] Viriix: thanks aaronblohowiak 
[18:07] creationix: mape: ping
[18:07] mape: creationix: pong
[18:07] creationix: http://creationix.com:1234/#0/0
[18:07] _announcer: Twitter: "Using Node.js and a bit of jQuery to annoy you. http://icio.us/5yswjo" -- Acaz Souza. http://twitter.com/acazsouza/status/20078534749
[18:07] aaronblohowiak: V1: if you keep a local var (i) with the length of array instead of looking up array.length, how does that change things?
[18:07] creationix: scroll with wasd and 
[18:07] matt_c has joined the channel
[18:07] jblanche has joined the channel
[18:08] aaronblohowiak: creationix: radsauce
[18:08] creationix: it's one HUGE map
[18:09] creationix: pick any coordinates in the url and make a home
[18:09] V1: aaronblohowiak: caching the length only gives you 10k more ops
[18:09] mape: creationix: ah neat, might want to set overflow:hidden; on body so the scrollbars don't show up on smaller screens
[18:09] aaronblohowiak: V1: and if you were to do the assignment not at the end but at, say array[0] = blah, what does that do?
[18:09] creationix: mape: yeah, it's not done, but this is the initial alpha
[18:10] mape: creationix: What do you imagine the end result being?
[18:10] aaronblohowiak: V1: also, can you do unshift() 
[18:10] Neil_ has joined the channel
[18:10] aniero: creationix: is your postgres-js library the latest version of your js-native postgres client?
[18:10] V1: aaronblohowiak: unshift, is awful 45k ops / sec
[18:10] creationix: aniero: I think so
[18:10] aaronblohowiak: V1: omg, wow
[18:10] aniero: creationix: you deleted your test.js file so there's no quick reference to see how to use it :P
[18:10] V1: aaronblohowiak: here are the cases: http://jsperf.com/adding-items-array
[18:11] V1: run it in a chromium build
[18:11] creationix: hmm, I think it follows the node-persistence api
[18:11] creationix: not sure
[18:11] aniero: creationix: (np though, i figured it out. issuing a query then closing the connection is all i needed)
[18:11] creationix: shift and unshift are slow!
[18:11] aniero: creationix: also, thank you! works great
[18:11] creationix: aniero: it does have issues under high load though
[18:12] creationix: but it shouldn't be too hard to figure out
[18:12] aniero: creationix: what do you mean? lots of queries?
[18:12] creationix: yeah, race conditions
[18:12] aniero: oh, shoot
[18:12] aniero: that's no good!
[18:12] creationix: aniero: ryah's postgres module is pretty good I hear
[18:12] creationix: and faster too
[18:12] aniero: but for my usage -- issuing a single simple small query every 30 minutes -- it's perfect :)
[18:12] creationix: aniero: yep
[18:12] aniero: creationix: the native one, using libpg?
[18:12] creationix: yep
[18:12] _announcer: Twitter: "Assistindo o Google Tech Talks sobre node.js. It's the end of the world as we know it" -- Paulo Geyer. http://twitter.com/vrsmn/status/20078811690
[18:12] aniero: i tried last night, wasn't working for me
[18:13] aniero: npm is pooping itself periodically here too though, so that doesn't help
[18:13] aaronblohowiak: http://jsperf.com/adding-items-array/2 woooow, concat is terrriblist of all
[18:13] estill01 has joined the channel
[18:13] creationix: mape: are you able to see the map or just blank?
[18:14] mape: creationix: can see it
[18:14] jwcooper has joined the channel
[18:14] tekky has joined the channel
[18:14] mape: Just not sure what I'm suppose to be able to do :)
[18:14] creationix: ok, because it's broken for me
[18:14] creationix: mape: you should be able to edit the map
[18:14] creationix: it's real-time with sockets
[18:15] TobiasFar has joined the channel
[18:15] jwcooper: anyone having issues with the latest tagged npm?  I used to be able to just 'require('express');' in my app, but now I get a module not found.
[18:15] jchris has joined the channel
[18:17] mape: creationix: So what kinda audience is the target?
[18:17] V1: aaronblohowiak: older version of V8 actually run concat faster than unshift. But unshift is just horrible 
[18:17] creationix: mape: maybe turn it into a MMORTS game engine
[18:17] mape: And where did you get the graphics? :)
[18:17] aaronblohowiak: V1: how interesting.
[18:17] creationix: mape: http://www.lostgarden.com/2007/05/dancs-miraculously-flexible-game.html
[18:17] mape: Ah neat
[18:18] creationix: mape: so what are you coordinates?
[18:18] qschzt: V1 is your memcached getting ready?
[18:18] aaronblohowiak: V1: in safari, things are completely different.  length and cached length win
[18:18] creationix: still 0/0 ?
[18:19] mape: creationix: -70 70
[18:19] V1: qschzt: getting really close, most of the commands are now working. The only issues I still have are compressing the values, and storing the contents of Buffers in to memcached and retrieve an re-create a identical copy again of the Buffer
[18:19] V1: qschzt: I hope to have a alpha version out next week. 
[18:19] creationix: mape: I don't see anything?
[18:19] qschzt: V1, great
[18:20] creationix: oh, nevermind
[18:20] isaacs: aniero: what does "pooping itself" entail, exactly?
[18:20] creationix: mape: I see it now
[18:20] softdrink has joined the channel
[18:20] aniero: isaacs: oh, it was blowing up when it had a tags file from ctags present
[18:20] aniero: isaacs: which confoudned things when i was trying the postgres client
[18:21] isaacs: tags file from ctags?
[18:21] aniero: isaacs: yeah, i run it in PWD when opening up a directory with vim
[18:21] _announcer: Twitter: ""Be careful making abstractions. You might have to use them." Ryan Dahl in his Google Tech Talk on node.js http://bit.ly/btHyzX" -- Peter Niederwieser. http://twitter.com/pniederw/status/20079287896
[18:21] isaacs: jwcooper: works for me.  npm install express and then require("express") works
[18:21] aniero: isaacs: but oddly, having the file there confused npm somehow. very odd.
[18:22] V1: aaronblohowiak: That why i think it's important to actually create such tests and only run them in Chromium. Most of JS performance is based on cross-browser experiances. And developing for one system is really different.
[18:22] SubStack: I like to use my abstractions before I write them.
[18:22] isaacs: aniero: what is this ctags?  i'm not familiar.
[18:22] jwcooper: isaacs: I realized none of the require's were working.  I'm currently uninstalling, and reinstalling to see if that fixes things.
[18:22] V1: aaronblohowiak: Normally i would have just go with array[ array.length ] = but for Node i guess .push() is waaay better ;P
[18:22] isaacs: jwcooper: cool
[18:22] creationix: mape: I'll add layers later so you can stack stuff
[18:22] creationix: that will look a  lot nicer
[18:23] mikec2 has joined the channel
[18:23] mape: yeah
[18:23] mikec2: I want to perform HTTPS as a client in node.js. How do I do that?
[18:23] creationix: mape also you can enlarge your window
[18:23] aniero: isaacs: http://ctags.sourceforge.net/ (works with more than C, lets me jump to method definitions, etc. in vim)
[18:23] creationix: mape: http://creationix:1234/#-70/72/50/50
[18:23] _announcer: Twitter: "one day of node.js + jquery + css hacking. mitigated network results, but at least it looks supasweet." -- wesen. http://twitter.com/wesen/status/20079401346
[18:24] isaacs: jwcooper: i try to avoid breaking things between versions, but it's super hard because it's so early, and there are still bugs and missing functionality.  never quite sure how people have things set up when upgrading.
[18:24] mape: creationix: http://mape.me/node-profile.png :) What I'm working on
[18:24] aniero: isaacs: oh, heh, you wrote npm?
[18:24] jwcooper: isaacs: Yup, understandable.  I'm sure it will work once I reinstall.  I didn't have too many packages installed, so no probs there.
[18:24] isaacs: aniero: yep :)
[18:24] aniero: isaacs: i can try and reproduce this problem if you'd like
[18:25] creationix: mape: nice
[18:25] isaacs: aniero: i'd appreciate that.  npm shoudln't care about ctags at all.
[18:25] aniero: isaacs: ok, 1m
[18:25] isaacs: (reading man ctags now.  interesting stuff)
[18:25] voxpelli has joined the channel
[18:25] aniero: isaacs: you a vim user? i can help with that re: vim, if nothing else
[18:25] isaacs: i mean, unless your tags file is called ".npmignore" or ".npminclude"
[18:25] isaacs: aniero: no, i'm textmate
[18:25] aniero: ah, textmate already does jump-to-method
[18:26] aniero: i forget the keycombo tho
[18:26] SubStack: does npm ignore .git by default?
[18:26] isaacs: SubStack: yes
[18:26] SubStack: nifty
[18:26] mape: creationix: Think it is working pretty nice now, not sure if there is anything more to add.
[18:26] SubStack: ACTION put it into .npmignore just in case previously
[18:26] mikec2: Crypto module only seems to work with http.Server
[18:27] mikec2: Oh. I just found the secure option
[18:27] mikec2: Heh, nm
[18:27] isaacs: SubStack: http://github.com/isaacs/npm/blob/master/lib/cache.js#L212-239
[18:27] mape: creationix: Any idea how to prevent "IndexError: list index out of range" when doing --prof and then using tick-processor?
[18:28] creationix: no clue
[18:28] aniero: isaacs: https://gist.github.com/6ffaae1a3bf4bc4f11d3
[18:28] isaacs: SubStack: the default ignore file is now this: http://github.com/isaacs/npm/blob/master/lib/utils/default.npmignore
[18:29] SubStack: k
[18:29] eisd has joined the channel
[18:29] isaacs: aniero: interesting, i'ts as if it's interpreting the tags file as a folder.
[18:29] isaacs: aniero: i mean, it IS doing that.
[18:29] cloudhead has joined the channel
[18:29] aniero: isaacs: yeah, it's just a plain text file... or an empty file in this case
[18:29] isaacs: aniero: anything in the .npm folder that doesn't start with a . is supposed to be a folder for a package name.
[18:29] isaacs: aniero: your'e not really supposed to touch that .npm folder
[18:30] aniero: isaacs: good to know... could probably do a -d check on it though!
[18:30] isaacs: aniero: yea
[18:30] isaacs: or at least report the failure better
[18:30] aniero: isaacs: i only touched it indirectly... i tend to read the source of any lib i'm using because i can't figure it out via documentation :p
[18:30] estill01 has joined the channel
[18:30] isaacs: i mean, the right thing to do is either support that, or blow up loudly
[18:31] aniero: yep
[18:31] mape: hmm, 153   55.0%  <no call path information> what might that be?
[18:31] isaacs: aniero: also, as of v0.1.21, just use "installed", not "@installed"
[18:31] aniero: is it just me, or do all of you do var self = this; all the time?
[18:31] isaacs: aniero: i removed a lot of the @ prefixes, cuz they get super redundant
[18:32] aniero: isaacs: ah, i'm out of date then. looks like homeberw's not updated yet
[18:32] aniero: homebrew, even
[18:32] isaacs: aniero: yep
[18:32] isaacs: aniero: you can pretty well guarantee that homebrew will be out of date with node and npm for the next year or so, i suspect.
[18:32] isaacs: always one or two versions behind
[18:32] aniero: they're fast, unlike, say, macports
[18:33] isaacs: sure
[18:33] aniero: since the people using homebrew tend to be using bleeding edge everything
[18:33] isaacs: mature projects change less frequently
[18:33] n3v3le has joined the channel
[18:34] mape: isaacs: I'm poking at a project that makes it easier to profile node apps, and right now I do locate linux-tick-processor.py to find the script that generates it, but that doesn't seem bullet proof, how do you find the node path in npm?
[18:35] isaacs: mape: process.execPath
[18:35] n3v3le1 has joined the channel
[18:35] mape: Ah, but can't use that for finding the tick processor :/
[18:36] isaacs: oh, yeah, no
[18:36] isaacs: becasue it's in the node source
[18:36] mape: Yeah, hmm
[18:37] mape: Guess I'm stuck with locate then
[18:37] nrstott has joined the channel
[18:37] maqr has joined the channel
[18:39] n3v3le has joined the channel
[18:43] mau has joined the channel
[18:44] jchris has joined the channel
[18:49] bmesh has joined the channel
[18:52] Nathan_ has joined the channel
[18:57] b_erb has joined the channel
[18:58] V1: Is there a way to "save" the existing context of a function before overwriting it with a new one through fn.apply / fn.call ?
[18:58] _announcer: Twitter: "It's a shame the node.js HTTP client library doesn't support the various HTTP authentication methods." -- Mike Cardwell. http://twitter.com/mickeyc/status/20081176452
[18:59] omarkj: Do you guys know if something similar to python's ssl.wrap_socket() exists in node?
[19:01] V1: You mean something like the Stream.setSecure?
[19:02] omarkj: That could be it.
[19:02] markwubben has joined the channel
[19:03] omarkj: M, not quite.
[19:03] omarkj: Seems like that only for ssl?
[19:03] omarkj: No, http?
[19:03] omarkj: No, wait. I was quick.
[19:03] omarkj: No, I wasn't. I was double quick (sorry about all that).
[19:04] aniero: hmm, expressjs' documentation is unclear on how to set up / use middleware
[19:04] aniero: the express Server appears to inhrit from Connect Server, which should have methods to get access to the common middleware...
[19:05] _announcer: Twitter: "Building a simple old skool socket-based game with http://nodejs.org/ #havingfun" -- Gerben de Graaf. http://twitter.com/g_e_r_b/status/20081527828
[19:07] aniero: aha! app.use(connect.logger( ... ));
[19:08] _announcer: Twitter: "Here is my new node-profile project: http://github.com/mape/node-profile/ . Makes profiling node apps a little easier (and pretty!). #nodejs" -- Mathias Pettersson. http://twitter.com/mape/status/20081693858
[19:12] omarkj: That's cool mape.
[19:13] mape: omarkj: :) Figured its handy to have something quick and easy when profiling rather then having to deal with logs and different commands
[19:14] omarkj: Yeah, it should make it a lot less hassle. I'll give it a spin on the stuff we're making tomorrow.
[19:15] mape: Great, be sure to let me know if things break
[19:15] omarkj: I will.
[19:20] matt_c_ has joined the channel
[19:21] keeto has joined the channel
[19:22] dannycoates has joined the channel
[19:25] mizerydearia has joined the channel
[19:27] isaacs: mape: you should add "locate linux-tick-processor.py" as a preinstall command for profile.
[19:27] isaacs: mape: that'll ensure that it actually works before installing
[19:27] mape: ah, will look into that after I get me some kebab
[19:27] isaacs: oh, actually, nvm
[19:27] mape: no?
[19:27] isaacs: locate always returns succes
[19:27] isaacs: you could write a bash script that does this though:
[19:28] mape: Hmm no good node news today :/ Not a single tweet that has a retweet
[19:29] isaacs: if [ "$(locate linux-tick-processor.py)" == "" ]; then echo "coudln't find linux-tick-processor.py"; exit 1; fi
[19:29] joshdulac has joined the channel
[19:29] adamholt has joined the channel
[19:30] maushu has joined the channel
[19:30] mape: the exit will kill the install?
[19:31] isaacs: mape: yeah, exiting with anything other than 0 means failure
[19:31] mape: and  == "" means the stdout is empty since it failed? It doesn't take the stderr?
[19:31] isaacs: locate outputs to stdout
[19:31] gwoo has joined the channel
[19:31] isaacs: but apparently locate doesn't fail when it couldnt' find anything
[19:32] isaacs: it just doesn't output anything
[19:32] mape: yeah but meant the -bash: locate: command not found won't finddle with that
[19:32] _announcer: Twitter: "Judging from the responses to my Google first occurred to Apache + mod_proxy + nodejs" [ru] -- Vova Bilonenko. http://twitter.com/delfrrr/status/20082933406
[19:32] isaacs: oh, yeah, if locate itself isn't found then that'll also fail
[19:33] mape: k, so just do scripts/preinstall.sh and add that in {'scripts': {'install': 'preinstall'}}?
[19:34] isaacs: {"scripts" : { "preinstall" : "./scripts/preinstall.sh" }}
[19:34] isaacs: preinstall happens *before* all the files get put in place, so it's a better place to do stuff that might break
[19:34] mape: k
[19:34] isaacs: safety checks, etc
[19:34] isaacs: but you kno, i mean, it looks like your js handles that case not too badly
[19:35] sudoer has joined the channel
[19:35] mape: sh: ./scripts/preinstall.sh: Permission denied
[19:35] mape: npm fail Failed to exec preinstall script
[19:36] mape: even though I do sudo npm install .
[19:36] isaacs: also, might be cool to sniff the process.platform, and get the mac-tick-processor.py or windows-tick-processor.py if appropriate
[19:36] isaacs: mape: chmod 0755 scripts/preinstall.sh
[19:36] estill01 has joined the channel
[19:36] mape: Ah, neat
[19:36] sudoer has joined the channel
[19:36] mape: Isn't mac-tick just a wrapper for linux?
[19:36] isaacs: not quite.
[19:37] isaacs: it does this: $tools_path/linux-tick-processor --mac --nm=$tools_path/mac-nm $@
[19:37] isaacs: i'm very enthusiastic about handy profiling for node, that's why i'm bugging you about this :)
[19:37] isaacs: it's a Good Thing
[19:38] mape: :)
[19:39] mape: There we go, should be pushed
[19:40] isaacs: kewl!
[19:40] matt_c_ has joined the channel
[19:40] siculars has joined the channel
[19:40] mape: still have the issue with "IndexError: list index out of range"
[19:40] isaacs: now i have to figure out how to make linux-tick-processor.py locate-able
[19:41] mape: not sure how to fix/handle that though
[19:41] mizerydearia has joined the channel
[19:42] pufuwozu has joined the channel
[19:43] omarkj: Where are these py files normally located btw?
[19:43] omarkj: Gotta run.
[19:44] mape: node/deps/v8/tools/linux-tick-processor.py
[19:44] creationix has joined the channel
[19:46] isaacs: mde: hey, dude.  npm adduser
[19:47] isaacs: mde: i wanna add you as the owner of jake, but http://registry.npmjs.org/getuser/org.couchdb.user:mde
[19:47] isaacs: not found, missing
[19:49] _announcer: Twitter: "Just noticed Heroku now have an experimental Node.js stack... awesome! http://ur.ly/iEBQ" -- Rob Mason. http://twitter.com/iamcalledrob/status/20083802022
[19:49] pterk has joined the channel
[19:55] astrolin has joined the channel
[19:55] amerine has joined the channel
[19:59] maqr has joined the channel
[20:01] d0k has joined the channel
[20:03] tjgillies has joined the channel
[20:07] ashleydev has joined the channel
[20:08] DraX has joined the channel
[20:08] DraX: is there a library for (un)packing c types from a buffer?
[20:09] rwaldron has joined the channel
[20:11] femto has joined the channel
[20:13] aurynn: Not to my knowledge. Someone implemented protocol buffers, which would work nicely for that.
[20:13] DraX: node-mongodb seems to have a C implementation of bson..
[20:13] aurynn: postgres.js extended buffers to handle some C types
[20:14] DraX: i wonder if it handles alignment correctly
[20:14] aurynn: It does, well enough to implement the postgres protocol in pure JS
[20:16] DraX: http://github.com/creationix/postgres-js/blob/master/lib/buffer_extras.js
[20:16] DraX: no way to pick the endianness, it's whatever postgres uses :/
[20:17] aurynn: network-neutral endianness
[20:17] DraX: most certainly
[20:17] DraX: well it's a good enough start
[20:19] _announcer: Twitter: "@moonpolysoft because node.js is faster than threads." -- Joe Damato. http://twitter.com/joedamato/status/20085309719
[20:21] DraX: how is that even a response the the question asked.
[20:22] FransWillem has joined the channel
[20:22] bradleymeck2 has joined the channel
[20:23] _announcer: Twitter: "@moonpolysoft I like node.js because I like JavaScript, and the event model really stretches me as a programmer. YMMV, of course." -- ʍɐɥs uuʎɹnɐ. http://twitter.com/aurynn/status/20085529437
[20:24] aurynn: Hehe
[20:24] aurynn: My inverted name screws up the bot.
[20:24] DraX: that's actually an answer to the asked question
[20:26] DraX: looks like the buffer extras wouldn't handle struct padding..
[20:26] bmesh has joined the channel
[20:26] DraX: not that i understand the problem well enough to do much about it :/
[20:27] aurynn: struct padding will require architecture-specific knowledge :\
[20:27] DraX: yeah
[20:28] SubStack: EventEmitter ought to have a .pass
[20:28] SubStack: like .pump for events
[20:29] bradleymeck2: pass how? emit onto another object?
[20:30] SubStack: yes
[20:30] SubStack: pass along an event from one emitter to another
[20:30] bradleymeck2: wonder if there could be any speed gain from that or just the convenience
[20:31] SubStack: convenience I'm thinking
[20:32] _announcer: Twitter: "@moonpolysoft also there's been huge pent-up demand for a non-neutered JavaScript, and Node fills that gap. Lotta folks only write JS." -- J Chris Anderson. http://twitter.com/jchris/status/20085967787
[20:32] stride: like a directed emit to a single EventEmitter that isn't registered as a listener on the original EventEmitter?
[20:33] aurynn: end-to-end javascript has its appeal, too.
[20:34] SubStack: stride: yep
[20:34] stride: SubStack: can't you just .call() the other EventEmitter?
[20:35] SubStack: yes, you can always do it by hand
[20:35] SubStack: this would be useful for the case when you only want to expose some events
[20:35] Aria has joined the channel
[20:35] charlesjolley- has joined the channel
[20:36] _announcer: Twitter: "Researching how to run node.js on Windows.." -- thiyagaraj. http://twitter.com/thiyagaraj/status/20086187810
[20:37] er1c_ has joined the channel
[20:39] siedrix has joined the channel
[20:39] creationix has joined the channel
[20:39] siedrix: Hi, how can i do a http redirect?
[20:40] DraX: siedrix: do a 300-level status code (301, 302 probably) and set the Location header
[20:41] siedrix: something like "res.writeHead(301, {'location':'http://google.com'});"
[20:41] dannycoates_ has joined the channel
[20:41] DraX: you should probably read up on which 300 level status code you want
[20:41] cloudhead: what's the prefered websocket library for node? I'm looking for something simple and well written
[20:41] jetienne: http client request are queued if they are toward the same host:port?
[20:41] siedrix: hey, it work thanks...
[20:44] siedrix: for web sockets i follow this tutorial, worked well... http://jeffkreeftmeijer.com/2010/experimenting-with-node-js/ i dont know if you need something more complex...
[20:44] _announcer: Twitter: "Ok, Windoze is currently unsupported, Have to use a VM #nodejs" -- thiyagaraj. http://twitter.com/thiyagaraj/status/20086569052
[20:47] omarkj: Hm, ok.
[20:49] _announcer: Twitter: "How does one let an iPad talk to a NodeJS server on a different machine, without disabling OSX Firewall? Can't seem to open the port." -- Mark Wubben. http://twitter.com/novemberborn/status/20086835225
[20:50] isaacs has joined the channel
[20:56] Aria has joined the channel
[20:56] unomi has joined the channel
[20:58] Aria has joined the channel
[21:00] femtoo has joined the channel
[21:01] pdelgallego has joined the channel
[21:03] _announcer: Twitter: "@bascule Ask yourself what the common element between e.g. http://j.mp/7vLIKJ and EventMachine or node.js is." -- MenTaLguY. http://twitter.com/mentalguy/status/20087586850
[21:04] softdrink has joined the channel
[21:05] geojeff has joined the channel
[21:07] justinlilly has joined the channel
[21:08] siculars_ has joined the channel
[21:09] justinlilly: hey folks. I attempted to run vows after installing it with npm but I get the following error: http://pastie.org/1070015  -- any thoughts?
[21:09] kriszyp has joined the channel
[21:09] _announcer: Twitter: "I'm writing a #VM in #javascript for #ruby 1.9, thanks to #nodejs. I'm just playing, but I'm surprised: it does work." -- Julien Portalier. http://twitter.com/ysbaddaden/status/20087868947
[21:09] isaacs: justinlilly: what version of node?  node -v
[21:10] justinlilly: 0.1.100
[21:10] justinlilly: just downloaded it yesterday.. too new?
[21:11] aurynn: I noticed .102 changed .addListener( to .on(, which threw me for a quick loop :)
[21:12] aurynn: or .recently
[21:12] geojeff has joined the channel
[21:14] justinlilly: isaacs: 0.1.100, on the off chance you are the sort who only looks when you get a ping.
[21:15] isaacs: ah, yeah, too old
[21:15] isaacs: (and i am ;)
[21:15] isaacs: you want 0.1.101 at least, i believe.  0.1.102 is fine
[21:15] isaacs: justinlilly: ^
[21:15] justinlilly: lol. love it.
[21:16] justinlilly: must have been npm that I got yesterday.
[21:16] isaacs: ok, cool
[21:17] isaacs: yeah, there are a few packages that have executables with no .js extension, and do relative require() statements.
[21:17] isaacs: justinlilly: so, i need to do a shim rather than a symlink, but until recently, node wouldn't let you require() something that didn't have an extension
[21:26] mikeal: yeah, i like those kinds of packages
[21:26] Gruni has joined the channel
[21:27] Neil_ has joined the channel
[21:27] aaronblohowiak: is redis-node-client known to work with 0.1.102 ?
[21:32] slaskis has joined the channel
[21:35] n3v3le1 has joined the channel
[21:35] JimBastard has joined the channel
[21:37] coobr has joined the channel
[21:39] jakehow has joined the channel
[21:39] bmesh has joined the channel
[21:42] dnolen has joined the channel
[21:43] sveisvei has joined the channel
[21:47] _announcer: Twitter: "javascript on the server?... node.js FTW!" -- Rajesh Batheja. http://twitter.com/rajeshba/status/20089905390
[21:48] siedrix has joined the channel
[21:48] Dmitry1 has joined the channel
[21:54] jamescarr: hmmm
[21:54] aho has joined the channel
[21:57] geojeff has joined the channel
[21:58] coobr_ has joined the channel
[21:59] uzum4ki has joined the channel
[22:00] rauchg_ has joined the channel
[22:11] Dmitry1 has joined the channel
[22:11] Clooth has joined the channel
[22:12] JimBastard: sup mape 
[22:12] _announcer: Twitter: "Deliver real-time information to your users using node.js http://bit.ly/cl26U5 #javascript" -- Javier de la Cueva. http://twitter.com/jdelacueva/status/20091287451
[22:12] mape: start working again in 6h
[22:12] mape: you?
[22:13] JimBastard: http://github.com/mape/node-profile
[22:13] JimBastard: looks cool, gonna play with it
[22:13] mape: neat, shout if it breaks :)
[22:13] _announcer: Twitter: "Anyone from Portugal participating in the Node.js Knockout? http://tarpipe.com/tT" -- Bruno Pedro. http://twitter.com/bpedro/status/20091371312
[22:14] JimBastard: mape it wants me to   sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist  ?
[22:14] JimBastard: does that sound right?
[22:14] JimBastard: is that you or npm?
[22:14] mape: hmm that I don't know of..
[22:15] JimBastard: Couldn't find linux-tick-processor.py 
[22:15] JimBastard: is it linux only?
[22:15] mape: it uses locate linux-tick-processor.py to find the file
[22:15] mape: so if you have the file it should work..
[22:16] mape: does 'locate linux-tick-processor.py' output anything?
[22:16] JimBastard: it wants me to sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist  again, im gonna try that
[22:16] JimBastard: Please be aware that the database can take some time to generate; once the database has been created, this message will no longer appear. 
[22:16] JimBastard: ive just never seen these messages before
[22:17] mape: Oh, yeah, its building the db for files
[22:17] mape: so you can find it using locate
[22:17] JimBastard: so i suppose it should be running now
[22:17] mape: guess I could do mdfind instead, hmm
[22:20] JimBastard:  [Marak@Maraks-MacBook-Pro ~/dev/nodejitsu]$ nodeprofile yourapp.js -bash: nodeprofile: command not found 
[22:20] JimBastard: ?
[22:20] JimBastard: npm installed it
[22:20] JimBastard: got by those other messages
[22:20] mape: hmm.. not sure why it didn't work, npm should deal with that
[22:21] JimBastard: nodeprofile server.js  
[22:21] JimBastard: etc
[22:21] mape: yeah
[22:21] mape: all I do for that is "bin": { "nodeprofile": "./bin/nodeprofile" }
[22:21] mape: so npm should take care of that
[22:21] mape: JimBastard: have you ever installed spark?
[22:21] JimBastard: yeah spark is installed
[22:22] mape: and that had no issues?
[22:22] JimBastard: i was playing with that last night
[22:22] JimBastard: nope
[22:22] mape: hmm, they should be more or less the same..
[22:22] mape: let me try it on my mac
[22:24] JimBastard: cool thanks
[22:24] mape: btw did you sudo it?
[22:24] mape: on the install that is
[22:24] JimBastard: on install?
[22:24] JimBastard: yeah of course
[22:24] Nathan_ has joined the channel
[22:24] bpot has joined the channel
[22:25] JimBastard: nProf
[22:25] JimBastard: nProfile
[22:25] JimBastard: :p
[22:25] JimBastard: Professor Node 
[22:25] JimBastard: ahaha not that one
[22:26] phiggins has joined the channel
[22:28] mape: JimBastard: what if you use node to run it from the folder npm put it in? Does that work?
[22:28] JimBastard: ill that that out
[22:28] JimBastard: where does it go again
[22:29] mape: .node_libraries
[22:29] JimBastard:  /Users/Marak/.node_libraries/.npm/.cache/profile/0.0.2/
[22:29] JimBastard: aye
[22:29] mape: ya
[22:30] mape: hmm doesn't install on my iMac.. *fix*
[22:31] mape: oh nm..
[22:32] JimBastard: i think its running now by calling directly
[22:34] JimBastard: yeah i dunno mape , i cant get it to work
[22:34] mape: at all? or with the link
[22:34] JimBastard: well maybe im using it wrong
[22:34] JimBastard: im trying to use it to profile a server
[22:35] jetienne has joined the channel
[22:35] JimBastard: that doesnt end
[22:35] JimBastard: is that possible?
[22:35] mape: yeah, but you have to ctrl+c it
[22:35] JimBastard: when i do that is shits out
[22:35] mape: it only profiles after it ends
[22:35] JimBastard: and deletes the log file?
[22:35] mape: yeah, is it out of bounds kinda deal?
[22:35] JimBastard: http://gist.github.com/503840
[22:36] JimBastard: thats the error
[22:36] mape: hmm yeah, I think that is the processor bugging out..
[22:37] JimBastard: any suggestions? 
[22:37] JimBastard: do you need more testing envs?
[22:37] mape: what happens if you just create a file with like for (var i=0; i < 10000; i++) {var tmp = (Math.random()*100000000)+'po';}; and try it on that
[22:38] mape: I think the error you get is an "ok" error, or at least not the fault of my code, seems the profiler breaks down when the ticks aren't correct, ie the program is closed down in the middle of operations
[22:38] JimBastard: i tried it on a demo file i have for translate
[22:38] JimBastard: seems to worked, peeping results now
[22:39] mape: Not really sure what causes it, but sometimes it works, sometimes it doesent. But yeah, think you would get that same error if you did the profiling manually.
[22:39] JimBastard: word
[22:39] JimBastard: it could be the app, its fairly beastly
[22:39] JimBastard: with a lot of child procs
[22:40] JimBastard:    468   84.2%  /usr/lib/libSystem.B.dylib  <-  /usr/local/bin/node , whats that ? :p
[22:40] mape: hmm yeah, think it breaks more often on intensive apps
[22:40] mape: No idea, I just make the output purty and lessens the steps, no idea what some of the profile output actually means
[22:40] root__ has joined the channel
[22:40] JimBastard: got ya
[22:40] JimBastard: well, cool
[22:40] JimBastard: see if you can fix the npm install issue
[22:40] JimBastard: or see if anyone else has the same issue
[22:41] mape: Guess I'll ask isaacs how he does the linking
[22:41] JimBastard: ill keep playing with it
[22:41] tilgovi has joined the channel
[22:42] _announcer: Twitter: "WebSockets are fun - NodeJS as well - but sleep is unfortunately still necessary" -- Pelle Wessman. http://twitter.com/voxpelli/status/20092951968
[22:45] Marak has joined the channel
[22:48] dannycoates_ has joined the channel
[22:49] voxpelli has left the channel
[22:49] voxpelli has joined the channel
[22:49] voxpelli has left the channel
[22:55] creationix has joined the channel
[22:55] sveimac has joined the channel
[23:02] bradleymeck2: 3, that is all
[23:02] bradleymeck2 has left the channel
[23:05] jamescarr_ has joined the channel
[23:05] jchris has joined the channel
[23:05] jamescarr_: man.. really wishing we could have this rhino behavior in node...
[23:06] jamescarr_: var a = 2, b = 5; var [a,b] = [b,a];
[23:07] jblanche has joined the channel
[23:07] dannycoates_ has joined the channel
[23:11] lachlanhardy has joined the channel
[23:16] sveimac: jamescarr_:  coffeescript ftw :)
[23:25] stride: SubStack: just tried to implement pass() for event emitters, comes with a few caveats though. the http module for example calls self.emit('request') which kind of breaks event processing sequence
[23:25] stride: SubStack: http://gist.github.com/503897 if you'd like to try it by yourself
[23:27] stride: for custom eventemitter implementations without those sideeffects it could be used anyway I guess
[23:28] bbttxu has joined the channel
[23:28] bbttxu has left the channel
[23:29] SubStack: click
[23:29] astrolin has joined the channel
[23:30] freshtonic has joined the channel
[23:31] SubStack: how I implemented them: http://github.com/substack/stackvm/blob/dnode/lib/session.js#L17-L24
[23:32] SubStack: without monkey patching, this was just for one particular case
[23:33] hij1nx has joined the channel
[23:33] stride: huh, nice highlighting, didn't know about that :)
[23:34] stride: yeah, looks pretty much the same except of my shamefully unnecessary for loop
[23:40] matt_c_ has joined the channel
[23:40] zemanel has joined the channel
[23:43] bmizerany has joined the channel
[23:44] _announcer: Twitter: "Just realized that I have been listening to Rick Ross for the last 20 min. I thought it was node.js making me feel G... Changed." -- Sean Porter. http://twitter.com/portertech/status/20096650854
[23:48] dnolen has joined the channel
[23:50] rwaldron has joined the channel
[23:51] lachlanhardy has joined the channel
[23:53] zemanel: any tips on handling exceptions on callbacks?
[23:53] stride: just realized, by passing request back to the original event emitter those caveats can be circumwented, at least a bit. http://gist.github.com/503897 looks okay this way
[23:54] zemanel: exceptions on handling GET responses exits node when on error states
[23:54] [[zz]] has joined the channel
[23:55] zemanel: httpclient get's
[23:55] jesusabdullah: zemanel: A lot of callbacks are a of the form function (err, whatev)--It you get that, the usual pattern is if (err) {handle-it();}
[23:55] jesusabdullah: zemanel: idk how much help that is
[23:56] jesusabdullah: That's all I got
[23:56] zemanel: ill check it out thanks :)
[23:56] SubStack: I also don't like that convention.
[23:56] SubStack: although I offer no alternative
[23:57] jesusabdullah: I believe there are also error events, but idk much about that
[23:58] jesusabdullah: SubStack: Does javascript have try/except?
[23:59] stride: it has try/catch
