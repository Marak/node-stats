[00:00] zemanel: easternbloc, this doc helped me alot http://developer.linkedin.com/docs/DOC-1008
[00:01] maushu has joined the channel
[00:02] easternbloc: cool thanks zemanel I'll have a read
[00:03] easternbloc: time for a large cup of tea and a read mi thinks :)
[00:10] zemanel: 3k visitors since the 28th
[00:20] aaronblohowiak has joined the channel
[00:25] Cainus has joined the channel
[00:25] Utkarsh has joined the channel
[00:25] admc has joined the channel
[00:29] Tim_Smart has joined the channel
[00:31] MrTopf has joined the channel
[00:39] chrstphrwrght has joined the channel
[00:40] jakehow has joined the channel
[00:44] nerdEd has joined the channel
[00:45] jackish has left the channel
[00:47] _TS has joined the channel
[00:47] Utkarsh has joined the channel
[00:48] mikew3c1 has joined the channel
[00:50] siculars has joined the channel
[00:52] jakehow has joined the channel
[00:53] aaronblohowiak: is there special sauce in getting express and socket.io to play well together? http://groups.google.com/group/express-js/browse_thread/thread/3634c1dc1989683b references a run() command that i dont see, having auto-generated the express app
[00:54] ly- has joined the channel
[00:54] ly- has joined the channel
[00:54] easternbloc: aaronblohowiak: http://expressjs.com/migrate.html
[00:55] easternbloc: also i never managed it
[00:55] aaronblohowiak: easternbloc: what do you mean you never managed it?
[00:55] easternbloc: i got it all working with websocket but not socket.io
[00:55] easternbloc: i tried and failed ;)
[00:55] easternbloc: are you just after websockets?
[00:55] easternbloc: its late here so you'll have to excuse if i talk shiteee I'm real tired
[00:56] aaronblohowiak: easternbloc: not just websockets, i also want the flash fallback and so on
[00:57] easternbloc: at the time i was just looking at websockets so i didnt care about flash
[00:57] maushu has joined the channel
[00:57] easternbloc: so i ditched socket.io
[00:57] easternbloc: its probably not that hard tbh
[00:57] easternbloc: lemmie find a piece of code i saw for websockets and express...
[00:58] easternbloc: aaronblohowiak: what problems are you actually getting at the moment?
[00:58] cloudhead has joined the channel
[00:59] aaronblohowiak: easternbloc: i am writing a wrapper around socket.io and i want to show that off. i thought express would be the easiest way to handle things like static file serving and template rendering
[00:59] easternbloc: for websocket server it was as simple as requiring, creating a server and away you go
[00:59] aaronblohowiak: easternbloc: looks annoying incompatible at the mo
[00:59] easternbloc: hmm
[00:59] easternbloc: http://github.com/jamescarr/websockets-demo this was useful for me
[01:00] easternbloc: but it doesnt showcase socket.io
[01:00] easternbloc: it's websocket-server although i doubt the two are far away
[01:01] aaronblohowiak: easternbloc: they are very far.  socket.io supports flashsockets, long-polling, forever-frame, long-polling jsonp and more.. it works everywhere
[01:01] aaronblohowiak: easternbloc: anyway, it looks like http://senchalabs.github.com/connect/ will do what i want
[01:01] easternbloc: no i get that
[01:01] easternbloc: i meant implementation
[01:02] easternbloc: i didnt realise connect had any websocket support yet?
[01:02] aaronblohowiak: easternbloc: it doesnt, it will do everything else that i need =)
[01:03] easternbloc: aye connect goes hand in hand with express tbh
[01:03] Utkarsh has joined the channel
[01:13] mikeal has joined the channel
[01:14] Utkarsh has joined the channel
[01:15] breccan has joined the channel
[01:21] bcg has joined the channel
[01:26] aaronblohowiak: hmm, i am having difficulty with socket.io from HEAD
[01:26] Utkarsh has joined the channel
[01:26] aaronblohowiak: oh fuck
[01:26] aaronblohowiak: the default port is 8080
[01:27] _TS_ has joined the channel
[01:29] mikew3c has joined the channel
[01:30] jbenesch has joined the channel
[01:32] lachlanhardy has joined the channel
[01:33] mikew3c_ has joined the channel
[01:36] Zuardi has joined the channel
[01:36] mattikus has joined the channel
[01:39] Utkarsh has joined the channel
[01:39] nog_lorp has joined the channel
[01:40] nog_lorp: howdy
[01:43] pquerna: hi
[01:47] maqr has joined the channel
[01:50] muk_mb has joined the channel
[01:51] mikew3c has joined the channel
[01:52] muk_mb: my game is gonna be so badass! haha
[01:58] voodootikigod__ has joined the channel
[01:58] Utkarsh has joined the channel
[02:00] mikew3c has joined the channel
[02:03] _TS has joined the channel
[02:05] nerdEd has joined the channel
[02:06] cognominal has joined the channel
[02:06] cognominal: I see in a Jakefile        platform.launch('browser');
[02:06] cloudhead has joined the channel
[02:06] cognominal: it does not do anything. What should I configure?
[02:10] dipser has joined the channel
[02:14] elijah-mbp has joined the channel
[02:16] Utkarsh has joined the channel
[02:19] brianmario has joined the channel
[02:25] Utkarsh has joined the channel
[02:29] _TS has left the channel
[02:31] Zuardi has joined the channel
[02:32] mikeal has joined the channel
[02:37] nerdEd has joined the channel
[02:39] muk_mb: how do we terminate a node?
[02:41] pkrumins: process.exit()
[02:42] zemanel: im bored
[02:42] pkrumins: too bad
[02:42] dilvie has joined the channel
[02:44] Utkarsh has joined the channel
[02:44] AAA_awright: zemanel: Bored on the interwebs?
[02:44] AAA_awright: Hahahaha
[02:44] zemanel: y
[02:45] AAA_awright: You can help write a semantic build system
[02:45] zemanel: reached http://www.internetlastpage.com/ and now i dont have anythign to do
[02:46] nerdEd has joined the channel
[02:46] zemanel: a wut?
[02:47] EyePulp has joined the channel
[02:47] kaichen has joined the channel
[02:48] paulwe has joined the channel
[02:54] fennec has joined the channel
[02:55] evanpro has joined the channel
[02:55] zemanel: AAA_awright, whats a semantic build system
[02:56] AAA_awright: zemanel: Right now a Makefile is just a list of instructions. When X do Y
[02:56] jbenesch has joined the channel
[02:56] AAA_awright: If you want to build an RPM, you need to add that to your build file
[02:57] AAA_awright: Well, instead of that, why not tell the build system what each file does
[02:57] AAA_awright: X.cpp is a file that will make the X executable
[02:57] AAA_awright: X.h is a header file
[02:57] AAA_awright: documentation.xml is the documentation for X
[02:57] Utkarsh has joined the channel
[02:57] AAA_awright: X.png is a resource that X will use
[02:57] AAA_awright: etc
[02:58] zemanel: i get the picture
[02:58] zemanel: sounds a bit like ant
[02:58] AAA_awright: And given that information, it can figure out how to build and install the program, or package it, or build the docs, etc
[02:58] AAA_awright: Isn't ant java though?
[02:58] AAA_awright: And plus that still not entirely it, I think
[03:00] zemanel: ye i know
[03:01] zemanel: i get where you going
[03:01] jxh has joined the channel
[03:01] AAA_awright: The idea is you give files _semantic meaning_ and then let the build system use that information to figure how do to something, even if the original data wasn't programmed for a new purpose, instead of just running instructions. Maybe the programmer has no clue what Gentoo is, but with the metadata it should still be able to figure out how to write an ebuild
[03:02] zemanel: i run gentoo :)
[03:02] AAA_awright: ACTION high-fives zemanel
[03:03] zemanel: if you get that to automate a stage3 ill personally hug you
[03:03] AAA_awright: That's the idea
[03:03] AAA_awright: Maybe we could get this to be a top Gentoo project
[03:04] zemanel: i tought about improving the dojo build system with node
[03:05] AAA_awright: I'm thinking you would describe the data with RDF, and you might add more information to a DOAF file My first thought is to use http://en.wikipedia.org/wiki/Description_of_a_Project
[03:05] zemanel: maven all over again :p
[03:05] AAA_awright: DoaF, description of a project
[03:05] AAA_awright: But wait, even better idea
[03:05] AAA_awright: What if you embed the metadata in meta-comments in the source files
[03:06] zemanel: that may be interesting, i like "annotations"
[03:07] jbenesch has joined the channel
[03:07] AAA_awright: Yes, you just scan your project, add project information to a DoaF file, add file-specific information in meta-comments (and also scanning the system functions it uses and doesn't use), then from that you can generate RDF metadata in a cache file, and that can build the project
[03:07] zemanel: makes some sense
[03:09] zemanel: i still have my "fish to fry"
[03:10] zemanel: and im suffering from post nodeko depression
[03:10] AAA_awright: So, you run the build system, it parses the DoaF file for programming languages, it sees it uses C++? Then it scans .cpp/.cxx files for metadata, what --switches you can compile with, what binaries will be built... scans for documentation, that would be provided in the DoaF file
[03:10] AAA_awright: hmm
[03:11] zemanel: isnt taht very language specific?
[03:12] AAA_awright: Not as a whole, you would have a part that knows how to compile C and C++, a part that knows how to package documentation, a part that knows how to package RPMs, etc, it would all be tack-on modules
[03:13] zemanel: i see that a little bit to ant and taks
[03:13] zemanel: tasks
[03:13] zemanel: but im not an expert on teh matter so ...
[03:14] AAA_awright: Neither am I :/
[03:15] zemanel: atm im trying tofigure out what to do with tweetirc.com
[03:15] bradleymeck: nice nice nice, i got you guys a present tomorrow, especially jim when he gets back
[03:16] zemanel: bradleymeck, i mean candy? for us? how nice
[03:18] bcg has joined the channel
[03:18] bradleymeck: pfff no candy, just sfml binding basics
[03:18] zemanel: sfzwhat?
[03:18] zemanel: make some sense man
[03:19] bradleymeck: nevah! http://www.sfml-dev.org/
[03:19] zemanel: its 4am here
[03:20] zemanel: i dont know C
[03:20] bradleymeck: you wont have to
[03:20] zemanel: bradleymeck, are you behind that project?
[03:21] bradleymeck: no, but it links to native bindings that can be statically linked beyond the stuff that is easy to install
[03:22] keyvan has joined the channel
[03:22] zemanel: are you suggesting this and node?
[03:24] ajpiano has joined the channel
[03:25] breccan has joined the channel
[03:26] dilvie has joined the channel
[03:27] zemanel: imoff to bed have fun
[03:27] Dmitry1 has joined the channel
[03:29] SlowCheetah has joined the channel
[03:30] isaacs: sh1mmer: you know, this is unnecessary: http://github.com/sh1mmer/dnsserver.js/blob/master/dnsserver.js#L400-402
[03:30] isaacs: sh1mmer: the EventEmitter class will throw on any "error" event if there's no handler.
[03:31] noahcampbell has joined the channel
[03:34] jbenesch has joined the channel
[03:34] mikew3c has joined the channel
[03:35] maqr has joined the channel
[03:37] bradleymeck: isaacs you any good c++ side?
[03:38] isaacs: bradleymeck: i'm ok
[03:38] isaacs: bradleymeck: what's up?
[03:39] bradleymeck: cant seem to unwrap an External, and cant figure out how to use node's object_wrap class
[03:39] bradleymeck: keeps segfaulting
[03:39] isaacs: bradleymeck: you should take a look at pkrummins' stuff.
[03:39] jbenesch has joined the channel
[03:40] isaacs: bradleymeck: good example in here: http://github.com/pkrumins/node-async/blob/master/async.cpp
[03:42] bradleymeck: cool
[03:42] jesusabdullah: Don't you have an example too, isaacs?
[03:42] isaacs: jesusabdullah: yeah, i have an even simpler example.  but it's just of eio_custom, not objectwrap.
[03:42] isaacs: jesusabdullah: http://github.com/isaacs/node-async-simple
[03:43] jbenesch has joined the channel
[03:47] mikew3c has joined the channel
[03:47] bradleymeck: objectwrap seems kinda heavy
[03:48] ryah: bradleymeck: how so?
[03:48] ryah: (i ask because i also find it that way...)
[03:49] bradleymeck: seems the protected and inheritence are a bit overkill probably
[03:49] bradleymeck: plus getting multiple ptr derefs from all casts on it if im not mistaken
[03:50] cloudhead has joined the channel
[03:50] bradleymeck: though i am trying to figure out why External::Wrap to External::Unwrap arent matching up
[03:55] bradleymeck: k window creation is ok, working on loading images now
[03:58] _TS has joined the channel
[03:58] jbenesch has joined the channel
[04:04] noahcampbell has joined the channel
[04:04] bradleymeck: is the preferred way to handle a c++ object w/ events through a obj.getEvent interface to give it their own thread?
[04:05] mikew3c_ has joined the channel
[04:05] orlandov: fg
[04:05] bradleymeck: fg?
[04:05] orlandov: hehe wrong window :)
[04:08] bradleymeck: guess ill pool all the c++ eventers into a single thread
[04:09] orlandov: what's going on with threads?
[04:11] bradleymeck: got a c++ library that emits from an obj.getEvent, trying to figure out how to manage all the instances of obj that might be spawned (figure just throw them in a stl vector thats iterated in a thread is enough)
[04:11] bradleymeck: though not sure when to use a destructor to clear that vector
[04:13] orlandov: what is obj.getEvent? i don't think i'm familiar with that
[04:13] aaronblohowiak: any connect experts here?
[04:13] bradleymeck: its from sfml
[04:13] bradleymeck: aaronblohowiak, im fair
[04:15] aaronblohowiak: bradleymeck: how would I use connect but have my own http.createServer(fn) so i can still use socket.io ?
[04:15] atourino has joined the channel
[04:16] bradleymeck: idk thats more a socket.io question, i know node-websocket-server can accept a connect server as one of its options {server:connect.createServer(...)}
[04:17] aaronblohowiak: bradleymeck: ah ok. thanks
[04:18] pquerna: http://journal.paul.querna.org/articles/2010/09/04/limiting-concurrency-node-js/
[04:20] ryah: would people mine if node took SIGUSR1 ?
[04:20] ryah: mind
[04:20] ryah: i want to define an action on it in node. (namely open a unix socket serving the REPL)
[04:21] aaronblohowiak: bradleymeck: it looks like that "just works" with socket.io
[04:21] pquerna: ryah: yeah. i would. kinda. there are some other less used signals.
[04:21] Aria: Yeah, that'd surprise me, too.
[04:21] ryah: pquerna: what do you suggest?
[04:22] pquerna: SIGWINCH?
[04:22] Aria: Dear god no.
[04:22] Aria: The minute you move your terminal that fires.
[04:22] pquerna: hmm
[04:22] pquerna: sorry, i was just looking at what httpd used for hacky things
[04:23] Aria: SIGINFO?
[04:24] pquerna: SIGINFO is portable?
[04:25] pquerna: "On Linux, SIGINFO is a synonym for SIGPWR"
[04:25] pquerna: power outage, spin up the repl.
[04:27] Aria: Gotta love unix. Oy.
[04:28] manveru: "On some operating systems, the Boehm garbage collector uses SIGXCPU and SIGPWR to synchronise cross-thread garbage collection."
[04:29] pquerna: yeah. the jvm can use user1/2 too :0
[04:30] manveru: isn't usually usr1 for config reloads?
[04:30] Aria: That's usually HUP
[04:31] Aria: USR1 is usually more esoteric.
[04:31] Aria: But usually user-defined, I'd expect it to be free for a programmer to use.
[04:31] ryah: hm
[04:31] pquerna: yes, i'd be unhappy if node took HUP.  USR1 I could live without I guess.
[04:31] pquerna: not many choices really.
[04:31] ryah: USR1!
[04:31] Aria: Yeah, could. But it'd be confusing.
[04:33] jamescarr_ has joined the channel
[04:34] ryah: hm
[04:34] ryah: yeah, signals suck.
[04:34] orlandov: woot, just about finally finished with the fetchAll branch for node-sqlite... its gonna be about 10x faster than stepping manually
[04:34] jamescarr_: ryah, finally got around to experimenting with the node-amqp stuff
[04:34] ryah: orlandov: cool
[04:34] pquerna: ryah: well, you could just always open a repl :|
[04:34] orlandov: *cough*at the expense of memory*cough*
[04:34] ryah: i'm mostly done with fast buffers - hopefully i'll get to land that soon
[04:35] orlandov: what's fast buffers?
[04:35] ryah: orlandov: gtg - i'll explain later
[04:35] orlandov: np
[04:36] Aria: How about realtime signals?
[04:36] orlandov: ACTION valgrinds
[04:36] pquerna: slicing a larger normal Buffer() up, in pure javascript;  Allocate a single 8kb block, when soeone makes a 10 byte Buffer, slice out of that.
[04:36] pquerna: (more or less)
[04:36] mikew3c has joined the channel
[04:37] orlandov: like a little memory pool but with buffers instead of pools i guess
[04:37] orlandov: rather than allocate every time?
[04:37] pquerna: yes
[04:37] orlandov: rad
[04:37] Aria: ... Not on MacOS. Sigh.
[04:38] pquerna: doing true memory pools is complicated massively by how its hard to know if something has been actually GCed
[04:38] lakin has joined the channel
[04:41] nerdEd has joined the channel
[04:42] nerdEd has joined the channel
[04:45] confoocious has joined the channel
[04:47] kriskowal has joined the channel
[04:57] Utkarsh has joined the channel
[05:00] voodootikigod__ has joined the channel
[05:13] edw`` has joined the channel
[05:15] paulwe has joined the channel
[05:19] jetienne has joined the channel
[05:21] James29 has joined the channel
[05:22] James29: hello
[05:24] James29: quick question for a noob http://pastie.org/1139012.txt
[05:26] James29: any ideas
[05:30] Egbert9e9 has joined the channel
[05:43] cognominal has joined the channel
[05:44] jetienne: James29: i highly suspect the end of the file is buffered
[05:44] Utkarsh has joined the channel
[05:44] jetienne: so you see only the last time the buffer was full
[05:45] James29: can you explain
[05:45] James29: okay
[05:45] James29: if i choose this
[05:45] James29: setInterval(function () { fs.writeFile("test.txt", channel.join(" "), encoding='utf8');  },6*1000);
[05:45] James29: it works fine
[05:45] James29: sorrry
[05:45] James29: that  doesnt work
[05:46] James29: setInterval(function () { fs.writeFile("test.txt", "hlllo", encoding='utf8');  },6*1000);
[05:46] James29: that works
[05:46] James29: (can you advise how to append)
[05:46] jetienne: here i suspect channel.join(' ') is not the value you espect
[05:46] jetienne: about append only let me look
[05:47] James29: (where do you find a list of all the options for these functions etc)
[05:47] jetienne: fs.open(path, flags, mode=0666, [callback]) <- with flags = "a+"
[05:48] James29: err okay, thanks
[05:48] jetienne: fs.write(fd, str, position, encoding='utf8', [callback]) <- then this
[05:48] jetienne: http://nodejs.org/api.html the api is here
[05:48] James29: do i need to close then?
[05:48] jetienne: yep
[05:49] James29: which is ...
[05:49] jetienne: hehe
[05:49] jetienne: just click on the api.html url
[05:49] James29: okay
[05:49] jetienne: you will need it to get the rest of the API anyway
[05:50] mattikus has joined the channel
[05:52] James29: im a noob at this, my plan is just to output the list of messages to a text file than parse that using ruby
[05:53] kriskowal has joined the channel
[05:53] micheil has joined the channel
[05:55] ezmobius has joined the channel
[05:56] aaronblohowiak: why have a setinterval at all?
[05:58] James29: i dont know
[05:58] James29: noob idea
[05:58] aaronblohowiak: James29: you can just append with every message
[05:58] James29: what would you recommed
[05:58] James29: i would like to do that i just dont know how
[05:59] aaronblohowiak: James29: the file mode will be "a"
[05:59] aaronblohowiak: then it will append instead of truncate
[05:59] jetienne: mouamoua i did easy_install a package... and no way i can remove it :) i guess uninstall is not that easy :)
[05:59] James29: can anyone just give me example function to do this
[05:59] James29: im going around in circles
[06:00] ezmobius has joined the channel
[06:00] cognominal has joined the channel
[06:00] James29: my starting code is the example node chat
[06:00] jchris has joined the channel
[06:00] James29: i trying to add logging
[06:04] qFox has joined the channel
[06:04] James29: so http://github.com/ry/node_chat/blob/master/server.js#L46
[06:04] James29: i have added this to that line
[06:04] James29: fs.writeFile("test.txt", "hlllo", encoding='utf8');
[06:05] James29: what i would like is to append the latest message
[06:09] bpot has joined the channel
[06:14] ryah: pquerna: do you know that there is a currentClient counter in node.js already?
[06:15] ezmobius has joined the channel
[06:15] ryah: pquerna: http://github.com/ry/node/commit/4593c049592d1dda6f61279887474bac132bb5ab
[06:16] ryah: it needs some more testing
[06:16] ryah: michiel reported some errors
[06:16] ryah: but generally i think this is good to have in core
[06:21] Utkarsh has joined the channel
[06:22] orlandov: ryah: would it be crazy to chain eio_custom calls?
[06:23] aaronblohowiak: James29: try opening the file for writing in the append mode and then writing out updates to it
[06:23] orlandov: so that the after function set up a new eio_custom job
[06:23] ryah: orlandov: i think that should be okay
[06:23] ryah: orlandov: but why not just do it in the thread you currently have?
[06:24] ryah: don't wnt to lock up one of the threads for too long?
[06:24] orlandov: maybe... i was trying to think of ways to avoid buffering a bunch of data in one thread
[06:25] orlandov: i was thinking i could chain eio_custom calls and start building the result set, like 10 results at a time
[06:25] orlandov: or soemthing like that
[06:25] ryah: but then they need to be buffered in the main thread after?
[06:25] ryah: or would you callback into js?
[06:26] John9e9 has joined the channel
[06:26] orlandov: i'd go into the sqlite thread, grab 10 rows, go back into v8, append it to my results, go into sqlite thread, etc
[06:26] orlandov: all from c++
[06:26] ryah: ah
[06:27] orlandov: so i'm not building a big result set in the sqlite thread and then building another resultset of v8 objects
[06:27] ryah: yeah
[06:27] ryah: sounds good
[06:27] orlandov: maybe it'd be slower
[06:27] orlandov: who knows :)
[06:28] orlandov: seemed like an interesting pattern at least
[06:30] ceej has joined the channel
[06:38] sveimac has joined the channel
[06:38] mikew3c has joined the channel
[06:39] Utkarsh has joined the channel
[06:43] mikew3c has joined the channel
[06:44] mikew3c has joined the channel
[06:46] MikhX has joined the channel
[06:49] mikew3c has joined the channel
[06:54] sh1mmer: was anyone looking for me?
[06:54] sh1mmer: my irc was bouncing
[06:57] vnguyen has joined the channel
[07:00] breccan has joined the channel
[07:05] _TS has joined the channel
[07:05] pquerna: ryah: nice, didn't know about that.
[07:06] Utkarsh has joined the channel
[07:07] pquerna: ryah: though accepting the connection and then closing it.. mm.
[07:23] freeall has joined the channel
[07:25] mischief has joined the channel
[07:26] Utkarsh has joined the channel
[07:26] mischief has joined the channel
[07:29] dantalizing_ has joined the channel
[07:31] keyvan has joined the channel
[07:32] [[zz]] has joined the channel
[07:34] V1 has joined the channel
[07:35] jetienne: q. is there a "identator" for js... like gnu ident for c/c++?
[07:37] satori_ has joined the channel
[07:38] mikew3c has joined the channel
[07:39] fyskij has joined the channel
[07:40] altamic has joined the channel
[07:46] ly- has joined the channel
[07:46] ly- has joined the channel
[07:48] Utkarsh has joined the channel
[07:52] drewlesueur has joined the channel
[07:54] konobi: jetienne: lot's of text editors have that functionality... there's also googles closure linter
[07:55] bpot has joined the channel
[07:55] jetienne: konobi: closure linter is tunable ? and able to change my source ? i tried and saw only a "you are not using google-liked identation", did i miss it ?
[07:55] jetienne: konobi: which editor ?
[07:58] Egbert9e9 has joined the channel
[07:59] AAA_awright_ has joined the channel
[07:59] drewlesueur_ has joined the channel
[08:00] AAA_awright_ has joined the channel
[08:00] mikeal has joined the channel
[08:01] margle has joined the channel
[08:03] Nohryb has joined the channel
[08:05] SamuraiJack has joined the channel
[08:06] altamic has joined the channel
[08:06] derferman has joined the channel
[08:07] jblol has joined the channel
[08:08] jakehow has joined the channel
[08:15] Utkarsh has joined the channel
[08:18] Dmitry1 has joined the channel
[08:18] phiggins has joined the channel
[08:19] nuba has joined the channel
[08:22] pdelgallego has joined the channel
[08:28] Cainus: hey all...is node.dbslayer.js the preferred way to talk to mysql?
[08:28] peutetre has joined the channel
[08:31] [[zz]] has joined the channel
[08:31] tekky has joined the channel
[08:32] aliem has joined the channel
[08:37] breccan has joined the channel
[08:41] herbySk has joined the channel
[08:42] aubergine has joined the channel
[08:43] Tim_Smart has joined the channel
[08:55] SvenDowideit_ has joined the channel
[08:55] mikew3c has joined the channel
[08:55] stephank has joined the channel
[09:04] SamuraiJack has joined the channel
[09:06] AAA_awright: Cainus: node-mysql-libmysqlclient is what I just ended up using I have no clue if it's the best, it works though
[09:10] Tim_Smart: http://github.com/felixge/node-mysql is good I hear.
[09:10] ryah: SIGPIPE is gree..
[09:10] ryah: free
[09:10] ryah: Tim_Smart: ive been working on fast buffer stuff
[09:10] ryah: using your code
[09:11] Tim_Smart: ryah: *happy face*
[09:11] ryah: pquerna: there's no way to no way to reject the connection
[09:11] Tim_Smart: ryah: Yeah my code was making me feel dirty for some reaason.
[09:11] ryah: pquerna: without accepting and closing - it's surprised me
[09:12] ryah: pquerna: and SIGPIPE can be used for the repl
[09:12] ryah: Tim_Smart: im redoing the c++ stuff
[09:12] Tim_Smart: Good. I'm not good at C++
[09:13] CIA-77: node: 03Ryan Dahl 07fast-buffer * r9b22093 10/ (4 files): Work to get C++ fast buffers. incomplete (+5 more commits...) - http://bit.ly/amQRTP
[09:13] ryah: Tim_Smart: http://github.com/ry/node/tree/fast-buffer
[09:13] breccan has joined the channel
[09:14] BrianTheCoder has joined the channel
[09:14] ryah: Tim_Smart: pretty messy - i'll clean it up before i land
[09:16] Tim_Smart: ryah: You still have to go through all the crypto stuff etc?
[09:16] ryah: Tim_Smart: yeah - but even this isn't working yet
[09:16] ryah: so still needs some work
[09:16] Tim_Smart: ryah: OK right.
[09:17] zomgbie has joined the channel
[09:17] ryah: Tim_Smart: the main part: http://github.com/ry/node/blob/9b2209365238d1b283f79cfc3577ec245c300d15/src/node_buffer.cc#L156-187
[09:18] ryah: just going to use those in all the c++ areas..
[09:19] ryah: like here: http://github.com/ry/node/blob/9b2209365238d1b283f79cfc3577ec245c300d15/src/node_net.cc#L736-743
[09:20] Tim_Smart: So all that remains is migration?
[09:20] ryah: well - it needs to work first :)
[09:20] Tim_Smart: :) Got any idea why it isn't working currently?
[09:21] ryah: nope but test/simple/test-buffer.js doesn't pass.
[09:23] Tim_Smart: If I get around to some testing, I'll ping you back.
[09:25] ryah: cool
[09:27] ryah: going to work on it tomorrow too - i'll push to that branch if i work more
[09:28] konobi: ryah: wow... you're up late
[09:28] ryah: konobi: you too
[09:29] konobi: migraines on and off =0/
[09:30] konobi: been reading on the kindle though, so not all bad
[09:31] konobi: ryah: how goes the fast buffer stuff?
[09:34] Tim_Smart: It goes fast.
[09:34] Tim_Smart: :p
[09:34] herbySk: Tim_Smart: :-)
[09:35] Tim_Smart: Not as fast as v8 strings though - which is disappointing.
[09:37] herbySk: Tim_Smart: So why not use them instead (they will always be as fast as v8 team makes it possible)?
[09:37] Tim_Smart: herbySk: When you get data larger than so many bytes, V8 strings start to get very slow.
[09:38] herbySk: Tim_Smart: aha...
[09:38] herbySk: It provokes me a little go look into it... but I'm lazy for the moment...
[09:38] V1: Does anybody else have issues with the Joyent no.de server?
[09:38] V1: It doesn't update my github pushes anymore. It just users the same old version over and over again
[09:39] Tim_Smart: V1: Yeah I did a couple days ago, but I did a rm -rf repo/*
[09:39] konobi: V1: have you checked your logs?
[09:39] Tim_Smart: (thinking the stuff in there wasn't that magical)
[09:39] V1: konobi: The logs say the deployment was sucessfull
[09:39] Tim_Smart: Now it refuses to start my server.
[09:40] Tim_Smart: Even after re-inserting the post-receive hook.
[09:40] konobi: V1: have a look at your post-receive hook to see what it's up to
[09:41] Nohryb has joined the channel
[09:41] V1: konobi: Is there a log for it?
[09:41] Tim_Smart: V1: ssh in and do a node-service-restart
[09:41] V1: btw these are the responses: http://gist.github.com/565895
[09:42] V1: server restarts still show old github updates
[09:42] konobi: V1: have you read the contents of the post-receive hook script?
[09:43] V1: konobi: I just logged in to the server and have it open atm
[09:43] konobi: there's really nothing magical that we're doing, it's all just there
[09:44] V1: Yeah and it should all just work fine by the look of the hook
[09:44] altamic has joined the channel
[09:44] konobi: I also saw in your push message "remote: No submodule mapping found in .gitmodules for path 'vendor/io.server/example/client'"
[09:44] V1: If I messed up something I would etiher get rollback message or the site would go in to maintenance but those are not the case
[09:45] V1: Yup, but that is just and example app, not the code that my app depends on 
[09:46] claudiu__ has joined the channel
[09:46] konobi: hhhmmm...
[09:47] V1: The only  thing might needs to be changed on the post hook is that it does a github checkout recursive
[09:47] V1: hmz nvm thats when you cloning.
[09:49] V1: I can check it's maybe because I'm using submodules, I can remove the submodules and just add it normally in to my vendor dir.
[09:51] konobi: yeah submodules are fine for development, but a PITA for deployment
[09:54] Tim_Smart: konobi: You should support npm and package.json
[09:55] Tim_Smart: Parse the package.json and install the dependencies.
[09:56] konobi: Tim_Smart: you can use npm if you want
[09:57] Tim_Smart: konobi: Yeah, I guess I could manually modify the post-receive
[09:58] konobi: or do it by hand
[09:59] Tim_Smart: I got npm installed on my test instance (timsmart.no.de) except it doesn't seem to want to run my server.js. I might try deploy a basic hello world some time later.
[09:59] konobi: over the years i've learnt never to rely on "smart" tools to deal with your deployment... always make sure that you have a way to ensure your deployment environment is exactly the way you  need it to be to run your service
[10:00] Tim_Smart: Yeah I personally deploy most of my stuff via ssh
[10:00] konobi: this has ranged from tools that did SSH and a bunch of tests before pushing, through to providing a full disk image of an operating system along with the software
[10:01] konobi: Tim_Smart: did you setup an .npmrc ?
[10:01] Tim_Smart: Yeah.
[10:01] Tim_Smart: npm works fine, just had to modify the profile
[10:01] konobi: and iirc you need to set $HOME in node-service/profile
[10:05] mikew3c_ has joined the channel
[10:06] jetienne: i need a uber simple post client in node, any suggestion on where i can get that ?
[10:06] V1: konobi: the submodules seemed to the issue indeed
[10:07] V1: konobi: I completely removed them and re-added it with out references to .git and it seems to be working again
[10:08] Tim_Smart: konobi: Here is the error I get heaps of: "[ Sep  5 10:07:38 svc.startd could not set context for method:  ]"
[10:08] zorzar has joined the channel
[10:09] konobi: Tim_Smart: sounds like you're not pushing a server.js that's valid
[10:09] Tim_Smart: :/
[10:09] konobi: try a simple hello world server.js to begin with
[10:09] Tim_Smart: I did
[10:09] Tim_Smart: That listened on port 80
[10:10] Tim_Smart: Feel free to reset my instance if you want
[10:11] konobi: Tim_Smart: huh... odd
[10:11] MattJ has joined the channel
[10:15] konobi: Tim_Smart: for some reason you release dir never gets created
[10:16] Tim_Smart: Yeah I noticed that.
[10:16] Tim_Smart: Not sure why.
[10:16] zomgbie has joined the channel
[10:16] Tim_Smart: Actually I thought it did, the script rm's it if something fails I think.
[10:17] Tim_Smart: It creates the .clone fine.
[10:17] V1: Ha, speedo might actually pass saber-tooth-moose-lion in unique connections today :D
[10:17] V1: only 1000 unique connections to go :)
[10:19] konobi: Tim_Smart: try pushing now
[10:20] Tim_Smart: konobi: I will soon, doing something else atm.
[10:21] konobi: V1: so you're all good?
[10:22] V1: konobi: Yes its all working again after removing doing git rm --cached on all my submodule based files and re-adding them
[10:23] konobi: gd gd
[10:24] konobi: V1: does the heatmap demp not work in chrome?
[10:25] konobi: V1: NB: submodules are a poor deployment technique... it's possible in future we may not support them at all
[10:26] V1: konobi: It's good to know, and for the chrome support, i probably killed it during all removing and adding the files
[10:26] konobi: it may also be that i'm blocking flash and adverts
[10:26] konobi: =0)
[10:26] V1: konobi: If you click on confetti view, you will notice that it does work :p
[10:27] V1: I just have a small issue with clearing the canvas in chrome, so i need to patch around that
[10:28] konobi: no luck from here =0/
[10:31] V1: konobi: I seem to completely killed it :p It should be working again in a hour or so after I sorted out my renderer patches lol
[10:31] konobi: heh
[10:32] V1: But thanks for the heads up :)
[10:32] herbySk: What is this no.de server that says "join the fight"?
[10:34] V1: konobi: I actually have it working here again after clearing my whole browser cache
[10:35] V1: But it does take a while for Google Chrome windows to actually update with the clicks.. I have no clue why. Google Chrome on a mac is almost instant
[10:36] mikew3c has joined the channel
[10:40] rne1223 has joined the channel
[10:46] V1: I just noticed while watching the Speedo heat map that we deployed on hotels.nl that allot of users are actually clicking in the center of a button. Didn't even know that :p
[10:51] pufuwozu has joined the channel
[10:53] Blink7 has joined the channel
[10:53] Utkarsh has joined the channel
[10:56] MrTopf has joined the channel
[10:58] pufuwozu has joined the channel
[11:01] markoa has joined the channel
[11:02] markoa: Hi. I just built node from git and ran the hello example from the homepage. First it says "ReferenceError: console is not defined", then when I comment that out "TypeError: Object #<a ServerResponse> has no method 'writeHead'" ?
[11:03] pufuwozu has joined the channel
[11:07] frekw_: 3/part
[11:07] frekw_ has left the channel
[11:07] frekw_ has joined the channel
[11:08] xla has joined the channel
[11:12] pufuwozu has joined the channel
[11:19] pufuwozu has joined the channel
[11:22] breccan has joined the channel
[11:26] femtoo has joined the channel
[11:28] pufuwozu has joined the channel
[11:33] easternbloc has joined the channel
[11:34] d0k has joined the channel
[11:36] pufuwozu has joined the channel
[11:37] ben_alman has joined the channel
[11:37] mbrochh has joined the channel
[11:39] Nohryb has joined the channel
[11:39] genbit has joined the channel
[11:43] xla has joined the channel
[11:44] ben_alman has joined the channel
[11:47] wakawaka has joined the channel
[11:52] Utkarsh has joined the channel
[11:55] ph^ has joined the channel
[12:04] Utkarsh has joined the channel
[12:05] sveimac has joined the channel
[12:08] rnewson has joined the channel
[12:10] zomgbie has joined the channel
[12:11] pufuwozu has joined the channel
[12:13] sveimac has joined the channel
[12:18] maushu has joined the channel
[12:18] herbySk has joined the channel
[12:22] Nohryb has joined the channel
[12:23] herbySk: Tim_Smart: Buffers were always created from the strings so that length of the buffers was set to length of the string? Because then, it only works for certain enconding, with UTF8 and non-ASCII chars write fails to copy string into buffer...
[12:23] Tim_Smart: buffers were either created with a number, string or array
[12:24] Tim_Smart: Oh nevermind...
[12:25] Tim_Smart: Yeah, UTF8 character length doesn't always equal size in bytes.
[12:27] herbySk: And is it ok that buffer size is the size of the string so it does not accompany all of the string (or throws an error)?
[12:27] herbySk: Tim_Smart: ^^^
[12:28] mr-rock has joined the channel
[12:29] mbrochh has joined the channel
[12:30] Tim_Smart: Hmm, yeah. Node's utf8 support is whacked.
[12:31] konobi: yeah, the fast buffer branch seems to be all messed up due to length being "odd"
[12:31] herbySk: Tim_Smart: Also, line 200-204 is lib/buffer.js does not prevent an overflow in case of utf8, it is false sense of security
[12:31] Tim_Smart: Oh no it isn't
[12:32] Tim_Smart: "Τη γλώσσα μου έδωσαν ελληνική" is 29 characters, which creates a buffer with length 54
[12:32] herbySk: s/is lib/in lib/
[12:32] Tim_Smart: .toString() puts its back to a string with length 29
[12:33] confoocious has joined the channel
[12:33] herbySk: Tim_Smart: with fastbuffers? Looking at the code, I see that length of the buffer is set to length of the string (line 115)
[12:34] mikew3c has joined the channel
[12:34] andineue has joined the channel
[12:34] Tim_Smart: Yeah it should be set to Buffer.byteLength(string)
[12:35] mikew3c has joined the channel
[12:35] konobi: herbySk: are you taking into account the magic going on under the covers?
[12:35] Blackguard has joined the channel
[12:36] herbySk: Tim_Smart: Then, something like Buffer.byteSlice should be used at line 203 (and Buffer.bytLength at line 202), too.
[12:36] herbySk: konobi: what one?
[12:37] herbySk: s/what/which/
[12:39] Tim_Smart: herbySk: Yeah thanks. I'll send a patch to ryah
[12:42] confoocious has joined the channel
[12:47] maushu has joined the channel
[12:50] zorzar: hey, i have a problem with requireing a lib in a module. i have a server.js in my root, then i have a vendor dir that includes Socket.IO-node which has lib/socket.io; my module is in /lib/myModule/myModule.js in /lib/myModule/index.js i define my exports. this works. in myModule.js i want to require socket.io. the __dirname is my root and i do var io = require('Socket.IO-node/lib/socket.io') in my 
[12:50] zorzar: server.js i have require.paths.unshift(__dirname + "/vendor"); i don't get an error when requireing socket.io, but io is undefined
[12:50] pufuwozu has joined the channel
[12:51] konobi: Tim_Smart: even with just using numbers, the length's that are computed seem to be off somehow
[12:52] Tim_Smart: konobi: For fast buffers?
[12:52] konobi: indeed
[12:53] konobi: Buffer(512) seems to give me an internal length of 8192
[12:54] Tim_Smart: So Buffer(512).length is 8192?
[12:54] Tim_Smart: (new Buffer(512).length)
[12:56] konobi: Tim_Smart: try adding `  fprintf(stderr, "---> length: %d\n", (int)length);` to Buffer::Buffer
[12:56] konobi: then running test/simple/test-buffer.js
[12:57] Tim_Smart: konobi: Fast Buffer just uses old Buffers as a memory pool
[12:57] herbySk: konobi: it's ok, C++ Buffer is JS SlowBuffer, which is always allocated in chunk of 8192 for use is fastbuffers.
[12:58] konobi: ah
[12:58] jimi_ has joined the channel
[12:58] jimi_: hello
[12:58] jimi_: appending to file
[12:58] jimi_: and prepending to file im having trouble
[12:59] jchris has joined the channel
[12:59] pufuwozu has joined the channel
[13:00] konobi: jimi_: fs.open
[13:00] konobi: see the flags section
[13:00] jimi_: link
[13:00] jimi_: ill show you what i got
[13:00] Tim_Smart: herbySk: Might need to add some more methods on to the SlowBuffer constructor in the C++ for slicing utf8 strings etc.
[13:00] Tim_Smart: Unless...
[13:03] jimi_: konobi: http://pastie.org/1139487.txt
[13:03] jimi_: what is postion (is it line number)
[13:03] herbySk: Tim_Smart: Yes, something like utf8ByteSlice... unless... charLengthOfUtf8Bytes(string, byteLength) would be enough, then you can do legacy slice
[13:03] konobi: Tim_Smart: ah... well apparently the Copy stuff isn't aware of the fact that the internal length is now "different"
[13:04] Tim_Smart: konobi: Fast Buffers are all ecmascript
[13:04] skampler: how does fast buffers work?
[13:05] jimi_: all im getting is errors
[13:06] konobi: jimi_: see pwrite(2)
[13:07] herbySk: skmapler: for small lengths, they just wrap a slice of a 8192-byte pool (evetually allocating one, if there is no more place), for bigger lengths they allocate dedicated old Buffer and wrap all its contents
[13:08] genbit has joined the channel
[13:08] zorzar: ok wasn't a require but a scope problem
[13:09] jimi_: konobi: i googled around with that term, im too noob to understand
[13:09] skampler: herbySk: ah, thanks for the explanation
[13:10] konobi: jimi_: it's the position you want to write at... in append mode, you probably want that to be 0
[13:10] jimi_: okay
[13:10] jimi_: yeah i tried 0 
[13:14] Tim_Smart: herbySk: OK that is all I have time for tonight http://github.com/Tim-Smart/node/commit/74bf001d23c6919ac422e273e8e059ee0c3dd3f2.patch
[13:14] Blink7 has joined the channel
[13:15] jimi_: konobi:http://pastie.org/1139503.txt
[13:16] xla_ has joined the channel
[13:16] konobi: that's because you haven't defined the variable fs
[13:17] jimi_: oooh
[13:17] jimi_: okay
[13:19] Cainus: anyone know if anyone's written any kind of orm-like library?
[13:19] jimi_: okay fixed that new error (http://pastie.org/1139513.txt)
[13:19] jimi_: thanks for being patient
[13:22] temp01 has joined the channel
[13:22] mikew3c: Cainus: what's orm?
[13:23] delapouite has joined the channel
[13:23] jimi_: a;; good
[13:23] jimi_: how do you close off a file
[13:23] Cainus: mike: it turns database rows into objects
[13:25] rnewson has joined the channel
[13:25] rnewson has joined the channel
[13:25] jimi_: konobi: http://pastie.org/1139520.txt
[13:25] mikew3c: ah, marshalling
[13:25] mikew3c: (I guess)
[13:26] Cainus: hmm not really
[13:26] mikew3c: er, Ok
[13:26] mikew3c: ACTION shuts up
[13:26] Cainus: that'd be part of it though
[13:26] pufuwozu has joined the channel
[13:27] Cainus: the only thing I really want it for is so I don't have to write SQL :)
[13:29] konobi: jimi_: writeFile != write
[13:31] jimi_: konobi: yes
[13:31] jimi_: konobi: i tried that but then got more errors
[13:33] konobi: jimi_: you're missing some of the obvious points to using an async language like javascript along with the low-level api that node exposes...
[13:33] konobi: note that the documentation states [callback] for a reason
[13:33] jimi_: konobi: im sorry, im just tring to hack together a log for the example node chat
[13:33] konobi: jimi_: I'd suggest you have a look at some pre-existing examples on github or the like
[13:34] jimi_: konobi: okay
[13:37] jimi_: konobi: would this be a good starting point http://howtonode.org/control-flow-part-ii/file-write.js, what do i need to change
[13:37] jimi_: noo
[13:38] konobi: jimi_: indeed
[13:40] evanpro has joined the channel
[13:43] zapnap has joined the channel
[13:44] jimi_: konobi: this http://pastie.org/1139545.txt seems to work, can you give total noob friendly explaination what the "err" stuff does
[13:46] zorzar has joined the channel
[13:48] Cainus: i'm trying to wrap an asynch call in a synchronous one... how do I wait for the result so I can return it?
[13:48] rubydiamond has joined the channel
[13:48] sideshowcoder has joined the channel
[14:02] pufuwozu has joined the channel
[14:02] Astro: Cainus: you can't
[14:03] Astro: what you're looking for is callcc
[14:03] Astro: no idea if that's available in *any* js implementation
[14:03] jamescarr: anyway to have embedded anchor tags in haml or jade?
[14:03] jamescarr: creating a newline for every anchor feels... odd
[14:04] jamescarr: especially if you link every other item in a comma separated list that is in a setnence
[14:06] ly- has joined the channel
[14:06] ly- has joined the channel
[14:12] claudiu__ has joined the channel
[14:21] maushu has joined the channel
[14:21] rnewson has joined the channel
[14:26] aubergine has joined the channel
[14:29] Tim_Smart: Heh using prototypes instead of flat functions used around 5x less RAM in my music indexer.
[14:29] bradleymeck: flat functions? or functions attached to "this"
[14:30] Nohryb has joined the channel
[14:31] jchris: n00b question: what's the node.js idiomatic way to merge objects? like $.extend() ...
[14:32] rnewson has joined the channel
[14:33] icozzo has joined the channel
[14:33] bradleymeck: there isnt an idomatic way, it should be pretty rare that you have to use that, else you tank perf
[14:34] jchris: I just want to set some defaults on an options object
[14:34] bradleymeck: Object.keys(defaults).forEach(function(key){x[key]=defaults[key]})
[14:37] Tim_Smart: bradleymeck: Just normal functions attached to nothing.
[14:37] bradleymeck: yea, :)
[14:37] bradleymeck: closures and ptrs will be pretty hefty if they stack up
[14:37] konobi: Tim_Smart: Resig covered that in his talk
[14:37] konobi: the advanced JS talk
[14:38] Tim_Smart: Yeah it makes it a lot easier to not keep reference to anything.
[14:39] bradleymeck: i want to make an optimizer that removes all refs and goes pure functional for js, but thats a ways off like a year
[14:39] Zuardi has joined the channel
[14:40] konobi: bradleymeck: there's always googles compiler thing... i'm sure it would be pretty interesting to tweeze apart
[14:40] bradleymeck: im working with inimino's parser slowly, having it all in js would let me write a js compiler in js which would make me giggle
[14:41] konobi: narcissus?
[14:42] konobi: http://www.neilmix.com/narrativejs/doc/
[14:42] konobi: ah... http://mxr.mozilla.org/mozilla/source/js/narcissus/
[14:43] claudiu__ has joined the channel
[14:43] jamescarr: okay so who here is a mac nut? I need to see something in safari super quick
[14:44] zemanel: i am
[14:44] zemanel: jamescarr, ping
[14:44] jamescarr: http://strangepassions.heroku.com/
[14:44] zemanel: ermm porn?
[14:44] jamescarr: can you take a screenshot of that real quick? :)
[14:45] jamescarr: yes, strange passionate porn :-P
[14:45] jamescarr: no, just a piece to a conference site
[14:45] jamescarr: I'm mimicking the existing look of it
[14:45] jamescarr: just want to make sure the page looks right with the nav bar
[14:46] zemanel: breaks
[14:46] jamescarr: hahahhaha
[14:46] jamescarr: lovely
[14:46] jamescarr: screenshot?
[14:46] zemanel: 1 sec
[14:46] jamescarr: I am guessing it breaks after the strange passion tab
[14:48] jamescarr: I wonder what it is about that hat webkit dislikes
[14:49] zemanel has joined the channel
[14:50] jamescarr: I see now
[14:51] konobi: jamescarr: http://browsershots.org/
[14:51] zemanel: jamescarr, did you get the file overdcc?
[14:51] pufuwozu has joined the channel
[14:52] jamescarr: no
[14:52] geliu_kioskas has joined the channel
[14:54] zemanel: damn
[14:56] freeall has joined the channel
[14:57] jamescarr: just post it somewhere?
[14:58] zemanel: do you have skype?
[15:01] zemanel: jamescarr, check http://dl.dropbox.com/u/3645517/shot1.tiff n a sec
[15:03] chrischris has joined the channel
[15:04] xla has joined the channel
[15:05] programble has joined the channel
[15:08] dnolen has joined the channel
[15:09] easternbloc has joined the channel
[15:11] sveisvei has joined the channel
[15:12] webr3: why is node.js so awesome?
[15:13] lianj: the hype? ;)
[15:13] bradleymeck: because it can be extended w/ c libraries
[15:13] bradleymeck: without the pain of rhino
[15:14] easternbloc: agree with lianj all hype :)
[15:14] MrTopf has joined the channel
[15:14] webr3: must be more to it than that - hype doesn't mean anything and extending w/ c libraries can be done on many platforms
[15:15] easternbloc: webr3 well yeah
[15:15] easternbloc: but what are you looking for?
[15:15] easternbloc: its a tool suited to a problem like anything else
[15:15] webr3: which problem(s) and why is it suited?
[15:16] webr3: ACTION is rather interested to know why (other) people are using node.js
[15:17] easternbloc: i'd just suggest you do some reading
[15:17] Cainus: webr3: easy networking + concurrency + javascript
[15:18] webr3: cainus, ty :)
[15:18] webr3: cainus, benefit of javascript?
[15:18] easternbloc: closures
[15:18] easternbloc: and its javascript
[15:19] Cainus: if you like python better, there's twisted... if you like ruby better, there's eventmachine
[15:19] Cainus: I like javascript better
[15:19] easternbloc: webr3: non blocking io but again this is all stuff you can read about
[15:19] bradleymeck: webr3 i can take parts of my work's bad website and move it to the command line instead of waiting on our backend to so stuff
[15:20] webr3: btw I'm a big fan of node.js and ecmascript-262 v3 & v5 and use them daily, but I'm geniunly interested in other peoples reasons and if they realised just why it's so awesome :)
[15:21] easternbloc: webr3: you know I don't get that time back :) I've got code to fix!
[15:21] webr3: easternbloc, if you feel robbed I'll help you fix your code lolol
[15:22] easternbloc: :)
[15:22] easternbloc: I just don't know much about oauth at the moment and I can't get twitter to redirect after I've authed with it :(
[15:24] Ezku has joined the channel
[15:26] Cainus: anyone know how I can make asynch stuff synchronous?  Is there a wait() or join() or something?
[15:26] Cainus: like if I wanted to read two files asynchronously and then return the concatenated version synchronously
[15:27] webr3: Cainus, node.js gives a both async and sync methods to the file system
[15:28] Cainus: right... so I want to use the asynch version to read two files at once... then I want to add the files together, and return that big file
[15:28] webr3: but generally by using eventing, if you implement with async methods, then before the return fo each one you check if all the 'work needed' is complete, if it is then dispatch another event which you hook on to, if not then mark that single bit of work as done and return
[15:28] Cainus: the question is how to wait until the two callbacks are complete
[15:29] jamescarr_ has joined the channel
[15:30] Cainus: busy loop-while-not-done seems like the wrong solution
[15:30] webr3: yup loop while is wrong, as above dispatch another envent when done
[15:30] bradleymeck: cainus that is not recommended unless everything in all of the rest of the program depends on that sync operation before it
[15:30] bradleymeck: look into Step by creationix on github
[15:30] Cainus: bradleymeck: yeah it does depend on that
[15:31] feroz_ has joined the channel
[15:31] Cainus: webr3: ah... you have both handlers checking "if done"
[15:32] webr3: Cainus, almost, you have both handlers mark that they are done, and have another function called from each one which checks if all work is done, and if it is then emit an event to say works complete - similar to listening for onload on the DOM :)
[15:33] Cainus: yeah makes sense
[15:33] Cainus: thanks bradley: I'll keep that in mind for more complex stuff
[15:33] webr3: Cainus, XMLHttpRequest w/ readyState is a good example :)
[15:34] muk_mb has joined the channel
[15:38] bradleymeck: wth did jimbastard run off to
[15:45] zemanel has joined the channel
[16:01] V1 has joined the channel
[16:01] jamescarr_: MBP'rs... can you take a gander at http://strangepassions.heroku.com/ in safari and tell me if it looks kosher?
[16:01] jetienne has joined the channel
[16:02] easternbloc: kosher in what sense?
[16:03] maushu has joined the channel
[16:03] easternbloc: jamescarr_: how are those tabs supposed to look
[16:03] easternbloc: oh and thanks btw jamescarr_ I used your websockets example the other day on github :)
[16:05] John9e9 has joined the channel
[16:07] ph^ has joined the channel
[16:08] LFabien has joined the channel
[16:13] pufuwozu has joined the channel
[16:14] jacobolus has joined the channel
[16:14] mikew3c has joined the channel
[16:15] altamic has joined the channel
[16:23] njero_ has joined the channel
[16:24] genbit has joined the channel
[16:28] jpart has joined the channel
[16:29] rtomayko has joined the channel
[16:35] mau2 has joined the channel
[16:35] pufuwozu has joined the channel
[16:35] nolan_d: I'm trying to send data directly to an Express response using pump. Is there a way to access a writable stream for the res object?
[16:39] mikew3c has joined the channel
[16:39] Zuardi has joined the channel
[16:40] tekky has joined the channel
[16:42] evanpro has joined the channel
[16:42] Zuardi1 has joined the channel
[16:46] rne1223 has joined the channel
[16:46] rne1223 has left the channel
[16:47] mcarter_ has joined the channel
[16:53] mbrochh has joined the channel
[16:53] mbrochh has joined the channel
[16:58] Astro: nolan_d: res.socket
[16:58] nolan_d: Cool, thanks.
[16:58] Astro: iirc res.stream works too
[16:59] Astro: better refer to node/lib/http.js
[17:00] jetienne: http api need to change... a simple GET and simple server are way too hard
[17:01] Astro: I disagree :)
[17:01] Astro: though I always keep API docs & node src open
[17:04] bradleymeck: jetienne, it saves a dns lookup per request the way it is
[17:04] bradleymeck: you can use mikeals Request module for easier time
[17:04] Zuardi has joined the channel
[17:05] jetienne: bradleymeck: maybe but this is http GET. almost a core instruction when it comes to nodejs
[17:05] jetienne: it has to be doable without being http expert
[17:06] bradleymeck: true, but node tends to not hide what is actually happening, hiding the dns lookup would be a costly thing time wise, a dns lookup per rest api request could stack up time wise, if you just need a simple solution you can just use Request
[17:07] bradleymeck: if you can think of a way to preserve the dns without causing a 2nd request object etc feel free to propose it
[17:07] jetienne: to use third parties libraries is very costy
[17:07] jetienne: i prefere to spend 30min to code mine
[17:07] bradleymeck: true but dns is costly anyway so if you want to do one per request :/
[17:07] jetienne: dns is done only if you ask for it
[17:07] jetienne: you put ip address and it is ok
[17:08] bradleymeck: yep, but separating ip addrsss lookup and host lookup seems a bit odd when you get used to either
[17:09] jetienne: and having many people coding poor http client+server just because they are not http experts... is kinda odd too :)
[17:09] bradleymeck: how does it require being an expert right now?
[17:10] bradleymeck: node's aim was to be low level, but is always open to api changes that dont make it higher than it needs to be if it makes the coding more sensible
[17:11] pufuwozu has joined the channel
[17:11] jetienne: i found at least 2 bugs in others http clients
[17:11] jetienne: and more in my own :)
[17:12] bradleymeck: what bugs?
[17:12] rakeshpai has joined the channel
[17:12] jetienne: in mikael one it was an infinite loop on redirect
[17:12] jetienne: in pkrumins, it was a missing port in the header
[17:12] jetienne: notice they are not beginners
[17:12] jetienne: so imagine beginners
[17:13] bradleymeck: they fixed those i presume
[17:13] jetienne: dunno but irrelevant
[17:13] bradleymeck: using their libraries are going to be basically mimics of what node would do with a new api
[17:13] jetienne: experienced people get it wrong, beginners will do too
[17:14] bradleymeck: not sure about that, both those were doing more than simple http
[17:14] jetienne: nope, a 3rd party lib maintained by a "nobody" is not the same as core nodejs api
[17:14] bradleymeck: headers shouldnt be auto populated, redirects shouldnt automatically be followed
[17:14] jetienne: bradleymeck: nope, they were doing plain http GET and server
[17:14] nolan_d: OK, another question. Is it possible to make a single Express route match /foo, /foo/bar, /foo/bar/baz, etc.? * seems to require at least /foo/bar.
[17:14] bradleymeck: irrelevant both those 2 points stand for me
[17:15] jetienne: bradleymeck: well you assume there is mutual exclusion
[17:15] bradleymeck: i do
[17:15] bradleymeck: cause i want to know exactly what is sent
[17:15] jetienne: bradleymeck: why not a http.get() simple and the current http
[17:16] bradleymeck: nolan_d using a regular expression i would think so something like /\/foo(\/\w+)*/
[17:16] ajpiano has joined the channel
[17:16] bradleymeck: cause verb to name collisions for http extensions or future http
[17:16] nolan_d: Cool, not a huge fan of regexps but I'll try that. Thanks.
[17:16] ajpiano has joined the channel
[17:18] bradleymeck: im for an easier solution i just dont think the api is an easy thing to come up with, without going beyond nodes goal
[17:18] bradleymeck: ryah would have better input
[17:18] polotek has joined the channel
[17:19] jetienne: is there an explicit goal decribed somewhere ?
[17:22] mbrochh has joined the channel
[17:23] bradleymeck: no, but ryah has stated multiple times he wanted it low level
[17:23] jetienne: another example, me, i have coded 3 http servers, and 1 http client, complete stuff, with pipelining and all... so not a beginner ... but still im coding the http client in nodejs for 1h
[17:23] jetienne: low level ? not very precise. sev eral people wont considere js low level :)
[17:24] jetienne: maybe we should pull his chain a bit to get more precision on how he sees the project futuree
[17:24] mbrochh has left the channel
[17:25] bradleymeck: i abstracted out an http client for my use, havent needed to mess with if for several months, but its not publicly available
[17:25] sschuermann has joined the channel
[17:25] sschuermann: hi 
[17:25] bradleymeck: seems resonable to at least have a repo of officially supported modules
[17:25] bradleymeck: hi there
[17:25] polotek: are we talking about improving http.Client
[17:25] polotek: ?
[17:26] jetienne: polotek: y
[17:26] sschuermann: anyone ever tried to put the implementation of express.js routes in modules ? 
[17:26] polotek: there were a couple of threads on it
[17:26] sschuermann: the method passed to app.get('route', cb)
[17:26] polotek: it got put on the back burner though
[17:26] bradleymeck: connect has a router
[17:26] bradleymeck: can just use that
[17:26] sschuermann: hmm ok ty 
[17:27] jetienne: polotek: pool, do you have your own http get in a corner ?
[17:27] polotek: http://groups.google.com/group/nodejs/browse_thread/thread/ee6cb269d34c82a0/da69a1feb63596df
[17:28] polotek: jetienne: no, I use the request module
[17:28] polotek: npm install request
[17:28] jetienne: polotek: there is a bug in http redirect :)
[17:28] polotek: What kind of bug?
[17:28] jetienne: kidding... well the bug is real but rare
[17:28] altamic_ has joined the channel
[17:28] polotek: if it's actually a bug you should submit a test and a patch
[17:29] jetienne: if server is looping on redirect, the client will loop up to 100%
[17:29] jetienne: polotek: relax i told mikeal
[17:29] polotek: jetienne: oh you mean a bug in request
[17:29] polotek: thought you meant http.Client
[17:29] bradleymeck: then gain google has been making some odd stuff go on w/ the location header
[17:29] polotek: and I was confused cause it doesn't follow redirects :)
[17:30] jetienne: :)
[17:30] polotek: yeah request should have a max redirects limit
[17:30] polotek: not a huge deal though
[17:30] jetienne: no but this is http GET... an amateurish http GET is not very serious
[17:31] jetienne: "i use nodejs and the http get kinda works... but who cares" ?
[17:31] jetienne: not my view
[17:31] jetienne: ok going back to my work :)
[17:32] polotek: jetienne: read that thread I sent
[17:32] polotek: the only thing holding up a better api for http.Client is the api spec
[17:32] polotek: ry has some ideas
[17:32] jetienne: ah ok cool
[17:33] polotek: that are different from many other people's ideas :)
[17:33] jetienne: personnalty i dont ask for a modification of current api, more adding one
[17:33] jetienne: ok ok i got back to my http get :)
[17:34] jetienne: no base64 in core ?
[17:35] bradleymeck: you can do the buffer trick right now
[17:35] bradleymeck: buffer is becoming like encode/decode is to python though which makes me a sad panda
[17:35] ph^ has joined the channel
[17:35] polotek: bradleymeck: agreed
[17:35] polotek: but you can also use crypto right?
[17:36] polotek: it's a little more verbose
[17:36] polotek: but easy to wrap
[17:36] Zuardi has joined the channel
[17:37] jetienne: hmm any suggestion on a base64 
[17:37] langworthy has joined the channel
[17:37] jetienne: was that creationix who had a trick with base36
[17:37] jetienne: or base62
[17:39] jimmybaker has joined the channel
[17:39] bradleymeck: i dont think crypto has base64, btw, (new Buffer("xyz","utf8")).toString("base64")
[17:42] mr_daniel has joined the channel
[17:43] jetienne: oh that should works: :)
[17:43] jetienne: thanks
[17:45] polotek: I don't think you need to specify utf8
[17:46] jacquesc has joined the channel
[17:47] mikeal has joined the channel
[17:49] amrnt has joined the channel
[17:49] bpadalino: if i do a require('./local.js') where local.js has some var's defined in it - is that a valid way of including js files into my node project ?
[17:49] bmavity has joined the channel
[17:49] jetienne: bpadalino: nope, this is not like <script> in a browser
[17:50] jetienne: bpadalino: var in local.js need to be explicitly exported. export.myvar = 42; 
[17:50] bpadalino: it looks like i may need to export certain things i want visible on the outside ?
[17:50] bpadalino: i gotcha
[17:50] jetienne: bpadalino: or you wont see it
[17:50] jetienne: i use brequire to have the same code in browser side too
[17:51] aho has joined the channel
[17:51] bpadalino: if i am extending String with a prototype, how can i export that?
[17:52] matt_c has joined the channel
[17:52] jacquesc: can anyone recommend a rapheal type library for node.js to generate PNGs?
[17:52] jetienne: bpadalino: you dont need to. String is special as it is already a global
[17:52] bpadalino: ah ok
[17:53] jetienne: jacquesc: what about raphael and then convert to png ?
[17:53] jacquesc: jetienne: that'd be awesome
[17:53] jacquesc: jetienne: think it would work?
[17:53] jetienne: raphael is able to export image to canvas and to png, i *think*
[17:54] jacquesc: ooh. neato http://www.benbarnett.net/2010/06/04/export-svg-from-raphael-js-to-create-a-png-bitmap/
[17:54] jacquesc: thanks for pointing me in that direction. i'll see what i find
[17:55] jetienne: cool :)
[17:58] bpadalino: well that was interesting - thanks jetienne
[17:58] jetienne: np
[18:00] nolan_d: Is there a way to make Express send the contents of a socket directly to res.socket as is? (I.e. not as the response body, but directly.)
[18:00] nolan_d: I'm writing an app that launches a CGI, so it's automatically creating headers and such.
[18:01] nolan_d: But the CGI execution results get dumped directly into the body.
[18:04] cloudhead has joined the channel
[18:05] jacquesc: hmm.. yeah raphael cant work server side in node.js
[18:06] jacquesc: it depends on browser implementation of svg
[18:06] mbrochh has joined the channel
[18:06] jacquesc: so i'm outta luck :-P
[18:07] njero_ has joined the channel
[18:09] keeto has joined the channel
[18:10] TomsB_ has joined the channel
[18:13] pufuwozu has joined the channel
[18:14] amrnt has joined the channel
[18:19] sschuermann: i packed my question with some code to the googlegroup 
[18:19] sschuermann: more code there, maybe a express.js expert can give me a hint 
[18:24] dnolen has joined the channel
[18:29] ryah: is there a way to define === on javascript objects?
[18:30] bradleymeck: no
[18:30] ryah: :/
[18:30] ryah: i hate this language
[18:30] bradleymeck: might be a way to fudge it through v8?
[18:30] sschuermann:  lots of people write deep compare methods for that 
[18:30] bradleymeck: you can do some hashing so == works w/ valueof
[18:30] sschuermann: i remember doing this 5 yrs ago
[18:35] polotek: overriding valueof seems to work
[18:35] polotek: http://gist.github.com/566228
[18:35] polotek: ryah^
[18:36] polotek: probably not advisable though.  seems pretty brittle
[18:36] polotek: I would be more upset if there *was* a way to override ===
[18:37] polotek: it's strict identity. why you want to redefine it?
[18:37] pkrumins: jesusabdullah: that's the patch that you sent in, right? the missing port. yeah.
[18:37] pquerna: fast buffers?
[18:37] bradleymeck: well === is very much like checking pointers to object types and if object is a native js host type checking it against natives works too
[18:38] polotek: bradleymeck: not following you
[18:38] dnolen_ has joined the channel
[18:39] pkrumins: oops
[18:39] pkrumins: not jesusabdullah /o\
[18:39] pkrumins: jetienne ^^
[18:41] jesusabdullah: pkrumins: Hell yeah that was me :P
[18:41] mikew3c^ has joined the channel
[18:42] pkrumins: jesusabdullah: did you get that POST example running the other day? Altreus doesn't know how to do POST.
[18:43] bradleymeck: just saying woundt really make sense to have === overriden
[18:45] bradleymeck: mmm when should you call a destructor on an internal field for an object?
[18:45] bradleymeck: c++ side*
[18:45] jesusabdullah: pkrumins: Not yet! But I was looking at the code for _announcer and I got an idea
[18:45] polotek: bradleymeck: ideally not until the object is being garbage collected
[18:45] polotek: if that's the lifetime
[18:45] jesusabdullah: pkrumins: I was gonna test it later today--my netbook is too small for installing such extras as node, and my vpn account died here :(
[18:45] polotek: That's why you use MakeWeak on Persistent handles
[18:46] pkrumins: jesusabdullah: :(
[18:46] mjr_ has joined the channel
[18:48] keyvan has joined the channel
[18:49] xer0xM has joined the channel
[18:49] bradleymeck: polotek ive been doing that, but i dont thinkin setting up gc callbacks seems ideal, meh
[18:49] polotek: bradleymeck: why not?  how would you prefer it to work?
[18:50] bradleymeck: automagically lol, idk a better solution, so asked
[18:50] polotek: bradleymeck: that IS the automagic solution
[18:50] polotek: basically it lets you add your own internal routine to be called whenever the object is being GCed
[18:50] polotek: so you can clean up your internal resources
[18:50] polotek: because v8 doesn't know or care about those
[18:51] bradleymeck: yea, but you can use revival inthat, so if something revives it... bad juju
[18:52] polotek: bradleymeck: what do you mean by revival?
[18:53] bradleymeck: i can prevent the gc from going through and actually killing the object (i use it for ephemeron/weakmaps)
[18:54] bradleymeck: can do stuff like if var a is about to be deleted, strap it onto var b / global scope / etc.
[18:54] bradleymeck: or you can just keep it around cause its not really dead yet but should be available to gc collection that can only be determined at collection time
[18:55] Zuardi has joined the channel
[18:58] matt_c has joined the channel
[18:59] muk_mb: $("board").load("/board"); should take the html sent from /board and put it in the div with id board, right?
[18:59] jedschmidt has joined the channel
[18:59] muk_mb: With jquery
[19:00] altamic has joined the channel
[19:01] polotek: bradleymeck: you're doing some weird stuff with ephemeron so I can't really comment
[19:01] polotek: but MakeWeak takes a callback that gets fired
[19:01] polotek: this is where you determine if the object is actually ready to be collected
[19:01] polotek: this is probably where you would put that logic
[19:01] polotek: you can stop the collection there
[19:01] jesusabdullah: ephemeron?
[19:02] markwubben has joined the channel
[19:03] nivoc has joined the channel
[19:03] siculars has joined the channel
[19:03] bradleymeck: yea but if 2 callbacks are on the object it could attempt to free twice, ugg
[19:04] nivoc: Join #android
[19:04] V1: nivoc: Join #node.js
[19:04] polotek: why would there be two callbacks?
[19:04] nivoc: :D I'm already in node.js
[19:04] polotek: Make weak only takes one
[19:04] V1: ;D
[19:05] polotek: I assume if you call it multiple times it would overwrite
[19:06] nivoc has joined the channel
[19:07] bradleymeck: cause if there are 2 weak refs that require cleanup, doesnt seem to overwrite
[19:08] mephux has left the channel
[19:09] polotek: bradleymeck:  Yes, you have to count the refs
[19:09] polotek: and check it in the callback
[19:10] bradleymeck: im just worried about an external source making a weak ref
[19:10] polotek: are you opening up your C++ code for others?
[19:10] amrnt has left the channel
[19:11] polotek: usually you're just providing js references
[19:11] polotek: in which case you're using ObjectWrap and always providing the same persistent handle
[19:12] polotek: any code that uses your C++ objects should be using Wrap/Unwrap to manage js references
[19:13] bradleymeck: i guess i could do a wrap of my wrap would work to prevent it, but even with using ObjectWrap and just exposing to JS another C++ addon could make a weakref  of a Local they obtain
[19:13] polotek: bradleymeck: yes, but they're doing it wrong :)
[19:13] polotek: your C++ code should provide some kind of "NewInstance" function that returns it
[19:13] bradleymeck: i guess but thats the only way to do some things like weakmap and collectors
[19:14] polotek: already wrapped with a persistent reference
[19:14] bradleymeck: so 2 perfectly legit addons could die when used together
[19:14] bradleymeck: just from references being passed about
[19:14] polotek: bradleymeck: yes, how's that different from any other C/C++ code?
[19:14] polotek: that's why you have a public api and have people use it
[19:15] bradleymeck: isnt, just a concern since weakmaps in overload currently dont have a good way to deal w/ addons using c++ object collection
[19:15] polotek: can you give me some examples of use cases?
[19:16] polotek: I haven't had the opportunity to use over-load as much as I thought I would
[19:16] polotek: but that still might happen
[19:16] polotek: I'll help out if I can
[19:18] bradleymeck: im binding some sfml which wraps c++ objects in internalfields, in overload for example, as long as the keys are alive we need to weakly hold onto the value related to that key (not garranteed the key will attempt collection before the value), so if i dispose/free the value but for some god forsaken reason my sfml binding revives the key... it makes a hole basically
[19:20] justin_ has joined the channel
[19:21] polotek: okay back up
[19:21] polotek: so an ephemeron table lets you use objects as keys to reference other values
[19:21] polotek: but the keys can be collected at any time?
[19:22] polotek: at which point the values are also eligible for collection
[19:24] bradleymeck: yes
[19:24] ceej has joined the channel
[19:25] Validatorian has joined the channel
[19:25] mbrochh has joined the channel
[19:25] polotek: okay the way I would start approaching this is by having some sort of MapManager
[19:25] polotek: which may be the map implementation itself
[19:25] polotek: essentially the state of the values is related to the state of the keys
[19:26] polotek: assuming that if you have the key then you can readily obtain a reference to the related value
[19:26] polotek: then when the key is collected, that is when you call MakeWeak on the value
[19:26] polotek: there is no need for it to be weak before that
[19:26] bradleymeck: yea, guess so, kinda went overboad i guess
[19:27] jesusabdullah: What're you working on, polotek?
[19:27] polotek: jesusabdullah: me? nothing, just trading ideas with bradleymeck 
[19:27] polotek: me and him seem to be the only ones getting very in depth with node addons
[19:28] bradleymeck: i just wish there was an, onrevival of some sort for when you do something odd w/ collectors, i can take that out of oncollect for now
[19:29] googol has joined the channel
[19:30] jesusabdullah: I see
[19:32] polotek: bradleymeck: in what scenario would you use a weakmap?
[19:35] jesusabdullah: http://mrdoob.com/lab/javascript/checkboxes/ :D
[19:36] bradleymeck: polotek, i use them for a lot of things, mainly to plug up memory leaks and speed up Object dictionary lookups
[19:36] ako has joined the channel
[19:37] bradleymeck: so for example I use it as a hidden communication channel for my object prototypes between eachother's closures
[19:39] polotek: bradleymeck: like I said, weird :)
[19:39] Nohryb has joined the channel
[19:40] bradleymeck: heh, maybe
[19:40] bradleymeck: every time you use .indexOf on an array that you have pushed objects onto basically it is nice
[19:41] polotek: bradleymeck: yeah I can see that being a nice optimization
[19:46] HerrTopf has joined the channel
[19:50] polotek: did you know you can start a directory name with a space :/
[19:51] polotek: did you know it's very hard to find out that problem from a terminal
[19:52] bradleymeck: ouch
[19:56] sschuermann has joined the channel
[19:57] sschuermann: re
[19:58] sschuermann: thanks for putting my question online in the express.js googlegroup 
[19:58] bsstoner has joined the channel
[19:59] pufuwozu has joined the channel
[20:00] jesusabdullah: polotek: I had no idea. o_o
[20:01] hellp has joined the channel
[20:03] justin_ has joined the channel
[20:05] marshall_law has left the channel
[20:06] tav has joined the channel
[20:07] ayo has joined the channel
[20:09] paulwe has joined the channel
[20:09] guid has joined the channel
[20:09] phazm has joined the channel
[20:09] guid: hi.
[20:10] guid: what the...307 people o_O
[20:10] polotek: guid: yo
[20:10] Viriix_ has joined the channel
[20:10] guid: I just discovered node.js yesterday, I am so enthousiastic
[20:11] elbartus has joined the channel
[20:11] nuba_ has joined the channel
[20:11] icy_ has joined the channel
[20:11] sstephenson_ has joined the channel
[20:12] jesusabdullah: guid: Exciting, huh?
[20:12] jesusabdullah: :v
[20:13] nerdEd has joined the channel
[20:14] mattikus has joined the channel
[20:14] ddollar` has joined the channel
[20:14] charlesjolley- has joined the channel
[20:15] Alex-SF_ has joined the channel
[20:15] peutetre_ has joined the channel
[20:15] matt_c_ has joined the channel
[20:15] __sri has joined the channel
[20:15] njero__ has joined the channel
[20:15] zapnap_ has joined the channel
[20:16] iaurynn has joined the channel
[20:16] bsstoner_ has joined the channel
[20:16] muk_mb1 has joined the channel
[20:16] dnolen has joined the channel
[20:16] halorgium has joined the channel
[20:18] dnolen has joined the channel
[20:19] satori_ has joined the channel
[20:19] charlesjolley- has joined the channel
[20:19] foobarfighter has joined the channel
[20:20] szaboat has joined the channel
[20:20] rnewson has joined the channel
[20:21] icy has joined the channel
[20:22] mattikus_ has joined the channel
[20:22] icy has left the channel
[20:22] dmcquay has joined the channel
[20:23] ben_alman has joined the channel
[20:23] ivan has joined the channel
[20:23] dmcquay: anyone here experienced with mongoose?
[20:24] dmcquay: my question is pretty simple, not advanced
[20:24] programble has joined the channel
[20:24] qFox has joined the channel
[20:24] hdon has joined the channel
[20:24] Sami_ZzZ has joined the channel
[20:25] nolan_d has joined the channel
[20:25] muk_mb1: what type of object gets returned from redis's spop?
[20:25] muk_mb1: I thought it was a string, but it does not appear to be
[20:28] mikeal: muk_mb1: it's probably a buffer
[20:28] muk_mb1: oh, ok
[20:29] mikeal: a lot of the Redis client was written before Buffers were added and it was only really updated to call .toString() for things that were causing exceptions
[20:29] mikeal: just call .toString() on the return value and see what it is
[20:29] muk_mb1: so just String(result) should take care of it?
[20:29] fictorial has joined the channel
[20:30] mikeal: .toString() is better because you can specify encoding when you need ot
[20:31] stagas has joined the channel
[20:31] CIA-77: node: 03Tim-Smart 07fast-buffer * recba2c4 10/ lib/buffer.js : string.length !== Buffer.byteLength(string) - http://bit.ly/bgAZQq
[20:31] CIA-77: node: 03Ryan Dahl 07fast-buffer * r81304ee 10/ (lib/buffer.js src/node_buffer.cc test/simple/test-buffer.js): fast buffer bounds checking in copy() - http://bit.ly/cLO9sR
[20:31] CIA-77: node: 03Ryan Dahl 07fast-buffer * r08b0dfe 10/ (lib/buffer.js src/node_buffer.cc test/simple/test-buffer.js): More fast buffer work - http://bit.ly/d1SW2M
[20:31] CIA-77: node: 03Ryan Dahl 07master * r3c00ec4 10/ lib/fs.js : typo: forceClose -> destroy for WriteStreams - http://bit.ly/dABzPi
[20:32] Astro: if I do end() on a net.Stream, will I receive the 'end' event?
[20:32] muk_mb1: mikeal: oh ok, cool
[20:33] mikeal: Astro: yes
[20:33] matschaffer has joined the channel
[20:34] muk_mb1: this is sweet, I mostly have my game working
[20:35] matschaffer has joined the channel
[20:37] xer0xMA has joined the channel
[20:39] bpot has joined the channel
[20:41] v8bot has joined the channel
[20:41] crodas has joined the channel
[20:42] Astro: mikeal: except if there was an 'error' in between?
[20:42] mikeal: no
[20:43] mikeal: the end event should be emitted immediately
[20:43] mikeal: the actually socket closure and final flush happen after
[20:43] mikeal: so you should get "end" and then maybe an "error" emitted after
[20:46] mikeal has joined the channel
[20:46] Astro: ok, thanks
[20:50] guid: is it possible to use jQuery with nodejs ?
[20:52] mikeal1 has joined the channel
[20:52] stagas: guid: jQuery is for the browser
[20:52] jwm: yeah jquery is just for dom manipulation MOSTLY
[20:53] jwm: you can use it somewhat on regular javascript objects
[20:53] jwm: but with no dom it isn't very useful
[20:53] altamic: guid: perhaps you need something like underscore.js?
[20:53] guid: ok ok, indeed
[20:54] guid: dunno, searching for a way to manipulate XML
[20:54] altamic: I can understand
[20:54] guid: DOM way, no SAX
[20:55] bradleymeck: mmm best way to check if something is an instance of a nodejs Buffer c++ side?
[20:59] bradleymeck has joined the channel
[21:02] freeall has joined the channel
[21:02] polotek: guid: what are you using for a DOM?
[21:03] polotek: bradleymeck: there is an isBuffer method on Buffer
[21:03] polotek: is it available through C++
[21:03] polotek: ?
[21:04] bradleymeck: ACTION goes to check the isBuffer
[21:05] wamd has joined the channel
[21:06] polotek: nah, it's js only
[21:06] polotek: but it just uses instanceof
[21:07] polotek: bradleymeck: I forget how you do the equivalent of instanceof in v8
[21:08] breccan has joined the channel
[21:10] edw``` has joined the channel
[21:12] bradleymeck: HasInstance
[21:13] rauchg_ has joined the channel
[21:14] justin_ has joined the channel
[21:15] stagas has joined the channel
[21:17] justin_: guid: not really, but i've gotten it to work in rhino with env.js
[21:17] dipser: this is deprecated right? require("multipart");
[21:18] polotek: dipser: yes, use node-formidable
[21:19] polotek: bradleymeck: ah, yeah on FunctionTemplate
[21:29] MikhX has joined the channel
[21:34] zeekay has joined the channel
[21:36] Nohryb has joined the channel
[21:38] zemanel has joined the channel
[21:39] alexfner has joined the channel
[21:41] saikat has joined the channel
[21:47] maushu has joined the channel
[21:47] rnewson has joined the channel
[21:47] mau has joined the channel
[21:47] mbrochh has joined the channel
[21:51] _TS has joined the channel
[21:51] bpot has joined the channel
[21:52] maqr has joined the channel
[22:04] rednul has joined the channel
[22:05] mikew3c_ has joined the channel
[22:12] abiraja has joined the channel
[22:13] nolan_d: Why is it that, when I define socket.on("end"), my on("data") fires but only if I define on('end")?
[22:14] Tim_Smart has joined the channel
[22:15] rauchg_ has joined the channel
[22:15] bradleymeck: idk
[22:15] bradleymeck: both seem to fire, so if you could gist it?
[22:16] mattly has joined the channel
[22:18] Tim_Smart: ryah: Get my email?
[22:25] Dmitry1 has joined the channel
[22:27] justin_: i'm a bit unclear on what an External is in v8
[22:28] justin_: ah, it's just data attached to a JS object?
[22:28] justin_: i think i can handle that
[22:28] Tim_Smart: justin_: Something not allocated by v8, but reference by a v8 variable so the Garbage Collector can clean it up?
[22:28] Tim_Smart: referenced*
[22:28] Tim_Smart: Something like that.
[22:28] justin_: yeah... but how does it clean it up?
[22:29] justin_: it can't assume anything about its type, i don't think
[22:29] Tim_Smart: Specify the deconstructor.
[22:29] justin_: then it doesn't work for any C objects
[22:29] justin_: but i guess that's ok
[22:29] Tim_Smart: justin_: Take a look at the node_buffer.cc code.
[22:29] justin_: k
[22:30] maushu: I'm looking at process.Timer.
[22:30] rnewson_ has joined the channel
[22:31] maushu: It has this timer.start function, the second argument that I don't understand how it works.
[22:33] maushu: I'm guessing that the first argument is to when to run the callback after the call, the second one is... to run repeatdly?
[22:34] muk_mb1: in jade, how would I write on an image tag so that the name of the image file itself is a local variable?
[22:35] muk_mb1: I tried this: http://pastie.org/1140406, it didn't work
[22:36] dmcquay has joined the channel
[22:38] polotek: maushu: yes it says whether to repeat or not
[22:38] polotek: http://github.com/ry/node/blob/master/src/node_timer.cc#L109
[22:38] polotek: or rather, when to repeat
[22:39] maushu: Yeah, that is what I was thinking.
[22:39] maushu: Kind of weird, yet useful, to have a function like that.
[22:39] maushu: I'm guessing 0, 3000 would run the function at the spot and then repeat every 3 seconds.
[22:42] bpot has joined the channel
[22:43] _TS has joined the channel
[22:43] tav has joined the channel
[22:48] muk_mb1: Does anybody know how to use a variable as the name of an image in jade?
[22:48] s0enke has joined the channel
[22:49] cadorn has joined the channel
[22:49] k3yvn has joined the channel
[22:51] chrischris has joined the channel
[22:53] muk_mb1: whoo I got it
[22:54] visnup has joined the channel
[22:55] admc has joined the channel
[22:57] c4milo has joined the channel
[22:57] MikhX has joined the channel
[23:02] lachlanhardy has joined the channel
[23:03] maushu has joined the channel
[23:04] mau has joined the channel
[23:04] maushu: How interesting, I didn't you could pass arguments to timer callbacks.
[23:07] chewbranca has joined the channel
[23:08] Nohryb has joined the channel
[23:10] nerdEd has joined the channel
[23:11] dmcquay has joined the channel
[23:11] alexfner has joined the channel
[23:14] keyvan has joined the channel
[23:14] mattikus` has joined the channel
[23:16] mattikus` has joined the channel
[23:17] mattikus has joined the channel
[23:20] ivong has joined the channel
[23:23] dnolen has joined the channel
[23:24] terinjokes has left the channel
[23:25] mattly has joined the channel
[23:26] dohtem has joined the channel
[23:27] marshall_law has joined the channel
[23:28] Nohryb has joined the channel
[23:31] aliem has joined the channel
[23:31] c4milo has joined the channel
[23:34] c4milo1 has joined the channel
[23:35] c4milo2 has joined the channel
[23:38] ezmobius has joined the channel
[23:43] justin_ has joined the channel
[23:47] justin_ has joined the channel
[23:49] stagas_ has joined the channel
[23:54] cognominal: npm?
[23:55] bradleymeck: mmm?
[23:57] justin_ has joined the channel
