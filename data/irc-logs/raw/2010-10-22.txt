[00:00] TheEmpath: here it is
[00:00] TheEmpath: look at this awesome bug
[00:00] TheEmpath: v8 var list = new Array(); var id = new Obj(String(0),String(1)); function Obj(val1, val2) { this.val1 = val1; this.val2 = val2 }; list[id.val2] = new Obj(1,2); list[id.val1] = new Obj(3,4); list[id.val1];
[00:00] v8bot: TheEmpath: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[00:00] sschuermann has joined the channel
[00:00] TheEmpath: private message v8 that one
[00:00] TheEmpath: the answer should be 1,2
[00:00] TheEmpath: but you get 3,4
[00:00] TheEmpath: id.val1 is 0
[00:01] genbit has joined the channel
[00:01] Tim_Smart: It will be 3,4 because: list[id.val1] = new Obj(3,4); list[id.val1];
[00:01] TheEmpath: aww damn it
[00:01] TheEmpath: well ican't isoalte it
[00:01] TheEmpath: but i am getting it in my script
[00:03] ajpiano has joined the channel
[00:05] TIM_SMART: RAWR
[00:06] MattJ100 has joined the channel
[00:06] TIM_SMART: SUBSTACK: Why the caps? Feeling angry?
[00:07] nerdEd has joined the channel
[00:09] xicubed has left the channel
[00:12] MattDiPasquale has joined the channel
[00:13] SUBSTACK: TIM_SMART: IT IS CAPS LOCK DAY, SIR.
[00:14] GOD__ has joined the channel
[00:14] TIM_SMART: FO SURE
[00:14] GOD__: LET THERE BE NODE.
[00:15] TheEmpath: oooooo
[00:15] TheEmpath: i know what happens
[00:15] TheEmpath: its json
[00:15] TheEmpath: json is turning my strings into ints
[00:15] TheEmpath: durp drup
[00:15] zk has joined the channel
[00:15] JESUSABDULLAH: JSOOOON
[00:17] tekky has joined the channel
[00:17] ezmobius has joined the channel
[00:18] sprout has joined the channel
[00:18] robotarmy has joined the channel
[00:20] ryanfitz has joined the channel
[00:21] aurynn: they were ints to start with
[00:21] aurynn: autocast!
[00:21] genbit has joined the channel
[00:24] softdrink has joined the channel
[00:27] TheEmpath: i made them strings :(
[00:27] ajsie has joined the channel
[00:27] evanmeagher has joined the channel
[00:28] ajsie: could someone explain for me what export.js does?
[00:28] ajsie: is it anything like npm?
[00:28] dpritchett has joined the channel
[00:28] ISAACS: THEREIS NOTHING LIKE npm!!
[00:44] genbit has joined the channel
[00:44] stepheneb has joined the channel
[00:46] genbit has left the channel
[00:47] vnguyen_ has joined the channel
[00:48] Robbb has joined the channel
[00:48] TheEmpath: youll be happy to know that binding socket.io sends to process.nextTick really pushes socket.io to the limit
[00:49] dnolen has joined the channel
[00:50] ajsie: noone?
[00:50] ajsie: roaring like Akilles: is there no one else?!
[00:51] creationix has joined the channel
[00:51] sprout has joined the channel
[00:51] dquestions has joined the channel
[00:51] TheEmpath: me dunno
[00:56] overra has joined the channel
[00:58] springmeyer_ has joined the channel
[01:00] mtodd has joined the channel
[01:00] TIM_SMART: For when mikeal is back from the store http://github.com/Tim-Smart/node/compare/filter2
[01:00] eee_c has joined the channel
[01:00] ryah: Mwhahaha
[01:02] dguttman_ has joined the channel
[01:07] Rixius has joined the channel
[01:08] Rixius: hit a snag trying to build on Mac OS X 10.4.11 http://pastie.org/1239670 <- Log
[01:09] dgathright has joined the channel
[01:10] creationix has joined the channel
[01:10] Rixius: has anyone else had trouble building on Mac OS X 10.4.11?
[01:11] aheckmann has joined the channel
[01:12] dannycoates has joined the channel
[01:13] Yuffster has joined the channel
[01:14] UHMA has joined the channel
[01:15] mbrochh has joined the channel
[01:17] rnewson has joined the channel
[01:18] EyePulp: Rixius: I can't say I've seen that error - that does seem to be an older osx install - any chance to update it?
[01:19] davidascher has joined the channel
[01:19] Rixius: I'm updating it early next week
[01:19] Rixius: just wanted node now >.>
[01:20] Rixius: I was using node .2, just tried with .2.3 and same error
[01:21] Aria: Anything from above that in the log?
[01:21] micheil: Tim_Smart: I think that's wrong.
[01:21] c4milo has joined the channel
[01:21] admc has joined the channel
[01:22] Rixius: Error : Build failed:  -> task failed (err #2):    {task: libv8.a SConstruct -> libv8.a}
[01:22] Tim_Smart: micheil: The pipe() version?
[01:22] micheil: Tim_Smart: why can't I do: Stream.pipe(function(){}, source, optinos);
[01:22] micheil: yeah
[01:22] breccan has joined the channel
[01:23] c4milo has left the channel
[01:23] Tim_Smart: micheil: Oh yeah me being sily.
[01:23] Tim_Smart: It was supposed to be an array.
[01:23] micheil: heh
[01:23] micheil: but doing: Stream.pipe([function(){}], source, options); is just kinda silly, imo.
[01:24] jacobolus has joined the channel
[01:26] Tim_Smart: micheil: Thinking I might move filters to the options hash.
[01:26] admc has joined the channel
[01:26] micheil: heh
[01:26] micheil: plus changing that's just going to break stuff for no reason really
[01:26] nrub has left the channel
[01:26] micheil: most pipes aren't going to be using filters
[01:27] micheil: heh: Stream.chainSmoker(stream1, stream2, stream3, stream4)
[01:27] micheil: pipe()'s together multiple streams.
[01:28] jashkenas has left the channel
[01:28] micheil: (gotta love it when you can play slightly on words and names)
[01:31] davidascher has joined the channel
[01:31] robotarmy has joined the channel
[01:37] Tim_Smart: http://github.com/Tim-Smart/node/compare/filter2
[01:37] Tim_Smart: Heh I obviously didn't proof read that.
[01:38] springmeyer has joined the channel
[01:39] Tim_Smart: Yeah that's better.
[01:41] jacobolus has joined the channel
[01:42] indexzero has joined the channel
[01:45] Me1000 has joined the channel
[01:46] langworthy has joined the channel
[01:47] tosuk has joined the channel
[01:47] StanAngeloff_ has joined the channel
[01:47] Twelve-60` has joined the channel
[01:48] aconran__ has joined the channel
[01:49] mikeal has joined the channel
[01:52] Sembiance has joined the channel
[01:52] micheil: ryah_: is this still relevant? http://www.opensource.apple.com/source/Kerberos/Kerberos-47/KerberosFramework/Kerberos5/Sources/util/windows/getopt_long.c
[01:52] micheil: erm
[01:52] micheil: http://nodejs.googlegroups.com/web/stress-test.gif?hl=en_US&gda=SBWN40IAAAAgw6q8VZd1JkJ0gAUCNHRsQe1UHrba7Z8qSja2JVZIUcugpjjLBJsG6RKa3XrNrKdV4u3aa4iAIyYQIqbG9naPgh6o8ccLBvP6Chud5KMzIQ&gsc=eDuEoS4AAAD_QFnaQAkoxQtQ5j5Xlf52uYcCJr_eNwDzPUGLP9ODHDEQ-ZWn06kHP3h-_FNycu0
[01:52] termie has joined the channel
[01:52] termie has joined the channel
[01:52] Tim_Smart has joined the channel
[01:52] micheil: it's a chart plotting conn/sec, net-conn/sec, close/sec, msg/sec, tot-conn on it
[01:52] micheil: from mid 2009
[01:53] micheil: actually Nov 27
[01:53] micheil: being the number of changes since then, I'd guess it to be outdated
[01:54] micheil: although, I'm just wanting to check, because if it is still wanted, we'll want to move it off google groups
[01:54] micheil: who are no longer going to be supporting pages / files
[01:54] grahampage has joined the channel
[01:54] Tim_Smart: micheil: http://github.com/Tim-Smart/node/commit/66f1c743f7d8a81858a0c94226e2151a30f6e02a
[01:54] Tim_Smart: stream.pipe().pipe().pipe()
[01:54] micheil: hmm..
[01:55] micheil: yeah, but I like the name "chainSmoker" just for the pun of it.
[01:55] Tim_Smart: Yeah, but we have to be sensible.
[01:55] EyePulp: heh
[01:55] tk has joined the channel
[01:55] micheil: Tim_Smart: I was actually joking when I said it.
[01:55] EyePulp: plumber?
[01:55] derencius has joined the channel
[01:55] grahampage has left the channel
[01:55] micheil: EyePulp: I was thinking take your pipe() and smoke it.
[01:56] rcy has joined the channel
[01:56] EyePulp: naturally
[01:56] EyePulp: =)
[01:56] Tim_Smart: file.pipe(gzip).pipe(response);
[01:56] banjiewen has joined the channel
[01:56] micheil: mikeal: you still about?
[01:56] micheil: could be nice.
[01:56] andrewa2 has joined the channel
[01:57] mikeal: yeah
[01:57] mikeal: just got back from the store
[01:57] micheil: so, do we think we should do an episode tomorrow morning?
[01:57] Druid_ has joined the channel
[01:58] mikeal: sure
[01:58] mikeal: can we get the current one posted :)
[01:58] lstoll has joined the channel
[01:58] walkah has joined the channel
[01:58] walkah has joined the channel
[01:58] mikeal: i'm gonna be in the office until like 2
[01:58] Tim_Smart: http://thenoded.com/ <- Fix it.
[01:58] Tim_Smart: <3
[01:59] mikeal: what is broken?
[01:59] Tim_Smart: "Coming Soon." doesn't count ;(
[01:59] hoodoos has joined the channel
[01:59] micheil: mikeal: yeah, the website's going to take a little while longer
[02:00] apage43 has joined the channel
[02:00] micheil: but you can already get it on the twitter feed
[02:00] Tim_Smart: mikeal: Anyway, here is another take on filter http://github.com/Tim-Smart/node/compare/filter2
[02:00] ryanfitz has joined the channel
[02:01] heavysixer: anyone want to try my first node.js attempt?
[02:01] micheil: ?
[02:01] mikeal: is the feed working?
[02:01] micheil: mikeal: almost.
[02:01] heavysixer: orlandov: thx for the help on github
[02:01] micheil: I haven't really had a chance to work much more on it.
[02:01] heavysixer: didn't know you were in this chan too
[02:02] mikeal: you posted it on twitter?
[02:02] micheil: yeah
[02:02] micheil: http://twitter.com/thenoded/status/27816229400
[02:02] jackson_ has joined the channel
[02:03] micheil: (I'm using the account via coTweet, and I've sent you an email with details to access it)
[02:03] mikeal: ok, i posted it as well
[02:03] nefD has joined the channel
[02:04] micheil: yeah, I was using the goo.gl link to be able to get a few basic stats on who/how many people are listening in
[02:04] ryan[WIN] has joined the channel
[02:07] mikeal: that never quite works
[02:07] mikeal: where is the mp3 hosted?
[02:07] micheil: http://goo.gl/info/Ac1f#week
[02:07] micheil: the mp3 is hosted on one of my servers
[02:07] mbrochh has joined the channel
[02:07] micheil: it should be generally available
[02:07] micheil: (It's a box in the linode london datacenter
[02:08] mikeal: i was just wondering if we could parse the access log for stats
[02:08] micheil: same place the current static "coming soon" page is hosted
[02:08] micheil: hmm..
[02:08] micheil: let me check.
[02:08] mikeal: once it's on couchone we can parse the logs out of an HTTP interface
[02:08] Tim_Smart: You could use some node awesome-ness to serve the files ;)
[02:08] micheil: 119.107.239.120 - - [22/Oct/2010:13:08:48 +1100] "GET /episode-1.mp3 HTTP/1.1" 206 204896 "-" "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; en-US) AppleWebKit/534.7 (KHTML, like Gecko) Chrome/7.0.517.41 Safari/534.7"
[02:09] micheil: looks like it.
[02:09] micheil: Tim_Smart: no need for that.
[02:09] mikeal: micheil: you'll want to parse out requests with range headers that are non zero
[02:10] abstractj has joined the channel
[02:10] mikeal: when you open it in the browser and you seek it's a new request with range headers included
[02:10] micheil: well, yeah, that's the only data I've got in the logs for it
[02:10] mikeal: or you could just log the IP and consider 8 requests from one IP to be one listener
[02:10] mikeal: that's probably easier
[02:10] micheil: I'm just wanting to get some really rough stats
[02:11] micheil: so we can say "yes, there's people wanting us to produce this, or no there isn't"
[02:11] evanmeagher has joined the channel
[02:11] micheil: (although, it is a "yes")
[02:13] threeve has joined the channel
[02:14] elijah-mbp has joined the channel
[02:18] jamescarr: hmmm
[02:18] jamescarr: so websockets dont work with a proxy 
[02:18] jamescarr: whoops :)
[02:18] micheil: generally not
[02:19] micheil: draft75 will
[02:19] micheil: but most will be using 76
[02:19] jamescarr: yeah, I had set up a websocket demo and a proxy to load balance between nodes
[02:19] jamescarr: it failed
[02:19] jamescarr: hehehehe
[02:19] micheil: yup
[02:19] jamescarr: I suppose I could use websockets with STOMP and activeMQ...
[02:20] jamescarr: then relay the messages back to the nodes
[02:22] micheil: the better way would be to either pass FD's between node processes
[02:22] micheil: or to have one that talks / pipe()'s to a redis pubsub queue
[02:24] Rixius has left the channel
[02:24] twoism has joined the channel
[02:26] Tim_Smart: Pre-increment is a consistent 100-200 ops/s faster on chrome 8. But that only amounts to 3%
[02:27] Tim_Smart: Fail window focus.
[02:30] jamescarr: micheil, I doubt you can pass FDs between machines! :)
[02:30] micheil: jamescarr: good point
[02:30] micheil: in which case I'd say a redis pub/sub queue would be the way to go
[02:31] micheil: but there's a bunch of other information that makes scaling websockets a little bit hard
[02:31] Tim_Smart: Or redis + brpop
[02:31] micheil: like, if client A on server A wants to send a single message to a client on Server B
[02:32] micheil: you'd need to watch out for leaks of data and stuff like that.
[02:32] jamescarr: micheil, I'd just use amqp or redis to replicate it
[02:33] micheil: but also, you need to be sending the client's id (which I've got to rework a bit)
[02:33] jherdman has joined the channel
[02:33] micheil: but. It should be able to be workable with a custom redis pub/sub queue data format
[02:33] micheil: and it should be able to fit into the attach/detach stuff in the manager
[02:34] jamescarr: I guess its past due that I give redis a try
[02:34] nolan_d has joined the channel
[02:34] micheil: redis pubsub is really good
[02:34] micheil: and super faster
[02:34] micheil: *fast
[02:34] dpritchett has joined the channel
[02:35] micheil: but yeah, scaling websockets is a bit of an issue
[02:35] gkatsev has joined the channel
[02:36] jamescarr: yeah that was the ogther thing I was wondering
[02:36] Tim_Smart: micheil: I got the working websocket joining code working btw.
[02:37] Tim_Smart: But it uses buffers only.
[02:37] jamescarr: I notice that on the server side, each connection binds to a different port right?
[02:37] Tim_Smart: I think you saw it.
[02:37] jamescarr: is there an upper bound to that?
[02:37] gkatsev: any tutorials you guys recommend for beginners? Well, other than just reading the API page and doing something.
[02:40] Tim_Smart: gkatsev: nodecasts has a good screencast.
[02:41] charlenopires has joined the channel
[02:41] micheil: Tim_Smart: as long as it emits a single buffer, I could listen for that and mutate to a string
[02:41] gkatsev: Tim_Smart: cool, thanks
[02:41] micheil: jamescarr: yeah, it's like 65000
[02:41] Tim_Smart: micheil: It probably faster to keep the utf8 case as strings.
[02:42] micheil: but how do you know when something is utf8?
[02:42] micheil: you still are working with binary buffers
[02:42] Tim_Smart: When that most significant bit is set.
[02:43] Tim_Smart: So yeah, you still have to manipulate buffers.
[02:43] Tim_Smart: So that won't work.
[02:43] derencius_ has joined the channel
[02:43] micheil: yeah, but if you have <Buffer 0xFF ... 0x00 0xFF ... 0x00 0x80 ... 0x00
[02:43] micheil: in the one buffer, you still need to be finding the slices to convert to strings
[02:44] micheil: you can't just convert that one buffer all to utf8, because that'd break binary packets
[02:45] Tim_Smart: micheil: Ah here it is http://gist.github.com/620138
[02:45] micheil: jamescarr: yeah, I'm not sure on the exact number, but it is near 65000
[02:47] micheil: Tim_Smart: we really need Buffer.indexOf to land for this to work really well
[02:47] Tim_Smart: micheil: indexOf with all the checks is quite a bit slower.
[02:48] micheil: is it?
[02:48] meso has joined the channel
[02:49] Tim_Smart: Yeah. Writing code in C++ has some weird implications.
[02:49] micheil: well, so far I've tried to really stay clear of having C/C++ code in node-websocket-server
[02:50] Tim_Smart: micheil: Yeah, but looking for bytes in a buffer is pretty slow in ecmascript.
[02:50] micheil: yeah
[02:50] Tim_Smart: Which is annoying.
[02:51] micheil: I have no idea where I found that 65000 number for max network remote ports
[02:52] mikeal has joined the channel
[02:52] Tim_Smart: I think it is 64k
[02:52] micheil: hmm..
[02:52] Tim_Smart: (Max open ports)
[02:55] micheil: hmm..
[02:56] micheil: node_net.cc line 1325
[02:56] softdrink has joined the channel
[02:56] micheil: that should probably use the node_constants
[02:58] bartt has joined the channel
[02:59] micheil: and should require("constants") / process.binding("constants") be global?
[02:59] micheil: global.constants = process.binding("constants")
[03:06] micheil: man.. maybe I'm not understanding why certain stuff is being done, or it's being done for no apparent reason
[03:06] micheil: like all the NODE_PSYMBOL definitions at the end of node_net.cc
[03:07] Tim_Smart: I like constants in a require. They are rarely needed.
[03:07] Robbb has joined the channel
[03:07] micheil: looks like errno_symbol and syscall_symbol aren't actually used in node_net.cc
[03:08] Robbb has left the channel
[03:08] Robbb has joined the channel
[03:08] micheil: Tim_Smart: okay, well, they are used (well, duplicated) in the Node core
[03:08] Tim_Smart: That stuff in net could probably be taken out of net.cc.
[03:08] micheil: for example, net.js uses constants that are defined in node_net.cc, when they are actually defined in node_constants.cc
[03:09] Robbb has left the channel
[03:09] micheil: I haven't checked other files yet, but I think it'll be a similar situation
[03:09] Tim_Smart: file.cc doesn't export any constants I don't think.
[03:09] micheil: hmm..
[03:10] Tim_Smart: Maybe net just got neglect :p
[03:10] micheil: maybe
[03:10] mikew3c_ has joined the channel
[03:11] micheil: C Ares exports some constants
[03:11] micheil: but I think they should stay there, as they're very specific
[03:11] micheil: (but they aren't defined in node_constants)
[03:12] UHMA has joined the channel
[03:12] Tim_Smart: brb shower
[03:13] sstephenson has joined the channel
[03:13] mtodd has joined the channel
[03:15] jchris has joined the channel
[03:16] micheil: why do we have process.ARGV and process.argv?
[03:17] micheil: just like process.ENV and process.env
[03:17] micheil: we should probably just define it in one case.
[03:19] mikeal: backward compat
[03:19] mikeal: ry moved them at some point
[03:19] mikeal: and left the old ones to prevent breakage
[03:19] micheil: hmm, isn't the idea of 0.3.X to break a few backwards compat things?
[03:19] mikeal: yup
[03:19] dquestions has joined the channel
[03:19] micheil: mikeal: also, 11.30am SF and 5.30am AEST, tomorrow, see you there?
[03:20] mikeal: ask him which ones he wants to keep and remove the others
[03:20] micheil: yeah
[03:20] mikeal: sure
[03:20] micheil: okay, cool.
[03:20] micheil: do we have any guests this week?
[03:20] mtodd has joined the channel
[03:21] micheil: mikeal: also, probably an idea to sketch out a flow for the show
[03:25] hassox has joined the channel
[03:26] micheil: hmm.. can errno_string and signo_string be done else where?
[03:26] micheil: like node.h or something, instead of node.cc
[03:29] silence has joined the channel
[03:30] rpflo has joined the channel
[03:31] benburkert has joined the channel
[03:33] dquestions has joined the channel
[03:33] hzin has joined the channel
[03:34] cloudhead has joined the channel
[03:38] devinus has left the channel
[03:40] blaines has joined the channel
[03:46] TheEmpath has joined the channel
[03:47] TheEmpath: bad news team
[03:47] TheEmpath: i was able to simulate 200 connections on my server through 200 iframes lol
[03:47] breccan has joined the channel
[03:47] nerdEd has joined the channel
[03:47] TheEmpath: granted, dom bubbling is a horrible event queue and a few connections disconnected due to broken pipes and bad datagrams
[03:47] Tim_Smart: *facepalm*
[03:47] TheEmpath: but thats not the bad part
[03:48] TheEmpath: the bad part is with socket.io
[03:48] TheEmpath: when i disconnect all 200 users at the same time, node.js's non-blocking becomes blocking
[03:48] TheEmpath: all users have to disconnect before the server does anything else
[03:49] Aria: Interesting. It's a sync operation?
[03:49] TheEmpath: reducing socket.io's verbosity may help, but i think something is blocking inside it
[03:49] Aria: And takes non-negligible amounts of time?
[03:49] TheEmpath: dunno
[03:49] TheEmpath: but i just experienced it and i was shamefully dismayed
[03:50] TheEmpath: all the clients connected via flashsocket if that helps
[03:51] badaxx_ has joined the channel
[03:52] Arro has joined the channel
[03:52] crodas has joined the channel
[03:52] davidascher has joined the channel
[03:52] TheEmpath: okay thats all for tonight, should i file a bug?
[03:53] Tim_Smart: On socketio yes
[03:54] aurynn has joined the channel
[03:55] deepthawtz has joined the channel
[03:55] micheil: TheEmpath: yeah, iirc, the current socket.io connect manager will lock
[03:56] TheEmpath: ah
[03:56] Me1000 has joined the channel
[03:56] micheil: because it's just an object and you can only mutate it so much /sec
[03:56] tmpvar has joined the channel
[03:56] micheil: TheEmpath: could you perform a similar test using node-websocket-server as the websocket server?
[03:56] tmpvar: damn creationix and his busyness
[03:56] TheEmpath: dunno, i can try
[03:56] tmpvar: *fists*
[03:56] chewbranca has joined the channel
[03:56] micheil: TheEmpath: thanks
[03:57] sstephenson has joined the channel
[03:58] devinus has joined the channel
[03:58] devinus: http://arewefastyet.com/ holy shit
[03:59] tmpvar: are they fast?
[03:59] micheil: oh man.
[03:59] tmpvar: not quite
[03:59] micheil: Mozilla + JIT + TM
[03:59] mape: kinda
[03:59] micheil: it's the fastest
[03:59] micheil: on the sunspider benchmark
[04:00] micheil: chrome still kills on the v8bench
[04:00] Arro: if i have an object of clients 'clients' indexed by sessionid, and i have a the session id (say '123'), how would i get that object.  clients['123'] doesn't work
[04:00] tmpvar: is that not biased?
[04:00] Arro: that should be a question mark ^^
[04:00] micheil: tmpvar: well, mozilla is killing on their sunspider benchmark now
[04:01] devinus: and also mozilla's kraken benchmark
[04:01] Tim_Smart: nitro is still taking the 64 bit cake tbh.
[04:01] guybrush: so nodejs will switch from v8 to TM+JM? :D
[04:02] Tim_Smart: Naw. V8 has more potential to be honest.
[04:02] Tim_Smart: Has some crazy awesome engineers behind it
[04:02] blaines has joined the channel
[04:03] Tim_Smart: And apparently it is a much cleaner implementation ^^
[04:03] guybrush: heard about that, yes - i guess there is also more money involved
[04:03] micheil: guybrush: no, node will still use v8, it's just a friendly thing to see what's faster
[04:04] rbranson: lolololo at node switching off V8
[04:04] rbranson: would have to rewrite like half the code 
[04:04] guybrush: ahaha
[04:04] rbranson: and all the addons would have to be rewritten
[04:04] micheil: yeah
[04:04] abstractj has joined the channel
[04:05] Tim_Smart: V8 sounds more awesome too. "My node is powered by a V8"
[04:05] micheil: haha
[04:05] guybrush: ye this picture they use as logo is great
[04:05] Tim_Smart: Instead of "My node is powered by a monkey"
[04:06] guybrush: i can imagine the sound it makes
[04:06] breccan_ has joined the channel
[04:07] micheil: Tim_Smart: if you give monkeys typewriters, it supposedly is possible for them to write shakespear
[04:07] micheil: but if you give them coffee machines, they can't make coffee.
[04:07] Tim_Smart: You give a V8 a typewriter, and it won't care and just make awesome noises.
[04:07] micheil: haha
[04:08] tmpvar: O.o
[04:08] Tim_Smart: It knows to leave the typing to the developer.
[04:08] mbrochh has joined the channel
[04:08] blaines has joined the channel
[04:09] matjas has joined the channel
[04:09] chapel: http://i.imgur.com/3Xfh4.png << you might like this
[04:10] gkatsev: haha, I hate when that happens.
[04:10] tmpvar: lmfao
[04:10] tmpvar: derp
[04:10] micheil: chapel: http://arewefirstyet.com ?
[04:10] blaines has joined the channel
[04:10] gkatsev: though, I hate these FU comics, I just can't stand them for some reason
[04:11] JESUSABDULLAH: I lurve fuuuu comics
[04:14] blaines has joined the channel
[04:16] johngbrooks has joined the channel
[04:18] blaines has joined the channel
[04:19] chapel: what is that site micheil ?
[04:20] MikhX has joined the channel
[04:20] micheil: it's a site measuring where JavaScript appears on google
[04:22] blaines has joined the channel
[04:22] StanAngeloff has joined the channel
[04:26] siculars has joined the channel
[04:30] blaines has joined the channel
[04:33] matjas has joined the channel
[04:35] ThePub has joined the channel
[04:39] davidsklar has joined the channel
[04:40] killfill has joined the channel
[04:42] admc has joined the channel
[04:44] blaines has joined the channel
[04:45] siculars has joined the channel
[04:45] Validatorian: when making a request for https, what else do I have to do besides add 'true' to createClient like so: http.createClient(80, 'www.besecure.com', true);
[04:45] Validatorian: any special requires, other code that I need?
[04:46] micheil: port should probably be 443
[04:47] Validatorian: ah
[04:47] Validatorian: worked, thanks :)
[04:48] MattDiPasquale has joined the channel
[04:49] micheil: yeah https is always generally over port 443
[04:49] micheil: http is port 80 generally
[04:49] Validatorian: yea, I've just always used 80 there, so it looked almost like static data, wasn't even thinking about port
[04:49] siculars_ has joined the channel
[04:50] micheil: you probably also need the 4th argument
[04:50] micheil: called "credentials"
[04:50] Validatorian: doesn't appear so, for this site
[04:50] micheil: k then
[04:50] kjeldahl has joined the channel
[04:51] Validatorian: appreciate it :)
[04:55] mikeal has joined the channel
[04:58] twoism has joined the channel
[05:01] micheil: hmm..
[05:02] micheil: the way that http.createClient sets secure is different to how http.createServer set's secure
[05:02] JESUSABDULLAH: Better fix it!
[05:02] micheil: it seems odd
[05:03] micheil: thinking it should be the standard stuff with client.setSecure rather then having https in a argument
[05:14] holydevil has joined the channel
[05:24] path[l] has joined the channel
[05:27] jamesarosen has joined the channel
[05:31] twoism has joined the channel
[05:33] hzin has joined the channel
[05:33] jacksonh has joined the channel
[05:35] amerine has joined the channel
[05:36] amerine has joined the channel
[05:37] masahiroh has joined the channel
[05:41] dylang has joined the channel
[05:49] gerred has joined the channel
[05:50] saikat has joined the channel
[06:03] aurynn has joined the channel
[06:04] Gruni has joined the channel
[06:04] SamuraiJack has joined the channel
[06:08] mbrochh has joined the channel
[06:13] jansc has joined the channel
[06:14] simme has joined the channel
[06:17] dohtem has joined the channel
[06:17] dohtem has joined the channel
[06:18] jacobolus has joined the channel
[06:19] cagdas has joined the channel
[06:20] jhelwig has joined the channel
[06:22] jhelwig has joined the channel
[06:22] SINPacifist has joined the channel
[06:23] cardona507 has joined the channel
[06:33] mr_daniel has joined the channel
[06:34] yviktorov has joined the channel
[06:34] nsyee has joined the channel
[06:48] ph^ has joined the channel
[06:54] dylang_ has joined the channel
[06:56] mikecsh has joined the channel
[07:00] dylang has joined the channel
[07:03] m64253 has joined the channel
[07:08] maru_cc has joined the channel
[07:13] path[l] has joined the channel
[07:19] Validatorian has joined the channel
[07:20] Validatorian: Anyone have strong opinions related to which JS-based templating engine is best and why?
[07:21] nsm has joined the channel
[07:22] masahiroh has joined the channel
[07:25] Anti-X has joined the channel
[07:25] micheil: Validatorian: yes.
[07:25] micheil: Jade is teh best.
[07:26] adambeynon has joined the channel
[07:26] micheil: Validatorian: also, open field?
[07:26] Validatorian: should have specified -- I mean for the client, don't have node on this project (yet.. I'm pushing for it!)
[07:27] nrub has joined the channel
[07:27] Jonasbn_ has joined the channel
[07:27] fbits has joined the channel
[07:27] micheil: Validatorian: I did port Jade to the client side, but I haven't had time to maintain it
[07:28] micheil: it's about Aug 2010 the current jade clientside implementation
[07:28] Validatorian: oh? I'll go take a look
[07:28] micheil: it's on the githubs.
[07:28] JESUSABDULLAH: What's missing, micheil?
[07:28] Anti-X: following enterprise mentality, an august release is too new
[07:28] JESUSABDULLAH: ^^ XD
[07:28] micheil: JESUSABDULLAH: well, all the filters don't work, and it's not as fast / smooth as the current Jade master
[07:29] Anti-X: smoost
[07:29] JESUSABDULLAH: micheil: I guess I mean, what's missing on the client side that you had to reimplement, etc.?
[07:30] micheil: oh
[07:30] micheil: Jade uses a bunch of ES5 only stuff
[07:30] JESUSABDULLAH: ah
[07:30] sidewagont has joined the channel
[07:30] micheil: so it doesn't move across to the browser nicely
[07:30] sidewagont: http://pastebin.com/sAAQg9Sa
[07:30] sidewagont: can some take a look at this
[07:30] sidewagont: it redirects to janrain authenicates
[07:30] sidewagont: and then comes back, console logs authenicated
[07:31] sidewagont: but then it says Can not Get /secure
[07:31] Roelven has joined the channel
[07:31] sidewagont: it seems next() is behaving weirdly
[07:31] d0k has joined the channel
[07:31] JESUSABDULLAH: micheil: Does it work in chrome? :o
[07:32] micheil: it probably would.
[07:32] micheil: but may not
[07:32] micheil: because node uses latest stable of v8
[07:32] micheil: and the release cycle of v8 in node is quicker then in chrome
[07:32] JESUSABDULLAH: noooooode! *wah wahhhh*
[07:34] sidewagont: will next() drop into same callback as secure when using middleware functions like this
[07:34] sidewagont: docs seems to suggest so
[07:34] sidewagont: mightly confused
[07:34] Anti-X: with jade, can't you just compile it server side and put the rendering part on the client?
[07:35] masahiroh has joined the channel
[07:35] Druid_ has joined the channel
[07:37] micheil: Anti-X: maybe.
[07:37] micheil: theoretically, yes
[07:37] Anti-X: so that it's a string of strings and variables
[07:37] micheil: pratically, I'm not sure
[07:37] Anti-X: and closures
[07:37] herbySk has joined the channel
[07:39] micheil: like, if Jade compiles to something that uses some ES5 stuff, then you couldn't just compile on the server and render on the client
[07:39] Anti-X: true, but i can't quite see where it would do that
[07:39] micheil: but if it doesn't compile to stuff with ES5 features being used in it, then you could
[07:39] micheil: ACTION should grab a copy of the latest
[07:40] themiddleman has joined the channel
[07:40] Tprice has joined the channel
[07:41] micheil: you may also hit conflicts between Jade and Underscore.js
[07:41] cagdas: what happened to json template?
[07:41] Anti-X: bad idea
[07:41] Anti-X: that's what
[07:41] cagdas: I see
[07:42] micheil: yeah, Jade is awesome awesome code.
[07:42] sidewagont: http://pastebin.com/XEpJZpEy
[07:42] pufuwozu has joined the channel
[07:42] sidewagont: something is messed up, even this doesnt work
[07:43] mytrile has joined the channel
[07:45] micheil: sidewagont: probably ask in a mailing list for express/connect if one exists on on the node.js mailing list
[07:48] pufuwozu has joined the channel
[07:51] JESUSABDULLAH: ACTION uses javascript for schoolwork
[07:51] JESUSABDULLAH: YEAH NODE YOU JOSTLE THOSE JSONS
[07:52] Anti-X: you can jostle my jason any day
[07:52] Anti-X: ALSO WHATS WITH THE CAPS, JESUS?
[07:52] JESUSABDULLAH: CAPSLOCK DAY
[07:53] Anti-X: LIES
[07:53] JESUSABDULLAH: NUH UH
[07:53] Anti-X: that was months ago
[07:54] pufuwozu has joined the channel
[07:55] JESUSABDULLAH: No, it's definitely Oct. 22nd
[07:55] Anti-X: wrong
[07:55] Anti-X: oct 22nd is the day before my birthday
[07:55] Anti-X: and has always been
[07:55] JESUSABDULLAH: orly?
[07:55] Anti-X: it's definately not capslock day
[07:55] SUBSTACK: MY BIRTHDAY IS ALSO CAPS LOCK DAY
[07:55] JESUSABDULLAH: Happy early birthday then!
[07:55] Anti-X: it can't be two things
[07:55] JESUSABDULLAH: WHAT
[07:55] JESUSABDULLAH: SUBSTACK HAPPY BIRTHDAY HOLY SHIT
[07:55] SUBSTACK: Anti-X: let's share a party
[07:56] SUBSTACK: we can save money on cake that way
[07:56] Anti-X: your bday tomorrow?
[07:56] JESUSABDULLAH: You can each have half a party.
[07:57] SUBSTACK: to celebrate I'm staying in my apartment all day and avoiding people so I can be productive
[07:57] SUBSTACK: just like I do every day
[07:57] SUBSTACK: actually I am almost out of coffee beans so I had better get some of those soon
[07:58] Anti-X: digitalspaghetti also has a bday tomorrow, so i prefer partying with him if your bday is only today
[07:58] MikhX has joined the channel
[07:58] SUBSTACK: well I was born OCT 22 23:35
[07:58] SUBSTACK: which is almost OCT 23
[07:59] pufuwozu has joined the channel
[07:59] Anti-X: ok
[07:59] Anti-X: then you can come
[07:59] SUBSTACK: and it was the 23rd in UTC
[08:00] Anti-X: true
[08:00] SUBSTACK: I hate how nothing is ever open from 00:00 to 07:00
[08:01] Anti-X: i love how nothing is ever open from 00:00 to 07:00
[08:01] Anti-X: everybody are sleeping, and you can develop without interruption
[08:02] SUBSTACK: hmm true
[08:02] Anti-X: mad scientist ftw
[08:02] SUBSTACK: but if you need spare parts for your mad science
[08:02] SUBSTACK: annoying to have to wait until stuff opens
[08:02] Anti-X: my mad science is virtual
[08:04] delapouite has joined the channel
[08:05] saikat has joined the channel
[08:05] pufuwozu has joined the channel
[08:06] sidewagont: ah FFS, 2 hrs waited, upgraded to express rc 4 and it works
[08:07] JESUSABDULLAH: I really need to get a good system going for plotting in the browser from node.js
[08:08] JESUSABDULLAH: Like, a dnode-enabled server combined with some SS data manipulation toys
[08:08] JESUSABDULLAH: or some such
[08:08] alxc1 has joined the channel
[08:08] mbrochh has joined the channel
[08:10] Anti-X: i vote for some such
[08:10] Anti-X: sounds more applicable
[08:14] Anti-X has joined the channel
[08:18] virtuo has joined the channel
[08:19] markwubben has joined the channel
[08:32] alystair has joined the channel
[08:32] alystair: hrm, does the api site freeze up for anyone else under firefox
[08:33] alystair: seems to be some intensive javascript going on there
[08:33] hzin_ has joined the channel
[08:34] hzin has joined the channel
[08:35] alystair: also I find the man pages a bit more readable than the api site >_>
[08:39] chrischris has joined the channel
[08:41] alystair: Script: chrome://dpace/content/utils.js:12 <- seems to be the cause
[08:44] nrub has joined the channel
[08:44] AAA_awright: alystair: That would be an add-on I don't seem to have that file
[08:45] alystair: AAA_awright: thanks!
[08:45] AAA_awright: alystair: After opening my install of Firefox, at least, I switched to Chrome because it's so noticibly faster on my Atom-powered mini notebook
[08:47] nrub` has joined the channel
[08:47] alystair: AAA_awright: it's just that I use firefox for my day to day development, and general browsing in chrome :)
[08:47] alystair: until chrome's dev tools catch up to the ease of firebug, etc.. no dice 
[08:47] alystair: ACTION wishes for chromebug :>
[08:47] AAA_awright: I caught on to Chrome much faster than any of the tools for Firefox
[08:48] AAA_awright: Except for the raw HTTP headers, Chrome doesn't like to show you all of them for some reason, and you have to load the resource inspector
[08:48] alystair: AAA_awright: as a developer chrome's nice
[08:48] alystair: as a designer... not so much.
[08:48] AAA_awright: For modifying the DOM and such it's about as good as the DOM inspector
[08:48] AAA_awright: Though I guess that's not saying much
[08:49] alystair: modifying css and minor html tweeks within chrome is a bit more painful than FF
[08:50] grove has joined the channel
[08:51] stephank has joined the channel
[08:52] alystair: ACTION wishes js had heredocs
[08:55] SUBSTACK: browser-side JS has them
[08:55] alystair: SUBSTACK: really?
[08:56] alystair: I mean in the non hackish way
[08:57] alystair: oh wait
[08:57] sideshowcoder has joined the channel
[08:58] aubergine has joined the channel
[08:59] alystair: ACTION never knew of the \ trick
[09:05] SUBSTACK: oh that too
[09:05] SUBSTACK: not what I mean though, I mean that ugly CDATA thing
[09:06] JESUSABDULLAH: heredocks?
[09:10] nrub`` has joined the channel
[09:11] amrnt has joined the channel
[09:12] path[l] has joined the channel
[09:14] femtoo has joined the channel
[09:18] TomY has joined the channel
[09:18] svnlto has joined the channel
[09:20] alystair: cdata thing looks evil, won't be touching it :)
[09:20] dgathright has joined the channel
[09:26] Anti-X: evil is good
[09:26] Anti-X: if it's not your own problem
[09:26] alystair: Anti-X: you must be a consultant
[09:26] Anti-X: i thought you'd say that
[09:26] Anti-X: :P
[09:27] Anti-X: and yes, it was sarcasm directed at consultants
[09:27] StanAngeloff has joined the channel
[09:29] Anti-X: the more evil it is, the more they will require you around to fix shit
[09:29] aliem has joined the channel
[09:30] alystair: so, with that hypothesis, the best situation is to be a consultant that advises the development team to use... worse practices!
[09:30] alystair: or know a hiring consultant that can sabotage everything
[09:30] alystair: tl;dr, evil in a can
[09:30] bencc has joined the channel
[09:32] zomgbie has joined the channel
[09:33] ctp has joined the channel
[09:37] zomgbie_ has joined the channel
[09:38] buu has joined the channel
[09:39] fyskij has joined the channel
[09:42] Tim_Smart: Hmm mikeal's request seems to follow redirects even with followRedirect set to false.
[09:45] Anti-X: are you saying there's a bug?!?
[09:45] Anti-X: how dare you
[09:48] Ori_P has joined the channel
[09:50] kkaefer: is there a benchmarking framework for node.js?
[09:50] kkaefer: e.g. something that allows me to easily test a revised implementation against the current baseline?
[09:54] Anti-X: i just run 'time' on the tests for each commit
[09:54] Anti-X: and write it down
[09:54] Anti-X: and a star next to it if the tests were changed too
[09:55] Anti-X: very crude
[10:00] amrnt has joined the channel
[10:00] oal has joined the channel
[10:04] FLYBYME has joined the channel
[10:06] freeall has joined the channel
[10:07] freeall: Hi. Does anyone know how I remove a local module from npm?
[10:07] freeall: I installed it using npm link, and now the file has been deleted
[10:08] sth:  /usr/local/share/node/.npm
[10:09] mbrochh has joined the channel
[10:09] grove has joined the channel
[10:09] mbrochh has joined the channel
[10:09] sth: mm maybe not
[10:09] freeall: sth, I don't have that file
[10:09] sth:  /usr/local/lib/node/
[10:10] themiddleman has joined the channel
[10:10] omarkj has joined the channel
[10:10] freeall: sth, ahh, yeah, found it. Can I just remove the folders from there?
[10:10] sth: yup
[10:10] sth: and /usr/local/lib/node/.npm
[10:11] bencc1 has joined the channel
[10:12] amrnt has joined the channel
[10:13] freeall: sth, thanks :) Saved me having to copy the files back to the old location, run the uninstall command and remove the files again.
[10:14] alystair: Anti-X: you mean developing node-js or an application using node-js
[10:14] alystair: if the latter, could use sys.log with time stamping...
[10:14] Anti-X: apps
[10:14] alystair: or even create another node.js app to record all the time codes :D
[10:14] stagas has joined the channel
[10:15] alystair: within a test harness
[10:15] Anti-X: nodeunit outputs timing
[10:15] alystair: mmm
[10:15] alystair: neat
[10:15] Anti-X: but i'm not sure if it also includes startup time
[10:15] sth: I use expresso to test
[10:15] Anti-X: because it's oddly long
[10:15] alystair: ACTION really needs to finish reading the docs
[10:16] stagas: http://chat.stackoverflow.com/rooms/134/node-js
[10:16] stagas: :P
[10:18] alystair: visionmedia is a beast
[10:19] Anti-X: i found a concept file i for some reason called 'shit.js', and i did 'cat shit.js' to see what it was
[10:19] Anti-X: and i lol'd
[10:25] xla has joined the channel
[10:27] kkaefer: is there a simple example for a secure client/server socket? 
[10:27] kkaefer: (one that doesn't do HTTP)
[10:29] xla has joined the channel
[10:37] stephank: Is google groups always this slow? I sent a mail at 10 AM, it's now past 12:30 but nothing. Or is there moderation?
[10:40] agnat has joined the channel
[10:48] devinus has joined the channel
[10:48] Anti-X has joined the channel
[10:48] Anti-X: spank the monkey
[10:49] Anti-X: early weekend
[10:49] Anti-X: ten to one
[10:51] leeeb has joined the channel
[10:52] MikhX has joined the channel
[10:52] fermion has joined the channel
[10:55] rubyphunk has joined the channel
[10:56] aheckmann has joined the channel
[10:57] abstractj has joined the channel
[10:59] crohr has joined the channel
[11:03] Anti-X has joined the channel
[11:03] Anti-X: "are you our new ruby on rails developer?" <-- i didn't know rails was for actual developers
[11:03] amrnt has joined the channel
[11:03] TomsB has joined the channel
[11:04] MattJ has joined the channel
[11:07] fbits has joined the channel
[11:13] zorzar has joined the channel
[11:17] chapel: how would I use this in my node app http://gist.github.com/628208 ?
[11:18] Anti-X has joined the channel
[11:23] hellp has joined the channel
[11:24] stepheneb has joined the channel
[11:26] alystair has left the channel
[11:27] derencius has joined the channel
[11:27] stagas: chapel: what do you mean? there are 2 examples there
[11:27] chapel: well sure
[11:27] chapel: but the main code
[11:28] chapel: I put it in a file, did a require with proper dir
[11:28] chapel: doesn't work
[11:28] chapel: same with just slapping the code inline
[11:30] jasondavies has joined the channel
[11:31] bencc has joined the channel
[11:33] stagas: it works here perfectly. did you do: var LimitingQueue = require('./limitingqueue.js')
[11:34] chapel: hmm
[11:34] chapel: i did var queue = require..
[11:35] chapel: would I have to then do var q = new queue(1); ?
[11:35] chapel: is that what I am missing?
[11:39] stagas: yes
[11:40] derencius has joined the channel
[11:40] herbySk has joined the channel
[11:41] stagas: but it's a constructor so have the 1st char capitalized
[11:42] stagas: it should work as it is, it's just better to distinguish constructors so you know they are to be called with 'new'
[11:42] jetienne has joined the channel
[11:43] rnewson has joined the channel
[11:44] chapel: ah
[11:45] herbySk74 has joined the channel
[11:47] mif86 has joined the channel
[11:48] Anti-X has joined the channel
[11:48] eee_c has joined the channel
[11:50] JimBastard has joined the channel
[11:50] JimBastard:       out(sprintf('%.2f %.2f %.2f %.2f re %s', x * k, (pageHeight - y) * k, w * k, -h * k, op)); 
[11:50] JimBastard: i mean seriously
[11:50] JimBastard: can anyone guess what that does?
[11:51] dtrasbo has joined the channel
[11:51] bruse: not really
[11:52] JimBastard: pdf.js is evil 
[11:52] JimBastard: k = 1, its the scale
[11:52] JimBastard: lol
[11:53] JimBastard: http://github.com/Marak/pdf.js/commit/e36a7d74154ef9ade02a70d130ffe2ee73a520f5
[11:55] romanb has joined the channel
[11:57] chapel: self.fd = socket(self.type);
[11:57] chapel:                   ^
[11:57] chapel: Error: EMFILE, Too many open files
[11:57] dtrasbo: hi I'm trying to use node with express and socket.io
[11:57] dtrasbo: in this error message: The `flashsocket` transport requires that you call io.setPath() with the path to the socket.io client dir.
[11:57] JimBastard: chapel: that will happen
[11:57] dtrasbo: what does "client dir" mean?
[11:57] chapel: what should I do about it?
[11:57] JimBastard: ulimit -a 
[11:57] JimBastard: tell me your "open files" value
[11:57] Anti-X: JimBastard, as long as it outputs a correct pdf, why would anyone care what it does internally? :P
[11:57] chapel: 256
[11:58] JimBastard: Anti-X: its all moonspeak to me, its poscript right?
[11:58] chapel: I think I had that before
[11:58] chapel: had to up it to 1024 or something
[11:58] JimBastard: so chapel , you can increase it if you want
[11:58] JimBastard: but that wont fix the root cause
[11:58] JimBastard: ask yourself
[11:58] JimBastard: do you really need a FD?
[11:58] JimBastard: in most cases, you can mitigate the amount of open FDs through a pool or cache
[11:58] chapel: well
[11:58] chapel: I am using a queue thingy
[11:59] JimBastard: ahh a queue thingy, of course
[11:59] chapel: and I have it at 2 ops a sec
[11:59] chapel: had it at 5 and it was giving an error
[11:59] chapel: http://gist.github.com/628208 << that is it
[11:59] Anti-X: JimBastard, sprintf is a common C function, and the %.2f are formatting codes, converting each of the parameters into floats with 2 decimals
[11:59] JimBastard: you arent releasing FDs
[11:59] JimBastard: reading
[11:59] chapel: ah hmm, FD, not sure what you mean by that sorry
[11:59] ben_alman has joined the channel
[12:00] grove_ has joined the channel
[12:00] JimBastard: chapel: you'll have to ask bmeck about that code
[12:00] JimBastard: i have no idea what he did
[12:00] chapel: well atm, I am hitting up two things, an api and my couchdb
[12:01] Anti-X: fd = file descriptor
[12:01] Anti-X: open returns one
[12:01] Anti-X: you need to close it
[12:01] JimBastard: you can do a lsof -p 14144 | wc -l on your pid
[12:01] JimBastard: to keep count
[12:01] JimBastard: you need to close that shit though
[12:01] JimBastard: yeah
[12:01] JimBastard: you prob arent closing requests
[12:01] chapel: well I am using require
[12:02] JimBastard: or you are spamming a bunch of connections
[12:02] chapel: bah
[12:02] chapel: request
[12:02] chapel: thats the only thing that uses fd
[12:02] chapel: or whatever
[12:02] JimBastard: how many requests are you sending?
[12:02] stagas has joined the channel
[12:02] chapel: a lot :P
[12:02] JimBastard: you need a pool
[12:02] chapel: I figured the queue thing would work
[12:02] JimBastard: its creating a new connection everytime i bet
[12:02] chapel: I am using it for every net connection
[12:03] JimBastard: all net connections go to the same place?
[12:03] chapel: well
[12:03] chapel: for the api, its different urls
[12:03] JimBastard: same host
[12:03] chapel: the db, only 2 databases I am either getting data from or writing to
[12:03] chapel: yes same host
[12:04] JimBastard: http://github.com/mikeal/proxypool
[12:04] JimBastard: yeah thats not gonna help
[12:05] JimBastard: refactor your shit
[12:05] JimBastard: or increase FDs
[12:05] JimBastard: queue is not gonna help either
[12:05] grove has joined the channel
[12:05] c4milo has joined the channel
[12:05] chapel: well Ill need a queue to make sure I am not hitting the api too much, has a 300/m or 5/s limit
[12:06] Anti-X: wot?
[12:06] Nohryb has joined the channel
[12:06] chapel: 300 requests
[12:06] chapel: a minute
[12:06] chapel: or 5 a second
[12:06] chapel: before they throttle you until the next minute
[12:06] chapel: or eventually ban your api key
[12:07] Anti-X: ah externally
[12:07] Anti-X: get it
[12:07] Anti-X: i thought you were limiting your own users
[12:07] chapel: naw
[12:07] mjr_ has joined the channel
[12:07] chapel: so for proxypool, any docs on it?
[12:08] chapel: does it just keep an open connection and you send your requests through it
[12:10] shimondoodkin has joined the channel
[12:11] herbySk has joined the channel
[12:12] Anti-X: http://thedailywtf.com/Articles/ArticleTypeCodeSOD.aspx
[12:12] Anti-X: enterprise code
[12:13] bencc1 has joined the channel
[12:14] JimBastard: chapel: you don tneed that
[12:14] chapel: ok
[12:14] JimBastard: just open one connection and reuse it
[12:14] chapel: not sure how to do that with request, or am I going to have to go barebones?
[12:14] JimBastard: http.Client
[12:15] chapel: okay, so I guess Im going barebones, I will play with it
[12:15] chapel: I dont mind going to core, its great to learn
[12:15] chapel: appreciate the help
[12:16] eee_c has joined the channel
[12:17] shimondoodkin: anybody know npm well and can talk about it?
[12:19] ph^ has joined the channel
[12:20] shimondoodkin: is there someone here who knows npm well and can talk about it?
[12:21] Anti-X: depends what you wanna know
[12:22] shimondoodkin: is there a way to do a configuration or system configuration managment script?
[12:22] dtrasbo: imaginary beer to anyone who can help me with some socket.io for a min
[12:22] shimondoodkin: like npm configure myextention
[12:22] dtrasbo: nothing special - just need to get it set up properly
[12:22] Anti-X: shimondoodkin, you can run a preinstall script when someone installs your module
[12:22] shimondoodkin: no not preinstall
[12:22] shimondoodkin: like postinstall global use
[12:23] shimondoodkin: i have this http://github.com/shimondoodkin/nodejs-autorestart
[12:23] shimondoodkin: i want to make it work with npm
[12:23] shimondoodkin: and express
[12:23] shimondoodkin:  simply
[12:25] dtrasbo: with this: https://gist.github.com/09d570b5d613d9f83bbc
[12:25] dtrasbo: shouldn't the client side js be served by a request to http://llocalhost:3000/socket.io/socket.io.js ?
[12:25] Anti-X: shimondoodkin well look at the package.json for npm itself and you can see how the cli command 'npm' is initialized
[12:25] abstractj has joined the channel
[12:25] MattDiPasquale has joined the channel
[12:26] stagas: shimondoodkin: you can use 'bin' to make a script accessible
[12:26] Anti-X: you define a 'bin' in your package
[12:26] Anti-X: blah
[12:26] stagas: shimondoodkin: take a look http://github.com/stagas/node-polla/blob/master/package.json
[12:27] Anti-X: dtrasbo, you're not giving the client anything
[12:27] stagas: shimondoodkin: then put #!/usr/bin/env node    at the top of your script if it's a node script or it can be anything executable
[12:27] Anti-X: you're just outputting to console
[12:27] shimondoodkin: what it does?
[12:28] shimondoodkin: the bin cconfig
[12:28] dtrasbo: Anti-X: yeah, I'm just trying to get it working
[12:28] cyraxx: is one of the guys from debuggable here?
[12:28] dtrasbo: Anti-X: the docs says that socket.io should serve the client side js itself
[12:28] Anti-X: yeah you put it in a script tag
[12:29] Anti-X: <script src="....socket.io.js">
[12:29] cyraxx: dtrasbo: did you install socket.io via npm?
[12:29] dtrasbo: cyraxx: yep
[12:29] cyraxx: that version doesn't have that included
[12:29] dtrasbo: cyraxx: oh great
[12:29] cyraxx: i just found that out two days ago myself ;)
[12:29] stagas: shimondoodkin: it assigns the 'key' argument to the 'value' script. that way wherever I type 'polla' it would run ./polla.js
[12:29] cyraxx: got the recent version via git, now it works
[12:29] jasondavies has joined the channel
[12:29] jasondavies has joined the channel
[12:29] Anti-X: you just need to get the dependencies
[12:30] Anti-X: they all go into the 'support' folder
[12:30] Anti-X: or whatever it's called
[12:30] dtrasbo: Anti-X: I think the docs I read was for master - unreleased feature
[12:30] dtrasbo: I'll use middleware to serve it manually for now
[12:30] Anti-X: no that description has been there
[12:31] cyraxx: the version of socket.io i got via npm didn't have the code that checks for a .js request at all
[12:31] shimondoodkin: stagas: thanks that might be  fine
[12:32] shimondoodkin: Anti-X: thank you also
[12:32] Anti-X: cyraxx, it doesn't check for a .js request
[12:32] Anti-X: it checks for a request containing the phrase 'socket.io'
[12:32] Anti-X: probably as the first path name
[12:33] Anti-X: that's how it knows the request is for it
[12:33] Anti-X: otherwise it just passes it on to the server you wrote
[12:33] cyraxx: well, it first checks for the resource name (usually 'socket.io') as the first part of the request, yes
[12:34] cyraxx: but after that, in the recent version, there's a check if .js follows after that and if so, the client-js file is delivered
[12:34] cyraxx: in the version i got from npm, that check wasn't there and therefore the .js request was treated as a normal socket.io request which lead to an error message
[12:35] cyraxx: *led
[12:35] Anti-X: ah ok
[12:35] SUBSTACK: wow I like the way of doing it
[12:35] Anti-X: hush, you 22nder
[12:35] xla has joined the channel
[12:36] SUBSTACK: *that
[12:36] SUBSTACK: Anti-X: 23rder now
[12:36] SUBSTACK: oh you mean day-wise
[12:36] jakehow has joined the channel
[12:36] SUBSTACK: was thinking year-wise
[12:36] Anti-X: it's getting really cold... so i took the laptop's power adapter and put it under my shirt
[12:37] Anti-X: nice and warm
[12:37] Anti-X: i'll probably get used to it, and then get burn marks
[12:37] Anti-X: not noticing it's getting hotter and hotter
[12:38] herbySk has joined the channel
[12:40] xla has joined the channel
[12:40] Anti-X: it's the arteries i'd wanna heat up isn't it? i should duct tape it to my neck
[12:41] dtrasbo: so this is my server and client
[12:41] dtrasbo: https://gist.github.com/3acadadd28e0f8a6f950
[12:41] dtrasbo: no errors on startup
[12:41] dtrasbo: no errors from firebug
[12:41] dtrasbo: but no alert box telling me I've connected
[12:41] dtrasbo: is it on('connect') or on('connection') ?
[12:41] Anti-X: you need to call socket.connect()
[12:41] Anti-X: on the client
[12:42] micheil: dtrasbo: depends
[12:42] micheil: client is a connect event
[12:42] badaxx has joined the channel
[12:42] micheil: server is a connection event
[12:42] dtrasbo: micheil: consistency ftw? :P
[12:42] micheil: (client is an instance of net.Stream)
[12:42] dtrasbo: ah
[12:42] dtrasbo: Anti-X: that might work
[12:42] micheil: (server is an instance of net.Server)
[12:42] Anti-X: dtrasbo, might? it will.
[12:42] charlenopires has joined the channel
[12:42] micheil: dtrasbo: I actually emailed ryah_ about some of that stuff today
[12:43] micheil: dtrasbo: let me check that code..
[12:43] Anti-X: i think you're confusing his question
[12:43] Anti-X: it's socket.io
[12:43] micheil: Anti-X: perhaps, yes
[12:43] Anti-X: you've been seeing too many streams the past few days
[12:44] dtrasbo: Anti-X: it's just that I've been trying to make this work for quite some time now, and now it turns out that I'm just missing a function call
[12:44] dtrasbo: weheee :)
[12:44] Anti-X: congratulations
[12:44] Anti-X: i had the same problem
[12:44] Anti-X: then i checked out the chat example
[12:44] micheil: but yeah, generally stuff is a connect event
[12:44] ntelford has joined the channel
[12:44] hoodoos: hey guys, is there any lib in node.js that can crypt given info in rsa2048 with public key?
[12:45] micheil: generally I don't think you need to call socket.connect()
[12:45] dtrasbo: wow, I never thought I could make this black magic work
[12:45] micheil: actually, yeah client side you do
[12:45] siculars has joined the channel
[12:45] Anti-X: in socket.io you do
[12:45] micheil: yeah
[12:45] EvanDotPro has joined the channel
[12:45] dtrasbo: from a newbie perspective this is some really mind bending stuff
[12:45] Anti-X: because you may not want it to connect right away
[12:45] micheil: it's not like a websocket in that sense
[12:45] micheil: ACTION thinks you probably do.
[12:46] Anti-X: most likely, but not necessarily
[12:46] micheil: ACTION is still awesomely impressed with the code he has for the new tail.thechangelog.com + node-eventstream.io
[12:47] dtrasbo: thanks a lot guys!
[12:48] micheil: hmm, I should head to bed.. I've gotta get up at 5am to record the next episode of The Noded
[12:48] chapel: micheil
[12:48] micheil: so, my question for you fine folks is: is there anything I should know about that's been released this week or heavily improved this week?
[12:48] chapel: enjoyed the first episode
[12:49] micheil: chapel: cheers :)
[12:49] Anti-X: i rewrote argtype.js, but i hardly think it's groundbreaking stuff
[12:49] micheil: Anti-X: link me up.
[12:49] Anti-X: http://github.com/torvalamo/argtype.js
[12:50] JimBastard: DOCTOR MINDBENDER
[12:50] micheil: is this that with(){} one?
[12:50] Anti-X: no, removed the with
[12:50] Anti-X: made it a wrapper instead
[12:50] JimBastard: Disregard sanity, acquire nodejitsu launch. 
[12:50] micheil: okay
[12:50] Anti-X: see the example
[12:50] SUBSTACK: JimBastard: same
[12:50] JimBastard: SUBSTACK: did you guys get accepted yet?
[12:50] badaxx has joined the channel
[12:51] SUBSTACK: haven't heard anything, they invite for interviews nov 2
[12:51] JimBastard: word
[12:51] SUBSTACK: however, they have at least used our demo
[12:51] SUBSTACK: as evidenced by our logs
[12:51] JimBastard: we are trying to finalize our funding, coming down to the wire :-D
[12:51] micheil: interviews?
[12:51] Anti-X: a what face?
[12:51] JimBastard: 25k should be coming in before end of month for launch....
[12:51] SUBSTACK: micheil: ycombinator
[12:51] micheil: ah
[12:51] micheil: good luck guys
[12:52] SUBSTACK: although our demo is substantially different from what we're pivoting into right now
[12:52] JimBastard: i would be highly surprised if stackvm didnt get in 
[12:52] JimBastard: although yc sucks
[12:52] SUBSTACK: focusing more on the browser use-case because we can launch that faster
[12:54] ivanfi has joined the channel
[12:54] jetienne: SUBSTACK: good move. it has better visibility too
[12:56] SUBSTACK: it's /such/ a pain-point to support IE
[12:57] kriszyp has joined the channel
[12:57] jetienne: SUBSTACK: even recent version ? 8/9 ?
[12:57] SUBSTACK: I mean for the use-case
[12:58] hoodoos: to run some executable from node.js i need to use child process, right?
[12:58] jetienne: hoodoos: yes
[12:58] hoodoos: jetienne, thanks
[12:59] jetienne: http://nodejs.org/api.html#child_process-spawn-95
[12:59] eee_c has joined the channel
[12:59] hassox_ has joined the channel
[12:59] johngbrooks has joined the channel
[12:59] stagas_ has joined the channel
[12:59] sth: s there anyway to kill a http client connection?
[13:00] hoodoos: jetienne, yes, i'm there, thanks :)
[13:00] sth: s/s/is/
[13:00] jetienne: sth: yep, hidden sometwhere... client.connection.close() i think
[13:01] sth: thanks
[13:02] Anti-X: if you mean a client connecting to an httpserver, the connection is in request.connection or thereabouts
[13:02] sth: no I mean http.Client
[13:02] sveimac has joined the channel
[13:03] jetienne: http://github.com/jeromeetienne/node-neoip/blob/master/lib/neoip_rpc_node.js#L75
[13:03] jetienne: sth: my bad it is .connection.destroy()
[13:03] sth: Ah :)
[13:04] sth: mm, it seems to just hang :/
[13:04] jetienne: is it ? it worked in 2.2
[13:05] Anti-X: we're not shipping your machine!
[13:05] sth: I think it's expresso that's stopping it.
[13:06] sth: It's my 5th test that's the issue :x
[13:06] sth: Thanks
[13:07] ooooPsss has joined the channel
[13:10] grove_ has joined the channel
[13:10] ysynopsis has joined the channel
[13:11] mlangenberg_ has joined the channel
[13:11] ysynopsis has joined the channel
[13:13] dtrasbo has left the channel
[13:13] Br|ce has joined the channel
[13:14] grove has joined the channel
[13:15] rubyphunk has joined the channel
[13:15] grove_ has joined the channel
[13:18] andrewa2 has joined the channel
[13:25] jansc has joined the channel
[13:26] stepheneb has joined the channel
[13:27] ivanfi has left the channel
[13:27] stepheneb has joined the channel
[13:28] c4milo: somebody alive ? 
[13:28] ooooPsss_ has joined the channel
[13:28] c4milo: hey noders, what are you using to share sessions between different physical nodes ? 
[13:29] c4milo: redis ? 
[13:30] EyePulp has joined the channel
[13:30] Br|ce: w 5
[13:31] Br|ce: oups
[13:31] sth: c4milo: We are :)
[13:32] c4milo: sth:  redis ? 
[13:32] Tim_Smart: Hmm npm publish is silently failing.
[13:33] c4milo: Tim_Smart: when no ? 
[13:33] nerdEd has joined the channel
[13:33] Tim_Smart: It worked now :)
[13:33] stepheneb has joined the channel
[13:34] SUBSTACK: c4milo: I like to use rpc for that sort of thing, naturally
[13:34] c4milo: SUBSTACK: your own mechanism ? 
[13:34] SUBSTACK: dnode, yes
[13:35] c4milo: SUBSTACK: looking at it 
[13:35] c4milo: hum, interesting
[13:37] c4milo: SUBSTACK: by default it works asynchronously ? 
[13:38] SUBSTACK: yep
[13:39] SUBSTACK: you can't actually make synchronous remote calls because data needs to travel over the link for that
[13:39] c4milo: SUBSTACK: does it works well with Unicode ? 
[13:39] modular has joined the channel
[13:39] SUBSTACK: unicode is something that has given me problems in the past a few times
[13:39] SUBSTACK: I could never isolate the problem spots though
[13:40] SUBSTACK: there is a test/unicode.js that passes
[13:40] c4milo: SUBSTACK: ok, I'll definitively try it out. Thanks ! 
[13:42] c4milo: SUBSTACK: are you using it in production now ? 
[13:42] dysinger has joined the channel
[13:44] SUBSTACK: c4milo: I'm not sure what "in production" means
[13:45] c4milo: SUBSTACK: so when you have a session, you are replicating it to your another nodejs processes ?  I am wondering if this approach performs better than redis 
[13:45] c4milo: SUBSTACK: a system in production  
[13:45] SUBSTACK: insofar as my startup hasn't launched yet
[13:46] SUBSTACK: c4milo: dnode just serializes data structures with json and transparently wraps callbacks
[13:46] SUBSTACK: so there are a lot of approaches you can use
[13:47] c4milo: SUBSTACK: I understood, but you are using it for session sharing ? 
[13:47] SUBSTACK: you could poll a session manager process when you want session data from it
[13:47] SUBSTACK: or you could push session updates out when changes happen
[13:47] c4milo: ok
[13:47] SUBSTACK: also require('dnode/events') gives you a RemoteEmitter
[13:48] UHMA has joined the channel
[13:48] c4milo: nice ! 
[13:48] SUBSTACK: which is like an EventEmitter except you can .attach() a dnode connection to it in order to .subscribe()
[13:48] alex_b has joined the channel
[13:48] c4milo: yes, I like it 
[13:48] SUBSTACK: then it cleans up the events when the connection ends
[13:48] c4milo: SUBSTACK: thanks man 
[13:50] danielzilla has joined the channel
[13:50] SUBSTACK: if you find bugs, just tell me!
[13:50] c4milo: SUBSTACK: of course ! 
[13:50] c4milo: :)
[13:50] SUBSTACK: also pull requests and tests welcome
[13:51] c4milo: I would like use it with protocol buffers 
[13:51] xla has joined the channel
[13:52] karboh has joined the channel
[13:53] mbrochh has joined the channel
[13:54] gerred has joined the channel
[13:57] matt_c has joined the channel
[13:58] xla has joined the channel
[14:00] heavysixer has joined the channel
[14:01] yhahn has joined the channel
[14:01] heavysixer has joined the channel
[14:01] JimBastard has joined the channel
[14:01] jacobolus has joined the channel
[14:02] heavysixer has joined the channel
[14:04] quirkey has joined the channel
[14:07] janm has joined the channel
[14:08] derencius_ has joined the channel
[14:10] xla has joined the channel
[14:11] Fullmoon has joined the channel
[14:13] nerdEd has joined the channel
[14:14] oal has left the channel
[14:15] JimBastard: its almost ninja suit time holy crap
[14:16] hoodoos has joined the channel
[14:16] JimBastard: On FedEx vehicle for delivery
[14:16] JimBastard: yeaaaaahhh
[14:17] davidsklar has joined the channel
[14:18] dquestions has joined the channel
[14:18] heavysixer_ has joined the channel
[14:19] Sembiance: JimBastard: rofl
[14:19] JimBastard: how can i launch nodejitsu if i am not dressed like a ninja? that wouldnt make any sense
[14:20] mape: releasing it?
[14:20] JimBastard: public beta nov 1
[14:20] c4milo: JimBastard: nice, congrats !
[14:23] bradleymeck has joined the channel
[14:23] JimBastard: morning bradleymeck 
[14:23] bradleymeck: morning
[14:23] bradleymeck: hows goes?
[14:24] blaines has joined the channel
[14:25] hoodoos has joined the channel
[14:26] UHMA has joined the channel
[14:27] FireFoxIXI has joined the channel
[14:27] oal has joined the channel
[14:27] eee_c has joined the channel
[14:29] oal has left the channel
[14:30] springmeyer has joined the channel
[14:32] sivy has joined the channel
[14:32] ceej has joined the channel
[14:34] elijah-mbp has joined the channel
[14:36] davidwalsh has joined the channel
[14:37] jacobolus has joined the channel
[14:38] mikew3c has joined the channel
[14:39] gerred has joined the channel
[14:40] badaxx: is there a module that can edit id3 tags or mp3 / wma files?
[14:40] herbySk has joined the channel
[14:40] JimBastard: badaxx: im not sure
[14:41] Tim_Smart: badaxx: I make an id3 module.
[14:41] badaxx: "id3":{"name":"id3","description":"A ID3 library for node, using pure Javascript.","dist-tags":{"latest":"0.0.2"},"maintainers":[{"name":"Tim-Smart","email":"tim@fostle.com"}],"mtime":"2010-09-02T15:10:42Z","ctime":"2010-09-01T04:01:20Z","author":{"name":"Tim Smart"},"versions":{"0.0.1":"http://registry.npmjs.org/id3/0.0.1","0.0.2":"http://registry.npmjs.org/id3/0.0.2"},"url":"http://registry.npmjs.org/id3/"}
[14:41] badaxx: i see :) is it stable?
[14:41] Tim_Smart: Not really.
[14:42] Ori_P has joined the channel
[14:42] badaxx: Tim_Smart: but it can just read, right?
[14:43] Tim_Smart: Yeah.
[14:43] Tim_Smart: No write support atm.
[14:43] badaxx: Tim_Smart: hm okay so I'll have to use a unix binary
[14:43] badaxx: are you still working on this?
[14:43] Tim_Smart: Not currently no.
[14:43] badaxx: hm okay. thanks anyway :)
[14:45] badaxx_ has joined the channel
[14:45] Polysics has joined the channel
[14:45] Polysics: hello
[14:45] Polysics: i was looking at replacing an EventMachine Websocket server with Socket.io
[14:46] davidascher has joined the channel
[14:46] Polysics: i will start by saying i have no experience with node.js
[14:46] Polysics: the server has two ports, one receives the messages, the other distributes them
[14:46] Polysics: the pipes are "named", which means there is one-on-one communication
[14:46] Polysics: ie. the messages have a specific user as recipient
[14:47] Polysics: i have no need for a queue as it's a rela-time messaging system
[14:47] Polysics: if the intended recipient is not there, i do not care
[14:47] Polysics: any ideas please?
[14:47] Yuffster has joined the channel
[14:47] Polysics: just a few pointers so i know what to read about in the weekend :-)
[14:49] bradleymeck: clarify: 2 ports (as in 2 streams/channels of data?), pipes (subscription channels or use ids?)
[14:49] charlenopires has joined the channel
[14:49] bradleymeck: or i guess 2 literal ports single duplex
[14:49] Robbb has joined the channel
[14:50] Robbb has left the channel
[14:50] Robbb has joined the channel
[14:50] Robbb: Anyone here?
[14:50] bradleymeck: no
[14:50] Robbb: Damn.
[14:50] bradleymeck: yea we are here
[14:51] rakeshpai has joined the channel
[14:51] ryanfitz has joined the channel
[14:51] rakeshpai: Hey... So, it looks like there's no OpenID client implementation for node. So, I'm thinking of writing one.
[14:51] Robbb: Just had a quick question, and it's entirely possible I'm missing something right in my face, but how I response.write() even smaller responses, it seems the buffer is holding it.
[14:52] daniellindsley has joined the channel
[14:52] rakeshpai: On the surface, it would be easy to use if it was tied into an existing high-level HTTP lib of some sort. Are there any recommendations?
[14:52] rakeshpai: for eg. there's express and grasshopper
[14:52] rakeshpai: any more? Should I bother about these libs at all?
[14:53] guybrush: rakeshpai: make it a middleware
[14:53] rakeshpai: guybrush: I've heard that term been thrown around, but honestly I don't know what it means in the node context. Do you have any link that can explain it?
[14:54] bradleymeck: Robbb the kernel buffer might not be drained yet, stream.on("drain") for great justice
[14:54] hoodoos: hey guys, is there any lib in node.js that can crypt given info in rsa2048 with public key or can I do it using crypto functions of node itself?
[14:54] guybrush: haha, dont ask me for an exact definition for "middleware" - i dont know it :p
[14:54] bradleymeck: rakeshpai for a client, i would use Request?
[14:54] guybrush: just take a look into connect
[14:55] guybrush: I think creationix come up with that term regarding node.js-stuff
[14:55] rakeshpai: guybrush: doing that
[14:55] bradleymeck: hoodoos you have what is avail in your openssl impl from node's crypto
[14:55] Robbb: Thanks bardleymeck
[14:55] rakeshpai: bradleymeck: I guess I could just do that as well ;P
[14:55] oal has joined the channel
[14:55] hoodoos: bradleymeck, okay, I will look better..
[14:56] hoodoos: bradleymeck, is it possible with openSSL btw? :)
[14:56] bradleymeck: idk all the optional ones, probably
[14:59] Tim_Smart has joined the channel
[15:00] guybrush: rakeshpai: you might want to take a look at this module http://github.com/ciaranj/connect-auth maybe this can be extended with openid
[15:01] rakeshpai: guybrush: Ah. Thanks a million. Looks good on the surface. Will check it out.
[15:01] Me1000 has joined the channel
[15:02] springmeyer: hey all, I'm starting to research writing node.js bindings to a c++ shared library - anyone have example of wrappers around c++ libs?
[15:02] abstractj has joined the channel
[15:02] guybrush: springmeyer: http://github.com/rbranson/node-ffi
[15:02] springmeyer: guybrush: thanks, I've actually played with that. I think it is only going to work with pure c libraries, no?
[15:03] bradleymeck: node-sfml is one of mine that ive started, yes ffi is mainly for c, but if the c++ lib exports to c it will work
[15:03] springmeyer: (due to name mangling in C++) but it looks very cool, hope I am wrong
[15:03] davidwalsh has joined the channel
[15:03] springmeyer: bradleymeck: c++ exports to c - yes, makes sense. not currently, so not an option I guess
[15:04] springmeyer: ACTION looks up node-sfml...
[15:04] vastak has joined the channel
[15:04] grove has joined the channel
[15:04] yviktorov has joined the channel
[15:05] deepthawtz has joined the channel
[15:05] springmeyer: bradleymeck: nice, thanks!
[15:05] softdrink has joined the channel
[15:06] bradleymeck: its not complete, and be SURE to use makeWeak to get rid of c++ things (idk if sfml is using that right now cause i was debugging so much at the time)
[15:08] gsmcwhirter has joined the channel
[15:09] jansc has joined the channel
[15:11] boaz has joined the channel
[15:11] siculars has joined the channel
[15:13] Ori_P has joined the channel
[15:13] Blink7 has joined the channel
[15:15] abstractj has joined the channel
[15:15] jherdman has joined the channel
[15:17] sonnym has joined the channel
[15:20] softdrink has joined the channel
[15:20] CrashTest_ has joined the channel
[15:21] tj has joined the channel
[15:27] unomi has joined the channel
[15:29] mozPike has joined the channel
[15:31] eee_c has joined the channel
[15:32] Polysics: bradleymeck: sorry, got caleld by the customer
[15:32] Polysics: do i need to re-explain the above?
[15:32] aurynn has joined the channel
[15:32] bradleymeck: the ports and pipes, yes
[15:32] Polysics: the server has 2 ports: port 8888, which is reachable only from localhost, which accepts the messages
[15:33] Polysics: messages are in JSON format and have an "user" property which is the ID of the recipient
[15:33] mozPike: I'm using http.createServer, and I'm trying to connect to the same url twice from the same browser, and it waits with the second until the first is done. I find that confusing, as using separate instances totally work. Is there something I can tweak to let one instance do parallel requests to the same url? 
[15:33] jpld has joined the channel
[15:34] Polysics: other port is port 12345, users log in to a web app, receive a token that is logged to a DB, then the page connects to 12345 using web sockets
[15:34] bradleymeck: mozPike you are blocking js somehow probably
[15:34] Polysics: when 12345 receives the "hello" message, it checks which ID corresponds to the token and "stores" the connection under the appropriate ID
[15:35] Polysics: all the communication is handled through JSON
[15:35] bradleymeck: ok
[15:35] Polysics: naything else?
[15:35] Polysics: *anything
[15:35] bradleymeck: nope i got it
[15:35] Polysics: problem is, the implementation of ws on IE depends on a seemingly shaky JS library
[15:35] Polysics: socket.io is said to be noticeably better
[15:35] bradleymeck: it is quite nice w/ a ton of fallbacks
[15:36] Polysics: as i said, no queue needed
[15:36] mozPike: bradleymeck: I somehow expect the suspect in connection-sharing, tbh. As, it does work if I hit the url from two different instances here. It also works if I hit /foo?1 and /foo?2 from the same browser instance, going to the same code page
[15:37] bradleymeck: mozPike highly unlikely, but if you want to paste code?
[15:37] stagas has joined the channel
[15:37] mozPike: bradleymeck: http://pastebin.mozilla.org/824140
[15:37] stagas: which module should I use for couchdb?
[15:38] Ori_P has joined the channel
[15:39] mozPike: running node 0.2.3, fwiw
[15:39] bradleymeck: polysics: basically, on server side port 8888 and port 12345 will be sharing a reference to an object (lets call it clients), when 8888 gets it message test `if ( clients[clientid] ) clients[clientid].send(msg)//or use foreach if there can be multiple connections by a single client`, when a client connects, store the socket.io client in clients[clientid] when you get the clientid to send back to it
[15:39] bradleymeck: whew long text
[15:40] bradleymeck: stagas: Request works plenty well
[15:40] stepheneb has joined the channel
[15:40] Polysics: how do i run multiple ports? that's something i could not figure out
[15:41] bradleymeck: need to have 2 different actual servers running
[15:41] bradleymeck: not programs
[15:43] steadicat has joined the channel
[15:44] bradleymeck: mozpike something odd going on w/ the logic sec, im stripping it down
[15:45] mozPike: bradleymeck: the intent is to have a long-running output generation being shared by multiple http requests, if that helps
[15:45] bradleymeck: figured, sec
[15:46] viktors has joined the channel
[15:46] Polysics: in Ruby i use 2 threads with a shared object, i have no idea how to do the same thing in node :-)
[15:47] bradleymeck: dont make threads
[15:47] mozPike: ACTION knows jack, but I'd call createServer twice and see where I end up
[15:47] bradleymeck: just write it like it is 2 objects
[15:48] agnat has joined the channel
[15:50] jchris has joined the channel
[15:50] malkomalko has joined the channel
[15:50] fyskij has joined the channel
[15:51] danielrmz has joined the channel
[15:51] joemccann has joined the channel
[15:52] joemccann: whatup yall
[15:52] bradleymeck: mozpike too many settimeouts it will take to long to figure out from my end
[15:52] dmcquay has joined the channel
[15:52] bradleymeck: joe!, nm, relaxing
[15:53] bpot has joined the channel
[15:53] joemccann: anyone know if express's compiler has been fixed to support serving 'less' files again?
[15:53] joemccann: it appears after node 0.3.0 toasted the require.async() that the compiler breaks
[15:54] joemccann: thus not serving up the style.css that style.less generates
[15:54] joemccann: http://groups.google.com/group/express-js/browse_thread/thread/46334f9ab676cd14/4a41b27ebdd033aa?#4a41b27ebdd033aa
[15:54] bradleymeck: tjholowaychuk would know probably
[15:55] tjholowaychuk: durr
[15:55] tjholowaychuk: joemccann: express/connect/etc are not tested for 0.3.x yet
[15:55] tjholowaychuk: so things probably will break
[15:55] tjholowaychuk: possibly in other modules as well, not sure where people are at with support yet
[15:55] joemccann: tjholowaychuk: thx bro
[15:55] joemccann: no worries
[15:55] tjholowaychuk: just a heads up :)
[15:56] joemccann: i appreciate it
[15:56] tjholowaychuk: even if you get it to work, chances are other things might not
[15:56] Polysics: so iti just a matter of calling two createServer ?
[15:56] joemccann: gotcha
[15:56] tjholowaychuk: but I can assure you we will move to support 0.3.0 as soon as its out
[15:56] bradleymeck: polysics basically
[15:56] Blink7 has joined the channel
[15:56] joemccann: tjholowaychuk: cool man...i have faith in u guys ;)
[15:57] Polysics has joined the channel
[15:57] EvanDotPro: so who do i have to bribe to get some progress made on the ability to select which IP to use for a client connection in node? :)
[15:58] StanAngeloff has joined the channel
[15:58] mozPike: bradleymeck: let me see if I can make a trivial testcase
[15:59] bradleymeck: evandotpro rephrase? a server saying what its external ip is?
[15:59] danielrmz has joined the channel
[15:59] Polysics has left the channel
[16:00] benburkert has joined the channel
[16:01] EvanDotPro: bradleymeck: for example, my server has two IP's from two different ISP's (one for redundancy)... from within a node.js app, it would be nice if one could first attempt a connection using one IP, and if that fails, give it another try on the redundant IP (which is a different ISP in this case) before deciding the connection has failed.
[16:02] EvanDotPro: it would apply to the HTTP client and socket connections in general... the feature to be desired would simply be the ability to specify the IP to use for client connections.
[16:02] johngbrooks has joined the channel
[16:02] mozPike: bradleymeck: http://pastebin.mozilla.org/824154 reproduces
[16:03] bradleymeck: evandotpro dns isnt available for that server?
[16:03] EvanDotPro: DNS would be irrelevant.. maybe i'm explaining this poorly, heh.
[16:04] hoodoos: EvanDotPro, yeah, i think you should use some OS level solution for it..
[16:04] hoodoos: bradleymeck, or net level :)
[16:04] gkatsev: perhaps just route both ports/ip's into one internal ip for node.js to use?
[16:04] cferris has joined the channel
[16:05] malkomalko: any vows users in here?
[16:05] viktors has joined the channel
[16:05] EvanDotPro: i'm referring to the IP that Node.js uses to connect to a remote server... I don't mean the IP address of the remote server.
[16:06] amerine has joined the channel
[16:07] bradleymeck: mozPike, no idea, i stripped it down a bunch more even, mailing list it? /shrug
[16:07] EvanDotPro: really, it would more accurately be described as selecting which interface Node.js uses... However, I think you'd only be able to specify by IP without being root, not by interface.
[16:08] EvanDotPro: don't quote me on that, though.
[16:08] mbrochh has joined the channel
[16:08] bradleymeck: im still lost, you want to have a list of IPs to connect to?
[16:09] bradleymeck: because the ip of the remote server is what node will connect to
[16:09] mozPike: thanks, will give it a shot
[16:09] EvanDotPro: i'm talking about the IP of the server Node.js is running on... The IP it connects to the remote server with.
[16:10] Robbb has joined the channel
[16:10] hoodoos: EvanDotPro, err, not talking maybe?
[16:10] bradleymeck: so what the remote server sees as the local servers ip?
[16:11] EvanDotPro: so you have one server that has two internet connections (and a unique IP from each)... if I write a Node.js script that downloads a file from a remote file, I'd like to be able to control which of the two IP's Node.js "uses" for that connection... So yes, what the remote server sees as the local server's IP.
[16:11] bradleymeck: it would have to do that at a network level past the process, you cant do that without router stuff setup outside of your server, and even then im not sure how
[16:11] o_o has joined the channel
[16:12] EvanDotPro: I'm not sure that's true... It's a breeze in PHP.
[16:12] benburkert has joined the channel
[16:12] stephank has joined the channel
[16:13] aho has joined the channel
[16:13] bradleymeck: im still trying to understand, you seem to want network control over which network interface you are sending the connection, but that is generally OS level or outside of server
[16:14] svnlto has joined the channel
[16:14] bradleymeck: so if you have 2 network interfaces that go through some gateway, determining to use a or b independent of eachother
[16:14] EvanDotPro: In PHP, I would just create a stream context and specify $context['socket']['bindto'] = '127.0.0.1:0'; where 127.0.0.1 is whatever IP you want to use.
[16:15] Arro has joined the channel
[16:15] EvanDotPro: and wget has the --bind-address option...
[16:15] c4milo: EvanDotPro: that is another thing 
[16:15] bradleymeck: whoa now socket binding is totally different
[16:15] hoodoos: binding is about listening, no?
[16:15] hoodoos: :)
[16:15] c4milo: yes
[16:15] hoodoos: you can bind to 0.0.0.0 and listen all interfaces.. dunno why i'm saying it, but still :)
[16:15] EvanDotPro: you'd think so... but in PHP, you can use the context for any socket connection.
[16:16] bradleymeck: then php might be lying
[16:16] bradleymeck: or using poor nomenclature
[16:16] EvanDotPro: and with wget, it's a client connection... wget definitely doesn't "listen"
[16:16] hoodoos: i can't figure out what you want to do really..
[16:16] c4milo: EvanDotPro: you decide where your daemon will listen for connections before you start it 
[16:17] svnlto_ has joined the channel
[16:17] EvanDotPro: but this isn't about listening... it's about outbound (client) connections it makes to _other_ servers that are listening.
[16:18] bradleymeck: yea, he is trying to get the network interface bound rather than the local connection
[16:18] EvanDotPro: (sorry, i'm not trying to be frustrating... just trying to get everyone on the same page)
[16:18] bradleymeck: looking up wget's option helped me
[16:18] hoodoos: can't find it >_<
[16:19] charlenopires has joined the channel
[16:19] EvanDotPro: right now, i'm actually calling wget from Node.js to accomplish this lol.
[16:19] bradleymeck: basically it falsifies the tcp packet...
[16:19] c4milo: yes
[16:19] c4milo: it sets the source ip address 
[16:19] EvanDotPro: oh it does?
[16:19] frodenius: wtf
[16:19] c4milo: to the one you specified 
[16:19] EvanDotPro: wow, then even that's not accomplishing what i need, haha.
[16:20] EvanDotPro: hmmm, that's really interesting.
[16:20] CIA-31: node: 03Ryan Dahl 07makefile * rec07777 10/ (14 files in 13 dirs): Use native libev/libeio config.h.in (+14 more commits...) - http://bit.ly/cOATS8
[16:21] matt_c has joined the channel
[16:21] EvanDotPro: i'd assume PHP actually does something similar then.
[16:23] bpot has joined the channel
[16:23] c4milo: yes, is the only way, as client, to force the packets come through a specific IP 
[16:23] banjiewen has joined the channel
[16:24] EvanDotPro: right, so it's not even going over the other interface that i would need it to in order to accomplish redundancy anyway.
[16:25] EvanDotPro: well, that's certainly a bummer.
[16:25] EvanDotPro: it makes sense though now that i think about it.
[16:26] isaacs has joined the channel
[16:27] isaacs: shimondoodkin: hey
[16:27] c4milo: EvanDotPro: what do you want to do ? 
[16:27] shimondoodkin: yep
[16:28] isaacs: shimondoodkin: you were asking about npm before?
[16:28] c4milo: EvanDotPro: download something balancing the packets between the interfaces that you have ? 
[16:28] bradleymeck: c4milo he wants to specify the network interface a physical connection is being sent through
[16:28] bradleymeck: by external_ip
[16:29] shimondoodkin: yes , i've never used npm , how do i create something?
[16:29] shimondoodkin: im mean an exterion
[16:29] isaacs: "exterion"?
[16:29] shimondoodkin: extention
[16:30] shimondoodkin: node extention
[16:30] EvanDotPro: c4milo: i've got two internet connections to one server... i want a Node.js app to request a remote file using one of those connections, and if the request fails, try again but with the other connection.
[16:30] isaacs: like, a node module, or a compiled add-on?
[16:30] shimondoodkin: is there like npm create
[16:30] isaacs: shimondoodkin: just write a package.json file
[16:30] Prometheus: echo '{}' > package.jso
[16:30] Prometheus: json*
[16:30] isaacs: shimondoodkin: there will be "npm init" in the next release.  done on master already
[16:31] malkomalko: anyone using vows know if this.callback accepts multiple callback params?  It looks like it's doing funky stuff with my callback... boy this question sucks
[16:31] shimondoodkin: also i wanted tpo do like npm configure myextention 
[16:31] c4milo: EvanDotPro: aha, you have to set the source address in the IP packet. I think you can achieve it with node_pcap , but I'm not pretty sure 
[16:32] EvanDotPro: in my case, it's one physical interface to my switch which has the two cross connects... but I have two virtual interfaces on the server, one configured with the IP/gateway/etc for each ISP.
[16:32] isaacs: shimondoodkin: you just put that stuff in the package.json file
[16:32] shimondoodkin: *to
[16:32] isaacs: shimondoodkin: npm help json
[16:32] shimondoodkin: thanks
[16:33] c4milo: EvanDotPro: got it
[16:33] shimondoodkin: isaacs is there such thing like npm configuyre myextention?
[16:33] isaacs: shimondoodkin: no, i don't know what that is.
[16:33] EvanDotPro: c4milo: will setting the source address in the packet actually make it use the right ISP's cross-connect though?
[16:33] isaacs: shimondoodkin: what would that command do?
[16:34] shimondoodkin: i have my node auto restart thing i want to make a upstart manager
[16:34] shimondoodkin: for each node project
[16:34] cognominal has joined the channel
[16:34] EvanDotPro: or would it just send out the modified packet using the ISP that I don't want it using? ... Of course the return packets would come back on the right ISP.
[16:34] gf3: isaacs: heyo
[16:34] isaacs: shimondoodkin: ok
[16:34] shimondoodkin: you go insifde a project type npm configure autorestart > and you get a cli menu add this to autorestart
[16:35] isaacs: shimondoodkin: yeah, there's nothing like that.
[16:35] isaacs: shimondoodkin: but i think i have an issue to do some OS-tie-in for start/stop/restart
[16:36] isaacs: shimondoodkin: if you have a { "scripts" : { "start" : "node my-program.js" }} in your package.json file, then you can do `npm start my-thing` to run that command
[16:36] c4milo: EvanDotPro: what is your default gateway ? just one ISP of the two ?
[16:36] gf3: isaacs: have you considered using mape's package viewer for npmjs.org? ( http://npm.mape.me/ )
[16:36] shimondoodkin: there was an idea to do a bin element in jsobn
[16:37] shimondoodkin: json
[16:37] benburkert has joined the channel
[16:37] gf3: isaacs: I think it's a great resource
[16:37] EvanDotPro: c4milo: each ISP has it's own gateway.
[16:37] isaacs: gf3: i've got some plans for npmjs.org.  mape's thing is a great start and proof of concept.  i'd like to go a lot deeper, though
[16:37] c4milo: EvanDotPro: yes I know, but in your machine, which one is the default gw ? 
[16:37] shimondoodkin: issac is there a way to manage libraries per project? 
[16:37] c4milo: EvanDotPro: in your server 
[16:38] shimondoodkin: isaacs: is there a way to manage libraries per project? 
[16:38] isaacs: shimondoodkin: yeah, just specify dependencies.  you can have parallel versions of the same project.
[16:38] isaacs: shimondoodkin: { "dependencies" : { "foo" : "1.2.3" }} <-- this will guarantee that you get foo version 1.2.3 when you do require("foo") in your package.
[16:38] EvanDotPro: oh i see... that would be ISP A (we'll call them ISP A and ISP B)
[16:38] isaacs: shimondoodkin: even if another package has "foo":"2.3.4" in *its* dependencies
[16:39] stagas: what is EPERM, Operation not permitted at IOWatcher.callback (net:854:22) at node.js:768:9
[16:39] bradleymeck: seems like this is one solution (though not in node), http://serverfault.com/questions/127636/force-local-ip-traffic-to-an-external-interface
[16:40] isaacs: stagas: it's a permission error.  maybe you're trying to listen on a low port as not-root?
[16:41] stagas: isaacs: I'm speaking to couchdb. I tried cradle and node-couchdb and they both ran fine for a while and now I get this
[16:41] isaacs: stagas: not sure.  maybe gist the code (or better yet, a reduced example that shows the bug) and post to the list?
[16:42] c4milo: bradleymeck: EvanDotPro has just one physical interface 
[16:42] bradleymeck: oh, nm
[16:42] bradleymeck: was too busy searching must have missed that
[16:42] bradleymeck: isaacs: did you see my request that join '' not go to '.' if '' , '/foo' goes to '/foo'
[16:43] isaacs: bradleymeck: yeah
[16:43] mikew3c_ has joined the channel
[16:44] EvanDotPro: c4milo: right, but two virtual interfaces... and the solution (if there is one) should work regardless if they were physical or virtual, I would think.
[16:44] isaacs: bradleymeck: so, the issue there is that the algo is like this:  1. remove all empty things from the start of the list, 2. if the list is empty, return "."
[16:44] EvanDotPro: (i could be wrong, i'm obviously not an expert in this area)
[16:44] isaacs: bradleymeck: then join everything with /, do the .. and . crap
[16:45] bradleymeck: yea, im just stating from an outside view the logic should line up, if '' means '.' , having it joined with another path should be equal to joining '.' with a path
[16:46] bradleymeck: and vice versa
[16:46] isaacs: bradleymeck: it would be
[16:46] isaacs: becuase ./foo is functionally equivalent to foo
[16:46] bradleymeck: but it isnt with '','/foo' in the tests
[16:46] isaacs: oh, right...
[16:47] isaacs: so, you're saying that '' should be like '.', always?
[16:47] isaacs: so, '','/foo' should be like '.','/foo' ==> 'foo'
[16:47] bradleymeck: if '' is treated like '.' sometimes, im saying it should be treated like that, always
[16:47] isaacs: so the FIRST item must start with a / to be an abs path
[16:47] bradleymeck: sometimes are baaad
[16:47] isaacs: yeah, hm.
[16:47] isaacs: that's a good point.
[16:48] ryanfitz has joined the channel
[16:48] davidsklar has joined the channel
[16:48] daglees has joined the channel
[16:48] bradleymeck: as a reciprical you could let '' do nothing at all
[16:49] ryan_gahl has joined the channel
[16:49] isaacs: so, here's the issue:  there must be *some way* to have path.join() end with a /
[16:49] isaacs: because, right or wrong, there is a long tradition of "foo/" and "foo" being slightly different things to many programs.
[16:49] ryan_gahl: hi all (goodness it's been a while)
[16:49] bradleymeck: hello
[16:49] isaacs: hey, ryan_gahl 
[16:50] bradleymeck: isaacs, would '' being treated consistently affect that?
[16:50] TheEmpath has joined the channel
[16:50] isaacs: bradleymeck: this sucks.
[16:50] isaacs: :)
[16:50] isaacs: ok
[16:50] isaacs: so, let's say we just drop all empty entries.
[16:50] bradleymeck: works for me
[16:50] isaacs: (non-string or falsey)
[16:50] ryan_gahl: have a Connect question, seems noobish, but not finding answer
[16:51] isaacs: bradleymeck: how do you get a path.join() to return something that ends in a /
[16:51] isaacs: ?
[16:51] jbenesch has joined the channel
[16:51] bradleymeck: test it before/after
[16:51] isaacs: here's a thought:
[16:51] bradleymeck: path wise they cannot collide for foo and foo/ right?
[16:52] bradleymeck: cant be 2 inodes*
[16:52] isaacs: bradleymeck: actually, they can
[16:52] isaacs: bradleymeck: foo might be a symlink to a folder, in which case foo/ is the folder itself
[16:52] xicubed has joined the channel
[16:52] isaacs: bradleymeck: ask ls :)
[16:52] bradleymeck: touche, ugg
[16:52] stephank: isaacs: I'm not sure why you'd want an ending slash. The only thing I could come up with is reading/writing a directory by accident, but I just tried and that throws EISDIR. If the application has differing behavior depending on which, then it should stat.
[16:52] isaacs: some programs don't care, but all programs that deal heavily with paths (rsync, cp, scp, ln, ls, etc) treat them differently
[16:53] isaacs: rsync foo bar/  !== rsync foo bar
[16:53] marshall_law has joined the channel
[16:53] tjholowaychuk: ryan_gahl: hey, whats the connect q?
[16:53] isaacs: the first clones foo *into* bar, the second clones foo *over* bar
[16:53] stephank: cp doesn't care, it does a stat. An rsync-like solution can always check /\/$/
[16:54] isaacs: stephank: saying "path.join shall not end in slash" is an opinion i'm not comfortable enforcing.
[16:54] ryan_gahl: for anyone in the know: trying to use serve a page that has jquery-tmpl based markup (http://github.com/jquery/jquery-tmpl/blob/master/demos/samplesCore/basic.html) -- problem is anything i put in those script tags (see near bottom of example) is being delivered a html entity encoded (i.e. &lt; instead of <), which seems to be fubaring things
[16:54] isaacs: so, how about this: drop empty entries, but treat / as "yes, definitely put a slash here for realz, i mean it"
[16:54] norviller has joined the channel
[16:54] ryan_gahl: oh hi tjholowaychuk 
[16:54] stephank: isaacs: but what if it's a guarantee? Then you could always tack the slash on.
[16:54] ryan_gahl: as*
[16:54] stephank: It seems to me that the ending slash is a rarer use case
[16:54] bradleymeck: isaacs, at the end of the list, sure thing
[16:54] isaacs: so, path.join("foo/") --> foo/, path.join("", "/foo") --> /foo, path.join("", "", "", "foo") -> foo, etc
[16:55] isaacs: with the only caveat that path.join() *always* returns a truthy string, which will be "." if there are no elements left.
[16:55] bradleymeck: im more comfy with letting people retain their input than stripping
[16:55] ryan_gahl: this may not be a connect is per say, just my current hunch
[16:55] ryan_gahl: issue* (bah!)
[16:56] isaacs: so, filter out empty items, join with /, note if it starts or ends with a /, do the .. and . resolution, then make sure it still has the endcaps it started with, and if you end up with nothing, return .
[16:56] isaacs: "."
[16:56] ryan_gahl: (very noobish feeling having to ask for help with this one)
[16:57] bradleymeck: isaacs seems fine, cause they can test endcaps and if the array is full of empty stuff pretty easy
[16:57] stephank: isaacs: It seems like a decent algorithm, opinions aside.
[16:57] isaacs: ok, great.
[16:57] isaacs: thanks for pushing on this, it's good to get a few more brains on it before making a change that will cause subtle ripples.
[16:58] aguynamedben has joined the channel
[16:58] Gruni has joined the channel
[16:58] isaacs: and i think this algo will actually be a lot simpler to implement than the growing rats' nest we've got now.
[16:58] dahankzter has joined the channel
[16:58] bradleymeck: i just remembered the evils of python logic branching, did not want a repeat
[16:58] isaacs: yeah, same here
[16:59] bradleymeck: ok, so im off to eat, cya all
[16:59] JESUSABDULLAH: logic branching?
[16:59] isaacs: the only branch will be that path.normalizeArray() has to be able to take a flag to allow multiple / chars
[16:59] isaacs: because urls are not the same as filesystem paths.
[16:59] bradleymeck: JESUSABDULLAH, internal edge cases
[16:59] JESUSABDULLAH: hmm
[16:59] JESUSABDULLAH: I see
[16:59] JESUSABDULLAH: I came to node from python :) So I'm kinda learning now how python is deficient
[16:59] JESUSABDULLAH: It's interesting
[16:59] aurynn: deficient? different, maybe.
[16:59] davidascher has joined the channel
[16:59] JESUSABDULLAH: Well
[17:00] isaacs: python's os.path module is insane
[17:00] JESUSABDULLAH: strengths and weaknesses
[17:00] JESUSABDULLAH: Not trying to say python is bad
[17:00] JESUSABDULLAH: I still use it
[17:00] bradleymeck: its great for arrays omg
[17:00] isaacs: mixes a lot of filesystem/posix magic with string munging stuff
[17:00] JESUSABDULLAH: and I love numpy
[17:00] bradleymeck: but its library hurts my head
[17:00] isaacs: and path.join("foo", "/bar") --> "/bar" is just wonky to me
[17:00] JESUSABDULLAH: but I do see python's warts now, since I have more experience with other languages now
[17:00] JESUSABDULLAH: ie, js
[17:00] isaacs: js has warts too, of course
[17:00] JESUSABDULLAH: of course, matlab is ruined for me forever
[17:00] aurynn: JS is a bit warty
[17:00] JESUSABDULLAH: Oh yeah, well def
[17:01] JESUSABDULLAH: Not denying that either
[17:01] isaacs: the nicest thing about js is that you cannot change the language on a whim
[17:01] isaacs: simply cannot happen
[17:01] aurynn: I would like to be able to have python's object protocol stuff in JS
[17:01] zomgbie has joined the channel
[17:01] zomgbie_ has joined the channel
[17:01] isaacs: platforms can change, but the standard is very stable, if arguably less perfect
[17:01] JESUSABDULLAH: Yeah, I still like python's objects
[17:01] JESUSABDULLAH: Easier for me to grok
[17:01] isaacs: hsm
[17:01] isaacs: hm
[17:01] isaacs: i found them pretty mysterious
[17:02] muk_mb has joined the channel
[17:02] isaacs: but hten again, i've grown up on js
[17:02] JESUSABDULLAH: though I tend to not program in an object-oriented manner
[17:02] JESUSABDULLAH: Fair nuff isaacs
[17:02] isaacs: c->php->js
[17:02] JESUSABDULLAH: python's were my first
[17:02] JESUSABDULLAH: realistically
[17:02] isaacs: and python's objects are very different from those three
[17:02] aurynn: perl->python->js
[17:02] jacobolus has joined the channel
[17:03] stagas: isaacs: it happens when a lot of document already exists stack up. tried with request too, so it's not client specific. maybe net forgets to close the connection or couch doesn't close it and they max?
[17:03] aurynn: and I love things like Python able to treat objects as callables
[17:03] isaacs: maybe, i dunno
[17:04] isaacs: aurynn: yeah, i've thought it'd be neat to be able to *really* treat functions as just another type of object.
[17:04] Me1000 has joined the channel
[17:04] stagas: I'm gonna do it raw and trace it
[17:04] isaacs: foo = {} ;  foo.__proto__ = Function.prototype ; foo()
[17:04] isaacs: that'd be rad
[17:04] aurynn: it would be.
[17:04] tg has joined the channel
[17:05] JESUSABDULLAH: Here's my background:
[17:05] JESUSABDULLAH: ti basic->a smattering of php->matlab->python->js->embedded C
[17:05] JESUSABDULLAH:         |                    |        |           |
[17:05] JESUSABDULLAH:         ->a touch of perl    |        ->LabVIEW   ->a touch more perl
[17:05] JESUSABDULLAH:                              ->excel macros
[17:05] JESUSABDULLAH: >:P
[17:06] aurynn: Mrar!
[17:06] tg has joined the channel
[17:06] JESUSABDULLAH: Oh, and some official c++, fortran and java classes, but nothing I really remember
[17:06] JESUSABDULLAH: ACTION & moresims & minecraft
[17:07] ryan_gahl: tjholowaychuk: n/m, silly me - i've traced issue to node-htmlparser.parse() now. Connect is categorically off the hook :)
[17:08] tjholowaychuk: ryan_gahl: ah :) nice, sorry, missed the question lol
[17:08] ryan_gahl: sorry, didn't prefix your nick up there
[17:11] ooooPsss has joined the channel
[17:14] rauchg_ has joined the channel
[17:15] CIA-31: node: 03Jorge Chamorro Bieling 07master * r99e19aa 10/ (3 files in 3 dirs): Remove unneeded function wrappers - http://bit.ly/9jx7hz
[17:15] CIA-31: node: 03Ryan Dahl 07master * r92c5634 10/ doc/api.markdown : Remove a confusing sentence in the docs - http://bit.ly/9B3KUR
[17:15] CIA-31: node: 03Ryan Dahl 07master * r604f4fd 10/ (5 files): Write write.txt into the tmpdir - http://bit.ly/bO0DcO
[17:15] CIA-31: node: 03Vitali Lovich 07master * rfb8830a 10/ src/platform_linux.cc : 
[17:15] CIA-31: node: Fix parsing of linux memory
[17:15] CIA-31: node: If process name contains a space, this parsing fails for no good reason. - http://bit.ly/8ZXVlP
[17:16] ryanfitz has joined the channel
[17:16] twoism has joined the channel
[17:16] markwubben has joined the channel
[17:17] eee_c has joined the channel
[17:17] benreesman has joined the channel
[17:18] svnlto has joined the channel
[17:18] CIA-31: node: 03Ryan Dahl 07master * rb2969a9 10/ src/node.cc : Don't call AtExit twice - http://bit.ly/bdA2N5
[17:18] vnguyen has joined the channel
[17:20] zemanel has left the channel
[17:22] holydevil has joined the channel
[17:22] ISAACS: HAPPY INTERNATIONAL CAPSLOCK DAY
[17:23] dgathright has joined the channel
[17:26] danielrmz has joined the channel
[17:26] Robbb: Is there way to createServer in a port of sorts? For example, list to localhost:8080 and serve files based off of ~/files/
[17:27] ryan_gahl: Robbb, use Connect
[17:27] ryan_gahl: http://github.com/senchalabs/connect
[17:28] mjr_: isaacs: nice work not milking the caps lock day thing past when it was funny.
[17:28] mjr_: Get in, get out.
[17:28] mjr_: Keep it clean.
[17:29] Robbb: The snytax in the Hello World exampe looks almost identical though
[17:29] ryan_gahl: that's what she said? (obv.)
[17:29] ryan_gahl: Robbb: see router
[17:30] tapwater has joined the channel
[17:30] stephank: Eww, why does node have a contributer license agreement?
[17:30] isaacs: mjr_: THATS WHAT SHE SAID!!!!!!
[17:30] ryan_gahl: http://senchalabs.github.com/connect/router.html
[17:30] ryan_gahl: isaacs: LOL (lol)
[17:30] isaacs: ryan_gahl: (see, your response wasn't as valid, because it wasn't in caps)
[17:31] ryan_gahl: :)
[17:31] Robbb: Ah, 10-4. Thanks Ryan.
[17:31] abstractj has joined the channel
[17:31] svnlto has joined the channel
[17:32] mjr_: Combining IRC and CB radio "10 codes" seems appropriate, given how old IRC is.
[17:32] ryan_gahl: mjr_: THAT'S WHAT SHE SAID!!!!
[17:32] ryan_gahl: oh wait
[17:33] cyraxx: i remember the chat rooms in compuserve being called "cb radio simulator"
[17:33] svnlto has joined the channel
[17:33] mjr_: You mean Compu$erve?
[17:33] cyraxx: they later changed that to "chat" when most people already knew what a chat room rwas
[17:33] fabryz has joined the channel
[17:33] cyraxx: *was
[17:33] ajpiano has joined the channel
[17:34] fabryz: hooray
[17:34] isaacs: anyone on here remember WoW from compuserve?
[17:34] vilhonen: what's that?
[17:34] isaacs: the most easily hacked computer network EVER
[17:35] isaacs: omg it was AWESOME
[17:35] mjr_: I don't remember WoW.
[17:35] isaacs: it was like, "we hooked up a bunch of computers and gave you a trivially simple VB app that talks to them over any port you like.  GO NUTS!!"
[17:36] charlenopires has joined the channel
[17:36] benburkert has joined the channel
[17:36] ryan_gahl: lol, were they like "nobody even knows what a 'port' is, so it's coo"
[17:36] gwoo has joined the channel
[17:36] isaacs: teh chat room format was tab-delimited, which meant you could spoof anyone's handle trivially by using ^i
[17:37] mjr_: Ahh, the bad old days.
[17:37] isaacs: LOVED THAT SHIT SO HARD
[17:37] isaacs: i think that's why i do computers now.
[17:37] ryan_gahl: IN THE FACE
[17:37] langworthy has joined the channel
[17:38] ryan_gahl: add "in the face" to anything for instant humor
[17:38] isaacs: inorite!?
[17:38] isaacs: INSTANT HUMOR IN THE FACE!!!!
[17:38] ryan_gahl: like "in bed" to the end of fortune cookie fortunes
[17:39] isaacs: ok, offline time.  have fun, heroes.
[17:40] jchris has joined the channel
[17:40] mikeal has joined the channel
[17:41] malkomalko: Anybody using Jamine for testing?
[17:41] springmeyer has joined the channel
[17:41] matjas has joined the channel
[17:41] norviller has joined the channel
[17:42] jakehow has joined the channel
[17:42] ryan_gahl: anyone have node-htmlparser mojo?
[17:42] pquerna: ryah_: so, decisions on the prefered api?
[17:43] stephank: What's the benefit of the CLA over the already liberal MIT license in place? I mean, MIT basically says “you can climb up a tree with this code and do whatever, just keep the © intact”. While signing the CLA basically gives Ryan the right to do that without keeping the notice?
[17:43] aliem has joined the channel
[17:43] pquerna: stephank: it says you have the *right* to contribute it to Ryan; (In addition in theory, letting ryan re-license it)
[17:44] ollie has joined the channel
[17:44] ryah_: stephank: the MIT doesn't say that what you contribute to me must be under any specific terms
[17:44] ryah_: pquerna: streams?
[17:44] pquerna: ryah_: stream pairs.
[17:44] sveimac has joined the channel
[17:45] pquerna: s = new cryto.SecurePair();    s.in; s.out; ?
[17:45] stagas has joined the channel
[17:45] pquerna: was the last i remember you talking aobut.
[17:45] pquerna: is that the api we want? if so, I'll send patches for it
[17:46] ryah_: pquerna: i think so, maybe not .in and .out - those seem confusing
[17:46] pquerna: front/back?
[17:46] ryah_: sounds better - do we want to have "pairs" be a generalized concept? i guess that'd be good
[17:46] ryah_: otherwise i'd say .enc and .clear
[17:47] tjholowaychuk has joined the channel
[17:47] pquerna: i think there are relatively few protocols that have the same concept, unless you are building like reliable transit over UDP for example.
[17:48] ryah_: i also doubt this API will have huge exposure
[17:48] pquerna: right
[17:48] pquerna: 90% won't use it, 10% making custom protocls will just copy 5 lines that http client does
[17:49] ryah_: so .cipher and .clear ?
[17:49] ryah_: anyway, i think so something like that with two end points is good
[17:49] holydevil has joined the channel
[17:50] pquerna: okay, i'll do it. we can always change names later.
[17:50] cardona507 has joined the channel
[17:51] ryah_: pquerna: cool, this is going to be awesome
[17:51] stephank: pquerna / ryah_: Okay, those points are sound. It scared me a bit because of the first clause. But I find it adds very little value for you on top of the MIT license, so I'll sign it.
[17:51] aho: yea... that's probably also the reason why there is a cumtrapz function in matlab :>
[17:52] stephank: Perhaps, if it's about ensuring that I am rightfully contributing, and have check with my employer and such, consider rewording it as such? It wouldn't surprise me if someone else comes around in a month and asks the same question. :p
[17:56] BBBB has joined the channel
[17:57] agnat has joined the channel
[17:57] malkomalko: tjholowaychuk: you still using jspec/expresso or are you using Jasmine as per the message in the Jspec github?
[17:57] mikeal has joined the channel
[17:58] dgathright has joined the channel
[17:58] stephank: ryah_: You wouldn't happen to have a PGP public key for me, would you? :)
[17:59] tjholowaychuk: malkomalko: expresso
[17:59] tjholowaychuk: i dont like jasmine
[18:00] c4milo: somebody is using cucumber with nodejs ? 
[18:00] tjholowaychuk: or jspec anymore lol its all useless overkill
[18:00] malkomalko: yah I think so too
[18:00] malkomalko: I'm looking at nodeunit/expresso right now
[18:00] malkomalko: I tried vows, but it seems like major overkill
[18:00] tjholowaychuk: yeah thats my opinion on it
[18:00] tjholowaychuk: i want to write quick tests, not learn a test framework
[18:01] malkomalko: do you use anything for mocking/stubbing? or not much in to that?
[18:02] tjholowaychuk: nope
[18:02] tjholowaychuk: i never mock or stub anymore
[18:02] tjholowaychuk: and honestly never really need to
[18:02] tjholowaychuk: but it depends on what you are building
[18:02] tjholowaychuk: just happens that things i build dont need any of that
[18:03] faust45 has joined the channel
[18:03] mtodd has joined the channel
[18:04] mtodd has joined the channel
[18:09] mbrochh has joined the channel
[18:09] femtoo has joined the channel
[18:10] ryah_: stephank: http://gist.github.com/641069
[18:14] herbySk: ryah_: is  test-net-eaddrinuse expected to fail?
[18:15] igorgue has joined the channel
[18:15] ryah_: herbySk: no
[18:15] ryah_: herbySk: the path test is the only thing currently broken on mac/linux
[18:15] amrnt has joined the channel
[18:16] igorgue has joined the channel
[18:16] herbySk: ryah_: thanx. one more issue to go :-) (on freebsd there is lot of them, mainly net-based; also http-upgrade-server for a long time already)
[18:18] igorgue_ has joined the channel
[18:22] mikedeboer_ has joined the channel
[18:22] mikedeboer_ has left the channel
[18:22] TheEmpath: about he socket.io blocking
[18:22] TheEmpath: it wasn't socket.io
[18:22] TheEmpath: it was my main queue execution loop :(
[18:22] micheil: okay, cool
[18:23] abstractj has joined the channel
[18:23] TheEmpath: is there a way to lock a queue without blocking everything?
[18:23] mikeal has joined the channel
[18:23] c4milo: TheEmpath: another process ? 
[18:24] xAFFEE has joined the channel
[18:24] micheil: TheEmpath: what was this socket.io queue doing again?
[18:24] micheil: and what this the onClose issue?
[18:25] TheEmpath: my issue is when i simulate connections through iframes
[18:25] TheEmpath: two tabs, each with 10 iframes, so that puts me at 22 users
[18:25] TheEmpath: if i kill a tab, 11 people will suddently disconnect
[18:25] bengl has joined the channel
[18:25] TheEmpath: but the other 11 users are still generated test data at 100 millisecond increments
[18:26] TheEmpath: if i put a lock on my execution queue, all users must disconnect before another queue item gets handled
[18:26] mikedeboer has joined the channel
[18:26] TheEmpath: if i remove hte lock from my execution queue, then its nonblocking
[18:26] mikedeboer has left the channel
[18:26] oal: tjholowaychuk: is it possible to export the express docs as a pdf for my e-reader? Do you have a download like somewhere?
[18:26] TheEmpath: and people can disconnect while other people can pass data
[18:27] mikedeboer has joined the channel
[18:27] malkomalko: for expresso to work with growl do you need growlnotify?
[18:27] strmpnk has joined the channel
[18:29] zemanel has joined the channel
[18:29] MikhX has joined the channel
[18:30] malkomalko: yup, that's it
[18:30] MikhX_ has joined the channel
[18:32] digitalspaghetti: oal: look at instapaper
[18:32] digitalspaghetti: i just got my kindle today, and i exported out the instapaper version
[18:32] oal: digitalspaghetti: ah, thank you
[18:32] digitalspaghetti: looks quite nice
[18:32] stepheneb has joined the channel
[18:32] digitalspaghetti: (although i was thinking a kindle-specific build would be nice :D)
[18:33] oal: I have a Sony Reader, but I'm getting the Kindle DX :)
[18:34] gsmcwhirter has joined the channel
[18:34] matt_c has joined the channel
[18:34] JCS0 has joined the channel
[18:35] ryah_: http://amix.dk/blog/post/19577
[18:36] ryah_: 0.1.33 was before net.js
[18:37] c4milo: wow
[18:37] c4milo: nice 
[18:37] Ori_P has joined the channel
[18:37] ryah_: "Upgrading node.js to 0.2.2 from 0.1.33. Version 0.2.2 had worse performance and memory leaks - or at least the memory consumption had changed a lot for the worse"
[18:38] ryah_: "One Netty server can currnetly handle around 6000 comet notifications pr. second to around 10.000 clients. The node.js server could handle around 500 pr. sec (so it was at least an 10x improvement)."
[18:39] mjr_: WTF is that all about?
[18:39] ryah_: we are dropping the ball
[18:39] ryah_: apparently
[18:40] andrewa2 has left the channel
[18:40] c4milo: :s
[18:40] mjr_: eh, I dunno
[18:40] mjr_: 500/sec?  Something is wrong with that
[18:40] admc has joined the channel
[18:41] mjr_: ryah_: do you know the plurk guy?
[18:41] ryah_: mjr_: only from the mailing list
[18:41] c4milo: The problem with our node.js solution is that channel reads and writes and handled by the same process and this generally means that channel writing gets slowed down by channel reading and garbage collecting
[18:41] pzich has joined the channel
[18:41] digitalspaghetti: yea it's a pity ryah_ that they didn't come to the group with their issues to try work on a solution
[18:41] pedrobelo has joined the channel
[18:41] rauchg_ has joined the channel
[18:42] digitalspaghetti: You say dropping the ball, but really did anyone outside plurk know?
[18:42] maikai has joined the channel
[18:42] delapouite has joined the channel
[18:42] ryah_: c4milo: the reads and writes are non-issues. the GC is
[18:42] c4milo: sounds like they didn't  a good work with nodejs 
[18:42] c4milo: didn't make  
[18:43] ryah_: i don't know - i think they're pretty smart
[18:43] gsmcwhirter has joined the channel
[18:43] c4milo: an architecture problem perhaps 
[18:44] mjr_: Yeah, so older node was faster for them somehow
[18:44] TheEmpath: He has a good point in the article.
[18:44] mjr_: You think they hit some GC wall?
[18:44] TheEmpath: GC in the main loop is bad.
[18:44] herbySk: I would also say (only a guess) that GC is a problem and get stuck in some very bad behaviour when pushed to its limits
[18:45] mjr_: It does seem like people are hitting big GC pauses lately that I don't remember hearing about earlier
[18:45] mjr_: Perhaps something in V8 changed that is hurting us.
[18:45] c4milo: I had used two process 
[18:46] rauchg__ has joined the channel
[18:46] TheEmpath: i smell a fork
[18:46] mjr_: c4milo: are you the plurk guy?
[18:46] c4milo: mjr_: nop 
[18:46] herbySk: (but it _can_ be an architecture problem as well - maybe too much onfo was left in memory so GC was run too often on too much living objects...)
[18:47] herbySk: s/onfo/info/
[18:47] c4milo: mjr_: I mean sounds like they didn't use more than one process 
[18:47] kriszyp_ has joined the channel
[18:47] mjr_: As people start doing webgl and canvas, they'll expect to be able to keep more things in JavaScript memory.
[18:48] eee_c has joined the channel
[18:48] mjr_: Surely the V8 people are looking at this.
[18:48] davidwalsh has joined the channel
[18:49] stephank: http://arewefastyet.com/ <- dun dun dunnn
[18:50] stephank: curiously, they removed the ARM graph
[18:51] bruse: that's pretty cool
[18:51] bruse: they seem to be working hard
[18:52] fy has joined the channel
[18:52] herbySk: v8 should implement "use strict";
[18:53] herbySk: If i remember right, it disallow to call eval other than through "eval" global name
[18:53] herbySk: then closures could be optimized
[18:53] ryah_: mjr_: i'm not sure if you've experienced this situation where the GC spins wildly
[18:53] ryah_: often with many objects
[18:53] ryah_: i wonder if they are getting that...
[18:53] mjr_: ryah_: no, I haven't, but that's what I mean by I've heard people complaining about GC lately.
[18:53] mjr_: Like 4s pauses or whatever
[18:54] mjr_: Is that V8 or is that node?
[18:54] mjr_: Or is that just because people are doing more different things with node that they've finally uncovered it
[18:54] bruse: node is pretty closely tied to v8, right?
[18:55] bentomas has joined the channel
[18:55] mjr_: node and V8 have a deep and intimate relationship.
[18:55] bruse: sounds very romantic
[18:55] mjr_: yeah, it's pretty hot
[18:55] techwraith has joined the channel
[18:55] ryah_: mjr_: that's v8
[18:56] bradleymeck: herbySk use strict does not allow closure optimizations exactly, and it breaks tons and tons and tons of things
[18:56] mjr_: ryah_: so if you go back to an older V8, you get fewer giant GC pauses?
[18:56] techwraith: How do I add a query to a client request? client.request(method='GET', path, [request_headers])
[18:56] techwraith: Do I put it in the path or the headers?
[18:56] danielrmz has joined the channel
[18:56] ryah_: mjr_: oh, i don't know
[18:56] mjr_: techwraith: append it to the path
[18:57] mjr_: ryah_: for sure V8 is the one consuming time, but it seems like people are hitting this now that weren't before
[18:57] mjr_: Both node and V8 have changed a lot
[18:57] mjr_: Er, I assume V8 has changed a lot.  The version numbers keep going up
[18:57] ryah_: node could be tempting it more easily into GC with buffers
[18:57] ryah_: there is something odd about the ObjectWrap things..
[18:58] maikai: I have had a google, but I don't really know what to search for. Is there any way of getting node to know which files have been editted and having them reload, or perhaps reload everything for each request? Is there a term for this kind of feature?
[18:58] malkomalko: tjholowaychuk: when you watch -w with expresso, it looks like it's only looking for test changes, but doesn't pick up the changes in my code base, is that what require/include lines are for? or does watch not pick up changes in my code?
[18:58] techwraith: mjr_: Thanks!
[18:58] bradleymeck: maikai code reloading you mean? look into nodules
[18:59] mjr_: maikai: it depends on your framework.  Bare node doesn't do anything like this.  You have to restart your program if you change something.  Others have built up some ways to reload things on the fly, but it varies quite a bit.
[18:59] c4milo: ryah_: do we have a benchmark framework ? 
[18:59] tjholowaychuk: malkomalko: yeah i need to watch lib stuff
[18:59] tjholowaychuk: i dont really use --watch
[18:59] tjholowaychuk: im always in the term anyway so hitting return doesnt bother me
[18:59] tjholowaychuk: but i have an issue open for that
[18:59] ryah_: c4milo: not really
[19:00] c4milo: ryah_: that could help to keep the project quality. Nodejs is all about performance isn't it ? 
[19:01] ryah_: yes, that could help keep project quality
[19:01] cloudhead has joined the channel
[19:01] maikai: Thanks for that.
[19:01] aurynn: Step 1: Make it work. Step 2: make it work *well*
[19:01] malkomalko: alright, so there's no way to do that from the command line
[19:01] malkomalko: I might try to patch that
[19:01] TheEmpath: ooo thats why tim's fastqueue keeps track of tail
[19:01] TheEmpath: because pushing renumbers the keys
[19:01] TheEmpath: derp
[19:01] TheEmpath: ACTION is slow.
[19:02] rbranson: oh noes plurk h8z node.js everyone cry
[19:02] c4milo: ahahaha 
[19:02] aurynn: who is plurk and why do we notice?
[19:02] rbranson: they used to be a big feather in node's cap
[19:02] rbranson: because routing comet messages is totally a hard thing
[19:03] bruse: why not notice people who have problems with node performance?
[19:03] malkomalko: tjholowaychuk: for setup stuff, do you just do normal js stuff above your tests? for any objects you may need for testing
[19:03] malkomalko: sorry for all the questions, I'm excited to finally find a node testing solution I like
[19:03] rbranson: bruse: because it's totally subjective
[19:03] TheEmpath: bugs are subjective, and yet, we fix them
[19:03] svnlto has joined the channel
[19:04] aurynn: Bugs are just features you don't love yet.
[19:04] rbranson: i don't follow the bugs being subjective
[19:04] tjholowaychuk: malkomalko: yup, anything that neets to be reset/created before each test you can put in "setup"
[19:04] femtooo has joined the channel
[19:04] tjholowaychuk: setup: function(fn){ doStuff(); fn() }
[19:04] TheEmpath: bugs are observed by people who are operating on a context outside of the actual computer, so they have to approximate what the copmuter is doing to describe the bug, and they do so subjectively
[19:05] TheEmpath: ACTION channels Kant.
[19:05] malkomalko: is that called out anywhere? I didn't see that
[19:05] malkomalko: is there also a tear down?
[19:05] rbranson: uh sure, but you make them less subjective by reproducability / test cases
[19:05] fizx has joined the channel
[19:06] tjholowaychuk: malkomalko: not per test but you can just add a tail "test" and call it teardown lol
[19:06] tjholowaychuk: thats what i do
[19:06] malkomalko: awesome
[19:06] tjholowaychuk: expresso is kinda more for framework unit tests
[19:06] fizx has joined the channel
[19:06] malkomalko: I'm fine with it
[19:06] tjholowaychuk: if you need something traditional that is run sequentially it might not be the best
[19:06] malkomalko: it seems very simple
[19:06] tjholowaychuk: there is a --serial flag tho
[19:07] bradleymeck: ACTION ponders if google closure compiler could get a node.js config file
[19:07] stepheneb has joined the channel
[19:08] malkomalko: I think watching lib files would be clutch for the expresso test runner
[19:08] malkomalko: I'd finally have my autotest 
[19:09] rburhum has joined the channel
[19:09] tjholowaychuk: autotest is lame IMO
[19:09] tjholowaychuk: i hated it
[19:09] tjholowaychuk: never used it
[19:09] malkomalko: why manually rerun it?
[19:09] tjholowaychuk: because im always staring at my term anyway
[19:09] tjholowaychuk: and i want to run ALL my tests to see how my work influences things
[19:09] malkomalko: that's un-needed keywstrokes
[19:09] malkomalko: that's what your -w flag goes ! :)
[19:10] tjholowaychuk: i dont use it
[19:10] tjholowaychuk: lol
[19:10] antris has joined the channel
[19:11] tjholowaychuk: plus i commit often, i dont want two terminal sessions just to commit from one and test in the other
[19:11] malkomalko: bahh haha
[19:11] tjholowaychuk: since i have like 12 anyway
[19:11] tjholowaychuk: i dont want 24
[19:11] tjholowaychuk: lol
[19:11] malkomalko: !!!! lol
[19:11] malkomalko: so goes the setup method go inside the module.exports?
[19:11] malkomalko: or above?
[19:11] malkomalko: just tried putting that function inside and it didn't work
[19:12] tjholowaychuk: yup in the exports
[19:12] tjholowaychuk: hm it should
[19:12] tjholowaychuk: well only in --serial mode
[19:13] tjholowaychuk: setup makes no sense when everything runs parallel
[19:13] malkomalko: duh
[19:14] rcy has joined the channel
[19:14] jacobolus has joined the channel
[19:15] malkomalko: so you run it -s and create a setup at the top, and that will automatically get reset/created before each test?
[19:15] tjholowaychuk: yeah
[19:15] tjholowaychuk: like for mongoose stuff, I have setup: function(fn){ User.drop(fn) }
[19:15] davidvanleeuwen has joined the channel
[19:16] tilgovi has joined the channel
[19:16] tjholowaychuk: and if you need something that runs only once before the other tests
[19:16] tjholowaychuk:   before: function(assert, done){
[19:16] tjholowaychuk:     User.drop(done);
[19:16] tjholowaychuk:   },
[19:16] tjholowaychuk: its really a test
[19:16] tjholowaychuk: but
[19:16] fizx has joined the channel
[19:16] tjholowaychuk: you can use it kinda like a hook
[19:16] tjholowaychuk: enough spammage
[19:17] tjholowaychuk: i need to work ;)
[19:17] admc has joined the channel
[19:19] dguttman has joined the channel
[19:21] fyskij has joined the channel
[19:22] jetienne has joined the channel
[19:24] Gruni has joined the channel
[19:25] ryanfitz has joined the channel
[19:29] techwraith: Can anyone think of why JSON.parse() would fail on a valid json string? I'm getting an "Unexpected Token ILLEGAL" for it...
[19:29] Validatorian has joined the channel
[19:29] badaxx has joined the channel
[19:29] bradleymeck: because it is not truly valid json
[19:29] bentruyman has joined the channel
[19:30] techwraith: So http://www.jsonlint.com/ sometimes says things are valid that are not?
[19:31] bradleymeck: can you paste the string that is failing, and possibly
[19:32] xdamman has joined the channel
[19:32] techwraith: one sec, xdamman should have it, he'll paste it soon
[19:33] xdamman: {"place":null,"geo":null,"truncated":false,"contributors":null,"in_reply_to_screen_name":null,"in_reply_to_status_id":null,"retweeted":false,"source":"web","retweet_count":null,"in_reply_to_user_id":null,"created_at":"Thu Oct 21 00:55:58 +0000 2010","favorited":false,"coordinates":null,"user":{"geo_enabled":false,"profile_use_background_image":false,"profile_sidebar_border_color":"0017ab","followers_count":206762,"description":"No, you can't touch this... bu
[19:33] xdamman: CAN press my follow button ALL you want.","listed_count":2256,"statuses_count":1032,"notifications":false,"profile_background_image_url":"http://a1.twimg.com/profile_background_images/145932330/family-guy.jpg","contributors_enabled":false,"profile_background_color":"090a0d","profile_background_tile":true,"url":null,"profile_text_color":"0a050a","lang":"en","created_at":"Tue Jul 20 22:53:01 +0000 
[19:33] xdamman: 2010","friends_count":2,"profile_image_url":"http://a1.twimg.com/profile_images/1102908801/images__5__normal.jpg","location":"","follow_request_sent":false,"favourites_count":2,"profile_link_color":"2FC2EF","protected":false,"verified":false,"time_zone":"Quito","screen_name":"PeterGriffinn","name":"Peter Griffin","following":true,"profile_sidebar_fill_color":"fff41f","id":168841922,"show_all_inline_media":false,"utc_offset":-18000},"id":27981599625,"text":"W
[19:33] xdamman: people upload a picture and set the caption as \"I'm so ugly\", #thatGRINDSmyGEARS. Yes, you are ugly. Delete your account. #yeaisaidit"}
[19:33] xdamman: http://www.jsonlint.com/ says "Valid JSON"
[19:33] xdamman: (sorry guys for pasting this ugly json string in your so beautiful IRC window) ;-)
[19:34] ajpiano has joined the channel
[19:34] antris: you can use a pastebin too :)
[19:34] bradleymeck: would help 
[19:34] rburhum: yep :)
[19:35] dandean has joined the channel
[19:36] bradleymeck: concatting those works on my JSON.parse
[19:36] jacobolus has joined the channel
[19:36] fizx_ has joined the channel
[19:36] xdamman: Pasting in in the node console breaks :-(
[19:37] bradleymeck: can you give us a pastebin of the string literal (including hidden chars)
[19:37] banjiewen has joined the channel
[19:39] techwraith: doing it now
[19:40] xla has joined the channel
[19:42] BBBB has joined the channel
[19:43] ceej_ has joined the channel
[19:44] techwraith: Variable scope strikes again (seems to be fixed now)
[19:44] xdamman: there was a bug in the code, bloody global variable. But still, we should be able to copy paste a json string in node
[19:44] xdamman: in node console
[19:45] bradleymeck: mmmm i can?
[19:45] stepheneb has joined the channel
[19:45] eee_c has joined the channel
[19:47] Me1000 has joined the channel
[19:47] eee_c has left the channel
[19:47] AAA_awright has joined the channel
[19:47] bradleymeck: xdamman if you do not assign it to something however things get a little hairy i guess, are you just dumping it without any sort of code around it?
[19:47] abstractj has joined the channel
[19:48] xdamman: bradleymeck: he he that was it ;-)
[19:48] xdamman: bradleymeck: thanks
[19:49] bradleymeck: yes, cause then it is interpretted as a block statement
[19:49] davidvanleeuwen has joined the channel
[19:49] bradleymeck: which is a little odd, but /shrug
[19:49] paulr_ has joined the channel
[19:50] techwraith: bradleymeck: Awesome, thanks
[19:52] ceej_ has joined the channel
[19:54] gf3: it used to be possible to modify the prototypes of  native objects from other modules via Object.defineProperty, has this been removed?
[19:54] willwhite has joined the channel
[19:55] gf3: /cc ryah_ ^
[19:55] pedrobelo has joined the channel
[19:55] micheil: uhh..
[19:55] micheil: example?
[19:55] TheEmpath: tim_smart and micheil: i think im ready for a full tie analysis of a non-clocking concurrent process queue.  you had two examples last time i broached the subject,  do you still have them?
[19:56] TheEmpath: non-blocking lol
[19:56] micheil: oh? Yeah you can modify native object's prototypes, but I don't think you should.
[19:56] TheEmpath: no clocks in my code, no sir!
[19:56] gf3: micheil: doesn't seem to be working anymore
[19:56] gf3: unless it's just not possible in node-repl
[19:56] micheil: gf3: probably because you shouldn't modify the prototype if that's what I think you're doing
[19:57] admc has joined the channel
[19:57] micheil: also, node-=repl is kinda defunct
[19:57] gf3: NO U
[19:57] Anti-X: mikeal, just watched your jsconf.eu talk... were you drunk? :P
[19:57] micheil: ORLY?
[19:57] gf3: it's appropriate in some cases
[19:57] mikeal: haha
[19:57] mikeal: a little
[19:57] Anti-X: lol
[19:57] micheil: Anti-X: do you follow @thenoded on twitter?
[19:57] micheil: because you should.
[19:57] Anti-X: i do
[19:57] mikeal: i was really hung over all day
[19:57] mikeal: and going to the bathroom every 30 minutes
[19:57] mikeal: so i had a beer to calm down
[19:57] TheEmpath: my kinda day
[19:58] amrnt has left the channel
[19:58] bradleymeck: gf3, built in object types are cleared between node-repl lines, try an example that only needs 1 execution
[19:58] gf3: bradleymeck, ahh, thanks
[19:59] spetrea-home: gf3: you had a website from what I remember
[19:59] matt_c has joined the channel
[19:59] programble has joined the channel
[20:00] gf3: bradleymeck: perfect
[20:00] sechrist: Is there sort of a pack/unpack for buffers? or even just reading specific cast types from an offset in the buffer?
[20:00] gf3: spetrea-home: gf3.ca
[20:00] c4milo has left the channel
[20:00] bradleymeck: sechrist, you mean pulling out binary data?
[20:01] sechrist: yeah, and then repacking (to some extent)
[20:02] bradleymeck: not that i know of, would be nice to get that, but would also be nice to know endianness of machine node i running o n
[20:03] sechrist: eek
[20:03] sechrist: I found node-bufferlists but I'm not sure if it solves all of the use case
[20:04] stepheneb has joined the channel
[20:06] hellp has joined the channel
[20:06] tmpvar has joined the channel
[20:06] igorgue has joined the channel
[20:07] jspiros has joined the channel
[20:08] tg has joined the channel
[20:11] Nohryb has joined the channel
[20:11] ircretary has joined the channel
[20:12] Gruni has joined the channel
[20:12] mozPike has left the channel
[20:12] AAA_awright has joined the channel
[20:16] max has joined the channel
[20:17] benburkert has joined the channel
[20:18] bpot has joined the channel
[20:18] stagas_ has joined the channel
[20:20] schopenhauer has joined the channel
[20:21] ceej has joined the channel
[20:21] CrashTest_ has joined the channel
[20:21] schopenhauer has left the channel
[20:21] freeall has joined the channel
[20:22] rbranson: I'm seeing the same things plurk guys did
[20:22] rbranson: gets stuck in a GC loop
[20:22] rbranson: Mark-sweep 25.1 -> 5.9 MB, 18 ms.
[20:23] rbranson: looks like it's holding onto the sockets
[20:23] rbranson: tcp4     195      0  127.0.0.1.10923        127.0.0.1.65366        CLOSE_WAIT
[20:24] rbranson: tcp4       0      0  127.0.0.1.65111        127.0.0.1.10923        FIN_WAIT_2
[20:24] rbranson: * a few hundred
[20:24] gozala has joined the channel
[20:25] ceej has joined the channel
[20:28] zomgbie has joined the channel
[20:28] Anti-X: weird
[20:29] Anti-X: just watced http://jsconf.eu/2010/speaker/nodejs_in_production_use_tempa.html and he also has 167 sockets that keep staying open
[20:29] Anti-X: rbranson
[20:29] mjr_: rbranson: 18ms is not that bad as long as it doens't happen very often
[20:29] rbranson: mjr_: it's just dumping that out in a stream
[20:29] mjr_: rbranson: and sockets in CLOSE_WAIT or FIN_WAIT_2 are normal
[20:29] rbranson: mjr_: they stay like that indefinitely
[20:30] mjr_: Can you lsof the node process and make sure they are still associated with an fd?
[20:31] ryah_: gf3: no
[20:31] rbranson: node    52631 rbranson  255u    IPv4 0x105e6abc       0t0     TCP conglomo-bedrock.wm.notifymd-dev.com:10923->conglomo-bedrock.wm.notifymd-dev.com:51068 (CLOSE_WAIT)
[20:31] gf3: ryah_: thanks, bradleymeck pointed me in the right direction, it was a node-repl issue
[20:31] rbranson: ignore the stupid localhost name
[20:32] rbranson: they also accumulate up to max fds
[20:32] rbranson: and then i can't open anymore until i restart the process
[20:32] mattmob has joined the channel
[20:33] zomgbie_ has joined the channel
[20:35] AAA_awright_ has joined the channel
[20:35] davida has joined the channel
[20:35] dgathright has joined the channel
[20:36] richcollins has joined the channel
[20:36] rbranson: all of them are still open
[20:36] rbranson: 5+ minutes later
[20:36] rbranson: GC trace is still dumping Mark-sweep 25.1 -> 5.9 MB, 18 ms. about 4 per second
[20:36] bradleymeck: thats past timeout , mmm
[20:37] stepheneb has joined the channel
[20:38] rbranson: 68 node::IOWatcher::Callback(ev_io*, int)
[20:40] rbranson: if i restart and connect 1 client, call graph is tiny (of course)
[20:40] abstractj has joined the channel
[20:41] stagas: when opening a file with a+ is there a way to know where get the pointer position?
[20:42] stagas: (there's a grammar mistake there)
[20:42] dannycoates has joined the channel
[20:44] killfill has joined the channel
[20:45] brianmario has joined the channel
[20:47] ngw has joined the channel
[20:50] ryah_: rbranson: what's up?
[20:50] rbranson: i'm going to run the profiler on it and see
[20:50] ryah_: rbranson: what's the total memory?
[20:51] rbranson: low, like 40MB
[20:51] ryah_: yeah - we need to find out what's happening
[20:51] ryah_: can you reproduce that easily?
[20:51] rbranson: yes
[20:51] rbranson: I don't have the code pulled apart to give away yet
[20:51] rbranson: since it's using an internal comet server thing
[20:51] ryah_: rbranson: ho wmany connections?
[20:51] rbranson: hits max file descriptors
[20:51] rbranson: so like 256
[20:51] rbranson: or a little less than that
[20:51] ryah_: okay
[20:52] ryah_: well - this is great that you can reproduce it
[20:52] rbranson: waiting for ncurses to build
[20:52] rbranson: :/
[20:52] rbranson: basically the server is a socket.io server
[20:52] ryah_: maybe attach gdb to it?
[20:52] rbranson: gdb just tells me the C functions
[20:52] rbranson: but there's a bunch of missing JS in the stack
[20:53] rbranson: and the clients are websocket
[20:53] ryah_: i kind of think this is a V8 bug
[20:54] willwhite has joined the channel
[20:54] micheil: ryah_: I've been thinking maxConnections should probably be set to the max file descriptors
[20:54] ryan[WIN] has joined the channel
[20:54] micheil: rbranson: websocket via?
[20:55] rbranson: node websocket-client
[20:55] rbranson: they go away though
[20:55] micheil: ah
[20:55] micheil: right, websocket client
[20:55] micheil: thought you were talking server for a moment
[20:55] rbranson: and server holds the FDs open indefinitely
[20:55] micheil: hmm
[20:55] rbranson: and seems to churn on GC
[20:55] micheil: rbranson: have you seen this anywhere else?
[20:55] rbranson: anywhere else as in?
[20:56] micheil: http.Server, net.Server, net.Stream, http.Client
[20:56] rbranson: I haven't seen it on http.Server, but I'm also disconnecting cleanly
[20:56] micheil: because it may be an issue within node-websocket-client that triggers an issue in node
[20:56] rbranson: it shouldn't matter what the client is though... node shouldn't hold an FD open indefinitely like that
[20:57] micheil: oh, yeah
[20:57] micheil: so it's not the clients that are holding, it's the server?
[20:57] hassox has joined the channel
[20:57] micheil: ACTION might have misread
[20:58] rbranson: yes
[20:58] micheil: so, the clients are closing, but the server keeps the FD's open?
[20:58] micheil: yet you haven't seen similar on any other server or client?
[20:59] micheil: and does this only happen on websocket connections, or does it happen on each of the transports socket.io handles?
[20:59] naturalethic has joined the channel
[20:59] micheil: (long polling, flash socket, etc)
[20:59] rbranson: i haven't tried any others yet
[20:59] micheil: okay
[20:59] micheil: I have a feeling it may be socket.io not closing FD's properly
[20:59] jashkenas_ has joined the channel
[20:59] jashkenas_ has left the channel
[21:00] rbranson: it seems odd that plurk would report something similar though
[21:00] micheil: yeah
[21:00] micheil: unless they aren't closing FD's properly either?
[21:00] rbranson: really never even thought to bench this code until that post happened
[21:00] micheil: hence the reason the two issues look related
[21:00] rbranson: glad I haven't put it in production yet
[21:01] CIA-31: node: 03Stéphan Kochen 07master * rd9b08d6 10/ (src/node_buffer.cc src/node_buffer.h): 
[21:01] CIA-31: node: Remove old interface remains from Buffer.
[21:01] CIA-31: node: These were all lacking implementation, so deprecating wouldn't help. - http://bit.ly/dBcXE9
[21:01] CIA-31: node: 03Stéphan Kochen 07master * rd5e9661 10/ src/node_buffer.cc : Simplify things by using `*ArrayData` everywhere. - http://bit.ly/a5Skuo
[21:01] CIA-31: node: 03Stéphan Kochen 07master * rb3e60c7 10/ src/node_buffer.cc : Generalize Buffer::Copy to work with all unsigned byte external data. - http://bit.ly/bs9LPf
[21:01] mytrile has joined the channel
[21:01] ceej has joined the channel
[21:02] rburhum has joined the channel
[21:02] Anti-X: announcer clean the tubes
[21:02] _announcer: Cleaning the tubes for great justice!
[21:03] Anti-X: justice your face
[21:03] ryah_: rbranson: yeah, i've seen similar cases
[21:03] rbranson: looking through the socket.io code, it doesn't appear socket.io even call a close in this case, it's receiving the disconnected message
[21:03] eric_f has joined the channel
[21:03] rbranson:      65    0.2%    0.2%  Function: Server.self.watcher.callback net:1048
[21:03] ryah_: rbranson: end() ?
[21:03] rbranson:   16658   51.9%   51.9%  _si_cache_add_item
[21:03] rbranson:    1090    3.4%    3.4%  ___private_getcwd
[21:03] rbranson:    1020    3.2%    3.2%  __Xmach_notify_dead_name
[21:03] rbranson:     584    1.8%    1.8%  ___vfprintf
[21:03] rbranson:     412    1.3%    1.3%  v8::internal::MarkCompactCollector::SweepSpaces
[21:03] rbranson: that's what's soaking up CPU
[21:04] rbranson: ryah_: yeah it's listening for end
[21:04] rbranson: 	this.connection.addListener('end', function(){
[21:04] rbranson: 		self._onClose();
[21:04] rbranson: 	});
[21:05] rbranson: how do I get a snapshot.log?
[21:05] rbranson:    ticks parent  name
[21:05] rbranson:   16658   51.9%  _si_cache_add_item
[21:05] rbranson:   16658  100.0%    node::Loop
[21:05] rbranson:   16658  100.0%      Builtin: A builtin from the snapshot
[21:06] ph^ has joined the channel
[21:06] emmanueloga has joined the channel
[21:07] micheil: rbranson: yeah, I think socket.io has a fair few issues like that at the moment
[21:07] micheil: rbranson: also, which plurk article?
[21:08] rbranson: http://amix.dk
[21:09] Anti-X: yeah i've noticed lately it has these quirks
[21:11] rpflo has joined the channel
[21:11] ryah_: rbranson: if you attach gdb to it and just ^c it
[21:11] ryah_: rbranson: (in gdb)
[21:11] ryah_: i guess you'd likely land in the GC
[21:11] ryah_: would be intersting to see that stack
[21:11] rbranson: hold :)
[21:12] ryah_: rbranson: linux?
[21:12] rbranson: osux
[21:13] ryah_: instruments gives nice profiles
[21:13] marshall_law has joined the channel
[21:13] rbranson: #0  0x0000000100046585 in v8::HandleScope::CreateHandle ()
[21:13] rbranson: #1  0x0000000100011bef in node::IOWatcher::Callback (w=<value temporarily unavailable, due to optimizations>, revents=0) at v8.h:3300
[21:13] rbranson: #2  0x000000010002fc75 in ev_invoke_pending () at ../deps/libev/ev.c:1997
[21:13] rbranson: #3  0x0000000100033677 in ev_loop (flags=<value temporarily unavailable, due to optimizations>) at ../deps/libev/ev.c:2359
[21:13] rbranson: #4  0x0000000100003bbf in node::Loop (args=<value temporarily unavailable, due to optimizations>) at ../src/node.cc:1017
[21:13] rbranson: #5  0x0000000100083aa4 in v8::internal::Builtin_HandleApiCall ()
[21:13] rbranson: it's looping on that
[21:14] davidascher has joined the channel
[21:14] bradleymeck: does node expose machine endianess to js?
[21:15] rbranson: instruments is part of Xcode I take it?
[21:15] mjr_: yes
[21:15] mjr_:  /Developer/Applications/Instruments.app
[21:15] tjholowaychuk: bradleymeck: i dont think so
[21:16] rbranson: fancy
[21:17] siculars has joined the channel
[21:17] bradleymeck: meh most of the cases i would use it would be around C addons anywho
[21:19] rbranson: oh wow this is really cute
[21:19] ctp has joined the channel
[21:19] rbranson: so it's running accept() a lot
[21:19] themiddleman has joined the channel
[21:19] rbranson: from node::Accept
[21:21] rbranson: 378    0.4%    0.4%  Function: Server.self.watcher.callback net:1048
[21:21] rbranson: that's from the V8 profile
[21:26] murz has joined the channel
[21:27] richcollins has joined the channel
[21:28] davida has joined the channel
[21:29] rbranson: getting an assertion failure in DecodeWrite
[21:29] rbranson: Assertion failed: (b[1] == 0), function DecodeWrite, file ../src/node.cc, line 906.
[21:31] bentomas has joined the channel
[21:32] rbranson: #3  0x0000000100015a2d in node::DecodeWrite (buf=0x10107b8d6 "~m~16~m~5419718064367771", buflen=1, val={val_ = 0x7fff5fbfd038}, encoding=node::BINARY) at ../src/node.cc:906
[21:32] rbranson: #4  0x00000001000198ab in node::Buffer::BinaryWrite (args=@0x7fff5fbfceb0) at ../src/node_buffer.cc:626
[21:32] ryah_: rbranson: hm
[21:32] ryah_: interesting
[21:33] ryanfitz has joined the channel
[21:33] ryah_: so you're hitting EMFILE and you're spinning on acce[pt
[21:33] rnewson has joined the channel
[21:33] rbranson: i'm also getting a ton of broken pipe signals on write()
[21:33] rbranson: have to continue through those before I get that DecodeWrite assertion
[21:33] TheEmpath: i've worked for companies whose code release process can be defined in 2 seconds.  Here it is: http://www.youtube.com/watch?v=WJq4jWSQNd8&feature=player_embedded
[21:34] Anti-X: what's the english word for the "intro" of an article? like the part that is displayed before you click "read more"
[21:34] masahiroh has joined the channel
[21:34] Anti-X: if there is such a word
[21:35] ryah_: rbranson: can you try
[21:35] ryah_: on version 4593c049592d1dda6f61279887474bac132bb5ab^
[21:35] ryah_: (it doesn't revert cleanly)
[21:35] ryah_: (otherwise i'd have you use that)
[21:35] rbranson: yeah i'm going to recompile from scratch
[21:36] stephank: Anti-X: Summary? That is assuming you are summarizing in it.
[21:36] Anti-X: not at all
[21:36] Anti-X: but yeah in a newspaper that will be the case
[21:36] herbySk has joined the channel
[21:36] Anti-X: more like.. blog maybe
[21:36] stephank: I suppose you could call it just an introduction, or perhaps a leading paragraph?
[21:37] Anti-X: i wanna use 'stub', is that appropriate?
[21:37] bentomas: 'lead in'?
[21:37] rbranson: HEAD is now at cde80d9 Fix OpenSSL 100% CPU usage on error
[21:37] rbranson: that right?
[21:38] micheil: Anti-X: introduction?
[21:38] Anti-X: lead-in might work
[21:38] Anti-X: thanks
[21:39] TheEmpath: anti-x: Lead paragraph. As they say, this is the most crucial part of your article. In here, you need to spill out every single most important detail that your readers are looking for. Your readers must get a picture of your chosen stories even if they choose not to read your succeeding paragraphs due to time constraints. Deliver the information you have using as few words as possible.
[21:39] TheEmpath: from an unofficial sorucE: http://ezinearticles.com/?Format-For-Writing-a-Newspaper-Article---The-Structure-to-Follow&id=3830235
[21:39] Anti-X: yeah but that's in a newspaper context
[21:39] micheil: ryah_: I'm going to work on those two patches from the dev mailing list about cleaning stuff up.I should have them to you over the next 2 hours
[21:40] TheEmpath: article implies newspaper :(  you want magazine or?
[21:40] micheil: ryah_: then I'll try and do the work in the http server & client.
[21:40] TheEmpath: blargs?
[21:40] ryan[WIN]: blags
[21:40] Anti-X: i said in a blog kind of way
[21:40] Anti-X: but lead-in is probably fine
[21:40] micheil: ryah_: then i'll loop back and rebase that doc-split patch.
[21:40] TheEmpath: oh
[21:40] stephank: Anti-X: “words that scream CLICK ME” :)
[21:40] TheEmpath: fragmented, lost context.  sorry
[21:40] ryan[WIN]: the key to writing a newspaper article is to push sensationalism
[21:40] Anti-X: well it's friday
[21:41] Anti-X: i forgive you
[21:41] Anti-X: it's not a newspaper article!
[21:41] Anti-X: jesus
[21:41] Anti-X: people...
[21:41] Anti-X: :
[21:41] Anti-X: p
[21:41] ryan[WIN]: Android set to fail due to patent woes and NodeJS' inclusion with rival WebOS
[21:41] ryan[WIN]: there - newspaper article
[21:42] Anti-X: google to buy node.js and exclusive rights for android
[21:42] Anti-X: another one
[21:42] ryan[WIN]: cha ching
[21:42] vnguyen has joined the channel
[21:42] ryan[WIN]: Industry experts point to JavaScript as the next Big Thing
[21:42] ryan[WIN]: stupid meaningless stuff like that :D
[21:42] Anti-X: totally
[21:42] aho: ACTION points to the sun as the next big thing
[21:42] Anti-X: nodejs on windows - get yours today!
[21:43] aho: it's f-ing hot, too! :>
[21:43] stephank: but how sensational?
[21:43] Anti-X: isn't that the sort of constant big thing?
[21:43] rburhum has joined the channel
[21:43] techwraith: Just In: Newspaper Article Headlines lack Substance, Experts Say
[21:43] aho: is nodejs on windows still that annyoing to set up?
[21:44] ryan[WIN]: it's not an issue of setting up aho
[21:44] TheEmpath: Node.js contributor, Tim Caswell, convicted on all seventeen counts of loitering, dashing political ambitions
[21:44] ryan[WIN]: i've been working on figuring out a mingw thing
[21:44] techwraith: Damn, we need a hashtag on twitter for this
[21:45] TheEmpath: #node_news
[21:45] ryan[WIN]: node has gone so far *nixy in the past 6 months
[21:45] stephank: like, #nosauce?
[21:45] ryan[WIN]: there will be a bit of coding to do to get mingw
[21:45] ryan[WIN]: it won't just be getting the deps and the main src to build
[21:45] techwraith: It would have to be a bit more of an explanation than that for the masses to pick it up :)
[21:45] rbranson: ryah_: same assertion
[21:45] rbranson: #3  0x0000000100014d14 in node::DecodeWrite (buf=0x101076ac0 "~m~16~m~0805537139531225", buflen=1, val={val_ = 0x7fff5fbfd190}, encoding=node::BINARY) at ../src/node.cc:889
[21:45] rbranson: #4  0x0000000100018967 in node::Buffer::BinaryWrite (args=@0x7fff5fbfd000) at ../src/node_buffer.cc:616
[21:46] EyePulp has joined the channel
[21:48] Nohryb has joined the channel
[21:48] rbranson: still holding the FDs
[21:48] rbranson: CPU isn't being pegged though
[21:48] rbranson: going to wait for timeout
[21:48] freeall has joined the channel
[21:49] micheil: TheEmpath: why not use paper.li?
[21:49] rbranson: accept() isn't running in the loop either
[21:49] rbranson: just kevent
[21:49] TheEmpath: micheil: paper.li?
[21:50] micheil: TheEmpath: if you're starting a newspaper./
[21:50] TheEmpath: lol thats Anti-X
[21:50] rbranson: so now what i'm seeing
[21:51] rbranson: is that the system receives the connection message
[21:51] Anti-X: wo's starting a newspaper?
[21:51] TheEmpath: rofl
[21:51] Anti-X: who*
[21:51] TheEmpath: i love telephone
[21:51] rbranson: er the disconnection message
[21:51] rbranson: but they sit in CLOSE_WAIT
[21:51] rbranson: going to wait for them to timeout
[21:51] TheEmpath: if im starting a newspaper, it would be about things like turtle racing or slug fights
[21:51] Anti-X: pig flight shows
[21:52] Anti-X: dwarf high jump
[21:52] digitalspaghetti: heh, i've been reading two of John K Ousterhout's papers today and I wonder if he realises how perfect nodejs is for both of them:D
[21:52] rbranson: then they hit timeout
[21:53] rbranson: and go away
[21:53] Anti-X: happy bday in 6 minutes (CET) digital :p
[21:53] digitalspaghetti: yea, it's another hour and 6 for me :D
[21:53] Anti-X: ukian?
[21:53] digitalspaghetti: but i got my bday present early so mehh :)
[21:53] digitalspaghetti: yea
[21:53] digitalspaghetti: what about you?
[21:54] leeeb has joined the channel
[21:54] digitalspaghetti: (time wise?)
[21:54] Anti-X: polar bears and trolls
[21:55] Anti-X: maybe even my .no whois is a clue
[21:55] Anti-X: :P
[21:55] digitalspaghetti: Norway :D  Yea, i was trying to think which Scandanavian country was the trolls
[21:55] Anti-X: we're the only polar bear one too
[21:55] Anti-X: none on the mainland, but svalbard
[21:56] Anti-X: and it's snowing
[21:56] Anti-X: so it counts!
[21:56] ryah_: rbranson: so what's happening at cde80d9859b57a5652085e700845582ea2f86d3a ?
[21:56] digitalspaghetti: That's pretty far north :D
[21:56] ryah_: rbranson: same thing?
[21:56] oal: Does anyone here use Coffeescript, or is it better to do everything in JavaScript all the time?
[21:57] rbranson: it's behaving correctly
[21:57] rbranson: I get the same assertion failure, but if I run the regular node binary I can run the test and everything behaves
[21:57] Anti-X: digitalspaghetti actually i'm probably around the same northitude as aberdeen
[21:57] Anti-X: :P
[21:58] bradleymeck: oal quite a few use coffeescript, but not exclusively
[21:58] ryah_: rbranson: okay
[21:58] digitalspaghetti: oh, i meant svalbard
[21:58] Anti-X: ah
[21:58] Anti-X: yeah that's almost the north pole
[21:58] rbranson: it would be nice if it didn't hold a bunch of CLOSE_WAIT FDs, but at least it lets them go after the timeout
[21:58] rbranson: also no CPU spiking
[21:58] oal: bradleymeck, in what circumstances would you use Coffeescript?
[21:58] rbranson: and no GC churn
[21:58] ryah_: rbranson: i think it should...
[21:58] aurynn: I've not used Coffeescript before. What's it add?
[21:58] tjholowaychuk: oal: if you dont know JS, id recommend starting with it first
[21:58] stephank: oal: I love coffee, and they really go hand in hand. Knowledge in JS applies to CS, and vica versa.
[21:58] tjholowaychuk: aurynn: a kinda ruby/python syntax
[21:59] bradleymeck: oal, i personally wouldnt, but if you want something thats easier to get into from a different language, CS is rather nice
[21:59] bradleymeck: array comprehensions is the big thing
[21:59] tjholowaychuk: aurynn: and it can prevent people who dont know JS from making common fuckups lol
[21:59] ryan[WIN]: ryah_, why does every node dependency have to have issues building with mingw :P
[21:59] tjholowaychuk: which is nice
[21:59] tjholowaychuk: but you should really just learn js
[21:59] ryan[WIN]: fffffuuuuuuu
[21:59] tilgovi has joined the channel
[22:00] digitalspaghetti: tjholowaychuk: hey, i'm having some issues around error handlers in express, you got a sec to look at a gist?
[22:00] oal: Does coffeescript compile the code automatically, or is it something I'd have to do myself? While I've been using python for years, I still know some js (been using jquery and such for some years).
[22:00] oal: Should I just go for js?
[22:00] tjholowaychuk: digitalspaghetti: ya sure
[22:00] ryan[WIN]: coffeescript just compiles to js
[22:00] tjholowaychuk: oal:id recommend using js for a bit, then once you have the idea, go with coffee if you want
[22:01] tjholowaychuk: otherwise you have an extra layer of complexity
[22:01] bencc has joined the channel
[22:01] oal: Sounds like a plan :)
[22:01] ryan[WIN]: coffeescript is a great tool to use if you work with JS a lot
[22:01] ryan[WIN]: if you're just doing very basic dom manips with jquery
[22:01] Anti-X: isn't it a bit rude to use such a general term as coffee to describe something similar to a more specifically named language?
[22:01] ryan[WIN]: there's no real purpose
[22:01] tjholowaychuk: i think js is a great tool if you use js a lot lol
[22:01] digitalspaghetti: tjholowaychuk: https://gist.github.com/d23079c51ba3cf03f713
[22:01] oal: It looks a lot more readable than js. Close to Python
[22:01] tjholowaychuk: i think its the other way around
[22:02] ryan[WIN]: tjholowaychuk, yes but coffeescript sugars a lot of PITA code
[22:02] digitalspaghetti: my problem seems to be when i throw the error, rather than it being caught and res sending out a JSON error, it throws an error in stdout and crashes my app
[22:02] stephank: And it's a lot less verbose than JS
[22:02] sechrist: has anybody in here used the node-python interconnect thing?
[22:02] techwraith: Preference :)
[22:02] tjholowaychuk: ryan[WIN]: i dunno im not annoyed by much with js
[22:02] digitalspaghetti: getUser is my middleware, and User is my view handler
[22:02] ryan[WIN]: o rly
[22:03] sechrist: middleware is such a crappy term
[22:03] dylang has joined the channel
[22:04] tjholowaychuk: digitalspaghetti: durrr, lots going on there
[22:04] tjholowaychuk: im kinda lazy
[22:05] digitalspaghetti: basically, it takes an incoming username/password, goes out to couchdb to fetch it from a the _users table, and if not found i want to throw an error, now at the moment I just res.send my JSON, but it would be nice to use the build in error handlers
[22:05] digitalspaghetti: i can catch up with you when your less lazy, it's just bugging me but not a biggie just now
[22:05] isaacs has joined the channel
[22:05] tjholowaychuk: digitalspaghetti: it can only catch errors thrown immediately within the route callback
[22:06] tjholowaychuk: digitalspaghetti: anything else you have to next(err) otherwise I cant do anything with it
[22:06] digitalspaghetti: ahh ok, i think i get what you mean :D  I'll give it a try
[22:07] Anti-X: you need to lick it
[22:07] digitalspaghetti: HAPPY BIRTHDAY Anti-X !
[22:07] tjholowaychuk: Anti-X: whats rude about calling it coffee
[22:07] Anti-X: yeah, words. where's the lickin'? :P:P
[22:08] norviller has joined the channel
[22:08] Anti-X: java is coffee, but coffee doesn't have to be java
[22:09] Anti-X: which should be opposite
[22:09] Anti-X: in this case
[22:09] Anti-X: maybe
[22:09] tjholowaychuk: pff, no one talks about java
[22:09] Anti-X: add script to both
[22:09] Anti-X: it's not hard!
[22:10] tjholowaychuk: haha
[22:10] Anti-X: i was cutting out superfluous words
[22:10] Anti-X: superfluous is in itself quite superfluous.. nowadays people just call it "sh*t"
[22:10] TheEmpath: testing in chrome: disturbing or am i doing this wrong http://jsperf.com/fast-queue-optimization and yet http://jsperf.com/queue-vs-array-shift
[22:11] indexzero has joined the channel
[22:11] tjholowaychuk: english sucks
[22:11] Anti-X: totes brah
[22:13] TheEmpath: it appears that by simply defining the prototype as an object speeds things up tremendously
[22:14] TheEmpath: no wait, that makes no difference
[22:14] Anti-X: ...
[22:15] Anti-X: so, anyone feel like assisting in porting python's decimal class to node?
[22:15] Anti-X: for precise numbers
[22:16] TheEmpath: D:
[22:16] aurynn: I'm wrapped up in postgres
[22:16] bruse: how about having big integers in node?
[22:17] Anti-X: doesn't js have big ints?
[22:17] aurynn: 53 bit
[22:17] Anti-X: oh that's not big at all
[22:17] aurynn: Due to the underyling representation being floats
[22:17] Anti-X: lol?
[22:17] Anti-X: so a bigint/decimal project?
[22:18] charlenopires has joined the channel
[22:18] muk_mb has joined the channel
[22:18] pquerna: 52 bit i thought
[22:18] aurynn: somewhere in there
[22:18] Anti-X: i do think the decimal class is also bigint, but that could simply be due to python not having an integer limit to start with
[22:18] StanAngeloff has joined the channel
[22:19] Anti-X: though i see more uses for precise decimal arithmetic than big ints tbh
[22:19] stephank: Can you override operators in V8?
[22:19] pquerna: you can do []
[22:20] aurynn: stephank, you can override =
[22:20] pquerna: but thats about it
[22:20] pquerna: no +/- etc afaik
[22:20] aurynn: but only = on properties in your objects.
[22:20] stephank: sad, but I wonder if they'd like that idea.
[22:20] sechrist: anybody know how to get this to build? (or at least to link)? http://github.com/chrisdickinson/node-python
[22:20] tjholowaychuk: hell no
[22:20] sechrist: I'm not familiar enough with node-waf to know what's going on
[22:20] tjholowaychuk: lol
[22:20] chrisdickinson: errr
[22:21] chrisdickinson: sechrist: it's probably not usable in general
[22:21] sechrist: LOL
[22:21] chrisdickinson: in my case i built on osx
[22:21] chrisdickinson: sorry ):
[22:21] sechrist: well that shouldn't matter
[22:21] chrisdickinson: what errors are you getting, out of curiosity? 
[22:21] sechrist: http://gist.github.com/641492
[22:21] sechrist: looks like linker is getting passed args wrongly
[22:23] sechrist: building on ubuntu lucid
[22:23] chrisdickinson: hm.
[22:25] danielrmz has joined the channel
[22:25] sechrist: yeah, hm
[22:25] danielrmz has joined the channel
[22:27] jchris has joined the channel
[22:28] chrisdickinson: sechrist: so the error is in the wscript file
[22:28] sechrist: well yeah that's what I gathered but I'm not familiar enough with node-waf
[22:28] chrisdickinson: i'm using the OSX dylib loading of the python framework
[22:31] bmc has joined the channel
[22:31] bmc: hi
[22:31] bmc: got a question
[22:32] bmc: osx: new Buffer("\0","utf8") -> <Buffer 0>
[22:32] bmc: ubuntu: new  Buffer("\0","utf8") -> <Buffer >
[22:34] sechrist: chrisdickinson: ah so I'd have to rework it to use an so
[22:35] chrisdickinson: sechrist: yep. sorry about that -- the node-python thing was totally an experiment
[22:35] sechrist: well for the company I walked into there's a project I'm doing that would be done much better in done but the infrastructure is python
[22:36] sechrist: so most likely I'll have to seek a solution to combine them
[22:36] sechrist: much better in node*
[22:36] MikhX has joined the channel
[22:36] stephank: bmc: Don't ask me, but: new Buffer("\0", "utf8") => <Buffer 00>
[22:36] vnguyen_ has joined the channel
[22:36] stephank: (ubuntu as well)
[22:38] bmc: strange strange perhaps it's the version of node or ubuntu I'm running...hmmm...
[22:39] rbranson: > new Buffer("\0", "utf8")
[22:39] rbranson: <Buffer 00>
[22:40] bmc: will try updating node to head, rebuilding, and see.  
[22:44] mikew3c_ has joined the channel
[22:45] norviller has joined the channel
[22:47] svnlto has joined the channel
[22:49] bmc: still gives me Buffer("\0") -> <Buffer >
[22:54] bmc: exit
[22:54] Robbb has joined the channel
[22:56] gerred has joined the channel
[22:57] ryanfitz has joined the channel
[22:59] Me1000 has joined the channel
[23:00] strmpnk has joined the channel
[23:01] herbySk: v8: var x = (); x
[23:01] v8bot: herbySk: SyntaxError: Unexpected token )
[23:02] rbranson: nice
[23:02] herbySk: v8: var x = void (); x
[23:02] v8bot: herbySk: SyntaxError: Unexpected token )
[23:03] herbySk: v8: var x = void (0); x
[23:03] v8bot: herbySk: undefined
[23:03] herbySk: ok
[23:03] TheEmpath: vb: var this; return this;
[23:03] TheEmpath: v8: var this; return this;
[23:03] v8bot: TheEmpath: SyntaxError: Unexpected token this
[23:03] TheEmpath: aww
[23:03] vnguyen has joined the channel
[23:04] aurynn: thiiiiis.
[23:05] herbySk: TheEmpath: var this?
[23:05] Akufen has joined the channel
[23:05] Akufen has joined the channel
[23:05] TheEmpath: wanted to see if v8 had an implicit context
[23:05] herbySk: ACTION thinks should he not begin to write void 0 instead of longer undefined
[23:06] herbySk: v8: this
[23:06] v8bot: herbySk: {}
[23:06] herbySk: v8: this === ({}).valueOf.call()
[23:06] v8bot: herbySk: true
[23:10] johngbrooks has joined the channel
[23:11] tjholowaychuk has joined the channel
[23:11] olegp has joined the channel
[23:13] [[zzz]] has joined the channel
[23:13] _mythz has joined the channel
[23:14] rbranson: ryah_: btw, if I add a connection.destroy() to the event that traps the end message, it stops the behavior in all versions
[23:14] rbranson: callback that traps the end message
[23:19] davidascher has joined the channel
[23:19] jakehow has joined the channel
[23:19] MattDiPasquale has joined the channel
[23:21] braddunbar has joined the channel
[23:21] ryah_: rbranson: is it not doning connection.end() right now?
[23:21] ryah_: hm
[23:22] ryah_: this is in socket.io ?
[23:22] rbranson: yeah
[23:23] rbranson: http://github.com/LearnBoost/Socket.IO-node/issues/issue/83
[23:23] dohtem has joined the channel
[23:23] dohtem has joined the channel
[23:26] aguynamedben has joined the channel
[23:27] sstephenson has joined the channel
[23:29] micheil: ryah_, rbranson: so this appears to be an issue from within socket.io?
[23:29] rodasc has joined the channel
[23:29] rbranson: well it's kind of a combination of both
[23:29] rbranson: you were right in the idea that socket.io was triggering the problem
[23:29] micheil: if this is appearing most with their websocket implementation, would you be able to test node-websocket-server?
[23:30] micheil: (hopefully over the coming months node-websocket-server will be powering socket.io)
[23:32] pquerna: drum class sucks
[23:33] ryah_: maybe sockets should close automatically on FIN...
[23:33] micheil: ryah_: that would probably be a good idea
[23:33] ryah_: seems like it's pretty confusing to people
[23:33] rbranson: is there any reason to keep the FD around?
[23:33] ryah_: you may want to send some data
[23:34] ryah_: like "see you later a;ligator" 
[23:34] rbranson: if I understand it right, they're in FIN2 state
[23:34] pquerna: half closed states, tcp <3
[23:35] rbranson: is this why you tell us not to use node.js in production? :D
[23:35] ryah_: rbranson: do you have the state graph handy ? not sure what FIN2 is
[23:36] rbranson: i think it's technically a FIN_WAIT_2
[23:36] pquerna: http://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Tcp_state_diagram_new.svg/796px-Tcp_state_diagram_new.svg.png
[23:36] nerdEd has joined the channel
[23:36] rbranson: wow
[23:37] AAA_awright has joined the channel
[23:37] ryan_gahl has joined the channel
[23:38] micheil: ryah_: I'm going to start on those patches now. should have them to you within about the hour.
[23:38] elijah-mbp has joined the channel
[23:39] micheil: (erm, so, 1 hour from now)
[23:42] AAA_awright has joined the channel
[23:43] gozala1 has joined the channel
[23:44] ryah_: micheil: doc splitting?
[23:45] micheil: that afterwards
[23:45] micheil: I need to do a cross-branch merge for that
[23:45] micheil: but the two deprecation ones on nodejs-dev
[23:45] micheil: (the two threads I started yesterday)
[23:45] micheil: and then I was going to do the http stuff
[23:46] micheil: I'm estimating about 1 hour for the two deprecation patches
[23:46] micheil: and about 1-2 hours for the http stuff
[23:46] micheil: would the doc-split be good if I get it to you by tomorrow morning?
[23:47] davidascher has joined the channel
[23:47] elijah-mbp has joined the channel
[23:49] dquestio1s has joined the channel
[23:49] micheil: ryah_: sound good?
[23:50] ryah_: sure - of course
[23:50] bencc has left the channel
[23:51] sechrist: Is there a general purpose module for parsing json objects out of streams?
[23:51] sechrist: or just one off pieces that people implemented in other modules (like streaming twitter)
[23:51] gozala1: Isaacs: hi
[23:51] isaacs: yo!
[23:51] isaacs: gozala1: so, what is it you want to do?
[23:51] gozala1: do you have some time now
[23:51] isaacs: sure, why not
[23:51] isaacs: :)
[23:52] gozala1: ok basically what I'm doing is a module loader for a browser
[23:52] gozala1: + nodejs based simple server
[23:52] gozala1: idea is to bring npm to the browser
[23:52] SUBSTACK: sechrist: parsing json out of a stream for what purpose? rpc?
[23:53] isaacs: gozala1: omg
[23:53] SUBSTACK: gozala1: I've thought that too!
[23:53] isaacs: gozala1: wait, what for
[23:53] isaacs: ?
[23:53] isaacs: why?
[23:53] SUBSTACK: http://github.com/substack/node-browserify 
[23:53] SUBSTACK: haven't finished though
[23:53] isaacs: npm is a node package manager, not a browser platform
[23:53] gozala1: so that you can start project
[23:53] gozala1: wit package.json 
[23:53] sechrist: SUBSTACK: sort of
[23:53] gozala1: and say dependencies are jquery markdown etc
[23:54] sechrist: actually a pipe between programs
[23:54] gozala1: and if it's installed in by npm 
[23:54] sechrist: I managed to hack up one of the infrastructure apps to spit out json
[23:54] sechrist: now I want it in node
[23:54] gozala1: you'll be able to require those modules in browser
[23:54] gozala1: I know npm is for node stuff
[23:54] isaacs: gozala1: i think what you want is something like nodules, which i think already runs in the browser.
[23:55] isaacs: gozala1: or just use jquery for the browser and node for hte server/
[23:55] isaacs: what's wrong wiht that?
[23:55] micheil: sechrist: if you get data events, then you should write a state machine parser, which when it finds \n it splits that chunk out and tries to JSON.parse() it, then emit that as data
[23:55] SUBSTACK: sechrist: what lang is the infrastructure app written in?
[23:55] micheil: sechrist: it'd be a use case for a filter
[23:55] gozala1: that I have to download jquery and all the other stuff and maintain that manually
[23:55] sechrist: python
[23:55] gozala1: I would like to just use npm for that as well
[23:55] sechrist: lots of python
[23:55] SUBSTACK: ah that sucks, since dnode-python isn't operable yet
[23:56] micheil: gozala1: there's a tool for that.
[23:56] isaacs: gozala1: while i think your heart is in the right place, jquer isn't a node module.
[23:56] gozala1: nodules is similar but it's the goal is different
[23:56] micheil: gozala1: I forget what it's called though
[23:56] SUBSTACK: dnode-perl and dnode-ruby work though, even if they are a bit preliminary
[23:56] sechrist: dnode-python? is that some sort of interconnect?
[23:56] sechrist: something like thrift?
[23:56] vnguyen has joined the channel
[23:56] micheil: sechrist: communicates via sockets
[23:56] gozala1: I don't really care about jquery honestly 
[23:56] micheil: sechrist: not quite the same as having a json data feed
[23:56] isaacs: gozala1: you could write a package.json module that puts the static stuff in teh right place for an express app to load jquery or something
[23:57] gozala1: it was just an example
[23:57] isaacs: gozala1: sure.
[23:57] micheil: sechrist: either way, you'd need a data parser
[23:57] sechrist: micheil: state machine for looking for "\n" wouldn't work if there's a \n in the data
[23:57] sechrist: right?
[23:57] isaacs: gozala1: or you could use yui, which is an honest-to-goodness browser+node library these days
[23:57] sechrist: unless you check for two \s
[23:57] isaacs: if you want that much abstraction
[23:57] sechrist: or something
[23:57] SUBSTACK: sechrist: not true
[23:57] gozala1: ok let me try to put it other way then
[23:57] Gruni has joined the channel
[23:57] isaacs: sechrist: a state machine can do anything.  you just need more states.
[23:57] SUBSTACK: v8: JSON.stringify([1,2,'moo\npow'])
[23:57] v8bot: SUBSTACK: "[1,2,"moo\\npow"]"
[23:57] SUBSTACK: ^^^^
[23:58] gozala1: here is this simple app I wrote some time ago
[23:58] gozala1: http://jeditoolkit.com/taskhub/
[23:58] micheil: sechrist: right, but that's an example
[23:58] sechrist: yeah so \n would have to match but \\n to not match
[23:58] micheil: depends what your data is
[23:58] SUBSTACK: nope, a proper json parser can split on \n with no problem
[23:58] gozala1: it uses some of the packages that can happily run both on node and with in browser
[23:58] gozala1: I'd like to make package.json
[23:58] micheil: also depends how you want your data
[23:58] gozala1: which will have
[23:59] sechrist: I think getting that node-python operable is a better option for what i'm doing
[23:59] gozala1: "engines": {"node": ">= 0.2.0", "browser": ...},
[23:59] sechrist: the goal is to access various apis and crap internally in node
[23:59] sechrist: so this pipe process thing is kind of a one-off hack thing that won't ever work long term
[23:59] gozala1: then if someone wants to use this package in it's own project he will just use npm to get it in place
