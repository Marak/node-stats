[00:02] aheckmann has left the channel
[00:03] miccolis has joined the channel
[00:03] sriley has joined the channel
[00:04] MikhX_ has joined the channel
[00:04] shimondoodkin: v8: var n = 0, d=(new Date()).getTime()+1000;while(d>(new Date()).getTime()){n++;}console.log(n);
[00:04] v8bot: shimondoodkin: CONSOLE: [1109073], OUTPUT: undefined
[00:04] muk_mb has joined the channel
[00:05] softdrink: methinks someone was smoking something when they wrote the sec-websocket-key bit of the spec.
[00:06] shimondoodkin: softdrink: what is it?
[00:07] softdrink: web socket handshake
[00:07] shimondoodkin: softdrink: whats wrong with it?
[00:08] softdrink: part of it requires you to count the number of space characters in it… which seems *completely* arbitrary
[00:08] shimondoodkin:  i read the specs it is redicules
[00:09] davidascher has joined the channel
[00:10] shimondoodkin: there is alrady tcp ip handshake
[00:11] Gruni has joined the channel
[00:11] shimondoodkin: it is probably a "standard" way of matching between html page and socket
[00:13] shimondoodkin: it probably reqires you to have a quee with removal on connection close and on timeout of no connection established
[00:13] janne has joined the channel
[00:13] shimondoodkin: quee of requiest ids
[00:13] inimino: It's not arbitrary, it actually has perfectly reasonable security considerations behind the design.
[00:13] shimondoodkin: i see security flaws
[00:14] bbttxu has joined the channel
[00:14] shimondoodkin: ssl is better
[00:14] inimino: Don't tell me about it, get on the lists and get involved.
[00:15] shimondoodkin: inimino: :) fine
[00:15] shimondoodkin: inimino: why did yhey done it?
[00:16] shimondoodkin: *they
[00:16] rwaldron has joined the channel
[00:16] inimino: shimondoodkin ⋱ The spaces?
[00:17] shimondoodkin: sec-websocket-key
[00:17] hober has joined the channel
[00:17] inimino: I don't know, I haven't been following it for a while.
[00:17] inimino: I looked at the much earlier drafts but a lot has changed.
[00:18] inimino: I'm kind of waiting to see what happens at this point.
[00:20] shimondoodkin: v8: var n = 0, d=(new Date()).getTime()+1000;while(d>(new Date()).getTime()){n++;} console.log("v8 cpu works at "+(n/1000000)+"Mhz");
[00:20] v8bot: shimondoodkin: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[00:21] bruse: that's strange
[00:21] shimondoodkin: v8bot> CONSOLE: ["v8 cpu works at 1.101093Mhz"], OUTPUT: undefined
[00:21] v8bot: shimondoodkin: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[00:22] Mikushi has joined the channel
[00:22] shimondoodkin: javascript is 1000 times slower then c++
[00:22] shimondoodkin: asuming 1Ghz cpu
[00:22] aurynn: for now.
[00:23] shimondoodkin: am i correct with my calculations?
[00:23] aho: depends on what you're doing
[00:23] aho: v8 for example got a top notch regexp engine
[00:23] aurynn: shimondoodkin, you can't derive in-general assumptions from simple calculations
[00:24] shimondoodkin: id did n++;
[00:24] shimondoodkin: and new date also
[00:24] aho: http://shootout.alioth.debian.org/u32/benchmark.php?test=all&lang=v8&lang2=gpp
[00:24] aurynn: Sure, but complex tasks can take less time to run
[00:25] aurynn: and how do you measure the performance of the developer?
[00:25] mikeal has joined the channel
[00:26] aho: regex is the same, usually it's 4-20 times slower, unless you do something js is really bad at... then it's easily 100 times slower
[00:26] shimondoodkin: sure javascript is faster to develop then c++
[00:26] shimondoodkin: because it is a managed memory oo script
[00:27] aho: so, as you can see your "1000 times slower" figure was pretty off
[00:27] aurynn: so do you need a faster developer or a faster language? What does your project need?
[00:28] aurynn: also, JS can be JIT compiled now, so it can be profiled and eventually be faster than the same code written by a naive C++ developer.
[00:28] aurynn: We're at the point where ASM is faster if you let a machine write it, usually.
[00:29] aurynn: I can buy a faster CPU for a lot cheaper than I can buy an elite C++ developer for a year.
[00:30] creationix: aurynn: so true
[00:30] shimondoodkin: :)
[00:30] aho: usually the db will be the bottleneck btw
[00:31] aho: ruby and php are quite a bit slower than js/v8 for example, but they still do fairly well for that reason
[00:32] evanmeagher has joined the channel
[00:33] shimondoodkin: btw any ideas on a methodoloady of how to develop in paralel?
[00:33] creationix: when your system is I/O heavy, the threaded vs event based makes more difference then "scripted" vs "compiled"
[00:33] Aria has joined the channel
[00:33] eee_c1 has joined the channel
[00:34] shimondoodkin: like 10 programmers on 1 program and the result is achived 10 times quicker
[00:35] creationix: shimondoodkin: that's like 9 women creating a baby in 1 month
[00:35] shimondoodkin: i like that joke
[00:35] aurynn: read the Mythical Man Month.
[00:35] aurynn: I really liked their surgeon analogy
[00:35] creationix: but yeah, sometimes you can break out modules and work in parallel
[00:35] shimondoodkin: ive read a summery on wikipedia, me too
[00:35] creationix: but more often than not, the overall cost is so much more it doesn't save time
[00:36] creationix: modularity and loose coupling with strict interfaces
[00:36] creationix: I have a great book on interface oriented programming
[00:37] creationix: the web is a great example of this
[00:38] prettyrobots has joined the channel
[00:38] davidascher has joined the channel
[00:39] unomi has joined the channel
[00:40] shimondoodkin: have you had a docs writer on your team? how the interaction with him works? is it not spending time of two people insted of one
[00:40] jrockjiggz has joined the channel
[00:42] shimondoodkin: i think i need someone to write docs to my projects
[00:42] Gruni has joined the channel
[00:44] mikeal has joined the channel
[00:51] aaron__ has joined the channel
[00:52] johngbrooks has joined the channel
[00:52] mbrochh has joined the channel
[00:52] mbrochh has joined the channel
[00:52] mogilny has left the channel
[00:54] sprout has joined the channel
[00:55] jvolkman-home: Are there any memory/heap analyzers for node or v8?
[00:56] pedrobelo has joined the channel
[00:57] tlrobinson_ has joined the channel
[00:58] shimondoodkin: any debuger can do it for you
[00:58] shimondoodkin: it is just a metter of gui
[00:58] shimondoodkin: it is native in v8
[00:58] jvolkman-home: heap inspection?
[00:59] AAA_awright_ has joined the channel
[00:59] shimondoodkin: you can try cloude 9 , node inspector
[00:59] mbrochh has joined the channel
[00:59] mbrochh has joined the channel
[01:00] shimondoodkin: or command line
[01:00] shimondoodkin: node --debug --something like dump heap to file
[01:00] tapwater has joined the channel
[01:01] shimondoodkin: what is include in node js 0.3?
[01:01] shimondoodkin: what is include() in node js 0.3?
[01:02] shimondoodkin: is there a difference between require and include?
[01:03] ajsie: didnt know there was an include 
[01:03] ajsie: =)
[01:03] shimondoodkin: me too
[01:03] shimondoodkin: is it works or it is just a alias
[01:04] prettyrobots has joined the channel
[01:04] jasondavies has joined the channel
[01:04] jasondavies has joined the channel
[01:05] jvolkman-home: i dont' have include() in 3.0
[01:06] shimondoodkin: it is in change log
[01:06] shimondoodkin:  * require() and include() now need the ".js" extension
[01:06] aho: <shimondoodkin> like 10 programmers on 1 program and the result is achived 10 times quicker <- number of communication paths is n*(n-1)/2. 2 people = 1 path, 10 people = 45 paths... so yea, there is lots of extra friction :>
[01:06] shimondoodkin: :)
[01:07] aho: as soon as there are 4 people, the number of communication paths exceeds the number of people
[01:07] shimondoodkin: lol
[01:08] tapwater has joined the channel
[01:08] Aria: Ooh, need the .js extension. win, from my point of view.
[01:08] Aria: Less magic!
[01:08] aho: well, it's a real problem .)
[01:08] shimondoodkin: aho: the comm paths or .js?
[01:09] aho: communication paths
[01:09] shimondoodkin: how do you know that?
[01:09] aho: know what?
[01:10] shimondoodkin: that it is areal problem to have more then 4 programmers  on a project
[01:10] prettyrobots has joined the channel
[01:10] aho: well, that's not a problem per se
[01:10] aho: it's a problem that there is more overhead
[01:10] shimondoodkin: have you hada similar expirtiance
[01:10] mbrochh has joined the channel
[01:10] mbrochh has joined the channel
[01:11] tilgovi_ has joined the channel
[01:11] shimondoodkin: til now i have tried only teams of 2  programmers
[01:11] aho: it's painfully obvious if your team grows from <4 to >4
[01:12] Aria: Ayep. Unless things modularize neatly, or you have some other divisible task that reduces the communication between groups of >4, you have to manage that.
[01:12] aho: ye, having some kind of hierarchy helps
[01:13] Aria: Hierarchy's one popular option.
[01:14] jchris has joined the channel
[01:14] shimondoodkin: funny other way: put each programmer in a diffrent room so there wont be a comunication
[01:14] prettyrobots has joined the channel
[01:15] mbrochh has joined the channel
[01:15] scnd has joined the channel
[01:15] shimondoodkin: did you tried tests first?
[01:15] aho: ideally there are lots of small groups (2-3) which work on small separate (or well, modular) things
[01:16] zentoooo has joined the channel
[01:16] hamsterspider has left the channel
[01:17] Aria: Yeah. And either send a delegate to work on integration, or have some fluidity in group format, so that as projects overlap, there's a good team working on those things.
[01:17] Aria: And ... learn to communicate in code. Because at least that communication has a side-effect that's useful.
[01:18] xicubed has left the channel
[01:18] Aria: A good strategy for that is 'rough consensus and running code' (or 'running tests')
[01:19] Aria: As long as everyone more or less agrees, and the design has an implementation, go.
[01:19] shimondoodkin: I like the idea to communicate in code
[01:19] Aria: (And it encourages ideas to come with back-up, actual working code to demonstrate it.)
[01:19] Aria: "Why, yes, here's a spec. But it matches THIS CODE I WROTE. See? Even method names show up like the verbs in the spec do."
[01:20] shimondoodkin: :)
[01:21] aho: whats nice about written stuff (code/docs/guide lines/conventions/etc) is that there is only friction on the receiving end - not both (i.e. it's a linear cost)
[01:21] derferman has joined the channel
[01:21] Aria: Yeah.
[01:21] Aria: Well. Mostly. The communication channel itself has a friction that's pretty high.
[01:22] Aria: (Though one that, if your team can't hack, aren't going to do well with code.)
[01:24] mbrochh has joined the channel
[01:24] mbrochh has joined the channel
[01:24] shimondoodkin: aho: I did not understood why there is only friction on the receiving end
[01:24] shimondoodkin: is it the readers does not like it?
[01:24] aho: there isnt one person on the other end who has to explain it over and over and over again
[01:24] xla has joined the channel
[01:25] shimondoodkin: aha
[01:25] shimondoodkin: like there is no feed back and arguing
[01:26] shimondoodkin: Aria: What do you mean by If your team can't hack, they aren't going to do well with code?
[01:27] aho: well, there might be feedback and arguing, but explaining how things currently are (or how they will be) only requires the time of one person per person (one and the same) instead of 2 people
[01:27] mbrochh has joined the channel
[01:27] mbrochh has joined the channel
[01:29] shimondoodkin: ok get it
[01:30] tlrobinson_ has joined the channel
[01:30] shimondoodkin: Aria: do you mean to hide only programmers who can leran from code - thouse who know how to hack?
[01:31] shimondoodkin: hire
[01:32] mbrochh_ has joined the channel
[01:32] tlrobinson__ has joined the channel
[01:34] shimondoodkin: aho: thanks
[01:34] aho: np
[01:34] shimondoodkin: Aria: thanks
[01:35] andrewa2 has joined the channel
[01:35] Aria: Sure thing.
[01:36] shimondoodkin: aho, Aria what are your github names?
[01:36] Aria: aredridel
[01:36] aho: i'm not on github :>
[01:37] blowery has joined the channel
[01:37] evanmeagher has joined the channel
[01:38] shimondoodkin: do you have twitter?
[01:39] tlrobinson_ has joined the channel
[01:40] prettyrobots has joined the channel
[01:40] jimt_ has joined the channel
[01:40] bmizerany has joined the channel
[01:40] creationix has left the channel
[01:41] mbrochh has joined the channel
[01:41] tlrobinson__ has joined the channel
[01:42] softdrink: ACTION pets socket.io
[01:44] shimondoodkin: ACTION found a solution to write docs: do them in the wiki instead in the readme
[01:45] banjiewen_ has joined the channel
[01:46] prettyrobots has joined the channel
[01:46] jpld has joined the channel
[01:47] jpld: AAA_awright / davidc_ : cheers for the help on http auth, i settled on connect-auth which has a few different methods, still in search of ssl (0:
[01:47] bpot has joined the channel
[01:47] mbrochh has joined the channel
[01:48] tlrobinson_ has joined the channel
[01:50] andrewa2 has left the channel
[01:51] mbrochh has joined the channel
[01:52] sh1mmer has joined the channel
[01:52] Guest54708 has joined the channel
[01:54] mbrochh has joined the channel
[01:54] mbrochh has joined the channel
[01:56] bruse: so why does node require copyright assignment?
[01:57] cardona507 has joined the channel
[01:58] matt_c has joined the channel
[02:00] davidascher has joined the channel
[02:01] elijah-mbp has joined the channel
[02:04] jwm_ has joined the channel
[02:05] mbrochh has joined the channel
[02:07] deepthawtz has joined the channel
[02:07] mbrochh has joined the channel
[02:10] stagas: why is npm failing with couldn't resolve host 'packages'
[02:10] miccolis has joined the channel
[02:10] jamescarr has joined the channel
[02:11] mbrochh has joined the channel
[02:11] ajsie: if i have 30 files that are using "util"...isnt it better to make it global in the index.js like: "util = require('util');" ?
[02:12] jamescarr: no
[02:13] jamescarr: globals are never good
[02:13] brianmario has joined the channel
[02:13] jamescarr: you could always pass it into your modules though if you don't want to include it each time
[02:13] jamescarr: via dependency injection
[02:14] stagas: isaacs?
[02:14] ajsie: jamescarr: how do you mean?
[02:14] ajsie: some examples?
[02:15] jjcm has left the channel
[02:15] mbrochh has joined the channel
[02:15] mbrochh has joined the channel
[02:15] Tobsn has joined the channel
[02:16] richcollins has joined the channel
[02:16] Tobsn has joined the channel
[02:17] c4milo has joined the channel
[02:17] jamescarr: var whatever = require('yourmodule')(util);
[02:17] jamescarr: or var whatever = require('yourmodule').use(util);
[02:17] jamescarr: or even...
[02:18] gkatsev: you can do that?
[02:18] jamescarr: var Dude = require('the').Dude;
[02:18] jamescarr: var dude = new Dude(util);
[02:18] rauchg_ has joined the channel
[02:18] gkatsev: ah
[02:18] jamescarr: var elDuderino = new Dude(util);
[02:18] jamescarr: :)
[02:18] gkatsev: just shorthand, basically?
[02:19] ajsie: jamescarr: is this possible: require('yourmodule').use(util);
[02:19] ajsie: yourmodule will inject util?
[02:19] ajsie: or do i have to add use() method?
[02:21] jamescarr: use is made up by me :)
[02:21] ajsie: okay=)
[02:21] ajsie: yeah i get you
[02:21] jamescarr: exports.use = function(util){ return whatever; }
[02:24] heavysixer has joined the channel
[02:25] ben_alman has joined the channel
[02:26] slaskis_ has joined the channel
[02:27] isaacs: awesome, the npm registry can actually be replicated now
[02:28] MikhX has joined the channel
[02:28] isaacs: stagas: you around?
[02:29] stagas: isaacs: yes
[02:29] rauchg_: isaacs: is it sharded too ?
[02:29] isaacs: you still getting that "could not resolve host packages" issue?
[02:29] ajsie: how do i fetch the current path?
[02:29] rauchg_: npm is webscale
[02:29] isaacs: rauchg_: no, not sharded.  i do plan on setting up bigcouch for that eventually, but not yet
[02:29] isaacs: rauchg_: ;P
[02:29] stagas: isaacs: it's fixed now
[02:29] isaacs: stagas: oh, weird
[02:29] isaacs: stagas: do you have a stack trace?  i'm curious
[02:30] stagas: isaacs: actually didn't test it, but reloaded registry.npmjs.org/npm/latest
[02:30] stagas: isaacs: the tarball had 'package' as hostname
[02:32] isaacs: stagas: the reason i'm curious is that i have the "packages" hostname mapped to 127.0.0.1, and use that for testing
[02:32] isaacs: d'oh
[02:32] isaacs: ye;
[02:32] isaacs: yep
[02:32] isaacs: that sure did slip in there...
[02:32] isaacs: and, probably all over the damn place.
[02:32] isaacs: great.
[02:32] isaacs: ACTION runs off to fix it...
[02:34] BHSPitMonkey has joined the channel
[02:36] indutny has joined the channel
[02:36] mikeal has joined the channel
[02:37] MattDiPasquale has joined the channel
[02:37] keeto has left the channel
[02:37] keeto has joined the channel
[02:38] embedder has joined the channel
[02:39] softdrink has joined the channel
[02:39] prettyrobots has joined the channel
[02:40] stagas: testing https://gist.github.com/670250
[02:40] stagas: ok works: http://embed.stagas.com/
[02:40] bartt has joined the channel
[02:41] stagas: made a bot that grabs all urls from here and oembeds them in a frame
[02:41] indutny: cool
[02:41] indutny: http://github.com/
[02:41] indutny: works
[02:42] indutny: http://github.com/"123"
[02:42] stagas: or just puts them in a second frame in the frame if they aren't oembeddable
[02:42] stagas: uses api.embed.ly
[02:42] indutny: http://github.com/"123
[02:42] indutny: http://github.com/<231>
[02:42] isaacs: stagas: ok, fixed now.
[02:43] indutny: is it open source?
[02:43] isaacs: stagas: also, if you replicate the db's, the registries will try to serve the tarballs from their own location now.
[02:43] stagas: isaacs: wow
[02:44] jasondavies has joined the channel
[02:44] jasondavies has joined the channel
[02:45] banjiewen has joined the channel
[02:46] stagas: indutny: I'll put it up on github sometime
[02:46] eee_c has joined the channel
[02:46] indutny: stagas: thanks
[02:46] isaacs: hahaha, and now, instead of none of the packages on http://npm.mape.me/ having "laste updated" dates, they're ALL updated 3 hours ago.
[02:47] indutny: isaacs: it happens
[02:47] indutny: isaacs: sometimes :)
[02:47] isaacs: take that, data!!
[02:47] isaacs: now at least people wont' complain that it's "out of date"
[02:51] yeevgen has joined the channel
[02:52] derferman has joined the channel
[02:53] indutny: isaacs: set date to 2012 year
[02:53] indutny: isaacs: so they never be stale
[02:54] isaacs: hah
[02:54] tlrobinson_ has joined the channel
[02:54] stagas: it shows thumbnails also if they're available http://www.youtube.com/watch?v=0pQ5QMa7Pjo
[02:56] softdrink: wheeeee collaborative mouse clicks with web sockets http://jocafa.com:9876/   (chrome only at the moment)
[02:57] softdrink: hehe
[02:57] indutny: haha
[02:57] slaskis has joined the channel
[02:57] charlenopires has joined the channel
[02:57] softdrink: friggin track pad
[02:58] softdrink: (multiple windows works btw)
[02:58] Gruni has joined the channel
[03:00] indutny: random attack!
[03:00] MikhX has joined the channel
[03:01] softdrink: lol nice
[03:01] softdrink: do that a couple or 3 times.. i'm curious :)
[03:02] indutny: haha :)
[03:02] softdrink: it's just twiddling its thumbs
[03:04] softdrink: htop is taking more load than node.
[03:04] indutny: stop flooding :)
[03:04] softdrink: hehe
[03:04] softdrink: was entertaining though
[03:05] softdrink: there's not even a blip on my cpu usage graph.
[03:06] indutny: of course no :)
[03:06] softdrink: node ftw
[03:06] dguttman_ has joined the channel
[03:08] tapwater_ has joined the channel
[03:08] eee_c has joined the channel
[03:08] indutny: softdrink: one problem - it isn't reconnecting on disconnect
[03:09] softdrink: *nod* totally hacked together… had never messed with socket.io before
[03:09] mjr_ has joined the channel
[03:10] jasondavies has joined the channel
[03:10] jasondavies has joined the channel
[03:12] brianmario has joined the channel
[03:15] MikhX_ has joined the channel
[03:18] MattDiPasquale has joined the channel
[03:20] jpld has joined the channel
[03:20] bartt has joined the channel
[03:23] jesusabdullah: Just read about the node/joyent thing--exciting!
[03:23] indutny: :)
[03:24] indutny: your nickname is awesome
[03:24] jesusabdullah: heh--thanks? :)
[03:26] bmizerany has joined the channel
[03:26] erlnoob has joined the channel
[03:27] AAA_awright_ has joined the channel
[03:32] ajsie: how do i share variables between files?
[03:33] ajsie: i use module.exports for them too?
[03:33] indutny: yes
[03:33] indutny: actually, in most cases
[03:33] indutny: you should change exports object
[03:33] ajsie: eg. i have in the main file set up "const appPath = __dirname"
[03:33] ajsie: and want other files to use appPath
[03:34] indutny: I usually do following
[03:34] ajsie: indutny: what do you mean by "change exports object"
[03:34] indutny: module.exports = function(option) {
[03:34] indutny: }
[03:34] indutny: and after
[03:34] indutny: require('...')(options);
[03:34] indutny: ajsie: i mean do following things
[03:34] indutny: exports.someVar = 1231;
[03:34] indutny: exports.someFn = function() {};
[03:35] ajsie: yeah 
[03:35] ajsie: i export everything and require them 
[03:35] bartt has joined the channel
[03:35] ajsie: so no globals huh ? =)
[03:35] indutny: nonono
[03:35] ajsie: cant remember how I did it back in php
[03:35] ajsie: i think they were using globals =)
[03:35] indutny: yes
[03:35] ajsie: and it was all spaghetti =)
[03:38] eee_c has joined the channel
[03:39] pquerna: I?m a contributor to Node ? do I need to sign a new contributor
[03:39] pquerna: license agreement (CLA) with Joyent?
[03:39] pquerna: No. The CLA will be addressed to Joyent now, but the terms are the same.
[03:39] pquerna: ryah: i dont' quite understand how that is accurate really :)
[03:40] jashkenas: let's all hope Joyent doesn't get bought by Oracle ;)
[03:42] indutny: haha :)
[03:42] indutny: that will be the devil's deal
[03:42] sivy has joined the channel
[03:43] twoism has joined the channel
[03:43] noahcampbell has joined the channel
[03:43] pquerna: oracle buys all my favourite things
[03:43] pquerna: :(
[03:43] indutny: oracle had bought
[03:43] indutny: even
[03:43] indutny: my dog
[03:43] galaxywatcher has joined the channel
[03:43] pquerna: berkelydb, innodb, mysql, zfs, dtrace
[03:45] ryah: pquerna: would you contend that contributors need to make a new agreement? i believe that comes from the lawyers
[03:45] rbranson: ah, politics
[03:45] indutny: yep
[03:45] rbranson: the thing that immediately follows popularity :D
[03:45] jesusabdullah: Joyent? Oracle?  I hope not :(
[03:45] indutny: ryah: so will I need to sign it again
[03:45] indutny: ?
[03:45] ryah: indutny: no, i don't believe so
[03:46] pquerna: ryah: i mean, strictly speaking since the CLA gives all rights to you, you can just perpetually give it to Joyent;  But generally CLAs are written for the license owners protection, ie Joyents.
[03:46] pquerna: so if joyent's lawyers don't care, meh :)
[03:47] pquerna: but for example, when a project joins the ASF, they make all new CLAs to the ASF so its clear new contributions are being made under that CLA
[03:47] aurynn: I'd like to work at Joyent. It'd be pretty cool.
[03:48] mbrochh has joined the channel
[03:48] pquerna: IANAL, i just hate lua.
[03:49] ryah: pquerna: i think they're okay with it. they'll just sue me if one of you starts injecting questionable content :)
[03:49] indutny: :-D
[03:50] ryah: (jk)
[03:50] ryah: i'll bring it up
[03:52] jashkenas: Lua?
[03:52] pquerna: i use lots of embeded lua for work.
[03:52] pquerna: yesterday i found a bug in its json parser.
[03:52] pquerna: :rage: :rage: :rage:
[03:52] rbranson: ouch
[03:52] rbranson: seriously though, json is simple enough...
[03:53] pquerna: \uAAAA were being parsed incorrectly
[03:53] rbranson: do you guys use LuaJIT?
[03:53] pquerna: so, if you had u followed by any 4 valid hex characters
[03:53] pquerna: it would try to convert that to a raw byte
[03:53] pquerna: even if there was no leading \u
[03:53] rbranson: mmm
[03:53] pquerna: for this specific project we do not use LuaJit, though I've used it on others.
[03:53] rbranson: sounds like a week-long bug hunt
[03:54] pquerna: not that long... but just like, thats part of a platform you shouldn't have bugs in
[03:54] deepthawtz has joined the channel
[03:54] rbranson: right, you immediately don't suspect it
[03:54] jesusabdullah: pquerna: What's your job?
[03:55] pquerna: job title? Chief Architect at Cloudkick... I'm not sure what my job is always.
[03:55] jesusabdullah: Hah
[03:55] pquerna: if node had been around 1.5 years ago, I could of avoided lua for this project :)
[03:56] pquerna: (well, actually, i guess node was around that long ago, just.. different)
[03:56] rbranson: kickin' clouds
[03:56] jesusabdullah: I haven't had a reason to learn lua yet
[03:56] jesusabdullah: Not sure if I ever will
[03:56] pquerna: I actually love Lua.
[03:56] rbranson: node was... new... 1.5 years ago :D
[03:56] pquerna: its hard to beat for an embeded languages.  The Embedding api is so nice to integrate with plain old C.
[03:57] rbranson: same problem as JS though, not much of a standard library
[03:57] pquerna: and LuaJit, even v1 was pretty damn fast.
[03:57] pquerna: well yeah, its not that bad though. the library part.
[03:57] jesusabdullah: hmm
[03:57] pquerna: well, it is.
[03:57] pquerna: but yeah.
[03:57] rbranson: right, makes implementation simpler
[03:57] pquerna: yes, and smaller
[03:57] admc has joined the channel
[03:57] rbranson: which is why both JS and Lua have fantastic runtimes :P
[03:57] pquerna: our agent runs in aobut 4000kb steady state
[03:57] jesusabdullah: What's it embedded into besides WoW?
[03:57] pquerna: Lots of games
[03:58] rbranson: it is the JavaScript of games
[03:58] jesusabdullah: heh
[03:58] pquerna: random example of where we also use it is in Reconnoiter
[03:58] pquerna: https://labs.omniti.com/labs/reconnoiter
[03:58] pquerna: it embeds Lua to write checks
[03:58] pquerna: some people use it as a config file
[03:59] pquerna: because its easy to get variables in / out
[03:59] pquerna: heard of a couple iphone games with it too
[03:59] pquerna: Lua's problems are largely that its very hard to find anyone with existing experience with it, and there is very little secondary tooling built up around it.
[04:00] pquerna: (ie, a debugger -- we have a hacky terrible one we wrote -- thats it)
[04:00] rbranson: ouch
[04:00] jesusabdullah: Hmm
[04:00] pquerna: Lua the VM gives you hooks tow rite a debuger, so its not terrible
[04:00] robotarmy has joined the channel
[04:00] pquerna: but their aint' a great one available as an open source thing
[04:01] rbranson: its amazing... you'd think the game companies would have funneled big $ into it
[04:01] jesusabdullah: I guess I'll put off learning Lua then :)
[04:01] pquerna: they generally invest in internal toolkits
[04:01] jesusabdullah: Kept it to themselves
[04:01] pquerna: lua itself is so small in C
[04:01] rbranson: they don't come off as terribly interested in open source
[04:01] pquerna: that its pretty easy to fork off and make some crazy modifications
[04:02] rbranson: ah
[04:02] pquerna: i still want to know what Google does with Lua.  They have been sponsoring LuaJit on and off, and hired up a slew of random Lua programmers a few years back :)
[04:03] rbranson: that's interesting, because, publically, they say they only use C++, Java, and Python
[04:03] pquerna: http://google-opensource.blogspot.com/2010/01/love-for-luajit.html
[04:03] rbranson: for anything production
[04:03] pquerna: We use Lua internally at Google, and are very happy to be sponsorin...
[04:03] pquerna: yeah, so i dunno :)
[04:03] jesusabdullah: Crazy-ass WoW addons, obviously.
[04:03] pquerna: lol
[04:03] pquerna: google toolbar for wow?
[04:04] rbranson: hmm, sounds like they're poaching them for Unladen Swallow / V8 work
[04:05] rbranson: hacking on a project like that seems like a programming utopia
[04:05] rbranson: one-man, tiny language, no committees or users
[04:05] rbranson: just a small base of rabid fans
[04:05] pquerna: is this Node or Lua :) ?
[04:05] rbranson: lua :)
[04:06] SvenDowideit_ has joined the channel
[04:06] jesusabdullah: What does reconnoiter do exactly? It confused me
[04:06] jesusabdullah: I'm pretty tired <_<
[04:06] technoweenie has joined the channel
[04:06] pquerna: its a monitoring system
[04:06] jesusabdullah: What does it monitor?
[04:06] pquerna: lets say you need to monitoring 50,000 servers
[04:07] pquerna: and each one has 100 metrics
[04:07] pquerna: and you do that once a minute
[04:07] jesusabdullah: hmm
[04:07] pquerna: thats 83,000 metrics collected per second.
[04:07] pquerna: now, unfrotunately, that doesn't scale very well into a single box, like in say Nagios
[04:08] jesusabdullah: Oh, okay
[04:08] pquerna: that, roughly speaking, is why reconnoiter exists -- to provide a scalable architecture for collecting and analyzing metrics about servers
[04:08] pquerna: (its also what some of cloudkick is based on)
[04:08] jesusabdullah: like, the same kinda things nagios would do?
[04:08] pquerna: kinda, but also some of what people use cacti or munin for
[04:09] rbranson: ugh, I hate all open source monitoring packags
[04:09] jesusabdullah: My background in multi-system administration/monitoring is nil
[04:09] jesusabdullah: :(
[04:09] SubStack: jesusabdullah: lies
[04:09] Guest4930 has joined the channel
[04:09] jesusabdullah: What?
[04:09] mikeal has joined the channel
[04:09] jesusabdullah: Okay, maybe like 3 boxes
[04:10] jesusabdullah: (mooom!)
[04:10] SubStack: yeah >:p
[04:10] SubStack: oh I mean what about your scientific model stuff
[04:10] jesusabdullah: Oh yeah well that ended in disaster
[04:10] jesusabdullah: XD
[04:10] pquerna: yes, but once you have such a large flow of data
[04:10] jesusabdullah: Sometimes, rolling your own is a BAD IDEA
[04:10] pquerna: you can start doing interesting things with stream anlaysis and detecting things...
[04:11] pquerna: complex event processing, etc, -> http://esper.codehaus.org/
[04:11] rbranson: so much text
[04:11] pquerna: heh
[04:11] rbranson: like the haproxy page
[04:12] pquerna: esper lets you write SQL for event streams. something like select average (foo) over 5 minutes > 400 trigger do_something();
[04:12] rbranson: nice
[04:12] rbranson: could totally have just said that
[04:12] pquerna: then you just flood it with events
[04:13] pquerna: its much more common in financial systems
[04:13] rbranson: sounds quite useful for monitoring :)
[04:17] jesusabdullah: Hmm
[04:17] jesusabdullah: Kinda cool
[04:18] DougReeder has joined the channel
[04:19] DougReeder: ACTION waves hello
[04:20] pquerna: hi
[04:21] jesusabdullah: ACTION gives DougReeder  a back rub
[04:21] DougReeder: ACTION smiles "What, is this LambdaMOO now?"
[04:22] smtlaissezfaire has joined the channel
[04:22] rwaldron_ has joined the channel
[04:22] vmamidi has joined the channel
[04:22] DougReeder: I do have a real question: when I have a loop, which makes an async call, in the callback, how can you know for what data the callback is being called?
[04:23] rwaldron_ has joined the channel
[04:23] robotarmy has joined the channel
[04:25] lakin has joined the channel
[04:25] iszak has joined the channel
[04:25] DougReeder: The following code doesn't work: 	for (f=0; f<files.length; ++f) {
[04:25] DougReeder: 		filepath[f] = path.join(dir, files[f]);
[04:25] DougReeder: 		fs.readFile(filepath[f], "utf-8", function (error, text) {
[04:25] DougReeder: 			var incipit;
[04:25] DougReeder: 			++f2;
[04:25] DougReeder: 			if (error) throw error;
[04:25] DougReeder: 			if (text.length > 30)
[04:25] DougReeder: 				incipit = text.slice(0, 30) + "...";
[04:25] DougReeder: 			else
[04:25] DougReeder: 				incipit = text;
[04:25] DougReeder: 			console.log(filepath[f2], text.length, incipit);
[04:25] DougReeder: 		});
[04:26] mikew3c_ has joined the channel
[04:26] MattDiPasquale has joined the channel
[04:26] DougReeder: In particular, since the callbacks get called in random order, filepath[f2] does not necessarily contain the path of the file, of which the text is in the "text" variable.
[04:27] rbranson: right
[04:27] rbranson: since when it gets called, filepath[f] is going to be the last iteration of the loop
[04:27] rbranson: it'll always be the same
[04:27] rbranson: that is a closure pitfall
[04:27] rbranson: you need to create a new function scope to fall fs.readFile in
[04:28] rbranson: and pass the filename as an argument
[04:28] DougReeder: This pattern works with HTML5 relational databases, because you're guaranteed the callbacks will be called in the same order.
[04:28] bradleymeck has joined the channel
[04:28] DougReeder: A new closure for each iteration? Isn't that expensive?
[04:28] rbranson: var f = function(path) { fs.readFile(path, ...) { ... } };
[04:28] rbranson: then do a loop over the filepaths
[04:28] rbranson: f(path);
[04:28] bpot has joined the channel
[04:29] Aria: Not really, no. Not expensive.
[04:29] DougReeder: Closures aren't ruinously expensive, but they're not free, either.
[04:29] rbranson: the problem is, your current code reads filepath[f], and at the time the closure is called, the loop is completed and the state of f = length-1
[04:29] Aria: (and it's not an order problem: It's a synchronization problem. In the reldb case, it's because each callback is called before the loop finishes)
[04:29] rbranson: in JS, scope is at the function level, not the block
[04:29] Aria: (Not because they're called in order.)
[04:30] DougReeder: [grins] Actually, my code reads filepath[f2], which contains the name of a file, just not necessarily the correct one.
[04:30] bradleymeck: dougreeder, function creation is expensive, closure acces is pretty cheap actually
[04:30] bradleymeck: access*
[04:31] rbranson: DougReeder: i wouldn't be too worried about the cost of building and calling a closure if you're doing disk I/O
[04:31] DougReeder: That is a good point.
[04:31] rbranson: you can probably build and destroy 1,000 closures in the time it takes to make 1 syscall by itself
[04:31] rbranson: let alone an I/O call
[04:31] rbranson: build and call, rather
[04:32] rbranson: make the code read right, that f2 shit is confusing
[04:32] Aria: And learn to gist.
[04:32] DougReeder: ACTION nods
[04:33] Gruni has joined the channel
[04:33] rbranson: clever, but confrusing :)
[04:33] PyroPeter has joined the channel
[04:33] rbranson: I/O in node.js is farmed out to a pool of worker threads, so the order is never going to be deterministic
[04:33] Aria: But yeah. Don't make any assumptions about what's expensive as far as language features. V8 will surprise you.
[04:34] HAITI has joined the channel
[04:34] HAITI has joined the channel
[04:34] bradleymeck: except assume "in" and "with" are slow
[04:34] DougReeder: Well, you can assume if it's difficult in C, it's expensive in V*. 
[04:35] Aria: Sure, if it's actually difficult, not just syntactically ugly.
[04:35] Aria: (like closures)
[04:35] DougReeder: As always, correctness first - performance comes later.
[04:37] bradleymeck: idk if closures are really that difficult since its more like a linked list of maps than anything, but performance wise it is a tough issue
[04:37] Aria: Sure. The sort of problem we've been solving in compilers for ages.
[04:38] ShiZWeaK: ryah: Are the slides from your latest jsconf talk available somewhere?
[04:40] SubStack has joined the channel
[04:40] bradleymeck: aria, yes solved in static settings, but at runtime with jit they can be tough
[04:41] rbranson: PIC to the rescue
[04:42] ceej has joined the channel
[04:44] sechrist has joined the channel
[04:45] Gruni has joined the channel
[04:47] ryah: ShiZWeaK: http://nodejs.org/jsconf-eu-2010.pdf 
[04:48] ctp_ has joined the channel
[04:48] langworthy has joined the channel
[04:49] technowe_ has joined the channel
[04:52] bradleymeck: ryah, very exciting on node being sponsored now and you being able to get some more people on the team
[04:53] rbranson: what are you talking about? node.js will never go anywhere! it's a bunch of hype! rubble rubble rubble!
[04:55] indutny: how can I close fd for httpClient ?
[04:55] bruse: i'm still wondering why the copyright assignment thing is necessary
[04:55] indutny: client.destroy() ?
[04:56] rbranson: bruse: marketing
[04:56] bartt has joined the channel
[04:57] Aria: bruse: Because then you don't end up with problems down the road where you have to contact 1000s of people and their estates if something needs to change license-wise.
[04:58] ShiZWeaK: ryah: ty
[04:58] galaxywatcher has joined the channel
[04:58] rbranson: they should have to find out who my aunt is and ask her if she thinks these license changes are applicable, she'll know!
[04:58] rbranson: right after she finishes her macaronni casserole for your nice lawyer friends in suits
[04:59] rcy has joined the channel
[05:01] Guest64306 has joined the channel
[05:02] mikeal has joined the channel
[05:05] bruse: Aria: but many people have reservations about contributing their code if the license could suddenly change in the future
[05:06] Aria: Sure. Or if it can't. Or if it's GPL. Or if it's MIT.
[05:06] galaxywatcher_ has joined the channel
[05:09] AAA_awright_ has joined the channel
[05:11] kawaz_h has joined the channel
[05:11] Me1000 has joined the channel
[05:13] DougReeder_ has joined the channel
[05:13] dnolen has joined the channel
[05:13] adelcamb1e has joined the channel
[05:15] sugardav1 has joined the channel
[05:15] ryah_ has joined the channel
[05:15] Nomon_ has joined the channel
[05:15] benoitc_ has joined the channel
[05:15] brianmario_ has joined the channel
[05:15] Naked has joined the channel
[05:15] wao__ has joined the channel
[05:15] dberlinger_away_ has joined the channel
[05:15] dispalt_ has joined the channel
[05:15] sadiq_ has joined the channel
[05:15] Blackguard1 has joined the channel
[05:16] shachaf_ has joined the channel
[05:16] jimt has joined the channel
[05:16] ryan[LOL] has joined the channel
[05:16] mjr__ has joined the channel
[05:16] sechrist_ has joined the channel
[05:16] zorzar_ has joined the channel
[05:16] akweon has joined the channel
[05:17] jdalton has joined the channel
[05:17] marienz has joined the channel
[05:17] mraleph has joined the channel
[05:17] richcollins has joined the channel
[05:17] cnu has joined the channel
[05:18] Akufen has joined the channel
[05:18] Akufen has joined the channel
[05:18] path[l] has joined the channel
[05:19] mmso has joined the channel
[05:20] superjudge has joined the channel
[05:21] sivy has joined the channel
[05:21] sh1mmer has joined the channel
[05:21] siculars_ has joined the channel
[05:24] bpot has joined the channel
[05:24] siculars has joined the channel
[05:26] jameshome: so hey, is anyone making a form validation library that works on the client and server side?
[05:27] iszak: what so it churns out JS to validate client side?
[05:28] iszak: Because if that's the case - I would want to use a library like jQuery or Dojo.
[05:28] reid has joined the channel
[05:28] indutny: hey hey, everyon
[05:28] indutny: everyone*
[05:28] indutny: checkout new npm module
[05:28] indutny: node.uptime
[05:28] indutny: it's stupid simple, and quite usefull
[05:29] reid: Does anyone know how to get npm to rebuild your ~/.node_libraries?
[05:29] indutny: as executable file or as library
[05:29] iszak: npm?
[05:29] indutny: http://github.com/donnerjack13589/node.uptime
[05:29] reid: Yes. It made some symlinks there that need fixin'
[05:29] jameshome: it seems like for frameworks like express it would be handy to have a library that has a series of common form validation actions that can be used on the server side to validate and sanitize before db writes, and on the client side to provide messaging to the user about what's broke
[05:29] johngbrooks has joined the channel
[05:29] reid: Likely bugs from older versions of npm...
[05:30] jameshome: thinks like restricting usernames to alphanumerics and ensuring email addresses are email addresses.
[05:30] jameshome: things
[05:30] iszak: tbh there needs to be a node.js library repo.
[05:31] iszak: or just one super defacto framework :D
[05:31] rbranson: the oppression of choice
[05:32] iszak: people don't know what is best and what they want.
[05:32] iszak: It needs to be forced upon them, perfect example: apple.
[05:32] iszak: WHATS THAT? YOU WANT TO CHANGE YOUR BG IN iOS3?! NO!!!
[05:32] rbranson: hopefully your leader is benevolent :)
[05:32] iszak: and yet iOS3 was very popular.
[05:32] stalled has joined the channel
[05:32] AAA_awright_ has joined the channel
[05:32] iszak: rbranson, when I say some super defacto framework I meant decoupled also.
[05:33] iszak: Kind of like Zend Framework where it's really use-at-will, if you don't want to use x, y, z, then you don't have to.
[05:33] reid: Does anyone use /usr/local over ~/.node_libraries?
[05:33] rbranson: that's more of a library than a framework the
[05:33] rbranson: n
[05:33] iszak: yet it's called a Zend Framework :D
[05:33] jameshome: I use /usr/local
[05:34] iszak: + it does provide functionality with a recommended way to organise the file system.
[05:34] iszak: That being the CLI / Zend_Application.
[05:34] rbranson: i suppose... very loose framework then... when I think framework, I think Spring, Rails, etc
[05:34] reid: Did you do anything special to switch? My ndoe is complaining loudly when npm started using /usr/local.
[05:34] reid: My node is, too. :)
[05:35] rbranson: framework in the twisted PHP universe :)
[05:35] iszak: rbranson, yeah understandable.
[05:35] jameshome: do you have a ~/npmrc?
[05:35] reid: yeah.
[05:35] jameshome: I have this in mine:
[05:35] jameshome: root = /usr/local/npm
[05:35] jameshome: manroot = /usr/local/share/man
[05:35] jameshome: binroot = /usr/local/bin
[05:36] reid: ah, same here. exporting NODE_PATH to /usr/local makes node happy. i seem to remember /usr/local used to be in the require.paths by default...
[05:37] mr_daniel has joined the channel
[05:38] Gruni has joined the channel
[05:42] mikeal has joined the channel
[05:42] jameshome: is there an Express 1.0b5 with jqtpl support coming to npm soon?
[05:43] jameshome: I can haz?
[05:43] indutny: don't use jqtpl!
[05:43] indutny: there're only one template system
[05:43] indutny: nTPL
[05:43] indutny: http://github.com/donnerjack13589/nTPL
[05:44] indutny: it's fastest, extendable
[05:44] indutny: and can be used with express.js
[05:44] indutny: also it supports python like partials
[05:46] jameshome: this looks too powerful 
[05:47] jameshome: I like my templating languages stupid and pretty.
[05:47] indutny: eh...
[05:47] indutny: you are not first who saying this
[05:47] jameshome: glad to know about it tho!
[05:48] bentruyman has joined the channel
[05:48] mbrochh has joined the channel
[05:49] indutny: thanks
[05:49] indutny: :)
[05:51] marienz has joined the channel
[05:55] ajsie: is there something like Gem Bundler for Node.js?
[05:55] indutny: npm ?
[05:55] ajsie: npm is like RubyGems
[05:55] indutny: ok
[05:55] jgautier has joined the channel
[05:55] reid: http://npmjs.org/
[05:55] ajsie: i want to specify a npm package in a file...then it will install it if its not installed
[05:56] jgautier: anyone here used the ajax.org library?
[05:56] ajsie: because now i have to install every npm packages an app is using 
[05:56] ajsie: it doesnt take care of that like Bundler
[05:56] reid: npm bundle?
[05:56] reid: man npm-bundle
[05:56] ajsie: ok
[05:56] ajsie: ill check on that
[05:56] reid: :) cool
[06:01] hornbeck has joined the channel
[06:02] italic has left the channel
[06:04] benburkert has joined the channel
[06:06] elijah-mbp has joined the channel
[06:06] bartt has joined the channel
[06:08] DougReeder has joined the channel
[06:08] MikhX has joined the channel
[06:09] jpld has joined the channel
[06:24] davidascher has joined the channel
[06:26] marienz has joined the channel
[06:29] DougReeder has joined the channel
[06:30] Gruni has joined the channel
[06:33] derren13 has joined the channel
[06:41] mikew3c has joined the channel
[06:43] dioms has joined the channel
[06:44] bmizerany has joined the channel
[06:46] derferman has joined the channel
[06:50] fangel has joined the channel
[06:50] intacto has joined the channel
[06:52] Anti-X has joined the channel
[06:54] faust45 has joined the channel
[06:59] Guest63791 has joined the channel
[07:00] marienz has joined the channel
[07:01] mraleph1 has joined the channel
[07:07] zentoooo has joined the channel
[07:09] vmamidi has joined the channel
[07:11] Me1000 has joined the channel
[07:15] langworthy has joined the channel
[07:18] sriley has joined the channel
[07:22] saikat has joined the channel
[07:23] Gruni has joined the channel
[07:28] Twelve-60 has joined the channel
[07:29] adhipg has joined the channel
[07:31] ph^ has joined the channel
[07:32] mytrile has joined the channel
[07:33] mbrochh_ has joined the channel
[07:34] mlangenberg: Does anybody know why node-static doesn't work with absolute paths?
[07:34] technoweenie: mlangenberg: security reasons, perhaps?
[07:34] mlangenberg: In examples I only see it serving up directory '.', because when you try /path/to/dir, it crashes.
[07:34] marienz has joined the channel
[07:35] tilgovi_ has joined the channel
[07:35] SamuraiJack has joined the channel
[07:36] mlangenberg: technoweenie: the problem is, when you call your node script from a different directory, using '.' for node-static will serve up the current working directory.
[07:37] technoweenie: yea that blows too
[07:37] mraleph1 has joined the channel
[07:38] technoweenie: do people accidentally serve up their node apps too w/ node-static
[07:38] mlangenberg: I wanted to, but it obviously failed on my staging server.
[07:39] mlangenberg: I use node as a chat backend for a pretty large web portal. I wanted to use node-static to server up a small statistics page.
[07:40] mjr__: mlangenberg: you could use a simple connect-based server to do that.
[07:40] stride: I use the staticProvider in connect for that as well, works great
[07:41] galaxywatcher has joined the channel
[07:41] mjr__: mlangenberg: https://github.com/senchalabs/connect/blob/master/examples/static/server.js
[07:42] mlangenberg: Thanks!
[07:42] mjr__: That's a 4 line server you can use, just set something else for __dirname
[07:42] mjr__: and of course you need to do: npm install connect
[07:42] mlangenberg: mjr__: No I actually need it to be __dirname.
[07:43] mjr__: oh, well even better
[07:43] dioms has joined the channel
[07:48] micheil: hmm, anyone know if node's http.Client or net.Stream abides by DNS TTL?
[07:48] mjr__: Does c-ares cache?
[07:48] mjr_: I didn't think it did.
[07:49] Anti-X has joined the channel
[07:49] benburkert has joined the channel
[07:52] sudoer has joined the channel
[07:54] mbrochh has joined the channel
[07:56] intacto has joined the channel
[08:00] altamic has joined the channel
[08:08] nsolsen has joined the channel
[08:15] Gruni has joined the channel
[08:27] simme has joined the channel
[08:28] FLYBYME has joined the channel
[08:30] saschagehlich has joined the channel
[08:32] adambeynon has joined the channel
[08:32] gregerolsson has joined the channel
[08:33] simme has joined the channel
[08:37] virtuo has joined the channel
[08:37] TomY has joined the channel
[08:39] dquestio1s has joined the channel
[08:42] jigz has joined the channel
[08:44] Druid_ has joined the channel
[08:46] derferman_ has joined the channel
[08:46] quag has joined the channel
[08:48] tisba has joined the channel
[08:49] hdon has joined the channel
[08:52] mikeal has joined the channel
[08:56] mif86 has joined the channel
[08:56] shakaa has joined the channel
[08:57] shakaa has left the channel
[09:04] derren13 has joined the channel
[09:06] fbits has joined the channel
[09:08] Gruni has joined the channel
[09:08] tisba has joined the channel
[09:15] pquerna: new game, disprove every statement of Mark Mayo?
[09:17] nwl` has joined the channel
[09:19] Utkarsh has joined the channel
[09:19] sixtus42 has joined the channel
[09:19] jankoprowski has joined the channel
[09:19] Rixius has joined the channel
[09:20] rasztasd has joined the channel
[09:20] markwubben has joined the channel
[09:21] rasztasd has left the channel
[09:21] robinduckett has joined the channel
[09:21] robinduckett: Morning all
[09:22] robinduckett: I made a sweet chat thing using node and socket.io last night, using the ragefaces from those rage comics
[09:22] robinduckett: http://ragechat.com/ -- please destroy it expertly :D
[09:24] omarkj has joined the channel
[09:24] aubergine has joined the channel
[09:24] sriley has joined the channel
[09:25] faust45 has joined the channel
[09:26] ph^ has joined the channel
[09:28] robinduckett: Sometimes when users connect with a browser which supports multiple transport layers to my socket.io enabled app, they get broadcasts twice, is there any way to fix this? it's pretty random :/
[09:28] robinduckett: hmm, I should really implement a kick system
[09:29] aubergine_ has joined the channel
[09:30] teemow has joined the channel
[09:37] mape: robinduckett: Does it work? :)
[09:37] mape: Some kinda throttling might be good yeah
[09:38] robinduckett: yeah
[09:38] robinduckett: lol
[09:38] mape: I'll stop
[09:38] mape: But you get the point ;)
[09:38] robinduckett: yeah excess flood control is all i need
[09:38] robinduckett: that and user registration for saving nicknames
[09:38] robinduckett: and a better way to do faces for nicknames that doesn't involve injecting HTML
[09:38] cyraxx: also, there are two Guest75s in there now
[09:38] rnewson has joined the channel
[09:38] rnewson has joined the channel
[09:38] necro has joined the channel
[09:38] mape: Oh you can inject html?
[09:38] robinduckett: cyraxx: refresh browser
[09:38] robinduckett: mape: only in the nickname field
[09:39] keeto_ has joined the channel
[09:39] robinduckett: and only up to 19 characters
[09:39] mape: robinduckett: Well that is awful :p
[09:40] robinduckett: mape: I left it like that because I fancyed having faces for names :P
[09:41] mikedeboer has joined the channel
[09:41] robinduckett: thanks for testing mape :3
[09:41] mape: np
[09:41] mape: Actually just created a chat 2days ago :)
[09:41] matjas has joined the channel
[09:42] mape: hooked to facebook/twitter so guess not so much rage
[09:42] robinduckett: mape: does it have rage faces? [](/troll)
[09:42] StanAngeloff has joined the channel
[09:42] mape: nah only profile image from both services
[09:43] robinduckett: that's cool
[09:43] robinduckett: for any particular reason?
[09:43] robinduckett: i'd love to build node apps for moneh
[09:43] Rixius has left the channel
[09:45] robinduckett: mape: haha when you flooded me you booted me off the server
[09:48] mbrochh has joined the channel
[09:48] mlangenberg: I used Faye to implement a chat backend.
[09:48] robinduckett: Faye?
[09:49] mlangenberg: Doesn't offer Flash support yet, not sure if it is needed.
[09:49] mlangenberg: http://faye.jcoglan.com/
[09:49] robinduckett: mlangenberg: with sockets.io it handles all that for you
[09:49] mlangenberg: I know
[09:49] robinduckett: I rarely see anyone using flashsockets
[09:49] robinduckett: unless they're on IE
[09:49] mlangenberg: 85% of users use IE 
[09:50] robinduckett: I realise.
[09:50] robinduckett: Most of the people logging on have been on safari / firefox / chrome
[09:50] robinduckett: think i saw one opera user
[09:50] case__: mlangenberg, 85% ? it's not 2000 anymore :)
[09:51] case__: http://www.techjournalsouth.com/2010/10/internet-explorer-market-share-dips-under-50-percent/
[09:51] mlangenberg: depends heavily on the user group.
[09:51] case__: true
[09:52] mlangenberg: The site I am talking about is an employee portal for dutch nurses in the homecare.
[09:53] aubergine has joined the channel
[09:53] robinduckett: i like dutch people
[09:53] robinduckett: they are kind and give you toasties.
[09:53] case__: ha ok. makes sense
[09:53] mlangenberg: 83% uses IE, pulling this straight from Google Analytics.
[09:53] robinduckett: mlangenberg: in the car industry IE support is a requirement
[09:54] robinduckett: most dealer customer management systems only work on IE6 too
[09:54] mlangenberg: auch
[09:54] mlangenberg: I'm lucky enought that only 4% is IE6.
[09:54] mlangenberg: By the way, will IE9 ship with WebSocket support?
[09:54] robinduckett: mlangenberg: I find that the only trouble I have with IE6 is getting the javascript working properly
[09:55] robinduckett: I come from an IE6 PSD slicing theme background hah.
[09:57] robinduckett: who made the design for http://socket.io?
[09:59] caolanm has joined the channel
[10:00] aho: <mlangenberg> 83% uses IE, pulling this straight from Google Analytics. <- wow. your audience sucks :D
[10:01] case__: :)
[10:01] tekky has joined the channel
[10:02] robinduckett: I got
[10:02] robinduckett: 73% IE users
[10:02] robinduckett: 11% firefox, 7% safari, 5% chrome
[10:03] case__: you guys are depressing :(
[10:03] robinduckett: :( sorry, real world scenarios are depressing.
[10:04] xla has joined the channel
[10:04] aho: in germany ie6 is currently at 1.23% and ie7 is at 5.86% (firefox 3.6 is at 52.02%) :)
[10:06] aho: ie8 had its peak 2 months ago at 17.36% and is already dropping... currently it's at 14.54%
[10:07] fangel: 57% and 38% for IE (combined) on the two largest sites that my workplace has.. but they are minded at a technical audience.. country average (denmark) is IE 6: 2%, IE 7: 27%, IE 8: 42% (so a total of 71% for IE)
[10:08] aho: 71% ie doesn't sound like a technical audience to me
[10:08] case__: aho, +1
[10:09] fangel: aho: 71% is country average.. as said, it's 38% on the most technically minded website I have access to stats for :)
[10:10] jasondavies: total IE usage on my site is 5.45% :D
[10:10] robinduckett: mAritz: check out my ffffuuuuu chat: http://ragechat.com
[10:10] mAritz: what? why me? :D
[10:10] robinduckett: because you're on reddit and you'll recognise the faces :D
[10:10] mAritz: haha, i figured after asking ^^
[10:11] robinduckett: you're the one doing coderaid right?
[10:11] LordMetroid has joined the channel
[10:12] LordMetroid: this channel has grown significantly since I was last here
[10:13] aho: there has been a 400+ peak in the past :>
[10:13] hellp has joined the channel
[10:14] mAritz: robinduckett: as stated in the ragechat, yeah i am.
[10:14] bnoordhuis has joined the channel
[10:14] robinduckett: :D
[10:15] robinduckett: okay i gotta go back to work
[10:15] robinduckett: feel free to break it
[10:15] robinduckett: if you do, pm me :P
[10:15] mAritz: how? ^^
[10:15] robinduckett: however you like
[10:15] robinduckett: the nickname field is not entirely xss protected
[10:15] robinduckett: it is to a degree
[10:15] mAritz: urgh... i'm horrible at security as it is. black hat security? no way :(
[10:15] robinduckett: but not entirely
[10:16] mAritz: who's BEP?
[10:16] robinduckett: british english police
[10:16] mAritz: haha :D
[10:16] robinduckett: he's one of the mods of reddit.com/r/fffffffuuuuuuuuuuuu
[10:17] robinduckett: I'm not entirely sure if he's british, english nor a policeman.
[10:17] LordMetroid: I am really interested in using node.js for a HTTP content-serving web-application platform but programming such a framework seems kind of a lot of work
[10:17] mAritz: i'm going to say he is an indian english drunk.
[10:17] robinduckett: hah
[10:17] mAritz: LordMetroid: use one of the existing frameworks?!
[10:17] robinduckett: LordMetroid: connect, express
[10:18] mAritz: robinduckett: do you have experience with socket.io?
[10:18] robinduckett: LordMetroid: https://github.com/ry/node/wiki/modules check the Web frameworks section
[10:18] robinduckett: mAritz: yes
[10:18] mAritz: oh wait... ragechat uses it... (FUUU)
[10:19] robinduckett: haha
[10:19] mAritz: what's the best current way to integrate connect sessions with socket.io?
[10:19] robinduckett: well connect returns an http server
[10:19] robinduckett: hang on i'll pastebin
[10:20] mAritz: i listened to the jsconf.eu talk of rauchg and he said he's working on a good solution, but that it's not very good to plug socket.io into the connect server. (or some such)
[10:20] robinduckett: mAritz:  http://pastebin.ca/1987131
[10:20] robinduckett: I'm using connect and socket.io
[10:20] robinduckett: just fine
[10:20] mape: mAritz: I just saved the redis store to a var, passed that to the server and used that
[10:20] mAritz: okay, but you're not using session?!
[10:21] robinduckett: mAritz: no, I will do when I implement user registration / auth
[10:21] mAritz: mape: so you do it manually
[10:21] mape: mAritz: jup
[10:21] mAritz: hm, okay
[10:21] mape: redisStore.get('userAuthHash) and use that
[10:21] mape: *'
[10:21] robinduckett: wasn't someone building a socket.io connect middleware
[10:22] mAritz: robinduckett: that's what rauchg said wouldn't be a good idea.
[10:22] mape: and in the callback make magic happen
[10:22] mAritz: magic, got it.
[10:22] robinduckett: haha
[10:22] robinduckett: mAritz: why isn't that a good idea?
[10:22] mape: mAritz: so so code that works in the end == magic
[10:22] mAritz: he said because connect operates on a request-response basis and wouldn't handle a socket.io middleware in a good way.
[10:23] robinduckett: mAritz: I suppose, but it seems to work really well the way I'm doing it, which is just to instantiate the socket.io listener after connects listening
[10:23] mAritz: too keep it redditesque: 1) use redisstore var 2) ???? 3) profit
[10:23] mape: well no profit, but fun project
[10:23] mape: seems good enough
[10:24] robinduckett: hah
[10:24] robinduckett: I posted ragechat in three places on reddit
[10:24] mAritz: or fun profitable project. (hah, as if that's going to happen for me :/ )
[10:24] robinduckett: most visits from the selfpost in /r/f7u12
[10:24] mAritz: r/linux, r/science and r/pics? :P
[10:24] robinduckett: then 14 visits from the lounge
[10:24] robinduckett: and then the rest seemed to be random
[10:24] robinduckett: oh one from /r/somethingimade
[10:24] robinduckett: i posted it in /r/somethingimade, /r/f7u12 and /r/lounge
[10:25] robinduckett: as I'm a gold member, which is a bit of a rip off but whatevs.
[10:25] mAritz: :D
[10:25] mAritz: for the glory of redd... HYPNOTOAD
[10:25] mAritz: (oh god, i'm becoming the punloving redditor i despise :( )
[10:25] robinduckett: ALL GLORY TO THE HYPNOTOAD
[10:25] robinduckett: yeah
[10:26] robinduckett: i love it though
[10:26] mAritz: whenever i see a pun thread in a serious submission i go ahead and just downvote every reply that even looks like a pun :D
[10:26] indutny: you man should all love russian hypnotoad
[10:26] indutny: http://www.youtube.com/watch?v=R926UJw7Kac&feature=player_embedded
[10:26] indutny: :D
[10:26] robinduckett: mAritz: it won't count the downboats if they're less than two seconds apart
[10:26] aubergine has joined the channel
[10:26] mAritz: aw, damnit
[10:27] davidc_: Ok so question, what should I do if I want to add a new module to the node.js module page?
[10:27] davidc_: https://github.com/davidcoallier/node-simplewhois <-
[10:27] robinduckett: davidc_: modify it
[10:27] indutny: you'll be executed
[10:27] mAritz: good to know. i'll be happy to spend 10 minutes downvoting these bastards :D
[10:27] robinduckett: it's a wiki
[10:27] davidc_: robinduckett, I mean do I have to comply to some standards or anything?
[10:27] davidc_: I get the wiki part :P
[10:27] robinduckett: davidc_: it has to look the same as the others?
[10:27] indutny: no
[10:27] davidc_: Fair enough
[10:27] mAritz: indutny: wtf is that? :D
[10:27] robinduckett: you are NOT allowed to make it bold, underlined, strikethrough with animated stars around it, okay!?
[10:28] robinduckett: actually does gfm allow strikethrough yet?
[10:28] indutny: and unicrons
[10:28] indutny: unicorns*
[10:28] robinduckett: NO UNICRONS OR UNICORNS
[10:28] davidc_: robinduckett, hehe :) No need, I was just wondering in terms of package-specific requirements.
[10:28] indutny: use npm
[10:28] indutny: create package.json file
[10:28] indutny: follow the instruction: http://github.com/isaacs/npm
[10:28] robinduckett: you don't have to
[10:28] indutny: robinduckett: he have to
[10:29] robinduckett: yeah
[10:29] robinduckett: if you're name is david
[10:29] davidc_: Indeed
[10:29] robinduckett: you have to comply to npm
[10:29] mAritz: indutny: WTF? why was there a german advertisement soundbite at the end? :D
[10:29] davidc_: :O
[10:29] robinduckett: *yor
[10:29] davidc_: I've created the package.json alread
[10:29] robinduckett: qweasdfasd
[10:29] robinduckett: your*
[10:29] robinduckett: lol
[10:29] indutny: mAritz: don't mind
[10:29] robinduckett: davidc_: you don't have to. just add it. as long as it exports something it's fine
[10:29] indutny: mAritz: just doing what hypnotoad says
[10:29] robinduckett: and can be considered "a module"
[10:30] indutny: davidc_: also add module to npm package list
[10:30] indutny: npm link .
[10:30] indutny: npm install
[10:30] davidc_: Ok
[10:30] indutny: npm publish
[10:30] robinduckett: indutny: that's a lot of hassle
[10:30] davidc_: robinduckett, if it makes the quality of release better and easier for the future, I'd rather go through a bit of hassle right now :)
[10:31] robinduckett: davidc_: just follow the instructions at the top of the module wiki page
[10:31] robinduckett: When you add a framework to this page, have a look at how others have done so, it should be a single item, with a link to the project’s source code, and a short description (one line after formatting has been applied).
[10:31] robinduckett: If you see a module without a description, feel free to edit the page and add it in, any contributions are appreciated.
[10:31] robinduckett: When you edit this list, also add your module to library-compatibility so that users will know which versions of Node it was tested with.
[10:31] mAritz: robinduckett: in your pastebin: does the iohandler then inject itself before connect on the http instance and only passes on to connect if the connection is not a websocket connection?
[10:32] robinduckett: mAritz: the iohandler exports the init function which takes the socket object and just adds a load of event listeners to it
[10:32] robinduckett: crude but it works
[10:32] robinduckett: the connect server listens first
[10:32] davidc_: Yeah that part is quite simple, I was asking for some "inside" tips or whatever :) I'll just do it now so
[10:33] mAritz: hm... on another note: does anyone here know why githubs asset2 server is down and why refreshing the page won't give me another one? doesn't load half the css for me -.-
[10:33] robinduckett: mAritz: not a clue, but now that I know I'll post the source code to ragechat when it isn't being finicky :P
[10:34] robinduckett: bbiab
[10:36] mAritz: is cloud9 usable yet?
[10:36] indutny: i don't think so
[10:36] indutny: but merely yes
[10:37] mAritz: :(
[10:37] mAritz: well, can't rush good things
[10:39] indutny: it's very slow
[10:39] indutny: slower than google wave
[10:39] herbySk has joined the channel
[10:43] themiddleman has joined the channel
[10:43] zentoooo has joined the channel
[10:46] path[l] has joined the channel
[10:49] abstractj has joined the channel
[10:50] agnat has joined the channel
[10:53] aubergine has joined the channel
[10:55] indutny: http://pit.dirty.ru/dirty/1/2010/11/09/29110-184003-1f0cff49f3bf30a9ac7839666b75845a.jpg
[10:55] indutny: states of dementia
[10:55] jetienne has joined the channel
[10:57] robinduckett: right i'm offski
[10:57] robinduckett: catch you guys later
[10:57] indutny: bye
[10:58] mytrile has joined the channel
[11:01] TomY has joined the channel
[11:01] indutny: i'll be away for 5-6 hours
[11:01] indutny: bye!
[11:02] ph^ has joined the channel
[11:02] ooooPsss has joined the channel
[11:04] altamic_ has joined the channel
[11:06] rikarends has joined the channel
[11:06] Zzzeph: mAritz: cloud9 is quite usable, what problems did you have?
[11:06] rikarends: I can throw your problems straight into the cloud9 devteam so lets hear it :)
[11:07] mAritz: last time i checked? all kinds. scrolling is painful (1 line per wheelspinclick), drawing bugs of the text, shortcut bugs, file opening problems
[11:07] mAritz: that was like 3 weeks ago, i think.
[11:07] rikarends: mAritz: we've been doing 1 release a week so stuff has been getting fixed really really fast
[11:08] rikarends: mAritz: there are still a few issues but for general dev work i'm using it already happily for 2 weeks or so
[11:08] rikarends: mAritz: dont give up yet :)
[11:09] mAritz: nah, not giving up. just waiting for a stable 1.0 kind of release.
[11:09] springify has joined the channel
[11:09] christophsturm has joined the channel
[11:09] rikarends: mAritz: understandable. we are on it :)
[11:09] mAritz: :)
[11:09] mAritz: you're doing great work!
[11:09] christophsturm: is there a recommended testing framework for node apps?
[11:09] rikarends: magnolia looks nice
[11:10] rikarends: no it was some other flower thing
[11:10] tisba has joined the channel
[11:10] christophsturm: rikarends: sounds like you didn't really use it :)
[11:11] rikarends: rikarends: we are starting with it, it looked the nicest of any sofar
[11:11] caolanm: christophsturm: what sort of testing?
[11:11] rikarends: rikarends: http://pivotal.github.com/jasmine/
[11:12] InsDel has joined the channel
[11:12] christophsturm: caolanm: I need something for unit testing, but in the longer run i also need something for integration tests
[11:12] mAritz: listen to caolanm, he knows about node testing :D
[11:12] davidc_: behavioUr
[11:12] davidc_: U
[11:12] springify has joined the channel
[11:12] caolanm: christophsturm: I'd recommend https://github.com/caolan/nodeunit   ...but I'm biased ;)
[11:13] bvleur has joined the channel
[11:13] christophsturm: caolanm: nodeunit looks nice!
[11:14] christophsturm: i want something simple, and prefer assertions to bdd syntax
[11:14] caolanm: then yes, I'd definitely recommend nodeunit
[11:14] davidc_: Yeah I prefer nodeunit too
[11:14] christophsturm: caolanm: anything else i should check out? 
[11:14] caolanm: especially if you're fairly new to node, since it helps you avoid lots of unusual testing pitfalls
[11:15] zorzar has joined the channel
[11:15] caolanm: caolanm: there is also expresso, but in my opinion it is more suited to integration tests, since you can't use stubs or mocks
[11:17] christophsturm: is there also something for integration tests via http? or do i just use nodeunit with a http client lib?
[11:17] path[l] has joined the channel
[11:17] sideshowcoder has joined the channel
[11:17] caolanm: christophsturm: kadir recently committed a http testing tool to nodeunit, but you can just use a http client
[11:18] christophsturm: ok great thanks
[11:18] christophsturm: whats a good testing suite that uses nodeunit? just look at the nodeunit tests?
[11:20] caolanm: yeah, the nodeunit tests use nodeunit ;) ...you might want to look at one of my other small modules like dispatch for simpler examples though
[11:20] caolanm: https://github.com/caolan/dispatch/blob/master/test/test-dispatch.js
[11:20] mikedeboer: hi all!
[11:20] caolanm: also be aware that test-base.js in nodeunit does some bootstrapping so it might not look like normal nodeunit tests
[11:20] mikedeboer: what's the 'best' redis client for node atm?
[11:21] davidc_: node-redis
[11:21] mikedeboer: on github?
[11:21] davidc_: Sorry https://github.com/bnoguchi/redis-node <-- that's the one i use and I don't have any complaint
[11:22] davidc_: I've heard this one is better though: https://github.com/fictorial/redis-node-client
[11:22] davidc_: and according to the number of viewers, it is :)
[11:22] rikarends: mikedeboer: i do not want the nesting-per-redis-command-syntax its really not handy
[11:22] rikarends: mikedeboer: redis-node seems to do that
[11:22] rikarends: mikedeboer: maybe it has a generic way too
[11:23] mikedeboer: rikarends: redis-node-client does that as well...
[11:23] mikedeboer: davidc_: thanks! cheking them both
[11:23] rikarends: mikedeboer: yeah i dont get that… it saved us about 50% of code doing it the array-way
[11:23] rikarends: mikedeboer: let alone pipelining speed
[11:23] rikarends: mikedeboer: every callback is an async cycle. 
[11:24] davidc_: rikarends, which redis moduel are you?
[11:24] Zzzeph: hey mikedeboer :)
[11:24] rikarends: davidc: we didnt, we just layered it on top of the generic API for the prototype
[11:24] davidc_: kk
[11:24] rikarends: davidc: but that was months ago, and i wondered if someone had fixed it yet
[11:25] mikedeboer: hey Zzzeph !
[11:25] rikarends: davidc: our api is generally like writing a stream of redis commands and only getting a return call when they are all done
[11:25] rikarends: davidc: redis has a very low per-call granularity so you often need to do 2 or 3
[11:26] rikarends: davidc: to make a 3 level deep christmastree for just that operation is really annoying
[11:26] mikedeboer: rikarends: check the redis-node support for transactions!
[11:27] mikedeboer: rikarends: that's looking rather nice and close to what you mean
[11:27] rikarends: mike: its still 3 times more code
[11:27] davidc_: rikarends, indeed
[11:27] rikarends: davidc: our api looked like this: redis(['INCRBY',….],['HGET',…], function(err,results){
[11:28] rikarends: we would also build command buffers for multiqueries
[11:28] rikarends: where you need to fetch say something related for 10 items
[11:28] rikarends: the redis people are  adamant about not extending redis with fancier commands but going the command pipelining method
[11:28] rikarends: since that is practically as fast as making fancier commansd
[11:28] rikarends: and allows for more interleaving
[11:29] christophsturm: is there an easy way to package my node apps dependencies together with my node app? is there a npm command for that?
[11:29] rikarends: maybe we can add this to redis-node then
[11:32] davidc_: rikarends, definitely should :)
[11:33] fbits_ has joined the channel
[11:34] fbits_ has joined the channel
[11:38] christophsturm: what is recommended for multithreading? multi-node? or something else?
[11:40] aliem has joined the channel
[11:42] slaskis has joined the channel
[11:42] rikarends: erlang!
[11:42] davidc_: :)
[11:42] rikarends: multithreading will probably remain one of those awkwardly silent moments for nodejs :)
[11:43] rikarends: maybe V8 will add some cool fundamental features to lower the overhead there
[11:44] davidc_: I'm very happy with erlang so I won't really care if node doesn't have proper multithreading anyways
[11:44] rikarends: or there will appear a very clean async RPC over multi node processes
[11:45] christophsturm: i just need multiple workers that have no shared state
[11:45] mraleph: well v8 will allow more than one v8 instance per process with isolates, but each VM will remain single threaded as now
[11:45] rikarends: mraleph: right so thats more the code-isolation/sandboxing feature than threading
[11:46] rikarends: well if processes are lightweight then doing that is no different than threads so. All we'd need then is a very lightweight way to pass messages
[11:46] rikarends: like passing entire V8 datastructures through shared memory or something
[11:46] ph^ has joined the channel
[11:47] mraleph: rikardens: i think ryah_ is totally against shared state type of multithreading
[11:47] fbits has joined the channel
[11:47] rikarends: mraleph: shared state is going to be near impossible and asking for trouble, so i agree
[11:47] _announcer has joined the channel
[11:48] rikarends: mraleph: but you dont want to do JSON serialized webworker stuff either. it should be just passing the binary rep of an object through a shared memory thing
[11:48] mraleph: but yeah some kind of cheap message passing should be nice
[11:48] christophsturm: ok, but whats recommended for multithreaded http servers with no shared state?
[11:48] caolanm: anyone from joyent on here atm?
[11:49] mraleph: rikardens: if you have say several instances of v8 in one process you can easily pass buffers among them without sharing actual backing store.
[11:50] rikarends: mraleph: yeah it would probably be something tightly integrated with V8 and its GC
[11:50] bnoordhuis: mraleph: spidermonkey has this feature where you can migrate an object from one context (vm) to another
[11:50] bnoordhuis: does v8 have something similar?
[11:50] rikarends: mraleph: no-serialization (or copy-on-write) shared pieces
[11:50] rikarends: mraleph: and then i dont mean bidirectionally just as a cheap way to pass data
[11:51] mraleph: bnoordhuis: currently all context exist in the same heap so there is no need in special migration routines.
[11:51] rikarends: mraleph: and ideally it would also support TCP as a shared transport if they are not running on a shared memory architecture
[11:51] rikarends: mraleph: so scaling out would be relatively transparent
[11:52] rikarends: im pretty sure someone is going to do this very soon
[11:52] mraleph: I think passing JS objects is hard to organize. This indeed would require some tight integration with VM
[11:52] _announcer: Twitter: "I came home to make node.js Nau simple work." [ja] -- mass_cut. http://twitter.com/mass_cut_/status/2327825893822465
[11:53] rikarends: mraleph: yeah but V8 will remain single thread per process right?
[11:53] rikarends: mraleph: or are they changing that
[11:53] mraleph: rikardends: it would become single thread per VM instance 
[11:53] rikarends: mraleph: since chrome is all about threads-by-processes
[11:53] mraleph: when isolates branch lands to bleeding_edge
[11:53] rikarends: mraleph: ah alright. yeah then you can do in-process scaling
[11:54] rikarends: mraleph: it will put up a second wall however to scaling out accross the network
[11:54] mraleph: and you would be able to share and pass C++ objects across process
[11:54] Fullmoon has joined the channel
[11:55] bnoordhuis: mraleph: to clarify: share in the same process or across multiple processes?
[11:56] mraleph: bnoordhuis: that depends on you. when I say C++ object I mean something not owned by V8
[11:56] bnoordhuis: mraleph: clear, thanks
[11:57] mraleph: nobody forbids two JS Buffers in two separate isolates have pointer to the same C++ object in an internal field
[11:57] mraleph: I think this will open door to some nice tricks
[11:58] rikarends: mraleph: or horrible bugs ;)
[11:58] bnoordhuis: mraleph: how would you handle concurrency?
[11:58] bnoordhuis: you'd have to lock on each operation, i suppose
[11:59] bnoordhuis: bad for throughput
[11:59] rikarends: mraleph: i think a copy on write area in your GC would be a nice way to just share state
[11:59] mraleph: each VM is completely independent
[11:59] rikarends: mraleph: but it gets hairy fast though.
[11:59] mraleph: ah
[11:59] mraleph: you are talking about buffer
[11:59] rikarends: bnoordhuis: usually heavily concurrent access is poor design. this is just for minimizing impact of passing memory based data to workers
[12:00] rikarends: bnoordhuis: which this will do.
[12:00] bnoordhuis: rikarends: you mean vm 1 creates object x and hands it off to vm 2?
[12:01] mraleph: bnoordhuis: that true. so I though more about passing buffer ownership between instances then about using it simultaneously in both VMs
[12:01] mraleph: yep 
[12:01] rikarends: bnoordhuis: yes.
[12:01] rikarends: bnoordhuis: or with copy-on-write
[12:01] bnoordhuis: rikarends: that would still require some locking to do safely, no?
[12:02] bnoordhuis: cow i mean
[12:02] rikarends: bnoordhuis: not with copy on write, why would you
[12:02] rikarends: bnoordhuis: look at how 'fork' works
[12:02] bnoordhuis: sorry, i'm mixing up two things
[12:02] rikarends: bnoordhuis: efficiently 'passing' memory does not mean 'sharing' memory
[12:02] bnoordhuis: no locking with hand-off
[12:03] bnoordhuis: i was a few lines behind
[12:03] rikarends has left the channel
[12:03] _announcer: Twitter: "Ragechat: Node.JS + Socket.IO chat with ragefaces - http://su.pr/2DZYda" -- eBot. http://twitter.com/kicauan/status/2330576195420160
[12:05] derferman has joined the channel
[12:06] saschagehlich has joined the channel
[12:06] _announcer: Twitter: "NarwhalJS cmdline doesn't understand left/right arrow. Node.JS is better for now." -- Arunjit Singh. http://twitter.com/arunjitsingh/status/2331296839761920
[12:06] fbits has joined the channel
[12:10] fbits has joined the channel
[12:17] _announcer: Twitter: "ah, lunch ... taking a break from coding #php ... coding #nodejs *g*" -- Felix Oertel. http://twitter.com/foertel/status/2333952295567361
[12:18] eee_c has joined the channel
[12:19] stagas: cool announcer looks nice in http://embed.stagas.com
[12:20] _announcer: Twitter: "@ The vogonjeltz come is 9 and is now feasible, either with or node.js browsers with Web Sockets (Chrome)." [de] -- Tim Weber. http://twitter.com/Scytale/status/2334723376422913
[12:21] fermion has joined the channel
[12:21] stagas: the tweets don't load though :/
[12:22] Artem_S has joined the channel
[12:22] mAritz: does anyone here use backbone.js?
[12:23] Artem_S: Hi all, I have an interesting require() WTF
[12:25] Artem_S: say you have three files:
[12:25] Artem_S: a.js:
[12:25] Artem_S:     var b = require('./b');
[12:25] Artem_S:     console.log(b);
[12:25] Artem_S: b.js:
[12:25] Artem_S:     exports.b = require('./c');
[12:25] Artem_S: c.js:
[12:25] _announcer: Twitter: "Joyent &lt;3 node.js http://bit.ly/9Ye4X3" -- Charlie Robbins. http://twitter.com/indexzero/status/2335926013403138
[12:25] Artem_S:     exports.c = {ccc: 'ccc'};
[12:25] Utkarsh has joined the channel
[12:25] Artem_S: so when running a.js one gets an exception
[12:27] _announcer: Twitter: "@usejquery It'd be awesome with node.js." -- Calou. http://twitter.com/calvein/status/2336536632762368
[12:28] robinduckett has joined the channel
[12:28] robinduckett: anyone about?
[12:28] robinduckett: I keep getting 10 Nov 12:28:34 - WebSocket connection invalid or Origin not verified
[12:29] robinduckett: 10 Nov 12:28:34 - Initializing client with transport "flashsocket"
[12:29] robinduckett: like
[12:29] robinduckett: constantly
[12:29] robinduckett: on my app
[12:29] robinduckett: D:
[12:29] eee_c has joined the channel
[12:29] robinduckett: what does it mean?
[12:30] _announcer: Twitter: "@marcofolio would love to see this as a multiplayer game (nodejs server backend?)!" -- Mark Schmale. http://twitter.com/themasch/status/2337176935206912
[12:31] _announcer: Twitter: "Chaos v0.1.1 node.js database released! Got hash keys! New commands: hset, hget, hdel, hgetall, hkeys, hvals http://bit.ly/9617uU" -- George Stagas. http://twitter.com/stagas/status/2337455613153280
[12:31] Artem_S: however as soon as you modify b.js like this:
[12:31] Artem_S:     var c = require('./c');
[12:31] Artem_S:     exports.b =c;
[12:31] Artem_S: all works fine
[12:31] Artem_S: any ideas why?
[12:31] saschagehlich has joined the channel
[12:33] MattDiPasquale has joined the channel
[12:34] _announcer: Twitter: "Free Preview of  O'Reilly's Up and Running With Node.js @sh1mmer is doing a great job. Important book. http://pulsene.ws/hfwK" -- Mike Loukides. http://twitter.com/mikeloukides/status/2338254342848513
[12:34] _announcer: Twitter: "Joyent has officially become the new home for Node.js http://joyeur.com/2010/11/09/a-new-abode-for-node/ not sure about this" -- Ernesto G. Aroca. http://twitter.com/ErneX/status/2338383393193984
[12:37] robinduckett: anyone alive? D:
[12:38] Artem_S: actually, scratch that
[12:38] Artem_S: error is somewhere else
[12:39] kriszyp has joined the channel
[12:40] mikew3c_ has joined the channel
[12:41] _announcer: Twitter: "catching up on some videos from jsconf.eu, lots of #nodejs:  http://bit.ly/bhhTKg" -- Brian Stoner. http://twitter.com/bsstoner/status/2340149069357056
[12:42] _announcer: Twitter: "@themasch NodeJS looks a lot like HTML5 websockets - they both are freaking awesome and could indeed make a multiplayer version perfect!" -- Marco Kuiper. http://twitter.com/marcofolio/status/2340334247870465
[12:43] _announcer: Twitter: ""Joyent will be hiring additional staff to assist Ryan" http://joyeur.com/2010/11/09/a-new-abode-for-node/ #nodejs" -- Dionysios Synodinos. http://twitter.com/synodinos/status/2340601756389376
[12:44] SvenDowideit_ has joined the channel
[12:45] gotys has joined the channel
[12:45] gotys: Hello everyone. How can I convert the fs.stat.mtime (Wed, 10 Nov 2010 12:06:04 GMT) to a unixtimestamp (julian) ?
[12:46] robinduckett: gotys: use php.js's strtotime function?
[12:46] gotys: ha, cool, I will try that robin, thanks
[12:48] gotys: robin: that worked, thanks!
[12:52] antris_ has left the channel
[12:53] _announcer: Twitter: "# Nodejs now under the wing @ Joyent. http://groups.google.com/group/nodejs/browse_thread/thread/956a3431b1d9e937 I do not know whether this is good or not." [ru] -- Stepan Stolyarov. http://twitter.com/stevebest/status/2343202178736128
[12:55] eee_c has joined the channel
[12:55] gotys: How do I include an external file ? in php: requiere_once() ? The require function doesn't seeem to do what I need - it looks like it's a module-loading function
[12:55] jashkenas has joined the channel
[12:56] saschagehlich has joined the channel
[12:57] Kami_: gotys, yes, with require you load a module. What do you want to do?
[12:57] eee_c1 has joined the channel
[12:58] Artem_S: I justraised an issue https://github.com/ry/node/issues/issue/410
[12:58] gotys: Kami_ , I just saved a strtotime() funciton to an external file, and I would like to use it
[12:58] Artem_S: i.e. just raised
[12:58] gotys: but this did the trick: exports.strtotime = strtotime;
[12:58] _announcer: Twitter: ""Up and running with Node" book preview http://bit.ly/aKPnAG for those who want a intro to node.js and server side js" -- Geries Handal. http://twitter.com/gtothesquare/status/2344324419293184
[12:58] miccolis has joined the channel
[12:58] Artem_S: anyone have any ideas why this is happening? Thanks
[12:59] stagas_ has joined the channel
[12:59] jashkenas has left the channel
[13:00] Kami_: gotys, yes, then you should load a module with require -> require('your_module') and in your file (module) you need to export the function, so for example putting exports.strtotime = strtotime; to the bottom of the file
[13:00] gotys: Thank you very much Kami_
[13:00] Kami_: gotys, np
[13:01] _announcer: Twitter: "Possibly found some weird behaviour in node.js 'require', raised a bug: https://github.com/ry/node/issues/issue/410" -- Art. http://twitter.com/art_s/status/2344995340161024
[13:01] dberlinger has joined the channel
[13:01] robotarmy has joined the channel
[13:02] ooooPsss has joined the channel
[13:02] mbrochh has joined the channel
[13:02] mbrochh has joined the channel
[13:03] sabman has joined the channel
[13:03] trotter has joined the channel
[13:05] Artem_S has left the channel
[13:06] jacobolus has joined the channel
[13:06] _announcer: Twitter: "Joyent is taking NodeJS under their roof. Will see what this will bring us in the long run. http://goo.gl/zT6JH" -- Tomaž Muraus. http://twitter.com/KamiSLO/status/2346478752239616
[13:09] Sami_ZzZ has joined the channel
[13:09] _announcer: Twitter: "Setting up node.js. Spikes are fun" -- Ryan Roberts. http://twitter.com/ryansroberts/status/2347065669591040
[13:09] _announcer: Twitter: "Entries written by: VPS in cherry node.js + npm + Socket.IO To install the &quot;http://jmblog.jp/archives/709" [ja] -- Yoshihide Jimbo. http://twitter.com/jmblog/status/2347113321070592
[13:09] _announcer: Twitter: "Node.js to move under the Joyent umbrella with Joyent resources being dedicated to Node.js' development: http://is.gd/gTVfl" -- Dallas Node. http://twitter.com/DallasNode/status/2347131738263552
[13:10] _announcer: Twitter: ""What companies are using Node.js in production?" at Quora: http://is.gd/gTVhv" -- Dallas Node. http://twitter.com/DallasNode/status/2347237929652224
[13:10] _announcer: Twitter: ""Mastering Node" an open source #nodejs ebook: http://is.gd/gTVnb" -- Dallas Node. http://twitter.com/DallasNode/status/2347433459712000
[13:11] tony__ has joined the channel
[13:11] _announcer: Twitter: "Heroku Launches Facebook App Hosting Package http://j.mp/bLiU81  I'm looking forward Ruby + Node.js" -- kinopyo. http://twitter.com/fantasyday/status/2347593518551041
[13:12] _announcer: Twitter: "@ryansroberts node.js? Where do you work?  I feel lucky to be using ASP.NET MVC" -- dagda1. http://twitter.com/dagda1/status/2347771046666240
[13:12] digitalsatori has joined the channel
[13:13] agnat has joined the channel
[13:13] sabman: anyone having issues with nodules ?
[13:13] sabman: something like "Error: Array.prototype.toString is not generic failed to load jar"
[13:13] mAritz: WTF? where is maushu?
[13:13] tmedema has joined the channel
[13:14] mAritz: load jar? what would load a jar in an node.js environment?
[13:14] tmedema: Hi folks. I would like to use the same structure I use in node.js (modules with require etc) for my browser javascript applications. Is there any such library available for client side javascript?
[13:16] abstractj has joined the channel
[13:16] _announcer: Twitter: "I've got my @nodejs server running, that was quite painless, let's see what else this thing can do." -- Paul Hayes. http://twitter.com/fofr/status/2348796319105024
[13:16] sabman: yea wierd
[13:16] mAritz: tmedema: window.require = function (name) { $('body').append('<script src="js/'+name+'.js'); };
[13:16] mAritz: ?!
[13:16] webr3: maybe nodules is on rhino? - lmfao
[13:16] tmedema: @mAritz, what about the exports variable? Only exports should be available
[13:16] shockie has joined the channel
[13:17] hsuh has joined the channel
[13:17] mAritz: tmedema: true, that's a little more tricky :)
[13:18] bentruyman has joined the channel
[13:18] mAritz: tmedema: first google result: http://www.sitepen.com/blog/2010/07/16/asynchronous-commonjs-modules-for-the-browser-and-introducing-transporter/
[13:18] tmedema: mAritz: exactly. Basically, I need to create a rather big application just for the browser. I cannot stand having hundreds of lines with dozens of objects, so I need to use a module system for browsers too.
[13:19] mAritz: in short: http://requirejs.org/
[13:19] _announcer: Twitter: "I wish now almost that Google does _not_ interfere in node.js. # Wave # buzz # fail" [de] -- Markus Schlegel. http://twitter.com/markus_schlegel/status/2349582772080640
[13:19] mAritz: why not merge your js before sending? (that's how i do it and i'm quite happy with it :) )
[13:19] mAritz: if you use connect: connect-asset-manager
[13:20] matclayton has joined the channel
[13:21] _announcer: Twitter: "Meryl, Minimalistic Web Framework for NodeJS: http://is.gd/gTWmY" -- Dallas Node. http://twitter.com/DallasNode/status/2350033747836929
[13:22] tmedema: mAritz: http://requirejs.org/ great, thanks a lot. (what did you search for? my search didn't return such results)
[13:22] mAritz: commonjs browser
[13:22] mAritz: :D
[13:22] eee_c has joined the channel
[13:23] mAritz: (or was it "commonjs require browser"? don't know anymore)
[13:23] _announcer: Twitter: "Djangode, Utilities functions for node.js that borrow some useful concepts from Django: http://is.gd/gTWEG" -- Dallas Node. http://twitter.com/DallasNode/status/2350571604410368
[13:24] mAritz: seriously, where is maushu? i want to lynch him.
[13:25] masahiroh has joined the channel
[13:25] _announcer: Twitter: "RageChat, chat app running #nodejs + socket.io with rage faces: http://www.ragechat.com/" -- Dallas Node. http://twitter.com/DallasNode/status/2351238570053632
[13:26] _announcer: Twitter: "Chaos, a node.js database: https://github.com/stagas/chaos" -- Dallas Node. http://twitter.com/DallasNode/status/2351298913505280
[13:26] _announcer: Twitter: "Watch Mikeal Rogers on #nodejs and #couchdb: http://is.gd/gTWZh" -- Dallas Node. http://twitter.com/DallasNode/status/2351483676786688
[13:29] _announcer: Twitter: "Introduction to #nodejs and @felixge's node-mysql: http://is.gd/gTWZh" -- Dallas Node. http://twitter.com/DallasNode/status/2352019322961921
[13:29] robinduckett: wtf lol
[13:29] robinduckett: people loving mah chats
[13:30] ooooPsss has joined the channel
[13:32] JohnDav has joined the channel
[13:35] pengwynn has joined the channel
[13:36] _announcer: Twitter: ""Announcing a Node.js Book Project" by @sh1mmer http://yhoo.it/anVKQj /src @ydn" -- » Luca Manno. http://twitter.com/roncioso/status/2353986170519552
[13:37] _announcer: Twitter: "@marcofolio That'd be impressive. Using node.js for that? Adding multiple balls on next levels can be fun too." -- Umut Muhaddisoglu. http://twitter.com/umutm/status/2354074687119360
[13:37] _announcer: Twitter: "Faye.js on node.js conflicts with jQuery on Firefox 3.x. Resolved using an iframe" -- Fabio. http://twitter.com/fatshotty/status/2354194585485312
[13:37] bnoordhuis: have the americas woken up? _announcer is switching to third gear
[13:38] miccolis has joined the channel
[13:38] bpot has joined the channel
[13:38] johngbrooks has joined the channel
[13:39] _announcer: Twitter: "@jamescarr You can develop in node.js full time... on Saturday and Sunday! :D" -- Justin Miller. http://twitter.com/jrmiller/status/2354615576166400
[13:40] nolan_d has joined the channel
[13:40] mAritz: bnoordhuis: it's annoying as shit. i demand maushus head on a plate!
[13:42] Jonasbn_ has joined the channel
[13:42] jasondavies has joined the channel
[13:43] jasondavies has joined the channel
[13:43] Ari-Ugwu has joined the channel
[13:43] aheckmann has joined the channel
[13:44] Anti-X has joined the channel
[13:45] marshall_law_ has joined the channel
[13:47] d0k has joined the channel
[13:47] Anti-X: stagas, you're quite the marketer
[13:47] stagas: Anti-X: :P
[13:47] _announcer: Twitter: "Be sure to follow @DallasJS and @DallasNode  for all your awesome JavaScript and #nodejs updates!" -- Adam Crabtree. http://twitter.com/CrabDude/status/2356706906480640
[13:48] Anti-X: i don't like crab
[13:49] eee_c has joined the channel
[13:49] mbrochh has joined the channel
[13:49] mbrochh has joined the channel
[13:49] stagas: the filesystem fits perfectly for hkeys
[13:50] stagas: just make the key a folder and all fields inside it as files
[13:50] aliem_ has joined the channel
[13:52] kennon has joined the channel
[13:56] smtlaissezfaire has joined the channel
[13:56] KOBA789 has joined the channel
[14:02] digitalsatori has joined the channel
[14:03] tmedema: Anyone known with Joose (http://openjsan.org/doc/s/sa/samuraijack/Joose/3.013/lib/Joose.html) ?
[14:05] dnolen has joined the channel
[14:09] tristanoneil has joined the channel
[14:11] ntelford has joined the channel
[14:12] EyePulp has joined the channel
[14:13] JohnDav has joined the channel
[14:13] JohnDav: i have a server with only node running
[14:13] JohnDav: with ~ 100 opened sockets
[14:13] JohnDav: sudo ls /proc/`pgrep node`/fdinfo | wc -l 
[14:13] JohnDav: shows 422 opened
[14:13] JohnDav: isnt that too much
[14:15] SamuraiJack: tmedema: I'm the author, any questions?
[14:17] tmedema: SamuraiJack: hi there, just thinking about using it. Basically I wondered if it'd be possible to separate each class into its own file, I don't think it handles that functionality?
[14:17] SamuraiJack: it does
[14:17] SamuraiJack: you can either use commons js "securable modules"
[14:17] tmedema: SamuraiJack:  the thing is that'd be different in the browser
[14:17] tmedema: or would you use RequireJS?
[14:17] SamuraiJack: or the joose-specifiec deps handling system, which works cross-platform (in browser also)
[14:18] SvenDowideit has joined the channel
[14:18] shockie has joined the channel
[14:19] _announcer: Twitter: "Missed my #webexpo #nodejs talk? Dare to enter the devil's kitchen? You have another chance this Sunday 3pm in Prague http://bit.ly/b5MXJw" -- Jakub Nesetril. http://twitter.com/jakubnesetril/status/2364611437268993
[14:19] SamuraiJack: tmedema: check this: http://openjsan.org/go/?l=JooseX.Namespace.Depended
[14:19] SamuraiJack: actually we've migrated from openjsan to npm
[14:20] cferris has joined the channel
[14:22] tmedema: SamuraiJack: so there is a source for the documentation or is that not what you mean?
[14:22] Utkarsh has joined the channel
[14:24] tmedema: Anyway, the inbuild dependency framework looks good. It is meant to replace require completely?
[14:25] SamuraiJack: yes, I'm about the docs - should be checked from gh-pages branch on github
[14:25] SamuraiJack: yes, I'm using it instead of require for cross-platform code
[14:27] tmedema: SamuraiJack: so how would you use Sys module of node.js with it?
[14:27] zemanel_ has joined the channel
[14:27] SamuraiJack: nah, I don't use it for such modules
[14:27] SamuraiJack: I mean - there is no 'sys' for browsers
[14:28] SamuraiJack: on server-side I use regular `require`
[14:28] kriszyp has joined the channel
[14:28] tmedema: True SamuraiJack, but I'd like to use the same syntax. But I guess for node.js that's not possible right? You just have to use require.
[14:28] danslo has joined the channel
[14:28] tmedema: SamuraiJack: so do you require each Joose class file?
[14:28] podman has joined the channel
[14:29] roger_raymond has joined the channel
[14:29] podman has left the channel
[14:30] SamuraiJack: usually not, I'm using JXND for that
[14:30] _announcer: Twitter: ""Announcing a Node.js Book Project" by @ydn #tech #javascript http://yhoo.it/9F6T57" -- Elijah Manor. http://twitter.com/elijahmanor/status/2367396723564545
[14:30] tmedema: SamuraiJack: sorry but what is JXND? :)
[14:31] SamuraiJack: JooseX.Namespace.Depended, sorry :)
[14:31] tmedema: SamuraiJack: so you can use JXND and require together? How does that work?
[14:31] tj has joined the channel
[14:32] SamuraiJack: JXND was designed for browsers, it uses a different approach to modules
[14:32] SamuraiJack: it creates global symbols for modules
[14:32] SamuraiJack: generally they don't interact
[14:32] SamuraiJack: I mean interfere
[14:33] tmedema: Alright SamuraiJack, but if I want to have one file for each object on the server, what should I use? (And thanks for helping me by the way).
[14:33] SamuraiJack: and JXND is completely asynchronous
[14:33] SamuraiJack: you can use JXND just fine
[14:33] ianward has joined the channel
[14:34] SamuraiJack: and re-use the same code in browser for example
[14:34] tmedema: SamuraiJack: so inside a class on the server, you use require() ?
[14:34] bradleymeck has joined the channel
[14:34] SamuraiJack: I mix them, let me show, sec..
[14:35] SamuraiJack: so, here's the test script: https://github.com/SamuraiJack/KiokuJS-Backend-Batch/blob/master/script/kioku_batch_server.js
[14:35] SamuraiJack: it uses express
[14:36] SamuraiJack: and in the same time it loads the 'KiokuJS.Backend.Batch.ServerApp'
[14:36] SamuraiJack: which is here: https://github.com/SamuraiJack/KiokuJS-Backend-Batch/blob/master/lib/KiokuJS/Backend/Batch/ServerApp.js
[14:37] SamuraiJack: it creates an express app and pass it as the attribute for ServerApp class
[14:37] jherdman has joined the channel
[14:39] _announcer: Twitter: "WebSocket interesting but surely it can not you do have to wonder Node.js server-side implementation is done as fad" [ja] -- aytjtks. http://twitter.com/aytjtks/status/2369686029209600
[14:40] tmedema: SamuraiJack: why is kioku_batch_server.js not a class?
[14:40] Lorentz: That twitter didn't make any sense
[14:41] tmedema: Lorentz: it's a translate
[14:41] SamuraiJack: tmedema: class is only a pattern, to "activate" it you need some sort of "seeding" script
[14:41] matt_c has joined the channel
[14:42] Lorentz: tmedema: Oh I see
[14:42] tmedema: SamuraiJack: could you show me an example where you use require() together with a Joose Class?
[14:43] SamuraiJack: tmedema: aha, sec
[14:43] dberlinger has joined the channel
[14:43] sivy has joined the channel
[14:43] SamuraiJack: tmedema: http://samuraijack.github.com/Task-Joose-NodeJS/doc/html/Task/Joose/NodeJS.html
[14:44] SamuraiJack: check the "Scenario 1"
[14:44] softdrink has joined the channel
[14:44] _announcer: Twitter: "DailyJS: Node Roundup - http://goo.gl/uWcdP O&#39;reilly books from Node.js, Wow" [ja] -- S Aizawa. http://twitter.com/m0201/status/2370981003788288
[14:45] _announcer: Twitter: "Thorough introduction to Node.js http://bit.ly/cBVjLt" -- Paul Hayes. http://twitter.com/fofr/status/2371324089470976
[14:45] tmedema: SamuraiJack: I'm a bit confused but anyway it seems good for both client and server side. I will just start writing a client side application with it and see how it goes. I'll be in #joose. Thanks :)
[14:46] SamuraiJack: ok, cool
[14:47] Utkarsh has joined the channel
[14:48] Spookz_ has joined the channel
[14:50] _announcer: Twitter: "Node.js: Building a Simple Web Service [Video Tutorial] http://bit.ly/deD9Ma" -- Trish Mullen. http://twitter.com/TrishMullen/status/2372431482200064
[14:50] _announcer: Twitter: "Node.js: Building a Simple Web Service [Video Tutorial]: Welcome to another free video tutorial courtesy of Thin... http://bit.ly/deD9Ma" -- Tom. http://twitter.com/tomsoul1234/status/2372432253952000
[14:51] MaSch has joined the channel
[14:51] cardona507 has joined the channel
[14:51] digitalsatori has joined the channel
[14:51] kriszyp_ has joined the channel
[14:52] Zeph\k0d3 has joined the channel
[14:52] dberlinger has joined the channel
[14:52] jchris has joined the channel
[14:52] tmedema: SamuraiJack: why is there http://code.google.com/p/joose-js, http://github.com/joose/joose  and http://openjsan.org/go?l=Joose ?
[14:53] tmedema: Oh I was supposed to type this in #joose
[14:53] miccolis has joined the channel
[14:53] tristanoneil has joined the channel
[14:53] tristanoneil has left the channel
[14:54] Booths has joined the channel
[14:54] fangel has joined the channel
[14:54] _announcer: Twitter: "Node.js + PostgreSQL - cool! http://bit.ly/dhpOTX" -- Marcelo Garbarino. http://twitter.com/marcegarba/status/2373498848673793
[14:55] Booths: I had a question if anyone would so kind. How can I reference another exported function in an addon. For example, I have "exports.function1 = function (){...}();" and "exports.function2 = function (){...}();" How can I call functions in function1 from function2?
[14:55] JakeA has joined the channel
[14:55] femtoo has joined the channel
[14:55] ceej has joined the channel
[14:55] _announcer: Twitter: "It's quite obvious from #yuiconf that @yahoo is completely embracing #nodejs." -- Sunnyvale. http://twitter.com/rhyolight/status/2373899496980482
[14:56] tristanoneil has joined the channel
[14:57] _announcer: Twitter: "mongoose (big file) support landed in the ripple-js master https: / / github.com/frank06/riak-js ripple # # # riakjs nodejs" [ms] -- Francisco Treacy. http://twitter.com/frank06/status/2374406705778688
[14:58] _announcer: Twitter: "Tom O&#39;Reilly&#39;s book burst on node.js I must do." [ja] -- oogatta. http://twitter.com/oogatta/status/2374520354635777
[14:58] JakeA: Hi, apologies if this is the wrong room for this. When using node-mongodb-native, should I be opening a connection & closing it each time I access data, or call connect once for the app? 
[14:58] bnoordhuis: Booths: exports.function1.whatever()?
[14:58] Rixius has joined the channel
[14:59] Booths: within function2 I'd reference it as exports.function1.whatever()?
[14:59] bnoordhuis: Booths: yes
[14:59] Booths: I guess I completely misunderstood what exports. does
[15:00] Anti-X has joined the channel
[15:00] _announcer: Twitter: "Think Vitamin : Node.js: Building a Simple Web Service [Video Tutorial] http://portfo.li/t/9/1WWV" -- Portfoli Mike. http://twitter.com/PortfoliMike/status/2375164696203264
[15:01] tg has joined the channel
[15:01] Booths: Well it works, thanks :)
[15:01] Rixius has left the channel
[15:01] kawaz_home has joined the channel
[15:01] bnoordhuis: Booths: my pleasure
[15:02] robotarmy has joined the channel
[15:03] embedder has joined the channel
[15:04] kriszyp_ has joined the channel
[15:04] embedder has joined the channel
[15:06] jpld has joined the channel
[15:08] pquerna: g'morning
[15:10] johngbrooks has joined the channel
[15:10] Anti-X: oh is that how it's gonna be
[15:11] embedder has joined the channel
[15:13] JakeA has left the channel
[15:13] zemanel has joined the channel
[15:16] davidsklar has joined the channel
[15:16] serard has joined the channel
[15:16] _announcer: Twitter: "Node Roundup http://is.gd/gU8gI #nodejs Book Project" -- Mickael Daniel. http://twitter.com/mklabs/status/2379061749878785
[15:16] vandenoever has joined the channel
[15:16] tisba has joined the channel
[15:19] _announcer: Twitter: "What is a node.js BPStudy # 39. Interesting" [ja] -- やなぎん. http://twitter.com/yanagin/status/2379744364466176
[15:20] Utkarsh has joined the channel
[15:21] _announcer: Twitter: "is npm now the standard in installing #nodejs modules?" -- kates. http://twitter.com/katesgasis/status/2380262918852609
[15:21] liar has joined the channel
[15:23] sabman has joined the channel
[15:23] _announcer: Twitter: "node.js！／BPStudy#39 : ATND - http://goo.gl/CA68r" -- 佐藤一憲. http://twitter.com/kazunori_279/status/2380777492840448
[15:24] FLYBYME: does crypto.createCredentials work for http.client?
[15:25] AAA_awright_ has joined the channel
[15:26] a0n has joined the channel
[15:26] FLYBYME: yeah never mind just need to get the port
[15:26] sabman has left the channel
[15:27] BillyBreen has joined the channel
[15:27] _announcer: Twitter: "Exciting news about node.js with Joyent assuming control: http://bit.ly/cvVvnc" -- Matthew Podwysocki. http://twitter.com/mattpodwysocki/status/2381757886238721
[15:30] heavysixer has joined the channel
[15:32] yhahn has joined the channel
[15:32] nsolsen has joined the channel
[15:34] Zeph\k0d3 has joined the channel
[15:35] Zeph\k0d3:  more o3-canvas progress (never mind the runtime, this is with full debugging symbols + no opts)  http://blokmodular.com/dev/test32.htm - compare with  http://www.blokmodular.com/dev/graphics-tests-in-browser.html  
[15:36] tmedema: Anyone here using Cloud9 as IDE (http://www.cloud9ide.com/) ?
[15:36] _announcer: Twitter: "DO WANT. http://developer.yahoo.com/blogs/ydn/posts/2010/11/announcing-a-node-js-book-project/" -- patrick. http://twitter.com/tugal/status/2384129224085504
[15:37] Zeph\k0d3: I know some people are
[15:37] Utkarsh has joined the channel
[15:37] _announcer: Twitter: "I don't have a massive issue with this: http://is.gd/gUaHI as long as that "the next PHP" bit was a joke #nodejs" -- Steve Mason. http://twitter.com/spmason/status/2384441078980608
[15:37] _announcer: Twitter: "# Shibukawa @ yssk22 hands-on material provided by node.js. Article node.js Hands - node.js hands-on v1.0 documentation - http://bit.ly/aE7DET" [ja] -- V. http://twitter.com/voluntas/status/2384475799429122
[15:38] Zeph\k0d3: I am considering the switch to cloud9 for the canvas debugging
[15:38] marshall_law has joined the channel
[15:38] everzet has joined the channel
[15:38] Zeph\k0d3: the more use it gets the faster it will improve :)
[15:38] _announcer: Twitter: "Article node.js Hands - node.js hands-on v1.0 documentation http://htn.to/h8P3F1" [ja] -- Masato Ikeda. http://twitter.com/ikm/status/2384671493066752
[15:38] oal has joined the channel
[15:40] _announcer: Twitter: "#NodeJS is officially maintained by Joyent as of today. Personally, I feel like this is great news-- Node really needs a solid dev team" -- Danny F.G. http://twitter.com/buzzedword/status/2385059277447168
[15:40] ryah_: yes
[15:40] ryah_: announcer is back <3
[15:41] daniellindsley has joined the channel
[15:41] sclaflin has joined the channel
[15:42] daniellindsley has left the channel
[15:42] mikedeboer: Zeph\k0d3: awesome progress on the o3-canvas stuff!
[15:42] _announcer: Twitter: "Best url I've seen yet for node.js hosting: http://no.de" -- Demis Bellot. http://twitter.com/demisbellot/status/2385702385885184
[15:42] Utkarsh has joined the channel
[15:43] [[zz]] has joined the channel
[15:43] abstractj has joined the channel
[15:43] _announcer: Twitter: "Node.js: Building a Simple Web Service [Video Tutorial] | http://t.co/owpAlPd #WebService #Webdesign #Coding" -- Björn Effing. http://twitter.com/beeejay/status/2385965855281153
[15:44] saschagehlich has joined the channel
[15:45] _announcer: Twitter: "Resources for learning node.js http://post.ly/1BF81" -- Jai-Gouk Kim. http://twitter.com/jaigouk/status/2386328012455937
[15:45] Zeph\k0d3: :D
[15:47] bradleymeck has joined the channel
[15:47] tapwater has joined the channel
[15:48] mbrochh has joined the channel
[15:49] davidc_ has joined the channel
[15:49] _announcer: Twitter: "@RicAllinson http://t.co/GrV5hnG Can we consider a "Component"(sf) to be equal to a "View"(CI) ? I think "Template" is more relevant, no ?" -- Stéphane Erard. http://twitter.com/StephaneErard/status/2387494335152128
[15:50] _announcer: Twitter: "Node.js web server logs, making use of Global-based #NoSQL db: http://bit.ly/bSYjYD" -- rtweed. http://twitter.com/rtweed/status/2387619631599616
[15:51] malkomalko has joined the channel
[15:54] matt_c_ has joined the channel
[15:54] jdalton has left the channel
[15:55] serard: Someone here is using spark and optparse ?
[15:55] serard: I can't figure out how to mix both :)
[15:56] ph^ has joined the channel
[15:56] deepthawtz has joined the channel
[15:56] Zeph\k0d3: spoptpark.
[15:56] kriszyp_ has joined the channel
[15:57] tj has joined the channel
[15:57] rikarends has joined the channel
[15:57] omarkj has joined the channel
[16:00] serard: Zeph\k0d3,  sorry ?
[16:01] Zeph\k0d3: sorry, couldnt resist just mashing up the words. I have no idea what either of them are
[16:01] kevwil has joined the channel
[16:01] Zeph\k0d3: probably some fancy frameworks/libraries that try to reinvent various wheels in various ways
[16:01] Anti-X: there can be only one wheel!
[16:02] Zeph\k0d3: das unicycle!
[16:02] ehaas has joined the channel
[16:02] _announcer: Twitter: "@ Stevebest They rely on node.js and technology advance, so it does not become worse;)" [ru] -- elbonia. http://twitter.com/elbonia/status/2390667795894272
[16:03] tmedema: I tried using Cloud9 IDE, but I'm afraid it did not have a "wow" factor to me. Specifically the limitation that it has to be run in a browser (the screen area is not as big).. or am I making conclusions too fast?
[16:03] tj: Zeph\k0d3: still stealing my tests I see :p
[16:03] _announcer: Twitter: "#nodejs is making me horney! (:" -- Uğur Özyılmazel. http://twitter.com/vigobronx/status/2390862734557184
[16:03] Zeph\k0d3: tj: yes, and extending them with my own
[16:03] Zeph\k0d3: tj: in the end we all have to pass all tests
[16:03] Zeph\k0d3: if you dont like code-reuse, dont do opensource ;)
[16:04] rikarends: tmedema: We are looking at chromeless browser to extend it as well
[16:04] Yuffster has joined the channel
[16:05] _announcer: Twitter: "WebKit's Web Inspector for node.js : node-inspector updated to v0.1.0 http://is.gd/gUdyY (requires node.js v0.3.x)" -- de Saint Martin. http://twitter.com/desaintmartin/status/2391477745360897
[16:05] tmedema: rikarends: nice, that'd be a good improvement. Also, what does that vertical line in the middle do there? It goes right through the code. And, is there documentation for the debugging?
[16:05] sonnym has joined the channel
[16:06] Zeph\k0d3: tj: how about you grab my voronoi-gradient-stresstester as a nice return? 
[16:06] tj: haha k
[16:06] tj: where is that at
[16:06] Zeph\k0d3: adding it to the git now
[16:07] rikarends: tmedema: its the print-margin of 80 cols, you can turn it off in view
[16:07] rikarends: tmedema: i actually am for default disable for that one :)
[16:08] _announcer: Twitter: "Good news for #nodejs and all the noders!  Node is now officially maintained by @joyent. http://bit.ly/cvVvnc" -- Greta Muehlen. http://twitter.com/Gigiem/status/2392176222797824
[16:08] tmedema: rikarends: I second that. Do people print their code nowadays? =p
[16:08] rikarends: tmedema: debugging is very much 'as is' right now in terms of howtos/docs/videos we are still in the making-it-work phase right now
[16:09] rikarends: tmedema: you'd be surprised at the intense discussion here to keep code < 80 col :)
[16:09] rikarends: tmedema: its part of the code guidelines
[16:09] Anti-X: WHO SAID 80 COLS
[16:09] muk_mb has joined the channel
[16:09] tmedema: rikarends: how is that possible in a language that does not support multilines by the standard definition?
[16:09] Anti-X: ACTION snarls
[16:09] rikarends: tmedema: dont look at me :)
[16:09] Yuffster has joined the channel
[16:09] Anti-X: it supports multilines
[16:10] Anti-X: just not multiline strings per default
[16:10] _announcer: Twitter: "Node.js: Building a Simple Web Service [Video Tutorial] http://goo.gl/fb/oPeiR #code #javascript #videos" -- Vincent Beneche. http://twitter.com/crealoop/status/2392642251923456
[16:10] Anti-X: you can do
[16:10] Anti-X: some.really.long.thing.that.you.want.to.manipulate =
[16:10] Anti-X: 'value'
[16:10] Anti-X: to put it on the edge
[16:10] Zeph\k0d3: tj: pushed it to server.. https://github.com/ajaxorg/o3/blob/master/modules/canvas/example/voronoi.js  and https://github.com/ajaxorg/o3/blob/master/modules/canvas/example/rhill-voronoi-core-min.js 
[16:10] AutomaticPixel has joined the channel
[16:11] Anti-X: even without semicolons!
[16:11] Anti-X: the horror
[16:11] tj: Zeph\k0d3: cool I will check it out
[16:11] _announcer: Twitter: "The Zen of Node « Buzzedword - What exactly is Node.JS? Node is the hot new framework taking the web by... http://tumblr.com/xkapdokzt" -- Danny F.G. http://twitter.com/buzzedword/status/2392976995131392
[16:11] tristanoneil: tj: Hey do you have time to take a look at my expresso test today? Remember my issue with sessions and expresso hanging? Well I haven't had any luck yet. https://gist.github.com/669819
[16:12] Zeph\k0d3: http://www.blokmodular.com/dev/servervoronoi.htm  it should look like this (almost)  
[16:12] Zeph\k0d3: sadly not the prettiest version I had.. but I was looking for the correctness of some features
[16:13] tj: tristanoneil: one thing is you need app.use(connect.session(..))
[16:13] tj: Zeph\k0d3: is that the target render?
[16:13] tj: or from o3?
[16:13] Zeph\k0d3: this is the one from o3 right now
[16:13] Zeph\k0d3: still tweaking various things
[16:14] christophsturm has joined the channel
[16:14] Zeph\k0d3: but I was looking to see if the gradient-bands in the small circles could be made a little smoother
[16:15] tristanoneil: tj:  you like this? app.configure('test', function() {
[16:15] tristanoneil:     var MemoryStore = connect.session.MemoryStore;
[16:15] tristanoneil:     app.use(connect.session({ store: new MemoryStore({ reapInterval: -1 }) }));
[16:15] tristanoneil: });
[16:15] tapwater_ has joined the channel
[16:16] tj: yeah like that
[16:16] tj: express.session() is an alias
[16:16] tj: as well
[16:16] tj: so you dont need to require('connect')
[16:16] tj: all the middleware in connect are on the express obj as well
[16:17] _announcer: Twitter: "Node.js impressed by the impact, and there are even web server frameworks to use when creating web applications http://expressjs.com/" [es] -- Raul Arabaolaza. http://twitter.com/raularabaolaza/status/2394308095250433
[16:18] tristanoneil: tj: I've updated my gist https://gist.github.com/669819 this should work right? Because It's still hanging for me...
[16:19] tj: oh
[16:20] _announcer: Twitter: "Carsonified : Node.js: Building a Simple Web Service [Video Tutorial]... http://inblogs.org/go/ys7cd" -- inBlogs. http://twitter.com/inBlogs/status/2395050998763520
[16:20] tj: you have two session middlewares, configure() with no env is executed for all of them
[16:21] tristanoneil: tj: so app.use(express.session()); should go into a production configure() then?
[16:21] tj: yeah
[16:22] tj: that would be why it is hanging, because you are still using the regular one for "test" which has a setInterval()
[16:22] Gruni has joined the channel
[16:23] tristanoneil: tj: that makes complete sense for some reason I just thought that it would just override it. It is not hanging now. Thank you!
[16:23] Guest55998 has joined the channel
[16:25] gwoo has joined the channel
[16:26] mikew3c has joined the channel
[16:26] mif86 has joined the channel
[16:26] richcollins has joined the channel
[16:27] Benvie has joined the channel
[16:27] jvolkman-work: Is node's heap limited to 1gb? is there any way to use more?
[16:27] TheEnd2012 has joined the channel
[16:28] path[l] has joined the channel
[16:28] bnoordhuis: jvolkman-work: depends, what platform and architecture?
[16:28] jvolkman-work: os x, 64-bit
[16:28] JohnDav has joined the channel
[16:28] bnoordhuis: then the answer is: no
[16:29] jvolkman-work: what platforms support larger heaps?
[16:29] bnoordhuis: by which i mean, the heap should be able to grow much, much larger
[16:29] bnoordhuis: anything 64 bits
[16:29] bnoordhuis: are you sure node is a 64 bit binary?
[16:29] jvolkman-work: hmm
[16:29] vmamidi has joined the channel
[16:29] MattJ: Even with 32-bits you aren't limited to 1GB
[16:30] dylang has joined the channel
[16:30] rikarends: apparently they use 2 bits of the 32 bit pointer for flags or something?
[16:30] everzet has joined the channel
[16:30] jvolkman-work: yeah, node is 64-bit
[16:30] Benvie: according to this http://jsconf.eu/2010/speaker/techniques_for_a_single_stack.html there's a 1gig heap limit from V8
[16:31] bnoordhuis: MattJ: depends on how the os shifts user / kernel address space
[16:31] bnoordhuis: 32-bits linux used to have a 2 gb limit for the longest time
[16:31] MattJ: Can you cite any which limit you to 1GB? :)
[16:32] bnoordhuis: i think windows used to do that (but don't quote me on it)
[16:32] mw_ has joined the channel
[16:32] aliem has joined the channel
[16:33] marienz has joined the channel
[16:34] Anti-X: just a thought, the 1GB limit might be your cloud instance :p
[16:34] Gruni has joined the channel
[16:34] MattJ: Heh
[16:35] jvolkman-work: bnoordhuis: thanks for the link
[16:35] tlrobinson_ has joined the channel
[16:37] aliem has joined the channel
[16:37] _announcer: Twitter: "@matthewotto Joyent isn't "in charge" of node.js. We're investing more in the community that is "in charge"." -- David Young. http://twitter.com/davidpaulyoung/status/2399492192075776
[16:37] _announcer: Twitter: "reading up on NodeJS... this sliceable web controls concept is awesome: http://bit.ly/cQuaYh" -- David O'Trakoun. http://twitter.com/davidosomething/status/2399528804159489
[16:38] Anti-X: i want sliceable cake controls
[16:38] galaxywatcher_ has joined the channel
[16:38] Anti-X: no more uneven pieces of cake! no more murders!
[16:39] rikarends: hmm the V8 GC apparently will hickup at 1GB sizes, thats a pretty serious scalability problem
[16:39] rikarends: i guess you'd have to try not to use so much mem per instance
[16:39] rikarends: which usually shouldnt be a problem
[16:39] Anti-X: maybe one should poke google about it until they fix it
[16:39] Anti-X: i'm sure they're aware
[16:39] AAA_awright has joined the channel
[16:39] Anti-X: but tell them to fix it NAO
[16:39] rikarends: i thinkso
[16:40] rikarends: http://code.google.com/p/v8/issues/detail?id=847
[16:41] jvolkman-work: --max-old-space-size=1900
[16:41] jvolkman-work: node seems to accept that parameter 
[16:41] jvolkman-work: at least, it doesn't say it's invalid
[16:43] rikarends: i dont think its a 'whoo lets fix this easily' thing
[16:44] jvolkman-work: yes
[16:44] rikarends: i think the hard reality is that V8 is architected and optimized to be a scripengine for a process compartmentalized webbrowser.
[16:44] rikarends: nodejs is taking it way outside these design parameters for the GC
[16:44] Zeph\k0d3: soon we will get the concept of virtual memory inside v8
[16:44] Zeph\k0d3: with 1gb per thread
[16:45] Zeph\k0d3: with maybe some regions marked "shared"
[16:45] Anti-X: hooray
[16:45] Anti-X: let's not do that
[16:45] rikarends: well you do have to wonder 'whats in that 1GB'
[16:45] rikarends: it might be easily designed around
[16:46] Anti-X: bits and bytes may hurt your memory, but stack overflow will never heal!
[16:46] Anti-X: evil twist
[16:46] Zeph\k0d3: require('himem.sys')
[16:46] rikarends: hahahahah
[16:46] dguttman has joined the channel
[16:46] rikarends: yeah lets do segment mapping!
[16:46] Anti-X: wazzat?
[16:47] Anti-X: page files?
[16:47] igorgue has joined the channel
[16:47] rikarends: you would have to start to wonder what that 1gb is. i would more like a non-garbage-collected in memory JS structure DB that can be used as normal data or something
[16:47] _announcer: Twitter: "Nice! http://no.de #nodejs" -- John Antoni. http://twitter.com/johnantoni/status/2401980118994944
[16:47] dguttman has joined the channel
[16:48] Anti-X: oh hell yeah, i'm gonna make an async memory management module and store everything using plain text
[16:48] Anti-X: it's gonna be so fast
[16:48] rikarends: no thats not what i meant :)
[16:49] Anti-X: no that's what i meant
[16:49] Anti-X: and when i say plain text i mean text files!
[16:49] tmedema: Hmm.. does anyone recommend an editor for Ubuntu? Hopefully for both client and server side javascript.
[16:49] Anti-X: use the force!
[16:49] rikarends: maybe now with joyent going at node.js they could also hire people to tune / change V8 to be server specific
[16:49] Zeph\k0d3: the easiest way to optimize is to convince people that these "computers" have not actually added anything of value to their lives.
[16:49] Anti-X: komodo edit
[16:49] halfhalo_ has joined the channel
[16:49] Anti-X: i think there's a linux verison
[16:50] dmcquay has joined the channel
[16:50] everzet has joined the channel
[16:50] Anti-X: Zeph\k0d3, you mean memory management over telegraph?
[16:50] Anti-X: i could totally make that work
[16:51] Anti-X: give me 1 million workers/monkeys
[16:52] Anti-X: ignore me, i'm just tired
[16:52] Zeph\k0d3: I rather forget than remember to be honest
[16:52] stephank has joined the channel
[16:52] matt_c has joined the channel
[16:52] Anti-X: i'm on the train bored out of my face
[16:53] serard: How can I do a foreach on a {} ?
[16:54] case__: for (elem in {} ) ?
[16:54] Anti-X: Object.keys(obj).forEach()?
[16:55] _announcer: Twitter: "Has @37signals jumped on the node.js bandwagon yet?" -- Malte Ubl. http://twitter.com/cramforce/status/2403872026918913
[16:55] a0n has joined the channel
[16:55] Anti-X: i can't remember, does your elem contain the key or the value?
[16:56] Anti-X: i wanna say key
[16:56] sixtus42: it's key
[16:56] Anti-X: so strike my suggestion then
[16:56] sixtus42: both versions are
[16:56] rikarends: for(x in {}) sounds faster than Object.keys(obj) since it doesnt require copying the keys to an array
[16:57] sixtus42: but the Object.keys() variant will fail, when obj is not an object
[16:57] Anti-X: so will for in
[16:57] tmedema: Anti-X: It's quite expensive unfortunately, hmm...
[16:57] Anti-X: it will work for arrays, except then it will also include other stuff
[16:57] sixtus42: Anti-X: no, for in will work
[16:57] sixtus42: Anti-X: it just never loops
[16:57] Anti-X: oh
[16:58] Anti-X: i never even thought to use it like that
[16:58] sixtus42: for (foo in null) { console.log(foo); }
[16:58] tlrobinson_ has joined the channel
[16:58] sixtus42: I use it all the time like that, because it saves me from testing the var
[16:58] Anti-X: well if the var is an array
[16:58] Anti-X: then wat
[16:59] _announcer: Twitter: "For others and so I don't lose this code, here my node.js gmail IMAP client https://gist.github.com/5c127c01be77ead5a207" -- Bryan Clark. http://twitter.com/clarkbw/status/2404864885788672
[16:59] Anti-X: you're screwde
[16:59] Anti-X: *ed
[16:59] sixtus42: then it iterates over the array keys
[16:59] Anti-X: yeah
[16:59] Anti-X: + length
[16:59] sixtus42: which strangely enough are STRINGS
[16:59] sixtus42: not numbers
[16:59] altamic has joined the channel
[16:59] eck has joined the channel
[16:59] eck has joined the channel
[17:00] Anti-X: you can make objects with number keys too
[17:00] sixtus42: Anti-X: no you can't
[17:00] Anti-X: obj[2] = 'value'
[17:00] devinus has joined the channel
[17:00] Anti-X: oh and for in on array will return the item function also i think
[17:00] twoism has joined the channel
[17:00] sixtus42: Anti-X: js will turn the 2 into "2" on the fly
[17:01] sixtus42: that's why you can't
[17:01] Anti-X: yeah
[17:01] Anti-X: and
[17:01] Anti-X: obj[2] will also turn it into a string
[17:01] _announcer: Twitter: "Speaking about #node.js at the Moutain View JavaScript meetup tonight: http://bit.ly/aSwYJ5" -- Gerad Suyderhoud. http://twitter.com/gerad/status/2405470501339136
[17:01] Anti-X: and return the value of the '2' key
[17:01] sixtus42: in short, array in object are almost the same and the key is always a string
[17:01] sixtus42: s/in/and/
[17:02] eck has left the channel
[17:02] sixtus42: I just had to learn that the hard way ;-)
[17:02] _announcer: Twitter: "@rhyolight What makes you think Yahoo is really embracing #nodejs, rather than just experimenting and being excited about it? #yuiconf" -- Alessandro Vernet. http://twitter.com/avernet/status/2405748239761408
[17:03] Anti-X: types don't matter much in js anyways when they're converted behind the scenes like that
[17:03] rikarends: yes keep saying that :)
[17:03] Anti-X: :p
[17:04] rikarends: put a million items in that object and tell me the benchmark :)
[17:04] Zeph\k0d3: I love it when 1 + 1 = 11
[17:04] aurynn: 1+1 = 7 is usually more concerning.
[17:04] Anti-X: > obj[{'a': 'b'}] = 'c';
[17:04] Anti-X: 'c'
[17:04] Anti-X: > obj
[17:04] Anti-X: { '[object Object]': 'c' }
[17:05] tlrobinson__ has joined the channel
[17:05] cagdas has joined the channel
[17:05] Anti-X: then assigning any other object as key will overwrite that key
[17:05] Anti-X: because it toString'd it
[17:05] tristanoneil: Has any used assert.response in expresso to post to a form? Is this possible?
[17:06] Anti-X: gtg, my stop
[17:06] tj: tristanoneil: yeah you can, just set the appropriate headers etc
[17:07] ThePub has joined the channel
[17:07] RevoOf has joined the channel
[17:09] _announcer: Twitter: "#nodejs #caterwaul Wrote a JSON/file database in 26 SLOC: http://github.com/spencertipping/caterwaul.db.file" -- Spencer Tipping. http://twitter.com/spencertipping/status/2407603212652544
[17:10] everzet has joined the channel
[17:14] _announcer: Twitter: "@avernet Yahoo! pays me to work with nodejs. That means they are investing money in it. #yuiconf" -- Sunnyvale. http://twitter.com/rhyolight/status/2408682088308736
[17:14] rbranson: you mean Yahoo? that company with the midas touch? :D
[17:14] zomgbie has joined the channel
[17:16] jamescarr_ has joined the channel
[17:16] jamescarr_: hmph... anyone know how to do a "afterAll" in vows?
[17:16] vmamidi has joined the channel
[17:17] jamescarr_: I need to tear a file watcher down when specs finish running
[17:17] _announcer: Twitter: "And after nice talk by @_orso_ it @gabrielelana time. About #node.js ...cool #wtc2010" -- ziobrando. http://twitter.com/ziobrando/status/2409468839067649
[17:17] _announcer: Twitter: "mr lana on the stage / nodejs #webtechcon" -- Chilian C.. http://twitter.com/keysee/status/2409500111802368
[17:17] RevoOf: hi. is there any detailed documentation on the v8 c++ api?
[17:18] dmcquay has joined the channel
[17:18] aliem_ has joined the channel
[17:18] eee_c has joined the channel
[17:19] rikarends has left the channel
[17:19] _announcer: Twitter: "https://no.de/ waiting for a coupon #nodejs #joyent" -- Anatoliy C.. http://twitter.com/1602/status/2409992091082752
[17:19] jasondavies has joined the channel
[17:19] jasondavies has joined the channel
[17:19] jasondavies has joined the channel
[17:21] stride: jamescarr_: can't you just add another batch?
[17:21] jamescarr_: stride, yeah I did that
[17:21] jamescarr_: feels like a hack, but its the best i can do
[17:21] stride: hm. yeah :)
[17:22] jfd1 has joined the channel
[17:22] hornbeck has joined the channel
[17:23] ryah_: RevoOf: it's documented in the source
[17:23] ryah_: RevoOf: in the header include/v8.h
[17:23] dmcquay_ has joined the channel
[17:24] dmcquay has joined the channel
[17:25] danslo has joined the channel
[17:26] dmcquay has joined the channel
[17:26] RevoOf: ryah_: thanks
[17:26] lmorchard has joined the channel
[17:27] prettyrobots has joined the channel
[17:27] ryah_: pquerna: yt? i'd like an apache configuration which serves N bytes from memory 
[17:27] rwaldron_ has joined the channel
[17:27] bradleymeck has joined the channel
[17:28] vulcan_hacker_ has joined the channel
[17:29] pquerna: ryah_: yo
[17:30] banjiewen has joined the channel
[17:30] ryah_: for benchmarking purposes, that is
[17:30] vulcan_hacker has joined the channel
[17:30] pquerna: http://httpd.apache.org/docs/2.0/mod/mod_file_cache.html#mmapfile
[17:30] everzet has joined the channel
[17:31] ryah_: mmap .. well i guess that's okay. is there not like a "mod_bytes" or something
[17:31] pquerna: hmm
[17:31] pquerna: well, you could make one in like 40 lines of C
[17:32] _announcer: Twitter: "@tuparev also, @rentzsch has referred to a secret node.js WO-like framework" -- Mike Schrag. http://twitter.com/mschrag/status/2413212645457920
[17:32] Utkarsh has joined the channel
[17:32] pquerna: you just want it to return X bytes of Y?
[17:33] ryah_: pquerna: yeah - i'd rather use some known thing so that i can tell people what i'm doing
[17:33] ryah_: mmap works
[17:33] _announcer: Twitter: "Finally spending a little time with node.js, and I think I may be doomed" -- l.m. orchard. http://twitter.com/lmorchard/status/2413596109705216
[17:33] ryah_: i'll just warm it up a bit to make sure it's all paged in
[17:33] wilmoore has joined the channel
[17:33] shaver: OK, I'm blind and can't find it: what's the way to include a file, rather than require a module?
[17:33] lmorchard: Hah, nice
[17:34] _announcer: Twitter: "@iano I know your cooking or whatever but I just got nodejs to render a chart." -- jacob thornton. http://twitter.com/fat/status/2413709095866368
[17:35] shaver: oh, heh
[17:35] Anti-X has joined the channel
[17:35] aconbere has joined the channel
[17:36] _announcer: Twitter: "@buzzedword I don't think it's really any different than before. Anything we put in core Node.js is available to our competitors as well." -- Jim Pick. http://twitter.com/jimpick/status/2414277017214978
[17:36] tlrobinson_ has joined the channel
[17:37] shaver: there used to be an include()!
[17:40] shaver: I guess this is ryah's way of telling me to refactor and write real tests, instead of trying to import the file into the repl and poke
[17:40] shaver: bah, I say!
[17:40] _announcer: Twitter: "@mschrag node.js rummors sound interesting... and I will watch carefully..." -- Georg Tuparev. http://twitter.com/tuparev/status/2415204725956608
[17:41] mjr_ has joined the channel
[17:42] altamic has joined the channel
[17:43] TomsB has joined the channel
[17:43] ryah_: shaver: sorry - i would like to have that, but it's not possible with js
[17:43] ryah_: not when all the modules live in the same context
[17:43] shaver: I don't understand
[17:43] vmamidi has joined the channel
[17:44] _announcer: Twitter: "Node.js ... @ yssk22&#39;s all be sure to go 行Ketara &quot;@ yssk22&#39;s&quot; BPStudy # 39: ATND http://bit.ly/bDMHe2" [ja] -- いのうえ　たかひろ. http://twitter.com/doryokujin/status/2416188697088001
[17:44] shaver: <script> tags work exactly that way in the browser
[17:44] _announcer: Twitter: "Just built a calculator, in node.js, in like 10 minutes. God, this is the future." -- Mitchell Hislop. http://twitter.com/mitchellhislop/status/2416228240982016
[17:44] shaver: you just need to parse the file as though it were typed into the repl, no?
[17:44] dioms has joined the channel
[17:45] ryah_: shaver: if you can come up with a way to do it, i'd be happy to include it. (pun intended)
[17:45] shaver: OK
[17:46] shaver: I don't know much about v8's internals, but I'll take a look
[17:46] shaver: again, they support multiple <script> tags that are parsed and executed against the same context and global object in chrome, so I'm sure it can be done!
[17:47] bradleymeck: shaver i think its more the problem of injecting into a scope, ie: "function foo() {include('./foointernals.js')}"
[17:47] sclaflin has joined the channel
[17:47] superjudge has joined the channel
[17:47] ryah_: shaver: yeah, you can put it into the global scope - that's easy
[17:47] shaver: sure, I don't mind erroring out if we're not at global scope, though even then it corresponds to load-sync-and-eval
[17:48] _announcer: Twitter: "#Node.js will be getting it's very own O'Rielly book soon.  Here's a preview!  http://yhoo.it/anVKQj #nodejs @OReillyMedia #superhappy" -- Greta Muehlen. http://twitter.com/Gigiem/status/2417250476761088
[17:48] ryah_: shaver: but i don't want to provide a primative that does dangerous things like that
[17:48] shaver: about which danger are you concerned?
[17:49] _announcer: Twitter: "Off to @techmeetup.  Doing a short #nodejs talk tonight" -- Tane Piper. http://twitter.com/tanepiper/status/2417464495308800
[17:49] vulcan_hacker has joined the channel
[17:49] shaver: I can write my own include, as a one-liner, but I'll have to keep pasting it into the repl :-)
[17:50] everzet has joined the channel
[17:51] shaver: ah, I can't quite, yeah
[17:51] shaver: I see what you mean
[17:51] shaver: you don't want another eval
[17:51] shaver: ok
[17:53] RevoOf: ryah_: i've found the Function class. how can instanciate it and give it a c++ function to execute when called?
[17:54] vulcan_hacker has joined the channel
[17:55] bradleymeck: you use FunctionTemplate rather than function directly
[17:55] shaver: ok ryah, you win
[17:55] shaver: this round!
[17:55] Gruni has joined the channel
[17:55] shaver: ACTION goes to write tests and refactor
[17:55] robotarm_ has joined the channel
[17:55] noahcampbell has joined the channel
[17:57] jchris has joined the channel
[17:57] isaacs has joined the channel
[17:57] Druid_ has joined the channel
[17:58] _announcer: Twitter: "Trying to set up a webserver 2.0 on a @hosteurope vServer. #CouchDB: checked. #NodeJS: checked. Startup scripts for both: still in process." -- Falco. http://twitter.com/ulmerleben/status/2419715720876032
[17:58] _announcer: Twitter: "Node.js is supported by Joyent http://joyeur.com/2010/11/09/a-new-abode-for-node/" [es] -- Hector Vergara R. ✔. http://twitter.com/hvergara/status/2419913834631169
[17:59] eee_c has joined the channel
[17:59] RevoOf: bradleymeck: thanks, that works :)
[17:59] Anti-X has joined the channel
[18:00] figital has joined the channel
[18:00] _announcer: Twitter: "applause for @ and # gabrielelana node.js" [it] -- Lorenzo Massacci. http://twitter.com/lorenzomassacci/status/2420383818973184
[18:01] _announcer: Twitter: "Announcing a Node.js Book Project · YDN Blog http://yhoo.it/bvjwYV" -- techno cutter. http://twitter.com/techno_cutter/status/2420482355765248
[18:02] er1c_ has joined the channel
[18:03] _announcer: Twitter: "#Node.js is definitely ultracool. Great talk by @gabrielelana #wtc2010" -- ziobrando. http://twitter.com/ziobrando/status/2421221752840192
[18:04] JojoBoss has joined the channel
[18:04] derren13 has joined the channel
[18:04] eee_c has joined the channel
[18:04] tlrobinson_ has joined the channel
[18:05] tlrobinson_ has joined the channel
[18:07] strmpnk has joined the channel
[18:07] pquerna: oh trademark law, how terrible are thy
[18:08] twoism has joined the channel
[18:09] eee_c1 has joined the channel
[18:10] micheil: pquerna: I honestly don't see how the change in name in CLA is any different to having ryan as the person on the CLA
[18:10] micheil: like, all the "evil" things that are being suggested that joyent could do, ryan could theoretically do himself.
[18:10] isaacs: omg we're still talking about this.
[18:10] micheil: isaacs: kinda.
[18:11] mjr_: Oh, did the CLA change?
[18:11] isaacs: mjr_: yeah, all our base are belong to Joyent now.
[18:11] mjr_: oh man, we are FUCKED
[18:11] ollie has joined the channel
[18:11] isaacs: mjr_: i know, now they're gonna market Node to every huge company under the sun, and we'll have to deal with the horrors of world domination.
[18:11] micheil: ACTION thinks it's for the better, anyhow.
[18:11] pquerna: micheil: i agree fundamentally. I've tried to say as such about the CLA specifically when I could.  I am only really concerned with some of the secondary implications of joyent 'owning' node.
[18:12] aurynn: It's under an MIT license
[18:12] isaacs: pquerna: what does it really mean to "own" something that is MIT licensed though?
[18:12] aurynn: By downloading it, you "own" it now.
[18:12] isaacs: joyent can't stop you from doing *anything* you want with the code.
[18:12] pquerna: the trademark?
[18:12] pquerna: the community? the people working on the code?
[18:12] everzet has joined the channel
[18:13] omarkj has joined the channel
[18:13] justin_ has joined the channel
[18:13] isaacs: pquerna: well, yeah, but joyent doesn't own the community or the people working on the code.
[18:13] isaacs: and owning the copyright, since it's MIT licensed already, is basically just a defensive move anywya.
[18:13] micheil: I think it's better that there's a larger entity backing node, for instance, if something that node depends on had license changes, then joyent is in more of a position to protect us against any ramifications then ryan (as an individual)
[18:14] isaacs: you could literally take the code, fork it, call it "Node.JS", and release it under the GPL if you want to.
[18:14] pquerna: no, you cannot.
[18:14] isaacs: what you can't do is sue Joyent for using it
[18:14] pquerna: you could call it Pauls_Super_Framework.JS, but not Node.JS.
[18:14] micheil: and in that same vein, Joyent can't sue you for using it either.
[18:15] isaacs: that's what "deal in the software without restriction" means.
[18:15] bnoordhuis has joined the channel
[18:15] pquerna: micheil: well, true, though I still would prefer a license with a patent grant, if I had a choice :)
[18:15] isaacs: you can't make false claims about your relationship to joyent or ryan, of course.
[18:15] pquerna: thats not how trademarks work
[18:15] pquerna: trademarks are about causing customer confusion
[18:15] dgathright has joined the channel
[18:16] tlrobinson__ has joined the channel
[18:16] shaver: yes, they are consumer protection, really
[18:16] micheil: pquerna: well, maybe that's something to get joyent to look at setting up for there open source, similar to Dojo Foundation, a Node foundation or Joyent Foundation
[18:16] isaacs: no.
[18:16] isaacs: a joyent foundation would be a step backwards.
[18:16] isaacs: we have a fast moving monarchy, and now that monarchy has acquired a marketing department.
[18:16] isaacs: this is a good thing.
[18:18] SubStack: ACTION wants to see mape's npm thing integrated into nodejs.org
[18:18] stephank: I only signed the CLA because I figured its benefits to ryan/joyent on top of MIT were negligible. For that same reason, I find the CLA itself negligible, and possibly harmful because it can only scare people away. Besides, tons of projects do fine without it.
[18:18] _announcer: Twitter: "Wow, lots of interest in node.js here. We already have a waiting list for @sagmor 's talk at http://www.meetup.com/dynlangchile/" -- Leo Soto. http://twitter.com/leosoto/status/2424964070252544
[18:18] isaacs: stephank: the CLA prevents another company from suing Joyent because one of their employees put some proprietary stuff into node.
[18:19] isaacs: stephank: s/Joyent/Ryan/ and it's the same reason
[18:19] pquerna: yes, its a protection for the copyright holder (Joyent/Ryan).  It basically puts you as the contributor at 'more' fault. if shit goes bad.
[18:19] isaacs: right
[18:19] bnoordhuis: isaacs: congratulations on the new job
[18:20] isaacs: so, don't contribute shit you don't own :)
[18:20] jesusabdullah: SubStack just showed me how to throw together a (basically) one-liner static webserver with connect. Pretty awesome!
[18:20] stephank: Yeah, I think you or someone else made that point when I raised the discussion a while back. But can you name an example of that happening? Because I'm still skeptical.
[18:20] pquerna: stephank: SCO? :)
[18:20] stephank: And did they win?
[18:20] isaacs: i mean, in a perfect world, we'd all love each other and all software would be free and there'd be candy unicorns falling from the sky, but MIT and a CLA is a pretty good protection against evil, because it puts the evil incentives in line with the good.
[18:20] pquerna: it only took 7 years
[18:21] pquerna: stephank: i know of several cases from inside the Apache software foundation due to my role in infra;  Where I had to go and nuke paths in svn/cvs. Its happened a handful of times -- even with a strict CLA policy that code was accidently contributed.
[18:21] agnat_ has joined the channel
[18:22] jesusabdullah: Which code? <_>
[18:22] isaacs: the node CLA grants non-exclusive rights, right?
[18:22] jesusabdullah: (oh boy, code nukes)
[18:22] isaacs: like, you can contribute stuff to Node, and then also contribute that same stuff (that you wrote) to some other project.
[18:22] _announcer: Twitter: "Chaos v0.1.4 Node.js database is up on github and npm! New commands: watch, unwatch. http://bit.ly/9617uU" -- George Stagas. http://twitter.com/stagas/status/2425981037969408
[18:23] pquerna: isaacs: well, the ASF one does. As does the google one. explicitly.  The Node cla is actually... well I dont' like it as far as CLAs go. its missing several clauses that google/asf have.
[18:23] isaacs: bnoordhuis: thanks!
[18:23] stephank: pquerna: I understand that, when it comes down to it, it's wrong. But no company out there is a saint either, so I consider those incidents grey area. It happens, but I was hoping for actual examples of litigation as a result of it.
[18:24] path[l]2 has joined the channel
[18:24] isaacs: ah, yeah, "it does not change your rights to use your own Contributions for any other purpose"
[18:24] pquerna: (things like 'not a contribution', explicit patent declarations, explicit retention of original creation rights)
[18:24] isaacs: "You hereby grant to NodeJS, a non-exclusive ..."
[18:24] pquerna: yes
[18:24] _announcer: Twitter: "Bugs found in Japanese man ーーー node.js w 0.2.2 JSON.stringify (&#39;FooBar&#39;) -&gt; &quot;\ \ u307b \ \ u3052 \ \ u307b \ \ u3052&quot;, 0.3 s &quot;FooBar&quot; AS The unicode escaped Renee orz" [ja] -- Yohei Sasaki. http://twitter.com/yssk22/status/2426470358065152
[18:25] ryah_: pquerna: it allows you to contribute the code to other projects. ". This license is for your protection as well as the protection of NodeJS and its licensees; it does not change your rights to use your own Contributions for any other purpose."
[18:25] sechrist has joined the channel
[18:25] pquerna: yes
[18:25] stephank: isaacs: That's an interesting clause, btw. Because I don't really see how the ‘protect Joyent’ argument backs that up.
[18:26] vnguyen has joined the channel
[18:26] pquerna: can we talk about ponies, http, and spdy yet
[18:26] isaacs: in general, I trust people more than companies, and I trust companies to be greedy more reliably than i trust foundations to do good.
[18:26] bnoordhuis: ponies, i like ponies
[18:26] mjr_: Seems like this stuff is all inevitable in a world of intellectual property law, software patents, etc.
[18:26] bnoordhuis: shetlanders are the best
[18:26] isaacs: yeah
[18:26] jesusabdullah: Unless they're in the middle of a city
[18:26] pquerna: do you like ponies or unicorns more.
[18:26] jesusabdullah: in a normal-sized yard
[18:26] isaacs: i prefer unicorns.
[18:26] bnoordhuis: ponies are cuter
[18:26] jesusabdullah: THEN it's just WEIRD
[18:27] isaacs: unicorns are armed.
[18:27] bnoordhuis: unicorns are only nice to virgins
[18:27] bnoordhuis: nerds have an advantage there but still
[18:27] mjr_: I'm going to go back to looking at pictures of kittens frolicking around in non-blocking SSL implementations.
[18:27] bnoordhuis: talking about ssl
[18:27] pquerna: mjr_: yes, I wish you could just 'public domain' code and ignore IP/patents/trademarks, but the world is a terrible terrible horrible cruel place full of evil people.
[18:27] bnoordhuis: pquerna: is your ssl branch due to land soon?
[18:28] pquerna: i've not been working on it for the last week, other stuff going down.
[18:28] pquerna: should ge tback to it today.
[18:28] pquerna: its close. i would like to get it in asap.
[18:28] bnoordhuis: cool, i'd like to see it go in
[18:28] ryah_: We're much better off with this restrictive CLA than without. At least someone has clear ownership of the code-base and that owner is clearly deciding to commit that work into the public domain.
[18:28] isaacs: http://games.adultswim.com/robot-unicorn-attack-twitchy-online-game.html
[18:28] pquerna: +1, have a CLA :)
[18:28] _announcer: Twitter: "I'll have Node.js + GT.M + node-mwire running on an Asus Eee 701 with me tomorrow :-)" -- rtweed. http://twitter.com/rtweed/status/2427503591297025
[18:29] mjr_: pquerna: I know all too well.  I'm sort of involved with a cold war style nuclear deterrence patent portfolio, and i wish I didn't have to be.
[18:29] isaacs: pquerna: yeah, so, ssl...
[18:29] isaacs: pquerna: when is that gonna be done?  /cc ryah_
[18:29] boaz has joined the channel
[18:29] pquerna: well, ssl is done. http on top of ssl, well thats harder :)
[18:29] isaacs: right
[18:29] isaacs: https, is what i really mean, i guess
[18:30] pquerna: http-streams works for non-keep-alived requests right now. I'm having lifetime / flushing issues
[18:30] pquerna: which I dont' have a good approach on solving.
[18:30] bnoordhuis: pquerna: what kind of problems?
[18:30] pquerna: (non-ssl, http-streams passes all the test cases fwiw)
[18:30] ryah_: btw im going to rip out setSecure when i land writev
[18:31] pquerna: +1
[18:31] everzet has joined the channel
[18:31] cognominal has joined the channel
[18:31] _announcer: Twitter: "Building my first #nodejs app: a deviantArt chat bot.  Will be part of a larger project, I hope." -- Jason Hutchinson. http://twitter.com/Zikes/status/2428074889060352
[18:31] tisba has joined the channel
[18:31] pquerna: is writev this week?
[18:31] ryah_: ugh. it's close-ish. but i keep getting distracted by stuff.
[18:32] ryah_: unclear.
[18:32] micheil: pquerna: everybody knows narwhals triumph over ponies and unicorns..
[18:32] tristanoneil has left the channel
[18:32] pquerna: i'd like to see how narwharls do on land.
[18:32] bnoordhuis: but how well do ponies and unicorns do in water?
[18:33] pquerna: i'd avoid the hoofs, even in water.
[18:33] bnoordhuis: it be fairest to put them all in space and let 'em battle it out
[18:33] micheil: I think a narwhal would survive out of water, their like seals.
[18:33] pquerna: space baattle.....
[18:33] bnoordhuis: micheil: i think they'd dry out
[18:33] bnoordhuis: and their body weight would crush their lungs
[18:34] pquerna: http://www.multiplaying.net/wp-content/uploads/2010/01/dinosaurs-lasers.jpg
[18:34] _announcer: Twitter: "@Zikes Nice stuff. You could probably rip some of the parser out of DamnZilla to use, if need be. (Also, if needed, ask for help in #node.js" -- Micheil Smith. http://twitter.com/miksago/status/2428828420935680
[18:34] bnoordhuis: that's awesome
[18:34] pquerna: if someone could make a new version of that with ponies/unicorns/narwhalls...
[18:34] micheil: that's kinda awesome.. people I know from past lives keep reappearing within the node community..
[18:34] ryah_: ACTION isn't into this animal thing.
[18:34] bnoordhuis: ryah_: how about robots?
[18:35] bnoordhuis: or ninjas vs pirates?
[18:35] pquerna: sorry, we can go back to open source licensing.
[18:35] ryah_: bnoordhuis: bots? :P~
[18:35] bnoordhuis: though ninjas would obviously win
[18:35] micheil: ryah_: okay, so, what triumphs over narwhals, unicorns, ponies or etc?
[18:35] SubStack: robots \m/
[18:35] ryah_: botnets :P~
[18:35] a0n has joined the channel
[18:35] pquerna: botnets :(
[18:35] bnoordhuis: i've got a couple of russian friends who are experts on the subject
[18:35] Mikushi2 has joined the channel
[18:35] mjr_: p2p armor piercing bullets
[18:35] ryah_: node should become the tool of choice for the russian mafia
[18:36] pquerna: need a better windows port for that
[18:36] bnoordhuis: we need i18n then
[18:36] ryah_: pquerna: yeah
[18:36] ryah_: and executable bundling
[18:36] olivvv_ has joined the channel
[18:36] pquerna: making it the choice for writing botnets would result in an interesting set of required features :)
[18:36] tlrobinson_ has joined the channel
[18:36] _announcer: Twitter: "Holding out for async require in #nodejs. Don't go halfway with async IO." -- Andy VanWagoner. http://twitter.com/thetalecrafter/status/2429470136868865
[18:37] bnoordhuis: async require again
[18:37] _announcer: Twitter: "Node.js: Building a Simple Web Service [Video Tutorial] | Think Vitamin http://t.co/QgXoG4i #twev" -- dhoko. http://twitter.com/lecolibrilibre/status/2429550285815808
[18:37] bnoordhuis: when would you need that?
[18:37] pquerna: dynamic/hot code loading, signed code loading, great windows support, good udp/stun/nat piercing, 
[18:37] oal has joined the channel
[18:37] bnoordhuis: yes, but why async?
[18:37] micheil: ryah_, pquerna : fwiw, when I was working on the jQuery UI project, we actually had to nuke the toolbars/menus component because we accepted a large contribution of code that then came under a licensing/copyright thing. As there was no CLA, individuals almost had legal action taken against them. Something I'd rather not have repeat.)
[18:37] isaacs: i think async require is the wrong way to do those things.
[18:37] SubStack: !tweet @thetalecrafter require.async()
[18:37] SubStack: likewise
[18:37] isaacs: SubStack: that's gone now
[18:37] SubStack: :(
[18:38] isaacs: nono, it's a good thing
[18:38] isaacs: what you really want isn't async require, what you want is multiple nodes.
[18:38] isaacs: just write smaller programs that talk to one another, and can crash each other to restart with new code.
[18:38] _announcer: Twitter: "#nodejs gained official corporate patronage http://bit.ly/97KloH" -- Matt. http://twitter.com/mattjaq/status/2429937453633536
[18:39] pquerna: i've been thinking a bit about hot-reloading, less sure about hot code loading, and more about having a module that would pass all open file destriptors to another process, the new process running the new code.
[18:39] SubStack: isaacs: but then you would need some sort of... asynchronous rpc system... to make that work :p
[18:39] ThePub has joined the channel
[18:39] isaacs: pquerna: yeah, that's the way to do it
[18:39] pquerna: but thats though in js.
[18:39] pquerna: well, you need to like, serialize an http parser's state
[18:39] pquerna: just as a random example
[18:39] micheil: isaacs: I can't wait until I have a chance to spec out these cross-node event emitters.. :D
[18:40] pquerna: the key concept is a strong seperation of code from state
[18:40] mikew3c_ has joined the channel
[18:40] pquerna: which is difficult in most javascript styles
[18:40] pquerna: with randomly attached functions on objects
[18:41] SubStack: micheil: http://substack.net/posts/9bac3e
[18:41] _announcer: Twitter: "a link for me on Node.js http://nodetuts.com/" -- Chris Jackson. http://twitter.com/dr34mc0d3r/status/2430586543144961
[18:41] matjas has joined the channel
[18:41] micheil: SubStack: yeah, I'm wanting something that doesn't require any changes or very little changes to existing code.
[18:41] pquerna: i've seen it done in lua, just because all the state was kept in a C structure, and the Lua was just used to make decisions/advance a state machine.
[18:41] _announcer: Twitter: "Don't have access to irc but you want to track all the cool stuff posted in the #node.js irc channel? Here: http://bit.ly/a4o3xP" -- George Stagas. http://twitter.com/stagas/status/2430752000049152
[18:42] pquerna: so you just stop running lua, pass the c structure, run lua in new process.
[18:42] _announcer: Twitter: "node.js - client/server stuff in just javascript. but who likes javascript. enter coffeescript. but need to compile. enter brochure. in ruby" -- Wojciech Jawor. http://twitter.com/wojciech_jawor/status/2430946015977472
[18:43] Anti-X: nice, stagas
[18:44] _announcer: Twitter: "Does node.js run on android/iOS/WinMobile (yet) and doesn't it perfectly fit for nxt gen mobile browser apps? @joyent" -- Christoph Burgdorf. http://twitter.com/cburgdorf/status/2431323079708672
[18:44] sechrist has joined the channel
[18:45] sechrist_ has joined the channel
[18:45] stagas: Anti-X: thanks :) I was messing around with api.embed.ly actually and came up with that
[18:45] Anti-X: it's not showing everything though
[18:45] Anti-X: just stuff with links
[18:46] sechrist_ has joined the channel
[18:46] sriley has left the channel
[18:46] stagas: you might need to refresh it's a bit buggy
[18:46] Anti-X: i've done so
[18:46] Anti-X: these messages aren't loaded
[18:46] _announcer: Twitter: "Free Preview of  O’Reilly’s Up and Running With Node.js Book http://twlv.net/iQMXXd" -- Ophelia. http://twitter.com/opheliapouz/status/2431975658885121
[18:46] sechrist_ has joined the channel
[18:46] Anti-X: that twitter message was loaded
[18:48] stagas: Anti-X: embed.ly takes a while to load up. I've seen it fail too
[18:48] isaacs: pquerna: what was your team name for node knockout?
[18:48] stagas: they're not ready yet maybe
[18:48] isaacs: pquerna: or the .no.de hostname for nodul.es
[18:48] pquerna: ponies for orphans
[18:48] Anti-X: stagas, no it's not that it's slow, it's just that NO message without a link is shown
[18:48] micheil: hmm, anyone know about network level load balancing?
[18:49] stagas: Anti-X: oh yeah, it only grabs messages with links :)
[18:49] bnoordhuis: micheil: what do you want to know?
[18:49] micheil: bnoordhuis: well, in network load balancing, there's no need to pass file descriptors, right?
[18:49] bnoordhuis: micheil: no, that only works locally
[18:49] micheil: right
[18:50] micheil: I had a feeling that was the case.
[18:50] stagas: Anti-X: it's a feature!
[18:50] Anti-X: i don't like that
[18:50] dioms has joined the channel
[18:50] stagas: :P
[18:50] Anti-X: yarr
[18:50] pquerna: what do you mean, 'network load balancing'
[18:50] pquerna: do you mean an f5 out in front, or something like ha-proxy?
[18:50] StanAngeloff has joined the channel
[18:50] Anti-X: <- complainomaniac
[18:50] pquerna: ryah_: also, have you heard of Corosync before? http://www.corosync.org/doku.php
[18:50] dnolen has joined the channel
[18:51] micheil: pquerna: I guess so, I don't know a whole lot about it.
[18:52] pquerna: there are a couple models.  One is where they proxy everything for you, the other is a little trickier on the networking level, but incoming packets go via the LB, and outgoing go straght to your router 
[18:52] isaacs: pquerna: i think i broke nodul.es.  seeing some ENOTFOUND dns errors in your logs.
[18:52] delapouite has joined the channel
[18:52] saikat has joined the channel
[18:52] sudoer has joined the channel
[18:53] pquerna: nice
[18:53] micheil: pquerna: okay, but the point is, if you have say 5 single core machines, you could spawn a node instance on each, and use something like HA Proxy or a Router to load balance
[18:53] isaacs: do you know offhand which domain your'e trying to hit?
[18:53] micheil: and then you would actually need the FD's of the sockets, just the events
[18:53] pquerna: isaacs: no... and its a lovely traceback that.
[18:53] stagas: isaacs: why am I getting errors that npm is unable to remove directories when uninstalling? it didn't use to do that
[18:54] isaacs: stagas: perhaps they're root owned or something?
[18:54] stagas: isaacs: I'm root everywhere I'm on windows
[18:54] isaacs: oh, wow, npm works on windows!!?
[18:54] isaacs: awesome!!
[18:54] isaacs: honestly, i don't know
[18:55] isaacs: can you gist the whole log output?  maybe add "--loglevel verbose" to the command, too?
[18:55] pquerna: isaacs: registry.npmjs.org.. but hmm.
[18:55] pquerna: feature request
[18:55] pquerna: Error: ENOTFOUND, Domain name not found
[18:55] isaacs: yeah
[18:55] pquerna: please include the damn domain name that wasn't found
[18:55] pquerna: in the error message
[18:55] pquerna: thanks
[18:55] isaacs: definitely.
[18:56] stagas: isaacs: rm fail EBUSY on postuninstall
[18:56] bnoordhuis: pquerna: am i right when i say that your ssl branch is a few commits behind ryan's?
[18:56] isaacs: stagas: oh, weird
[18:56] AutomaticPixel has joined the channel
[18:57] isaacs: stagas: yeah, gist the whole thing, please.
[18:57] pquerna: bnoordhuis: i can bring it up to date in a few
[18:57] stagas: isaacs: let me try to reproduce it
[18:57] isaacs: stagas: sounds like something that i need to trap and handle better, maybe it's trying to rm too many things at once.
[18:57] isaacs: stagas: try installing and then uninstalling yui3
[18:57] isaacs: that thing is a bear
[18:57] bnoordhuis: pquerna: no rush, it just struck me that some things seemed to be missing
[18:58] ddollar: quick question.. im trying to test my app, and i have a case where a callback is fired 4 times with different args, and i want to test that it was fired 4 times and with the 4 proper sets of args
[18:58] ddollar: i'm using vows, but it doesnt seem to capture this well
[18:58] bnoordhuis: last sync'ed on 30-10?
[18:58] keyvan has joined the channel
[18:59] szimek has joined the channel
[18:59] pquerna: bnoordhuis: no, yesterday
[18:59] _announcer: Twitter: "@thetalecrafter aync requires were removed from prior  #nodejs releases to be more CommonJS compliant, it's not coming back :-/" -- Dallas Node. http://twitter.com/DallasNode/status/2435135555248128
[18:59] isaacs: pquerna: what's weird is that i can fetch it when i log in manually.
[19:00] _announcer: Twitter: "Node.js liked? We do too! Here is the peaceful integration NodeJS &lt;-&gt; MoIP: http://t.co/xuQYbDH" [pt] -- MoIP Labs. http://twitter.com/moiplabs/status/2435340702842880
[19:00] stagas: isaacs: https://gist.github.com/671321
[19:00] bnoordhuis: pquerna: it's a painless fast-forward at any rate
[19:01] stagas: isaacs: install is ok. same error on uninstall
[19:01] isaacs: stagas: kewl
[19:01] stagas: there's more wait
[19:01] isaacs: stagas: thanks for the data
[19:01] stagas: isaacs: https://gist.github.com/671323
[19:02] stagas: isaacs: this is when I retry to uninstall
[19:02] _announcer: Twitter: "NodeJS/SSJS interface for controlling the browser for testing through Selenium webdriver: https://github.com/dmachi/webdriver-js" -- kriszyp. http://twitter.com/kriszyp/status/2435857390764032
[19:02] springify has joined the channel
[19:02] isaacs: stagas: yeah, the uninstall actually worked, mostly, it just couldn't remove the container directory for some reason.
[19:02] _announcer: Twitter: "Blog post about Joyent and Node.js. I trust joyent (please give me a coupon code now) http://joyeur.com/2010/11/09/a-new-abode-for-node/" -- Sveinung Røsaker. http://twitter.com/sveisvei/status/2435982217449472
[19:02] isaacs: stagas: i'll try putting in a retry like i do with EMFILE
[19:02] hassox has joined the channel
[19:03] stagas: isaacs: but it still reports it 'installed' on npm ls yui3
[19:03] isaacs: stagas: if you do what it says, and rm the directories manually, does that work?
[19:03] meandi has joined the channel
[19:03] isaacs: stagas: that's because when i check for stuff that's installed, i don't actually read its contents, i just trust that the folder implies that a thing is there.
[19:03] isaacs: stagas: npm assumes that you're not going to dick around with its data.
[19:03] isaacs: stagas: it's less "correct" in some cases, but it's also way simpler and faster to do it that way
[19:04] stagas: isaacs: I did the rm rf and it works but still reports it as installed
[19:04] isaacs: stagas: ??
[19:04] isaacs: stagas: is there a /usr/local/lib/node/.npm/yui3/0.5.9 folder?
[19:05] coffeecup: hi, is there a built in function/variable to get the current system time or do i have to make a system call?
[19:05] stagas: isaacs: uhm no you're right it's uninstalled. I was looking at yui3-core
[19:05] isaacs: coffeecup: Date.now()
[19:05] isaacs: stagas: kewl
[19:05] coffeecup: uh~~
[19:06] coffeecup: lol.. thanks
[19:06] stagas: isaacs: which didn't uninstall with the others maybe it's a dependency somewhere else?
[19:06] isaacs: coffeecup: we recently went all around this in various ways, but it turns out, Date.now() is the fastest way to get the time in a node program.
[19:06] isaacs: those v8 dudes are really smart.
[19:07] eee_c has joined the channel
[19:08] tlrobinson__ has joined the channel
[19:09] strmpnk_ has joined the channel
[19:11] shockie has joined the channel
[19:12] isaacs: pquerna: yeah, this is so weird.  i can request registry.npmjs.org in node on your zone with no prioblem.
[19:12] isaacs: pquerna: are there any other domains you're fetching data from?  github or anything?
[19:13] _announcer: Twitter: "Unicode escape because I was a redis Tarashii later took time out from that found. does not correspond with rises in node.js no.de version. Almost forgot" [ja] -- Masahiro Hayashi. http://twitter.com/masahiroh/status/2438626998755329
[19:13] pquerna: when i push
[19:13] pquerna: Rolling back to 20101004101855 ... Please wait
[19:13] pquerna: i get that?
[19:13] InsDel has joined the channel
[19:14] pquerna: i can't get it to use newer git revs
[19:14] hassox has joined the channel
[19:14] pquerna: i've pushe d a bunchof on(error to debug.
[19:14] isaacs: right, but the problem is that it fails to start up
[19:14] _announcer: Twitter: "Na it interesting. Https: / / github.com/brickysam26/node-proxy node.js for Proxy API. To go to bed now ... good night indeed." [ja] -- utatane. http://twitter.com/Constellation/status/2439067643944960
[19:15] isaacs: this is the problem with git push deploy..
[19:15] banjiewen has joined the channel
[19:15] isaacs: it's super easy when it works
[19:16] saikat has joined the channel
[19:16] isaacs: gah, that error message is so not helpful..
[19:16] _announcer: Twitter: "#nodejs is the new #rails except it scales and is horribly fast from the begining. #newwebstandard" -- Sleeptillseven. http://twitter.com/sleeptillseven/status/2439511015424000
[19:16] robmason has joined the channel
[19:17] femtoo has joined the channel
[19:18] pquerna: isaacs: so, if i run it manually, it starts up
[19:18] isaacs: pquerna: that's just odd...
[19:18] SubStack: node is nothing like rails
[19:18] SubStack: thank goodness
[19:18] pquerna: isaacs: Failed to fetch:  http://packages:5984/connect/-/connect-0.2.7.tgz
[19:18] isaacs: pquerna: ohhh... hahaha
[19:18] isaacs: ok
[19:18] isaacs: my bad.
[19:19] isaacs: i fixed that on the individual package views, but not on the listAll view.
[19:19] pquerna: but it refuses to run the new git releases
[19:19] LordMetroid has joined the channel
[19:19] LordMetroid has joined the channel
[19:19] kjeldahl has joined the channel
[19:19] LordMetroid: How unstable is 3.0?
[19:20] isaacs: pquerna: is there some way to clear out the old data?
[19:20] dberlinger has joined the channel
[19:20] pquerna: hmm? i mean, if the mongo is nuked / files nuked it will refetch it all
[19:20] pquerna: but the problem is with the no.de side
[19:20] pquerna: i can't see a way to force a deployment upgrade
[19:21] isaacs: pquerna: it looks like nodul.es fetched the data while i was busy breaking it
[19:21] pquerna: ah
[19:21] isaacs: pquerna: and cached that data, which is invalid.
[19:21] isaacs: pquerna: it won't let you upgrade, because when it tries to run the upgraded code, it crashes
[19:21] pquerna: it doesn't crash anymore
[19:21] pquerna: thats my point
[19:21] isaacs: yeah it does :)
[19:21] pquerna: no, i'm running it in the consle right now
[19:21] isaacs: ah, ok
[19:22] isaacs: and you added and committed that stuff into the git repo and pushed to node@whatever.no.de:repo?
[19:22] pquerna: yes
[19:22] pquerna: it just says rolling back to version in october
[19:22] pquerna: ACTION tries it again
[19:22] isaacs: right, because it fails to start when you do that.
[19:22] isaacs: hold on, lemme tail the logs while you do that...
[19:22] elijah-mbp has joined the channel
[19:23] isaacs: ok, go
[19:24] pquerna: http://pastebin.com/UiwpeEZx
[19:24] isaacs: ohh, ok
[19:24] isaacs: this is odd, it's not detecting the version properly
[19:25] pquerna: should just rewrite the whole app in django dammit :)
[19:26] isaacs: ok, push
[19:26] isaacs: this knockout stuff is so ghetto
[19:26] isaacs: the jsconf beta was much better.  i mean, that's what betas are for, right?
[19:26] pquerna: it says sucessful
[19:26] pquerna: success it is then
[19:26] isaacs: site's up :)
[19:27] derferman has joined the channel
[19:27] isaacs: pquerna: we gotta get this moved over to a proper .no.de instance as soon as possible, and also merge in the stuff that mape has done, and maybe even sick a designer on it.
[19:27] isaacs: plus all that other goodness i was talking to you about while drunk that time.
[19:28] stagas: yeah I crashed embed.ly
[19:29] pquerna: i like how its ghetto when its about 70 days old :)
[19:30] _announcer: Twitter: "Interestingly, node.js enter under the wings of the company joynet http://joyeur.com/2010/11/09/a-new-abode-for-node/" [cs] -- Josef Adamčík. http://twitter.com/pepiino/status/2442978597539840
[19:30] sclaflin has left the channel
[19:30] mitchellhislop has joined the channel
[19:31] sclaflin has joined the channel
[19:32] ph^ has joined the channel
[19:35] stagas: one invalid url in the array crashed their whole response object
[19:36] bnoordhuis: pquerna: can i ask you a apache module question?
[19:36] yonkeltron has joined the channel
[19:36] dysinger has joined the channel
[19:36] pquerna: bnoordhuis: sure
[19:36] yonkeltron: so i seem to be having some trouble using underscore.js in node but i'm a little too new to know how to trace down my issue. is this common?
[19:38] yonkeltron: when i try to require('underscore') i get back an object which seems to have the correct properties and functions
[19:38] bnoordhuis: pquerna: in the post_config hook, should i see the base or merged server config when i look it up with ap_get_module_config()?
[19:38] isaacs: stagas: https://github.com/isaacs/npm/commit/275e3
[19:38] bnoordhuis: i would expect the latter (merged) but it appears to be the former
[19:38] pquerna: post_config is invoked with the base server instance
[19:39] yonkeltron: but when i try to call one of them, like _.isEqual({}, {}), i get an error like thsi: TypeError: Object [object Object] has no method 'isEqual'
[19:39] isaacs: stagas: if you feel like testing out the fix, you can `npm install http://github.com/isaacs/npm/tarball/275e3`, or pull the git repo and do `make dev`
[19:39] pquerna: if you want to modify a merged one, you can iterate the children
[19:39] pquerna: one sec i'll find an example
[19:39] stagas: isaacs: a hack! ;)
[19:39] isaacs: yonkeltron: var _ = require("underscore")
[19:39] yonkeltron: right
[19:39] yonkeltron: tried that
[19:39] bnoordhuis: pquerna: in the child_init hook, you mean?
[19:39] isaacs: yonkeltron: what about var _ = require("underscore")._
[19:40] pquerna: bnoordhuis: server_rec->next
[19:40] bnoordhuis: ah okay
[19:40] bnoordhuis: i'll give it a spin, thanks
[19:40] LordMetroid: Do you use 0.2.4 or 0.3.0?
[19:40] yonkeltron: isaacs: AH!
[19:40] yonkeltron: look at that
[19:40] pquerna: bnoordhuis: yeah, just iterate down ->next, one of them is your 'merged' server record
[19:40] yonkeltron: i bet i could have inspected the object and seen the deal there..
[19:40] yonkeltron: isaacs: is that a bug?
[19:40] isaacs: :D
[19:40] Moominpapa: Does wheat have trouble under node.js 0.3?
[19:40] stagas: isaacs: didn't work
[19:40] isaacs: yonkeltron: i dunno.
[19:40] stagas: isaacs: still get the EBUSY
[19:40] isaacs: stagas: weird.
[19:41] stagas: isaacs: I did the npm install tarball thing
[19:41] isaacs: hmm... this would be easier if i could reproduce it at all.
[19:42] pquerna: bnoordhuis: https://github.com/pquerna/httpd/blob/trunk/modules/ssl/ssl_engine_config.c#L1617-1641
[19:43] pquerna: bnoordhuis: though its a bad example because of mod_ssl's terrible mySrvConfig macro.
[19:43] agnat has joined the channel
[19:43] Moominpapa: I'm watching wheat render the content of howtonode.js into the title tag... :)
[19:43] isaacs: stagas: npm install http://github.com/isaacs/npm/tarball/stagas-ebusy
[19:43] isaacs: stagas: just pushed a thing that'll log when it does that.
[19:43] bnoordhuis: pquerna: thanks :)
[19:43] isaacs: stagas: also, it'll try 10 times now
[19:44] bnoordhuis: is there a logic to it?
[19:44] pquerna: the macro? no it just wraps get_module_config
[19:45] ryah_: how do i define which port httpd binds to?
[19:45] ryah_: nm
[19:45] bnoordhuis: oh no, i mean why you get the base config instead of the merged one
[19:45] pquerna: Listen
[19:45] ryah_: why learn when i can just ask on irc?
[19:45] bnoordhuis: hah
[19:45] pquerna: heh
[19:45] bnoordhuis: you sound like my manager
[19:45] bnoordhuis: sans the irc part
[19:45] mikeal has joined the channel
[19:46] pquerna: bnoordhuis: the 'base' server in the 'global' server.  Apache has a history of *before* it had virutal hosts.  Think of it as a base server that all vhosts inherit form.
[19:46] bnoordhuis: okay
[19:46] bnoordhuis: so this is essentially legacy stuff?
[19:46] pquerna: not really
[19:46] pquerna: its just how apache models virutal hosts
[19:46] pquerna: there is always a 'global' vhost -- thats the base one
[19:47] bnoordhuis: i'll take it as as a given, thanks :)
[19:47] bnoordhuis: though it does intrigue me
[19:48] bnoordhuis: is the global vhost the fallback for regular vhosts?
[19:48] ryah_: can i get httpd to not daemonize
[19:48] ryah_: kinda annoying
[19:48] bnoordhuis: -X
[19:48] pquerna: not quite. Thats the 'default' vhost.
[19:48] pquerna: yeah, -X is the undocummented secret shortcut :)
[19:48] ruxkor has joined the channel
[19:48] pquerna: the 'default' vhost is the first one that matches for an Ip/port/glob
[19:49] stagas: isaacs: 1st. ln 35. if (waitBusy[p] === null) should be (typeof waitBusy[p] === 'undefined')
[19:49] mikeal: i need to write some slides
[19:49] bnoordhuis: what debian calls 000-default
[19:49] mikeal: boring!
[19:49] bnoordhuis: i'm with you so far
[19:49] isaacs: stagas: derp.
[19:49] stagas: isaacs: 2nd I did it with 1s interval and it still doesn't work
[19:49] bnoordhuis: but then what does the global vhost do?
[19:49] pquerna: bnoordhuis: fajita> The first-listed virtual host is always the default one when using name based virtual hosts. See  http://www.onlamp.com/pub/a/apache/2004/01/08/apacheckbk.html for more details.
[19:49] murz has joined the channel
[19:49] stagas: isaacs: it's up to 6 secs now
[19:49] path[l] has joined the channel
[19:50] stagas: isaacs: the file is ebusy by something else in the code
[19:50] isaacs: stagas: ok, so the EBUSY isn't like EAGAIN
[19:50] Gindevine has joined the channel
[19:50] rnewson has joined the channel
[19:50] isaacs: hm...
[19:50] pquerna: bnoordhuis: the first vhost is what the *user* sees, but all vhosts after that still inherit from the base/global.
[19:50] isaacs: maybe there's like a file descriptor open or something?
[19:50] isaacs: stagas: go ahead and ^C it.  are there any open files in there?
[19:50] isaacs: er, any files in the directory at all
[19:50] ryah_: okay. so node basically destroys apache.
[19:50] ryah_: even when hosting mmap files..
[19:51] pquerna: ryah_: well, i'm not sure mmap files are even faster...
[19:51] pquerna: ryah_: but please, whats the damage :)
[19:51] stagas: isaacs: no, no open files, it happens with all packages
[19:51] isaacs: stagas: no files in the dir?  completely empty?
[19:51] isaacs: (wtf, cygwin)
[19:51] ryah_: on small message (100 bytes) something like 800 req/sec for apache and 10000 req/sec for node
[19:51] pquerna: ryah_: prefork?
[19:51] isaacs: ryah_: that seems *really* slow for apache
[19:51] szimek has joined the channel
[19:52] pquerna: httpd -X will run _one_ child -- the one on the console
[19:52] ryah_: pquerna: not sure - i just using whatever came in the tarball
[19:52] pquerna: so unless its threaded
[19:52] richcollins has joined the channel
[19:52] pquerna: it will default to prefork then
[19:52] ryah_: is that bad?
[19:52] stagas: isaacs: sorry I misunderstood. the dirs are empty it's semver/dependson and semver/package only but they're empty too
[19:52] ryah_: how do i make it fast?
[19:52] pquerna: it was cool in '97
[19:52] bnoordhuis: don't use -X
[19:52] derferman has joined the channel
[19:53] ryah_: oh yeah, that's a big difference okay
[19:53] ryah_: so now their on par
[19:53] isaacs: stagas: hm.
[19:53] bnoordhuis: then node has some optimizing to do
[19:53] ryah_: their :)
[19:53] ryah_: they're
[19:53] bnoordhuis: apache is pretty heavy-weight on the inside
[19:53] pquerna: its not if you are using a straight mmap.
[19:54] pquerna: they should be making the same syscalls
[19:54] bnoordhuis: does that skip the regular filter chain?
[19:54] pquerna: if you can eliminate syscalls, one will get faster
[19:54] intacto has joined the channel
[19:54] tlrobinson_ has joined the channel
[19:55] _announcer: Twitter: "@klikstermkd server side: node.js other_cool_stuff: jQuery" -- BobiYo. http://twitter.com/bobanj/status/2449288969850880
[19:56] matjas has joined the channel
[19:56] pquerna: ryah_: ideally, compile with: --with-mpm=event  --enable-nonportable-atomics 
[19:56] pquerna: ryah_: and then might need some tuning in mpm.conf
[19:57] softdrink: does anyone know offhand if IE9 supports __proto__?
[19:58] mjr_: I guess my computer is really slow.  I can only do about 2,000 reqs/sec with a hello world node app, tested from ab.
[19:59] bnoordhuis: mjr_: what options did you pass to ab?
[20:00] marshall_law has joined the channel
[20:00] thejefflarson has left the channel
[20:00] thejefflarson has joined the channel
[20:00] thejefflarson has left the channel
[20:01] Moominpapa: Cracked it.  utf8write is now write(,0,'utf8')  :)
[20:01] thejefflarson has joined the channel
[20:01] tlrobinson__ has joined the channel
[20:01] admc has joined the channel
[20:01] pedrobelo has joined the channel
[20:01] mjr_: bnoordhuis: -n1000 -c50
[20:02] bnoordhuis: mjr_: try setting -n to a larger value
[20:02] bnoordhuis: it's possibly node (v8) has to warm up a little
[20:02] ryah_: any awk masters here? i want the difference between the highest value in column 2 and the lowest value in column 2
[20:03] stagas: isaacs: I don't see a problem in rm-rf.js
[20:03] bnoordhuis: ryah_: i could tell you how to do that in perl
[20:03] bnoordhuis: my awk is too rusty
[20:03] isaacs: stagas: yeah, it should be pretty straightforward
[20:04] ryah_: bnoordhuis: ok
[20:04] ryah_: i'll take what i can get :)
[20:05] ryah_: i guess i could do it in node. maybe. sounds annoying though.
[20:05] stagas: isaacs: anywhere else to look?
[20:05] isaacs: stagas: in node's fs.js and node_file.cc
[20:06] rbranson: ryah_: I've got apache doing 50k r/sec with MPM worker
[20:06] yonkeltron has left the channel
[20:06] stagas: isaacs: you're not opening files down this path anywhere else?
[20:06] rbranson: on a 4-core 2.8GHz Nehalem-based ESX VM w/8GB RAM
[20:06] isaacs: stagas: nope.  once it goes to the rm machine, i assume it's dead
[20:07] isaacs: stagas: i suppose i could give it one more shot with unlinkSync on the exit handler.
[20:07] isaacs: stagas: i'm not completely comfortable with that approach, but let's see if it fixes it
[20:08] bnoordhuis: ryah_: something like this: perl -ne 'BEGIN { ($l,$h) = (0, 0) } END { print $h - $l } $x = (split(/\s+/, $_))[1]; $l = $x if $x < $l; $h = $x if $x > $h'
[20:08] stagas: isaacs: it doesn't
[20:08] mjr_: that perl would be like 20 lines of JS.
[20:08] mjr_: Maybe more.
[20:09] AutomaticPixel has joined the channel
[20:09] rbranson: and you'd be able to read it
[20:09] rcy has joined the channel
[20:09] isaacs: rbranson: reading is only important if you want to repurpose code.
[20:09] _announcer: Twitter: "Node Package Manager for node.js libraries (mentioned in @rentzsch's tweets) http://icio.us/ebog3y" -- Sujal Shah. http://twitter.com/sujal/status/2452866077818881
[20:09] bnoordhuis: rbranson: if it was hard to write, it should be hard to comprehend
[20:09] isaacs: rbranson: perl programs are tamper resistent.
[20:09] rbranson: hahaha
[20:10] rbranson: "oh no, a bug, I'm fucked" -- perl golfer
[20:10] Zeph\k0d3: more o3-canvas progress http://www.blokmodular.com/dev/test34.htm  
[20:10] _announcer: Twitter: "I DO NEED a #doctrine -like ORM for #nodejs !!! NOW !!! :D sequelize is open-sourced ! MIAM :o)" -- Stéphane Erard. http://twitter.com/StephaneErard/status/2453072538238977
[20:10] bnoordhuis: perl code has no bugs, only unexpected results
[20:10] rbranson: is perl code like chuck norris now?
[20:10] bnoordhuis: i sometimes feed the output of /dev/urandom to perl, just to see what it does
[20:10] rbranson: #PerlCodeFacts
[20:11] rbranson: $ cat /dev/random | perl
[20:11] rbranson: Unrecognized character \x03 in column 1 at - line 1.
[20:11] rbranson: :(
[20:11] bnoordhuis: yeah
[20:11] bnoordhuis: it worked better in perl 3 and 4
[20:11] rbranson: unexpected result
[20:11] rbranson: Unrecognized character \xC5 in column 3 at - line 1.
[20:11] rbranson: I got to 3 chars!
[20:12] rbranson: $ cat /dev/random | node
[20:12] rbranson: readline:44
[20:12] rbranson:     stdio.setRawMode(true);
[20:12] rbranson:           ^
[20:12] rbranson: Error: ENOTTY, Inappropriate ioctl for device
[20:12] rbranson: what a lil bitch
[20:12] rbranson: I'm filing a bug report!
[20:12] bnoordhuis: :)
[20:13] shockie has joined the channel
[20:13] bradleymeck has joined the channel
[20:13] ThePub has joined the channel
[20:14] aheckmann has joined the channel
[20:14] ryah_: at 500 concurrent clients node can beat apache pretty well.
[20:14] rbranson: keepalive?
[20:15] ryah_: no
[20:15] rbranson: that is real world yo :)
[20:15] bradleymeck: i would assume it to be better overall considering memory consumption with keepalive, not sure about speed
[20:16] margle has joined the channel
[20:16] rbranson: there is a pretty high cost for setup/teardown if you're talking about serving static <1K files
[20:18] ryah_: also keep-alive
[20:19] bnoordhuis: numbers?
[20:20] pquerna: maxclients? ram? prefork still?
[20:20] pquerna: (linux? osx?)
[20:20] programble has joined the channel
[20:21] serard has joined the channel
[20:21] serard: hello
[20:21] serard: someonw knows where I can find some doc about Connect ?
[20:21] serard: :)
[20:21] prettyrobots has joined the channel
[20:21] _announcer: Twitter: "Rate my NodeJS/YUI3 Talk: http://speakerrate.com/talks/5087-nodejs-yui3 # YUICONF" [fil] -- Dav Glass. http://twitter.com/davglass/status/2455911079616513
[20:22] _announcer: Twitter: "Considering using JavaScript throughout my next project. #nodejs #jquery" -- Ijonas Kisselbach. http://twitter.com/ijonas/status/2455994365902848
[20:22] bnoordhuis: serard: http://howtonode.org/connect-it ?
[20:23] stride: serard: in the docs folder
[20:24] stride: http://senchalabs.github.com/connect/
[20:24] qFox has joined the channel
[20:26] serard: ah yes on github 
[20:26] serard: thank you :)
[20:26] serard: Some of you are using sequelize ?
[20:26] ryah_: -n 50000 -c 1000 -k. apache: max memory 27328, 8775 req/sec. node: max memory 52488, 15442 req/sec
[20:27] _announcer: Twitter: "Loving sencha! Wondering what to do with Sencha and Node.js! an amazing combo!" -- Nutrix. http://twitter.com/Nutrix_Tech/status/2457275419598848
[20:27] ryah_: (using vmstat to measure the memory)
[20:27] rbranson: 1k file?
[20:27] ryah_: 100 bytes
[20:28] tristanoneil has joined the channel
[20:28] rbranson: what's 95% and 99% times?
[20:28] tristanoneil has left the channel
[20:28] bnoordhuis: ryah_: what happens when you set -c 4?
[20:29] ryah_: https://gist.github.com/671460 btw 
[20:30] bnoordhuis: 16 lines? where's the job security in that?
[20:31] splashs has joined the channel
[20:31] rbranson: for apache2 I'm getting 66828 max, 40,194 r/sec
[20:31] _announcer: Twitter: "@peterc will be interested to hear about the node.js stuff too" -- revolveweb. http://twitter.com/revolveweb/status/2458369424097280
[20:31] rbranson: ab is ran from a different box too
[20:32] rbranson: runs over a physical switch
[20:32] rbranson: Intel(R) Xeon(R) CPU           X5670  @ 2.93GHz
[20:32] rbranson: four of those
[20:32] a0n has joined the channel
[20:32] ryah_: bnoordhuis: node: 11176kb, 2594 req/sec. apache: 12060kb, 2687 req/sec
[20:32] rbranson: (cores)
[20:32] yhahn has joined the channel
[20:34] rbranson: it's nowhere near network limited too, because I get roughly the same perf out of 1k files
[20:34] rbranson: actually seems to be faster on 1k files
[20:34] dioms has joined the channel
[20:34] rbranson: pretty consistent 42k r/s on 1k
[20:34] rbranson: 53,753 kb/sec
[20:34] jetienne has joined the channel
[20:35] ryah_: rbranson: i'm 
[20:35] ryah_: model name      : Intel(R) Core(TM) i7 CPU       M 620  @ 2.67GHz
[20:35] ryah_: * 4
[20:36] rbranson: https://gist.github.com/671466
[20:36] rbranson: that's Apache config
[20:36] Lorentz: You people and your fancy xeon this and i7 that
[20:36] rbranson: MUST BE THE XEON
[20:37] ryah_: anyway. not done with the benchmark in time for my presentation :)
[20:37] ryah_: dang.
[20:38] MikhX has joined the channel
[20:39] adhipg has joined the channel
[20:39] aconbere has joined the channel
[20:43] deepthawtz has joined the channel
[20:43] davidc_ has joined the channel
[20:44] sh1mmer has joined the channel
[20:45] _announcer: Twitter: "Socket.io 0.6.1 came out, checkout features and how to updae: http://bit.ly/aryjp4 #socket.io #nodejs" -- Federico M. Rinaldi. http://twitter.com/soyfedex/status/2461925300506624
[20:46] aho has joined the channel
[20:46] siculars has joined the channel
[20:47] rbranson: 10,815 r/s for -c 4
[20:47] rbranson: 99% request time was 1ms :O
[20:48] ryah_: :)
[20:48] _announcer: Twitter: "What the NodeJS: http://bit.ly/cVL5N0" -- Jaime Bueza. http://twitter.com/jbueza/status/2462730665590784
[20:49] rbranson: the bot is ridiculous now
[20:50] ajsie: oh there will be a node.js book
[20:50] ajsie: yay =)
[20:51] rbranson: ryah_: were you using threaded MPM ?
[20:52] shockie has joined the channel
[20:52] ryah_: rbranson: is that 'worker' ?
[20:52] micheil: isaacs: I think you meant DWTFUPL, no?
[20:52] rbranson: yeah, worker, sorry
[20:52] micheil: isaacs: not DWTFPL
[20:52] ryah_: i think i was using prefork
[20:52] ryah_: i'm not sure though
[20:52] micheil: ajsie: there's actually two in writing at the moment, iirc.
[20:53] rbranson: $ apache2 -V
[20:53] ajsie: micheil: i hope they are relased soon
[20:53] rbranson: Server MPM:     Worker
[20:53] ryah_: i'm not sure what it defaults to
[20:53] zemanel_ has joined the channel
[20:53] ajsie: its good to know Node.js in detail levels
[20:53] micheil: ajsie: probably not likely, you're average book takes between 6months and a year to write..
[20:53] ryah_: prefork
[20:53] ajsie: :(
[20:53] ryah_: i.e. processes
[20:53] rbranson: o prefork is real slow / memory hoggin'
[20:53] sh1mmer has joined the channel
[20:53] ryah_: ok
[20:54] ajsie: but should't books be more like ebook
[20:54] rbranson: are you on ubuntu?
[20:54] ryah_: rbranson: yeah, but i installed from source
[20:54] rbranson: ah
[20:54] ajsie: like the couchdb book .. cause its always changing
[20:54] rbranson: the apache2-mpm-worker package will install it system-wide
[20:54] ajsie: you release a paper book and some weeks afterwards it will need to be updated
[20:55] ajsie: better with online books ... that you could pay for to read .. just an account needed
[20:55] aubergine has joined the channel
[20:57] ryah_: pquerna: /home/ryan/src/httpd-2.2.17/server/mpm/experimental/event/event.c:1453: undefined reference to `ap_thread_stacksize'
[20:57] rbranson: :O
[20:57] bartt has joined the channel
[20:57] micheil: ajsie: it's just that writing anything of length takes time, especially with full time jobs and such
[20:57] ajsie: yeah
[20:57] rbranson: I set EnableMMAP off and now I'm getting 45,237 r/sec with 1000 connections/100 bytes
[20:58] bnoordhuis: ryah_: event or worker?
[20:58] tilgovi has joined the channel
[20:58] ryah_: bnoordhuis: event
[20:58] MikhX has joined the channel
[20:59] bnoordhuis: ryah_: try worker
[20:59] ryah_: also worker. 
[20:59] bnoordhuis: yeah?
[20:59] bnoordhuis: is this on os x?
[20:59] ryah_: i wonder if my apr lib is old or something.
[20:59] ryah_: bnoordhuis: linux
[20:59] bnoordhuis: probably
[20:59] bnoordhuis: are you compiling against the distro's libapr?
[21:00] ajsie: where can i follow node.js progressions and talks
[21:00] ajsie: any twitter channel? or blogs?
[21:00] StanAngeloff has joined the channel
[21:01] bnoordhuis: ryah_: what happens with `./configure --with-included-apr` ?
[21:01] _announcer: Twitter: "A New Abode for Node - http://bit.ly/9BvS1L #nodejs" -- Dave O'Flanagan. http://twitter.com/daveof/status/2465852104384512
[21:01] rbranson: hmm, it isn't even using Sendfile
[21:02] pquerna: ryah_: add --with-included-apr
[21:03] tjgillies: does crypto lib only verify using certificate or can you verify with a public key?
[21:03] rbranson: -rw-r----- 1 root adm 220632140 2010-11-10 15:02 /var/log/apache2/access.log
[21:03] rbranson: :O
[21:04] bnoordhuis: tjgillies: i
[21:04] bnoordhuis: fucking laptop keyboard
[21:04] splashs: anyone make a irc node.js client yet
[21:05] bnoordhuis: what i was going to say: i'm 95% sure it follows the certificate chain
[21:05] _announcer: Twitter: "@johancowe and yui and jquery and mootools and node.js cos they're all awesome frameworks" -- Jef Waumans. http://twitter.com/jaav/status/2466858619904001
[21:05] gkatsev: splashs: there are several clients/servers already available via npm and stuff.
[21:05] splashs: splashs: npm link
[21:05] splashs: ?
[21:05] yeevgen` has joined the channel
[21:06] tjgillies: wonder why crypto lib uses cert for verify wheras most other libraries use public key
[21:06] tjgillies: crypto libararies in other languages rather
[21:06] gkatsev: splashs: https://github.com/ry/node/wiki and search for IRC
[21:07] tlrobinson_ has joined the channel
[21:08] bnoordhuis: tjgillies: don't know, but it's what openssl more or less defaults to
[21:08] serard: Hey, I'm trying to app.use(express.jsonrpc()); within the app.configure function, and I get this : TypeError: Object #<an Object> has no method 'jsonrpc'
[21:08] tjgillies: gotcha
[21:09] _announcer: Twitter: "@ Jpadilla_ Node.js New book: http://fwd4.me/g7G" [es] -- Victor Sánchez. http://twitter.com/juaniquillo/status/2467909322412032
[21:09] malkomalko has joined the channel
[21:12] _announcer: Twitter: "implementing models in Javascript and PHP is exhausting. Considering nodejs..." -- Andrioid. http://twitter.com/andrioid/status/2468560353894400
[21:13] tlrobinson__ has joined the channel
[21:14] cardona507 has joined the channel
[21:15] _mythz has joined the channel
[21:16] Jonasbn_ has joined the channel
[21:16] RevoOf has left the channel
[21:17] pedrobelo has joined the channel
[21:19] _announcer: Twitter: "Mucking around with node.js - this feels exciting. Interesting." -- Dan Hilton. http://twitter.com/danhilton/status/2470391398273024
[21:19] _announcer: Twitter: "Hmm... What do y'all think about the deal between Node.js and Joyent?" -- John D. Mitchell. http://twitter.com/johndmitchell/status/2470415859458048
[21:20] _announcer: Twitter: "@johndmitchell You do realise the Joyent has been paying Ryan to developer node.js for about more then the past year or so?" -- Micheil Smith. http://twitter.com/miksago/status/2470737478684672
[21:20] TheEnd2012_ has joined the channel
[21:21] micheil: or for quite some period of time at any rate.
[21:22] serard: Someone here is using connect and express ? I have a problem with app.use(express.jsonrpc())
[21:22] serard: and others :)
[21:23] slaskis: serard: does app.use(app.jsonrpc()) work?
[21:23] micheil: hmm, someone might be, but I can't see either TJ or tim about..
[21:24] serard: slaskis, no :/
[21:24] serard: slaskis, no :/
[21:25] slaskis: serard: doesn't look like jsonrpc is in connect anymore? https://github.com/senchalabs/connect/tree/master/lib/connect/middleware/
[21:25] slaskis: i've noticed the docs are a bit old before when i used it
[21:26] micheil: hmm.. It just occurred to me that I don't know TJ by a first name.. :P
[21:26] slaskis: serard: oh, it's here https://github.com/visionmedia/connect-jsonrpc
[21:27] micheil: you may need to install that as a separate npm module then?
[21:27] Yuffster has joined the channel
[21:28] _announcer: Twitter: "@timoreilly node.js talk just finished at TechMeetup Edinburgh." -- michael fourman. http://twitter.com/mp4man/status/2472622398902273
[21:28] serard: okay tahnk you ! :)
[21:29] mikeal has joined the channel
[21:33] amrnt has joined the channel
[21:34] Zeph\k0d3 has joined the channel
[21:34] _announcer: Twitter: "compiling node.js on pogoplug micro linux box.. love this fanless 90$ linux box!" -- Patrice Girard. http://twitter.com/PatriceGirard/status/2474150832640000
[21:34] amrnt has left the channel
[21:35] FLYBYME: haha nodes going to save palm http://www.youtube.com/watch?v=KxHLdrCYm4k
[21:37] lmorchard: Having tried to write services in Java on webOS, I for one welcome a node-powered smartphone
[21:38] omarkj has joined the channel
[21:38] saikat has joined the channel
[21:39] _mythz has left the channel
[21:39] dnolen has joined the channel
[21:42] tmedema has joined the channel
[21:42] _announcer: Twitter: "good talk on nodejs by it's author ... also a good info on event driven vs process/thread execution http://yhoo.it/aKhF1N" -- deserat. http://twitter.com/deserat/status/2476126815387648
[21:43] nolan_d: If I have two objects of the form {approved: true} and I want to see if they are equal, how would I do that?
[21:43] nolan_d: Creating two variables of the form {approved: true} and doing a == b or a === b doesn't work.
[21:43] cloudhead has joined the channel
[21:44] atmos has joined the channel
[21:44] brianmario has joined the channel
[21:46] isaacs: nolan_d: right, because they're actually different objects.
[21:46] isaacs: nolan_d: check out node's lib/assert.js, and look for the "deepEqual" function
[21:46] nolan_d: Thanks.
[21:47] jspiros has joined the channel
[21:48] _announcer: Twitter: "HP's mobile webOS 2.0 includes node.js #javascript runtime env. (and of course #cpp)  - http://bit.ly/cC8u7K" -- marek krajewski. http://twitter.com/mrkkrj/status/2477643882561537
[21:49] cardona507 has joined the channel
[21:49] dmcquay has joined the channel
[21:50] dmcquay has joined the channel
[21:50] xla has joined the channel
[21:51] jakehow has joined the channel
[21:51] [[zz]] has joined the channel
[21:53] ngw has joined the channel
[21:53] rpflo has joined the channel
[21:54] dgathright has joined the channel
[21:55] saschagehlich has joined the channel
[21:58] hassox has joined the channel
[21:59] _announcer: Twitter: "Node.js talk and Zynga. Pretty sweet" [fil] -- Justin Wickett. http://twitter.com/jwickett/status/2480403877199872
[21:59] _announcer: Twitter: "Evening well spent; WebSocket servertje made Node.js and associated client in html / javascript. Works pretty good!" [nl] -- Dave de Fijter. http://twitter.com/fijter/status/2480562497392640
[22:01] _announcer: Twitter: "Going to try out node.js this week, put my free AWS services to use." -- James Rodrigues. http://twitter.com/JamesWatch/status/2480946540445696
[22:01] _announcer: Twitter: ".@miksago Legally, it does since Joyent will get all of the assignments of contributions to node.js." -- John D. Mitchell. http://twitter.com/johndmitchell/status/2481041134592000
[22:02] bjy has joined the channel
[22:03] evanmeagher has joined the channel
[22:05] eee_c has joined the channel
[22:08] bentruyman has joined the channel
[22:09] Utkarsh has joined the channel
[22:11] creationix has joined the channel
[22:11] micheil: afternoon' creationix 
[22:11] softdrink: grrrrrr i wish i could instantiate Node objects in browserland
[22:12] robotarm_ has joined the channel
[22:12] Gruni has joined the channel
[22:12] creationix: micheil: hey
[22:12] creationix: I can't believe the license debate is still raging
[22:12] micheil: it's bound to be.
[22:12] _announcer: Twitter: "@ Martijngorree look, I must also get to work; NodeJS works somewhat finer with NoSQL as a ref. DB." [nl] -- Dave de Fijter. http://twitter.com/fijter/status/2483804035878913
[22:12] _announcer: Twitter: "playing /w beanstalkd & nodejs ..." -- Régis Gaidot. http://twitter.com/rgaidot/status/2483814395809792
[22:12] micheil: see my reply to yours tyhough
[22:13] creationix: nice
[22:14] micheil: haha. :P
[22:14] creationix: webOS is commited to using node, in the unlikely event that Joyent does something foolish we'll happily maintain our own version
[22:14] langworthy has joined the channel
[22:14] aconbere has joined the channel
[22:14] evanmeagher: the thread is turning into quite the shitstorm.
[22:14] langworthy has joined the channel
[22:14] micheil: creationix: and really, it'd be negative for joyent's business to change licensing
[22:15] creationix: there are valid concerns, but it's not much new
[22:15] micheil: as their business isn't in necessarily creating products, but in hosting
[22:15] jtsnow_ has joined the channel
[22:18] matjas has joined the channel
[22:19] Utkarsh has joined the channel
[22:22] _announcer: Twitter: "@izs no e4x in node? $ node foo.js   /Users/trentm/tmp/foo.js:1 s = &lt;x&gt;     ^ SyntaxError: Unexpected token &lt;" -- trentmick. http://twitter.com/trentmick/status/2486205388161025
[22:23] adambeynon has joined the channel
[22:24] Gruni has joined the channel
[22:25] robotarm_ has joined the channel
[22:25] ShiZWeaK has joined the channel
[22:25] c4milo has joined the channel
[22:26] yeevgen has joined the channel
[22:27] atmos has left the channel
[22:28] yeevgen has joined the channel
[22:30] eee_c has joined the channel
[22:31] Utkarsh has joined the channel
[22:32] sriley has joined the channel
[22:32] pquerna: the thread needs to be split.
[22:32] pquerna: joyent is evil in one, CLA language in another, and patents in a third.
[22:32] AutomaticPixel has joined the channel
[22:33] creationix: joyent is evil?
[22:33] creationix: (you can ignore my troll-bait)
[22:33] creationix: pquerna: agreed on splitting the thread
[22:34] mjr_: Another easy option is to not read the node list until you've had a few beers and don't care as much.
[22:34] omarkj: I guess I need to do some catchup on the mailing lists to read up on the joynet news I've been hearing about..
[22:34] Moominpapa: Makes a nice change from google/facebook/microsoft/apple is evil, I guess.
[22:35] mraleph1 has joined the channel
[22:35] _announcer: Twitter: "node.js and YUI3 on server-side http://bit.ly/aTxGzx &lt;- "cool stuff !" !" -- Stéphane Erard. http://twitter.com/StephaneErard/status/2489553717825536
[22:35] TheEnd2012 has joined the channel
[22:37] panpainter has joined the channel
[22:38] serard: :D just watched the video from Dav Glass, pretty amazing !
[22:38] panpainter has joined the channel
[22:38] frodenius: serard: where to watch?
[22:39] frodenius: oh, got it
[22:41] digitalsatori has joined the channel
[22:42] johan_bouveng: would this be the correct way to create unique index, using mongoose? http://pastie.org/1288401
[22:43] sonnym has joined the channel
[22:44] Zeph\k0d3: node o3-canvas progress -> http://www.blokmodular.com/dev/test35.htm  (compare to http://www.blokmodular.com/dev/graphics-tests-in-browser.html )
[22:44] brianmario has joined the channel
[22:44] Zeph\k0d3: shadow renderer is taking shape
[22:45] _announcer: Twitter: ".@davidpaulyoung Much better proof would be creating a non-profit foundation and put the ownership/control of Node.js into that. #node" -- John D. Mitchell. http://twitter.com/johndmitchell/status/2492139715956737
[22:48] a0n has joined the channel
[22:49] Utkarsh has joined the channel
[22:50] serard: If I want to bench, what is best soft to use ?
[22:50] bnoordhuis: serard: what do you want to bench?
[22:51] vnguyen has joined the channel
[22:51] serard: Well I have no clear idea right now. Would be great to bench req/sec
[22:52] bnoordhuis: serard: that's rather vague
[22:52] bnoordhuis: what kind of application is it?
[22:52] bnoordhuis: web app or something else?
[22:53] serard: web app yes
[22:53] serard: sorry for being vague, just would like to compare my simple node.js web app with a symfony one
[22:53] bnoordhuis: ab or pound then
[22:54] serard: ab ? apache somethign ?
[22:54] bnoordhuis: apache benchmark
[22:54] bnoordhuis: but it's actually a generic http benchmark
[22:54] serard: got it
[22:54] phiggins has joined the channel
[22:54] Zeph\k0d3: if you really want to stresstest your app you'll have to record usage patterns
[22:54] Zeph\k0d3: and simulate users
[22:55] Zeph\k0d3: otherwise you might just be testing your welcome page
[22:55] _announcer: Twitter: "Reading http://ydn.zenfs.com/blogs/1/up-and-running-with-node-preview.pdf #nodejs /thx @karlpro" -- David Larlet. http://twitter.com/davidbgk/status/2494633602981888
[22:55] rwaldron has joined the channel
[22:55] serard: and workflows, and so on. Got it. This is just to put some things when I'll present node.js and my work on it to my n+1. Thank you all :)
[22:56] tj has joined the channel
[22:57] alexfner has joined the channel
[22:57] bradleymeck: lol the awesome drawing are back in that book
[22:59] miccolis has joined the channel
[22:59] matt_c has joined the channel
[23:00] mikeal has joined the channel
[23:03] Utkarsh has joined the channel
[23:04] tj: is npm fucked up right now?
[23:04] tj: nvm
[23:06] twoism has joined the channel
[23:08] justin_ has joined the channel
[23:09] devinus has joined the channel
[23:10] jashkenas has joined the channel
[23:10] aconbere has joined the channel
[23:10] _announcer: Twitter: "Check out Node.js on Meetup http://meetu.ps/4nBT" -- Cagdas Tulek. http://twitter.com/ctulek/status/2498371294072833
[23:11] ben_alman has joined the channel
[23:11] Utkarsh has joined the channel
[23:17] mikeal has joined the channel
[23:19] twoism has joined the channel
[23:21] admc_ has joined the channel
[23:23] jakehow has joined the channel
[23:24] atmos has joined the channel
[23:24] atmos: anyone know if any good proxy examples ?
[23:25] atmos: i have a functional image proxy going but i'm sending data back on each chunk received instead of all at once
[23:25] davidascher has joined the channel
[23:25] atmos: when the user sees it, it feels like late 90s internets
[23:26] _announcer: Twitter: "@ HornedKavu nodeJS put until then" [ru] -- Sokolov Ilya. http://twitter.com/Flcn/status/2502308067811328
[23:27] richcollins has joined the channel
[23:27] hocamcom has joined the channel
[23:29] jxh has joined the channel
[23:30] mjr_: atmos: the simple and obvious proxy by writing a chunk when you receive a chunk usually works pretty well
[23:30] mjr_: Or even doing util.pump()
[23:30] jacobolus has joined the channel
[23:31] davida has joined the channel
[23:32] atmos: it's not using pump, it's basically making an http connection and writing the data back to the client as it receives it
[23:32] atmos: on the 'data' event
[23:33] intacto has joined the channel
[23:34] sivy has joined the channel
[23:35] mitchellhislop has joined the channel
[23:36] sanduz2 has joined the channel
[23:37] davidascher has joined the channel
[23:37] johan_bouveng: any one used mongoose?
[23:38] sriley has joined the channel
[23:40] sanduz2: sorry for the dumb question, but is node.js supposed to replace a server side scripting language? or is it meant to be used along with one? and are you meant to use client side javascript with it? and why did they use javascript to make this instead of something like python? just curious
[23:41] SubStack has joined the channel
[23:43] guybrush: you can use node.js along with other languages as any other "language" can be used with any other "language" :D
[23:43] guybrush: what is client-side javascript?
[23:43] guybrush: node.js is built upon v8
[23:43] creationix: sanduz2: node is a server-side javascript
[23:43] bradleymeck: any of those, and basically python's principle of *least* surprise is often surprising, so i hope to never use built in functions in python
[23:43] creationix: sanduz2: it replaces both ruby/python/php and apache/nginx
[23:44] sanduz2: its a webserver too? wow
[23:44] bradleymeck: sanduz2: more appropriate, node.js is very good at serving streams of data in an efficient way, and being able to use code on both server and client for business logic
[23:44] creationix: sanduz2: it can do much more than http
[23:44] creationix: that's just the most popular use case
[23:44] creationix: but your node app *is* the http server
[23:45] sanduz2: interesting stuff
[23:45] creationix: (or irc server or any protocol really)
[23:45] creationix: or just a client
[23:45] creationix: or shell scripting
[23:45] guybrush: i think ryan has choosen javascript because it fits the evented-programming very well
[23:45] creationix: anything you can do with C on a server can be done with node
[23:45] halfhalo_: havascript ftw
[23:46] [[zz]] has joined the channel
[23:46] robotar__ has joined the channel
[23:46] mitchellhislop: I just got into node today, and it is seriously amazing. Just want to give yall big ups, and that I will be hanging around here a bit. I also write RoR/PHP/Python
[23:46] creationix: well, anything that limited to the OS bindings
[23:46] creationix: mitchellhislop: :)
[23:47] creationix: guybrush: javascript has closures
[23:47] creationix: those are SUPER useful for event programming
[23:47] stride: we should implement inline assembler.. :>
[23:47] creationix: if C had them, node would probably not exist
[23:48] creationix: though the high-level GC is nice too
[23:48] creationix: till it bites you
[23:48] sanduz2: so if node is so amazing (sounds like it), why would someone choose to use something like php or python?
[23:48] _announcer: Twitter: "Awesome! Reading data from a photo resistor on my arduino using node.js :D" -- Adam Holt. http://twitter.com/adamholt/status/2507862064496640
[23:48] sivy_ has joined the channel
[23:48] creationix: sanduz2: node doesn't allow blocking I/O
[23:48] creationix: this is both good and bad
[23:48] creationix: good in that it forces a generally good style of writing servers
[23:48] creationix: bad in that it's harder to write code
[23:48] sanduz2: i see
[23:49] creationix: and it's still quite new
[23:49] creationix: but it's maturing fast
[23:49] sanduz2: so this javascript v8 its built upon is supposed to be way faster than python i assume
[23:49] creationix: sanduz2: yeah, the VM is pretty fast
[23:49] _announcer: Twitter: "Backbone.js + Underscore.js + jQuery + Node.js + node-eventstream would be amazing!" -- Daniel Erickson. http://twitter.com/TechWraith/status/2508252000559104
[23:50] creationix: but the blocking vs nonblocking part matters a LOT more for I/O bound servers
[23:50] guybrush: it is mainly faster because it forces evented programming - so when doing evented python you will catch up to node (isnt it?)
[23:50] davidascher has joined the channel
[23:50] isaacs: guybrush: put node next to twisted.  it's faster in all the benchmarks i've seen.
[23:51] isaacs: guybrush: and there are still huge obvious areas for improvement in node.
[23:52] guybrush: isaacs: good to know, and it's nice to have areas for improvement
[23:52] isaacs: yep.
[23:52] isaacs: there are a few cases where node just falls over.
[23:52] isaacs: pushing around really big strings sucks.
[23:52] bradleymeck: pypy + twisted does fair in benchmarks
[23:52] sanduz2: so people dont really use node for regular websites like sourceforge but instead for something with crazy i/o like omegle?
[23:52] isaacs: writing a lot of tiny messages kinda sucks (ry's working on that right at the moment, actually)
[23:52] isaacs: ssl sucks
[23:52] isaacs: (pquerna's making that awesome)
[23:53] sivy has joined the channel
[23:54] guybrush: cant wait for that
[23:54] guybrush: and this streaming api is not done 100% yet
[23:55] davidascher has joined the channel
[23:55] isaacs: also, apparently you can corrupt files if you write too fast.
[23:55] mitchellhislop: So, I hate to noob it up, but is there one source for learning that has risen to the top yet, or am I going to read the API docs tonight and figure it out?
[23:55] isaacs: piling up a few million eio_write calls does bad things
[23:55] isaacs: not sure if ryah_'s writev patch will fix that
[23:55] isaacs: mitchellhislop: the api docs are good, and http://howtonode.org is awesome
[23:55] guybrush: mitchellhislop: i recommend to take a look into connect https://github.com/senchalabs/connect
[23:56] mitchellhislop: Sweet. Found how to node eariler today, and it was insta-googlereadered
[23:56] mitchellhislop: guybrush: Will do
[23:57] guybrush: somehow everyone is talking about "middleware", I didn't hear that term before i come in touch with node
[23:57] guybrush: i guess creationix came up with that
[23:57] _announcer: Twitter: "Just got out of Dhal's Node.JS lecture. Pretty soon you won't need much training to build some powerful server tech. Kinda scary." -- malectro. http://twitter.com/malectro/status/2510153286946817
[23:57] ThePub has joined the channel
[23:57] malkomalko has joined the channel
[23:58] _announcer: Twitter: "express # nodeJS library for quite a fully. sinatra style" [ru] -- Sokolov Ilya. http://twitter.com/Flcn/status/2510347076370432
[23:58] bradleymeck: guybrush no, its an old term, just you need to frequent stack based frameworks more
[23:58] isaacs: guybrush: it's been around for a long time.  at least psgi
[23:58] tj: guybrush: middleware is all over lol rack (ruby) for example
[23:59] isaacs: tj: it dates back to at least perl
[23:59] tj: ya im sure it does
[23:59] guybrush: that makes sense, didn't do any ruby
[23:59] creationix: ACTION did not invent middleware
[23:59] creationix: I learned it from pylons of all places
[23:59] isaacs: and, actually, there's a concept of "middleware" in the enterprisey worlds, where it's a completely different and awefuller term
[23:59] creationix: and then lots of ruby rack
