[00:00] AAA_awright: Aikar: ftw
[00:01] AAA_awright: Well minus lyrics, I don't mind vocals but only simple stuff
[00:01] AAA_awright: >:(
[00:02] tpryme has joined the channel
[00:02] eml-mobile has joined the channel
[00:02] itissid: Lol no offence to aikar but i remembered http://xkcd.com/411/
[00:03] Aikar: yes techno is very much like that, but trance != techno ;)
[00:03] Aikar: well not all of it
[00:03] itissid: Hmm
[00:03] Aikar: like the current song playong on VTrance? yeah
[00:04] Aikar: but alot of my favorites are not like that
[00:05] Aikar: i really prefer vocals, stuff like AVB In And Out of Love with Sharon Adel(sp?), ATC All Around the World, Andain - Beautiful Things
[00:05] AAA_awright: Polar opposites. Techno sucks. Don't ever compare it to trance.
[00:06] AAA_awright: Additional overgeneric statement.
[00:06] Aikar: but AVB and Tiestos trance songs are so damn good you can deal w/o vocals on the non vocal ones ;)
[00:06] Aikar: i hate i keep missing Tiesto when hes in the states :(
[00:07] Aikar: he wont be back again for well over a year ; ;
[00:08] langworthy has joined the channel
[00:08] JimBastard: okay, wtf
[00:08] JimBastard: twitter, wtf
[00:09] losing has joined the channel
[00:09] JimBastard: some spammer twitter network is promoting nodejitsu, wtf
[00:09] JimBastard: ?!?!?!
[00:09] JimBastard: http://twitter.com/#search?q=nodejitsu
[00:09] JimBastard: i dont understand this
[00:09] pdelgallego has joined the channel
[00:10] Anti-X has joined the channel
[00:10] lstrojny_ has joined the channel
[00:11] ashleyde1 has joined the channel
[00:12] cardona507 has joined the channel
[00:12] lmorchard has joined the channel
[00:13] jesusabdullah has joined the channel
[00:13] jarfhy has joined the channel
[00:17] prettyrobots has joined the channel
[00:19] twoism has joined the channel
[00:23] romanb has joined the channel
[00:23] unomi has joined the channel
[00:28] kawaz_work has joined the channel
[00:28] rwaldron_ has joined the channel
[00:28] mikew3c has joined the channel
[00:30] eml-mobile has joined the channel
[00:30] MattDiPasquale has joined the channel
[00:30] dgathright has joined the channel
[00:33] dguttman has joined the channel
[00:36] ossareh has joined the channel
[00:41] InsDel has joined the channel
[00:41] davidc_ has joined the channel
[00:41] jchris1 has joined the channel
[00:43] eml-mobile has left the channel
[00:43] jacobolus has joined the channel
[00:45] mattly has joined the channel
[00:47] jherdman has joined the channel
[00:48] softdrink has joined the channel
[00:51] jashkenas has joined the channel
[00:56] abiraja has joined the channel
[00:58] hornairs has joined the channel
[00:59] bradleymeck1 has joined the channel
[01:04] jakehow has joined the channel
[01:04] derferman has joined the channel
[01:05] prettyrobots has joined the channel
[01:06] Booths has joined the channel
[01:06] hoffa_ has joined the channel
[01:07] unomi has joined the channel
[01:08] googol has joined the channel
[01:12] tekky has joined the channel
[01:12] zhesto has joined the channel
[01:13] webr3: https://github.com/webr3/xhr - new XMLHttpRequest lib for node if anybody needs one
[01:17] cjmFloating has joined the channel
[01:18] softdrink has joined the channel
[01:21] mikeal has joined the channel
[01:25] mbrochh has joined the channel
[01:25] mbrochh has joined the channel
[01:27] spetrea_ has joined the channel
[01:28] matthewfl has joined the channel
[01:33] deepthawtz has joined the channel
[01:34] mikew3c_ has joined the channel
[01:35] Ond has joined the channel
[01:37] Yuffster has joined the channel
[01:38] isaacs: npm v0.2.10!!!
[01:38] isaacs: published finally!!
[01:38] bradleymeck1: oh great googly moogly~
[01:41] rbranson: that thang is juicy
[01:48] dguttman has joined the channel
[01:48] jed___ has joined the channel
[01:49] googol has joined the channel
[01:49] joshskidmore has joined the channel
[01:50] kenbolton has joined the channel
[01:51] isaacs: rbranson: what's juicy?
[01:54] jakehow has joined the channel
[01:55] zomgbie has joined the channel
[02:00] Akufen has joined the channel
[02:00] Akufen has joined the channel
[02:01] kenbolton has joined the channel
[02:06] nooder has joined the channel
[02:06] EyePulp has joined the channel
[02:07] airhorns has joined the channel
[02:13] saikat has joined the channel
[02:18] Fenda has joined the channel
[02:19] mattly has joined the channel
[02:19] Fenda: morning. i'm trying to force flashsocket transport for io:socket, but my browser is still reverting to websocket. var io = io.listen(server, {transports: ['flashsocket']});
[02:22] softdrink has joined the channel
[02:23] brianmario has joined the channel
[02:23] MattDiPasquale has joined the channel
[02:27] softdrink has joined the channel
[02:31] maushu: Hmm, better to use non-REST json so that I can use websockets later for my webservice.
[02:32] agnat_ has joined the channel
[02:34] aconbere has joined the channel
[02:34] JimBastard has joined the channel
[02:35] JimBastard: lol, i found out the worst thing about node.js, my internet stalker
[02:35] JimBastard: http://www.reddit.com/r/programming/comments/e9s19/the_worst_thing_about_nodejs_douchebaggery/
[02:36] joshskidmore has joined the channel
[02:36] derferman has joined the channel
[02:38] themiddleman has joined the channel
[02:42] prettyrobots has joined the channel
[02:57] nbqx has joined the channel
[03:00] bartt has joined the channel
[03:05] Athox has joined the channel
[03:09] MikhX has joined the channel
[03:11] isaacs has joined the channel
[03:12] Arro has joined the channel
[03:12] Arro: can anyone recommend a node.js testing framework?
[03:13] Arro has left the channel
[03:14] Arro has joined the channel
[03:20] saikat has joined the channel
[03:20] AAA_awright: Vows
[03:21] guybrush: isaacs: didn't know that npm takes care of sha hashes now, nice - also didn't know that `npm version` talks to git
[03:21] romanb has joined the channel
[03:21] guybrush: sweet
[03:22] mikew3c_ has joined the channel
[03:23] guybrush: currently I am deploying nearly everything with git (and lots of submodules), I think about deploying with npm with node_modules
[03:24] langworthy has joined the channel
[03:27] yumike has joined the channel
[03:32] wattz: evening
[03:35] Ond: That's a guarantee.
[03:36] elijah-mbp has joined the channel
[03:37] paulwe has joined the channel
[03:39] kenbolton has joined the channel
[03:41] logger__ has joined the channel
[03:42] mbrochh has joined the channel
[03:43] logger__: Just saw this on Reddit. Kind of damning stuff
[03:43] logger__: http://www.reddit.com/r/programming/comments/ebge2/code_thief_at_large_marak_squires_jimbastard/
[03:45] paulwe has joined the channel
[03:47] gf3 has joined the channel
[03:51] cheney has joined the channel
[03:52] AAA_awright: Short of running off with the only CD containing it I don't think you can steal code (lol)
[03:54] mw has joined the channel
[03:54] dgathright has joined the channel
[04:01] dgathright has joined the channel
[04:01] noahcampbell has joined the channel
[04:02] jchris1 has joined the channel
[04:03] rcy has joined the channel
[04:04] mattly has joined the channel
[04:05] mikeal has joined the channel
[04:07] wasabist has joined the channel
[04:09] micheil_mbp has joined the channel
[04:10] cjmFloating has joined the channel
[04:11] evlapix has joined the channel
[04:12] muk_mb: any of you worked with conditional GET? Connect seems to support it, but I'm not sure how to make use of it
[04:12] isaacs: guybrush: those are *very* new features
[04:12] evlapix: All of a sudden I start Socket.IO, and it goes crazy with Initializing "xhr-polling" messages. Without my client connecting!
[04:13] wattz: interesting, Node basically handles the require method in pure js (close to it)
[04:13] mikeal: i don't know of a commonjs implementation that isn't in pure js outside of the file reader code
[04:14] wattz: yeah
[04:14] wattz: well none listed
[04:14] wattz: sometimes for fun, i enjoy reading code :P
[04:15] masahiroh has joined the channel
[04:15] evlapix: So, if i change the port number it doesn't wig out about xhr. 
[04:15] wattz: also wrapping with a function closure
[04:15] evlapix: Maybe there's a roque client hitting 8080. 
[04:15] wattz: evlapix: are you on linux/mac/unix?
[04:16] evlapix: wattz: OS X. 
[04:16] wattz: evlapix: ps aux, i bet your process never closed completely, or was completely closed down when you tried again
[04:18] wattz: that was an awesome sentence
[04:19] evlapix: wattz: Strange.. you must be right. There's no node processes running. When I revert back to 8080, all quiet. 
[04:19] wattz: yeah, i ran into that a bit
[04:19] evlapix: wattz: I know I'm not crazy though.. I restarted that damn process a dozen times. 
[04:19] wattz: yeah
[04:19] wattz: i did the same
[04:20] evlapix: Well, knowing you're sane is comfort enough. Thanks.
[04:20] wattz: haha
[04:20] wattz: np
[04:21] yumike has joined the channel
[04:22] evlapix: wattz: I jumped the gun. It's my client.
[04:22] wattz: ahh
[04:22] mikeal: don't jump guns, you'll get shot!
[04:24] evlapix: Restarting Chromium. I refuse to accept that I did anything to instigate this.. 
[04:24] trevoro has joined the channel
[04:26] prettyrobots has joined the channel
[04:26] softdrink has joined the channel
[04:27] micheil: tim_smart: you about?
[04:30] dguttman has joined the channel
[04:31] prettyrobots has joined the channel
[04:31] Aikar: rauchg_: you here?
[04:32] rauchg_: Aikar: 
[04:32] isaacs: wattz, mikeal: well, it's only "pure js" if you ignore the custom compile method
[04:32] Aikar: how come you need a client to do a broadcast to all connections in socket.io, the listener doesnt have one from what im reading on the docS?
[04:32] isaacs: which could be simulated with eval, but not well
[04:32] mikeal: forgot about that
[04:33] Aikar: nvm i see it now
[04:33] Aikar: i saw it say something bout a session id
[04:33] Aikar: sorry for confusion
[04:34] twoism has joined the channel
[04:35] Aikar: rauchg_: well another question, is session ID's generated on time or anything in a way that running multiple socket.io servers for their not to be a conflict on session id on different processes?
[04:36] rauchg_: Aikar: 
[04:36] rauchg_: that's changing soon
[04:36] rauchg_: real soon
[04:36] Aikar: the session id generation?
[04:37] Aikar: cause im forking my http/websocket servers over multi process (and in future multi server) with the clients IP dictating which server to connect to, was just wondering if 2 diff users could end up with same session id
[04:38] AcidicChip has joined the channel
[04:43] meck has joined the channel
[04:43] Aria has joined the channel
[04:46] danielrmz has joined the channel
[04:46] danielrmz has joined the channel
[04:47] evlapix: Okay, I'm not sure what's going on here. I start Node with Socket.IO (everything except what's needed to run S.IO). I navigate to my client where everything else is commented out (minus S.IO sfuff). Immediately afterwards a stream of [Initializing client with transport "xhr-polling"] messages come flying in like they're on a while() loop. What the hell could this be?
[04:47] ctp has joined the channel
[04:47] evlapix: I'm using the Socket.IO cdn, stable. Should I have a reason to doubt that?
[04:48] ethzer0 has joined the channel
[04:50] ethzer0: Crypto question.
[04:50] ethzer0: console.log(crypto.createHash('md5').update("test").digest('hex'));
[04:50] ethzer0: why doesn't ^^^ produce the same output as `openssl md5 'test'`
[04:51] ossareh has joined the channel
[04:51] Aikar: > require('crypto').createHash('md5').update("test").digest('hex')
[04:51] Aikar: '098f6bcd4621d373cade4e832627b4f6'
[04:51] Aikar: php > echo md5('test');
[04:51] Aikar: 098f6bcd4621d373cade4e832627b4f6
[04:51] meck: echo -n test | openssl md5
[04:52] Aikar: looks like something is wrong with your openssl call i guess
[04:52] meck: i'm guessing a newline?
[04:52] meck: although your line doesn't work for me at all
[04:52] meck: test: No such file or directory
[04:52] ethzer0: thats what I was thinking, but it doesn't seem to be the case.
[04:53] Aria: I get the same answer with openssl
[04:53] ethzer0: ahhh nm
[04:53] ethzer0: you are correct.
[04:53] meck: do you have a file called test?
[04:53] ethzer0: issue was I wasn't echo'ing with -n
[04:53] ethzer0: no
[04:53] Aikar: looks like open ssl expects a file not a string
[04:53] Aria: Aha. Newline.
[04:54] AcidicChip: How would I go about interacting with mySQL?
[04:54] ethzer0: yep. *sigh*
[04:54] meck: :)
[04:54] ethzer0: thx :)
[04:54] Aria: AcidicChip: There's several libraries that speak the protocol.
[04:54] Aikar: AcidicChip: node api docs -> recommended modules, mysql is linked
[04:54] meck: np
[04:54] AcidicChip: thanks
[04:56] davidthings has joined the channel
[04:56] AcidicChip: found it, thanks again
[04:58] dgathright has joined the channel
[04:58] Aikar: so monday i had chinese.... my fortune cookie said "Take on a big project and doors will open for you".... Really creepy considering I just took on a big project in Node im hoping will be big and make me rich lol...
[05:00] unomi: Those doors could be to the mental asylum, mind you.
[05:00] evanmeagher has joined the channel
[05:01] Aikar: :/
[05:01] AcidicChip: If I'm using cloud9, the mysql goes in the server/ext, right? (newbie alert)
[05:02] ethzer0: A hilarious art project would be a JIT fortune cookie machine that based your fortune on what you ate.
[05:02] ethzer0: "You really shouldn't have eaten the ribs"
[05:03] Aria: ++
[05:03] zentoooo has joined the channel
[05:03] Aria: Now I want to do that. 
[05:03] Aria: Especially since fortune cookies harden ~instantly, they're perfect for the job.
[05:03] Aria: Soft while hot, and hard when cool.
[05:04] kenbolton has joined the channel
[05:05] davidthings has joined the channel
[05:05] saikat has joined the channel
[05:06] evlapix: Hey guys, heads up! The Socket.IO CDN is wonky right now. 
[05:06] wilmoore has joined the channel
[05:07] evlapix: I couldn't connect to it. It also was spinning my client out of control with xhr-polling. 
[05:07] guybrush: anyone can tell me why it says undefined_method? when calling db.find()? https://gist.github.com/713794
[05:07] guybrush: db.clear() the same
[05:07] saikat_ has joined the channel
[05:07] jchris1 has joined the channel
[05:15] paulwe has joined the channel
[05:17] mikeal has joined the channel
[05:17] davidthings has joined the channel
[05:19] yozlet has joined the channel
[05:19] richcollins has joined the channel
[05:20] richcollins: htmlparser doesn't seem to work for RSS, are there any other recommended options? 
[05:20] guybrush: sax-js
[05:20] guybrush: https://github.com/isaacs/sax-js
[05:21] richcollins: guybrush: thx
[05:22] guybrush: there is also https://github.com/maqr/node-xml2js which is built upon sax-js
[05:22] AcidicChip: I setup https://github.com/felixge/node-mysql in the cloud9/server/ext/ dir, and restarted cloud9ide, and it doesn't seem to like that, keeps erroring. Am I supposed to put it in a different location?
[05:27] jamescarr has joined the channel
[05:27] jamescarr: woot
[05:27] hornairs has joined the channel
[05:29] jimt_ has joined the channel
[05:30] dohtem has joined the channel
[05:30] dohtem has joined the channel
[05:30] richcollins: guybrush: Have you worked with sax?  I'm wondering if its possible that an error will prevent the end event
[05:31] guybrush: richcollins: yes i am currently trying to implement stuff with sax-js, but i dont quite get your question
[05:33] mikew3c_ has joined the channel
[05:36] dgathright has joined the channel
[05:42] ceej has joined the channel
[05:42] mbrochh has joined the channel
[05:45] mikeal has joined the channel
[05:46] richcollins: guybrush: There is an end event.  I was going to use this event to determine when the parser was complete
[05:46] cjmFloating has joined the channel
[05:47] richcollins: It occurred to me that an error might prevent the end event from being sent
[05:47] richcollins: in which case I'd need to determine when the parse is complete
[05:48] jamescarr has joined the channel
[05:49] tim_smart: micheil: Hey
[05:49] richcollins: ah "resume - To gracefully handle errors, assign a listener to the error event. Then, when the error is taken care of, you can call resume to continue parsing. Otherwise, the parser will not continue while in an error state."
[05:50] Aikar: ouch, SAP ordered to pay Oracle 1.3bil in damages.
[05:50] Aikar: http://arstechnica.com/tech-policy/news/2010/11/jury-gives-oracle-13-billion-in-copyright-damages-from-sap.ars
[05:51] unomi has joined the channel
[05:56] Ond: Old.
[05:56] Ond: Shouldn't they separate the one & three at least with an underscore?
[05:57] Ond: The URL is misleading.
[05:58] stalled has joined the channel
[05:58] davidascher has joined the channel
[05:59] luke`_ has joined the channel
[06:00] aconbere has joined the channel
[06:03] JimBastard has joined the channel
[06:03] JimBastard: ahaha, the internet hate machine is in full effect today
[06:04] Aikar: ?
[06:04] Aikar: what is the /b/retheren up to now
[06:06] jamescarr has joined the channel
[06:06] micheil: tim_smart: see the pm.
[06:07] mscdex: T-Co: pushed a bunch more changes if you're interested.
[06:07] T-Co: mscdex, Thanks, will take a look
[06:10] jamescarr has joined the channel
[06:12] sprout1 has joined the channel
[06:13] richcollins: I can't get htmlparser or sax to parse feedburner feeds :-/
[06:13] Athox: isaacs inspired me to shut down my linkedin profile
[06:13] Anti-X: facebook next?
[06:15] sprout has joined the channel
[06:17] mscdex: Anti-X: why is that?
[06:18] Anti-X: http://blog.izs.me/post/1667723013/linkedin
[06:18] Aria: ++
[06:18] guybrush: haha
[06:18] guybrush: i like isaacs blog ^^
[06:19] Aria: Only decent people I ever connected to on linkedin are my old boss and coworkers, who I'm on Facebook and Twitter and email and phone-calling basis with anyway.
[06:19] guybrush: never used linkedin at all, never even came to my mind
[06:21] Anti-X: i signed up like two months ago, and half the people i'd like to connect with aren't on there, only useless people (in a job sense)
[06:21] guybrush: mhm, well i heard that it was actually usefull for some guys
[06:22] guybrush: but, i dont like it
[06:23] Aria: Oh, yeah. I know niches where people make winning contacts.
[06:23] Aria: But not many.
[06:23] Anti-X: i signed up mostly because i thought i could drag a few recommendations out of some people, but then i though.. why the hell bother... recommendation schmecommendation... as isaacs says, if they wanna hire me, they'll look at my work (admittedly quite scattered and unknown), not how many friends i have
[06:24] evanmeagher: github is a vastly better resource for hiring than linkedin ever will be
[06:24] Anti-X: and i don't have a lot of friends either.. by choice i think. i like spending a lot of time alone.. sort of like a mad scientist.. not letting ignorant stupid people influence my work you know
[06:25] Anti-X: and any mad scientist will do a better job at most anything than anyone already in that job
[06:25] shirro has joined the channel
[06:25] shirro has joined the channel
[06:25] Anti-X: maybe not at once
[06:25] Anti-X: but eventually
[06:25] Anti-X: lumberjack? mad scientist will come up with something
[06:26] evanmeagher: build lumberjack robots
[06:26] Anti-X: checkout girl/boy? mad scientist will come up with something
[06:26] Anti-X: oh, news reader? mad scientist doesn't care about news.
[06:27] Anti-X: he'll make it automatic
[06:27] Anti-X: make that windows voice reader thingy read google news
[06:33] richcollins has joined the channel
[06:34] peutetre has joined the channel
[06:34] sprout1 has joined the channel
[06:35] alcuadrado has joined the channel
[06:37] [[zz]] has joined the channel
[06:37] matjas has joined the channel
[06:38] Anti-X: i'm appalled that vapor.js isn't on npm
[06:38] Anti-X: how can such a critical framework be overlooked
[06:38] Aria: There's still a one-liner to install it.
[06:38] Anti-X: touch vapor.js?
[06:39] evanmeagher: Anti-X: you can still add it as a dep with `npm bundle`
[06:39] evanmeagher: otherwise ping fuchs to add it
[06:42] eml-mobile has joined the channel
[06:44] itissid has joined the channel
[06:45] itissid: tim_smart: Are you Tim Casswell aka creationix?
[06:45] itissid: Caswell*
[06:45] muk_mb: how do I properly send back a 304 response in express?
[06:46] micheil: itissid: tim caswell is creationix
[06:46] tim_smart: itissid: Nope. I'm Tim-Smart on github.
[06:46] cjmFloating has joined the channel
[06:47] itissid: Yeah
[06:47] yumike has joined the channel
[06:47] itissid: well god knows what identity one has here.. So just asking
[06:47] micheil: and tim caswell isn't about at the moment because it's something like 11pm in SF
[06:47] itissid: Hmm
[06:48] micheil: would be my guess.
[06:48] unomi has joined the channel
[06:48] fangel has joined the channel
[06:48] itissid: Well knit village this place is... every one knows every one i guess..
[06:48] micheil: itissid: yeah, the various core contributors do tend to know each other pretty well
[06:49] itissid: Actualy wanted to ask him a question about his blog http://howtonode.org/prototypical-inheritance
[06:49] itissid: Any one can answer ths one
[06:50] omni5cience has joined the channel
[06:50] itissid: he says in teh section Prototypal OOP that I don't like the new keyword, it overloads the meaning of functions and is dangerous. If we were to say frank = Person("Frank"), then this inside the function would now be the global this object, not the new instance!
[06:51] evanmeagher: muk_mb: does `res.redirect(foo, 304)` not have the desired effect?
[06:51] itissid: I was just working on my browser and I am not able to instantiate frank = Person("Frank") that way for the code listed there..
[06:52] itissid: frank is just blank in the debugger... I have always typically used new but was just brushing up on my JS skills...
[06:52] muk_mb: evanmeagher: you don't wanna redirect on a conditional GET do you?
[06:52] Anti-X: blank in the debugger
[06:52] Anti-X: i wanna use that in a totally different context
[06:52] micheil: itissid: `new` is how you do OOP in JS
[06:53] itissid: yeah
[06:53] meck: it doesn't actually create anything because nothing is returned... i assume this is an issue with his example
[06:53] meck: a better example would be if in the constructor portion he used this
[06:53] Anti-X: "i tried to understand what he meant by that completely nonsensical statement, but he was utterly blank in the debugger"
[06:53] itissid: Yeah
[06:53] micheil: itissid: OOP is kinda odd, and changes depending on who you ask
[06:53] meck: all methods are called on an object, and without specifying one they are attached to the global object
[06:53] evanmeagher: muk_mb: I see why you're asking, though. I'm not sure how you'd go about sending just a 304 header.
[06:54] meck: so Person() is the same as window.Person()
[06:54] meck: and any time you attach a method to an object, this inside the method points to the object it was called on
[06:55] tim_smart: function Person () { if (!this instanceof Person) return new Person(); }
[06:55] itissid: Hmm
[06:56] evanmeagher: JS has function-based lexical scoping, so it's worth pointing out that `this` would point to the enclosing _function_, not necessarily block
[06:57] meck: it's actually the object that the method was attached to when it was called that "this" points to, rather than the function
[06:57] itissid: evanmeagher: so thats why creationix explains the prototype..
[06:58] itissid: to give this the right context
[06:58] muk_mb: evanmeagher: oh ok, you just do "res.send(304)"
[06:58] muk_mb: works perfectly
[06:58] abiraja has joined the channel
[06:59] evanmeagher: meck: objects ~ functions, so we're both right, sort of 
[06:59] evanmeagher: muk_mb: ah, good to know. thanks.
[06:59] muk_mb: np
[06:59] Anti-X: evanmeagher, "var obj = { label: function() { this.something" <- this refers to that 'hash' object when calling obj.label().. not a function in sight
[06:59] MattDiPasquale has joined the channel
[07:00] amerine has joined the channel
[07:00] Anti-X: and functions are objects
[07:00] Anti-X: you should know that
[07:00] Anti-X: :P
[07:00] amerine has joined the channel
[07:01] meck: itissid: the example works for me in chrome and node
[07:02] evanmeagher: Anti-X: strange. I feel lied to by crockford.
[07:02] evanmeagher: Anti-X: I thought this was redefined every time you dropped into a new function scope
[07:02] itissid: meck: I was just not understanding that statement correctly
[07:03] itissid: Now i do
[07:03] Anti-X: new scope, yes
[07:03] meck: aaah, ok cool
[07:03] Anti-X: not necessarily function scope
[07:03] meck: yep, scoping is definitely at the function level, but "this" is a different story
[07:03] itissid: if he had used this in some way in the constructor it would have been more direct, but there is only so much one can do in a blog post..
[07:03] Anti-X: but also, in events, 'this' usually refers to either the global scope, or the event object.. can't remember which
[07:03] Anti-X: which is totally out of context
[07:03] ysynopsis has joined the channel
[07:04] Anti-X: native js events, that is
[07:04] meck: it's usually the object throwing the event
[07:04] evanmeagher: interesting
[07:04] Anti-X: meck, not really
[07:04] evanmeagher: Anti-X: thanks for the enlightenment. I should read up on this a bit more, i guess :P
[07:05] Anti-X: that's only if you make events yourself and do it bad
[07:05] meck: because the callback is called like: node.cb = yourcallback; node.cb()
[07:05] tim_smart: this is usually the global object for DOM events
[07:05] Anti-X: meck, no.. that's bad... you should do node.cb.call(null)
[07:05] Anti-X: for global scope
[07:06] tim_smart: Or is the DOM element? Can't remember - haven't done browser stuff for a while.
[07:06] Anti-X: having 'this' reference the object that throws the event is extremely misleading
[07:06] ewdafa has joined the channel
[07:06] Anti-X: because if anything, it should reference the object in which the event was set up
[07:06] tim_smart: 'this' is subject to how the function is called.
[07:07] nsolsen has joined the channel
[07:07] tim_smart: Not how you declare the function.
[07:07] itissid: tim_smart: Right
[07:07] unomi has joined the channel
[07:07] Anti-X: that's also the way to see it
[07:07] evanmeagher: http://howtonode.org/what-is-this
[07:08] Anti-X: i'm talking more generally how you should make 'this' behave when other code supplies it to you
[07:08] Anti-X: you shouldn't make it reference your internal object when calling a callback
[07:09] itissid: Anti-X: YOu are talking about the point where we do liek a self=this before the callback is passed to a function?
[07:09] meck: i was talking specifically about dom events... how it SHOULD be done is a different story :P
[07:09] itissid: and make it self every where in the closure?
[07:10] googol has joined the channel
[07:10] daglees has joined the channel
[07:10] daglees has joined the channel
[07:11] Anti-X: meck, DOM events do it how it should be done
[07:11] Anti-X: they make this global
[07:11] Anti-X: but some custom event implementations don't
[07:12] Anti-X: they simply ignore the issue and just call callback()
[07:12] Anti-X: which makes everything weird if you don't use self
[07:13] meck: yeah i haven't found any reference to back my claim up honestly... I am probably just used to libraries setting the this reference
[07:13] Anti-X: it might still behave as if it was global (since none of your this.attributes are available), but if you're using some that happen to be used also in that scope, then what...
[07:14] itissid: Anti-X: Thats like hitting a Axe with your foot
[07:14] Anti-X: it has happened
[07:14] Anti-X: imagine there being an axe where the table leg is
[07:14] Anti-X: you'd have 6 toes
[07:15] itissid: :P
[07:15] itissid: yeah
[07:15] meck: ok well i just went and made an example
[07:15] meck:   document.getElementById("test").onclick = function() {
[07:15] meck:     alert(this);
[07:15] meck:   }
[07:15] meck: [object HTMLDivElement]
[07:16] meck: so yeah, this gets set to the dom object that threw the event
[07:16] Anti-X: yeah because onclick is part of the div element
[07:16] jbergstroem: so, lets say i have some hardware i want to add to the buildbot for node.js. who do i talk to?
[07:16] Anti-X: but do addEventHandler
[07:16] Anti-X: or whatever it is
[07:16] itissid: Meck: Yeah i remember that is what jQuery also does extensively....
[07:16] Anti-X: (which is the right way)
[07:16] Anti-X: addEventListener maybe
[07:17] itissid: As in inside the function handler this is alwasy the dom element..
[07:17] derren13 has joined the channel
[07:18] Anti-X: document.getElementById("test").addEventListener('click', function(){alert(this)})
[07:18] Max_Might has joined the channel
[07:20] Anti-X: in your instance, the event just fires any onclick property of that particular element
[07:20] Anti-X: instead of firing a given closure
[07:21] itissid: Thanks this was all very useful
[07:21] meck: in chrome, that gives me [object HTMLDivElement]
[07:21] meck: firefox nothing fires... still poking at that
[07:22] itissid: I have been using new, this and self idea so extensively that i have forgotten all the innards... 
[07:22] Anti-X: odd
[07:23] itissid: Always use new to instantiate , this refer to the object and self for all callbacks/closures... Thats all i needed for a very long time now..
[07:23] itissid: Oh Sometimes call and apply..
[07:23] Anti-X: maybe it's the third parameter to addeventlistener that fucks it up, meck?
[07:24] Anti-X: which is supposed to be false
[07:24] meck: huh... strange, that fixed it... i figured that was just a bubble true/false
[07:24] Anti-X: apparently only IE ever did the 'true' way
[07:24] Anti-X: i think
[07:24] meck: so yeah, with that... [object HTMLDivElement]
[07:25] Anti-X: it was just a few weeks ago that i did something like this and 'this' never pointed to the object
[07:25] Anti-X: i deleted the source and rewrote it, so i can't remember what i did exactly
[07:26] Anti-X: i used blur and focus though
[07:26] Anti-X: that i remember
[07:27] meck: here is a page that talks about it actually http://odetocode.com/blogs/scott/archive/2006/12/25/javascript-targets-and-the-this-reference.aspx
[07:28] meck: bed time, g'night all!
[07:31] sriley has joined the channel
[07:32] luke` has joined the channel
[07:34] mikeal has joined the channel
[07:34] SamuraiJack has joined the channel
[07:38] isaacs has joined the channel
[07:48] SamuraiJack has joined the channel
[07:53] tanepiper: http://www.erbix.com/ looks interesting
[07:54] aubergine has joined the channel
[07:56] isaacs: micheil: not likely to add user namespaces to npm any time soon
[07:57] isaacs: i think shoving things into a single namespace makes people think a bit more about what they decide to publish
[08:09] tanepiper: isaacs: always making people have to think :D
[08:09] isaacs: hah
[08:09] tanepiper: today, i need to think about deployment
[08:09] isaacs: yikes
[08:09] isaacs: what about it?
[08:09] Anti-X: forcing people to think.. how dare you
[08:10] tanepiper: well i have an app that has a few dependencies (so npm install), and couchdb stuff (setup db, install designs, put in some initial objects)
[08:10] tanepiper: then install upstart script
[08:11] isaacs: i see
[08:11] AAA_awright: What about URIs?
[08:11] tanepiper: i'd love to have a one line command that does it all from my machine to the remote machine using git
[08:12] tanepiper: AAA_awright: that too, but i'll do that manually today - i need to do a demo for tomorrow, and we have an investor meet in the next couple of weeks
[08:12] AAA_awright: tanepiper: Write a bash script?
[08:12] tanepiper: yea
[08:12] hellp has joined the channel
[08:12] tanepiper: if i do that i can probably have it install nodejs on the machine as well
[08:14] tanepiper: although i've taken snapshots of a pre-install of couchdb on one machine and nodejs on the other
[08:14] muk_mb: whooo, I wrote in conditional GET support for feed-list requests on my project.
[08:14] muk_mb: I'm so cool!
[08:16] derferman has joined the channel
[08:18] mikedeboer has joined the channel
[08:19] Druid_ has joined the channel
[08:19] ivanfi has joined the channel
[08:20] jchris1 has joined the channel
[08:22] [AD]Turbo has joined the channel
[08:23] dguttman has joined the channel
[08:23] Anti-X: i'm so lucky.. i've been the 1 millionth visitor to at least 4 websites in the past two days!
[08:24] Anti-X: what are the odds
[08:24] delapouite has joined the channel
[08:25] tanepiper: that's amazing, lucky you
[08:25] theiviaxx has joined the channel
[08:26] theiviaxx: noob question > trying to install node on cygwin.  It can't import tool "msvc" when running ./configure
[08:26] theiviaxx: what am i missing here?
[08:27] Anti-X: did you install cygwin with python, or did you have python already?
[08:27] nsolsen has joined the channel
[08:27] Anti-X: you need to remove python and install it with cygwin probably
[08:28] Anti-X: it doesn't work with the windows python
[08:28] theiviaxx: yeah, using the windows one
[08:28] theiviaxx: ok, i'll give it a go
[08:28] adambeynon has joined the channel
[08:28] Kai` has joined the channel
[08:29] Anti-X: i did that, i think i got that same error. it looks familiar, but this is almost half a year ago
[08:30] theiviaxx: can i just install py without messing with the windows stuff?
[08:30] Anti-X: no you need to uninstall the windows python
[08:30] Anti-X: not sure why
[08:30] jakob has joined the channel
[08:30] Anti-X: i think the installer sets some env vars maybe
[08:31] Anti-X: remember that you need to use the cygwin setup program, don't install the linux version through cygwin
[08:31] Anti-X: that probably won't work at all
[08:32] Anti-X: you can uninstall the cygwin python and reinstall the windows one after the configure
[08:32] Anti-X: it's only needed for that
[08:33] Anti-X: PS: as far as i know
[08:35] derren13 has joined the channel
[08:38] Anti-X: either way, once you get settled in cygwin, you'll never use cmd again
[08:38] Anti-X: except for very windows specific things
[08:38] romanb has joined the channel
[08:38] Anti-X: so might as well just use cygwin python
[08:44] SvenDowideit_ has joined the channel
[08:45] theiviaxx: ok cool, thakns guys
[08:45] Anti-X: did it work?
[08:45] mbrochh has joined the channel
[08:50] isaacs: w00t.  `nave use stable`
[08:51] bartt has joined the channel
[08:51] nsolsen has joined the channel
[08:52] brianmario has joined the channel
[08:53] ph^ has joined the channel
[08:54] dguttman has joined the channel
[08:55] micheil: isaacs: I'm thinking more about sharing forks of projects and stuff
[08:55] isaacs: yeah.  but you can just name them differently
[08:56] isaacs: if you want to have a different fork of something just for YOUR package, then bundle it
[08:56] micheil: isaacs: also. http://twitter.com/miksago/status/7701786144022528
[08:56] micheil: word.
[08:56] brianmario has joined the channel
[08:56] tanepiper: isaacs: i like that idea of the private, ensures no accidental publishing of commercial code, and makes npm a deployment system too
[08:56] micheil: isaacs: also, npm version increase?
[08:57] isaacs: tanepiper: kewl
[08:57] tanepiper: is joynet open sourcing any of it's stuff?
[08:57] micheil: tanepiper: iirc, the whole thing was opensource
[08:57] isaacs: tanepiper: well, there's node.js, and dtrace, etc.
[08:57] micheil: but not up-to-date
[08:57] isaacs: tanepiper: also, i mean, you get onto the box, you can poke around
[08:57] micheil: https://github.com/joyent/smart-platform
[08:58] isaacs: micheil: yeah, that's the old style
[08:58] micheil: yeah
[08:58] isaacs: micheil: we haven't published the no.de sourcecode
[08:58] micheil: I don't expect you to.
[08:58] isaacs: but you could get it if you know where to look
[08:58] micheil: it's kinda easy code
[08:58] isaacs: oh, i dunno.  we might
[08:58] micheil: ACTION has already looked.
[08:58] isaacs: but we're still figuring this stuff out, kinda.
[08:58] isaacs: everyone is
[08:58] isaacs: it's a new way to do things
[08:58] micheil: isaacs: I'm writing one for the company project I'm working on
[08:59] mraleph has joined the channel
[09:05] ntelford has joined the channel
[09:06] Fenda_ has joined the channel
[09:06] skohorn has joined the channel
[09:07] herbySk has joined the channel
[09:14] luke` has joined the channel
[09:17] sriley has joined the channel
[09:17] tisba has joined the channel
[09:19] markwubben has joined the channel
[09:21] Fullmoon has joined the channel
[09:21] herbySk has joined the channel
[09:22] Fullmoon: Anyone things that is valid to return a HTTP response before the request was fully received (of course, without Connection: close)
[09:22] Fullmoon: *thinks
[09:22] themiddleman has joined the channel
[09:22] sixtus42 has joined the channel
[09:24] ooooPssss has joined the channel
[09:25] Fullmoon: 2616 doesn’t fully define this scenario
[09:25] evanmeagher has joined the channel
[09:25] skohorn has joined the channel
[09:26] danslo has joined the channel
[09:27] mikeal has joined the channel
[09:27] romanb has joined the channel
[09:28] erlnoob has joined the channel
[09:28] erlnoob: boomerangs, boomerangs everywhere!
[09:29] evanmeagher: mikeal: your drink creation sounds divine
[09:29] pdelgallego has joined the channel
[09:32] mikeal has joined the channel
[09:33] virtuo_ has joined the channel
[09:35] markwubben has joined the channel
[09:35] Anti-X has joined the channel
[09:36] xla has joined the channel
[09:37] mbrochh has joined the channel
[09:37] zomgbie has joined the channel
[09:38] stonebranch has joined the channel
[09:38] stagas: I'm bored
[09:39] tanepiper: well!  get working on something cool
[09:40] stagas: any suggestions? :)
[09:41] tanepiper: Get an aurdinio board, hook it to a coffee machine then add to npm a command npm make coffee :D
[09:41] stagas: that would be -1 reason to get up from chair
[09:41] TomY has joined the channel
[09:41] stagas: :P
[09:44] Anti-X: why don't you make an intarweb palm reading script
[09:44] saschagehlich has joined the channel
[09:44] tsing has joined the channel
[09:44] Anti-X: you could hook so many tweens
[09:45] mali has joined the channel
[09:51] margle has joined the channel
[09:51] stagas: http://www.palmday.com/read-my-palm.php
[09:51] stagas: :P
[09:52] mraleph has joined the channel
[09:53] Spion__ has joined the channel
[09:53] paulwe has joined the channel
[09:54] teemow has joined the channel
[09:56] stagas: my success age is 33
[09:56] stagas: they need money for the rest
[09:56] stagas: :P
[09:58] caolanm has joined the channel
[09:58] sfoster has joined the channel
[09:59] isaacs has joined the channel
[09:59] skohorn has joined the channel
[09:59] slaskis has joined the channel
[10:01] tanepiper: 34 for me
[10:01] nooder: 33
[10:01] tanepiper: of course it's all bollocks
[10:01] stagas: I learned I had a destiny line that not everyone has :P
[10:03] aubergine has joined the channel
[10:03] lmorchard has joined the channel
[10:05] Anti-X: congrats
[10:05] Anti-X: you could convince others of the same
[10:05] stagas: yea I'm priviledged :P
[10:05] Anti-X: that's not what i said
[10:05] Anti-X: :p
[10:07] herbySk has joined the channel
[10:07] xla has joined the channel
[10:08] erlnoob_ has joined the channel
[10:13] flashingpumpkin has joined the channel
[10:15] caolanm: I made a thing: http://caolan.github.com/ghstats/#caolan
[10:16] caolanm: was just messing around with githubs jsonp api last night
[10:17] sfoster: sweet
[10:18] maushu has joined the channel
[10:18] caolanm: it doesn't handle missing usernames very well because the github jsonp api is a bit broken and responds with a 404
[10:19] sfoster: 404 sounds like the right response to me for a bad username? 
[10:20] caolanm: sfoster: but jsonp can only handle 200 responses
[10:20] caolanm: status must be in the response message
[10:20] sfoster: ah, thats a good point :)
[10:20] caolanm: otherwise the script won't load and you'll have no idea what happened
[10:20] caolanm: ;)
[10:21] saschagehlich has joined the channel
[10:25] jimt has joined the channel
[10:27] evanmeagher: isaacs: i added tab completion for subcommands of `npm config`: https://github.com/evnm/npm/commit/acbd1e2af67d7604d123
[10:27] evanmeagher: wondering if it's an acceptable approach
[10:27] javruben has joined the channel
[10:27] [AD]Turbo: is there a way to use the same .js file (in my case this script defines a list of constants) from nodejs (using require keyword) and from my client (here is easy, simply <script src=...> tag)
[10:28] [AD]Turbo: ?
[10:28] tanepiper: [AD]Turbo: there are libraries out there to do it
[10:29] tanepiper: https://github.com/deanlandolt/commons
[10:29] [AD]Turbo: let me see...
[10:29] isaacs: evanmeagher: neat.   that's a good start.
[10:29] tanepiper: https://github.com/kof/sharedjs
[10:29] isaacs: evanmeagher: for some things, it's going to have to get a list of the remote packages, local packages, etc
[10:30] Anti-X has joined the channel
[10:32] ajsie has joined the channel
[10:32] mikedeboer has joined the channel
[10:33] evanmeagher: isaacs: can you do regex searches of the registry, by chance?
[10:33] evanmeagher: the cost of a round-trip to the registry worries me for tab-completion
[10:33] isaacs: evanmeagher: no, but it's not that big of an object, and with the etag cache, it's a fast response
[10:33] evanmeagher: ah, right
[10:33] evanmeagher: i hadn't actually read into etags until reading your blog post tonight :P
[10:33] evanmeagher: cool stuff
[10:34] isaacs: yeah, makes the fetches to the various views and such a lot more snappy
[10:35] evanmeagher: so in these kinds of cases, etags take care of caching for you, right?
[10:35] evanmeagher: meaning there's no need to do so programatically
[10:40] mikew3c_ has joined the channel
[10:41] aubergine has joined the channel
[10:44] margle has joined the channel
[10:49] themiddleman has joined the channel
[10:51] ajsie: is there a way to have a line between the squares in GridView?
[10:51] ajsie: or a little gap
[10:53] margle_ has joined the channel
[11:00] Tobias| has joined the channel
[11:02] petercooper has joined the channel
[11:04] hellp has joined the channel
[11:10] pietern has joined the channel
[11:10] aubergine has joined the channel
[11:12] unomi has joined the channel
[11:12] saschagehlich has joined the channel
[11:12] micheil: ajsie: what's a gridview?
[11:13] saschagehlich_ has joined the channel
[11:14] Anti-X: immediate thought is some sort of game map builder, or possibly a blueprint-ish design framework
[11:15] Anti-X: it's an asp.net control
[11:15] zorzar_ has joined the channel
[11:15] ajsie: micheil: oh sorry wrong channel :) should be in Sproutcore
[11:15] micheil: ;P
[11:15] Anti-X: for creating a table
[11:15] Anti-X: yay for .net abstractions
[11:17] Anti-X: brussel sproutcore?
[11:21] d0k has joined the channel
[11:22] kawaz_home has joined the channel
[11:35] flashingpumpkin: :-o https://github.com/flashingpumpkin/node-pubsub 
[11:36] flashingpumpkin: yet another implementation
[11:37] mikew3c_ has joined the channel
[11:37] T-Co: Is there a module that would allow me to "upload" pictures to faceook
[11:37] Anti-X has joined the channel
[11:38] SvenDowideit has joined the channel
[11:39] SvenDowideit has joined the channel
[11:42] mbrochh has joined the channel
[11:45] [AD]Turbo: what's wrong with this: http://pastebin.com/qEkFc9k3  (7 lines of code) ?? i got an error in line 15 (error is SocketMsg is not defined); please help!
[11:47] Anti-X: why are you naming it twice
[11:47] Anti-X: var SocketMsg = exports.SocketMsg = function SocketMsg(
[11:47] Anti-X: var SocketMsg = exports.SocketMsg = function(
[11:47] Anti-X: is enough
[11:47] [AD]Turbo: ok, but i think i'ts not the problem, lemme try
[11:47] Anti-X: it's probably not
[11:48] Anti-X: but still
[11:48] [AD]Turbo: same error
[11:48] Anti-X: i find it annoying when people do that
[11:48] Anti-X: there are others in here that do it
[11:48] [AD]Turbo: Anti-X, I'm new to nodejs and javascript, so I'm trying to learn from you experts
[11:49] [AD]Turbo: now the problem is expose messages codes, in my example :(
[11:49] Anti-X: yeah
[11:49] Anti-X: require isn't the same as php include
[11:49] Anti-X: or require
[11:49] markwubben has joined the channel
[11:49] Anti-X: it's a separate namespace
[11:50] Anti-X: and in the server file you haven't defined SocketMsg
[11:50] caolanm: Anti-X: naming the function itself can sometimes make a stack trace easier to follow
[11:50] caolanm: but I don't normally do it
[11:50] maushu has joined the channel
[11:50] flashingpumpkin: var msg = gameMsg.createMsg(SocketMsg.prototype.AUTH_REQUEST, "someData");
[11:50] Anti-X: then name the function first, then do exports.SocketMsg = SocketMsg
[11:50] Anti-X: flashingpumpkin, no that won't do it
[11:50] Jonasbn_ has joined the channel
[11:51] flashingpumpkin: ah, yeah. it should be gameMsg.SocketMsg.prototype.AUTH_REQUEST
[11:51] caolanm: Anti-X: not sure why I weighed-in there, I really don't care ;)
[11:51] flashingpumpkin: meh
[11:52] Anti-X: yeah you may just wanna make those constants module vars
[11:52] Anti-X: var AUTH_REQUEST = exports.AUTH_REQUEST = 1
[11:52] Anti-X: and then gameMsg.AUTH_REQUEST
[11:52] [AD]Turbo: ah ok, I got the point
[11:53] Anti-X: think of js namespaces as objects within objects within objects within... you get the point
[11:53] Anti-X: because that's essentially what it is
[11:54] Anti-X: that's only on the server though.. in the browser all script files are in the same soup
[11:54] [AD]Turbo: yeah, now it works, thx flashingpumpkin! now I will follow the advise of Anti-X
[11:55] flashingpumpkin: mhm. soup!
[11:55] Anti-X: code soup
[11:56] Anti-X: it's like veggie soup, except it only has two kinds of bits
[12:00] erlnoob: server-side boomerang-shaped spaghetti
[12:02] stagas: what do you think of this? it's brequire but wrapped in a middleware https://gist.github.com/715278
[12:03] jetienne has joined the channel
[12:03] cheney has joined the channel
[12:04] stagas: instead of running brequire to compile them it wraps them on the fly so essentially you get to use the same files server and client side
[12:04] mraleph has joined the channel
[12:07] davidc_ has joined the channel
[12:08] Anti-X: there are 10 types of people in the world: those that think there are only 10 types of people in the world, those that think this is a binary joke and those that think 10 is an arbitrary number.
[12:08] Anti-X: hm.. maybe add.. ", among others" at the end
[12:11] tanepiper: http://www.linux.fm/  :D
[12:15] galaxywatcher has joined the channel
[12:17] skohorn has joined the channel
[12:20] blowery has joined the channel
[12:26] Anti-X: LOL
[12:26] Anti-X: that's just fucked
[12:27] Utkarsh has joined the channel
[12:27] fly-away has joined the channel
[12:28] Utkarsh: I'm getting this while installing node-static. Any pointers? http://pastebin.com/h3u14hbt
[12:31] stagas: Utkarsh: npm update npm
[12:31] ajsie: anyone that has used the pintura framework?
[12:31] UHMA has joined the channel
[12:31] romanb_ has joined the channel
[12:31] ajsie: looks very powerful. but lack documentation and popularity
[12:31] Utkarsh: stagas: even that failed. 'Error: Failed to create /usr/local/lib/node/.npm/.cache/npm/0.2.10/package.tgz: ENOENT, No such file or directory '/usr/local/lib/node/.npm/.cache/npm/0.2.10/package.tgz''
[12:32] nsolsen has joined the channel
[12:32] stagas: Utkarsh: curl http://npmjs.org/install.sh | sh
[12:32] Anti-X has joined the channel
[12:32] zomgbie has joined the channel
[12:32] Utkarsh: stagas: awesome! thanks!
[12:33] Anti-X: sveisvei: ping
[12:33] markwubben has joined the channel
[12:35] ianward has joined the channel
[12:52] margle_ has joined the channel
[12:54] Anti-X has joined the channel
[12:54] MattJ has joined the channel
[12:56] mif86 has joined the channel
[12:57] Gruni has joined the channel
[12:57] vineyard has joined the channel
[13:02] fly-away has joined the channel
[13:06] ben_alman has joined the channel
[13:09] Anti-X has joined the channel
[13:09] skohorn has joined the channel
[13:11] broquaint has joined the channel
[13:12] delapouite_ has joined the channel
[13:14] unomi has joined the channel
[13:15] levi has joined the channel
[13:15] heavysixer has joined the channel
[13:15] pagameba has joined the channel
[13:16] levi: Can anybody help me with this code: http://hpaste.org/41796/scriptcreatecontext_leak ? It creates a massive memory leak.
[13:18] vineyard has joined the channel
[13:21] pagameba: perhaps it is an issue with while(true) not relinquishing control for garbage collection ... you could use setTimeout or setInterval which would give the system a chance to clean up once in a while
[13:22] levi: Thanks but apparently it works fine when using runInNewContext.
[13:23] levi: AFICS it seems to be related to the fact that fn is set in the context and runs the script code in the same context.
[13:24] lstrojny_ has joined the channel
[13:25] pagameba: k
[13:25] pagameba: and that exceeds my capacity to help on this particular question :)
[13:26] levi: But thanks anyway
[13:27] lstrojny__ has joined the channel
[13:29] aliem has joined the channel
[13:29] pagameba: performance question: is it better to use array.shift(), array.splice() and array.pop() to manage a queue or use a linked list where objects have a next and previous reference?
[13:30] Ezku\: pagameba: I would dare guess the array implementation in V8 is pretty optimized
[13:30] Ezku\: pagameba: so, although algorithmically you'd be better off with an actual linked list, a raw array implementation might end up being more performant
[13:33] fly-away has joined the channel
[13:35] heap has joined the channel
[13:35] micheil: ryah: any thoughts? http://hpaste.org/41796/scriptcreatecontext_leak
[13:35] micheil: (not that I'm thinking you'd be about at 5am.)
[13:36] pagameba: Ezku\: thx - my q is fixed length so array semantics work well
[13:36] herbySk: pagameba: look at Queue used in nStore
[13:37] herbySk: pagameba: if it's fixed length, do it a circular queue, it's fastest, then
[13:42] javruben has joined the channel
[13:43] pagameba: herbySk: this one? https://github.com/creationix/pattern/blob/master/lib/pattern/queue.js
[13:43] mbrochh has joined the channel
[13:43] mbrochh has joined the channel
[13:44] herbySk: pagameba: yes, that one; but if it is really fixed length, the circular queue would be fastest and in-place and no need to use two-array solution as in nStore Queue (though it is more sexy)
[13:45] pagameba: ACTION goes to look up circular queues
[13:50] zemanel has joined the channel
[13:52] mw has joined the channel
[13:53] pagameba: herbySk that works, thanks!
[13:53] herbySk: pagameba: of course it works :-) why wouldn't it?
[13:54] pagameba: well, I meant that works for what I want to do :)
[13:56] mikedeboer has joined the channel
[13:57] broquaint has joined the channel
[13:58] markwubben has joined the channel
[13:59] almaisan-away has joined the channel
[14:01] drudge has joined the channel
[14:03] Sami_ZzZ has joined the channel
[14:04] losing has joined the channel
[14:08] bpadalino has joined the channel
[14:10] javruben has joined the channel
[14:10] mikedeboer has joined the channel
[14:17] jamescarr has joined the channel
[14:19] ysynopsis has joined the channel
[14:20] heavysixer has joined the channel
[14:20] jamescarr has joined the channel
[14:21] simme has joined the channel
[14:21] rauchg_ has joined the channel
[14:22] jamescarr has joined the channel
[14:23] mikedeboer has joined the channel
[14:23] vineyard: hey guys, how can i define functions in the current scope pragmatically?
[14:24] vineyard: apparently this["foo"] = function() { }; doesn't work
[14:24] caolanm: vineyard: an example might be useful, what are you trying?
[14:24] jamescarr has joined the channel
[14:25] vineyard: http://pastebin.com/NkvYZ330
[14:26] caolanm: vineyard: in that circumstace you would create a global for each datatype
[14:26] cagdas has joined the channel
[14:26] vineyard: yups, that's what i'm trying to do
[14:27] caolanm: but in node.js you're inside a commonjs style module
[14:27] caolanm: so you won't be able to access that in other modules
[14:27] vineyard: so how can I reference the current scope?
[14:27] vineyard: yeah, i don't need to export them
[14:27] vineyard: for current scope only
[14:27] caolanm: oh
[14:28] vineyard: just, how would I reference the current module scope?
[14:28] vineyard: "this" doesn't seem to work
[14:28] caolanm: I see
[14:28] ysynopsis has left the channel
[14:28] jamescarr has joined the channel
[14:28] vineyard: oh, would it be "module"
[14:28] vineyard: gotta try
[14:28] caolanm: frankly, you can't without doing some hackery
[14:29] caolanm: using 'with'
[14:29] eml-mobile has joined the channel
[14:29] frankieshakes has joined the channel
[14:30] vineyard: how would I do that, then?
[14:30] caolanm: so it appears that require'd modules are executed with exports as the context
[14:30] caolanm: vineyard: using 'with' is pretty nasty, but...
[14:31] vineyard: yeah, I know
[14:31] vineyard: but... there really isn't way to even define local variables like that?
[14:31] vineyard: you have to explicitly use var? :S
[14:32] caolanm: vineyard: you create an object with all the properties you want
[14:32] caolanm: {'byte': ..., 'short': ...}
[14:32] caolanm: then do "with (objname) { ... }"
[14:32] caolanm: inside that with block you'll have access to 'byte' as if you defined it with var byte = ...
[14:33] caolanm: but if you're able to avoid doing that then do!
[14:33] caolanm: :)
[14:33] vineyard: ouch, that's nasty
[14:33] vineyard: looks like i have to define all the functions by hand, then
[14:34] caolanm: create a function that creates functions ;)
[14:34] caolanm: will make it a little less painful
[14:35] vineyard: how would I do that? :o
[14:35] caolanm: var createFn = function (datatype) { return function (name) { return [datatype, name]; }; };
[14:35] vineyard: in essence, creating functions is exactly what i'm trying to do
[14:35] caolanm: then do:
[14:35] caolanm: var byte = createFn('byte')
[14:35] vineyard: oh, right!
[14:35] vineyard: that seems like the good solution
[14:36] caolanm: yes, much nicer!
[14:36] vineyard: and no need to go with "with" hackery
[14:37] vineyard: thanks :)
[14:37] caolanm: np :)
[14:38] vineyard: indeed, it works now
[14:40] aubergine_ has joined the channel
[14:48] mikedeboer_ has joined the channel
[14:48] wasabist has joined the channel
[14:49] wasabist_ has joined the channel
[14:59] aubergine has joined the channel
[14:59] mif86 has joined the channel
[15:01] [AD]Turbo: collection.find({ login: userLogin, password: userPassword }, function(err, cursor) { how can I count the number of returned records? cursor.count??? });  help pleaze :(
[15:01] nsolsen has joined the channel
[15:06] MrNibbles: alright you lot
[15:06] ben_alman_ has joined the channel
[15:07] [AD]Turbo: found
[15:08] jayfresh has joined the channel
[15:09] vineyard: does node have any kind of mysql orm?
[15:10] MrNibbles: A mySQL query walks into a bar. He goes up to two tables and asks 'Mind if i join you?'
[15:10] christophsturm has joined the channel
[15:10] Aikar: lol...
[15:11] vineyard: zing
[15:11] Ezku\: bazinga.
[15:13] Ezku\: An Erlang app walks into a swingers' bar. He goes up to a couple and says "mind a hot swap?"
[15:14] bradleymeck1 has joined the channel
[15:15] xla has joined the channel
[15:15] MrNibbles: Ezku\: heheh
[15:15] SethX has joined the channel
[15:15] SethX: hi all, noob here, so don't flame me.
[15:16] MrNibbles: ACTION prepares the tar and feathers
[15:16] SethX: quick q: can node create/modify files?
[15:16] Ezku\: yes.
[15:16] SethX: isnt that awesome.
[15:17] Ezku\: you could, you know, just check the manual for a general overview: http://nodejs.org/api.html#file-system-106
[15:17] SethX: has anybody of you ever implemented something like what google describes here: http://googlewebmastercentral.blogspot.com/2009/10/proposal-for-making-ajax-crawlable.html and uses htmlunit, but in node?
[15:17] SethX: Ezku\: irc is so much more easy. :) and i had a noob disclaimer. :D
[15:18] SethX: just kidding.
[15:18] SethX: i'll rtfm.
[15:18] lstrojny_ has joined the channel
[15:18] SethX: soon.
[15:19] dnolen has joined the channel
[15:21] SethX: btw, am i missing out much by using node 0.2.0-1 ?
[15:22] SethX: thats what comes with debian sqeeze
[15:22] Aikar: why not just compile yourself
[15:22] SethX: i prefer to loose package management only if i have a very good reason
[15:22] Aikar: its at .0.2.5 now for stable
[15:22] ctp has joined the channel
[15:23] Aikar: well looks like your deb repo isnt keeping node up to date, seems like good enough reason :P
[15:23] SethX: Setting up nodejs (0.2.0-1) ...
[15:23] SethX: Setting up nodejs-dev (0.2.0-1) ...
[15:23] SethX: thats from testing
[15:23] jelveh has joined the channel
[15:23] jfs has joined the channel
[15:24] jfs: hi there
[15:24] nsolsen has joined the channel
[15:24] jfs: what kind of module you advice to manage session ?
[15:24] Aikar: imo for interpreted languages I really prefer to have the latest. I use custom repos on CentOS just to get latest PHP
[15:24] Aikar: jfs: expressjs?
[15:25] jfs: yep
[15:25] jfs: session ? 
[15:26] Aikar: it has some kind of support for em, check their docs
[15:30] jfs: k thx
[15:32] felixge has joined the channel
[15:32] felixge has joined the channel
[15:33] mscdex: bring on the turkey!
[15:34] femtoo has joined the channel
[15:34] mikedeboer has joined the channel
[15:35] davidascher has joined the channel
[15:36] Spion_ has joined the channel
[15:36] mscdex: var omnomnom = require('stuffing');
[15:37] Aikar: yeah im finishing up a doc and bout to head out to family too :3
[15:38] mscdex: i have to figure out npm again
[15:38] mscdex: i wish there was a web interface for npm where i could just log in and push new packages or changes to existing ones
[15:39] Aikar: could make one in node super easy ;)
[15:39] noahcampbell has joined the channel
[15:39] mscdex: right, but it'd have to be server-side
[15:39] mscdex: :\
[15:40] Aikar: and? lol
[15:40] mscdex: not everyone has access to the server hosting isaacs' npm repository
[15:40] mscdex: :p
[15:41] SethX: uhm, pardon my noobness again. i want to create a listening socket and send it a filename and some data to write to the filename. i will send over the two things serialized in a json string... now a socket returns 'data' , what type is data? a string? an object?
[15:41] SethX: ie, can i just say data.myfilename and data.mydata ? or is there some "fromJson()" function to run on it [as i'd expect]
[15:42] SethX: if so, what is it? :)
[15:42] bradleymeck1 has joined the channel
[15:42] mscdex: SethX: you're talking about a plain net.Stream?
[15:43] SethX: mscdex: well i'll be sending an XHR post to the node process, and am sending a json string
[15:43] fangel: SethX: JSON.parse.. :)
[15:43] SethX: i guess its a plain net.Stream, but i wouldnt know ;)
[15:43] jayfresh has joined the channel
[15:43] mbrochh has joined the channel
[15:43] mscdex: SethX: it depends on if you have called setEncoding() on your server end
[15:43] SethX: aha, thanks. fangel where is that documented?
[15:44] mscdex: SethX: if you haven't called setEncoding, then data will be instanceof Buffer
[15:44] fangel: actually I don't know where.. I just know that JSON.parse and JSON.stringify exists.. :)
[15:44] mscdex: otherwise, it will be a string with the encoding you've set
[15:44] mscdex: JSON.* is a part of v8
[15:44] nsolsen has joined the channel
[15:44] mscdex: they're built-ins
[15:44] SethX: aha, so i have to look at the V8 docs too
[15:44] SethX: ok
[15:44] fangel: ahh, that explains why they aren't mentioned in the Node docs.. :)
[15:46] mscdex: SethX, fangel: http://www.json.org/js.html
[15:46] mscdex: that page describes the usage of both JSON methods
[15:46] cagdas has joined the channel
[15:47] davidascher has joined the channel
[15:47] SethX: mscdex: btw, encoding is just , dunno, utf-8 or another encoding type, right? can i assume that utf-8bin is safe for most latin charsets like i would do in sql ?
[15:47] mscdex: actually, JSON.* is documented on the ecma5 page on the node wiki, but it doesn't describe the optional parameters: https://github.com/ry/node/wiki/ECMA-5-Mozilla-Features-Implemented-in-V8
[15:48] fangel: thanks :) - I knew how they worked, just not why they were available in Node (which apparently because they are built into v8)
[15:48] mohiam has joined the channel
[15:48] jherdman has joined the channel
[15:49] mscdex: SethX: yeah, you can call request.setEncoding('utf8'); and then 'data' events from the request will be strings in utf8
[15:50] SethX: and what about non-encoded streams? will random stuff like umlauts fail when written to a file? 
[15:51] shaver: all streams are encoded
[15:52] mscdex: well, only if you specifically set an encoding
[15:52] mscdex: otherwise you get Buffers, which contain raw bytes
[15:52] SethX: oh
[15:52] mscdex: sorry, that was to shaver
[15:52] mscdex: :)
[15:52] mscdex: i think you should be safe with utf8 though
[15:53] SethX: ok thanks
[15:53] SethX: i'll fiddle around a bit now
[15:53] SethX: :)
[15:53] maushu: Grid VS Grid
[15:53] shaver: all text is encoded, I mean
[15:53] mscdex: maushu VS _announcer
[15:53] maushu: No, no. Grid vs Grid.
[15:53] shaver: if you have something with a meaning-as-letters, you have an encoding (could be ASCII, could be 8859-1, could be MacRoman)
[15:53] maushu: Never seen this kind of collision algorithm.
[15:53] mscdex: _announcer VS Twitter
[15:53] mscdex: :-D
[15:54] maushu: _announcer would totally rape twitter. Literally.
[15:54] mscdex: i dunno, _announcer has been dying recently
[15:54] maushu: Twitter's fault.
[15:54] tanepiper: is that a soviet Grid vs US Grid :p
[15:55] tanepiper: (and for those of you too young to remember, http://en.wikipedia.org/wiki/Spy_vs._Spy)
[15:55] mscdex: in Soviet node.js, events emit you.
[15:56] maushu: mscdex: I blame tweetstream.
[15:56] mscdex: the blame game :0
[15:57] mscdex: i haven't seen _announcer say much today
[15:57] mscdex: it seemed to be pretty stable
[15:57] mscdex: awhile back
[16:02] aconbere has joined the channel
[16:02] dguttman has joined the channel
[16:03] nsolsen has joined the channel
[16:05] itissid: Good morning everyone
[16:05] skohorn has joined the channel
[16:09] AutomaticPixel has joined the channel
[16:12] losing has joined the channel
[16:12] herbySk has joined the channel
[16:19] maushu: mscdex: The twitter module just stopped working, maybe its oauth or something.
[16:19] charlenopires has joined the channel
[16:20] zomgbie has joined the channel
[16:21] mscdex: hmmm
[16:21] losing has joined the channel
[16:22] nsolsen has joined the channel
[16:22] ph^ has joined the channel
[16:22] Druid_ has joined the channel
[16:23] boaz has joined the channel
[16:24] charlenopires has joined the channel
[16:24] SethX: OT: how do you guys get around having node servers listening on one port, and the browser same-domain policy for ajax post requests?
[16:25] SethX: apache magic?
[16:27] MattJ: Either use Node to serve the script, or Apache/nginx magic
[16:27] MattJ: or tell all your users to use CORS-capable browsers :)
[16:27] SethX: MattJ: being? what browsers?
[16:27] SethX: its only for my fumbling around
[16:28] MattJ: Most of the modern ones, Chrome and Firefox support it at least
[16:28] SethX: is there a file to place on the remote host?
[16:28] SethX: like flash?
[16:28] MattJ: It's like Flash, but no, it uses HTTP requests/headers
[16:28] SethX: i remember i read something about it but cant quite remember what/where
[16:29] jpld has joined the channel
[16:29] MattJ: Flash uses a static file called crossdomain.xml
[16:29] SethX: yah, so what headers to i need ?
[16:30] SethX: ah, found.
[16:30] SethX: cors was the missing keyword.
[16:30] SethX: :)
[16:31] MattJ: Heh
[16:32] cjmFloating has joined the channel
[16:34] tj has joined the channel
[16:35] jchris1 has joined the channel
[16:36] javruben has joined the channel
[16:38] javruben2 has joined the channel
[16:39] saikat has joined the channel
[16:47] bradleymeck1 has joined the channel
[16:52] pagameba has joined the channel
[16:52] charlenopires has joined the channel
[16:53] ntelford has joined the channel
[17:00] pdelgallego has joined the channel
[17:02] aconbere has joined the channel
[17:02] bradleymeck1 has joined the channel
[17:03] mohiam has joined the channel
[17:06] pagameba: OMG just discovered get and set in node!
[17:07] tj: pagameba: woot
[17:07] tj: pagameba: there is also __defineGetter__ etc, and Object.defineProperty with { get: function(){} }
[17:08] pagameba: are those node-specific or ECMA5?
[17:08] tj: none of them are node specific
[17:09] pagameba: where are these documented?
[17:09] tj: but __defineGetter__ and __defineSetter__ etc are deprecated AFAIK
[17:09] tj: pagameba: google "js property descriptors"
[17:09] tj: or Object.defineProperty
[17:09] tj: http://ejohn.org/blog/ecmascript-5-objects-and-properties/
[17:13] pagameba: yeah, that's the one I'm reading
[17:13] pagameba: this changes everything!
[17:13] tj: shit, helgrind lights up with node
[17:14] tj: pagameba: meh :p, the day js method calls have optional parens I wont use js anymore, this is slowly getting there
[17:14] ncursestest has joined the channel
[17:14] tj: but the config is nice for prop descriptors
[17:14] pagameba: I'm writing a C++ extension for node around the mapserver library, now I understand more about what I'm doing ... 
[17:14] ncursestest: /nick psema4
[17:14] pagameba: or at least how it affects things on the javascript side ...
[17:15] dxld has joined the channel
[17:15] tj: yeah you can use accessors in your c++ code too
[17:15] Druid_ has joined the channel
[17:15] pagameba: tj: isn't obj.x = 100 essentially a function call without parantheses now?
[17:15] pagameba: :)
[17:16] tj: pagameba: pretty much yeah, but accessors are implemented differently
[17:16] tj: if you could do foo.bar instead of foo.bar() im out haha
[17:16] tj: hate that stuff
[17:16] pagameba: why can't you do that now?
[17:16] mikedeboer has joined the channel
[17:16] tj: because foo.bar is the function property
[17:16] tj: it doesnt invoke the function
[17:17] tj: I imagine it never will
[17:17] pagameba: but if you define bar as an accessor with a function then it does call a function?
[17:17] tj: yeah if its a getter
[17:17] pagameba: I have map.drawMap() returns a buffer
[17:17] pagameba: I could equally do map.image and have it trigger a draw and return a buffer
[17:18] pagameba: not saying this is a good thing ...
[17:18] pagameba: the semantics of it seem wrong
[17:18] SamuraiJack_ has joined the channel
[17:18] tj: I think its generally fine to use getters as long as it doesnt mask anything intense
[17:18] tj: if you do tons of processing then that can be sketchy
[17:19] psema4_ has joined the channel
[17:19] pagameba: well yes, my drawMap() code actually takes a callback and does an EIO thread for rendering so that's not a good example :)
[17:20] caolanm: personally I prefer a function to a getter, makes it clear that some magic is happening
[17:21] boaz_ has joined the channel
[17:21] herbySk has joined the channel
[17:22] pagameba: ACTION agrees
[17:23] pagameba: its going to get abused, change the syntax of code and make it much harder to understand what is really happening
[17:24] confoocious has joined the channel
[17:24] confoocious has joined the channel
[17:26] stagas has joined the channel
[17:26] Nohryb has joined the channel
[17:27] SubStack: getters can be useful for memoization
[17:27] caolanm: yeah, I'd probably accept that
[17:27] caolanm: in fact, I've used them for exactly that before
[17:27] tj: ditto
[17:28] caolanm: oh! on the subject of memoization, I added a callback-friendly memoize function to async.js yesterday
[17:28] caolanm: for anyone that uses it
[17:28] Ldrtan has joined the channel
[17:28] caolanm: https://github.com/caolan/async
[17:28] SubStack: I was just looking at async.js
[17:28] Ldrtan: Hi. Can anyone help: how to install node addons
[17:29] hornairs has joined the channel
[17:29] Ldrtan: I got node-gearman , but have no idea how to install
[17:29] SubStack: I don't like lists of functions though, so I'm writing my own
[17:29] caolanm: anyone with design-flare want to fork this? http://goo.gl/3TgOX
[17:29] caolanm: SubStack: may as well, everyone else has ;)
[17:29] herbySk has joined the channel
[17:30] SubStack: caolanm: I blame isaacs!
[17:30] micheil: caolanm: arachniphobia? 
[17:30] caolanm: micheil: haha, yeah
[17:30] caolanm: I'm such a pussy
[17:31] micheil: nawh, some of the spiders over here can actually kill you quite quickly
[17:31] SubStack: the proliferation of libraries is a good thing ^_^
[17:31] SubStack: better cover of the multivariate search space of useful software
[17:31] caolanm: micheil: agh! don't tell me that...
[17:32] caolanm: SubStack: yeah, I don't really mind lib proliferation
[17:32] micheil: Ldrtan: node-gearman?
[17:32] Ldrtan: yep
[17:32] tj: anyone else run helgrind against node?
[17:32] pagameba: caolanm: async.memoize looks awesome
[17:32] caolanm: pagameba: thanks :)
[17:33] caolanm: lots of useful things in async.js now
[17:33] Ldrtan: I copy bin and tools from nodejs distibution to addons dir, but when "configure", node path is not found
[17:33] caolanm: and I finally have a decent browser testsuite
[17:33] micheil: caolanm: aww man. http://caolan.github.com/ghstats/#caolan%2Cmiksago%2Cry
[17:33] caolanm: micheil: haha, ry dwarfs us all
[17:34] caolanm: I should have hacked this to up my score
[17:34] petercooper has joined the channel
[17:34] Druid_ has joined the channel
[17:34] Ldrtan: micheil: have any idea how to install node-gearman addon ?
[17:34] micheil: Ldrtan: what is node-gearman?
[17:34] micheil: where did you find it?
[17:35] Ldrtan: micheil: https://github.com/joshrotenberg/node-gearman
[17:35] pagameba: https://github.com/joshrotenberg/node-gearman?
[17:35] Ldrtan: yes
[17:36] Ldrtan: looks like valid package, but I do not understand how to install
[17:36] pagameba: looks like you need to install node, the git clone https://github.com/joshrotenberg/node-gearman; cd node-gearman; node-waf configure build;
[17:36] SethX: uhm, i'm missing a part of the picture. http.createserver returns a request and a response. how do i bind to the request's ondata event?
[17:36] pagameba: the -> then
[17:36] micheil: SethX: http.createServer(function(req, res){ req.on("data", function(){ ... } ... });
[17:36] Ldrtan: pagameba: I do not have system-wide node-waf utilite, so I copy it from nodejs
[17:37] pagameba: SethX: http.createServer(function(req, resp) { req.on('data', function() {} ) }});
[17:37] SethX: aaah, "on" . of course.
[17:37] SethX: merci
[17:37] micheil: SethX: or addListener
[17:37] mikew3c_ has joined the channel
[17:37] pagameba: Ldrtan: how did you install node? from source or via some package tool?
[17:38] Ldrtan: pagameba: I'm use debian, and I install it via debian APT :) Version 0.2.2
[17:39] pagameba: is there a node-devel package to install?
[17:39] pagameba: if not, I'd recommend getting the source from github and run ./configure; make; sudo make install to get all the goodies
[17:39] vineyard: why don't you just build yourself?
[17:39] pagameba: also a newer version :)
[17:39] rauchg_: aptitude purge node, and install from command line 
[17:39] Ldrtan: pagameba: yes, it is :)
[17:40] Ldrtan: And I already install them
[17:40] lstrojny_ has joined the channel
[17:42] Ldrtan: pagameba: great tnx :) I find it :) It named "nodejs-waf" instead "node-waf"
[17:42] pagameba: cool
[17:42] micheil: Ldrtan: you're on a nix and you did apt-get install nodejs or similar?
[17:43] steffkes has joined the channel
[17:43] Ldrtan: yes :)
[17:43] micheil: I wouldn't recommend doing that.
[17:43] micheil: purely because some node code depends on /usr/bin/env node
[17:43] Ldrtan: pagameba: but got another error :)))) Searching for relsolution :)
[17:43] micheil: which means they will break
[17:43] Ldrtan: micheil: hm....
[17:45] EGreg_ has joined the channel
[17:45] EGreg_: hey guys
[17:46] EGreg_: question
[17:46] EGreg_: how do I get the filename of the file in which the code is located
[17:46] EGreg_: does __filename refer to that file, or the file which was executed?
[17:46] tj: __filename is the mod
[17:46] tj: __dirname is available too
[17:47] EGreg_: the mod?
[17:47] EGreg_: how do I get the file that was executed vs the filename in which I am writin g__filename
[17:48] micheil: mod, module
[17:49] EGreg_: okay so just tell me
[17:49] EGreg_: yes or no?
[17:49] micheil: if you have a file: myScript.js, which contains: console.log(__filename) then you will get "myScript.js" printing to the console
[17:49] EGreg_: is __filename the name of the js file in which the code is located?
[17:49] EGreg_: micheil: even if it was required by another file, right
[17:49] micheil: yes
[17:50] EGreg_: okay one more q ... does dirname end in / or not
[17:50] oal has joined the channel
[17:50] EGreg_: nevermind, I see it doesnt
[17:50] Ldrtan: micheil: I install 0.2.5 from sources to my /usr/local/nodejs, after this I ch dir to node-gearman addon and run "/usr/local/nodejs/bin/node-waf configure", It pass success
[17:50] EGreg_: so this is fine: var PIE_DIR = fs.realpath(__dirname+'/../'); ?
[17:50] Ldrtan: But when I try to /usr/local/nodejs/bin/node-waf build    I got python error :)
[17:50] micheil: Ldrtan: that should be fine
[17:50] mif86 has joined the channel
[17:50] EGreg_: what if I call require twice on the same string
[17:50] EGreg_: it will require only once, right?
[17:50] micheil: Ldrtan: try doing `/usr/bin/env node`
[17:51] EGreg_: is there overhead? do I have to guard require myself?
[17:51] micheil: if it works, you're all good
[17:51] EGreg_: or no
[17:51] EGreg_: require('fs'); require('fs'); what happens?
[17:51] micheil: require() caches files
[17:51] EGreg_: okay so I don't have to guard it with checks?
[17:51] tj: EGreg_: you get the same object
[17:51] Ldrtan: micheil: this is not works
[17:51] tj: so you can use closures or the exports to cache things for your module
[17:51] micheil: "econd time require('foo') is called, it is not loaded again from disk. It looks in the require.cache object to see if it has been loaded before."
[17:52] micheil: http://nodejs.org/docs/v0.3.1/api/modules.html
[17:52] micheil: Ldrtan: hmm, I'm not sure then.
[17:53] jchris1 has joined the channel
[17:53] EGreg_: okay great
[17:53] guybrush: best option to get nodejs on port 80 with support for websockets is iptables/authbind?
[17:53] EGreg_: question:
[17:53] EGreg_: if (typeof APP_DIR === 'undefined')
[17:53] altamic has joined the channel
[17:53] EGreg_: what is the root object in Node.js
[17:53] EGreg_: can I do:
[17:53] EGreg_: if (! ('APP_DIR' in this) )
[17:53] EGreg_: and have it do same thing
[17:53] EGreg_: roughly
[17:53] Ldrtan: micheil: I create sym-link from /usr/local/nodejs/bin/node   to /usr/local/bin/node :)   And "env node" pass to "node console" (???)
[17:54] EGreg_: okay I guess it's not same hting
[17:54] micheil: this needs to be in your $PATH /usr/local/nodejs
[17:54] EGreg_: last question for now ... how do I throw an exception in Node.js? What's the proper way? Just throw a string?
[17:54] Ldrtan: .../usr/local/nodejs or /usr/local/nodejs/bin ?
[17:54] SethX: who can tell me why it never logs anything ? http://pastebin.com/M2EunmV0
[17:55] micheil: Ldrtan: uh, the latter.
[17:55] micheil: my bad there
[17:55] EGreg_: or is there an exception class
[17:55] Ldrtan: :) Nevermind :)
[17:55] noahcampbell has joined the channel
[17:55] micheil: EGreg: there is no data.setEncoding
[17:55] dguttman has joined the channel
[17:55] EGreg_: how can I have something like "autoload" in node.js? I can't, right
[17:55] micheil: or, at least, I don't recall there being.
[17:55] EGreg_: like in php
[17:56] EGreg_: whats the proper way to throw exceptions
[17:56] micheil: EGreg: should be request.setEncoding(...)
[17:56] micheil: throw new Error?
[17:56] Ldrtan: micheil: done, of course "node, node-waf and node-repl" now find correctly
[17:56] micheil: callbacks(err, ...)
[17:56] Ldrtan: but still same error
[17:56] EGreg_: what do you mean request.setEncoding
[17:56] micheil: instead of data.setEncoding
[17:56] EGreg_: throw new Error? is Error a node.js class?
[17:57] EGreg_: who cares about encoding -- I just mean internally
[17:57] EGreg_: When I require, is it relative to the current file?
[17:57] SethX: you guys just mixed up EGreg_ and SethX right?
[17:57] micheil: see: http://pastebin.com/jtjN3Smp
[17:57] micheil: EGreg: if you use ./ it is.
[17:57] micheil: or ../
[17:57] Ldrtan: micheil:   Here is "crash dump" http://pastebin.com/nt81kWwS
[17:58] derferman has joined the channel
[17:58] SethX: thanks micheil 
[17:58] micheil: Ldrtan: I have no idea. waf sucks
[17:58] EGreg_: okay thanks
[17:58] tj: hahha waf does suck
[17:58] linnk has joined the channel
[17:59] jchris1 has joined the channel
[17:59] Ldrtan: micheil: :)))))))))))
[17:59] EGreg_: and I don't have to put .js at the end of it, do I
[17:59] EGreg_: or is it faster to do that
[17:59] EGreg_: require('./Pie/Exception');
[17:59] EGreg_: require('./Pie/Exception.js');
[17:59] micheil: EGreg: no, you can't put .js on it.
[17:59] EGreg_: oh okay
[17:59] micheil: EGreg: once again, read: http://nodejs.org/docs/v0.3.1/api/modules.html
[17:59] EGreg_: ohhhhh thanks
[18:00] EGreg_: I was reading this: http://nodejs.org/api.html
[18:00] SethX: micheil: its still not logging anyhting. and the ajax post request i'm making gets stuck at an OPTIONS request
[18:00] EGreg_: which is better?
[18:00] SethX: endlessly
[18:00] spetrea: man ... 
[18:00] micheil: EGreg: that's actually also on that page at: http://nodejs.org/api.html#modules-324
[18:00] tj: micheil: think you can, cant you?
[18:00] spetrea: I just installed a jabber bot on another machine
[18:00] tj: (.js)
[18:00] EGreg_: okay micheil
[18:00] EGreg_: so the api docs I am reading are up to date, right
[18:00] spetrea: and let me say ... encountered lots of problems while installing
[18:01] spetrea: stuff like, an enum in    eio.h of node.js having one too many commas ..
[18:01] spetrea: also libicu in Ubuntu/Debian are terrible, and the official 4.4.2   .tgz  needs to be used
[18:01] spetrea: in order to make node-stringprep work properly
[18:02] zomgbie has joined the channel
[18:02] spetrea:  @athoune  the dude who wrote node-xmpp-client I patched his client like 10 times for undefined stuff, maybe I'll have time to diff it and send it to him
[18:02] spetrea: also added some functionality to his stuff
[18:03] pagameba: SethX: are you using POST or PUT?  If not, I'm not sure the request will actually give you 'data' ...
[18:03] SethX: pagameba: i'd think POST
[18:03] SethX: but it seems to make an OPTIONS request prior to that
[18:04] SethX: and never gets to the POST
[18:04] UHMA: quick question, what's the easiest way to upgrade node?  just download the latest and config / make / install again ?
[18:04] micheil: tj: I don't think you can.
[18:04] Jonasbn_ has joined the channel
[18:04] MattJ: spetrea: who is that?
[18:04] tj: micheil: pretty sure you can, if you have ./config and ./config.js you can require('./config.js') im preetty sure
[18:04] tj: might have changed though
[18:05] pagameba: SethX: what about this: https://gist.github.com/715730
[18:05] micheil: tj: line 154 of src/node.js
[18:05] spetrea: MattJ: dunno, check out his github
[18:05] micheil: EGreg: for api docs, depends on which version.
[18:05] spetrea: also snooped a lot in the past month over Astro 's node-xmpp
[18:05] MattJ: spetrea: this one? https://github.com/athoune/node-xmpp-client
[18:05] spetrea: MattJ: right on
[18:05] MattJ: Not seen it before
[18:05] dohtem has joined the channel
[18:05] dohtem has joined the channel
[18:06] siculars has joined the channel
[18:06] unomi: UHMA, https://github.com/creationix/nvm
[18:06] jchris1 has joined the channel
[18:06] micheil: UHMA: easiest way is possibly nvm, but comes at initial setup cost
[18:07] micheil: second easiest is git clone'ing the repo, and then just recompiling / reconfiguring
[18:07] UHMA: very nice, thanks guys!
[18:09] spetrea: MattJ: were you lookin for it ?
[18:09] SethX: pagameba: same result. still makes an OPTIONS request first. if i run the same ajax post snippet agains localhost/ it works fine.
[18:09] MattJ: spetrea: No, just curious :)
[18:09] SethX: anyhow, i'm heading out. gluehwein time for me.
[18:09] SethX: thanks for the input y'all
[18:10] micheil: SethX: http://en.wikipedia.org/wiki/HTTP_OPTIONS#Request_methods
[18:10] micheil: HTTP OPTIONS would be maybe made by your js lib
[18:10] tanepiper: micheil: it's one of these stupid twitter things :)  basically i counts who has @replied me the most and says they are a fan :D
[18:10] SethX: micheil: perhaps. /me uses dojo
[18:11] micheil: tanepiper: ah, fair enough
[18:11] micheil: SethX: possibly ask in #dojo
[18:11] micheil: are you using any of the fancy dojo stuff?
[18:11] SethX: besides the xhr methods, no
[18:11] tj:  /clear
[18:11] tj: fml
[18:11] micheil: lol.
[18:12] tj: sorry haha im OCD but I always manage to do that
[18:12] micheil: I love it when people do that, tj.
[18:12] EGreg_: what is this.pathSeparator
[18:12] EGreg_: how do I get path separator on node, and dir separator character
[18:12] EGreg_: I can't, right?
[18:12] EGreg_: I just assume they are '/' and ':' always?
[18:12] micheil: EGreg: there's probably no need to.
[18:13] micheil: as node doesn't really run on windows environments
[18:13] EGreg_: why,because Node doesn't run on windows?
[18:13] EGreg_: ah okay
[18:13] EGreg_: :)
[18:13] EGreg_: What about MacOS 9? :P
[18:13] EGreg_: j/k
[18:13] micheil: if you're using an extremely outdated os, then you can expect issues
[18:14] Druid_ has joined the channel
[18:14] stephank has joined the channel
[18:14] EGreg_: what is the default exception handling btw
[18:14] EGreg_: if an uncaught exception happens
[18:14] tj: anyone had issues with eio_req data disappearing before?
[18:14] EGreg_: and the script is being accessed from the web, say
[18:14] EGreg_: oh I guess it prints to the console eh
[18:15] micheil: EGreg: for most of these, try it and find out, really.
[18:15] EGreg_: okay
[18:15] micheil: tj: hmm, no, I haven't
[18:15] tj: micheil: its really weird... occurs on fedora but not osx
[18:15] micheil: tj: anything in particular that's causing it?
[18:15] pagameba: EGreg: you can use path=require('path') and path.join(part1, part2);
[18:16] pagameba: one would hope that would be OS aware if windows is supported in the future
[18:16] tj: micheil: just a cast fails and leads to a segfault
[18:16] spetrea: hey, got this https://gist.github.com/715752  when a connection was timed out, and my node.js app crumbled
[18:16] micheil: tj: no ideas there, sorry man.
[18:16] spetrea: inside it I was making a request using http.createClient
[18:16] spetrea: and I explicitly installed a callback upon timeout
[18:17] EGreg_: does Node.js have a native merge function, or should I write one (extend, merge, etc.)
[18:17] micheil: spetrea: that's great, but we kinda need some code.
[18:17] micheil: EGreg: write (or steal) one.
[18:18] spetrea: like this https://gist.github.com/715754
[18:18] micheil: or do Object.create() :D
[18:18] spetrea: micheil: check out the last gist
[18:18] micheil: hmm..
[18:18] spetrea: EGreg_: you can use mine :)
[18:19] spetrea: EGreg_:  https://github.com/wsdookadr/Q-Chess/blob/rewrite/server/serv.js#L281
[18:19] romanb has joined the channel
[18:19] spetrea: EGreg_: this what you wanted ?
[18:19] micheil: spetrea: that's an interesting issue. I think it may be a bug.
[18:20] lstrojny_ has joined the channel
[18:20] micheil: or just bad design.
[18:20] spetrea: micheil: I'm after many hours of non-stop work.. and can't write a testcase atm(otherwise I would have) , can you please write a small one and report it as an issue on github ?
[18:20] EGreg_: hehe okay :)
[18:21] micheil: I have to go. thunderstorms.
[18:21] micheil: but check lib/net.js
[18:21] noahcampbell has joined the channel
[18:22] EGreg_: okay one more questio and that's it I promise, for now
[18:23] EGreg_: do all objects have a "constructor" property? How do I find out what function created them if any
[18:23] micheil: yes
[18:23] EGreg_: so I can have obj.constructor.name ?
[18:23] micheil: obj.constructor.constructor
[18:23] micheil: look up ECMA262
[18:23] EGreg_: huh? why .constructor.constructor?
[18:23] EGreg_: ecma262 says constructor.name
[18:23] micheil: v8: {}.constructor
[18:23] v8bot: micheil: SyntaxError: Unexpected token .
[18:23] micheil: v8: ({}).constructor
[18:23] v8bot: micheil: function Object() { [native code] }
[18:23] micheil: v8: ({}).constructor.constructor
[18:23] v8bot: micheil: function Function() { [native code] }
[18:23] vineyard: Now that's neat.
[18:24] micheil: --out. :/
[18:24] EGreg_: aha nice
[18:24] EGreg_: v8: ({}).constructor.constructor.constructor
[18:24] v8bot: EGreg_: function Function() { [native code] }
[18:24] EGreg_: :P
[18:24] EGreg_: v8: var x = new function () { };
[18:24] v8bot: EGreg_: undefined
[18:24] vineyard: v8: global
[18:24] v8bot: vineyard: ReferenceError: global is not defined
[18:24] EGreg_: v8: var x = new ( function () { } )(5);
[18:24] v8bot: EGreg_: undefined
[18:25] EGreg_: v8: var x = new ( function () { } )(5); x
[18:25] v8bot: EGreg_: {}
[18:25] spetrea: EGreg_: what language realm are you coming from ?
[18:25] micheil: spetrea: try finding out the errno for ETIMEOUT
[18:25] EGreg_: v8: var x = new ( function () { } )(5); x.constructor.name
[18:25] v8bot: EGreg_: ""
[18:25] EGreg_: PHP. But I know JS on the browser
[18:25] isaacs has joined the channel
[18:25] micheil: and then on("error" it.
[18:25] EGreg_: v8: var x = new ( function foo () { } )(5); x.constructor.name
[18:25] v8bot: EGreg_: "foo"
[18:25] boaz has joined the channel
[18:25] EGreg_: NICE! :)
[18:25] vineyard: v8: throw "lol"
[18:25] v8bot: vineyard: undefined: undefined
[18:25] spetrea: EGreg_: you can learn more js from crockford's book , check it out, also many articles on the web :)
[18:25] mscdex: v8: throw up;
[18:25] spetrea: ACTION should read crockford's book
[18:25] v8bot: mscdex: ReferenceError: up is not defined
[18:25] mscdex: :p
[18:25] isaacs: mscdex: the registry is just a couch app.  you actually do have access to it
[18:25] EGreg_: v8: typeof null
[18:26] v8bot: EGreg_: "object"
[18:26] EGreg_: it's great that I can just try things here. thakn
[18:26] EGreg_: oh I already know crockford :)
[18:26] isaacs: mscdex: not admin access, but all that prevents you from doing is monkeying with other peoples' packages
[18:26] EGreg_: just don't know Node.js environment specifically
[18:26] EGreg_: I mean v8
[18:26] isaacs: mscdex: web interface: http://isaacs.couchone.com/_utils/database.html?jsregistry
[18:26] losing has joined the channel
[18:26] mscdex: isaacs: yeah i know, but i mean be able to publish or update a package without having npm installed
[18:26] boaz has joined the channel
[18:26] isaacs: mscdex: well, you CAN with the web interface, it's just a lot harder.
[18:27] mscdex: that's what i mean, it'd be nice for a simple easy web-based way to do it
[18:27] EGreg_: does Node.js support eval
[18:27] isaacs: mscdex: it would be very difficult to get a web interface that's as easy as the cl
[18:27] EGreg_: v8: eval('x = 5'); x
[18:27] v8bot: EGreg_: 5
[18:27] EGreg_: ya
[18:27] vineyard: i would avoid using eval though
[18:27] isaacs: EGreg: yes.  Also, check out require("javascript") for other types of eva;
[18:28] mscdex: EGreg_: it's not so much a part of node as it is v8
[18:28] isaacs: mscdex: here's what you need to do: write a package.json.  npm adduser.  npm publish.  that's it.
[18:28] isaacs: mscdex: and for the first step, you can even use `npm init` to get started.
[18:28] vineyard: isaacs: require('javascript') => Error: Cannot find module 'javascript'
[18:28] EGreg_: right, ok
[18:28] EGreg_: node is basically what?
[18:28] EGreg_: v8 + a bunch of compiled-in C addons?
[18:28] isaacs: vineyard: it's in 0.3.1 and higher, i think
[18:28] vineyard: 0.3.2-pre
[18:29] isaacs: vineyard: you can use process.binding("evals") before that
[18:29] vineyard: is what i'm using
[18:29] EGreg_: isaacs: how do I check out require('javascript') ?
[18:29] EGreg_: what is a good way to inspect modules
[18:29] isaacs: oh, hey, it was removed i guess
[18:29] vineyard: becauseeee eval is evil<3
[18:29] tisba has joined the channel
[18:29] isaacs: oh, it's require("vm") now
[18:29] isaacs: i guess
[18:29] jchris1 has joined the channel
[18:30] vineyard: do you guys know if there's any encryption library for node out there
[18:30] vineyard: that has AES / Rijndael
[18:30] mscdex: isaacs: right, but with a web interface you could publish/update a package from any browser, no matter what platform you're on
[18:30] isaacs: vineyard: require("crypto")
[18:30] isaacs: built in, provided by openssl
[18:31] mscdex: you could log in and manage packages without even having node installed
[18:31] isaacs: mscdex: that's easier said than done.  you'd still have to tar and gzip it, upload the whole folder, and you'd really want to verify the data and such.
[18:31] vineyard: thanks, isaacs 
[18:31] isaacs: mscdex: not to mention generating shasums
[18:31] vineyard: openssl does indeed have it
[18:31] bruse: so many people in here..
[18:31] isaacs: vineyard: yeah, the crypto binding is cool
[18:31] vineyard: indeed
[18:31] mscdex: isaacs: no, i'm mostly talking about urls here
[18:31] vineyard: i was looking to bridge and glue a c++ library
[18:31] mscdex: like for github
[18:32] EGreg_: okay the most important q of all:
[18:32] isaacs: mscdex: npm publish http://github.com/mscdex/project/tarball/tagorbranch
[18:32] EGreg_: Pie = require(APP_CLASSES_DIR+'Pie.js'); <-- can I require filenames which are known at runtime like so?
[18:32] EGreg_: I can, right?
[18:32] mscdex: isaacs: right, but from the web :)
[18:32] isaacs: EGreg: yes
[18:32] EGreg_: great
[18:32] dtrasbo has joined the channel
[18:32] isaacs: mscdex: again, easier said than done
[18:32] mscdex: isaacs: how is that?
[18:32] isaacs: mscdex: honestly, the easiest way to put that together would be to have a node server that talks to an npm install on the server and does it for you
[18:33] isaacs: mscdex: but i wouldn't be comfortable givingit my password
[18:33] spetrea: isaacs , ryan[WIN]   maybe you could have a look at this please ? https://github.com/ry/node/issues/issue/451
[18:33] spetrea: thanks
[18:33] isaacs: mscdex: also, i think that's a hairy yak.  not a real use case.  i'd rather not shave it.
[18:34] isaacs: spetrea: ryan dahl is ryah, btw
[18:34] EGreg_: what is better to use, exports. or this.  in V8?
[18:34] SubStack: too many ryans
[18:34] EGreg_: in Node.js, does it matter
[18:34] SubStack: instead of names we should all go by unique hexadecimal identifiers
[18:34] isaacs: spetrea: you need to do r.end()
[18:34] spetrea: ryah: https://github.com/ry/node/issues/issue/451
[18:34] isaacs: spetrea: that's what actually finishes sending your request body
[18:35] spetrea: isaacs: it's commented at the bottom of that snippet
[18:35] aurynn has joined the channel
[18:35] spetrea: isaacs: if I do r.end() it terminates immediately
[18:35] spetrea: isaacs: problem is, timeout callback isn't called
[18:36] mscdex: spetrea: net.Stream.setTimeout isn't a connection timeout, it's an idle timeout
[18:36] isaacs: spetrea: i think yor'e missing what "timeout" does.  it's not timing out the request, it's timing out when the server doesn't respond.
[18:36] isaacs: spetrea: if you never .end() the request, then the server might disconnect you, but that's not the same thing
[18:36] isaacs: spetrea: set up a *server* endpoint that never ends, and it'll timeout
[18:37] EGreg_: how to get current unix timestamp in js
[18:37] EGreg_: perhaps with ms
[18:37] isaacs: spetrea: ie, r.on("timeout" isn't when *I* timeout, it's when *YOU* timeout
[18:37] Max-Might has joined the channel
[18:37] vineyard: EGreg_: if you want to expose the object to other modules, then exports 
[18:37] isaacs: v8: Date.now() // EGreg
[18:37] v8bot: isaacs: 1290710243256
[18:37] EGreg_: Date.now() great :)
[18:37] EGreg_: thanks
[18:37] isaacs: EGreg: on less awesome js engines, it's:
[18:37] isaacs: v8: (new Date).getTime()
[18:37] v8bot: isaacs: 1290710272300
[18:38] isaacs: v8: +new Date
[18:38] v8bot: isaacs: 1290710290199
[18:38] isaacs: or that
[18:38] Garo_: is there any way how to hook an event when a object is being gc'd?
[18:38] Garo_: we're having a memory leak somewhere in our code and it would be nice if there would be a way to explictly detect and determine when an object is recycled by the gc
[18:38] isaacs: mscdex: so, the reason i call it a yak, is that if you're publishing npm packages, the requirement that you are using npm is pretty reasonable.
[18:39] davidascher has joined the channel
[18:39] isaacs: Garo_: you could check out bmeck's node-overload, but really, the answer is "not from js alone" https://github.com/bmeck/node-overload
[18:40] Garo_: isaacs: thanks for the tip. I'm ready to patch v8 if that's needed
[18:40] Garo_: we have been now spending better part of a week after this
[18:40] isaacs: Garo_: you can use valgrind, too
[18:40] isaacs: but that's for leaks from C/C++ land
[18:41] Garo_: the leaks are happening in the js side
[18:41] Garo_: or that's our theory
[18:43] lstrojny_ has joined the channel
[18:43] qFox has joined the channel
[18:44] yozlet has joined the channel
[18:45] spetrea: isaacs: just tried with a php script which waits 5 seconds and then prints hello world, and my callback wasn't called
[18:45] spetrea: isaacs: my timeout was of 3 secs
[18:46] spetrea: mscdex: so how does one set a timeout callback ?
[18:46] aconbere: Garo_: I know there's a tool that hooks node into chrome's debugger
[18:46] aconbere: isaacs: (maybe you can remember the name)
[18:46] aconbere: chrome's debugger has a heap snapshotting tool
[18:47] aconbere: not sure if that works as well
[18:47] aconbere: but if it /did/ then while it's not the best way, it at least gives you a little introspection into what's leaking
[18:48] vineyard: spetrea: setTimeout(callback, timeout) ?
[18:48] evanmeagher has joined the channel
[18:49] ehaas has joined the channel
[18:49] isaacs: Garo_, aconbere: yeah, there's also ndb and node-inspector
[18:49] isaacs: (both installable from npm)
[18:49] mikeal has joined the channel
[18:51] Garo_: yeah, we tried node-inspector for a while
[18:51] Garo_: but I couldn't get anything conclusive out of it. it said that the heap had 70MB Strings, but I couldn't exactly figure out where those strings where
[18:52] Garo_: every time when I opened the subtree under the String, the first match would be a String which had another String under it and looping for ever
[18:52] isaacs: spetrea: https://gist.github.com/715781
[18:52] isaacs: spetrea: works for me
[18:53] Druid_ has joined the channel
[18:54] mattly has joined the channel
[18:56] spetrea: isaacs: thanks man
[18:56] spetrea: :)
[18:57] EGreg_: hey guys question
[18:57] EGreg_: when I include modules like this:
[18:57] EGreg_: exports.Bootstrap = require('./Boostrap');
[18:57] EGreg_: is there a way that Boostrap module can use the objects declared in the module which includes it?
[18:57] EGreg_: Meaning, I want to have    Pie, Pie.Bootstrap, Pie.Config and other classes, but Pie.Config should be able to call methods of Pie
[18:58] EGreg_: Pie the object.
[18:58] isaacs: EGreg: exports.Bootstrap = require("./bootstrap")(Pie, Pie.Bootstrap, Pie.Config) ; // in bootstrap.js:   module.exports = function (Pie, Pie.Bootstrap, Pie.Config) { return { "my boots" : "are strapped" }}
[18:58] isaacs: }
[18:59] EGreg_: aha! You can pass things to require!! NICE :)
[18:59] isaacs: EGreg: notice that i can do this becuase i set module.exports to a function
[18:59] EGreg_: module.exports is a function, eh
[18:59] vineyard: nope, but you can change it to be
[18:59] EGreg_: I didn't know that module was a keyword
[18:59] EGreg_: okay and if it's a function, then what happens
[18:59] frodenius: it's not
[18:59] isaacs: EGreg: if i'd done exports.Bootstrap = function (blah, bloo, blaz) then i'd've done require("bootstrap").bootstrap(some, things)
[19:00] isaacs: module.exports is just another ref to the exports object
[19:00] isaacs: so you can export just one thing
[19:00] isaacs: it's what require() returns
[19:00] EGreg_: oh so I can just use exports = function () ? no, right
[19:00] isaacs: no, you can't
[19:00] isaacs: because it'll just lose the ref, but module.exports is what matters.
[19:00] isaacs: exports is just a shorthand to that
[19:00] EGreg_: and this module.exports thing won't be changed by Node later?
[19:01] EGreg_: got it. How come the node.js documentation doesn't say all this
[19:01] isaacs: it's what node looks at after running your module.
[19:01] isaacs: i thought it did...
[19:01] EGreg_: maybe, but not this
[19:01] isaacs: oh, no, it doesn't.
[19:01] isaacs: it's secret!
[19:01] vineyard: black magic
[19:01] isaacs: you should update doc/api/modules.markdown and add it
[19:01] isaacs: send a patch
[19:02] EGreg_: yeah hehe
[19:02] EGreg_: that was the prob, bob
[19:02] EGreg_: I didn't know you could do that. it makes it seem like exports = this is the biggest thing since sliced bread
[19:02] EGreg_: but there's a BIGGER thing called module.
[19:03] isaacs: yeah
[19:03] isaacs: happy thanksgiving
[19:03] EGreg_: and you are saying that I can even re-assign the module.exports property!
[19:03] EGreg_: happy thanksgiving y'all :)
[19:03] AAA_awright has joined the channel
[19:04] fly-away has joined the channel
[19:05] aconbere: It would probably help a lot of people (I think is the second time this week we've had a solid qustion about module exports)
[19:06] sriley has joined the channel
[19:06] aconbere: yeah, I mean I don't know how the module system actually works
[19:06] aconbere: :)
[19:07] aconbere: it would be nice for the module documentation to talk a little bit about what's happening
[19:09] losing has joined the channel
[19:10] aconbere: https://github.com/ry/node/blob/master/src/node.cc#L947
[19:11] Anti-X has joined the channel
[19:11] aconbere: https://github.com/ry/node/blob/master/src/node.js#L93
[19:11] aconbere: that looks like it's probably where it happens?
[19:14] aconbere: https://github.com/ry/node/blob/master/src/node.js#L328
[19:14] jherdman_ has joined the channel
[19:18] aconbere: If I wanted to figure out how those script functions worked (aka runInthisContext) etc.
[19:18] aconbere: where should I look?
[19:18] aconbere: I assume those are from v8
[19:18] aconbere: not having much experience with v8 that seems a little deep to just starting randomly walking
[19:19] aconbere: ah
[19:19] aconbere: actually there's node documentation for it
[19:19] aconbere: :-/
[19:20] zomgbie has joined the channel
[19:21] aconbere: okay
[19:21] aconbere: so ever file loaded with require
[19:21] aconbere: returns a new Module
[19:21] Kami_ has joined the channel
[19:21] Kami_ has joined the channel
[19:21] aconbere: which loads itself by wrapping the actually source in function (blah, blah , blah)
[19:22] vineyard: right, when you use net.createServer and its "data" event, what does the buffer indeed contain?
[19:22] aconbere: where blah blah and blah are handed to it from a sandboxed object
[19:22] vineyard: if you have a stream of data, how much of it do you actually receive?
[19:23] Druid_ has joined the channel
[19:23] AAA_awright_ has joined the channel
[19:25] Kami_ has joined the channel
[19:27] yumike has joined the channel
[19:29] aconbere: hummm
[19:30] aconbere: I'm not sure I know what the difference between a contextLoad and not contextLoaded modules is
[19:30] pagameba: node-inspector FTW!
[19:30] lmorchard has joined the channel
[19:31] aconbere: nor am I entirely sure how global works in the context of Script.runInThisContext
[19:33] cagdas has joined the channel
[19:34] aconbere: heh
[19:34] aconbere: It would just be nice to have an article on how Node works!
[19:34] hornairs has joined the channel
[19:34] Druid_ has joined the channel
[19:35] aconbere: node.js defines a function that gets handed a single arguement "process"
[19:35] aconbere: but process isn't given to it in that file
[19:35] aconbere: (node.js being the file src/node.js)
[19:36] aliem has joined the channel
[19:37] tanepiper: Is there a way to force the name of a file being downloaded on a generic URL?
[19:37] V1 has joined the channel
[19:37] MattJ: Hint yes, force no
[19:37] tanepiper: i have an express route for /attachments/download and I post the variables of the couchdb doc + attachment name I want, and i got fetch, but when the browser popup for saving the files comes up, it's called download
[19:38] tanepiper: hinting would be fine
[19:38] sivy has joined the channel
[19:38] MattJ: e.g. Content-disposition: attachment; filename=something.doc
[19:38] MattJ: iirc
[19:38] tanepiper: oh right i remember that from PHP
[19:39] maushu has joined the channel
[19:39] matt_c has joined the channel
[19:41] tj: tanepiper: res.download()
[19:41] tj: check out the docs
[19:41] tj: tanepiper: or http://expressjs.com/guide.html#res-attachment-filename-
[19:41] tj: tanepiper: http://expressjs.com/guide.html#res-download-file-filename-
[19:41] tanepiper: i'm using sendfile, so it download better?
[19:42] tanepiper: oh i see, i can pass the filename as a second param
[19:42] EGreg_: v8: v = []; typeof v
[19:42] v8bot: EGreg_: "object"
[19:43] tj: EGreg_: you want Array.isArray()
[19:43] jimt has joined the channel
[19:43] adambeynon has joined the channel
[19:43] tanepiper: yay, that fixes it :D
[19:45] nsolsen has joined the channel
[19:46] evanmeagher has joined the channel
[19:47] lstrojny_ has joined the channel
[19:47] yeevgen has joined the channel
[19:48] matjas has joined the channel
[19:50] T-Co: Has someone used node-twitter in here? What do I need to do in order to get all the keys and secrets that are required?
[19:53] jelveh has joined the channel
[19:53] cjmFloating has joined the channel
[19:54] aubergine has joined the channel
[19:55] maushu: T-Co, keys? You mean the api keys? You need to register a twitter application in twitter.
[19:56] tanepiper: yes, hang on
[19:57] tanepiper: https://gist.github.com/575303
[19:57] tanepiper: i mean 'nodejs twitter oauth' in google does get you this too :P
[19:59] jimt_ has joined the channel
[19:59] sh1mmer has joined the channel
[20:03] T-Co: yeah, figured it out, thanks :)
[20:03] Druid_ has joined the channel
[20:06] V1 has joined the channel
[20:06] losing has joined the channel
[20:07] jimt has joined the channel
[20:10] pietern has joined the channel
[20:11] Spion_ has joined the channel
[20:12] jimt has joined the channel
[20:12] Druid_ has joined the channel
[20:12] Anti-X has joined the channel
[20:13] carlocci has joined the channel
[20:15] dxld has left the channel
[20:17] programble has joined the channel
[20:18] abiraja has joined the channel
[20:18] 13WAARHH4 has joined the channel
[20:21] SethX: it got awfully quiet in here :) dinnertime in .eu ? :)
[20:22] evanmeagher: SethX: All us US folks are probably with family and/or food
[20:22] SubStack: not me, I'm hacking on a flow control library
[20:23] SethX: substack must be british
[20:23] SethX: :)
[20:23] SethX: happy thanksgiving btw
[20:23] SubStack: nope, .us
[20:23] Druid_ has joined the channel
[20:23] evanmeagher: SubStack: ditto, but npm
[20:24] evanmeagher: you too, SethX :)
[20:24] SethX: has anybody ever had to deal with OPTIONS responses?
[20:24] SubStack: http options? blech
[20:24] SethX: eh.
[20:24] SethX: the w3c specs are uncomprehensible as usual
[20:25] SethX: SubStack: been there?
[20:26] SubStack: been to where?
[20:26] ossareh has joined the channel
[20:26] SubStack: poorly drafted monolithic documents?
[20:27] SethX: no, ajax post requests to the root of a domain which generate a OPTIONS request prior to the POST request
[20:27] ehaas: i've been there
[20:27] ehaas: what's the question
[20:27] SethX: what does OPTIONS have to respond?
[20:28] webr3: likewise (after finishing dinner in the .eu)
[20:28] ehaas: Access-Control-Allow-Origin
[20:28] ehaas: and many others
[20:28] ehaas: heheh
[20:28] ehaas: https://developer.mozilla.org/En/HTTP_access_control
[20:28] SethX: ah, so its the OPTIONS and not the POST that replies th acces ontrol
[20:28] ehaas: yes
[20:28] SethX: ehaas: got a code snippet to share?
[20:28] webr3: SethX, see: http://enable-cors.org
[20:28] ehaas: some browsers will also need an Access-Control-Allow-Origin header in the response to the POST in order to make the response available to the browser
[20:29] ehaas: i dont have anything for node
[20:29] webr3: iirc POST doesn't need a preflight request
[20:30] matt_c_ has joined the channel
[20:30] ehaas: it does if you send custom headers
[20:30] ehaas: for example jquery sets X-Requested-With
[20:30] ehaas: or something like that
[20:30] webr3: what have you got on the server side?
[20:30] SethX: ehaas: do you know if that needs a specific content type?
[20:31] SethX: webr3: node of course :)
[20:31] aconbere: ryah: are you interested at all in patches that make internal js modules a little more "javascripty" ?
[20:31] ehaas: if what needs a specific content type?
[20:31] webr3: ahh shite i thought I was in a different room
[20:31] webr3: ACTION nodes #node
[20:31] SethX: the response
[20:31] SethX: i have no clue about headers tbh
[20:31] ehaas: the response can be any content type
[20:31] SethX: might be an absurd question :)
[20:31] SethX: ah ok
[20:32] webr3: okay a preflight request comes in, which is an options, when you've got that you want to reply back with a bucnh of response headers to say what to allow
[20:32] webr3: Access-Control-Allow-Origin: domain.com
[20:32] SethX:  'Content-Type': 'text/plain',
[20:32] SethX:         'Access-Control-Allow-Origin': '*',
[20:32] SethX:         'Access-Control-Allow-Methods': 'POST, GET',
[20:32] SethX:         'Access-Control-Max-Age': 1728000
[20:32] webr3: Access-Control-Allow-Methods: GET, POST
[20:32] SethX: this is what i've got
[20:32] ehaas: you probably also want to set xhr.withCredentials = true in your js
[20:32] SethX: seemfine?
[20:33] ehaas: and Access-Control-Allow-Credentials: true in the response
[20:33] webr3: the * won't cut it if I remember, that's for GET only, you'll need to respond with the value from the Origin header that was sent
[20:33] webr3: (if you allow that origin)
[20:34] SethX: er, in plain english?
[20:34] ehaas: Access-Control-Allow-Origin tells the browser what domains are allowed to make cross-origin requests
[20:34] webr3: the preflight request sends a header Origin: domain.com (where domain.com is fromt he url fo the page being viewed and making the request
[20:35] SethX: yah
[20:35] webr3: you need to pick up that Origin header that was sent, get the value and send it back in the Access-Control-Allow-Origin: header
[20:35] webr3: if you want to allow it that is
[20:35] SethX: i see
[20:35] SethX: ok
[20:35] webr3: or hard code it in there if only for one domain
[20:35] webr3: np
[20:35] SethX: i'll try that
[20:35] ehaas: or you can use '*' to say all domains are allowed
[20:35] webr3: ehaas, that's for GET only iirc
[20:36] webr3: POST/PUT/DELETE etc needs an exact match
[20:36] Locke23rus has joined the channel
[20:36] ehaas: ok
[20:37] isaacs has joined the channel
[20:38] Booths has joined the channel
[20:38] jimt has joined the channel
[20:39] 13WAARHH4: Howdy there, i'm looking for a .conf (or .ini) file parser for node.js, took a quick look on Google , but couldn't find one, is there one?( Or is there a way to have "configuration" for a node.js app and i missed it? :d )
[20:40] vineyard: i suggest json
[20:40] matt_c has joined the channel
[20:41] 13WAARHH4: vineyard: mmh just that json is not "nice" to read and stuff, even though it would make sense in the nodejs environment
[20:42] vineyard: i think it's pretty clear
[20:42] vineyard: but everyone has opinions
[20:43] 13WAARHH4: yeah, i guess i am more used to the .ini/.conf standard , i'll take a look at how to make a clear (with comment) JSON based conf file
[20:43] jimt_ has joined the channel
[20:44] vineyard: is arguments.callee deprecated or what
[20:44] SethX: webr3, ehaas : obviously http://localhost as a origin is one of those darn special cases
[20:44] vineyard: is it ok to use it
[20:44] ehaas: i dont think localhost is special...
[20:44] ehaas: filesystem is special
[20:44] ehaas: did you specify the port correctly also
[20:44] SethX: isnt 80 default?
[20:45] ehaas: yea
[20:45] ehaas: if you're running on 80 should be fine
[20:45] ehaas: what browser are you using
[20:45] SethX: ff 3.5
[20:46] SethX: lol sry 3.6.12
[20:46] jelveh has joined the channel
[20:47] ehaas: firebug?
[20:47] ehaas: do you see any errors in the console
[20:48] ehaas: i cant remember if it's chrome or ff but one of them tells you if there's a cross-origin problem
[20:48] jacobolus has joined the channel
[20:49] SethX: Error: bad http response code:0 { message="bad http response code:0", more...}
[20:49] SethX: thats what i get
[20:50] SethX: http://pastebin.com/jdK8kgPw
[20:51] ehaas: can i see your client-side code also
[20:52] SethX: http://pastebin.com/FZdVUpf9
[20:52] carlocci: is it possible to load a script in the interactive interpreter?
[20:53] SethX: it's the error which is being thrown
[20:53] ehaas: look into whether dojo sets additional http headers
[20:53] jimt has joined the channel
[20:53] ehaas: you might need to allow it in Access-Control-Allow-Headers
[20:53] ehaas: also whether it's sending the cookie, in which case you would need to Access-Control-Allow-Credentials: true
[20:54] SethX: all it sets is ("X-Requested-With", "XMLHttpRequest");
[20:54] SethX: and i've got no credentials
[20:54] ehaas: ok
[20:55] ehaas: so you need "Access-Control-Allow-Header: X-Requested-With"
[20:55] ehaas: since it's a non-standard header
[20:56] SethX: ehaas: same effect
[20:56] SethX: god this is a pain
[20:57] paulwe has joined the channel
[20:57] mr_daniel has joined the channel
[20:58] _mythz has joined the channel
[20:58] ehaas: you should probably return after the response.writeHead in the OPTIONS if block
[20:58] webr3: scrap the response.write("POST");
[20:58] ehaas: yea
[20:59] ehaas: you also appear to be calling writeHead twice in the OPTIONS case...not sure what node does if you do that
[21:00] SethX: oh snap
[21:00] SethX: very true. :)
[21:00] erlnoob has joined the channel
[21:01] webr3: ahh that reminds me
[21:01] webr3: https://github.com/webr3/xhr - XMLHttpRequest for node, kind of a 1.5 will many of the new xhr2 features like progress events - tis a full works as expected implementation
[21:02] hellp has joined the channel
[21:02] ehaas: nice
[21:02] SethX: isnt that cute...
[21:03] SethX: well, today i'll call it a day :)
[21:03] SethX: have a good one y'all 
[21:04] ehaas: worked?
[21:05] jelveh_ has joined the channel
[21:07] sambao21 has joined the channel
[21:09] ph^ has joined the channel
[21:11] matjas has joined the channel
[21:12] jimt_ has joined the channel
[21:13] ossareh has joined the channel
[21:13] cagdas has joined the channel
[21:14] pietern has joined the channel
[21:14] vineyard: how can i read console input in node?
[21:15] SubStack: vineyard: process.openStdin()
[21:18] jimt has joined the channel
[21:18] isaacs has joined the channel
[21:21] mikeal has joined the channel
[21:22] sh1mmer has joined the channel
[21:25] yatiohi has joined the channel
[21:25] ceej has joined the channel
[21:31] evanmeagher has joined the channel
[21:33] spetrea_ has joined the channel
[21:34] quirkey has joined the channel
[21:34] matt_c has joined the channel
[21:36] abiraja has joined the channel
[21:37] rcy has joined the channel
[21:38] jarek has joined the channel
[21:41] MikhX has joined the channel
[21:42] ehaas has left the channel
[21:46] zomgbie has joined the channel
[21:47] hassox has joined the channel
[21:50] isaacs has joined the channel
[21:52] EGreg_ has joined the channel
[21:53] EGreg_: v8: 0
[21:53] davidc_ has joined the channel
[21:53] v8bot: EGreg_: 0
[21:53] EGreg_: v8: typeof null
[21:53] v8bot: EGreg_: "object"
[21:53] EGreg_: v8: typeof []
[21:53] v8bot: EGreg_: "object"
[21:53] EGreg_: hmm
[21:53] EGreg_: v8: x === undefined
[21:53] v8bot: EGreg_: ReferenceError: x is not defined
[21:53] EGreg_: v8: this.x === undefined
[21:53] v8bot: EGreg_: true
[21:54] EGreg_: v8: this.x = null; this.x === null
[21:54] v8bot: EGreg_: true
[21:54] EGreg_: :)
[21:54] EGreg_: v8: [].constructor
[21:54] v8bot: EGreg_: function Array() { [native code] }
[21:54] EGreg_: v8: [].constructor.name
[21:54] v8bot: EGreg_: "Array"
[21:54] EGreg_: v8: "blah".constructor.name
[21:55] v8bot: EGreg_: "String"
[21:55] EGreg_: v8: 8.constructor
[21:55] v8bot: EGreg_: SyntaxError: Unexpected token ILLEGAL
[21:55] EGreg_: okay
[21:56] erlnoob: when node is serving a request, as long as it doesn't do any I/O (strictly computation) it does not yield to other requests, right?
[21:56] shaver: right
[21:57] gilesgoatboy has joined the channel
[21:58] tisba has joined the channel
[21:58] tanepiper: ACTION wonders who "supporting" is
[21:58] EGreg_: hey guys I have a question about module.exports
[21:58] EGreg_: if module.exports is a function, how can I make it return a constructor
[21:59] EGreg_: I guess I can't, right? It can just return a new obejct every time? or what
[21:59] EGreg_: var users = require('users')(2, 3);
[21:59] EGreg_: var users2 = require('users')(2, 3); // does it invoke the function twice? or no
[22:01] yozlet has joined the channel
[22:01] erlnoob: shaver: will this behavior change in the past, as I've heard plans to support webworkers in the future?
[22:01] erlnoob: change in the future i mean
[22:02] EGreg_: can someone please help me
[22:02] c4milo has joined the channel
[22:03] EGreg_: tell me whether require runs my function twice here:
[22:03] EGreg_: var users = require('users')(2, 3);
[22:03] EGreg_:  <EGreg_> var users2 = require('users')(2, 3); // does it invoke the function twice? or no
[22:04] Anti-X: it invokes the function twice
[22:04] Anti-X: but it only includes the module once
[22:04] evanmeagher: isaacs: I'm playing with ways to structure the npm completion code
[22:04] ph^ has joined the channel
[22:04] evanmeagher: isaacs: a switch stmt makes sense, but the need for breaks is ugly: https://gist.github.com/f38ecef49bcb49836574
[22:04] isaacs: evanmeagher: it seems like it would be good to have something like the way that the usage strings are assigned per-command
[22:05] isaacs: evanmeagher: breaks are fine.  that's what they're for.
[22:05] isaacs: you don't need the {} around the case blocks.  i usually just indent, and then outdent the break
[22:05] evanmeagher: isaacs: cool, thanks
[22:06] Aria has joined the channel
[22:06] isaacs: it should look at more than just the previous, though
[22:06] isaacs: if i do "npm install set <tab>" then it shouldn't look at config keys
[22:06] evanmeagher: yeah, that's another thing i was thinking as well
[22:06] isaacs: don't get too invested in this simple approach, but it's good to flesh out the issues and requirements.
[22:07] isaacs: i think there needs to be some kind of routing type thing, but i worry that might be overkills.
[22:07] isaacs: *overkill
[22:08] evanmeagher: routing, how?
[22:10] EGreg_: hey guys can someone please help me
[22:10] EGreg_: I have two quick q's
[22:10] JimBastard has joined the channel
[22:11] EGreg_: one: if I call require('foo')(a, b) twice and module.exports is a function, will it be called twice?
[22:11] SubStack: JimBastard: stupid reddit haters :/
[22:11] JimBastard: SubStack: lol
[22:11] JimBastard: im about to do another post if you want to chime in
[22:12] JimBastard: i feel bad for this guy who spends all this time attacking me
[22:12] EGreg_: one: if I call require('foo')(a, b) twice and module.exports is a function, will it be called twice?
[22:12] JimBastard: :-\
[22:12] EGreg_: hehe
[22:12] evanmeagher: isaacs: by routing, you mean like the usage string example you mentioned?
[22:13] hassox has joined the channel
[22:13] isaacs: evanmeagher: well, i mean like, if you do `npm inst<tab>` it expands to `npm install `
[22:13] isaacs: evanmeagher: then if you tab again, it knows that iw as install, and expands to package names
[22:13] isaacs: if you have ./ then it'll expand to folder or filenames.
[22:14] isaacs: if you pick a package name, then it'll expand to just that package name, and if you hit tab again, it'll look for the tags and versions of that package
[22:14] isaacs: likewise, you have npm c<tab>-->npm config <tab>-->npm config set <tab>--> npm config set (key), etc
[22:14] EGreg_: isaacs can you please help
[22:15] EGreg_: you told me about module.exports being a function, and that's great, but since it's not documented, I am running into a big question
[22:15] EGreg_: one: if I call require('foo')(a, b) twice and module.exports is a function, will it be called twice?
[22:15] isaacs: EGreg: if you call the function twice, yes, it will be called twice.
[22:15] EGreg_: two : can I use require('foo') as a constructor?
[22:15] isaacs: EGreg: consider:  f = require("foo");  f(a, b);  f(b, c)
[22:15] isaacs: EGreg: F = require("foo");  f = new F
[22:15] EGreg_: ohhhhh I get it
[22:15] isaacs: the function will only be *created* once, however
[22:16] Yuffster has joined the channel
[22:16] EGreg_: I have to return a constructor from module.exports function! 
[22:16] EGreg_: Like so:
[22:16] isaacs: all you're doing by doing require("foo")(a) is that you're calling the function as soon as you get it
[22:16] isaacs: check out (fab) for more brain twisting
[22:16] vineyard: guys, try to run this http://pastebin.com/xgmGPBSm
[22:16] vineyard: a
[22:16] vineyard: and then execute ia.next() and then ia.prev()
[22:17] gilesgoatboy: hey, I'm reading a file and it craps out about a third of the way through. what do I need to do keep node reading the file until it ends?
[22:17] vineyard: i've been debugging that for an hour but I still can't figure why it doesn't pop the last element out of the stack
[22:17] aconbere: gilesgoatboy: how are you reading it?
[22:17] EGreg_: Pie/Parameters.js:     module.exports = function (Pie) { function Parameters (bar) { this.foo = bar; };  Parameters.someStaticMethod = function() {  };  return Parameters; }
[22:17] EGreg_: this is a good pattern, yes>
[22:17] pdelgallego has joined the channel
[22:17] EGreg_: what do you mean (fab)
[22:18] isaacs: EGreg: https://github.com/jed/fab
[22:18] EGreg_: isaacs: if calling require('foo')(3) multiple times causes one to call the function multiple times, perhaps I should guard it with Pie.req('foo') 
[22:19] EGreg_: it may be undesirable behavior
[22:19] vineyard: i'd appreciate it if someone bothered to take a look :(
[22:19] isaacs: EGreg: or set up a memoizer or something
[22:19] EGreg_: memoizer? Do you mean I have to have a private object and always return it from within function?
[22:19] gilesgoatboy: aconbere: https://gist.github.com/716004
[22:20] aconbere: EGreg_: memoization is the process of storing the partially completed results of a function for use in repitious callings.
[22:20] aconbere: EGreg_: there are numerous method for achieving memoization
[22:20] c4milo has left the channel
[22:21] EGreg_: basically I should just take var Config and move it from inside to Outside the function
[22:21] EGreg_: that way it'll be in the closure
[22:21] EGreg_: got it :)
[22:22] EGreg_: And sometimes, I can make it = {}, and other times, make it equal to a function. That's aesome
[22:22] EGreg_: thanks doods
[22:22] EGreg_: that clears up everything. Multiple calls with require. Memoizers. YAY! :)
[22:23] pagameba: vineyard looking
[22:23] vineyard: thanks :) the problem is Interaction.prototype.prev(), it doesn't pop the stack even though it should :Q
[22:24] gilesgoatboy: aconbere / anyone: any idea what I'm doing wrong with file-opening in https://gist.github.com/716004 ? I'm using a lisp which compiles to node.js, but I know it can do this - I got it to work the other day on another machine
[22:24] aconbere: gilesgoatboy: that seems, like incorrect use of read
[22:25] aconbere: read takes a buffer as its second argument
[22:25] aconbere: not an int
[22:25] pagameba: vineyard, what do I do with this thing when it runs?
[22:25] vineyard: ia.next()
[22:25] vineyard: ia.prev()
[22:25] aconbere: not only that, but returning fs.read seems doubly weird
[22:25] gilesgoatboy: I'll try that. I got it from a blog, it's probably out of date
[22:25] EGreg_: v8: function (a) { return (a === undefined) }();
[22:25] v8bot: EGreg_: SyntaxError: Unexpected token (
[22:25] aconbere: ACTION nods
[22:25] EGreg_: v8: (function (a) { return (a === undefined) })();
[22:25] v8bot: EGreg_: true
[22:25] EGreg_: nice! :)
[22:25] gilesgoatboy: the return statements are an artifact of the lisp compiler
[22:25] aconbere: gilesgoatboy: I would just read the documentation for FS
[22:25] gilesgoatboy: I agree they're a bit weird
[22:25] aconbere: hehe
[22:25] aconbere: okay :)
[22:26] pagameba: vineyard ok, it does stuff ... looking
[22:26] aconbere: and fs.readFile would do all of that I think
[22:26] aconbere: without so much work
[22:27] gilesgoatboy: going to replace 10000 with new Buffer(10000)...
[22:27] vineyard: pagameba: the idea is that I have a call stack I can rewind and continue whenever I like
[22:27] vineyard: but the stack doesn't seem to rewind properly
[22:27] aconbere: gilesgoatboy: you'll need that outside of the scope of read
[22:28] aconbere: read is going to write into a buffer, and I would suspect you want to read off of the buffer
[22:28] aconbere: (otherwise why bother right?)
[22:28] gilesgoatboy: that would certainly make sense
[22:31] pagameba: vineyard it seems to be a logic error
[22:31] vineyard: how's that? :s
[22:31] gilesgoatboy: hm, ok. well before it was getting about 130 lines into a file about 550 lines long. now it's not doing jack. but, I have it doing sys.puts(string) still, and it should probably be reading from the buffer instead so I'm a check that
[22:32] pagameba: vineyard if you pop twice it works
[22:32] vineyard: hmm, i wonder why it has to be popped twice though. :o
[22:32] pagameba: I called next() twice and when I stop in prev() it has 3 things in the stack, not two
[22:33] pagameba: somehow next says 'A' but puts 'A' and 'B' into the stack
[22:33] aconbere: gilesgoatboy: yeah buffer.toString()
[22:33] aconbere: should read out the buffers contents
[22:33] pagameba: so when you prev it pops 'B' and gives you 'A' again
[22:33] EGreg_: v8: var k = [2, 3, 4]; for (i in k) { x[i] = 9 }; x
[22:33] v8bot: EGreg_: ReferenceError: x is not defined
[22:33] vineyard: hmm, that's very, very weird
[22:33] EGreg_: v8: var k = [2, 3, 4]; var x = {}; for (i in k) { x[i] = 9 }; x
[22:33] v8bot: EGreg_: {"0": 9, "1": 9, "2": 9}
[22:33] EGreg_: wow really?????
[22:33] EGreg_: I can actually do for (x in SOmeArray) safely in V8?
[22:34] EGreg_: Because in Chrome, et. al we have all of array's other methods (such as .length) being enumerated
[22:34] EGreg_: how come it's not happening here?
[22:34] vineyard: chrome uses v8
[22:34] EGreg_: then why in chrome do I get "length" and other keys
[22:34] EGreg_: and here I only get "0", "1", "2"?
[22:35] AAA_awright: enumerable flag or something
[22:35] vineyard: pagameba: I have absolutely no clue how it puts it 2 times into the stack
[22:35] EGreg_: what?
[22:35] EGreg_: whatchoo talkin about AAA :)
[22:35] EGreg_: Pegasus
[22:35] AAA_awright: Me?
[22:35] aconbere: EGreg_: you will still get the object values doing that
[22:36] aconbere: and it's slow
[22:37] vineyard: pagameba: i got it
[22:37] pagameba: vineyard: it does though :) add console.log(util.inspect(this.stack)); in this.next after you call this.stack.last().apply(sandbox);
[22:37] pagameba: vineyard: :)
[22:38] vineyard: you get stuck when you try to rewind since next() puts the next callback into the stack
[22:38] vineyard: and when you prev() it takes the new one away, leaving you in the same state, when the next callback gets into the stack again
[22:38] vineyard: maybe i shouldn't store the next callback in the stack
[22:38] EGreg_: ah thanks
[22:38] EGreg_: what is slow? 
[22:38] EGreg_: for (k in x ) is slow??
[22:39] EGreg_: Does Node.js have an Error class, or should I be throwing strings?
[22:39] pagameba: vineyard: I recommend you check out node-inspector, it works great and allows you runtime inspection of your server-side js just like it was running in a browser
[22:39] webr3: throw new Error('')
[22:39] yozlet has joined the channel
[22:39] cagdas has joined the channel
[22:40] gilesgoatboy: aconbere: still experiencing fail. added buffer.toString() https://gist.github.com/716004
[22:40] gilesgoatboy: took a long time because I was wrestling a little with the lisp, too
[22:40] EGreg_: v8: x = {}; for (k in Error) { x[k] = Error[k]; } x
[22:40] v8bot: EGreg_: {"captureStackTrace": function captureStackTrace() { [native code] }, "stackTraceLimit": 10}
[22:40] EGreg_: I ee
[22:40] vineyard: hehe, pagameba, i'll take a look
[22:40] EGreg_: I see
[22:40] vineyard: thanks for your help =)
[22:41] motu has joined the channel
[22:41] pagameba: vineyard: yw
[22:41] mscdex: gilesgoatboy: shouldn't that  be 'string' and not 'buffer' ?
[22:41] tim_smart has joined the channel
[22:42] mscdex: gilesgoatboy: then you can get rid of .toString()
[22:42] gilesgoatboy: string.toString()?
[22:42] gilesgoatboy: mscdex: I did and got nothing
[22:42] slaskis: anyone has a nice deep clone function?
[22:43] SubStack: I do I do
[22:43] mscdex: oh wait
[22:43] SubStack: http://github.com/substack/js-traverse 
[22:43] gilesgoatboy: slaskis: underscore.js does, I think, and if you google stack overflow for it there's a deep copy by jresig
[22:43] gilesgoatboy: (probably jq-specific tho)
[22:43] mscdex: slaskis: i use a modified version from jquery 1.4
[22:43] slaskis: gilesgoatboy: i actually checked underscore, it was only shallow
[22:43] gilesgoatboy: ah my bad
[22:43] slaskis: np :)
[22:44] SubStack: Traverse.clone()
[22:44] slaskis: mscdex: care to share?
[22:44] mscdex: slaskis: 1 sec
[22:44] slaskis: mscdex: thanks
[22:44] SubStack: > var xs = { a : 1, b : [1,2,3] }; var ys = require('traverse/hash').clone(xs); xs.b.push(4); ys
[22:44] SubStack: { a: 1, b: [ 1, 2, 3 ] }
[22:45] SubStack: oh whoops
[22:45] gilesgoatboy: hold on I'm doing it wrong. I need to pass an encoding and some other stuff
[22:45] mscdex: slaskis: https://github.com/mscdex/node-imap/blob/master/imap.js#L1233
[22:45] SubStack: oh hah it works with hash and the other one
[22:45] SubStack: meant to do require('traverse')
[22:45] mscdex: gilesgoatboy: yeah,  the parameters are wrong for your read call and your callback
[22:45] davidc_ has joined the channel
[22:45] gilesgoatboy: encoding didn't help
[22:46] mscdex: gilesgoatboy: fs.read(fd, buffer, 0, buffer.length, null, function(err, bytesRead) {});
[22:47] slaskis: mscdex: great, thanks. actually reminds me that i think i've modified that same method earlier haha
[22:48] gilesgoatboy: well, that works, but it just got me back to where I was before, which is it reads 139 lines of the file and then exits the process
[22:48] gilesgoatboy: maybe I need to update start or catch an error or osmething
[22:48] gilesgoatboy: something
[22:49] lgl has joined the channel
[22:49] mscdex: what is the length of the file?
[22:49] kenbolton has joined the channel
[22:49] gilesgoatboy: zomg I'm an idiot there's fs.readFile
[22:49] gilesgoatboy: mscdex: about 550
[22:50] lgl: Hello. I have a problem with posting a ~350 kb file as multipart/form-data over SSL using Node's http client.
[22:50] mscdex: hmm... well that's small enough to fit in the buffer you've declared... odd
[22:50] sveisvei has joined the channel
[22:50] mscdex: fs.read should only be called once then
[22:51] gilesgoatboy: yeah, it's not a huge file
[22:51] mscdex: gilesgoatboy: bytesRead === 139 then?
[22:51] lgl: I've checked with tcpflow and it's only sending between ~15 kb - ~ 50 kb
[22:51] gilesgoatboy: although I should get it figured out properly because I'm going to be opening 1000-line+ files later
[22:51] mscdex: lgl: can you gist it?
[22:52] lgl: mscdex: Sure
[22:52] gilesgoatboy: mscdex: yup
[22:53] gilesgoatboy: mscdex: but I'm thinking I should use fs.readFile instead anyway
[22:53] ysynopsis has joined the channel
[22:53] yumike has joined the channel
[22:54] lgl: mscdex: https://gist.github.com/716044
[22:54] lgl: mscdex: That's doing a lot of other stuff though, but the important stuff is in the sendMMS function. If it's too much, I'd be happy to create a smaller test
[22:55] gilesgoatboy: if I use fs.readFile I get 356 everything, woot
[22:55] yeevgen has joined the channel
[22:55] delapouite has joined the channel
[22:55] lgl: I've tried to post it to a node server, which does work, it receives all data and can parse the form. But that's not over SSL.
[22:56] lgl: On the other hand, we do post files over SSL to facebook in the same manner in another project, and that works fine...
[22:57] motu: does anyone know about a native extension for node that supports bigints?
[22:57] motu: i'm using bigdecimal.js but its sooo slow
[22:58] motu: i'm need to bitshift some pretty large numbers for a custom hashing solution
[23:00] mscdex: motu: the only one besides bigdecimal that i'm aware of is: http://www.leemon.com/crypto/BigInt.js
[23:00] motu: mscdex: do u know if it any faster than bigdecimal.js
[23:01] mscdex: motu: never used it
[23:01] jarek_ has joined the channel
[23:01] [[zzz]] has joined the channel
[23:01] motu: mscdex: ok
[23:01] motu: mscdex: I guess I have to shape up my c++ skills then :)
[23:03] googol has joined the channel
[23:03] mscdex: lgl: so contentLength === 350kb?
[23:03] mscdex: in your sendMMS fn?
[23:05] mscdex: lgl: also, what type of object is your data parameter? you shouldn't use the 'binary' encoding for write
[23:05] _mythz has left the channel
[23:05] elijah-mbp has joined the channel
[23:05] lgl: mscdex: Yes, content-length is 34600 kb more or less
[23:06] lgl: mscdex: The data parameter is from fs.readFile, it's a Buffer
[23:07] lgl: I've also tried using a readable stream and writing it in chunks, which doesn't make a difference
[23:07] mscdex: lgl: ok, what if you drop the 'binary' encoding argument for .write(data)?
[23:08] lgl: mscdex: No difference
[23:08] mscdex: hmm
[23:09] lgl: As I said, we can post data in the same manner, using node, over ssl to facebook
[23:09] lgl: So it might be something with this particular server endpoint
[23:09] lgl: It does work with curl and the browser though, with the same data
[23:11] jesusabdullah: Anybody here ever get node to accept stuff piped from stdin?D
[23:11] jesusabdullah: For example,
[23:11] jesusabdullah: echo "lol" | ./some-node-program.js
[23:11] jesusabdullah: ?
[23:11] jesusabdullah: Cause I'm not really sure where to start looking tbh
[23:13] lgl: jesusabdullah: I haven't tried it, but looking in the docs there is process.openStdin()
[23:14] jesusabdullah: Yeah, sure, but can that eat stdin that was passed to node.js, or can that only be used to get stuff sent to stdin *after* it's opened?
[23:14] mscdex: jesusabdullah: http://groups.google.com/group/nodejs/browse_thread/thread/344157efa12ff4ff/047f01b8d4a9b48f
[23:14] jesusabdullah: For example, I use openStdin in prompt.js
[23:14] mscdex: jesusabdullah: is that what you mean?
[23:15] jesusabdullah: Yeah
[23:15] jesusabdullah: Well
[23:15] jesusabdullah: i don't need scripts per se
[23:15] jesusabdullah: I was thinking more like messages
[23:15] mscdex: oh
[23:15] jesusabdullah: Like, echo "Yo dawg your shit is broken!" | node-ify
[23:15] jesusabdullah: :v
[23:16] mscdex: same issue might apply i dunno
[23:16] jesusabdullah: *nod*
[23:16] mscdex: lgl: i dunno, i'm not really seeing anything else awry with that code
[23:16] jesusabdullah: I can get around it with xargs and the like, so it's not a deal-breaker
[23:16] jesusabdullah: THAT's good ;)
[23:17] lgl: mscdex: Ok. Thank you so much for taking a look at it though. I've been tearing my hair over this since yesterday afternoon, it's really starting to get to me now
[23:17] jesusabdullah: If anybody knows the answer, feel free to hilight me :)
[23:18] lgl: It's really annoying working with SSL sometimes, 'cause you can't see what's actually being sent across the wire
[23:18] mscdex: lgl: well, i take that back -- the Content-Type header has a CRLF at the end from the 'bounary' variable. not sure that would make a difference though
[23:18] mscdex: lgl: yeah that's true
[23:18] mscdex: lgl: you said you tried it with a node ssl server?
[23:20] evanmeagher has joined the channel
[23:23] lgl: mscdex: Not with a node ssl server, no. Just over plain http
[23:25] lgl: mscdex: Not sure which CRLF you're referring to, but there's supposed to be an extra CRLF before each value
[23:25] mscdex: lgl: the one on line 105
[23:27] lgl: mscdex: Hmm... No the boundary variable doesn't (shouldn't) contain a CRLF
[23:27] EGreg_: in js, objects are by reference right
[23:27] [[zz]] has joined the channel
[23:28] webr3: EGreg_ why are you asking?
[23:28] mscdex: lgl: oh nevermind, i misread it when i was looking at line 102 heh
[23:28] mscdex: EGreg_: yep
[23:28] mscdex: EGreg_: and Arrays
[23:28] EGreg_: well I am doing a very involved function
[23:28] EGreg_: heh
[23:29] EGreg_: v8: var a = {b: {c: 'd'}}; var e = a.b; e.t = 'f'; a
[23:29] v8bot: EGreg_: {"b": {"c": "d", "t": "f"}}
[23:29] EGreg_: niice :)
[23:30] lgl: mscdex: All right... I'm wondering about the size of the actual sent data... It seems that it only sends about 4k and then stops writing. It's irking me so much.
[23:33] mscdex: lgl: it's hard to say, there are some issues with the current ssl implementation. however, i think ryah and pquerna are working on that right now
[23:34] mscdex: lgl: maybe create a small test case and post to the mailing list about it
[23:35] lgl: mscdex: Yep. I'll do that. Thanks for the help.
[23:35] ryah: master seems to be working atm
[23:35] ryah: but the api is different
[23:35] ryah: and undocumented
[23:35] ryah: tls, that is
[23:37] lgl: ryah: Interesting! Do you know when the old one is prone to be quirky?
[23:37] lgl: (I've tried on 0.2.0 and 0.2.5)
[23:43] jameshome has left the channel
[23:45] davidc_ has joined the channel
[23:45] mikew3c has joined the channel
[23:46] meck has joined the channel
[23:48] AAA_awright_ has joined the channel
[23:50] EGreg_: v8: ({})? 5: 7
[23:50] v8bot: EGreg_: 5
[23:50] EGreg_: hmm
[23:50] EGreg_: empty objects are true?
[23:51] EGreg_: v8: ([])? 5: 7
[23:51] v8bot: EGreg_: 5
[23:51] EGreg_: v8: ('')? 5: 7
[23:51] v8bot: EGreg_: 7
[23:51] EGreg_: v8: (null)? 5: 7
[23:51] v8bot: EGreg_: 7
[23:51] bingomanatee has joined the channel
[23:51] bingomanatee: Is there a client side version of node.js?
[23:52] evanmeagher: bingomanatee: not in the sense of it running in a browser
[23:53] bingomanatee: thanks. 
[23:56] markwubben has joined the channel
[23:56] jimt has joined the channel
[23:58] Anti-X has joined the channel
