[00:27] alexiskander has joined the channel
[00:33] rakeshpai_ has joined the channel
[00:38] gwoo has joined the channel
[00:53] nebopolis has joined the channel
[01:20] alexiskander has joined the channel
[01:31] mattly has joined the channel
[01:36] eddanger has joined the channel
[01:51] fictorial: there were some couchdb folks in here I believe. does anyone know off the top of their head if couchdb's replication tries to auto-merge distinct properties of documents if there's a conflict on version? say I have version 1 and make a change to property A but the current version is version 20 and nothing's touched property A between version 2-20 so it's safe to apply it?
[01:51] fictorial: I suppose I should ask #couchdb - duh
[01:51] fictorial: sorry
[02:02] cadorn has joined the channel
[02:08] emyller has joined the channel
[02:11] fictorial: (the answer was "no")
[02:11] malkomalko: heh
[02:22] brandon_beacher has joined the channel
[02:25] eddanger has joined the channel
[02:33] soveran has joined the channel
[02:39] jtaby has joined the channel
[02:40] jtaby: Hey, I may be missing something, but where's the error in this: http://pastie.org/731234 ? it says getRequests is undefined
[02:45] jtaby: nvm, I'm an idiot
[02:46] inimino: ACTION stops typing
[02:54] mattly has joined the channel
[02:54] jtaby: hah
[02:54] jtaby: yeah, I had everything inside a single hash before, then I pulled everything out, and forgot to change the syntax
[02:54] tlrobinson has joined the channel
[02:55] alexiskander: Is it as easy to make something both a CommonJS module and a generic file as I think it should be?
[02:55] jed: alexiskander: yes.
[02:55] alexiskander: like, if (!exports) exports = {}
[02:56] alexiskander: MyNamespace = exports
[02:56] alexiskander: ?
[02:56] inimino: yes
[02:56] alexiskander: neat neat neat!
[02:56] inimino: needs more var, but that's about it
[02:56] alexiskander: yeah :)
[02:56] alexiskander: jtaby: Thanks for the idea (in your pastie)
[02:57] jtaby: alexiskander: haha
[02:57] jtaby: alexiskander: btw, I'm calling my server SproutNode :)
[02:57] alexiskander: for some reason, it hadn't occurred to me until now :)
[02:57] alexiskander: jtaby: Cool
[02:57] alexiskander: what are its features?
[02:57] alexiskander: ./how does it work?
[02:58] jtaby: My 5-year plan is to be able to automatically generate a RESTful server that integrates into sproutcore's store
[02:58] jtaby: by reading the models in your sc application...
[02:58] alexiskander: hmm...
[02:59] alexiskander: why a RESTful server?
[02:59] alexiskander: (warning: I've been thinking too much...)
[02:59] jtaby: why not? it makes sense, is easy to build...it just makes sense
[02:59] alexiskander: why not do everything through push?
[02:59] alexiskander: push client->server, push server->client
[02:59] alexiskander: so, client wants all records of type "Contact", it sends message: "::connect" with data "contacts"
[03:00] alexiskander: server sends through push the results
[03:00] alexiskander: the request can return right away
[03:01] alexiskander: and there is only one path on the client for getting and sending objects, rather than one for Comet and one for REST
[03:01] inimino: yay, IMAP
[03:01] majd has joined the channel
[03:01] majd: bah
[03:01] alexiskander: majd: Humbug.
[03:02] majd: alexiskander: I'm just figuring out how to build a server at this point
[03:02] alexiskander: majd: curious: did you receive what I wrote+how much?
[03:02] alexiskander: uh...
[03:02] alexiskander: huh.
[03:02] jtaby has joined the channel
[03:02] alexiskander: jtaby: Having issues?
[03:03] jtaby: wtf???
[03:03] jtaby: alexiskander: just formatted my computer
[03:03] alexiskander: in addition to wondering what happened, I'm wondering what all you received of what I wrote?
[03:03] alexiskander: you mentioned on Twitter...
[03:03] jtaby: it's already dropped twice
[03:03] alexiskander: I'm guessing it didn't fix things? :(
[03:03] jtaby: my connection
[03:04] jtaby: well that's not why I formatted but no, it's not fixed...i'll have to take it in
[03:04] jtaby: in any case
[03:04] jtaby: last I got why you asking why I don't do push
[03:04] alexiskander: ok. Here's what I said:
[03:04] alexiskander: push client->server, push server->client
[03:04] alexiskander: so, client wants all records of type "Contact", it sends message: "::connect" with data "contacts"
[03:04] alexiskander: server sends through push the results
[03:04] alexiskander: the request can return right away
[03:04] alexiskander: and there is only one path on the client for getting and sending objects, rather than one for Comet and one for REST
[03:04] alexiskander: ...
[03:04] alexiskander: I hope that didn't break the connection :P
[03:05] alexiskander: :)
[03:07] jtaby: lol
[03:07] jtaby: no
[03:08] alexiskander: I suppose, strictly speaking, that aside from the interaction occurring through a protocol that is not itself HTTP, it could still be considered RESTful;
[03:08] alexiskander: that is, the paths connected to, etc., could still be representative of resources, etc.
[03:21] brandon_beacher_ has joined the channel
[04:02] cadorn has joined the channel
[04:22] rauchg has joined the channel
[04:33] dnolen has joined the channel
[05:01] jtaby has joined the channel
[05:01] mattly has joined the channel
[05:02] jtaby: omfg this is soo coool!
[05:08] mattly has joined the channel
[05:20] emyller has joined the channel
[05:31] jed has joined the channel
[06:02] jtaby: in the chat demo, where is process defined?
[06:02] jtaby: I assume in sys, but...I don't see process declared anywhere
[06:03] jtaby: when I try to run it on my own code (re-written), it says: TypeError: Object #<an Object> has no method 'cat'
[06:04] populuxe has joined the channel
[06:04] frodenius: it's in the c source code
[06:04] Micheil: jtaby: it'll be sys.cat()
[06:04] frodenius: use require('posix').cat
[06:04] Micheil: or posix.cat
[06:04] Micheil: brb
[06:05] jtaby: but...why does it work in the chat demo w/o requiring it?
[06:07] rakeshpai has joined the channel
[06:10] brandon_beacher has joined the channel
[06:42] Biscuits has joined the channel
[06:51] ciju has joined the channel
[06:59] Micheil has joined the channel
[07:03] jtaby: hey, when my response comes back, I'm getting a ruby error in NET:HTTP which says: wrong Content-Length format
[07:03] jtaby: ah, it's undefined =\
[07:06] jtaby: does node.js have any support for debugging?
[07:07] jtaby: nvm, found debug() and inspect()
[07:26] Micheil: inimino: also, if / when you're about, this might be want we should be after for sessions: http://github.com/jed/cookie-node/blob/master/cookie-node.js
[07:26] Micheil: httpRes.setCookie(); httpReq.getCookie();
[07:27] Micheil: that's almost the exact API that I think we'd need to nicely implement cookies.
[07:29] Micheil: ryah_away: when you're about, is there any chance of getting things like md5/sha1 as a core part of node?
[07:29] Micheil: there's uses not only in checksums, but also in other aspects, eg, sessions
[07:38] rauchg: Micheil: i dunno
[07:39] rauchg: have you seen the speeds of crypto.* in sunspider 
[07:39] rauchg: the user can perfectly implement them
[07:39] rauchg:     md5:                  8.2ms +/- 6.8%
[07:39] rauchg: sha1:                 7.4ms
[07:42] jtaby: ryah_away: do you take flowers?
[07:50] mravaux has joined the channel
[07:57] rakeshpai has joined the channel
[08:05] Micheil: jtaby: he might, but generally I think favours in programming are either dealt in beer.
[08:05] Micheil: -either
[08:07] Micheil: Is voodootikigod about?
[08:16] johan-s has joined the channel
[08:23] jtaby has joined the channel
[08:47] jtaby has joined the channel
[08:51] cmlenz has joined the channel
[08:53] brandon_beacher has joined the channel
[09:02] the_undefined has joined the channel
[09:04] CIA-28: node: 03Xavier Shay 07master * r756544f 10/ (lib/sys.js test/mjsunit/test-sys.js): sys.inspect prints out special chars correctly (\n, \u0001, etc...) - http://bit.ly/6rzfbT
[09:12] Micheil: ryah_away: are you about?
[09:15] Micheil: woot!@ I worked out the simplistic req.getCookie and resp.setCookie code..
[09:22] jtaby has joined the channel
[09:35] olivvv has joined the channel
[09:40] jtaby has joined the channel
[09:51] pdelgallego has joined the channel
[09:59] JimBastard has joined the channel
[09:59] JimBastard: why is it soo hard to find a good example of doing a simple upload form with node, the only one i found sucks
[10:00] Micheil: because node is currently.. well, not like php or something like that?
[10:00] JimBastard: can you rephrase that answer in the form a gist
[10:00] ryah_away: heh
[10:00] JimBastard: that does a simple post parse
[10:01] JimBastard: i'll blog about it
[10:01] JimBastard: ACTION hides
[10:01] ryah: JimBastard: felix has a few posts about it
[10:01] Micheil: ryah: have you had a chance to look at the cookie stuff I (almost) just posted on the mailing list?
[10:01] JimBastard: http://debuggable.com/posts/parsing-a-form-in-node-js-1:4b0bff13-4244-4ebc-8455-4975cbdd56cb
[10:01] JimBastard: not that great
[10:01] Micheil: ryah: I mean, it works as a standalone module, but would be much better as an internal piece of code.
[10:02] ryah: Micheil: not yet
[10:02] Micheil: okay, feedback's really wanted
[10:02] ryah: JimBastard: why?
[10:02] ryah: JimBastard: (I haven't looked at it, really)
[10:02] Micheil: I've already made one revision on it, because I had an issue with trimming of object keys/values
[10:02] JimBastard: it assumes im using a unique uri for my post
[10:03] Micheil: JimBastard: not really.
[10:03] ryah: JimBastard: well - it's not an example of routing
[10:03] JimBastard: multipart.parse(req).addCallback(function(parts) { doesn't seem to want to fire for me, perhaps i should setup a blank project
[10:03] JimBastard: im not trying to route
[10:03] Micheil: JimBastard: you could probably do a check with the req.method
[10:04] Micheil: (if there is a req.method)
[10:04] JimBastard: i just want the POST form-data variables in a scope
[10:05] ryah: as local variables? that's not possible
[10:05] Micheil: JimBastard: for standard forms: http://github.com/sixtus/coltrane/blob/master/module/www-forms.js
[10:06] Micheil: which sort of would work
[10:07] JimBastard: where are the post variables stored at 
[10:07] JimBastard: like i need, Content-Disposition: form-data; name="pageURL"
[10:07] JimBastard: pageURL is my form input name
[10:09] JimBastard: i must be missing something
[10:11] webben1 has joined the channel
[10:15] the_undefined has joined the channel
[10:16] the_undefined: This may sound weird, but what is the easiest way to describe node? Is it a library? An environment? A framework?
[10:16] the_undefined: I'm always struggling as none of those descriptions seem entirely accurate 
[10:16] mediacoder: hm.. toolkit? :-)
[10:17] the_undefined: hm
[10:17] the_undefined: :)
[10:18] mediacoder: "just awesome" wont work, i guess :-)
[10:18] the_undefined: I'm always tempted to use "miracle" or "deus ex machina"
[10:18] the_undefined: :)
[10:19] the_undefined: maybe the later captures it pretty well, what do you think?
[10:19] the_undefined: :)
[10:19] mediacoder: hehe, well, its not deus.. its ryah and all the great contributors :-P
[10:25] Micheil: I'd call it a environment, because on top of node you build a framework, on top of which your application sits
[10:25] Micheil: sometimes node is the framework because node's environment includes a basic framework
[10:26] rauchg: exactly 
[10:31] the_undefined: what about Run-Time system? http://en.wikipedia.org/wiki/Run-time_system
[10:31] Micheil: inimino: if you're about, I think I've made some even better ground in the session manager stuff
[10:32] Micheil: the_undefined: yeah, Runtime and Environment I think would be pretty equivilant
[10:32] the_undefined: I think I like Runtime better so
[10:32] the_undefined: Environment seems so passive
[10:32] Micheil: woohh.. http://github.com/Miksago/node.js-sessions/blob/master/demo.js#L31
[10:32] Micheil: :D
[10:33] Micheil: the_undefined: oh, of course, and Node is such a macho name ;P
[10:33] Micheil: although, ServerSide JavaScript Runtime sounds better then ServerSide JavaScript Environment
[10:34] Micheil: i guess really the environment would be V8, and node the runtime.
[10:34] the_undefined: settling on "the non-blocking JavaScript server runtime." for now
[10:34] Connorhd: I thought v8 was the engine :P
[10:37] Micheil: Connorhd: why not confuse everyone now! :P
[10:39] webben has joined the channel
[11:15] jtaby has joined the channel
[11:38] malkomalko has joined the channel
[11:49] webben has joined the channel
[11:51] Micheil: ACTION just added sessionData setting/getting back into the session manager
[11:53] mediacoder: Micheil: hmm.. im also playing a bit with some session ideas. i think setting/getting should be done in a storage module (i have several storages), since some storages could provide enryption of data, which shouldnt be there by default
[11:54] Micheil: mediacoder: true, although, that would still be interface by a session.getData or session.setData api
[11:54] mediacoder: yea
[11:54] Micheil: any encryption and filesystem or database storage should be done as a pluggable backend to the sessionManager
[11:55] mediacoder: yes, thats why i liked the sessionmanager idea much, which would take care of exactly this, too
[11:55] Micheil: I haven't implemented it yet, but I do have plans for doing a sessionStorage class up
[11:56] Micheil: which would replace the sessionManagers property or _sessionStore = {}
[11:56] Micheil: there's still a heap of work to do, but it's definitely getting somewhere
[11:57] mediacoder: yea. my implementation differs a bit from yours, but i adapted some of your ideas and have storage, manager and session "classes"
[11:57] Micheil: ACTION just pushed some changes to the options for sessionmanager, to allow access to advanced cookie options, such as secure and httpOnly
[11:58] the_undefined has joined the channel
[11:58] Micheil: I decided recently that a session class wasn't really worth it, and that an object was sufficient, but I might change it back to a class, we'll see.
[11:58] Micheil: either way, the API won't hopefully change much
[11:58] mediacoder: yea, i saw that.. im not sure if you should mess too much with cookies or a cookie implementation. i guess many people will use it in some framework, where probably cookies are handled differently
[11:59] Micheil: true, although, I want the SessionManager to be almost as plug and play as possible
[11:59] mediacoder: Micheil: yea.. during development i like to keep it in seperate classes/files, which makes stuff easier for me atleast :-)
[11:59] Micheil: I was sick of having to set the headers manually
[12:01] mediacoder: the main reason why i wantes Session as an own class, was, that in my implementation the session handles its timeout itself
[12:01] Micheil: mediacoder: yeah
[12:02] mediacoder: and not done by session-manager
[12:02] Micheil: mine it's all done by an single timer routine
[12:02] Micheil: part of the main advantage to the session manager is the handling of the deletion of sessions
[12:03] jtaby has joined the channel
[12:08] mediacoder: Micheil: whats the advantage of "secure" cookie? does it really matter for cookies having just the random SID? it does matter for session-data being stored to cookie (again session-storage part)
[12:08] Micheil: I'm not totally sure, but I just wanted things to be consistent
[12:24] Micheil: mediacoder: okay, I've pushed a few more changes, give it a spin, see what you think
[12:37] alexiskander has joined the channel
[12:52] jtaby has joined the channel
[13:08] mravaux has joined the channel
[13:08] brosner has joined the channel
[13:26] Connorhd has joined the channel
[13:28] mravaux has joined the channel
[13:40] jtaby has joined the channel
[13:42] _ry has joined the channel
[13:46] brandon_beacher has joined the channel
[13:49] pmuellr has joined the channel
[13:57] webben has joined the channel
[14:01] fictorial has joined the channel
[14:37] PowerToExt has joined the channel
[14:54] malkomalko has joined the channel
[14:54] cloudhead has joined the channel
[14:54] malkomalko_ has joined the channel
[14:55] malkomalko_: morning everyone
[14:57] cloudhead: morning
[14:59] jan____: anybody wanna help me rewrite the command parser in awesome?
[15:07] dnolen has joined the channel
[15:10] malkomalko_: might be kind've fun, although I don't know awesome :)
[15:10] jan____: malkomalko: http://github.com/janl/awesome
[15:10] jan____: I need the parser to support redis bulk and multi bulk requests with values that contain the \r\n sequence.
[15:11] jan____: right now I use them for parsing, since commands are terminated / separated with that
[15:11] jan____: but that breaks if actual values contain the sequence
[15:11] jan____: the protocol makes it work because it includes the value lentgth
[15:12] jan____: so it can detect \r\n that are values and \r\n that are terminators
[15:15] Biscuits: is posix.read segfaulting for anyone else when not defining an encoding ?
[15:16] jan____: the docs claim utf-8 to be the default encoiding, no?
[15:17] Biscuits: Yeah
[15:17] Biscuits: But somehow it segfaults for me
[15:17] Biscuits: can anyone else try ?
[15:18] _ry: Biscuits: can you make a little test?
[15:18] jan____: _ry: did you get to replying to Eric?
[15:18] malkomalko_: jan____: I'll try grabbing your source and do a little hacking tonight
[15:18] jan____: malkomalko_: coolio
[15:19] _ry: jan____: er - shit - no 
[15:21] jan____: _ry: DO IT!
[15:21] nefD has joined the channel
[15:24] Biscuits: _ry: http://pastebin.com/m6a258144 -> that's my code, crashes unless you add an encoding to the posix.read call, could you take a look ?
[15:24] jan____: Berlin folks: http://twitter.com/janl/status/6433198351
[15:26] Biscuits: _ry: save as test.js, as it references itself in posix.open btw
[15:35] softdrink has joined the channel
[15:35] nefD: hmmm.. with regards to communicating with, say, a php/python/whatever script running on the same box from within node, i wonder if it's faster to do so via stdin/stdout or via a socket connection?
[15:36] Biscuits: Doubt there'd be any real difference
[15:36] Biscuits: stdin/stdout could be easier though
[15:36] Wes- has joined the channel
[15:36] nefD: ok.. wasn't sure
[15:37] nefD: the stdin/stdout route is surely easier, but i'd have been willing to sacrifice that if there was a tangible speed gain
[15:47] Biscuits: Hmmm, would anyone know what the proper way is to stream data to a Http client with node? How do you know when the client no longer wishes to receive data (e.g. user pressed stop, or closed browser) ?
[15:47] soveran has joined the channel
[15:52] soveran_ has joined the channel
[15:56] frodenius: jan____: btw, berlinjs.de is free
[16:01] jan____: frodenius: not sure we need a domain
[16:02] frodenius: yeah, just saying, i looked yesterday
[16:02] ashb: W 26
[16:02] jan____: frodenius: are you @berlinjs on twitter?
[16:02] frodenius: hehe, yes
[16:03] jan____: yay, can we use it?
[16:03] frodenius: yep, sure
[16:03] jan____: coolio
[16:05] ashb: any of you interested in JSGI: what do you think of http://pastie.org/731906
[16:06] ashb: (an async jsgi spec specifically)
[16:09] soveran has joined the channel
[16:13] LordMetroid has joined the channel
[16:15] emyller_ has joined the channel
[16:16] fictorial: ashb: oooh shiny!
[16:17] ashb: i need to think/check that it works when the middleware still works as nicely when the adjuster does some event itself
[16:19] ashb: its also not very different from the current node API
[16:20] johan-s has joined the channel
[16:20] soveran has joined the channel
[16:22] ashb: yeah i think it should
[16:27] malkomalko: :)
[16:27] ashb: ACTION quites like that
[16:28] ashb: even if i do say so mysself. also miyagawa++
[16:28] ashb: since thats where the idea came from
[16:30] emyller_ has joined the channel
[16:38] paan has joined the channel
[16:43] binary42 has joined the channel
[16:46] binary42: malkomalko: ping
[16:51] pdelgallego has joined the channel
[16:54] _ry: Biscuits: try this http://gist.github.com/250922
[16:58] bobaman has joined the channel
[17:00] Biscuits: _ry: Works fine :)
[17:03] RayMorgan has joined the channel
[17:03] gwoo has joined the channel
[17:04] bobaman has joined the channel
[17:07] dnolen has joined the channel
[17:20] postfuturist has joined the channel
[17:33] dnolen has joined the channel
[17:39] bobaman has joined the channel
[17:45] sudoer has joined the channel
[17:45] eddanger has joined the channel
[17:52] xantus has joined the channel
[17:55] inimino: Micheil_away: jed's API looks nice but he is monkeypatching the node HTTP objects which I'm not interested in doing
[17:56] Achilles has joined the channel
[17:57] orlandov: yo - what's the state of binary blob support in node?
[17:57] mies_ has joined the channel
[17:58] _ry: orlandov: at the moment using strings to store binary
[17:58] freenode has joined the channel
[17:58] orlandov: _ry: problem is i'm having trouble getting at the strings from within v8
[17:59] orlandov: (since there are embedded null bytes)
[17:59] orlandov: i was considering using a javascript array but that's kind of meh
[17:59] freenode has joined the channel
[17:59] _ry: orlandov: you can store arbirary data in strings
[17:59] RayMorgan_ has joined the channel
[17:59] _ry: orlandov: i just pack the first 8 bits of a 2byte string
[18:00] xantus has joined the channel
[18:00] _ry: not the best solution - hopefully that can be improved in the futer - but i like having a string interface
[18:00] orlandov: _ry: do you have any examples i could check out by any chance?
[18:01] jtaby has joined the channel
[18:01] Wes-: _ry: binary/b from CommonJS is not bad for binary data -- I have spidermonkey implementation which can cast (in JS space) to FFI types, works well
[18:01] _ry: orlandov: http://github.com/ry/node/blob/c3e0a4bc7c89e6eace8d4652092b0a37dac65d8b/src/node.cc#L68-161
[18:01] orlandov: _ry: you're the man!
[18:02] Wes-: Note that binary/b has a lot of stuff you might not want to bother implementing, the intersection of binary/b and binary/d is probably the sweet spot for result:effort ratio at the moment
[18:02] orlandov: cheers :)
[18:02] _ry: Wes-: i'd like to sit on top of v8's efficent string processing if possible
[18:02] _ry: e.g. i don't wnat to rewrite indexOf
[18:03] _ry: also, doing slicing well is difficult
[18:03] Wes-: _ry: *nod* - actually, you might be able to if you're really careful; IIRC from reading the v8 sources you can have 8-bit strings BUT they are expected to encode utf8
[18:03] _ry: they're expected to be ascii encoded
[18:03] Wes-: slicing, definitately tricky. I am working on COW slices at the moment
[18:03] aguynamedben has joined the channel
[18:04] orlandov: is that just undefined behaviour which happens to work out?
[18:04] orlandov: or a supported strategy
[18:04] _ry: but, yes, you can have strings backed by 8bit arrays in general - so hopefully having arbitrary values shouldn't be too hard to support
[18:04] _ry: ExternalAsciiStringResource is almost exactly what I want
[18:05] orlandov: wouldn't ascii be 7bit characters?
[18:05] _ry: i just need a ExternalLatin1StringResource or something which allows the 8th bit to be set :)
[18:05] _ry: orlandov: well, 8bit clean
[18:06] orlandov: gotcha
[18:06] RayMorgan__ has joined the channel
[18:06] _ry: they use that to do some optimizations on case-checking and stuff
[18:06] _ry: s/that/the fact the strings are ascii/
[18:06] _ry: i guess
[18:07] emyller has joined the channel
[18:07] _ry: if erikcorry|away was here he could explain :)
[18:16] malkomalko has joined the channel
[18:38] cmlenz has joined the channel
[18:42] soveran has joined the channel
[18:42] RayMorgan has joined the channel
[18:47] jtaby has joined the channel
[18:56] rolfb has joined the channel
[18:58] jtaby has joined the channel
[18:59] Biscuits has joined the channel
[19:09] jtaby has joined the channel
[19:12] jed has joined the channel
[19:13] isaacs has joined the channel
[19:14] alexiskander has joined the channel
[19:55] dnolen has joined the channel
[19:57] tisba has joined the channel
[20:02] dnolen has joined the channel
[20:16] rhys__ has joined the channel
[20:22] jed has joined the channel
[20:31] saikko has joined the channel
[20:42] hassox has joined the channel
[20:46] hassox has joined the channel
[20:46] saikko has joined the channel
[20:46] jed has joined the channel
[20:46] dnolen has joined the channel
[20:46] tisba has joined the channel
[20:46] alexiskander has joined the channel
[20:46] isaacs has joined the channel
[20:46] jtaby has joined the channel
[20:46] rolfb has joined the channel
[20:46] RayMorgan has joined the channel
[20:46] soveran has joined the channel
[20:46] cmlenz has joined the channel
[20:46] malkomalko has joined the channel
[20:46] aguynamedben has joined the channel
[20:46] xantus has joined the channel
[20:46] mies has joined the channel
[20:46] Achilles has joined the channel
[20:46] eddanger has joined the channel
[20:46] sudoer has joined the channel
[20:46] bobaman has joined the channel
[20:46] postfuturist has joined the channel
[20:46] gwoo has joined the channel
[20:46] pdelgallego has joined the channel
[20:46] binary42 has joined the channel
[20:46] johan-s has joined the channel
[20:46] LordMetroid has joined the channel
[20:46] Wes- has joined the channel
[20:46] nefD has joined the channel
[20:46] cloudhead has joined the channel
[20:46] PowerToExt has joined the channel
[20:46] fictorial has joined the channel
[20:46] webben has joined the channel
[20:46] pmuellr has joined the channel
[20:46] brandon_beacher has joined the channel
[20:46] _ry has joined the channel
[20:46] Connorhd has joined the channel
[20:46] brosner has joined the channel
[20:46] JimBastard has joined the channel
[20:46] olivvv has joined the channel
[20:46] Micheil_away has joined the channel
[20:46] ciju has joined the channel
[20:46] populuxe has joined the channel
[20:46] cadorn has joined the channel
[20:46] tlrobinson has joined the channel
[20:46] sztanpet has joined the channel
[20:46] ashb has joined the channel
[20:46] Atmoz has joined the channel
[20:46] intellectronica has joined the channel
[20:46] [k2] has joined the channel
[20:46] jarib has joined the channel
[20:46] rektide has joined the channel
[20:46] apgwoz has joined the channel
[20:46] erikg has joined the channel
[20:46] tlockney has joined the channel
[20:46] skampler has joined the channel
[20:46] sifi has joined the channel
[20:46] rbranson_ has joined the channel
[20:46] Yuffster has joined the channel
[20:46] keeto has joined the channel
[20:46] shfx has joined the channel
[20:46] mburns has joined the channel
[20:46] rudebwoy has joined the channel
[20:46] m1631_ has joined the channel
[20:46] Nailor has joined the channel
[20:46] jspiros has joined the channel
[20:46] rbranson has joined the channel
[20:46] onar has joined the channel
[20:46] [i]chuck has joined the channel
[20:46] inimino has joined the channel
[20:46] mikekelly has joined the channel
[20:46] Sembianc1 has joined the channel
[20:46] CIA-28 has joined the channel
[20:46] jan____ has joined the channel
[20:46] mediacoder has joined the channel
[20:46] beppu has joined the channel
[20:46] lmorchard|away has joined the channel
[20:46] halorgium has joined the channel
[20:46] Sinjo has joined the channel
[20:46] sr has joined the channel
[20:46] careo has joined the channel
[20:52] richtaur has joined the channel
[20:59] binary42_ has joined the channel
[21:10] hassox has joined the channel
[21:11] RayMorgan_ has joined the channel
[21:11] Micheil_away: inimino: but it works, that's the thing.
[21:12] Micheil_away: inimino: if we could get that api into the core of node, then it'd work flawlessly (almost)
[21:13] inimino: Micheil_away: yeah it works, but I'll wait for an official node API for it
[21:13] inimino: Micheil_away: as soon as somebody else thinks it's a good idea to replace .sendHeader, now you have two incompatible modules... ugly as hell
[21:13] Micheil_away: inimino: try poking _ry then :P
[21:14] inimino: I saw some stuff on the mailing list and assumed it was being discussed ;)
[21:15] inimino: I still owe ryan a patch for HEAD support too
[21:16] inimino: Micheil_away: also the CommonsJS people are talking about async JSGI... probably best to wait for all that to fall out before trying to add this kind of middleware crap
[21:17] Micheil_away: inimino: well, I submited that possible patch for cookies, although, no one seems to have replied to that message
[21:18] hassox_ has joined the channel
[21:19] inimino: Micheil_away: check the JSGI Level 0/A Draft 2 thread on CommonJS list
[21:19] inimino: I don't really have the bandwidth for it right now but it looks relevant
[21:21] Micheil_away: k
[21:21] Micheil_away: link?
[21:24] inimino: http://groups.google.com/group/commonjs
[21:31] Micheil_away: inimino: I've just briefly read through it. and uh, wow.
[21:34] inimino: yeah?
[21:34] inimino: is that good or bad?
[21:37] jed has left the channel
[21:37] jed has joined the channel
[21:40] Wes-: inimino: I think it would be incredibly useful to have node.js & commonjs promises + JSGI interoperating somehow
[21:40] Micheil_away: inimino: uh wow as in, somebody actually sat down and wrote all that sort of wow
[21:40] inimino: Micheil_away: ok
[21:41] Wes-: Micheil_away: there implementations as well, on rhino and spidermonkey
[21:41] freenode-connect: VERSION
[21:41] Wes-: spidermonkey version is build on flusspferd, which is a generic C++ API which could theoretically run on top of v8 someday
[21:41] inimino: Wes-: yes, it would be unfortunate if JSGI ended up specifying something async that didn't work well with node
[21:41] Micheil_away: although, it doesn't declare anything about how it should be done, just what datatypes and structures should be used
[21:42] inimino: "show me your datatypes and I don't need to see your functions" :-)
[21:42] Micheil_away: much like that
[21:42] inimino: ACTION mangles a quote
[21:42] Micheil_away: We need something that says, these are the methods that should be used
[21:43] Micheil_away: I'm perfectly fine with having setHeaders point to an internal object and then send the data once the sendBody has been called
[21:44] Micheil_away: or something like that. As long as I can add/remove headers and status codes dynamicall
[21:44] Micheil_away: y
[21:44] Micheil_away: eg, setStatusCode(xxx); setHeader("key", "value"); or setHeader({key: value})
[21:44] Micheil_away: anyway, gotta run. talk this arvo.
[21:45] Wes-: Micheil_away: I'm not all that familiar with JSGI, but IIRC those are just JS variable assignemnts. No fn call required
[21:48] RayMorgan has joined the channel
[21:48] Micheil_away: Wes-: yeah
[21:51] kriskowal has joined the channel
[21:52] the_undefined has joined the channel
[22:07] isaacs_ has joined the channel
[22:17] malkomalko has joined the channel
[22:21] voodootikigod has joined the channel
[22:23] dnolen has joined the channel
[22:23] dnolen has joined the channel
[22:34] JoePeck has joined the channel
[22:35] emyller has joined the channel
[22:45] jed has joined the channel
[22:58] jtaby has joined the channel
[23:04] jcrosby has joined the channel
[23:05] isaacs has joined the channel
[23:20] elliottcable: Hey, _ry, I simply *cannot* ge the documentation to build. I thought it was beacuse my connection was shitty, but now I have a 6Mbit connection at a café
[23:21] elliottcable: _ry: here’s what `make doc install` gives me: http://gist.github.com/251222
[23:32] PowerToExt has joined the channel
[23:33] elliottcable: also, _ry, I’d like to see some of the stuff shipped with node moved into a vendor folder
[23:34] elliottcable: _ry: as it is, every time I upgrade Node, I either A) have to put up with outdated standard-lib, or B) remove my /usr/local/lib/node/libraries and replace it with the new one
[23:34] elliottcable: _ry: it’d be much better if I could leave a vendor folder symlinked, and keep a custom libraries folder
[23:35] elliottcable: _ry: so, summary: split libraries/ into site_libraries/ and vendor_libraries/ or similar, a lá Ruby’s site_ruby and vendor_ruby
[23:44] elliottcable: fictorial: see Twitter, redis-node-client’s test.js is blowing up again. I poked around a little, but couldn’t figure out why—the process is exiting without any callbacks being executed.
[23:52] fictorial: hmm, works fine here. redis 1.02 is old. let me try with that though.
[23:52] fictorial: yeah that's the problem... 
[23:53] fictorial: time to upgrade your redis instance :)
[23:54] jtaby has joined the channel
