[00:02] Aria has joined the channel
[00:02] charlesjolley has joined the channel
[00:04] kenneth_reitz has joined the channel
[00:04] fictorial: what's the latest with the docs?
[00:04] fictorial: there a preview up?
[00:05] tlrobinson_ has joined the channel
[00:07] mape: fictorial: http://tinyclouds.org/node_new_doc/api.html http://tinyclouds.org/node_new_doc/doc/api.html http://doc.mape.me/
[00:09] charlesjolley has joined the channel
[00:09] _ry: http://nodejs.org/api.html
[00:09] fictorial: thanks. IMHO, take the functionality of doc.mape.me and use the styling of the node_new_doc/doc/api.html ...
[00:10] fictorial: well that and don't use a fixed-width font everywhere. it just looks strange to me.
[00:10] fictorial: I like the current section text floating on the top of the mape site btw - nice touch
[00:11] _ry: yeah mape site is nice
[00:12] CIA-77: node: 03Ryan Dahl 07master * r54f0234 10/ (4 files in 2 dirs): Fix doc again - http://bit.ly/aj1sbA
[00:12] CIA-77: node: 03Ryan Dahl 07master * r07e64d4 10/ (ChangeLog doc/index.html wscript): bump version - http://bit.ly/9dMHSU
[00:12] mape: only issue with the new docs is the side scrolling
[00:12] mape: but I only think people with trackpads will notice
[00:12] mape: or people that tend to scroll sideways
[00:13] fictorial: font-family:consolas,monospace;  <-- bah! why choose consolas for me? :)
[00:13] fictorial: (Base Mono FTW)
[00:13] javajunky: yay ! :) 
[00:13] javajunky: thx _ry
[00:13] javajunky: quite the version bump eh
[00:14] bpot has joined the channel
[00:14] _ry: it should be 0.3
[00:14] _ry: but i've already promised api stability in 0.2
[00:14] javajunky: ;)
[00:14] mau2 has joined the channel
[00:16] _ry: i hope we can clean up the docs for 91 
[00:16] fictorial: _ry: is there a way to pass the equivalent of make -j4 to waf to speed up builds?
[00:17] _ry: fictorial: waf --jobs 4 build
[00:17] _ry: i think
[00:17] fictorial: ok
[00:17] javajunky has joined the channel
[00:17] _ry: but unfortunately that won't get passed to scons
[00:17] _ry: which does the v8 build
[00:17] fictorial: oh
[00:17] _ry: and is the majority of the time
[00:17] fictorial: yeah, that's the timesink
[00:17] fictorial: oh well, it's not that much of a wait - just curious
[00:21] felixge has joined the channel
[00:21] felixge has joined the channel
[00:21] fictorial: cool, redis-node-client works fine with 0.1.90
[00:22] ssteinerX has joined the channel
[00:24] felixge: 0.1.90, yeah!
[00:27] tlrobinson_ has joined the channel
[00:41] devinus has joined the channel
[00:42] devinus: _ry: sorry i had to leave
[00:50] felixge_ has joined the channel
[00:59] derbumi has joined the channel
[00:59] mau2: felixge_, wat.
[01:00] mau2: yay!
[01:01] mau2: Is the event part of node.js coded in javascript?
[01:01] mau2: I forgot again where is the main javascript code.
[01:02] mau2: Btw, I really need a html parser and I remember someone talking about node.js needing one.
[01:04] CodeOfficer has joined the channel
[01:13] steadicat has joined the channel
[01:16] mrjjwright has joined the channel
[01:17] sudoer has joined the channel
[01:26] derbumi has joined the channel
[01:32] mumrah_: i wrote up a little prototype of node serving up client-side code, if anyone's curious http://gist.github.com/361752
[01:42] kriskowal: ah, wow. bootstrapping changed a lot.  requireBinding nowâ€¦
[01:44] kriskowal: i see.   bindings are initialized on demand
[01:48] devinus: kriskowal: how's the narwhal on node work going?
[01:49] kriskowal: runs pretty well; i've been using it as my primary
[01:49] kriskowal: tusk doesn't run on it, node stuff works fine.
[01:50] softdrink has joined the channel
[01:50] kriskowal: i might put node's modules back at the top of the name space so more of node works without alteration
[01:50] kriskowal: (i had moved things like sys to node/sys)
[01:50] kriskowal: but since i've moved a lot of narwhal's modules into the narwhal/ name space, there's not as much need to own the root
[01:51] kriskowal: it's pretty different than stock narwhal atm, but it's really exciting.  should work on linux soon.
[01:54] devinus: nice!
[02:07] steadicat has joined the channel
[02:25] fictorial: weird, I have a net.createServer() that's creating a local unix socket server instead of tcp4 ... wtf
[02:29] fictorial: port arg was a string not a number, that seems to trigger unix socket behavior - ok
[02:40] fictorial: Has anyone here seen this error before? It's not much to go on. Client connects to a tcp4 server and the server immediately crashes.  http://gist.github.com/361778
[02:47] fictorial: seems to happen when I throw from within a callback... adding process.addListener('uncaughtException', ...) catches it. ok
[02:57] figital_ has joined the channel
[02:58] figital_: when i run node.js on ubuntu karmic ... it automatically seems to grab all remaining virtual ram ... any way to limit this?
[02:59] devinus has joined the channel
[03:15] jed has joined the channel
[03:22] malkomalko has joined the channel
[03:22] fizx has joined the channel
[03:23] fizx has joined the channel
[03:26] rtomayko has joined the channel
[03:28] sudoer has joined the channel
[03:36] mumrah_ has left the channel
[03:38] kriskowal: _ry got a moment to elucidate the new bootstrapping process?
[03:42] RayMorgan has joined the channel
[03:53] PyroPete1 has joined the channel
[03:57] fizx has joined the channel
[04:11] devinus has joined the channel
[04:16] devinus has joined the channel
[04:26] r11t has joined the channel
[04:28] steadicat has joined the channel
[04:30] r11t_ has joined the channel
[04:37] devinus has joined the channel
[04:38] dgathright has joined the channel
[04:38] andreavonhollen has joined the channel
[04:39] fizx has joined the channel
[04:55] RayMorgan has joined the channel
[04:58] micheil_mbp has joined the channel
[05:10] mattly has joined the channel
[05:14] jed has joined the channel
[05:15] sztanpet has joined the channel
[05:34] nsm has joined the channel
[05:38] kriskowal has joined the channel
[06:05] tk has joined the channel
[06:06] BiscuitsLap has joined the channel
[06:16] JimBastard has joined the channel
[06:16] JimBastard: no...more...commits....yaarg
[06:17] JimBastard: has anyone seen Tim_Smart around? he's gone mia
[06:20] statim has joined the channel
[06:22] kenneth_reitz has joined the channel
[06:28] pdelgallego has joined the channel
[06:35] derferman has joined the channel
[06:53] psynaptic has joined the channel
[06:59] tlrobinson_ has joined the channel
[07:14] tk has joined the channel
[07:16] freshtonic has joined the channel
[07:27] mikeal has joined the channel
[07:33] piranha has joined the channel
[07:36] tmpvar has joined the channel
[07:39] hassox has joined the channel
[07:47] creationix has joined the channel
[07:49] tmpvar: creationix, hey
[07:53] psynaptic has left the channel
[07:59] kriskowal has joined the channel
[08:08] jed has joined the channel
[08:15] felixge has joined the channel
[08:15] felixge has joined the channel
[08:19] javajunky has joined the channel
[08:48] spoob has joined the channel
[08:50] jed has joined the channel
[09:14] vmind has joined the channel
[09:27] javajunky has joined the channel
[10:16] charlesjolley has joined the channel
[10:17] pdelgallego has joined the channel
[10:34] ssteinerX has joined the channel
[11:13] derbumi has joined the channel
[11:36] teemow has joined the channel
[12:08] mape: http://doc.mape.me/
[12:09] hellp has joined the channel
[12:20] paul___ has joined the channel
[12:22] creationix has joined the channel
[12:26] Iveaux has joined the channel
[12:28] micheil: anyone know if it's possible to Stub http/net requests?
[12:30] kriszyp has joined the channel
[12:41] _martinS_ has joined the channel
[12:59] RayMorgan has joined the channel
[13:06] derbumi has joined the channel
[13:11] malkomalko has joined the channel
[13:16] Iveaux: What's the difference between Object.keys and Object.getOwnPropertyNames ?
[13:23] bajeczka has joined the channel
[13:33] micheil has joined the channel
[13:35] derbumi has joined the channel
[13:37] xla has joined the channel
[13:40] hsuh has joined the channel
[14:05] sveisvei: Iveaux:  keys() only returns the ones that are enumerable
[14:12] sveisvei: Mape,I really like the latest :)
[14:12] mape: Yeah think it is turning out ok
[14:13] sveisvei: Though,me personally dont like the scrollbar- but I guess its all dandy fine in the end
[14:13] sveisvei: ;-)
[14:13] mape: on the left side?
[14:13] sveisvei: Yup
[14:14] maushu has joined the channel
[14:14] mape: Well since the doc is so long it makes sence always keeping the menu in the same place
[14:14] mape: otherwise you would have to scroll up and down all the time
[14:14] maushu: Tree menu.
[14:14] sveisvei: It could be sorted better, and maybe autoexdpand thesection you are at?
[14:15] sveisvei: with fewer sections
[14:15] mape: hmm sure expanding shouldn't be an issue, as long as it doesn't get annoying
[14:16] sveisvei: yeah, its a thin line 
[14:16] sveisvei: Cant please everybody though
[14:16] mape: true
[14:17] sveisvei: Simple is the win, but the left menu could at its current state be abit to much - its alot to analyze for the fresh users
[14:17] sveisvei: ...we all get used to stuff after a while.
[14:19] confounds has joined the channel
[14:20] sveisvei: ...you could take some inspiration from the famous jquery api browser, as in making the menu more context based
[14:21] sveisvei: but not going that far, please :)
[14:21] mape: think creationix already has that up and running
[14:22] sveisvei: Jup
[14:22] creationix: :)
[14:22] creationix: I thought the expandable tree on nodejs now is good
[14:26] r11t has joined the channel
[14:28] sveisvei: Yeah, its good - liking it more when I use it. But it could be made more newb friendly with fewer and clearer sections (dont crowd the user with information if it isnt necesary)... Thats my 2 cents, if someone asks for them :P
[14:29] alex-desktop has joined the channel
[14:32] alexandere has joined the channel
[14:33] tisba has joined the channel
[14:36] tisba has joined the channel
[14:42] mape: sveisvei: creationix has anyone of you profiled a node script using the v8 profiler?
[14:43] creationix: no, I've used node-bench though
[14:43] creationix: it just gives overall times though
[14:43] mape: Ah k, I was thinking of making my script a little faster but the --prof doesn't seem to dump to a log
[14:44] mape: And I can't seem to find any information on the net regarding it
[14:44] CodeOfficer has joined the channel
[14:46] mape: Which seems odd since it feels like something most people would want to do
[14:47] xla has joined the channel
[14:50] charlesjolley has joined the channel
[14:50] micheil: what's recommended instead of process.mixin for merging two objects together?
[14:53] r11t_ has joined the channel
[14:57] creationix: micheil, do you want a shallow copy?
[14:57] micheil: umm.. I think deep
[14:57] r11t_ has joined the channel
[14:57] micheil: I'm wanting to return an eventEmitter plus some custom methods
[14:58] micheil: because I'm sure doing: emitter.method = funct() ain't a good idea
[14:58] creationix: oh, then you probably want to use Object.create
[14:58] sveisvei: creationix:  howtonode seams to be down btw :)
[14:59] creationix: sveisvei: interesting...
[14:59] creationix: hmm, my terminal locked
[14:59] creationix: reboot time!
[14:59] sveisvei: hehe
[14:59] micheil: creationix: Object.create?
[15:00] creationix: micheil, yeah, it create a new object that inherits from the one passed in
[15:00] micheil: hmm.. I shall look into it
[15:00] micheil: it's for a new lib I'm working on
[15:00] mrd` has joined the channel
[15:00] micheil: namely, this lib: http://github.com/miksago/pusher-api/tree/node_js
[15:02] creationix: micheil, also if you want a simple shallow copy http://github.com/creationix/proto/blob/master/lib/proto.js#L56 works
[15:03] micheil: yeah, this is purely so I can return something that people can addListeners to and then also call methods on
[15:03] micheil: see the examples/ in that repo
[15:04] creationix: as long as you're only replacing the root properties and not modifying their contents than a simple Object.create is perfect
[15:05] creationix: hmm, linode seems down for me
[15:05] creationix: anyone else use it?
[15:05] micheil: nup
[15:05] micheil: (well, not yet)
[15:05] creationix: that would explain why my site is down
[15:05] micheil: their website's up
[15:06] micheil: actually, no it's not
[15:06] creationix: mostly not
[15:06] mape: Kinda
[15:06] mape: Worked a minute ago
[15:06] micheil: yeah
[15:06] mape: now not so much
[15:06] creationix: hmm, you're on the other side micheil, so it's not a local internet issue
[15:07] creationix: yeah, it's being flakey
[15:07] mape: I'm in Sweden
[15:07] creationix: sweden, then you've been getting up real early to chat
[15:07] mape: Or real late, depending on how you look at it
[15:07] jed has joined the channel
[15:08] creationix: mape, what part?  I'll be in Stockholm in June
[15:08] micheil: mape: like my 5am or 6am's the other night
[15:08] mape: South west of Stockholm, in between the large lakes
[15:08] mape: creationix: Doing what? :)
[15:08] creationix: mape, I'm speaking at swdc-central
[15:09] creationix: Malte will be speaking there too
[15:09] mape: Oh, never heard of SWDC before
[15:09] micheil: creationix: how would one use Object.create() ?
[15:09] creationix: var newobj = Object.create(oldobj)
[15:09] micheil: I'm guessing: Object.create(EventEmitter); then add on methods?
[15:09] creationix: yep, that should work
[15:09] micheil: hmm..
[15:10] micheil: that'd be the same as creating a new instance of EventEmitter, which I'm already doing
[15:10] creationix: just remember that everything's a reference, so it works like a shallow copy
[15:10] micheil: there's no gain, just another object.
[15:10] creationix: newobj.somearray.push(foo) will modify whatever somearray points to
[15:11] creationix: but someobj.somearray = [] won't touch what somearray used to point to
[15:12] micheil: figured out a more elegant way: wrap EventEmitter.*
[15:13] creationix: ok, linode seems better now
[15:14] creationix: my server never rebooted like I told it to either
[15:14] Aria has joined the channel
[15:14] blazzy has joined the channel
[15:15] micheil: is someone playing with the pusher app client?
[15:15] maushu: ACTION pokes micheil.
[15:16] micheil: maushu: ?
[15:16] maushu: ACTION pokes micheil again.
[15:16] micheil: what?
[15:16] maushu: *POKE*
[15:16] Aria: Woot. New release to update to!
[15:16] micheil: creationix: do you understand poke speak?
[15:17] creationix: Aria, yep, but I think this one is close to the 0.2.0 api
[15:17] creationix: micheil, no, sorry
[15:17] micheil: :(
[15:17] maushu: *pooooooooooooke*
[15:17] KungFuHamster: dang, I just upgraded to 1.33 yesterday
[15:17] micheil: maushu: are you playing with the pusherapp client I'm working on?
[15:17] maushu: Not really.
[15:17] maushu: I just felt like poking someone.
[15:17] micheil: oh
[15:18] maushu: I am reading about it.
[15:18] micheil: okay
[15:18] creationix: ACTION weilds a double headed haliberd
[15:19] maushu: It doesn't make sense.
[15:19] micheil: maushu: what doesn't make sense about it? 
[15:19] maushu: Node.js is already capable of using websockets, why usinga  middleman to do it?
[15:19] micheil: because, with this middleman, it means that I can have my rails app speak over websockets
[15:20] maushu: Rails app?
[15:20] micheil: plus it means I don't really have to worry about implementing websockets
[15:20] micheil: yes
[15:20] maushu: THIS. IS. NODE.JS!
[15:20] creationix: micheil: have you seen the nginx push module
[15:20] maushu: ACTION kicks micheil through the window.
[15:20] mape: micheil: you are using windows?
[15:21] micheil: mape: hah. 
[15:21] micheil: no
[15:21] Aria: Hehe. Yes indeed. I like some of the API changes.
[15:21] mape: then stop breaking other peoples windows!
[15:21] micheil: the particular rails app is.. fairly well known.. has a bit of media around it.
[15:22] micheil: besides, I'd rather use a middleman then writing this whole app in node.js
[15:22] creationix: http://ajaxian.com/archives/nginx-http-push-module
[15:22] maushu: Despicable.
[15:23] Aria: Augh. New unusual dependency.
[15:23] creationix: Aria, what
[15:23] Aria: c-ares
[15:23] creationix: ahh, yes
[15:23] creationix: dns
[15:23] Aria: At least my distro packages it already ;-)
[15:23] maushu: ...duh.
[15:23] KungFuHamster_ has joined the channel
[15:23] maushu: I didn't even notice.
[15:23] creationix: Aria, are you making a node package
[15:23] maushu: Compiling it.
[15:23] Aria: Yep. I've been making RPMs for PLD.
[15:24] creationix: that makes sense then
[15:24] Aria: I like solid, verifiable systems. So RPM wins in my book.
[15:24] creationix: for those compiling from source node had no dependencies currently (unless you want tls in the depricated htto_old module)
[15:25] Aria: Yes. Though I'm using the system copy of v8, and all the other libraries.
[15:25] creationix: Aria, I think solid and RPM can't be used in the same sentence, maybe you meant DEB
[15:25] micheil: maushu: btw, the whole thing of pusherapp could probably easily be reimplemented in node.js (if it isn't already), but why reinvent the wheel for no gain?
[15:25] Aria: Heh, no, I meant RPM
[15:25] Aria: RPM is fine. Redhat's use of it, not so much.
[15:25] creationix: what's PLD
[15:26] Aria: PLD-Linux. Little distro, a spin-off addon distro to Redhat 5, now independent.
[15:26] creationix: cool
[15:26] Aria: And has one anal-retentive maintainer that makes sure everything works.
[15:26] creationix: like centos
[15:26] maushu: micheil, because your wheel might be better that their wheel?
[15:26] creationix: oh, then not like centos at all
[15:26] Aria: No, not at all like CentOS. CentOS is RHEL, recompiled. This is its own distro.
[15:26] micheil: maushu: this is a grand case of CBA.
[15:27] creationix: Aria, how does PLD perform on netbooks?
[15:27] Aria: Fine, I'd imagine, since you can strip it to the metal and everything's as well optimized as possible without breaking major use cases.
[15:27] Aria: Though the complete lack of an installer makes it a bit wizards-only
[15:28] creationix: so closer to something like Arch Linux in that respect
[15:28] Aria: Hehe. It's a direct inspiration for Arch.
[15:28] Aria: I worked with jvinet and xentac, introduced them to PLD, and inspired them to make Arch.
[15:28] creationix: I like arch
[15:28] Aria: They definitely ran in a few different directions, but very good ones, I think. I like PLD's way better, but not MUCH.
[15:29] creationix: it's easy, but not bloated
[15:29] Aria: Yeah. Slack-style.
[15:29] creationix: sadly I need my osx for some things, I miss using Linux all day
[15:31] Aria: Mmm. I'm on OSX right now, but I've a half dozen terminals open to my linux servers.
[15:31] creationix: oh, I remembered why I opened IRC now
[15:32] creationix: does anyone have experience getting browser's to cache stuff
[15:32] Aria: Oh yes.
[15:32] creationix: these are my headers, and it's not working http://pastie.org/912845
[15:32] gf3 has joined the channel
[15:33] creationix: I haven't implemented 304 responses yet, but I'd rather the browser cache the stuff and not even ask me
[15:34] Aria: Hm. No content-length, though that shouldn't matter.
[15:34] Aria: Does your server send Date: ?
[15:34] creationix: no, what's that?
[15:35] creationix: is expires ignored if you don't send data?
[15:35] Aria: It might. Browsers are finicky.
[15:35] Aria: (and all different)
[15:35] Aria: I believe Date: is mandated by the HTTP spec.
[15:35] Aria: But don't quote me.
[15:36] creationix: Aria, that seemed to help
[15:36] creationix: I'm using google page speed for firefox to test it
[15:37] creationix: hmm, but the browser is still asking for it every time
[15:37] creationix: maybe I need to send a 304 to convince the browser it's really cachable
[15:38] tisba_ has joined the channel
[15:38] creationix: well, I can't, the browser isn't sending me an if-modified-since header
[15:38] creationix: maybe I should use varnish on my server
[15:39] creationix: I just don't like that many layers
[15:40] malkomalko has joined the channel
[15:40] Aria: Yeah, me either. It should be pretty simple.
[15:41] jed has left the channel
[15:42] mape: Hmm when doing heavy benchmarks against my script I get Segmentation fault..
[15:47] polyrhythmic: http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
[15:47] polyrhythmic: 10.3.5
[15:47] polyrhythmic: also, http://code.google.com/speed/page-speed/docs/caching.html
[15:49] micheil: note to self: never test things by using setInterval.. because it doesn't showup errors correctly
[15:52] creationix: polyrhyrhmic, thanks for the links
[15:54] creationix: ahh, the browser only sends an If-Modified-Since header if you first give it a Last-Modified header
[15:54] polyrhythmic: np, I've dealt with caching myself with PHP/JS
[15:54] polyrhythmic: but not yet with node :)
[15:55] creationix: I still wonder by the browser doesn't cache my result when I'm using strong cache headers
[15:57] mape: Would one have to alter the node compile to get ENABLE_LOGGING_AND_PROFILING into V8?
[15:59] derbumi_ has joined the channel
[16:04] polyrhythmic: nice work on jQuery HAML, creationix 
[16:04] creationix: thanks
[16:04] creationix: what are you using it for?
[16:04] polyrhythmic: I wrote a templating plugin for jQuery that used JSON syntax, and I realized this morning how close that was to HAML
[16:04] polyrhythmic: thankfully you have already written it :)
[16:05] polyrhythmic: I'm not using it for anything yet, but I likely will be
[16:06] Yuffster has joined the channel
[16:07] creationix: cool
[16:07] zimbatm has joined the channel
[16:07] chakrit has joined the channel
[16:10] creationix: sweet, got etag based 304's working
[16:10] creationix: it still doesn't do much for first-time visitors though
[16:11] mape: Does node support Gzip in any shape?
[16:12] Aria: How would caching help a first-time visitor?
[16:13] mape: Very little one would assume
[16:14] micheil: mape: there is a gzip lib about
[16:15] mape: about?
[16:15] micheil: it's on the module's page
[16:15] mape: Oh k
[16:16] mape: Are there any thoughts on making a "plugins" page like jquery for node? 
[16:16] chakrit: Aria: proxies
[16:16] micheil: mape: no idea
[16:17] mape: Seems like a nice thing to have, the github page works fine but the jquery plugin page is really handy
[16:25] creationix: mape, I'll probably make one after I'm done with the new howtonode engine
[16:25] creationix: maybe something that scrapes the wiki and offers a better interface
[16:25] nsm has joined the channel
[16:25] mape: Nice, if you need any help with the frontend give me a shout :)
[16:26] creationix: sure thing
[16:26] creationix: mape, what did you think about my final design for the howtonode http://beta.howtonode.org/node-for-everyday-things
[16:27] creationix: I really liked the background image, so I compressed it a lot and made it scroll with the page
[16:27] mape: Nice, I'm not loving the header/text
[16:27] mape: And perhaps some vertical padding on the about/articles
[16:28] mape: But overall really nice
[16:28] sveisvei: (loving the layout)
[16:29] mape: Would also look at adding some vertical padding on the articles list
[16:29] creationix: vertical padding where?
[16:29] creationix: oh, on the front page?
[16:29] mape: "About HowToNode.org" and "aricles"
[16:29] mape: *articles
[16:29] mape: as well as the articles list
[16:30] creationix: line spacing?
[16:30] charlesjolley has joined the channel
[16:30] mape: Well I prefer 1.6 line-height but more the fact that it needs somce space to separate the different lines
[16:31] derbumi has joined the channel
[16:31] zimbatm: hi there
[16:31] mape: Hey 
[16:31] zimbatm: does anyone use the index.js feature ?
[16:31] sveisvei: aff, css3 has some way to go - the boxmodel on your beta is abit off in chrome,but we can live with those funky corners :P
[16:32] sveisvei: box-shadow in combination with rounded 
[16:32] zimbatm: I'm thinking of sending a patch to remove that require rule
[16:32] creationix: zimbatm, I don't
[16:33] mape: creationix: Also, might want to think about the mixing of fonts
[16:34] creationix: mape, how so?
[16:34] zimbatm: ACTION is trying to keep node small and tidy
[16:34] creationix: zimbatm, sounds good to me
[16:35] creationix: you'll get more exposure asking on the mailing list though
[16:35] creationix: maybe ask while submitting a patch in the same email
[16:35] zimbatm: yup, I'll just send the patch there anyways
[16:35] mape: creationix: the headlines in sans serif, the text in serif and the right boxes in sans
[16:35] creationix: kinda backwards huh
[16:36] mape: How you mean?
[16:36] creationix: usually you want serif for headers and sans for body text
[16:36] creationix: because displays are such low dpi
[16:36] creationix: (I used to work for a newspaper where you could get away with serif body)
[16:37] mape: Well it is more the mixing, almost looks like you forgot to style the body text
[16:39] softdrink has joined the channel
[16:39] creationix: I did the body serif on purpose, but I think you're right, it does look out of place
[16:40] creationix: how do I add spacing between li groups
[16:40] creationix: I guess margin or padding on the li elements
[16:40] mape: exactly
[16:40] mape: and the h3
[16:44] creationix: mape, do a hard refresh, tweaked the fonts and spacing a bit
[16:44] creationix: (I'm loving the caching support direct from a node app)
[16:44] vmind has joined the channel
[16:44] mape: Would do a padding: 13px 10px 8px on the h3
[16:44] mape: But looks nicer now
[16:45] creationix: mape, what browser/os are you on
[16:45] mape: OSX, firefox
[16:45] creationix: yeah, the text is high in firefox, but centered in chrome
[16:46] creationix: I get much more webkit based visitors than firefox
[16:46] mape: k
[16:47] creationix: (and all the IE visitors combined are less than 2% :))
[16:47] mape: <3 that
[16:49] creationix: mape, ok, I compromised, There is more padding, and the text is a little high in firefox and a little low in chrome
[16:50] mape: creationix: Owell looks nicer now :)
[16:50] inimino has joined the channel
[16:54] creationix: mape, any ideas on the main header font
[16:54] mape: hmm
[16:55] mape: Ah btw, the By Time **** Wed Feb ** might be better if you put it on one line? And perhaps in a ligher color to not draw focus from the headline/text
[16:55] mape: I think the reason I don't love the font is that it looks lika "tiki tiki" for me, tiki bar kinda
[16:55] zimbatm: patch sent : http://groups.google.com/group/nodejs/browse_thread/thread/4c323b94d3cb9c3d
[16:56] zimbatm: identically, I also sent a patch to remove the "newListener" event : http://groups.google.com/group/nodejs/browse_thread/thread/10caee732786ad97
[17:00] creationix: mape, yes, the front page isn't finished, it needs a lot of work
[17:00] mape: creationix: I'm just throwing ideas, if I'm rude shush me away ;)
[17:01] creationix: I'm not set on the tiki font, I juse needed something very strong and plain
[17:01] creationix: if you can find a better one here http://www.fontsquirrel.com/fontface go for it
[17:02] mape: Doesn't it work using the subtitle font?
[17:02] mape: Looks nice here
[17:02] creationix: hmm, let me see
[17:03] mape: creationix: http://gyazo.com/5a2c0e0235b0bcee789c9b7c7dea2123.png
[17:04] zimbatm: creationix: really cool the font site
[17:04] creationix: yeah, font squirrel is awesome
[17:04] mape: Love that is is commercial as well
[17:05] creationix: mape, what's the font sizes you used?
[17:05] mape: hmm resized.. but 1sec
[17:05] creationix: I like it, but not quite as much contrast in sizes
[17:05] mape: Yeah and I think the leaning matching ut worked well as well
[17:06] creationix: I wish there was a bolder version of the font
[17:09] hellp has joined the channel
[17:09] admc has joined the channel
[17:09] creationix: mape, updated, see what you think
[17:09] mape: Yeah nicer
[17:09] creationix: and less resources to download too :)
[17:11] mape: yeah
[17:11] creationix: I'm pretty set on the contents of the actual article pages.  I just need to finish hooking up the data for the "About this Article" and "Related Articles" sections
[17:11] creationix: but I'm at a loss for the front page
[17:11] mrjjwright has joined the channel
[17:11] creationix: I think maybe the last 5 articles with their first paragraph, the author, date, and number of comments?
[17:12] jazgot has joined the channel
[17:12] creationix: and then on the side show all the articles grouped by month, also with date, author, and #comments?
[17:12] mape: I'm the kinda person that like a ton of stuff on the page
[17:12] mape: So I would say show all articles
[17:12] creationix: well, there aren't too many yet, so I can show all for now
[17:13] mape: Shouldn't slow down and there is no reason to have a "show older articles" unless you want pagesviews for ads
[17:13] creationix: yuck, ads
[17:13] creationix: I'll never puts ads on it!
[17:13] creationix: not with my audience
[17:14] creationix: they'll either not see them because of adblock or get disgusted that I'm making money off a community powered site
[17:14] mape: Yeah
[17:14] MattJ: ACTION could be certain Node is taking a lot longer to compile than last time (.30)
[17:14] jazgot has left the channel
[17:15] sveisvei: MattJ: because of c-ares i recon?
[17:15] MattJ: Maybe
[17:15] MattJ: ACTION rebuilds .30 just to compare
[17:16] mikeal has joined the channel
[17:16] dgathright has joined the channel
[17:17] MattJ: Don't know why - compilation is a one-time thing - but I can't stand things that take a long time to compile :)
[17:17] MattJ: Makes me think of C++
[17:17] ssteinerX has joined the channel
[17:17] mape: MattJ: Automate it and have a beer while it is chucking away?
[17:18] MattJ: I don't drink, maybe that's my problem
[17:18] mape: Most likely
[17:18] Aria: Hehe. Long compile times suck.
[17:18] Aria: Make you unwilling to make bigger changes, the kind that bring real gains.
[17:18] MattJ: Indeed
[17:18] MattJ: I've done embedded stuff before with 45 minute build times
[17:19] mape: hmm takes me 17sec to git update, clean and compile, is that bad?
[17:19] MattJ: and no-one willing to delve into the wacky build system to try and make it more efficient
[17:19] mape: I mean waiting 20sec to update can't be an issue
[17:20] MattJ: .30: 3m24.332s .90: 4m8.282s
[17:20] mape: real    0m17.469s
[17:21] MattJ: Yes, well, when I reach step 3 (profit) then I'll be able to afford a nice fast machine for building Node on :)
[17:21] sveisvei: hehe
[17:21] mape: Hehe, hardware is cheap if you host it yourself ;)
[17:21] MattJ: :)
[17:31] kriskowal has joined the channel
[17:31] sveimac has joined the channel
[17:34] creationix: _ry, what do I do with libraries like haml-js that don't depend on any particular version of node and even run in the browser?  Do I just leave them off the compat page in the wiki
[17:35] derbumi has joined the channel
[17:35] _ry: creationix: you can link them 
[17:36] creationix: alright
[17:37] zimbatm has joined the channel
[17:40] mape: _ry: When I asked you about profiling you told me to run the script with --prof, but does that require compiling node with extra flags? Doesn't seem like it outputs anything with --prof
[17:43] creationix: _ry, ok I added all my libraries that run on v0.1.90, should we write short descriptions next to each one?
[17:47] isaacs has joined the channel
[17:48] creationix: actually, I prefer it bare, it's easier to scan through
[17:50] micheil: I think we really need a site setup which is like gemcutter, where you can create an account, publish the library you've built (just a link to a github repo), and then maintain which versions your library works with
[17:51] mrjjwright_ has joined the channel
[17:54] charlesjolley has joined the channel
[17:54] creationix: micheil, I'm sure that will come with time as the community grows
[17:54] creationix: and when we get a standard package manager
[17:54] rtomayko has joined the channel
[17:55] tlrobinson_ has joined the channel
[17:56] creationix: I mean how many years was there ruby without gems or any sort site like gemcutter?  I think node is already growing WAY faster than ruby ever did, ruby just has a head start.
[17:57] creationix: It's like a newly wed couple to have the big house and nice car that their parents had and they were used to growing up, but they forget it took their parents years to get where they were
[17:57] mape: Doesn't node already have a manager?
[17:57] creationix: not an official one
[17:57] mape: Well, a working one?
[17:57] creationix: there is npm and kiwi and a couple others
[17:58] creationix: I hear one will come out at jsconf
[17:58] mape: yeah, was thinking of kiwi
[17:59] creationix: not that I'm saying we shouldn't built a site like gemcutter, I'm just saying it may be more work that it's work till there is some stability on the packaging front
[17:59] creationix: *work than it's worth
[17:59] mape: But doesn't a standard create a stability?
[18:01] creationix: sure it does, that's why the async function standard was such a good desicion 
[18:02] creationix: but a package format needs to be well thought out and tested in the real world before we declare it the standard
[18:02] polyrhythmic: I like the kiwi approach
[18:03] polyrhythmic: it works well for now
[18:03] isaacs: mrjjwright_: hey, you actually can set either the headers or the boundary explicitly
[18:03] mrjjwright_: k
[18:03] mrjjwright_: which one has priority, boundary?
[18:03] isaacs: mrjjwright_: yeah, it doesn't parse the headers if the boundary is already set
[18:03] isaacs: (iirc)
[18:04] isaacs: that's just a convenience so you can toss it in from a parsed http message.
[18:04] mrjjwright_: right
[18:04] mrjjwright_: that is what I thought
[18:05] mrjjwright_: i was thinking of having partBegin(part, headers) where part is the part object you emit, you know a convenience, and headers are other headers you can optionally add like Content-Length.
[18:05] mrjjwright_: for the writer
[18:05] mrjjwright_: so that you can add other http headers, or even leave off the part and write all the headers for the part yourself if you need to
[18:06] mrjjwright_: anyway you can review later, going to lunch.
[18:10] bronson has joined the channel
[18:17] xla has joined the channel
[18:31] micheil: creationix: I take it it's a coincidence that all the 0.1.90 libs are yours?
[18:32] creationix: well, nobody else has put up their libs yet
[18:32] creationix: ;)
[18:32] micheil: ;P
[18:33] micheil: maybe after I've worked out sortable trees ontop of mongodb will I finish up the work needed on node-protocol, node-smtp and the other node-* projects I have.
[18:33] mjr_ has joined the channel
[18:38] bpot has joined the channel
[18:43] binary42 has joined the channel
[18:49] isaacs has joined the channel
[18:50] mattly has joined the channel
[18:52] mfeiri has joined the channel
[18:53] MattJ: Anyone using socket.io on .90?
[18:53] alexandere has joined the channel
[18:54] MattJ: Maybe I should just roll back
[18:56] MattJ: *cough*compiling*cough*
[18:56] MattJ: To be fair, most of the time is spent in V8 I think
[18:57] sveimac has joined the channel
[19:02] MattJ: Heh... anyone using socket.io on .33? :)
[19:05] vmind has joined the channel
[19:06] creationix: what's socket.io?
[19:07] MattJ: http://github.com/RosePad/Socket.IO
[19:08] MattJ: I can't even get the built-in example to work
[19:08] MattJ: Maybe I'll explore alternatives... I'm just trying to get from Javascript to a real TCP socket
[19:08] creationix: hmm, no, but I have a working barebones websocket library
[19:08] creationix: github.com/creationix/websocket
[19:08] MattJ: Does it work in non-websocket browsers?
[19:09] creationix: nope
[19:09] creationix: no abstraction
[19:09] creationix: writing your own shouldn't be hard
[19:09] creationix: abstractions are over-rated
[19:09] MattJ: +1
[19:10] xla has joined the channel
[19:10] andrewhampton has joined the channel
[19:12] creationix: all my library does above pure websockets is it serves the security file needed by flash based sockets
[19:13] MattJ: I just can't believe that what I'm trying to do is so hard :)
[19:13] MattJ: Tempted to just tunnel everything over XMPP for now :)
[19:15] demolithion has joined the channel
[19:17] fizx has joined the channel
[19:19] fizx has joined the channel
[19:19] mjr_: New node docs have a lot of great new content, but the api.html file is kind of uglier.
[19:20] xla: mjr_: man page style
[19:20] JimBastard has joined the channel
[19:20] MattJ: I preferred the old one too
[19:20] mjr_: I don't mind man page style, but there are a lot of ways to render man pages as HTML
[19:21] mattly has joined the channel
[19:21] mjr_: I like this one: http://doc.mape.me/
[19:21] JimBastard: rape.me ?
[19:21] JimBastard: inappropiate
[19:21] mape: How rude!
[19:22] mape: .me
[19:22] sveimac has joined the channel
[19:22] mjr_: Your docs are looking really good, mape.
[19:22] MattJ: +1
[19:22] mape: ACTION feels rich
[19:22] MattJ: Not convinced about the fixed title though
[19:22] MattJ: Clever, but is it needed?
[19:22] mape: Doubt it
[19:23] MattJ: Remove it please, or send me a bigger monitor :)
[19:23] MattJ: Remove it after I figure out how you did it
[19:23] mjr_: I have a big monitor, and I don't care for the fixed title either.
[19:23] mjr_: Also kind of wasteful on iPhone.
[19:24] mape: site is broken overall in iPhone
[19:24] MattJ: Ah, it also updates the highlight in the TOC, clever - that can stay :)
[19:25] sh1m has joined the channel
[19:25] chakrit has joined the channel
[19:27] Aria has joined the channel
[19:29] dnolen has joined the channel
[19:30] atmos: did "foo".matches(//) go away in 1.9 ?
[19:32] JimBastard_ has joined the channel
[19:33] superted has joined the channel
[19:34] mjr_: you mean String.prototype.match()?
[19:36] atmos: mjr_: yeah
[19:37] atmos: word, thanks :)
[19:38] atmos: oh interesting, it's just not a string that i'm getting back :)
[19:44] mjr_: Buffer then?
[19:47] chakrit has joined the channel
[19:47] sveimac has joined the channel
[19:49] zimbatm has joined the channel
[19:49] zimbatm has joined the channel
[19:50] mjijackson has joined the channel
[19:53] chakrit has joined the channel
[19:57] devinus has joined the channel
[19:57] devinus: _ry: have you ever seen libcoro ?
[20:01] isaacs has joined the channel
[20:04] felixge has joined the channel
[20:04] felixge has joined the channel
[20:04] javajunky has joined the channel
[20:06] softdrink has joined the channel
[20:08] felixge: party?
[20:14] mape: wooe?
[20:15] mape: Im killing myself here fixing a bug that jumped out of nowhere :/
[20:17] atmos: is there anything obvious that would turn what used to be a tcp socket into a unix socket when upgrading from .33 to .90 ?
[20:18] kriskowal has joined the channel
[20:18] Aria: I haven't looked yet, but that whole API looks to have changed some names about.
[20:18] Pilate has joined the channel
[20:21] mattly has joined the channel
[20:25] sztanpet has joined the channel
[20:33] atmos: turns out my port number was a string so it treated it like a normal unix socket instead of a port :)
[20:33] javajunky: oopsey
[20:37] javajunky1 has joined the channel
[20:41] atmos has joined the channel
[20:41] derbumi has joined the channel
[20:44] binary42 has joined the channel
[20:47] atmos: anyone know if there's a dropin replacement for the multipart stuff that was removed in .90 ?
[20:49] isaacs has joined the channel
[20:50] atmos: isaacs: is your multipart stuff a decent replacement for the stuff that got removed from node ?
[20:50] tmpvar has joined the channel
[20:50] isaacs: atmos: sure.  you'll probably hit bugs if you use it today ,but i'd love to know about them :)
[20:50] isaacs: the old one is there at lib/old.js
[20:56] atmos: isaacs: hrm, how do i get those ?
[20:56] atmos: oh i see, nice
[20:56] isaacs: atmos: how do you get the bugs?
[20:57] atmos: nah, i didn't see where old.js was
[20:57] atmos: found it though, thanks
[20:57] rolfb has joined the channel
[20:59] justinlilly has joined the channel
[21:00] justinlilly has left the channel
[21:00] JimBastard has joined the channel
[21:02] jashkenas has joined the channel
[21:04] mrjjwright has joined the channel
[21:07] felixge has joined the channel
[21:07] felixge has joined the channel
[21:14] mape: Hmm I'm assigning arrays left and right (that and are a part of objects) and instead of getting clones I'm getting references
[21:15] mape: But is there a Object.create for arrays? Pretty much just cloning it
[21:15] jashkenas: To clone an array: array.slice(0)
[21:17] mape: jashkenas: neat
[21:18] jashkenas: mape: note that that's a shallow copy.
[21:19] mape: Hmm k, I'm trying to solve why http://chat.mape.me/ is messing up, 2 out of 3 are flipping
[21:19] mape: But all are using the same code..
[21:19] mape: http://mape.me/nodejs-code-review/
[21:19] jashkenas: Nice skin.
[21:19] mape: Just seem to flip around
[21:19] mape: So yeah.. I'm going insane here
[21:20] jashkenas: sorry, can't take a look right now. ... narrow it down. console.log is your friend.
[21:20] derbumi has joined the channel
[21:20] mape: Yeah, only that it is backend, so sys.puts ;)
[21:20] kassens has joined the channel
[21:21] JimBastard: does anyone know how to parse rails-like nested form inputs in jquery? <input name="listeners[timer][interval]"
[21:22] mrjjwright has joined the channel
[21:23] kassens: hmm, any idea why `make` of node 0.1.90 fails for me (on osx 10.6)? http://pastie.textmate.org/private/yqbuiqczebghqyft63byq
[21:24] zimbatm has joined the channel
[21:25] inimino: kassens: needs ./configure first
[21:25] kassens: dang
[21:25] kassens: stupid me
[21:26] bpot has joined the channel
[21:28] mjijackson has joined the channel
[21:28] jashkenas: What's the new standard for dealing with 'data' events in 0.1.90?
[21:29] jashkenas: Call toString() on the buffer from 0 to buffer.length if you're not streaming?
[21:29] jashkenas: Is that the suggested pattern?
[21:29] kenneth_reitz has joined the channel
[21:31] tmpvar has joined the channel
[21:31] JimBastard: sup tmpvar 
[21:32] jashkenas: Just figured out that buffer.toString() seems to do the right thing with no arguments. (default encoding, length of the buffer, it seems). Would be good to document that.
[21:33] JimBastard: huzaah!
[21:34] jashkenas: another question about Node '90: What's the new replacement for process.stdio.writeError?
[21:34] jashkenas: sys.debug? Or is there direct access to stderr?
[21:36] sveisvei has joined the channel
[21:36] jashkenas: Hmm. sys.error seems to exist, but isn't documented.
[21:37] binary42: Yeah. I recall a thread on this as well. It'd be nice to have process.stderr
[21:41] rolfb has joined the channel
[21:41] jashkenas: binary42: no reponse to this: http://groups.google.com/group/nodejs/msg/33d48a8fc1d2df07
[21:41] binary42: Right.
[21:42] jashkenas: oh well, stdout for now, I guess.
[21:42] binary42: It'd probably be easy to patch and a silent flag on coffee could disable stdout if you wanted I guess.
[21:43] binary42: I'd put a check in for stderr if it's added.
[21:43] jashkenas: It'll be easy to add -- we're just using it for the "No such task exists" Cake message. No biggie.
[21:45] binary42: Ah. Makes sense.
[21:46] rolfb_ has joined the channel
[21:46] derbumi has joined the channel
[21:47] mrjjwright has joined the channel
[21:47] rolfb_: big night here
[21:47] rolfb_: first go at node.js and coffeescript
[21:48] tmpvar: nice
[21:48] rolfb_: just installed jashkenas textmate bundle :)
[21:48] jashkenas: rolfb_: feel free to pop into #coffeescript if you'd like to chat about it.
[21:59] lifo has joined the channel
[22:05] brainproxy has joined the channel
[22:05] creationix_away: I'm guessing it was just oversight to not have process.stderr, I'll see if it's a quick patch
[22:05] admc has joined the channel
[22:05] creationix_away: I know of a couple of other parts where the api isn't self consistent, and _ry already told me those were bugs needing to be fixed
[22:06] jashkenas: creationix_away: Thanks much.
[22:08] creationix: hmm, interesting, so sys.error does "process.binding('stdio').writeError"
[22:08] jashkenas: I guess the question is: Is it old and deprecated, or new and undocumented.
[22:08] creationix: which I seem to remember is sync, not async like process.stdout.write (aka puts/print)
[22:09] jashkenas: Nah, isn't that sys.debug?
[22:09] jashkenas: (which also writes to stderr)
[22:09] mrjjwright has joined the channel
[22:10] sveilin has joined the channel
[22:11] derbumi has joined the channel
[22:11] mikeal has joined the channel
[22:12] creationix: hmm, looks like it would be easy to add process.stderr
[22:12] creationix: look at line 767 of node.js
[22:12] creationix: stdout is implemented as a getter so the stream isn't initialized till it's accessed the first time
[22:12] jashkenas: right, just dup that.
[22:12] creationix: very cool
[22:13] creationix: but for sys.error and sys.debug I think they use the bindings directly on purpose so that they are sync operations
[22:13] jashkenas: Totally. lazy-loading accessors are fantastic.
[22:13] creationix: ok, want me to dup it and submit the patch or do you want to?
[22:13] jashkenas: Go for it.
[22:16] creationix: jslint with strict whitespace and _ry's code are not compatable
[22:17] bpot has joined the channel
[22:17] pdelgallego has joined the channel
[22:18] creationix: failed 37 unit tests, hmmm
[22:18] jashkenas: JSLint likes 4 spaces? ugh. Good for _ry for keeping it real.
[22:20] creationix: well, even if you configure jslint for two spaces, it still barfs his comma-first style
[22:21] creationix: strange, I reverted all my code and it's still failing tests
[22:21] creationix: the tests must not reset all their state
[22:21] creationix: time for a fresh clone
[22:22] jashkenas: I wonder if the comma-first style triggers semicolon insertion in any JS implementations...
[22:23] creationix: under certain cases it might, there was an argument about it on ajaxian when they grabbed a gist from isaacs
[22:23] kassens: semicolon insertion is well defined
[22:23] creationix: but not in any the examples I've seen, they were all safe
[22:23] jashkenas: kassens: yeah, just found this, with a link to the relevant spec.
[22:23] jashkenas: http://lists.evolt.org/pipermail/javascript/2006-May/010501.html
[22:23] kassens: so it (should) be consistent across implementations
[22:24] creationix: well defined !== defined well ;)d
[22:24] creationix: I think the spec is quite funny, it essentially says that if you encounter a syntax error to back up, insert a semicolon and try again
[22:25] kassens: theres a strict definition of the rules ;)
[22:25] creationix: it gives precise conditions so it's easy to implement, but that's about it
[22:26] kassens: yeah, i read the spec myself. those lax rules are one of the bad things of js
[22:26] creationix: what, js has no Bad Parts (tm)
[22:27] creationix: :P
[22:27] inimino: jashkenas: no, the comma-first style doesn't trigger semicolon insertion anywhere
[22:28] inimino: (ASI is a complete red herring wrt to the comma-first issue)
[22:28] inimino: ACTION should blog about it
[22:28] jashkenas: inimino: Thanks. I didn't realize there was such a battle in the Ajaxian comments about it. That must be the most-commented article in a while.
[22:28] inimino: yeah, Crockford even got involved
[22:28] CrockBot: Crockford can delete variables, with extreme prejudice   earnubs
[22:29] mape: jashkenas: besides the ones where commenters try to sell viagra and houses..
[22:29] inimino: but he didn't clarify his assertion, which I'm pretty sure was unfounded
[22:29] inimino: unless he commented again today
[22:29] kassens: well, there are some examples at the end where you need to be aware of semicolon-insertion
[22:29] kassens: http://gist.github.com/raw/357981/e0cf87146509a2363f9462b04b5517862982c82f/comma-first-var.js
[22:30] creationix: yeah, so when I said that under certain cases it might trigger ASI I was referring to people misusing the comma-first style, not any proper use of it
[22:30] inimino: hm, I'm not sure I can agree, kassens...
[22:30] inimino: none of those would be any different if the commas were on different lines than they are
[22:31] jashkenas: ACTION opened a can of worms
[22:31] inimino: I guess you could argue that if using comma first leads you to put the brace on the line after the return, then it could cause an error, but that's a bit of a stretch ;)
[22:31] creationix: exactely, that's what I meant
[22:31] kassens: but this alternative layout suggests to put the { in line with the , and }
[22:32] creationix: and yes, it's a stretch, but people are liable to do anything
[22:32] inimino: sure
[22:33] creationix: jashkenas, so what broke the tests was that I didn't just dupe the function, I tried to "optimize" it too
[22:33] creationix: bit I now see my error
[22:33] creationix: a straight dupe works fine
[22:34] kassens: i understood the idea that you have a symbol in front of every line, for instance: http://gist.github.com/357981#LID75
[22:34] darkf has joined the channel
[22:34] creationix: grr, someone needs to fix the repl to let me use anonymous functions inline
[22:34] kassens: but anyway, i think the style is ugly and jslint on save prevents me from such syntax errors.
[22:35] inimino: hehe
[22:36] jashkenas: kassens: ++
[22:37] creationix: http://gist.github.com/362345
[22:37] creationix: it seems simple enough, but it's not that easy to overwrite a magic getter
[22:38] creationix: I seem to remember you have another magic method to unset the getter first?
[22:38] kassens: talking about js style, how do you handle multiple for-loops in a function. for(var i = 0; ...) twice would be a redeclaration of i and a jslint error. leaving out the "var" on one is somehow ugly, especially if the two for loops are inside an if/else
[22:38] creationix: or maybe just a delete
[22:39] jashkenas: kassens: You use a different variable.
[22:39] creationix: kassens, not only a jslint error, but a logic error
[22:39] creationix: for loops don't create a new scope
[22:39] kassens: i know
[22:39] creationix: but yeah, that's an ugly part of js for sure
[22:40] creationix: I wish forEach was faster, then it wouldn't matter
[22:40] kassens: well, for is just a common case of this situation
[22:40] creationix: yeah, know what you mean
[22:41] kassens: happens more often if you have an if/else and inside kind of similar logic
[22:41] creationix: unless my code is absolutely performance critical, I tend to create lots of scopes using functions
[22:41] kassens: yeah, me too
[22:41] creationix: I'd rather have code that 300% easier to read and 20% slower
[22:42] inimino: kassens: put the var at the top
[22:42] maushu: OH GOD, MY EYES.
[22:42] maushu: ACTION just checked the new node docs.
[22:43] cloudhead has joined the channel
[22:44] creationix: maushu: don't like the white?
[22:44] maushu: No.
[22:44] maushu: It reminds of that floating ball of fire.
[22:44] creationix: jashkenas, still not working (process.stderr) now I get Error: Stream is not writable
[22:44] creationix: I suspect there is a little more work elsewhere
[22:44] creationix: I'll look for a few more minutes in hopes it's easy
[22:54] psynaptic has joined the channel
[22:58] aho has joined the channel
[22:58] creationix: jashkenas, patch sent!
[22:59] jashkenas: creationix: swell.
[22:59] creationix: I wonder why this wasn't already done, there is probably some deep reason it's not a good idea
[22:59] creationix: or maybe _ry is just that busy.
[22:59] jashkenas: It's hard to keep all the corners of a large API in your head at once.
[23:00] creationix: I hope it works, it will be nice to have symmetric support for stdout and stderr
[23:09] derferman has joined the channel
[23:13] kenneth_reitz has joined the channel
[23:13] creationix: I have no clue how Ben Lund is breaking puts by adding to Object.prototy
[23:13] creationix: pe
[23:14] creationix: I'm guessing it's an unprotected for..in somewhere, but I can't find it
[23:26] creationix: I only found two for..in loops and added hadOwnProperty protection to them both and the bug is still there
[23:26] creationix: what else can messing with Object.prototype break?
[23:27] jashkenas: creationix: where's the bug report?
[23:27] creationix: mailing list
[23:27] creationix: http://groups.google.com/group/nodejs/browse_thread/thread/eb927f3a6ec2c0b6
[23:27] jashkenas: dude, what's up with all the spam on the Group?
[23:28] jashkenas: http://groups.google.com/group/nodejs
[23:28] jashkenas: That's no good.
[23:28] creationix: it's something in requireNative I think that's called only the first time you access process.stdout (which sys.puts uses)
[23:29] jashkenas: creationix: I'm curious about your stdout/stderr patch. How does that make it faster?
[23:30] creationix: instead of returning the memoized value, I replace the getter entirely with the raw value
[23:30] creationix: I assume that's faster
[23:31] jashkenas: Oh, I see. You kill the function. Interesting approach.
[23:31] creationix: but that was my first mistake, the first time I forgot to delete it first
[23:31] creationix: you can't overwrite a getter without deleting it first
[23:33] JimBastard has joined the channel
[23:33] devinus: anybody know any repl improvement going on?
[23:35] creationix: I don't know of any
[23:35] creationix: go for it
[23:35] creationix: but good luck, it can get tricky
[23:36] derbumi_ has joined the channel
[23:39] JimBastard: sup creationix 
[23:39] creationix: sup
[23:39] charlesjolley has joined the channel
[23:40] JimBastard: the usual
[23:40] JimBastard: you hacking on anything today?
[23:40] creationix: howtonode and node
[23:40] JimBastard: nice nice
[23:40] creationix: I'm completely stumped by a recent bug posted to the mailing list
[23:41] creationix: somehow messing with Object.prototype breaks require
[23:41] JimBastard: yeah i have no idea
[23:41] JimBastard: im still mostly out of ECMA5 land
[23:41] JimBastard: im just about to start using all that stuff though
[23:42] creationix: ahh, it doesn't break require, just something in net
[23:46] derbumi has joined the channel
[23:49] creationix: eww, it's a nasty one, something in the c code to ares is enumerating over a json object and getting the stuff from Object.prototype and interpreting it as invalid
[23:49] JimBastard: you get um creationix 
[23:50] creationix:     Local<Array> keys = options_o->GetPropertyNames();
[23:51] creationix: I'm guessing that works like Object.keys in JS land
[23:51] creationix: which will pull the offending property
[23:51] RayMorgan has joined the channel
[23:53] alexandere has joined the channel
[23:59] justinlilly has joined the channel
