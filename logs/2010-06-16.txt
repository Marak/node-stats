[00:00] jetienne: http://www.dhteumeuleu.com/the-dolls/ this one is nice. clearly good imagination
[00:02] maushu: jetienne, creepy.
[00:02] JimBastard: ughh jetienne that doll one made me dizzy
[00:02] JimBastard: oofa
[00:03] saikat has joined the channel
[00:06] jetienne: http://www.dhteumeuleu.com/low-enough/ yep a funny personn ;)
[00:07] maushu: I wonder if it's faster to use divs or a canvas for multiple moving objects.
[00:08] saikat: maushu: divs
[00:08] saikat: if i understand correctly
[00:08] mostlygeek has joined the channel
[00:08] saikat: depends on the browser, but i have yet to encounter a browser where redrawing a canvas is faster than moving a div
[00:09] saikat: it might also depend on the size of your canvas
[00:09] saikat: definitely smaller canvas = faster performance, but again, i'm not sure if it'll ever be faster than a simple move on the div
[00:09] stagas: the sources all look so simple
[00:09] _announcer: Twitter: "Today tweak Node.js" [ja] -- 天沢(弱). http://twitter.com/amasawa/status/16265213347
[00:09] technowe_ has joined the channel
[00:10] jetienne: http://www.dhteumeuleu.com/what-power/ this one *is* creepy :)
[00:10] stagas: I'm really annoyed by such talent
[00:11] kodisha has joined the channel
[00:12] _announcer: Twitter: "Expresso for testing my nodejs code, written using Emacs' Espresso-mode, and a client in Cappuccino. Strict coffee-only programming diet." -- Saikat Chakrabarti. http://twitter.com/saikatc/status/16265382816
[00:13] saikat has left the channel
[00:13] slaskis has joined the channel
[00:19] _announcer: Twitter: "Node.js to make that. Yeah Throw ..." [ja] -- 天沢(弱). http://twitter.com/amasawa/status/16265796652
[00:20] JimBastard: AHAHAH
[00:20] JimBastard: automatic translator ftw
[00:22] mjr_ has joined the channel
[00:26] _announcer: Twitter: "@flipsasser I exploited node.js once, but then the plague sent a rabbit after me and crash override had to bail me out. True story." -- Brian Sierakowski. http://twitter.com/bsierakowski/status/16266234185
[00:28] sztanpet has joined the channel
[00:32] hpoydar has joined the channel
[00:35] mikeal: ryah: you around?
[00:36] mikeal: isaacs: you around?
[00:36] stevendavie1 has joined the channel
[00:40] mjr_: mikeal: did you succeed in making anything out of pcap?
[00:41] kodisha has joined the channel
[00:42] maushu has joined the channel
[00:44] mikeal: not yet
[00:44] mikeal: i got hung up messing with web sockets
[00:44] mjr_: Yeah, I know how that goes.
[00:44] mjr_: So tempting.
[00:45] mjr_: But now you could write a decoder and printer for websockets.
[00:47] everton has joined the channel
[00:52] visnup has joined the channel
[00:54] _announcer: Twitter: "Awesome video from jsconf. "Ryan Dahl – Less is More with Node.js" http://bit.ly/aAvXUl" -- Gastown Labs. http://twitter.com/gastownlabs/status/16267855258
[00:56] _announcer: Twitter: "node.js I wonder if I receive command line arguments" [ja] -- 天沢(弱). http://twitter.com/amasawa/status/16267976986
[00:57] JimBastard: cheaaaaa
[00:57] JimBastard: maushu: that one can be answered!
[00:57] JimBastard: he wants to know how to get command lines arguments
[00:58] JimBastard: im tempted to respond through translate.js lol
[00:58] maushu: JimBastard, ...do you speak moonspeak?
[00:58] JimBastard: dude
[00:58] JimBastard: it gets normalized
[00:58] JimBastard: use your head
[00:58] JimBastard: wonder 
[00:58] JimBastard: if
[00:58] JimBastard: recieve
[00:58] JimBastard: command line
[00:58] JimBastard: he wants to know how to get the args
[00:59] aglemann has joined the channel
[00:59] mikeal: mjr_: i just want a web socket to the web client to show the traffic info
[01:00] _announcer: Twitter: "@amasawa process.argv http://nodejs.org/api.html#process-argv-56" -- Diogo Gomes. http://twitter.com/graphnode/status/16268268234
[01:00] _announcer: Twitter: "Great and informative article on node.js - http://bit.ly/bliFCB" -- Elliott Draper. http://twitter.com/ejdraper/status/16268286222
[01:00] maushu: JimBastard, sent it, lets see if he understands it.
[01:01] JimBastard: you sent back in moonspeak right?
[01:01] maushu: No.
[01:01] JimBastard: fail
[01:01] maushu: Just sent the command.
[01:01] JimBastard: ohh
[01:01] JimBastard: i would have added some text man
[01:01] maushu: No moonspeak, english speak needed.
[01:01] JimBastard: fair enough
[01:02] JimBastard: i really want to get automatic twitter / stackoverflow integration in this channel with command line triggers for +v , #bastardfacts
[01:02] mjr_: mikeal: if you make a ws server framework, I can show you how to plug in the pcap data to it.
[01:02] JimBastard: can we do that?
[01:02] JimBastard: and by "can" i mean "now" and by "we" i mean "you"
[01:02] dabreaka has joined the channel
[01:03] JimBastard: or, "someone else"
[01:03] JimBastard: >.<
[01:03] isaacs: mikeal: back
[01:03] isaacs: sup?
[01:03] mikeal: i've been thinking about this a lot
[01:03] mikeal: I kinda want to get rid of 
[01:04] mikeal: require('name/sub')
[01:04] mikeal: just have a main.js
[01:04] mikeal: and it uses relative imports
[01:04] isaacs: mikeal: ok
[01:04] mikeal: nothing else is public
[01:04] isaacs: you can do that with npm pretty easily
[01:04] mikeal: i was wondering what you thought
[01:04] isaacs: yeah, that's fine.
[01:04] isaacs: just don't have your folder named "lib"
[01:04] mikeal: no no
[01:05] mikeal: lib/main.js
[01:05] mikeal: and lib still gets installed
[01:05] mikeal: but you can't import anything but "name"
[01:05] mikeal: i'm actually suggesting it be the default behavior for the Packages spec
[01:05] Aria has joined the channel
[01:05] isaacs: well, but you can, though, if there is a folder named "lib", 
[01:05] isaacs: because directories.lib defaults to "lib"
[01:06] isaacs: with npm, if you have a main module, then that's require("foo"), but if you have lib/bar.js then that'll be available via require("foo/bar")
[01:06] Aria has left the channel
[01:06] mikeal: right, i think that should be removed
[01:06] mikeal: :)
[01:06] isaacs: the second bit?
[01:06] mikeal: yeah
[01:07] mikeal: i don't think it's necessary and it's actually kind of toxic
[01:07] isaacs: i see.  but what about if you have "directories" : { "lib" : "./foo" }
[01:07] mikeal: i've been pondering some of the stuff ryah was talking about
[01:07] mikeal: and this is something i think that we carried over from the old module systems that doesn't belong
[01:08] mikeal: modules should be small and lean towards keeping most of their stuff private
[01:08] mikeal: that's what the Modules spec does, with you having to explicitly make things public, everything else defaults to private
[01:08] isaacs: hm.
[01:09] isaacs: i'm not opposed to removing the default.  i'll still keep supporting an explicit "lib" folder if one is provided, though
[01:09] mikeal: i mean, should modules really be exposing sub modules for consumption?
[01:09] isaacs: i just wonder if people will start whining about it making stuff not work
[01:09] mikeal: i don't think they should
[01:09] isaacs: so, the use case would be something where you bundle a few different utils into a single package.
[01:10] isaacs: it makes sense for something like narwhal to be composed of a bunch of different modules.
[01:10] mikeal: but those shouldn't be at narwhal/
[01:10] isaacs: they are
[01:10] mikeal: they should just be in the root namespace
[01:10] kodisha has joined the channel
[01:10] mikeal: yeah, i'm just disagreeing with that style
[01:10] isaacs: oh, mixed the word order there ;)
[01:10] mikeal: i mean
[01:10] mikeal: like, we need to get everything smaller
[01:11] isaacs: so, narwhal actually *does* require that things be put at the root namespace, and also that it be able to modify the require.paths permanently, which can't be done by npm atm
[01:11] mikeal: like ryah was saying
[01:12] mikeal: these module systems are built for huge VMs where they load all this crap in to memory and then share them out via threads
[01:12] mikeal: if we're going to spin down and up processes on changes and scale them at will, we need to get all these little bits smaller
[01:12] isaacs: i didn't see where ryah was saying that.
[01:12] sveimac has joined the channel
[01:13] mikeal: it might have been in person :)
[01:13] isaacs: haha, o
[01:13] isaacs: ok
[01:13] mikeal: he said the first part, the second part about getting modules smaller is what i'm saying
[01:13] isaacs: i don't think it really much matters how many parts are in any given npm package.
[01:14] mikeal: having one place where the API is exposed
[01:14] isaacs: but yeah, encapsulation and separation of concerns is generally a great thing.
[01:14] mikeal: means it's a lot easier to hot load modules too
[01:14] mikeal: because the references that might languish around are smaller
[01:16] isaacs: that's true
[01:16] isaacs: but, really, hot-loading needs to be tracking at the require() level, not at the api exposure level
[01:17] isaacs: like nodules doe
[01:17] isaacs: s
[01:17] softdrink has joined the channel
[01:18] isaacs: so, modules need to be small, but that's not going to be affected by getting rid of require("foo/bar")
[01:18] isaacs: if anything, forcing everything to be in a single module is going to make them bigger.
[01:19] mikeal: it encourages smaller
[01:19] mikeal: i wouldn't say it solves the problem
[01:19] isaacs: ie, making packages smaller doesn't necessarily make modules smaller, or even mean the same thing.
[01:19] mikeal: but it also keeps the packages a little more in line with the way Modules work
[01:19] isaacs: we need smaller pieces, but we're always going to have some programs that are composed of a lot of different modules.
[01:19] mikeal: with single point to expose the public API
[01:19] isaacs: for instance, npm itself
[01:19] mikeal: and the rest private
[01:19] isaacs: if a module has been require()ed, then it doesn't matter if it's "public" or not.
[01:20] isaacs: it's *always* possible to require(".npm/foo/0.1.2/package/lib/bar")
[01:20] isaacs: require("foo/bar") is just a convenience, and doesn't actually encourage modules themselves to be bigger or smaller.
[01:20] isaacs: the "module" is bar.js, which is included in the *package* foo
[01:22] JimBastard: bar.js , imonit
[01:23] _announcer: Twitter: "RJS makes me feel so dirty. Node RJS, doubly so. #nodejs #node.js #node" -- Pavel Zaitsev. http://twitter.com/zoftie/status/16269720015
[01:23] mikeal: i'm pondering this
[01:23] isaacs: JimBastard: i fully expect to see a http://github.com/Marak/bar.js by the end of the evening.
[01:23] isaacs: JimBastard: it should use some kind of api to find me the nearest open bar
[01:23] JimBastard: ahaha, i dont have any ideas for that
[01:23] pavelz: what the ... 
[01:23] JimBastard: i call my bars measures in http://github.com/marak/JSONloops
[01:24] JimBastard: ill do a 3 letter one though isaacs 
[01:24] JimBastard: im on it
[01:24] JimBastard: no guessing
[01:24] JimBastard: brb
[01:25] pavelz: thats nifty, symbols referring to each other... make a loop.
[01:26] ditesh|cassini has joined the channel
[01:29] pavelz: isaacs: would that not be a bad practice to define many packages in a module or package be spread across many modules. I would refer to a recent well publicized post by Linus
[01:29] pavelz: You want one thing in one place and be least ambiguous about it.
[01:29] isaacs: sure.
[01:30] isaacs: pavelz: but a) linus is talking about single-namespace compiled OS programs, b) module and package aren't the same thing as what you're sayign, i think.
[01:30] isaacs: pavelz: package is a folder with a package.json file in it.  module is a javascript file
[01:30] mscdex: and an addon is a c++ file
[01:30] mscdex: :P
[01:30] isaacs: it's possible for package to contain 1 or more modules
[01:31] isaacs: mscdex: right, but it's still ultimately one require(thing)
[01:31] mscdex: i don't even know what the topic of conversation is hehe
[01:31] isaacs: mscdex: whereas a package is a folder with a package.json file, which may include build/install instructions, requirements, etc.
[01:31] pavelz: thought package as a set of code wrapped in a namespace and module is a file defining it. As per what you have said - I am wrong
[01:31] mscdex: yeah
[01:32] isaacs: npm isn't concerned with the "modules are too big" problem.  it's concerned with the "there are too many different ways to install crap, and dependencies are a bitch" problem
[01:32] pavelz: right, thanks foir clarification.
[01:32] isaacs: np
[01:32] _announcer: Twitter: "TDD # Express framework for # nodejs is now available from BOTH kiwi and npm. Npm `install Express&#39; or` kiwi `install Express." [pt] -- TJ Holowaychuk. http://twitter.com/tjholowaychuk/status/16270324418
[01:32] sveimac has joined the channel
[01:33] mscdex: can/does npm automatically link a latest version of a module?
[01:33] Yuffster has joined the channel
[01:33] mscdex: if you don't specify a version when installing?
[01:33] saikat has joined the channel
[01:33] isaacs: mscdex: it tries to get the "stable" version by default if no version is specified.
[01:33] isaacs: mscdex: you can change this behavior to get the latest version instead by doing: npm config set tag latest
[01:33] mscdex: that reminds me.... *checks the npm issue*
[01:33] isaacs: mscdex: or npm --tag latest install foo
[01:34] isaacs: mscdex: or npm install foo@latest
[01:35] _announcer: Twitter: "Has anyone been able to get node.js to build on a Jailbroken iPad?" -- Rob Righter. http://twitter.com/robrighter/status/16270496076
[01:35] mscdex: any progress on having a master/head version?
[01:36] isaacs: mscdex: not at the moment.
[01:36] mscdex: ok
[01:38] isaacs: mscdex: the "straightforward" way to do this would be: 1. {"head":"http://github.com/user/project/tarball/master"} and then 2. make @head a special tag that fetches that tarball, and then cleans out the cache afterwards, so that the same version can be installed later, and then 3. give it a special version flag (like link packages get) so that it's clear it's not official (since the package.json will probably have the previous version,
[01:38] isaacs: mscdex: the problem is that that's special-casing a whole bunch of stuff, and that sucks
[01:39] isaacs: mscdex: plus, it's not that hard to accomplish the same use-case by just cloning the repo and then doing "npm link ."
[01:39] isaacs: in fact, that's easier, because then you can just do a git pull to update the code in-place.
[01:40] mscdex: what if you don't have git installed?
[01:40] isaacs: mscdex: also, you can already do npm install http://url-to-tarball
[01:40] isaacs: mscdex: then you're not a developer, and you shouldn't be using development packages.
[01:40] mscdex: heh...
[01:40] mscdex: i didn't use git until i got into node
[01:40] technoweenie has joined the channel
[01:40] mscdex: but i've been developing for a long time :P
[01:41] isaacs: mscdex: and because you're a developer, you said "oh, this needs git?  guess i'll go install that, then..."
[01:42] isaacs: mscdex: so, if someone submits a patch, and it's really clean, and well thought-out, and doesn't require all kinds of deep architectural changes (or if the deep architectural changes it requires are for the better), and it's documented, i'll accept it
[01:42] mscdex: no, because i had done testing for ry and i needed a place to host source where other people could access it and post issues and such
[01:42] mscdex: heh
[01:42] isaacs: i'm not against it in principle.
[01:43] mscdex: i think git is better than other version control systems, but it's still over my head when it comes to some things
[01:43] isaacs: git isn't really a version control system.  it's an editor that you use to write the ongoing story of your code.
[01:43] mscdex: probably because i'm not required to use it (often enough)
[01:43] isaacs: and you can edit that story
[01:44] mscdex: revision control system then? :P
[01:44] isaacs: it lets you shoot yourself in the foot.  but i mean, that's like saying that a text editor lets you use backspace.
[01:54] creationix has joined the channel
[01:58] malkomalko has joined the channel
[01:58] everton has joined the channel
[01:58] CIA-76: node: 03Ryan Dahl 07master * r6bed15e 10/ (9 files in 3 dirs): 
[01:58] CIA-76: node: Refactor: Utf8Decoder -> StringDecoder
[01:58] CIA-76: node: Instead of just decoding Utf8, this will proxy requests to buffer.toString()
[01:58] CIA-76: node: for other encodings. This makes for a simpler interface. - http://bit.ly/9dtEC6
[01:58] CIA-76: node: 03Ryan Dahl 07master * red5f4f3 10/ lib/crypto.js : RootCaCerts shouldn't be global - http://bit.ly/cs4wA1
[01:59] ryah: isaacs: where was that patch?
[01:59] ryah: isaacs: the querystring one?
[01:59] ryah: i didn't have a chance to look at it last night
[01:59] isaacs: ryah: http://gist.github.com/438699
[02:00] isaacs: ryah: line 170 is where it asplodes
[02:00] ryah: isaacs: can you give me a format-patch ?
[02:01] ryah: nevermind..
[02:03] isaacs: ryah: http://gist.github.com/440027
[02:03] isaacs: ryah: or check my querystring-fix branch
[02:03] isaacs: this is the weird bad bit: + // go boom here:
[02:03] isaacs: + delete out;
[02:04] Tim_Smart has joined the channel
[02:04] ryah: isaacs: you have to free strdup() strings
[02:04] ryah: not delete
[02:04] isaacs: ryah: you should find whoever wrote that code, and kick his ass, then
[02:04] isaacs: ;P
[02:05] isaacs: gtk
[02:05] ryah: isaacs: can you check that it fixes your problem.
[02:05] isaacs: compiling...
[02:05] ryah: changing it to free(out)
[02:06] isaacs: hm, same crash
[02:06] isaacs: node(9834) malloc: *** error for object 0x100501370: incorrect checksum for freed object - object was probably modified after being freed.
[02:06] isaacs: *** set a breakpoint in malloc_error_break to debug
[02:06] isaacs: Abort trap
[02:06] ryah: i'm not getting the crash
[02:06] isaacs: that's when i run: node test/simple/test-querystring.js
[02:07] ryah: yeah, it works for me
[02:07] isaacs: that's odd.
[02:07] ryah: you on a mac?
[02:07] isaacs: yep
[02:08] ryah: you can probably take out out[out_index] = '\0';
[02:08] isaacs: if i change the line above it to: String::New(strdup(out), out_index-1); then it works
[02:09] isaacs: ok, this is odd.
[02:09] isaacs: ryah: http://gist.github.com/440042
[02:10] isaacs: but duplicating the string again is probably not ideal, i'm assuming, since that means double the memory
[02:11] ryah: yeah...
[02:11] isaacs: yeah, it's the out[out_index] = '\0'; that breaks it
[02:11] isaacs: take that out, and it works fine
[02:11] ryah: also - 
[02:12] ryah: case HEX0
[02:12] ryah: those should all be n = 
[02:12] isaacs: oh, yeah, huh
[02:12] isaacs: weird that that was working...
[02:14] isaacs: wow, i guess ALL the tests were doing %[0-9]
[02:14] isaacs: i mean, i wasn't really trying to test decodeURIComponent when i wrote it, though, s othat makes sense, i guess
[02:14] ryah: yeah
[02:14] ryah: would be good to add a test with two hexnums
[02:15] sechrist has joined the channel
[02:15] ryah: oh wait, no there are tests with that?
[02:15] ryah:   ["foo%3Dbaz=bar", "foo%3Dbaz=bar", {"foo=baz" : "bar"}],
[02:18] isaacs: no, those all hae a decimal after the %
[02:18] isaacs: i just added a test
[02:18] isaacs:   ["foo=%EF%BF%BD", "foo=%EF%BF%BD", {"foo" : "\ufffd" }]
[02:19] _announcer: Twitter: "The WSH process it took about 3m30s and let I Node.js. Ww w WSH was Kusosu 0m43s" [ja] -- 天沢(弱). http://twitter.com/amasawa/status/16273382656
[02:19] isaacs: oh, this is odd, though
[02:19] isaacs: seems like \uffd is what you get from almost any invalid sequence
[02:21] isaacs: anyway, whatevs.  it's working now, that's cool.
[02:21] isaacs: i'll send a patch to you and the list.
[02:21] ryah: just update the gist
[02:21] ryah: i want to check it out again
[02:23] isaacs: oh, ok
[02:23] isaacs: ryah: you know, it's easier to just view it at http://github.com/isaacs/node/commits/querystring-fix
[02:24] isaacs: i did a few forced pushes
[02:24] ryah: ok
[02:28] _announcer: Twitter: "Ena Node.js dude but I was in the mood! http://bit.ly/bP9lwr" [ja] -- ishikawan. http://twitter.com/scraperonce/status/16273979931
[02:28] ryah: isaacs: cool looks good
[02:28] isaacs: grat
[02:28] ryah: thanks for finishing it
[02:28] isaacs: you still want the email, or wanna just merge the branch?
[02:28] isaacs: np
[02:30] ryah: nah, i got it
[02:31] CIA-76: node: 03isaacs 07master * r4ce100f 10/ (3 files in 3 dirs): 
[02:31] CIA-76: node: A replacement for decodeURIComponent that doesn't throw.
[02:31] CIA-76: node: And add a few more tests. - http://bit.ly/borjoi
[02:32] jashkenas has joined the channel
[02:35] _announcer: Twitter: "@ Edvakf Node.js mention fun and I was not aware of. Many thanks." [ja] -- 天沢(弱). http://twitter.com/amasawa/status/16274449900
[02:38] jashkenas: ryah: does the UTF8Decoder chatter in the backlog mean that the writing UTF characters via fs.writeFile bug is fixed now?
[02:38] ryah: jashkenas: yes, but unrelated
[02:38] _announcer: Twitter: "@ Amasawa Win Node.js I think I can even compile. Cygwin?" [ja] -- edvakf. http://twitter.com/edvakf/status/16274621766
[02:38] jashkenas: thanks much.
[02:38] ryah: felixge fixed it
[02:39] jashkenas: v0.1.99 soonish? you're running out of room before 2.0...  ;)
[02:39] Tim_Smart has joined the channel
[02:39] ryah: :)
[02:39] ryah: yeah we'll probably hit 0.1.100 unfortunately
[02:40] jxson has joined the channel
[02:40] ryah: or i could just bumb the fucking version :/
[02:40] ryah: bump
[02:41] justinlilly has joined the channel
[02:42] Tim_Smart: nothing wrong with 0.1.100 >.>
[02:47] isaacs: ryah: you know, traditionally the API doesn't freeze until 1.0.0
[02:47] isaacs: ryah: also, those numbers go up all the way
[02:47] isaacs: ryah: though, 9999 is usually treated as the upper max
[02:47] isaacs: 0.1.9998 is ok, though
[02:48] Tim_Smart: 2 years later... "We should really really freeze the api sometime soon"
[02:53] isaacs: ryah: i still would like to see module.js cleaned up before 0.2.0, though
[02:54] nodegnuwb has joined the channel
[02:54] isaacs: whether that's the reduction/refactor that i wrote and everyone picked at a while back, or something else, it's kind of a mess atm
[02:54] nodegnuwb: is anyone aware of an xmpp/jabber node.js client?
[02:54] _announcer: Twitter: "Socket.IO and Node.js: Trial use of &quot;mechanical world: I have long wanted to try to play around with the library ... http://bit.ly/9o9Us4" [ru] -- ru_webdev. http://twitter.com/ru_webdev/status/16275727642
[02:54] _announcer: Twitter: "[Progg.ru] Socket.IO and Node.js: Trial use of &quot;mechanical world: I have long wanted to try to play with ... http://bit.ly/9o9Us4" [ru] -- monitorium. http://twitter.com/monitorium/status/16275728492
[02:55] kersny: nodegnuwb: there are two I believe
[02:55] nodegnuwb: kersny: any idea where i can find them?
[02:56] kersny: nodegnuwb: http://github.com/astro/node-xmpp and http://github.com/mwild1/xmppjs
[02:56] isaacs: nodegnuwb: http://wiki.github.com/ry/node/modules is a good place to find the answers to this and similar questions
[02:56] nodegnuwb: isaacs, kersny: nice, thanks guys
[02:56] SamuraiJack has joined the channel
[02:56] jashkenas has left the channel
[02:56] CIA-76: node: 03Peter Dekkers 07master * re48f0d1 10/ (lib/fs.js src/node_constants.cc): Fixed incorrect mask for determining fs.Stats types - http://bit.ly/cX2Sbj
[03:04] CIA-76: node: 03Ryan Dahl 07master * rc2e2479 10/ src/node_http_parser.cc : Fix Linux build - http://bit.ly/9GhQTo
[03:05] JimBastard has joined the channel
[03:05] JimBastard: fuck where did TJ go
[03:05] nodegnuwb: o_0
[03:06] JimBastard: hail noob
[03:07] keyvan has joined the channel
[03:07] _announcer: Twitter: "# Nodejs Connect 0.0.2 released http://bit.ly/9Ddjcy $ `asl` install connect to get started" [pl] -- TJ Holowaychuk. http://twitter.com/tjholowaychuk/status/16276601091
[03:10] JimBastard: document.location.href = 'data:application/pdf;base64,' + Base64.encode(buffer); how can i haz .pdf file extension? it works but file name ends in .part 
[03:17] stepheneb has joined the channel
[03:21] mtodd has joined the channel
[03:22] kersny has left the channel
[03:26] gerad has joined the channel
[03:26] ryan_gahl has joined the channel
[03:28] charlesjolley- has joined the channel
[03:28] sechrist: oh hay
[03:28] sechrist: i
[03:28] sechrist: installing express via npm
[03:30] steadicat has joined the channel
[03:31] JimBastard has joined the channel
[03:31] JimBastard: http://github.com/Marak/kohai
[03:31] JimBastard: lol
[03:31] JimBastard: fuck it
[03:31] JimBastard: i had the urge to open source something i couldnt resist
[03:32] JimBastard: pdf.js coming soon
[03:32] stephenjudkins has joined the channel
[03:32] isaacs: sechrist: how's it working?
[03:32] sechrist: it's a disease
[03:32] isaacs: JimBastard: so, i got a question for you...
[03:32] sechrist: I haven't tried it -- i'm looking at the fd changes to node
[03:32] JimBastard: ill finish it soon
[03:32] sechrist: "http://groups.google.com/group/nodejs/t/2f15c77dd5df98d2"
[03:32] sechrist: erm
[03:32] isaacs: JimBastard: I get "Bastard".  But why'd you make your handle "Jim"?
[03:32] sechrist: the "Wrap FD in closure before emitting" is that to fix my woes with binding ips?
[03:32] JimBastard: Q: Where did the name Jim Bastard come from? A: Jim Bastard was first nationally recognized by his proper name in a New York Magazine article. You can find it here: http://nymag.com/news/features/27341/index5.html
[03:33] JimBastard: http://jimbastard.com/
[03:33] sechrist: pgriess1: you there?
[03:33] JimBastard: supdog
[03:33] isaacs: JimBastard: ohhh, snap!
[03:33] JimBastard: im going to add delete and unwatch and unfollow features to kohai over the next few weeks
[03:33] JimBastard: i need to get a handle on my github account
[03:34] JimBastard: and im doing it by brute force
[03:34] JimBastard: right now you can grab repos, run some tests, reorder them, and push
[03:34] sechrist: so I want to use express-redis-sessions
[03:34] sechrist: but there's some hacky workaround with triggers
[03:34] sechrist: that breaks the plugin
[03:34] sechrist: >:(
[03:35] Gruni has joined the channel
[03:36] sechrist: atmos, you here? http://gist.github.com/e595676192e4f21ed4aa that's breaking your redis plugin and I'm not exactly sure how to get around it
[03:44] sechrist: isaacs: so with express being in npm now
[03:44] sechrist: do I have to move all of my plugins to express/plugins?
[03:45] sechrist: or can I do a kiwi.seed like thing?
[03:45] isaacs: i don't know what a kiwi.seed thing is
[03:45] sechrist: it combines require paths I think
[03:45] jbrantly has joined the channel
[03:45] sechrist: so like require('express/plugins/oauth') would be searching the kiwi seeds for express, and express-oauth(if it's seeded)
[03:45] isaacs: tjholowaychuk isn't in at the moment.  it'd be good to have him here to ask that.
[03:46] isaacs: i see
[03:46] sechrist: ah
[03:46] sechrist: it abstracts the require process
[03:46] isaacs: so, yeah, to get require("express/plugins/oauth"), yes, you'll have to link your stuff into there.
[03:46] sechrist: lol
[03:46] isaacs: npm doesn't touch the require process
[03:46] isaacs: it just puts stuff where node will find it
[03:46] sechrist: can I arbitrarily add paths to what require uses?
[03:47] isaacs: sure.  just add to the NODE_PATH variable.
[03:47] sechrist: nah not environment -- in the script
[03:47] sechrist: blah whatever i'll stop whining and just link it
[03:47] jbrantly: sechrist: require.paths
[03:47] sechrist: ^
[03:47] WALoeIII has joined the channel
[03:48] isaacs: yeah, you can update require.paths in your program
[03:48] sechrist: so when express plugins get added as individual npm packages
[03:49] sechrist: it makes it a simple require('express/plugins/blahblah')
[03:49] sechrist: since the individual packages kind of "extend" the original express path in kiwi
[03:49] sechrist: if that makes any sense
[03:49] isaacs: sechrist: yeah, i think you should post this as an npm issue
[03:49] ajpiano has joined the channel
[03:49] isaacs: that's a use case that npm doesn't help you with atm, but i can see how it's a pain to do every time, if you have a lot of plugins that you want to work this way
[03:49] sechrist: that would mean npm would need a lib
[03:50] isaacs: well, it means that we'd have to come up with some way to express that in the package.json file, and then npm would have to create and manage those links.
[03:50] isaacs: which is all totally doable, but hasn't been done
[03:50] stephenjudkins has joined the channel
[03:50] isaacs: sechrist: the opposite is actually possible atm, and very easy
[03:50] isaacs: sechrist: like, if you wanted to link express someplace under express-oauth, you could do that
[03:51] isaacs: but the idea is that packages themselves should be somewhat opaque.
[03:51] sechrist: yeah
[03:51] isaacs: so the idea of having a plugin or extension that injects itslef into another package, that's not been explored.
[03:52] isaacs: it could also be done by letting npm have a way to permanently modify the NODE_PATH, but that's kind of a weird way to go, and fruaght with peril
[03:52] sechrist: well the way kiwi does it doesn't intermingle the packages -- it just provides a method for hacking up the require path
[03:52] isaacs: right
[03:52] _announcer: Twitter: "Unbelievable hacknight with @creationix on #node.js #thisstuffwillblowyourmind (also checkout sencha.com - the future?)" -- Chris Christensen. http://twitter.com/minenet/status/16279517275
[03:52] isaacs: tusk works that way, too
[03:53] isaacs: but it means that your package manager has to be involved at run-time.  and i am 100% passionately against that, and npm will never do this if i have any say in teh matter.
[03:53] bradleymeck has joined the channel
[03:53] isaacs: it's a nice looking path covered in rainbows and donuts, but it leads to a very very bad place.
[03:53] sechrist: well yeah
[03:53] sechrist: I have to remove kiwi from code i've already written
[03:53] isaacs: a place with slow code and require 'gemspec';
[03:53] sechrist: that's terrible
[03:53] isaacs: yeah
[03:53] isaacs: exactly
[03:54] isaacs: i want it to be easy for everyone to stop using npm someday :)
[03:54] bradleymeck: the package file helps that i would think
[03:54] sechrist: you don't want to monopolize the node package management community?
[03:54] sechrist: how uncapitalistic
[03:55] sechrist: :P
[03:55] isaacs: sechrist: i'm capitalistic, just with the long-game in mind.
[03:55] sechrist: I imagine once apps get standardized in node -- like a node-wordpress distribution -- they'll provide their own libs
[03:55] isaacs: i want to monopolize it, but i want to appear to have done so with ample competition
[03:56] sechrist: in fact i'm working towards that model now
[03:56] sechrist: making sure proper versions of libraries stay with working versions of my app
[03:56] isaacs: yeah, that's a good way to go.  appliance-style
[03:56] _announcer: Twitter: "@nicklovescode any chance we can hook that thing into node.js?" -- Scott Fitchet. http://twitter.com/figital/status/16279748394
[03:56] sechrist: node.js hooks you! you don't hook node.js!
[03:59] sechrist: isaacs: "var hreq = require('express/express/http');"
[03:59] sechrist: that's kind of silly
[03:59] sechrist: express/express/express/express
[03:59] isaacs: sechrist: yeah, express should set lib/express as its lib folder
[03:59] wilmoore has joined the channel
[03:59] bradleymeck: and connect needs to set it's main
[04:00] sechrist: what is connect? I haven't looked into it
[04:00] bradleymeck: middleware
[04:00] isaacs: sechrist: it's the new thing creationix and visionmedia are up to
[04:00] sechrist: is it a "framework"
[04:00] isaacs: sorta
[04:00] stepheneb has joined the channel
[04:00] isaacs: closer to jsgi than express, though
[04:00] isaacs: not a big ol mvc
[04:00] sechrist: i don't like mvc anyway
[04:01] sechrist: code just works -- screw your flow charts
[04:01] isaacs: sechrist: express is an mvc, tho....
[04:01] sechrist: I know that
[04:01] sechrist: it just makes crap easier
[04:01] bradleymeck: i find mvc terrible when debugging personally
[04:01] sechrist: like get('/blah/blah/hihihihihihihihi',function(){this.respond(404,"have a nice day");})
[04:01] isaacs: hahaha.... oh no...
[04:02] isaacs: the latest querystring update is gonna break express...
[04:02] sechrist: fffff
[04:02] isaacs: i should send tj a pull req, that sucks
[04:02] chrischris has joined the channel
[04:02] bradleymeck: i want to get state machine template working... rawr... T_T
[04:02] sechrist: express is becoming pretty popular
[04:02] isaacs: TypeError: Object #<an Object> has no method 'parseQuery'
[04:02] sechrist: it seems to have inadvertently became the "framework of choice"
[04:02] isaacs: well, it's the choice of those who want a bigger framework with more baked into it
[04:03] bradleymeck: is npm running test scripts on its registry?
[04:03] hassox has joined the channel
[04:03] sechrist: node-cake
[04:03] isaacs: bradleymeck: no, but you can do npm test whatever
[04:03] sechrist: cakenode
[04:03] isaacs: bradleymeck: if it has a "test" script, then npm will run it
[04:04] bradleymeck: knew that, just was wondering about registry
[04:04] isaacs: so, once the registry is npm rather than couchdb, yeah, that'll be possible.
[04:04] isaacs: in fact, that's one of the key things i'd like to enable.
[04:05] isaacs: whenever you do a remote install, before activating, have it run its tests, and if the test fails, it uninstalls.
[04:05] isaacs: you could do some really snazzy CI type things with that
[04:05] isaacs: maybe even have a post-commit hook that installs and tests your app
[04:06] bradleymeck: my once concern w/ using mustache for formatting is it cant do slices from what i see
[04:06] bradleymeck: *randomly changes subject*
[04:08] isaacs: hehe
[04:08] isaacs: "slices"?
[04:09] bradleymeck: like array indices for authors / versions etc
[04:09] sechrist: if Object.merge an express invention?
[04:10] isaacs: sechrist: i believe so, yes
[04:10] sechrist: seems to be kind of like a mixin
[04:10] isaacs: like the now long-forgotten process.mixin
[04:10] bradleymeck: its in a rather large amount of libs, a shallow copy generally
[04:11] isaacs: bradleymeck: you might want to ping janl about the mustache thing
[04:11] bradleymeck: onto the other object*
[04:11] isaacs: bradleymeck: i'm still not sure exactly what you're referring to, though
[04:11] isaacs: bradleymeck: could you explain the use case a bit more?
[04:11] isaacs: ohh... you want to show the first 2 authors?  that kind of thing?
[04:12] isaacs: but not the rest?
[04:12] bradleymeck: yea, mainly for versions etc, to have ...s
[04:12] isaacs: i see
[04:12] isaacs: what if you just... like... didn't have that feature?  is that terrible?
[04:13] bradleymeck: not terrible, but concern none the less
[04:13] isaacs: i see
[04:13] isaacs: well, you could do something that's inspired by mustache but isn't mustache...
[04:13] bradleymeck: was thinking just doing mustache w/ that and hope it gets a pull
[04:13] isaacs: nah, that's dumb...
[04:14] isaacs: i mean, my idea is dumb, not yours
[04:14] isaacs: yours is right
[04:14] bradleymeck: the more i can steal the better haha
[04:14] isaacs: totally
[04:15] isaacs: plus, "it uses mustache" is way easier to document than "it uses this funky format i invented and it goes a little something like this..."
[04:15] isaacs: like, unless it's way simpler to invent something new, or clearly much more correc,t i'd say use something existing.
[04:15] bradleymeck: well, i am making a template engine slowly XD, but yea, havent made a clean syntax yet
[04:15] stepheneb has joined the channel
[04:16] isaacs: bradleymeck: you know, a lot of mustache is in how you structure the data, too
[04:16] bradleymeck: yep
[04:17] isaacs: bradleymeck: so, in building the data model, you could have something like {name:"foo", versions:[ ... ], versionData:{...} }
[04:17] isaacs: where "versions" is just a list of version numbers
[04:17] isaacs: and then some templates could use versions, and just show a list, and others could use the data, and show every bit of it
[04:17] bradleymeck: i did note that versions dont really have info besides the url now on the registry?
[04:18] isaacs: some templates could do what ls does now, treating each package+version as a separate uniqu line, and others could just list out the top-level stuff.
[04:18] mape: isaacs: Hey, http://gist.github.com/440155 any reason it worked the second time?
[04:18] isaacs: bradleymeck: on the individual package pages, they do, but not on the main index
[04:18] bradleymeck: ah
[04:19] isaacs: mape: because it didn't do anything the second time.
[04:19] isaacs: mape: the issue is that you don't have ronn installed, and connect builds the docs at activation, rather than building them ahead of time and just moving them into place on activation.
[04:20] isaacs: mape: sudo gem install ronn
[04:20] isaacs: ok, noders.  it's time to go veg out in front of tv.  have fun
[04:20] bradleymeck: watch something good
[04:20] mape: isaacs: Ah yeah, keep getting ERROR: Failed to build gem native extension so never got around it it
[04:21] mape: later
[04:21] Validatorian has joined the channel
[04:21] isaacs has left the channel
[04:28] siculars has joined the channel
[04:28] ditesh|cassini has joined the channel
[04:30] zaach has joined the channel
[04:34] Clooth has joined the channel
[04:36] atmos: sechrist: around ?
[04:36] ph^ has joined the channel
[04:36] sechrist: yeah
[04:36] atmos: that plugin is about 2 or 3 express versions old
[04:36] atmos: there might be some changes necessary to make it work
[04:36] atmos: what version ofexpress are you on ?
[04:36] sechrist: looks like it would be quick fixes -- but I don't know what the trigger crap is
[04:36] sechrist: latest -- npm
[04:37] sechrist: .13 last I saw the error -- but no real code changed to .14
[04:37] isaacs[not_here] has joined the channel
[04:37] atmos: i think the last thing i used it in was .11
[04:37] sechrist: it looks to be due to a workaround with some kind of event trigger with plugins
[04:38] sechrist: the error was that your code didn't have trigger implemented -- but I don't know much beyond that
[04:38] atmos: does that make it actually work ?
[04:38] atmos: i have an app i can upgrade/test with
[04:38] sechrist: oh no I never got it to work
[04:38] atmos: gotcha
[04:38] sechrist: I don't know exactly what the trigger thing does
[04:38] stephenjudkins: what's everyone's favorite simple framework?
[04:38] sechrist: I'm just now digging into express
[04:39] sechrist: the lack of documentation is crazy
[04:39] atmos: sechrist: lemme see if i can upgrade my app
[04:39] atmos: oh yeah, it's a lot of fun
[04:39] atmos: :)
[04:39] sechrist: also lol I had never used a express plugin before yours
[04:39] sechrist: took me about 5 minutes to figure out I had to use() it
[04:39] sechrist: put that in the markdown hehehe
[04:40] atmos: yeah i always screw up what needs to be exported
[04:40] sechrist: stephenjudkins: there really isn't -- a lot of people are favoring express
[04:40] sechrist: but it has it's own problems
[04:40] atmos: i ended up going back to sinatra for when i want sinatra though
[04:40] atmos: sechrist: have you used connect ?
[04:40] sechrist: nope
[04:41] stephenjudkins: sechrist: what doesn't have its own problems?  i'll give it a shot
[04:42] bradleymeck: i enjoy connect as making junk for it and porting
[04:43] stevendavie has joined the channel
[04:44] sechrist: well I think people are using express
[04:44] sechrist: I haven't looked into conenct
[04:46] falconair: according t othe docs, stream.remoteAddress is only available for server-side connections, why is unavailable for client connections?
[04:47] bradleymeck: well connect being middleware should be theoretically able to support other frameworks as it isnt really one
[04:47] bradleymeck: falconair, i would presume due to dns?
[04:47] _announcer: Twitter: "proof! (node-ogl, osx-glfw branch) node-ogl works on osx now! http://bit.ly/cv2TAa #nodejs" -- Elijah Insua. http://twitter.com/tmpvar/status/16282560407
[04:48] teemow has joined the channel
[04:48] falconair: brakleymeck: on the server side it returns the ip address, not the host name...doesn't that mean the dns doesn't come into it?
[04:49] bradleymeck: well dns isnt performed when you accept a socket connection
[04:51] bradleymeck: when you accept its accepting an ip to ip connection, not looking up an ip to a hostname (would be odd to need 2 dns lookups)
[04:52] falconair: as i understand it, for tcp connections, the IP is included in the packet, so no lookup required...then why isn't this information available through node.js api for client connections?
[04:54] bradleymeck: not sure, make an issue for it / put it on the newsgroup?
[04:54] falconair: good idea, thx
[04:56] mattly has joined the channel
[04:58] cloudhead: any idea how I could solve this: http://github.com/cloudhead/http-console/issues#issue/9 ?
[04:59] wilmoore_ has joined the channel
[05:00] sechrist: atmos: did you run into the same problem I had?
[05:01] atmos: nope, haven't tried yet
[05:01] sechrist: ah ok
[05:01] zomgbie has joined the channel
[05:02] sechrist: if it gets working i'm going to port the schema over to php with predis
[05:02] sechrist: so I can use both node and php and keep the same session
[05:02] sechrist: that's super cool
[05:02] atmos: gotcha
[05:02] sechrist: async html building is just not my cup of tea yet
[05:03] sechrist: but node is fantastic for ajax services and stuff so ^_^
[05:05] atmos: i'll pull down some old repos and see if i can get it going
[05:07] sechrist: also packaging it up for npm wouldn't be a bad idea since express just got in -- it would be the first express plugin in npm
[05:08] nsm has joined the channel
[05:08] sechrist: oh perhaps not -- custom-errors got put in
[05:09] keyvan has joined the channel
[05:15] amerine has joined the channel
[05:15] bradleymeck: wait so, keeping the same login session between php and node? interesting
[05:15] sechrist: well that's my goal
[05:15] sechrist: with redis as a stateful independent store
[05:15] sechrist: should work fine
[05:15] atmos: sechrist: something like       var sid = event.request.cookie('sid') blows up ?
[05:16] sechrist: as would memcached or whatever
[05:16] bradleymeck: as long as you can sync up the cookies shouldnt be too bad
[05:16] sechrist: atmos: I never actually touched that -- I did a use(RedisSession) with get('/blah') and run
[05:17] sechrist: as simple as possible
[05:17] sechrist: if you're not having errors it may have been me or express-auth not using redis sessions properly
[05:17] Twelve-60 has joined the channel
[05:17] sechrist: I was assuming redissessions was a 1:1 replacement for the original session plugin
[05:17] sechrist: hotswap and go
[05:19] hassox has joined the channel
[05:21] atmos: sechrist: http://github.com/atmos/heroku-express/tree/express-redis-session
[05:22] atmos: it doesn't work but if you run rake setup and checkout the redis session source it'll run
[05:23] sechrist: oh interesting.. use(Session, { dataStore: redisStore
[05:23] sechrist: :( now I feel silly
[05:23] atmos: yeah my docs sucked
[05:23] atmos: i had to look at an app i use it in
[05:23] sechrist: oh that's sad when the own author has to hehe
[05:23] sechrist: oh okay so the code works on express current?
[05:23] sechrist: awesome
[05:24] atmos: not yet
[05:24] atmos: but it shouldn't be that difficult
[05:37] mikeal has joined the channel
[05:38] jetienne_ has joined the channel
[05:40] jetienne_ has joined the channel
[05:40] markwubben has joined the channel
[05:45] atmos: sechrist: still there ?
[05:46] sechrist: ya
[05:46] atmos: did you pull that code down ?
[05:47] zomgbie has joined the channel
[05:47] sechrist: nope -- working on something else
[05:47] sechrist: ooh so it does work
[05:48] sechrist: I thought you were working on it still
[05:48] atmos: do you know how to use git branches ?
[05:48] sechrist: checkout blah
[05:49] sechrist: but not really
[05:49] atmos: checkout -b express-redis-session origin/express-redis-session
[05:49] atmos: cat the README.md file
[05:49] atmos: there's like 2-3 commands you need
[05:49] atmos: just keep hitting localhost:8000/next to increase the session counter
[05:50] sechrist: Rake requires i install ruby
[05:50] sechrist: bleh
[05:50] atmos: you're not on a mac ?
[05:51] sechrist: I am on a mac -- my node stuff is not
[05:51] sechrist: my mac isn't a server
[05:51] sechrist: it's a workstation
[05:51] atmos: that shit is already on your machine
[05:51] sechrist: not where i'm running it lol
[05:51] atmos: gotcha
[05:51] atmos: cat the Rakefile then
[05:51] atmos: it's basically a checkout and cleanup
[05:51] sechrist: got it anyway
[05:51] atmos: if you don't mind a ton of libs that you don't need at runtime
[05:52] sechrist: I checked out heroku expressed
[05:52] sechrist: changed branches
[05:52] sechrist: rake'd setup
[05:52] sechrist: now I have to do more git clones?
[05:52] joshbuddy has joined the channel
[05:52] sechrist: what the
[05:52] atmos: yeah
[05:52] atmos: dude i just wrote it to show you it worked
[05:53] sechrist: hehe
[05:53] sechrist: i'm not complaining -- i'm admiring the complexity of checking out a project from a git repo
[05:54] utgo has joined the channel
[05:54] hassox has joined the channel
[05:55] teemow has joined the channel
[05:56] charlesjolley- has joined the channel
[05:57] zaach has left the channel
[05:57] sechrist: atmos: seems to be working
[05:57] sechrist: Sup, you're from awesome
[05:57] falconair: is there a way of making sys.log(...) print timestamps with milliseconds (or finer)?
[05:58] sechrist: is there a sub-ms solution yet? I remember discussion about it
[05:58] sechrist: not sure if it reached commit to node
[05:58] _announcer: Twitter: "A HTTP Proxy Server in 20 Lines of node.js Code - good coders code, great reuse:  http://bit.ly/cbosRy" -- zweinullweb. http://twitter.com/zweinullweb/status/16285909000
[05:58] _announcer: Twitter: "via Del.icio.us : A HTTP Proxy Server in 20 Lines of node.js Code - good coders code, great reuse:  http://bit.ly/9SOkJW #social #networking" -- Karen Kinnaman. http://twitter.com/KarenKinnaman/status/16285913176
[05:58] falconair: super fast servers such as node.js need finer grained time stamps :)
[05:59] atmos: falconair: did you see quirkey's logger on github ?
[05:59] falconair: nope, checking it now
[05:59] atmos: http://github.com/quirkey/node-logger
[05:59] mikeal: that proxy is going to be 10 lines after pump lands
[05:59] sechrist: hahaha
[05:59] sechrist: it's just schlepping
[06:00] mikeal: and it's only like 10 times faster than any proxy you could ever write in Python
[06:00] sechrist: only 10?
[06:00] mikeal: and i know, cause i spent 2 years on one
[06:00] chilts: atmos: know if you can change the log format on that node-logger?
[06:00] mikeal: well, 10 times faster than anything you could dot hat wasn't twisted or raw epoll
[06:00] chilts: ACTION likes timestamps like yyyy-mm-dd hh:mm:ss.ttt
[06:00] chilts: etc
[06:00] _announcer: Twitter: "Node.js, despite all the strangeness, amazing! Proprogal under it all weekend. Polfreymvorka ready # nodejs" [ru] -- Alexey Gromov. http://twitter.com/phpinfo/status/16286025360
[06:00] chilts: ah cool, logger.format :)
[06:01] mikeal: ok
[06:01] mikeal: the twitter bot needs to go
[06:01] chilts: sorry atmos, I should have read further :)
[06:01] atmos: agreed
[06:01] mikeal: there is just too much node buzz
[06:01] atmos: chilts: a good README goes a long way
[06:01] chilts: :D
[06:01] sechrist: hmm -- i'm assuming express has something for doing access logs?
[06:01] atmos: sechrist: yeah just look in the plugins folder
[06:01] atmos: it's in vendor/express/somethin
[06:01] sechrist: k cool
[06:03] gerad: sechrist: use(Logger)
[06:03] falconair: node-logger looks cool, thx
[06:04] gerad: http://github.com/gerad/nodejs-knockout/blob/master/server.js#L12
[06:05] sechrist: wow I've been using the wrong kind of layout for my app it looks like
[06:05] sechrist: I haven't seen this server.js / public layout yet
[06:05] sechrist: mine's been a bit of a clusterfsck
[06:07] gerad: haha, express has all sorts of odd conventions
[06:07] mikeal: oh man
[06:07] mikeal: so
[06:07] gerad: like partials need to be in views/partials
[06:07] mikeal: for pump to be awesome
[06:07] zomgbie has joined the channel
[06:08] gerad: the server.js thing was just to get it to play nice with heroku
[06:08] gerad: and still let us use coffeescript for all the bits
[06:08] mikeal: we need a "close" event on HttpServerResponse after the data is actually written to the socket
[06:08] mikeal: and it's way harder than I thought it would be
[06:08] sechrist: can somebody give me a short/sweet description of why you want to use coffeescript? javascript is already pretty simple syntax
[06:09] gerad: it's simple, but not terse
[06:09] mikeal: people love their syntax, it's kinda silly
[06:09] gerad: esp with callbacks, you get function all over the place
[06:09] gerad: but what did it for me was existential operators
[06:09] gerad: a?.b?.c
[06:10] mikeal: yeah, typeing function is such a burden I'd rather deal with a compile step and an indirection between my exceptions and my code lines
[06:10] mikeal: that makes no sense at all, but whatever, people love to obsess about syntax
[06:11] mikeal: just wait until we get a flood of Python people in a year or so
[06:11] mikeal: then there will all kinds of hype around pyscript again
[06:11] saikat has joined the channel
[06:11] gerad: authorize member for member in members
[06:11] gerad: and having a consistent class syntax
[06:11] mikeal: except in extreme cases, I don't care about syntax
[06:12] mikeal: if it's not Java or Perl, i don't really care
[06:12] jetienne_: mikeal: you tried perl ?
[06:12] gerad: lisp?
[06:12] mikeal: lisp is fine
[06:12] jetienne_: or lisp :)
[06:12] jetienne_: come on
[06:12] mikeal: i can totally deal with lisp
[06:12] mikeal: you have to be really good about indentation
[06:12] mikeal: but it's dealable
[06:12] sechrist: what is a partial? also what the heck -- this haml stuff looks ridiculous
[06:12] gerad: for me, it comes down to readability
[06:13] mikeal: sechrist: just use mustache
[06:13] jetienne_: and readability to maintainability
[06:13] sechrist: I come from php-land without using frameworks
[06:13] sechrist: I feel so outdated
[06:13] mikeal: javascript is plenty readable and maintainable
[06:13] jetienne_: sechrist: a partial is a template for only a part of the page
[06:13] sechrist: include('inc/header.php'); :(
[06:13] mikeal: pretty much anything that isn't perl is readable and mainatable after a few days of getting used to it
[06:13] jetienne_: yep it is possible to write good js
[06:14] jetienne_: just sick on "the good parts"
[06:14] mikeal: this conversation is silly
[06:14] mikeal: seriously
[06:14] atmos: sechrist: mustache is worth learning
[06:14] mikeal: syntax is the least of your problems
[06:14] gerad: I've written a lot of javascript, and felt the same way about coffeescript initially
[06:14] atmos: my js/php friends could follow the code
[06:14] mikeal: if you think the biggest issue with your code is syntax then I guarantee you have some really bad code
[06:14] gerad: but after trying it out on lazeroids
[06:14] jetienne_: mikeal: man you started this discussion :)
[06:14] sechrist: does mustache let me have normal html with inline javascript? or what
[06:14] gerad: I definitely can't go back
[06:14] sechrist: that's how my php was
[06:14] atmos: sechrist: yeah
[06:14] sechrist: ^_^
[06:14] sechrist: awesome
[06:15] mikeal: sechrist: yes
[06:15] sechrist: but inline javascript doesn't really work when everything is fucking async
[06:15] sechrist: nested callbacks ftl
[06:15] mikeal: mustache doesn't care what you do outside of the replacement characters
[06:15] mikeal: oh no, you want inline js processing or you just want to write some js for the client?
[06:16] jetienne_: mustashe has inline execution ?
[06:16] sechrist: I'm not sure what I want -- I haven't broken away from my php-ness yet
[06:16] mikeal: no, it doesn't
[06:16] sechrist: I've been proxying certain urls to node for ajax services
[06:16] sechrist: but my apps are still php
[06:16] jetienne_: oh ok
[06:16] sechrist: don't hit me :(
[06:16] mikeal: mustache is one of the most minimal template systems ever
[06:16] gerad: sechrist: a lot of the web is written in php
[06:16] mikeal: it doesn't allow you do in-line logic
[06:17] mikeal: which if you subscribe to that way of templating it's great, but some people want to do crazy ninja stuff in their templates
[06:17] jetienne_: mikeal: it has some conditionnal compilation and arhyt;etic from memory
[06:17] gerad: it's possible to do PHP well, but it certainly doesn't force you too
[06:17] mikeal: and that's cool, whatever, but it wont' work in mustache
[06:17] mikeal: yeah, you have an "if" style thing and an iterator
[06:17] sechrist: ah -- my biggest hurdle with dumping my app into node is database query waiting
[06:17] mikeal: and that's basically it
[06:17] sechrist: i've has this discussion with issacs already
[06:18] sechrist: currying a lot of queries -- waiting for them all to complete
[06:18] sechrist: then rendering the page
[06:18] mikeal: jetienne_: i don't think it has arithmentic
[06:18] mikeal: at least I've never used it or seen it before
[06:18] jetienne_: mikeal: let me look
[06:18] mikeal: sechrist: with Mu you wouldn't do it that way
[06:18] sechrist: oh?
[06:18] nsm has joined the channel
[06:18] mikeal: you would create your template object and tell Mu where to render the template to
[06:18] mikeal: then as each query returns
[06:19] mikeal: you would set those variables in the template
[06:19] sechrist: from what I think you just described it's the same problem
[06:19] mikeal: and Mu will send it to the response as soon as it has enough at the top to render
[06:19] sechrist: you have to feed mu the list of variables in full?
[06:19] sechrist: right?
[06:19] mikeal: no
[06:20] mikeal: you can do one at a time if you like
[06:20] sechrist: oh woah
[06:20] jetienne_: mikeal: true. the arhytmetic is pushed in the language calling moustache
[06:20] mikeal: that's how it's advertised
[06:20] mikeal: i haven't used it yet
[06:20] sechrist: so it does all kinds of crazy context switching
[06:20] mikeal: jetienne_: yeah, almost all logic is pushed up the stack, which I actually like
[06:20] jetienne_: mikeal: it keeps it simple
[06:21] mikeal: yeah, and although I don't care about this much anymore, it also makes it language independent 
[06:21] jsilver has joined the channel
[06:21] sechrist: is there a proper thrift implementation for node yet?
[06:21] jsilver: hi 
[06:21] jsilver: ACTION waves
[06:21] sechrist: jsilver i dislike you
[06:22] jsilver: sechrist: heh
[06:23] jsilver: that was rude...
[06:23] sechrist: wow --- mapping variables to functions in mu is neat
[06:23] sechrist: but i've yet to see a query demonstrated with this
[06:23] sechrist: if you get your query response in a callback
[06:23] sechrist: bleh whatever
[06:23] sechrist: i'm all confused
[06:24] mikeal: don't worry
[06:24] mikeal: you'll get it :)
[06:24] nsm has joined the channel
[06:24] sechrist: polling a list of variables before rending a page would work I guess
[06:24] jsilver: hey Michael Chase Sechrist
[06:25] jsilver: is this you http://userserve-ak.last.fm/serve/126/47709669.png
[06:25] sechrist: yarly
[06:25] jsilver: jw
[06:25] jsilver: r u n00b
[06:25] sechrist: no, colloquy just decided to leave my account name in here
[06:25] sechrist: oh well
[06:26] jsilver: can you get girlfriend
[06:26] jsilver: jw
[06:26] sechrist: i have one but ok
[06:26] jsilver: do you tell her I know NodeJS
[06:26] mikeal: colloquey is just a big ball of crash
[06:26] jsilver: is she really impressed about how much you know about concurrency
[06:26] mikeal: is jsilver a bot
[06:26] jakehow has joined the channel
[06:26] jsilver: no
[06:26] sechrist: mikeal: that's not much better besides limecrap
[06:26] zomgbie has joined the channel
[06:26] mikeal: i use the latest Adium beta
[06:26] mikeal: it has IRC support
[06:26] mikeal: one less app i have to run
[06:27] sechrist: I would feel redundant if I ran adium -- because I run meebo for all of my im
[06:27] sechrist: persistent sessions / push notifications to iphone when idle / logs anywhere
[06:27] sechrist: awesome stuff
[06:28] mikeal: oh i know
[06:28] sechrist: I actually wrote a libmeebo for purple
[06:28] jsilver: ... why did you say that you dont like me
[06:28] sechrist: does the longpolling 
[06:28] mikeal: i'm friends with a bunch of those guys, they are one of the biggest couchdb users in the world
[06:28] sechrist: not finished though -- I have an event loop working though and logging in
[06:28] sechrist: oh cool
[06:28] sechrist: glib is pretty lulz
[06:28] felixge has joined the channel
[06:28] felixge has joined the channel
[06:28] jsilver: you troll sechrist
[06:28] mikeal: actually, the biggest known deployed couchapp is from meebo
[06:29] sechrist: oh wow
[06:29] mikeal: and they maintain couchdb-lounge
[06:29] sechrist: do any of the live services meebo use sit directly on a couch port?
[06:29] jsilver has left the channel
[06:29] sechrist: yay
[06:29] sechrist: he left
[06:29] mikeal: that one that you stick on your website to add chat
[06:29] mikeal: i think that's a couchapp
[06:29] sechrist: meebo bar
[06:30] mikeal: sechrist: what was with you and that guy
[06:30] sechrist: oh
[06:30] sechrist: he was in here yesterday
[06:30] sechrist: being dumb
[06:30] sechrist: praising ruby every other sentence
[06:30] gerad: is there a better web interface for meebo
[06:31] mikeal: gerad: I'm gonna paste that sentence to tilgovi
[06:31] gerad: i like the iphone app, but the deskop metaphor in the browser is...
[06:31] sechrist: when I finally get around to doing it -- i intend to write a userscript to put all of the chats in one tabbed box
[06:31] sechrist: I use a SSB for meebo currently
[06:31] sechrist: because my libpurple plugin is unfinished
[06:31] gerad: SSB?
[06:31] sechrist: site specific browser
[06:31] sechrist: fluid.app
[06:32] sechrist: it adds growling and stuff
[06:32] gerad: yeah, I guess that helps, let me know if you ever write a new interface for it
[06:32] mikeal: that's getting integrated in to Firefox soon
[06:32] mikeal: "app tabs"
[06:32] sechrist: my purple plugin's core is literally done -- it's just mapping the events to purple calls
[06:33] sechrist: handling the long polling ajax and parsing the json is done
[06:33] mikeal: did anyone write FUSE bindings for node yet?
[06:33] sechrist: that would be cool
[06:33] sechrist: maybe somebody would fix the s3 plugin
[06:34] sechrist: transmit 4 does a swell job other than a few hiccups
[06:35] TomY has joined the channel
[06:36] sechrist: so people are actually running node locally on the mac where they develop the app? 
[06:36] sechrist: i've always used a remote vps or something for development
[06:36] sechrist: :\
[06:37] mikeal: haha, seriously?
[06:37] mikeal: i can't do development like that
[06:37] gerad: yeah, sounds slow
[06:37] mikeal: it all works fine on Mac
[06:37] sechrist: coda + terminals
[06:37] mikeal: iTerm + TextMate
[06:37] sechrist: without a local server running
[06:38] sechrist: idk -- just seems complex to move everything over from one platform to another
[06:38] mikeal: i would be lost without "save on application change"
[06:38] sechrist: for debugging purposes
[06:38] mikeal: the code is identical
[06:38] sechrist: yes but it may not run the same
[06:38] gerad: meh, staging server
[06:38] mikeal: yeah, i check in stuff that isn't finished
[06:39] sechrist: I need to actually try to learn git
[06:39] sechrist: then developing locally would appeal to me probably
[06:39] mikeal: git won
[06:39] mikeal: you should learn it
[06:40] mikeal: and rebase is the greatest thing ever invented
[06:40] gerad: git add —patch in my opinion
[06:41] gerad: rebase can be dangerous
[06:41] jetienne_: i dont even know what is it :)
[06:41] jetienne_: add commit log clone, this is all i use :)
[06:42] gerad: push / pull too, I hope!
[06:42] jetienne_: that too
[06:42] gerad: but if you're not branching (a lot) then you aren't really using git effectively
[06:42] mikeal: the only patches i merge are from ryah :)
[06:42] mikeal: everyone else pushes to remote branches
[06:42] mikeal: and i just merge them
[06:43] mikeal: branches are so cheap and awesome
[06:43] mikeal: sometimes i just create one, even if i'm not gonna use it
[06:43] mikeal: just because
[06:43] mikeal: :)
[06:43] gerad: just to see it's name in git branch -a ?
[06:43] mikeal: but seriously, git branches are awesome
[06:43] sechrist: mikeal: 'git won'
[06:44] mikeal: they did
[06:44] sechrist: subversion is still used in a shitload of places
[06:44] mikeal: it surely is
[06:44] mikeal: but it lost
[06:44] sechrist: the SCM war?
[06:44] mikeal: so did hg
[06:44] mikeal: well, github won actually
[06:44] sechrist: mercurial was lul
[06:45] mikeal: mozilla still uses it, and it's super annoying
[06:45] sechrist: yeah github is neat
[06:45] sechrist: but I still don't have an account
[06:45] sechrist: ^_^
[06:45] mikeal: when i get links to code that aren't in git, i seriously get angry
[06:45] mikeal: people who link me to launchpad are in danger of getting punched
[06:45] sechrist: bitbucket
[06:45] sechrist: ftw
[06:46] mikeal: thanks for that link, if i start cloning this repo with bazaar today I might be able to work on it by this weekend
[06:46] sechrist: mikeal: you don't like bz?
[06:46] mikeal: but first I'd have to find a fuckin link on this crap web interface
[06:46] mikeal: bitbucket would be great if it wasn't hg :)
[06:46] Judofyr has joined the channel
[06:46] mikeal: and if github didn't exist
[06:47] mikeal: but seeing as it does, i don't see the point in bitbucket
[06:47] sechrist: does github allow you to search in a project?
[06:47] sechrist: I haven't been able to see how
[06:47] sechrist: that would be awesommeee
[06:47] gerad: not sure about github
[06:47] gerad: but you can do git grep 'foo' folder/
[06:47] gerad: which is nice
[06:47] sechrist: of course and that's what I do
[06:47] mikeal: that sounds cool but I can't say i would really use it
[06:47] mikeal: how often do i need to search for something in a project i haven't checked out?
[06:48] sechrist: but a web interface is much nicer
[06:48] sechrist: with linenums and highlighting
[06:48] mikeal: not while i'm developing
[06:48] mikeal: using TextMate find is faster while i'm developing
[06:48] sechrist: you don't have a browser opened at all times?
[06:48] gerad: sechrist: makes sense, like when you want to share a link into some code
[06:48] mikeal: using a browser inteface would require a mousemove
[06:49] sechrist: oh you're one of those guys
[06:49] gerad: instead of having to nav through it
[06:49] mikeal: i can bring up text search and work it from the keyboard while i'm in textmate, that's much faster
[06:49] sechrist: mikeal: I bet you would prefer to code in vim + ctags if you could
[06:49] mikeal: i'm not a vim die hard
[06:49] mikeal: if i edit something in the terminal i use vi
[06:49] mikeal: but there are some cases where the mouse is nice in a text editor
[06:50] mikeal: it's just that I have using the mouse for application navigation
[06:50] sechrist: not through ssh -- but you can use a mouse in vim
[06:50] brianmario has joined the channel
[06:50] sechrist: with terminal.app hacks
[06:50] mikeal: it's not optimized for it 
[06:50] sechrist: but terminal.app sucks
[06:50] mikeal: i mean
[06:50] mikeal: you *can* write a novel with emacs
[06:50] mikeal: doesn't mean you should
[06:50] mikeal: hell, you can play MAME games from emacs
[06:50] mikeal: but you shouldn't
[06:51] sechrist: when I worked for a web hosting company
[06:51] sechrist: we had a ssh key wizard that handled all of the keys that we logged into every day
[06:51] sechrist: to work from
[06:51] mikeal: anyway
[06:51] sechrist: if you tried to open emacs on wizard
[06:51] mikeal: sleep time
[06:51] sechrist: it kicked you
[06:51] technoweenie has joined the channel
[06:51] mikeal: gnight
[06:52] sechrist: atmos: ty btw
[06:52] sechrist: it's all working in my app now
[06:53] charlesjolley-_ has joined the channel
[06:53] _announcer: Twitter: "A HTTP Proxy Server in 20 Lines of Code node.js - good coders code, great reuse - Delicious hotlist - Bookmark this http://bit.ly/akBHqX ..." [nl] -- Hojjat M,Rezaei. http://twitter.com/hojjatmr/status/16288281091
[06:54] atmos: sechrist: right on, i'm glad to know it still works
[06:54] sechrist: I guess it was just how I was using it
[06:57] sixthgear has joined the channel
[06:59] CIA-76: node: 03Aaron Heckmann 07master * r1d088fb 10/ (lib/fs.js test/simple/test-fs-write-file.js): fs.writeFile accepts Buffers - http://bit.ly/bjircO
[07:00] _announcer: Twitter: "Node.js FTW! - "A HTTP Proxy Server in 20 Lines of node.js Code" at: http://bit.ly/d4h24A #ssjs" -- Samuli Hakoniemi. http://twitter.com/zvona/status/16288568058
[07:02] jetienne_:  var proxy = http.createClient(80, request.headers['host']) <- hes got retweet but his code is bogus :)
[07:03] jetienne_: host == hostname : port
[07:04] cloudhead: sechrist: your first name isn't Drew is it?
[07:04] sechrist: nor ryan
[07:04] cloudhead: ok cool
[07:05] sechrist: http://twitter.com/drewsechrist
[07:05] sechrist: woah
[07:05] sechrist: a fellow sechrist developer
[07:05] cloudhead: yeh thought it might be you
[07:06] sechrist: there's not many of us
[07:07] charlesjolley- has joined the channel
[07:10] _announcer: Twitter: "Strong urge to hack on stuff I shouldn't be. Specifically a mini server to handle video recording in node.js." -- Luke™. http://twitter.com/LukeInTH/status/16288962171
[07:10] sechrist: sweet -- I have the same session between php and node
[07:14] stephenjudkins has joined the channel
[07:19] virtuo has joined the channel
[07:19] jetienne_: video recording from where ? what is the video source ?
[07:20] therp has joined the channel
[07:21] therp: hi folks, anyone using expressjs as their web framework? (or is there a separate channel?). I seem to be unable to find how to configure it run on another port instead of 3000.
[07:22] atmos: http://github.com/atmos/heroku-express/blob/master/lib/app.js#L18
[07:24] therp: atmos: thanks! I wonder where this is documented :/
[07:24] cloudhead: express really needs its own channel
[07:25] cloudhead: it's sort of tangent to node
[07:26] _announcer: Twitter: "a #proxyserver with 20 lines of Javascript? http://catonmat.net/http-proxy-in-nodejs" -- bert boerland. http://twitter.com/bertboerland/status/16289573419
[07:26] visnup has joined the channel
[07:26] _announcer: Twitter: "I see big oppertunities for #xss crossitescripting #proxy http://catonmat.net/http-proxy-in-nodejs #javascript :-)" -- bert boerland. http://twitter.com/bertboerland/status/16289601082
[07:27] technoweenie: the twitter crap needs its own channel
[07:27] cloudhead: at least some of it is node-related
[07:27] therp: cloudhead: I wasn't able to find one.. so sorry to disturb.
[07:28] cloudhead: therp: no worries, it's no ones fault
[07:28] technoweenie: at what point does a project graduate from its languages channel
[07:28] technoweenie: thats rhetorical, i dont really care
[07:28] cloudhead: except maybe tj, but I guess he doesnt have time to support it
[07:28] cloudhead: technoweenie: I think it never belongs there in the first place
[07:29] cloudhead: except core libraries
[07:29] technoweenie: thats silly, theres tons of support given for node projects in here
[07:29] technoweenie: and in every other language channel
[07:29] cloudhead: I don't really see that
[07:30] cloudhead: but again, some things are fundamental, like db libraries which everyone uses, or html parsing etc
[07:30] cloudhead: but express is a whole different thing
[07:30] technoweenie: shrug
[07:31] technoweenie: people talk about fab, geddy, and connect here
[07:31] sechrist has joined the channel
[07:31] cloudhead: yea, they talk about it
[07:31] cloudhead: that's different
[07:31] cloudhead: than it being a support channel
[07:31] cloudhead: for those libraries
[07:32] sechrist: hmm I dropped out -- how do I switch environments in express?
[07:32] cloudhead: v_v
[07:32] sechrist: :(
[07:32] sechrist: there's no #expressjs
[07:32] technoweenie: you're sol then
[07:32] sechrist: lol
[07:32] technoweenie: no really, gtfo
[07:32] cloudhead: lol
[07:32] technoweenie: *throws rocks*
[07:33] sechrist: yarly
[07:33] technoweenie: *cries*
[07:33] sechrist: people should watch what they release for node
[07:33] sechrist: if you release something you're responsible for maintaining it -- because people will use it
[07:33] technoweenie: no you're not
[07:33] sechrist: gtfo github if not
[07:33] sechrist: lol
[07:34] sechrist: are too
[07:34] cloudhead: someone who cares about express should start #expressjs
[07:34] technoweenie: if you cant experiment in oss, then where can you
[07:34] technoweenie: in your basement? who benefits
[07:34] sechrist: rawr
[07:34] cloudhead: well, depends
[07:34] cloudhead: if you market it
[07:34] cloudhead: with a fancy website and stuff
[07:34] cloudhead: it's not an experiment
[07:34] cloudhead: it's a call for trust
[07:34] cloudhead: and attention
[07:34] sechrist: there's a fancy website
[07:34] sechrist: with absolutely 0 doc
[07:35] cloudhead: I know
[07:35] technoweenie: well, then he got a job and they paid him to write connect :)
[07:35] sechrist: okay i've heard connect thrown around in here 10 times today
[07:35] technoweenie: its still oss, you cant expect anything out of it
[07:35] sechrist: I'll check it out
[07:35] sechrist: technoweenie: yes you can
[07:35] sechrist: if everybody stopped working on the linux kernel
[07:35] sechrist: the world would blow up
[07:36] cloudhead: sechrist: have you looked at geddy?
[07:36] sechrist: no
[07:36] technoweenie: i'm not saying it makes it a great project.  if theres another one w/ better docs and support, by all means use it
[07:37] sechrist: and there's nothing really tying me to express except for a few plugins
[07:37] cloudhead: http://geddyjs.org/
[07:37] sechrist: fancy website
[07:37] sechrist: with no documentation
[07:37] technoweenie: dont expect shit unless you pay for it
[07:37] cloudhead: mde is actively developing it
[07:38] sechrist: hm
[07:38] sechrist: actually I am kind of tied to express now
[07:38] cloudhead: the framework scene is pretty crappy, sadly
[07:38] sechrist: i'm using a lot of plugins I don't want to reimplement
[07:38] sechrist: like oauth
[07:39] cloudhead: hmm
[07:39] technoweenie: its still like the wild west
[07:39] cloudhead: yeh
[07:39] cloudhead: it is to be expected
[07:39] sechrist: yeah -- the way i've been using node so far as been just to complement a core service
[07:39] sechrist: full blown website serving in node sounds iffy
[07:39] technoweenie: node is a long ways from being able to power a full app imo
[07:40] cloudhead: we're going to get a couple sinatra clones (express), then rails, then the real stuff hopefully
[07:40] technoweenie: well its fully capable, i just dont feel like a developer would be very productive yet
[07:40] cloudhead: technoweenie: yea that's the thing
[07:40] sechrist: no i've spent more time getting crap to work I could have gotten to work in php in less than 5 minutes
[07:40] cloudhead: it's not productive yet
[07:40] cloudhead: but it's getting there
[07:40] sechrist: I spend more time tinkering
[07:40] sechrist: that's never good
[07:41] cloudhead: hehe
[07:41] sechrist: with deadlines and such
[07:41] technoweenie: yea, that sounds like a yak shave
[07:42] sechrist: yep it is
[07:42] hellp has joined the channel
[07:43] sechrist: however writing a high performance long polling system or something with websockets is just flat out easier in node
[07:43] sechrist: but you have to work to make it interface with everything else
[07:45] Sudar has joined the channel
[07:45] _announcer: Twitter: "is stunned by the awesomeness of #nodejs and its REPL lib!" -- muhqu. http://twitter.com/muhqu/status/16290338276
[07:47] technoweenie: stunned
[07:50] sechrist: don't node me bro
[07:51] technoweenie: gtfo!
[07:51] dabreaka has joined the channel
[07:52] technoweenie: that was a crazy video, i wonder how that dude feels about that phrase now
[07:52] technoweenie: almost as crazy as that naked dude at that concert that got tazed several times
[07:54] kuya: what is the best way to test if a file exists or not? fs.stat?
[07:54] cloudhead: kuya: path.exist
[07:55] kuya: aha! thats what i wanted! thanks cloudhead 
[07:55] cloudhead: 'exists' actually
[07:55] cloudhead: np
[07:56] micheil has joined the channel
[07:58] cloudhead: alright, bed time -- night night folks
[07:59] hdon has joined the channel
[08:19] muhqu has joined the channel
[08:21] felixge has joined the channel
[08:21] felixge has joined the channel
[08:23] kodisha has joined the channel
[08:30] visnup has joined the channel
[08:31] _announcer: Twitter: "@creationix @tjholowaychuk In your package.js for connect, could you change the node version to be: "&gt;= 0.1.98-0" so compiling on head works" -- Micheil Smith. http://twitter.com/miksago/status/16292042158
[08:31] _announcer: Twitter: "A HTTP #Proxy Server in 20 Lines of node.js Code http://j.mp/cATPCs #JS" -- Daniel Kurdoghlian. http://twitter.com/derblub/status/16292056905
[08:36] zomgbie has joined the channel
[08:38] oleg has joined the channel
[08:39] jjenzz has joined the channel
[08:43] stephenjudkins has joined the channel
[08:43] micheil: isaacs[not_here]: I ended up getting an error when updating npm.
[08:44] isaacs[not_here]: micheil: go into the code folder and run "make"
[08:44] isaacs[not_here]: or npm install --auto-activate always npm
[08:44] micheil: heh, okay
[08:44] isaacs[not_here]: if you get an error, email the ml
[08:44] isaacs[not_here]: npm-@googlegroups.com
[08:44] micheil: k
[08:45] micheil: dammit. my net connections doing weird crap.
[08:45] micheil: isaacs[not_here]: I'll send it across too, but here's the error: http://gist.github.com/440346
[08:46] isaacs[not_here]: micheil: oh, holy hell, you've got an old version
[08:46] isaacs[not_here]: micheil: update to the latest code, and THEN run make
[08:46] micheil: k
[08:46] isaacs[not_here]: make sure to update node, too, if you haven't already
[08:47] micheil: I always update node, other modules, much less regularly
[08:47] jjenzz has left the channel
[08:47] _announcer: Twitter: "Is there anything bad about a #nodejs, #expressjs and #mongodb combo? It seems too good to be true!!" -- Henrik Johansson. http://twitter.com/dahankzter/status/16292666708
[08:49] micheil: woot. got everything running good now.
[08:51] mAritz has joined the channel
[08:51] rnewson has joined the channel
[08:53] nsm has joined the channel
[08:58] xla has joined the channel
[09:01] teemow has joined the channel
[09:10] teemow has joined the channel
[09:15] kjeldahl has joined the channel
[09:15] mitkok has joined the channel
[09:15] jedschmidt has joined the channel
[09:17] jetienne_: in a http server, while im streaming the response, what can tell me if i got room to write, or if the other end closed the connection ?
[09:17] jetienne_: response.write(chunk, encoding) is very sync btw
[09:18] isaacs[not_here]: jetienne_: that's because it's a socket, not a file.  it returns true if everything got written out, or false if it had to buffer some of it.
[09:18] isaacs[not_here]: jetienne_: i think you can do response.addListener("close") or response.connection.addListener("close")
[09:19] isaacs[not_here]: something like that
[09:19] isaacs[not_here]: maybe request.connection.addListener("close"
[09:19] jetienne_: request.connection.addListener('end', function(){ this is what i got, but it isnt always specified
[09:19] jakehow has joined the channel
[09:19] jetienne_: notified
[09:19] isaacs[not_here]: right
[09:19] isaacs[not_here]: if there's an error or a dropped connection, it might not end, i've found
[09:19] isaacs[not_here]: i think there'sa bug there somewhere
[09:20] isaacs[not_here]: request.addListener("error" maybe
[09:20] jetienne_: error seems to work better thx
[09:21] oleg has joined the channel
[09:21] jetienne_: isaacs[not_here]: do you know where i can find an example of data streaming thru http response ?
[09:21] isaacs[not_here]: jetienne_: are you the server or the client?
[09:21] jetienne_: isaacs[not_here]: the server
[09:22] jetienne_: isaacs[not_here]: this is something like chargen
[09:22] isaacs[not_here]: then i dunno.  maybe check express or connect or websocket-server or something?
[09:22] jetienne_: ok
[09:24] micheil: woot! just figured out something awesome with connect middleware.
[09:25] micheil: websockets over connect, proof of concept: http://gist.github.com/440384
[09:27] slaskis has joined the channel
[09:32] caolanm has joined the channel
[09:33] jetienne_: setTimeout(callback, 0); <- what is the modern word for this tech ?
[09:33] ewdafa has joined the channel
[09:33] gerad: not sure
[09:33] gerad: I think prototype calls it defer
[09:34] jetienne_: ok
[09:34] gerad: http://documentcloud.github.com/underscore/#defer
[09:35] jetienne_: A “deferred” function will not run immediately; rather, it will run as soon as the interpreter’s call stack is empty.
[09:35] jetienne_: gerad: this is it
[09:36] jos3000 has joined the channel
[09:37] testnick has joined the channel
[09:38] testnick has joined the channel
[09:39] jos3000: Hello all - I've got a little problem with my code - I assume it must be a misunderstanding of the way JavaScript works. I'd be very grateful if anyone would be interested enough to take a look:
[09:39] jos3000: http://gist.github.com/440389
[09:39] jos3000: is the code
[09:39] testnick has joined the channel
[09:40] jos3000: http://gist.github.com/440392
[09:40] jos3000: is the output
[09:41] jos3000: I don't understand why the second output is undefined, when addEventListener is clearly set in the first output
[09:41] _announcer: Twitter: "Interested in #nodejs, here's a really interesting blog -   How To Node http://bit.ly/9EzyDT" -- Andy Davies. http://twitter.com/andydavies/status/16294710178
[09:41] gerad: window.__proto__.addEventListener
[09:41] gerad: likely it's in the prototype, not the object itself
[09:42] gerad: not sure if that's the reason, but it's my first guess
[09:43] testnick has joined the channel
[09:43] jos3000: Thanks gerad - I'll have a look at that
[09:44] visnup: gerad: whoa you're awake?
[09:45] visnup: and hanging out on irc?
[09:45] visnup: damn
[09:45] gerad: visnup: did you drink a boot?
[09:48] jos3000: is __proto__ the same and prototype? I don't recognise it from browser JavaScript
[09:48] jos3000: the same *as*
[09:48] gerad: it's v8 specific, you'd see it in web inspector in chrome
[09:48] gerad: prototype is on the class
[09:48] gerad: __proto__ is on the instance
[09:49] gerad: roughly speaking
[09:49] jos3000: cool - just found an article on it
[09:49] jetienne_: http://github.com/jeromeetienne/node-chargen my morning toy
[09:53] jos3000: Anyway - my function isn't anywhere to be found... very strange.
[09:53] gerad: it could also be up the prototype chain
[09:56] kjeldahl: I'm still not getting this npm stuff; "sudo npm install connect"... So where is my "connect" executable? Am I supposed to symlink the executable from .node_libraries into the path myself?
[09:56] jos3000: if it's in the prototype chain should it be there when I access window.addEventListener ?
[09:56] gerad: jos3000: yes, it should be there
[09:57] gerad: oh, sorry, just looked at your output again
[09:58] gerad: it's backwards from the way I saw it originally!
[09:58] gerad: :-)
[09:58] felixge has joined the channel
[09:58] ceej has joined the channel
[09:58] gerad: window.document.addEventListener
[09:58] gerad: perhaps? (it's late)
[09:59] jos3000: :-) That is defined too... 
[09:59] _announcer: Twitter: "Putting #nginx infront of several #nodejs (#expressjs really) makes the throughput increase significantly but not linearly it seems" -- Henrik Johansson. http://twitter.com/dahankzter/status/16295404689
[10:00] gerad: so then I don't understand your question...
[10:00] gerad: addEventListener is defined on window.document in the first output
[10:00] gerad: and not on window in the first output
[10:00] gerad: which is consistent with the second output
[10:01] jos3000: It is defined on window on the first output - line 44
[10:04] gerad: hehe, looks like it's defined on window.window on line 44
[10:04] jos3000: Yep - I just spotted it too! Thanks - silly mistake!
[10:05] gerad: yeah, that kind of stuff happens to me too often!:-)
[10:08] botanicus has joined the channel
[10:13] b_erb has joined the channel
[10:16] rnewson has joined the channel
[10:16] rnewson has joined the channel
[10:28] jashkenas has joined the channel
[10:32] jashkenas has joined the channel
[11:00] markwubben has joined the channel
[11:02] slaskis has joined the channel
[11:13] pandark_ has joined the channel
[11:17] _announcer: Twitter: "With nodejs wrote a automatic update autoproxy2pac the pac file to a local script, write your own http client pretty painful to deal with a lot of things" [zh-CN] -- thunderbean. http://twitter.com/thunderbean/status/16298692209
[11:17] jashkenas has left the channel
[11:28] hassox has joined the channel
[11:29] hassox has joined the channel
[11:32] _announcer: Twitter: "node.js would be a great low-level engine, if documentation was not in fact his source # helloworlddoesntwork" [bg] -- Lanzz. http://twitter.com/lannnzz/status/16299422951
[11:33] kodisha: lol, how am i seeing this tweet in russian? :D
[11:34] kodisha: ah, [bg]
[11:35] kodisha: so it auto translates  tweets? cool
[11:35] LowValueTarget has joined the channel
[11:44] chrischris has joined the channel
[11:45] kevm has joined the channel
[11:46] dabreaka has joined the channel
[11:47] jos3000 has left the channel
[11:47] jos3000 has joined the channel
[11:53] siculars has joined the channel
[11:55] ewdafa has joined the channel
[12:12] zomgbie has joined the channel
[12:34] hellp has joined the channel
[12:38] davidsklar has joined the channel
[12:38] bradleymeck has joined the channel
[12:38] rnewson has joined the channel
[12:49] ben_h has left the channel
[12:51] ditesh|cassini has joined the channel
[12:53] _announcer: Twitter: "Awesome: Mongoose - MongoDB ORM mapping in NodeJS - http://bit.ly/bCwDZV - Giving it a go now" -- dominiek. http://twitter.com/dominiek/status/16303824141
[12:54] JAAulde has joined the channel
[12:54] pgriess1 has left the channel
[12:55] pandark_ has joined the channel
[12:56] quirkey has joined the channel
[12:59] pandark_ has joined the channel
[13:02] kodisha has joined the channel
[13:02] riottaba has joined the channel
[13:05] sveimac has joined the channel
[13:09] pgriess has joined the channel
[13:16] riottaba_ has joined the channel
[13:20] jherdman has joined the channel
[13:22] riottaba has joined the channel
[13:23] slaskis: how should i make proper exceptions? anyone know of any examples i can look at?
[13:23] kriszyp has joined the channel
[13:24] micheil: throw new error()
[13:24] micheil: but throw'ing is generally a bad idea
[13:25] slaskis: micheil: right, but for instance in as3 i usually make custom errors which extend the main one, is there anything special if i want to throw custom errors?
[13:25] micheil: yeah, you can "extend" and throw your own exceptions, but like I said, it's generally not a good idea to be throwing, being that we're using async code
[13:26] micheil: the common pattern is callbacks, so the arguments are: function(err, data...){}
[13:27] slaskis: yeah, i like that pattern, and i use it in my lib, but sometimes throwing feels right so i just wanted to make sure i'm doing it right ;)
[13:27] micheil: generally there should be no reason to throw.
[13:29] _announcer: Twitter: "Well - forum ready, you are welcome:) http://forum.nodejs.ru # nodejs" [ru] -- Serge Shirokov. http://twitter.com/kurokikaze/status/16306054383
[13:29] slaskis: allright, i'll try to stay away from it
[13:31] _announcer: Twitter: "@ Kurokikaze Fanfares and cake! Only going to ask if there speaking community in # nodejs ... Hooray, thank you!" [ru] -- ramainen. http://twitter.com/ramainen/status/16306174031
[13:33] _announcer: Twitter: "Because the whole point of having a node is so you can have more than one, right? http://github.com/kriszyp/multi-node #nodejs" -- kriszyp. http://twitter.com/kriszyp/status/16306341967
[13:34] riottaba_ has joined the channel
[13:38] caolanm: why doesn't the callback for path.exists have an error as the first argument? that always seemed odd to me
[13:38] caolanm: and is omitting the error argument considered normal with boolean operations like that?
[13:38] micheil: create a patch.
[13:39] micheil: I'm not sure tbh.
[13:39] caolanm: it seemed odd enough that somone must have had a good reason ;)
[13:39] caolanm: *seems
[13:40] micheil: I guess it's really if the path does exist, then your going to have err=false, exists=true; and if it doesn't, it'll be err=true, exists=false
[13:40] micheil: which would probably get very confusing.
[13:41] caolanm: I think its more confusing to change the callback convention for one function ;)
[13:41] _announcer: Twitter: "Screenshot of my LBi presentation on visualising Twitter using NodeJS and Processing. http://twitpic.com/1x9kgp" -- ray brooks. http://twitter.com/rayui/status/16306833625
[13:41] micheil: well, simply put, I don't think it makes sense.
[13:41] caolanm: anyway, I've embraced it in my async library which allows you to do filter etc using functions like path.exists
[13:41] micheil: try sending a patch to the mailing list.
[13:41] dahankzter has joined the channel
[13:41] micheil: see what reply you get.
[13:41] riottaba has joined the channel
[13:42] caolanm: yeah, think I will do
[13:42] micheil: because path.exists is just a wrapper around fs.stat
[13:42] caolanm: and fs.stat can throw errors
[13:42] caolanm: madness I tell you!
[13:42] caolanm: :)
[13:43] caolanm: ACTION adds path.exists patch to todo list
[13:44] micheil: well, the way that path.exists works is that it actually checks if fs.stat's err==false
[13:44] micheil: it's about a 5 line function
[13:45] micheil: speaking of exists, I'm going to write a patch for a sync version, because people have requested it.
[13:45] lukev has joined the channel
[13:46] caolanm: yeah, thats been asked for quite a few times
[13:47] micheil: patch ready in about T-10mins
[13:47] jetienne has joined the channel
[13:48] voodootikigod has joined the channel
[13:48] skampler has joined the channel
[13:48] jetienne_ has joined the channel
[13:52] markwubben has joined the channel
[13:52] sudoer has joined the channel
[13:54] micheil: patch done.
[13:54] micheil: now then.. http.client & upgrade.
[13:55] mikelangelo has joined the channel
[13:55] _announcer: Twitter: "I, node.js of what is soon to be v0.2?" [ja] -- KOBA789. http://twitter.com/koba789/status/16307782842
[13:56] mikelangelo: has anyone connected an Adobe AIR app to Node.js?
[13:56] caolanm: anyone know what we're using for the _announcer? its great :)
[13:56] mikelangelo: AIR javascript preferrably
[13:57] PyroPeter has joined the channel
[14:00] sanderjd has joined the channel
[14:00] markwubben has joined the channel
[14:01] gf3 has joined the channel
[14:01] ryan_gahl has joined the channel
[14:01] JimBastard has joined the channel
[14:02] _announcer: Twitter: ""patch ready in about T-10mins" :D #nodejs #sweet" -- Henrik Johansson. http://twitter.com/dahankzter/status/16308315560
[14:07] _announcer: Twitter: "Tteta nude.js node.js a wrong many times I googled it" [ja] -- liquidfunc. http://twitter.com/liquidfunc/status/16308592128
[14:08] caolanm: ^ charity calendar idea? ;)
[14:11] Aikar: caolanm: either quick polling or tapping into the twitter streaming API mixed in with an IRC client will give you what _announcer is doing
[14:11] Aikar: stream api would be the most instant
[14:11] Aikar: writing an irc bot connection is really trivial too
[14:11] micheil: caolanm: it's using the streaming API and a memory mapped "database"
[14:12] micheil: of tweets
[14:12] micheil: so if people start retweeting stuff, in generally doesn't show up
[14:12] Aikar: oh heh why doesnt it just do stream api with an irc connection?
[14:12] zaach has joined the channel
[14:13] micheil: Aikar: um.. it is using the streaming API from twitter, and it does go to an irc connection, there's just a filter to remove retweets and stuff like that.
[14:13] Aikar: or whoever made it trying to follow twitters recommendation about not doing any processing on the streaming thread?
[14:13] Aikar: ah
[14:13] micheil: Aikar: tip, read what I said ;P
[14:13] Aikar: my coworker was trying to be all big about twitters recommendation but tried to tell him thats for people consuming ALOT of tweets. when monitoring a specific subject with low consumption its not an issue
[14:13] Aikar: i was typing that at same time you was :p
[14:14] micheil: heh heh
[14:14] micheil: yeah, tweets @ me about my node.js'ing often come up here first, then in tweetie
[14:15] Aikar: sorry if its asked alot - but im new to the nodejs scene and havent started coding anything yet since im active on another project (which i want to rewrite into nodejs but lies the next question), about how close is .2 along?
[14:15] micheil: about a month, iirc.
[14:16] Aikar: hmm
[14:16] micheil: but, really the node API is pretty much stable now.
[14:16] micheil: I'm rewriting an app atm in it.
[14:16] Aikar: i guess i can continue on for a month then do some convincing to let me rewrite lol
[14:16] Yuffster has joined the channel
[14:16] micheil: Aikar: if you're just starting the project, convince now.,
[14:17] micheil: or if there's a lot more to be added then convince now, because in 1 months time, it'll be very hard to just throw away all your work and start again on top of node
[14:17] Aikar: atm using PHP... and in order to achieve a faster model, it works with multiple processes with read/write pipes to each other to send 'messages' back and forth to give seperate processing threads with multiple event loops. so node could do it alot more effeciently
[14:17] Aikar: nah im a few months in
[14:17] Aikar: im writing a WebSocket game server, so mainly right now its getting the logic and design in
[14:17] micheil: yeah, definitely try and convince now; because node would pretty much do most of your work already for you.
[14:18] micheil: as for websockets, I'm an author of a websocket library
[14:18] Aikar: sure rewriting will take a bit of time, but at least the complicated parts of logic will be done
[14:18] jbrantly has joined the channel
[14:18] micheil: so, yeah, feel free to fire questions
[14:18] Aikar: have you got support for the new spec? >< cause i cant figure out how to properly do the handshake
[14:18] micheil: yup
[14:18] micheil: it was fairly easy to implement
[14:19] Aikar: can you link to some code?
[14:19] micheil: I'm doing a bit of work in a couple of the branches now to push out a probably v1.2.10
[14:19] micheil: sure.
[14:19] jbrantly: I know this is a little apples to oranges, but I'm pretty sure I've seen comparisons of node vs nginx for static file serving. Anyone got a link? :) (requests/sec, for instance)
[14:19] Aikar: http://codepad.org/OvDEmwDq  is what i currently have
[14:19] Aikar: (its php yeah but the logic is whats wrong)
[14:19] micheil: http://github.com/miksago/node-websocket-server/blob/master/lib/ws/connection.js#L281-319
[14:19] Aikar: the weird thing is, it works SOMETIMES
[14:20] technoweenie has joined the channel
[14:20] gawker2 has joined the channel
[14:20] micheil: Aikar: one thing to note is that you shouldn't be matching on strings, but doing other stuff
[14:20] kjeldahl has joined the channel
[14:21] micheil: Aikar: easiest way to get the two values are using regex to match numbers and regex to match spaces
[14:21] micheil: that's lines 294, 295, 297, 298
[14:21] Aikar: im getting the numbers ok. i think its the 8 bytes at the end thats causing issues
[14:22] micheil: yeah, you need them as a raw binary buffer
[14:22] micheil: that was one of the hardest bits about the spec
[14:22] Aikar: preg_match("/\r\n(........)$/", $req, $challenge)
[14:22] Aikar: is where i grab those 8 bytes
[14:22] micheil: preg match probably returns strings
[14:22] Aikar: and it seems to grab them ok
[14:22] micheil: you need it as raw binary, without any encoding
[14:22] Aikar:  $expected = "" . $ppart1 . "" . $ppart2 . "" .  $challenge[1];
[14:23] Aikar: challenge1 will be the result from the regex
[14:23] Aikar: then i do a var_dump and it shows 16 bytes
[14:23] micheil: man.. php is so ugly with variable names
[14:23] Aikar: lol
[14:23] Aikar: so it is grabbing 8 bytes
[14:23] micheil: try using:
[14:23] bpot has joined the channel
[14:24] micheil:  /\r\n\r\n(.{8})/
[14:24] Aikar: and yeah php is a lil weird when it comes to binary vs strings
[14:24] micheil: but regexp's probably will run something like utf8 decode on it
[14:24] Aikar: that should be equal to what i have now but yeah that is cleaner to read
[14:24] bradleymeck has joined the channel
[14:24] Aikar: i wonder if i do 8 seperate captures byte by byte, then pack(1) on each of those in sequence
[14:24] micheil: we actually had to patch node to enable the grabbing of that data as a <Buffer>
[14:25] micheil: nup
[14:25] wilmoore has joined the channel
[14:25] admc has joined the channel
[14:25] micheil: you'd probably need to just split on \r\n\r\n in php
[14:26] micheil: and then get [1] from that, and then convert it to binary some how
[14:26] micheil: Aikar: btw, there's a difference between 8 bytes and 8 bits
[14:27] micheil: best way to test is probably to fire data at your server using telnet.
[14:27] Aikar: i know that, but thats 8 bytes :P
[14:28] micheil: 16bytes != 8 bytes.
[14:28] Aikar: im also a C++ developer with a good bit of experience in reverse engineering and hooking into a game so i got a good bit of experience with low level data
[14:28] Aikar: the "challenge" is 8 bytes, + 4 bytes from key 1 + 4 bytes from key 2
[14:28] Aikar: well, key1 + key2 + challenge
[14:29] Aikar: you get 16 bytes, then take the md5 sum of that to get new 16 bytes
[14:29] _announcer: Twitter: "Best tool for protocol hacking? Telnet & Openssl s_client. #protocols #nodejs" -- Micheil Smith. http://twitter.com/miksago/status/16310156347
[14:29] micheil: ah
[14:29] micheil: yeah, I'm not sure if you want to do string concat on those
[14:30] Aikar: php doesnt really have many binary type tools, it seems to retain the binary data if its done with pack though
[14:30] Aikar: so i used the "" to make sure it doesnt try to ADD the numbers
[14:30] Aikar: the resulting string was 16 bytes so it looks right
[14:30] _announcer: Twitter: "@markwunsch Oh, awesome stuff! (Does that mean you'll start playing with node.js? :P)" -- Micheil Smith. http://twitter.com/miksago/status/16310250668
[14:33] micheil: Aikar: I'm not sure if there's a guarantee that key1 & key2 will actually be sizeof X
[14:33] micheil: I think they actually vary in length
[14:34] micheil: it's just "The value of the "Sec-WebSocket-Key1" field in the client's handshake."
[14:34] Aikar: no, the spec for 76 expcitly defines key1 and key2 to be set as big endian 32bit
[14:34] micheil: see http://www.whatwg.org/specs/web-apps/current-work/complete.html?slow-browser=1#network
[14:35] Aikar: so even 1 will be 0x00 0x00 0x00 0x01
[14:35] Aikar: even 1 still uses 4 bytes
[14:36] Aikar: you used pack in your code is what renders it as 4 bytes
[14:36] micheil: hmm.. fair enough
[14:36] nsm has joined the channel
[14:36] micheil: all I'm saying is that the data can vary.
[14:37] Aikar: yeah but your "digest input data" should always be 16 bytes (as the spec says), 4 from the #s/spaces of 1, 4 from #s/spaces of 2, + the exact 8 bytes at the end of the request "challenge"
[14:37] Aikar: then digest that data to get a new 16 bytes
[14:38] micheil: hmm.
[14:38] micheil: okay then
[14:38] stevendavie has joined the channel
[14:38] jmar777 has joined the channel
[14:39] micheil: do you think you could actually be adding in extra bytes there?
[14:39] micheil: actually, found the issue
[14:39] micheil: line 14.
[14:39] micheil: I came across this when writing the node server for websockets
[14:39] Aikar: fixed it i think....
[14:39] SubStack: http.Server.listen should return this so I can write this inline without intermediate state
[14:39] micheil: basically the client may also attach an extra byte
[14:39] Aikar: its something wit hthe regex
[14:40] micheil: so by strictly match the $ end of the $req, you're not ever matching
[14:40] Aikar: i did $challenge = substr($request, -8);
[14:40] micheil: yeah
[14:40] micheil: that's the better way to do it, I'd say.
[14:40] Aikar: to get the last 8 bytes
[14:40] _announcer: Twitter: "anyone know a strategy in node.js to get more then one twitter stream going at once; but then same credentials many streams could be bad" -- richard hooker. http://twitter.com/hookercookerman/status/16310956071
[14:40] Aikar: if the regex didnt match the "76 spec" wouldnt of been triggered in that code, but it always was
[14:40] micheil: you could also use: /\r\n\r\n(........)/
[14:40] Aikar: just the md5 wasnt matching up properly
[14:41] Aikar: like you said the regex funcs prolly do some decoding on it
[14:41] micheil: yup
[14:41] micheil: anyway, must get back to work..
[14:41] bradleymeck: mmm is there a way to test if a module is installed?
[14:41] Aikar: im still using the regex to verify the data is valid, but this is working
[14:41] Aikar:                     preg_match("/\r\n.{8}$/", $req)
[14:41] Aikar:             )
[14:41] Aikar:             {
[14:41] Aikar:                 $challenge = substr($req, -8);
[14:42] Aikar: bah sorry the 2 extra lines pasted like that
[14:42] Aikar: thought it was only 2
[14:42] micheil: heh
[14:42] micheil: there's no real need to check if it's "valid"
[14:42] Aikar: chromiums connecting every time now
[14:42] Aikar: im still supporting pre 76 spec
[14:42] micheil: you just need to check for an existence of anything after \r\n\r\n
[14:42] Aikar: so this is inside an if statement to see if person is connecting with 76
[14:42] Aikar: chrome 4 and 5 dont use the 7 spec
[14:43] micheil: and as for pre-76 support, you just check for sec1 and sec2
[14:43] Aikar: true
[14:43] micheil: you don't need to check for the data.
[14:43] micheil: which makes things a fair bit simplier
[14:44] _announcer: Twitter: "how I miss ruby syntax when I am node.js ing; its like nesting hell sometimes; "mongose" looks good for mongodb thou; uses promises thou;" -- richard hooker. http://twitter.com/hookercookerman/status/16311248107
[14:45] steadicat has joined the channel
[14:46] _announcer: Twitter: "@miksago I sure will! Love the attitude! #goodstuff #nodejs" -- Henrik Johansson. http://twitter.com/dahankzter/status/16311348306
[14:46] Aikar: heh, i love me some C style syntax ;)
[14:46] Aikar: being a PHP JS and C++ dev... yeah i cant stand other syntaxes ;(
[14:46] mitkok has joined the channel
[14:47] micheil: nawh, nesting can be hell.
[14:48] Aikar: it can be yea, but i see alot of people using closures/lampdas to hell nesting into each other, can simply define the function outside of the nest and reference it inside ;)
[14:48] Aikar: lol i said lamp...
[14:48] AndChat has joined the channel
[14:49] micheil: Aikar: that php seriously isn't good for yo' health :P
[14:49] micheil: what was it? "It's ugly, but it does get shit done"
[14:49] SubStack: I miss haskell sugar
[14:49] SubStack: do > fluent
[14:50] AndChat: Mmm sugar 
[14:50] SubStack: monads are a great way to do async i/o in a sequential way
[14:50] Aikar: micheil: php does have ALOT of inconsistencies, but it is a decent language. its just tainted by the fact that MOST php devs DO suck at coding and write horrible code
[14:50] Aikar: but there are a few of us out there that right good PHP code :P
[14:51] SubStack: Aikar: disagree
[14:51] Aikar: cept those are generally programming hobbyist like myself :3
[14:51] Aikar: you disagree that theres any good php devs lol?
[14:51] JimBastard has joined the channel
[14:51] SubStack: no, php is not a decent language
[14:52] Aikar: it suits its purposew
[14:52] SubStack: poor abstractions, polluted namespaces, inconsistent calling semantics
[14:52] creationix: Its about as decent as English 
[14:52] JimBastard: +2 SubStack 
[14:52] JimBastard: worst API ever
[14:52] JimBastard: thankfully i've never had to build a Personal Home Page, so I've never needed to use PHP. #bastardfacts
[14:53] jetienne: best docs ever tho :)
[14:53] JimBastard: the comments on the PHP docs are like epic
[14:54] JimBastard: blind leading the blind, worse then stackoverflow
[14:54] softdrink has joined the channel
[14:54] creationix: As one who did PHP for about 10 years, I can vouch for it
[14:54] creationix: It will drive you insane 
[14:54] creationix: :)
[14:55] micheil: creationix can tell you, he's seen the light..  THE LIGHT...
[14:55] JimBastard: yeah i did CF, way more sane, but you get way more gruff
[14:55] JimBastard: people assume all CF developers are retards
[14:55] jedschmidt has joined the channel
[14:55] creationix: But it does work for small stuff
[14:55] JimBastard: which we are in all fairness
[14:55] micheil: ACTION did javascript :F
[14:55] SubStack: templating engines shouldn't be capable of i/o
[14:55] JimBastard: i mean fuck, ive been doing JS for 10 years
[14:55] SubStack: as php demonstrates
[14:55] JimBastard: it just didnt count for the first 6
[14:56] ryan_gahl: CF!!!!! hahahahahahahahahahhahahah
[14:56] SubStack: ACTION started doing javascript 10 years ago when he was 12 :/
[14:56] sveimac has joined the channel
[14:56] creationix: JS as a language is almost as warty as PHP
[14:57] JimBastard: CF is a great example of how to build a good API
[14:57] micheil: SubStack: was that alert()ing to welcome a user to the site? :P
[14:57] JimBastard: the CF tags are pretty well thought out
[14:57] ryan_gahl: CF is a fucking joke
[14:57] SubStack: micheil: ?
[14:57] micheil: actually, no, 10 years.. that makes 2000, doesn't it. :P
[14:57] creationix: But we've just been taught tim ignore the bad parts
[14:57] JimBastard: ryan_gahl: ive made systems that handle hundreds of thousands of dollars of daily transactions using CF
[14:57] ryan_gahl: so that makes you good at using a fucking joke to build shit
[14:57] JimBastard: millions of dollars of montly revenue is not a joke
[14:57] JimBastard: lol
[14:57] jetienne: cf=?
[14:58] JimBastard: coldfusion
[14:58] Aikar: cf syntax is so horrible
[14:58] JimBastard: a tag based markup language for Java
[14:58] JimBastard: its a J2EE app
[14:58] JimBastard: also can be standalone
[14:58] SubStack: JS warts are pretty well confined to DOM manipulation thankfully
[14:58] creationix: A tool is a tool
[14:58] micheil: there's also wtf js
[14:58] SubStack: although arguments annoys me
[14:58] micheil: 3 > 2 > 1 FTW
[14:58] ryan_gahl: 42
[14:58] SubStack: be a list, stupid thing!
[14:59] creationix: False
[14:59] creationix: Micheil ^
[14:59] micheil: creationix: yah, you were in that talk at txjs
[14:59] micheil: creationix: nice phone btw.
[15:00] creationix: I'm trying to type on this beast 
[15:00] quirkey_ has joined the channel
[15:00] micheil: creationix: that was you in the front row, who he asked for the phone, yeah?
[15:00] JimBastard: quirkey time
[15:00] micheil: oooh.. it's a quirkey 
[15:00] JimBastard: !
[15:00] creationix: Yep 
[15:00] JimBastard: yaaaa
[15:00] SubStack: oh and I hate how it's so non-trivial to do a fold over an object's elements
[15:00] JimBastard: baaaaaaacon
[15:00] micheil: creationix: haha
[15:01] creationix: Tom and I had been hanging out all week in Sweden 
[15:01] micheil: ah, cool
[15:02] micheil: that's the one good thing I can see could be gained from working for a larger company.. the travel costs are generally paid for.
[15:02] kevwil has joined the channel
[15:02] phiggins has joined the channel
[15:03] micheil: oh, here we go, Mr Dojo. 
[15:03] micheil: phiggins: howdy'
[15:03] phiggins: hola
[15:04] micheil: how's you?
[15:04] lukev: hey folks, are there docs on how I'd go about writing a library / module for nodejs? 
[15:04] phiggins: on day 4 of quitting smoking. 
[15:04] lukev: For e.g. say I wanted to write a twitter client library
[15:04] lukev: phiggins: well done, best thing I  ever did
[15:04] micheil: phiggins: hopefully it's going well?
[15:05] micheil: lukev: just start writing.
[15:05] phiggins: much better than expected actually. I skipped putting a patch on today and haven't been craving anything really.
[15:05] micheil: lukev: there is a general structure though, have a look on the modules page to see it.
[15:05] lukev: micheil: hehe ok cool 
[15:05] micheil: lukev: generally your module code will be in  /lib/
[15:05] micheil: tests, /test/
[15:05] micheil: make sure you have a package.json
[15:06] micheil: and.. uh, bin / executables are generally in /bin/
[15:06] creationix: lukev: see the article on howtonode.org
[15:06] lukev: micheil: thanks!
[15:06] sanderjd has joined the channel
[15:06] lukev: micheil: where is the modules page? 
[15:06] micheil: and read that article on howtonode.org
[15:06] lukev: micheil: thanks!
[15:06] micheil: http://wiki.github.com/ry/node/modules
[15:07] lukev: super-thanks!
[15:07] creationix: I wish I had internet
[15:08] creationix: At least my nexus has edge 
[15:08] micheil: creationix: why the lack of nets?
[15:08] slaskis: anyone uses the spectacular test module?
[15:08] creationix: I'm at my old house in Texas cleaning up
[15:09] creationix: We shut off the internet when we moved
[15:09] micheil: creationix: ah, okay
[15:09] micheil: creationix: what about getting a roaming connection?
[15:10] creationix: Hardware costs
[15:11] micheil: ah, okay
[15:11] micheil: normally the roaming connections are only about 50-100$
[15:13] Aikar: wifi tethering with sprint htc evo is 30$
[15:13] dwww has joined the channel
[15:14] o_o has joined the channel
[15:14] stepheneb has joined the channel
[15:15] micheil: anyone want to add live search to the api docs? :S
[15:15] slaskis: micheil: cmd-f works great for me :P
[15:15] creationix: Most browsers have it
[15:15] micheil: slaskis: yeah, true.. but, eh.
[15:16] mw_ has joined the channel
[15:16] micheil: I'm meaning more like just search the API methods, not the descriptions
[15:16] kevwil_ has joined the channel
[15:16] ly- has joined the channel
[15:18] pgriess: micheil: so i've got a kinda-sorta-working ws client based on a fork of node-websocket-server
[15:18] pgriess: micheil: having problems getting the client to shut down. was hoping you could hlep
[15:18] micheil: oh, sweet
[15:18] pgriess: (code is here http://github.com/pgriess/node-websocket-server)
[15:18] micheil: but you probably don't need all the stuff from my server
[15:18] JimBastard: umm wtf is up with firebug
[15:18] pgriess: micheil: no, i don't need all that code (mainly I just need the parser). but i figured it would make sense to roll a client impl w/ the server
[15:19] micheil: pgriess: man.. I've gotta remember what the client spec is now.. spent so much time reading the server spec
[15:19] JimBastard: why is it breaking when my try catch fails?
[15:19] JimBastard: is that normal?
[15:19] JimBastard: try{ var model = views[state].model();} catch(err){ console.log('no model for this view');} 
[15:19] micheil: could you link me to the spec docs?
[15:19] JimBastard: that causes the page to stop and a break to happen
[15:19] JimBastard: is that a new firebug setting?
[15:19] micheil: JimBastard: no idea.
[15:19] pgriess: micheil: JS api: http://dev.w3.org/html5/websockets/
[15:19] slaskis: JimBastard: did you turn on break on everything?
[15:19] JimBastard: i updated, maybe its a default setting
[15:19] micheil: JimBastard: probably ask on the firebug mailing list
[15:19] JimBastard: checking
[15:19] pgriess: micheil: protocol: http://www.whatwg.org/specs/web-socket-protocol/
[15:19] lukev has joined the channel
[15:20] micheil: pgriess: this is only a 76+ client, yeah?
[15:20] pgriess: micheil: y
[15:20] Aikar: that doc is not as friendly as the other "working draft"
[15:20] slaskis: JimBastard: I've noticed it even catches/fails on caught exceptions when that thing is turned on (the pause button in the console tab)
[15:20] JimBastard: yeah slaskis , when i reset to default its fine
[15:20] pgriess: micheil: oh. heh. i missed that whole "closing the connection" section
[15:20] JimBastard: thanks
[15:20] pgriess: micheil: that might be relevant
[15:20] slaskis: JimBastard: np :)
[15:20] micheil: pgriess: ah, yeah
[15:20] JimBastard: was a little confusing, i tend to abuse try catch a lot
[15:20] micheil: \u0000\uffff
[15:21] Aikar: pgriess: http://www.whatwg.org/specs/web-apps/current-work/complete/network.html#client-side-requirements
[15:21] JimBastard: im pretty bad at JS
[15:21] micheil: Aikar: you'll kill people throwing that about!
[15:21] Aikar: that ones formatted better
[15:21] Aikar: lol ?
[15:21] micheil: Aikar: I was looking for the light weight copies anyway
[15:21] _announcer: Twitter: "Finally got to watch @ryah "Introduction to Node.JS" (http://bit.ly/cTAtll) last night.  Wow.  Impressive.  #I'mNotSmartEnough" -- Matt Childs. http://twitter.com/MattyinAK/status/16314015281
[15:21] micheil: Aikar: those are really heavy on cpu + ram.
[15:21] micheil: Aikar: so, a slight hyperbole in saying you'll kill people, but you get the point
[15:22] pgriess: micheil: i was confused why closing the stream on my end wasn't terminating the TCP stream, but maybe this explains it. is your impl waiting for the closing handshake before dropping the TCP connection?
[15:22] micheil: generally
[15:22] pgriess: micheil: a tcpdump reveals that the server is not sending its own FIN
[15:22] Aikar: the one you linked yeah did kill my browser
[15:22] Aikar: but the one i linked doesnt
[15:22] micheil: oh?
[15:23] Aikar: when you linked me earlier my browser crashed/hung lol
[15:23] Aikar: but this doc i linked hasnt ever hung me
[15:23] micheil: Aikar: it was the #whatwg guys that linked me to the ?slow-browser=true variant
[15:23] Aikar: you had some slow-browser=1 in your url
[15:23] micheil: blame them :P
[15:23] Aikar: odly that one hung me and the non url doesnt lol
[15:24] slaskis: i'm using spectacular for testing, and have an assertNotRaise(function(){ async(function(err,data){ if( err ) throw err; sys.puts( data )}) }) thing in an it() method. But for some reason it fails on the throw err; without actually throwing the exception or spectacular should have caught it? instead i just get undefined:43 (where 43 is the line number)
[15:25] pgriess: micheil: oh, nm. sigh. was inadvertantly using 1.1; 1.2 seems to have fixed this problem.
[15:25] micheil: 1.1 vs 1.2?
[15:26] micheil: as in v1.2.00 vs v1.1.00?
[15:26] pgriess: yeah
[15:26] micheil: k, that was when I introduce the new linked list connections manager
[15:26] pgriess: cool
[15:26] micheil: seriously, you seen that code?
[15:26] zomgbie has joined the channel
[15:26] micheil: it's so epically simple really.
[15:26] pgriess: micheil: no, is that in manager.js?
[15:26] micheil: yeah
[15:27] pgriess: micheil: yeah, i saw that. what exactly is it trying to do?
[15:27] micheil: pgriess: could you actually do a subtree split on the client code?
[15:27] micheil: pgriess: it uses a linked list to better handle clients
[15:28] micheil: pgriess: so, rather then explicitly "delete client;" it's just unref'ing and letting v8 GC it
[15:28] pgriess: micheil: what do you mean by a subtree split? do you want the client code in a ws/client/ dir or something?
[15:28] micheil: pgriess: different repo preferrably
[15:28] micheil: I tried once before combining server+client, it got messy when devs wanted different things.
[15:28] micheil: especially when you know more about client vs server or server vs client.
[15:29] pgriess: micheil: ok so yeah, that's the next question. do you care about this client at all? if not, i'll just dump it in its own repo. i just thought it made sense to share code, since draft76 handshaking and framing, etc is all common
[15:29] pgriess: micheil: i'm fine moving the client to its own repo. but we should come up w/ a way to share impl details
[15:29] micheil: pgriess: well, really, like I said, I'll work on both the client and server, but I'd like to see them stay separate.
[15:29] tmpvar has joined the channel
[15:29] tmpvar: yo
[15:29] micheil: ho'
[15:30] pgriess: micheil: so ... totally separate? like, duplicated implementations of draft76 handshaking and framing?
[15:30] micheil: well, it doesn't matter too much
[15:30] micheil: because the handshaking is different enough to warrant it
[15:30] micheil: one you need to generate, the other you're just reading
[15:31] pgriess: micheil: both need to generate signatures
[15:31] micheil: and the protocol isn't _that_ complicated that we _need_ to share components
[15:31] pgriess: micheil: ok, fine w/ me. i'm a bit surprised, but whatever.
[15:32] micheil: looking from a birds eye view, you can see that they are similar, but when it gets down to it, I think they're different enough to warrant separate repos
[15:33] pgriess: thanks from licensing your code MIT ;)
[15:33] pgriess: er for
[15:33] micheil: pgriess: opensource is for learning.
[15:33] _announcer: Twitter: "@Ben_Hall Shame on you for mentioning the html5 websockets. Now I'm knee deep in a cygwin+node.js install to give them a proper go." -- Einar Otto Stangvik. http://twitter.com/einaros/status/16314963025
[15:34] sveilin has joined the channel
[15:34] zomgbie has joined the channel
[15:34] micheil: pgriess: as far as I'm concerned, all the code I write is opensource, as once I have the knowledge of things, nothing stops me accidentally reusing that knowledge
[15:35] sechrist has joined the channel
[15:35] micheil: pgriess: also, I learnt programming through opensource, and I think other should be able to do the same.
[15:37] Aikar: same/agreed ;)
[15:37] micheil: pgriess: as for splitting the code, check out the subtree branching stuff in the github help.../
[15:37] micheil: http://help.github.com/splitting-a-subpath-to-a-new-repo/
[15:37] Aikar: the only programming books ive read were in college for classes i already knew more than it taught and read just enough to do the assignments
[15:38] amerine has joined the channel
[15:39] micheil: Aikar: I did it the other way around.. I pretty much got into uni due to my programming knowledge + having an awesome referee on my resume
[15:40] micheil: Aikar: that is, university before finishing high school..
[15:40] sechrist: so I have socket.io working with ws and with the flash bridge
[15:41] sechrist: does it fall back on xhr?
[15:41] sechrist: I disabled flash in firefox (which doesn't have ws) and nothing is happening
[15:41] micheil: only if you tell it to us XHR
[15:42] sechrist: also does xhr work cross port?
[15:43] zomgbie has joined the channel
[15:43] sechrist: the service isn't on 80 at the moment but the chat app is
[15:43] sechrist: that'd make sense
[15:43] sechrist: ah xhr is same port
[15:44] micheil: yeah
[15:45] micheil: you'll need to use script long-polling for cross-domain
[15:45] sechrist: teh jsonpz
[15:46] sechrist: seems like that's the only transport method that socket.io doesn't have
[15:46] sechrist: <script> tag injection with callbacks
[15:47] micheil: sechrist: fork and contribute baby, fork and contribute.
[15:47] micheil: :P
[15:47] quirkey has joined the channel
[15:47] bradleymeck: i like to fork repos and add features the maintainer doesnt like
[15:48] rolfb has joined the channel
[15:48] bradleymeck: thats the true way to get the ball going
[15:48] rolfb has joined the channel
[15:48] _announcer: Twitter: "WebWorkersCamp: [July 3, 2010;] On Saturday, July 3 at the Canteen in Paris NodeJS, NoSQL, queues, p. .. http://bit.ly/cdgmdy" [fr] -- futur_en_seine. http://twitter.com/futur_en_seine/status/16316051715
[15:49] micheil: hmm.. event after using node for this long, I still don't know all the in's and out's of require()
[15:49] micheil: *even
[15:50] zomgbie has joined the channel
[15:50] sechrist: stracing
[15:50] sechrist: shows the attempts
[15:51] sechrist: or do you mean like export.blah?
[15:51] _announcer: Twitter: "@einaros uhh.. from within node.js, I meant :P" -- Micheil Smith. http://twitter.com/miksago/status/16316274951
[15:51] micheil: I mean like if I unshift require.paths, can I do XYZ
[15:52] stephenjudkins has joined the channel
[15:52] _announcer: Twitter: "I vote we get rid of the #node.js bot in #node.js" -- Chase Sechrist. http://twitter.com/chasesechrist/status/16316343036
[15:52] sechrist: ^
[15:52] micheil: sechrist: whY?
[15:52] sechrist: last night dude
[15:52] sechrist: it was literally spamming the channel
[15:53] sechrist: because node.js got some buzz
[15:53] voodootikigod has joined the channel
[15:53] micheil: hmm..
[15:53] micheil: maybe it'd be an idea for there to be a switch that can be controlled by a few select people to turn it off.
[15:53] Aikar: what gave some buzz?
[15:53] sechrist: people were a tweetin
[15:54] sechrist: and replying to each other
[15:54] sechrist: and it got crazy for abit
[15:55] JimBastard: the bot is a very good thing
[15:55] JimBastard: it needs more work
[15:55] JimBastard: and the abiltiy to repsond to twitter and stack overflow from IRC command line
[15:55] bradleymeck: i miss auto translation
[15:55] JimBastard: maybe people who are +v
[15:55] JimBastard: bradleymeck: it got added back last night
[15:55] bradleymeck: oooo
[15:55] JimBastard: i think we helped someone from japan
[15:55] JimBastard: who was having trouble receiving love from arguments , i think
[15:56] ryah: hi
[15:56] bradleymeck: i do have a partially working browser w/ cookies mmm what else would we need?
[15:57] bradleymeck: heya ryah
[15:57] micheil: morning ryah 
[15:57] ryah: hi
[15:57] bradleymeck: when does tj get on normally?
[15:58] zomgbie has joined the channel
[16:00] micheil: bradleymeck: he said he'd be about soon, about an hours time
[16:00] bradleymeck: k
[16:03] shackzter has joined the channel
[16:04] shackzter: Does anyone know about "No such file or directory" error from kiwi?
[16:04] shackzter: I get it just running "kiwi" from cmd line, can't install anything
[16:05] micheil: shackzter: said TJ above would know, but he's not about yet
[16:05] shackzter: ahh cool
[16:06] markwubben_ has joined the channel
[16:06] tmpvar has joined the channel
[16:06] technoweenie has joined the channel
[16:08] mikeal has joined the channel
[16:08] _announcer: Twitter: "using node.js to try out functional constructors (read about it in "Javascript: The Good Parts.")" -- Matthew Kane Parker. http://twitter.com/moonmaster9000/status/16317667868
[16:09] philippbosch has joined the channel
[16:11] sechrist: is serverresponse.flush() no longer needed?
[16:11] sechrist: or do I call end()? or what?
[16:11] sechrist: the xhr code for socket.io is outdated
[16:12] micheil: .end() I think
[16:13] micheil: try mscdex's fork
[16:13] sechrist: oh wow the zips were just old -- should have checked github
[16:13] sechrist: mscdex has a fork? http://github.com/LearnBoost/Socket.IO-node.git
[16:13] sechrist: that seems more current
[16:13] micheil: http://github.com/mscdex/Socket.IO-node/commit/1645bb784071f85411709c4f5bfb46ac28ecb0d5
[16:14] sechrist: ahh I see
[16:16] ajpiano has joined the channel
[16:16] joshbuddy has joined the channel
[16:18] bradleymeck: isaacs, got the mustache slices added will get back to work on format, need to figure out how to change the filter syntax
[16:19] bradleymeck: ah, hes not in here... -_-;
[16:21] JimBastard: mustachio! is my favorite icecream flavor
[16:21] zomgbie has joined the channel
[16:25] fizx has joined the channel
[16:29] rnewson has joined the channel
[16:30] micheil: pgriess: btw, best thing about have a websocket client? You can add in auto_reconnect :D
[16:32] pgriess: micheil: heh
[16:32] micheil: just realised how awesome that could be.
[16:32] micheil: ACTION is writing a new webservice that talks mainly over websockets.
[16:34] mattly has joined the channel
[16:38] stevendavie has joined the channel
[16:45] jetienne: http response seems to perform chunk encoding by default when content-length is not present, can i prevent it ?
[16:46] jetienne: micheil: you got websocket to work reliably cross browser ?
[16:46] pgriess: micheil: client impl moved to pgriess/node-websocket-client w/ re-written parser
[16:46] micheil: umm.. only if the browser implements the protocol
[16:46] micheil: pgriess: cool.
[16:46] pgriess: micheil: new parser is probably faster; feel free to steal if you want
[16:46] jetienne: micheil: which browser works ?
[16:47] micheil: chrome 5+, chromium ?, safari 5
[16:47] micheil: to my knowledge
[16:47] pandark_ has joined the channel
[16:47] micheil: and I've heard of firefox 3.7
[16:47] micheil: and IE 9
[16:47] jetienne: oh IE got websocket ... nice
[16:49] shackzter: what time could it be in BC Canada...?  :D
[16:49] micheil: pgriess: I disagree on the two loops there, while { for { }}
[16:49] pgriess: micheil: yeah, good point
[16:50] jetienne: 'Transfer-Encoding'	: 'identity' <- put this in response header and no more chunked :)
[16:50] micheil: pgriess: that's why I was using the method I was using
[16:50] jetienne: i start to understand how ry thinks :)
[16:51] pgriess: micheil: agreed that a single loop is better. i don't agree that maintaining a separate array of bytes is better
[16:51] zomgbie has joined the channel
[16:51] micheil: and you also aren't carrying state properly
[16:51] slaskis_ has joined the channel
[16:52] micheil: pgriess: yeah, that could be done with a Buffer
[16:52] pgriess: micheil: which state?
[16:52] micheil: frameType never gets reset
[16:52] micheil: it sticks at what the first frame was.
[16:53] pgriess: micheil: yeah, thx for catching that
[16:53] micheil: heh heh
[16:53] pgriess: micheil: in fact, the looping parser is busted when frame tyes change
[16:53] micheil: ACTION is trying to write the test for the client http upgrade
[16:54] sechrist: k finally got socket.io working completely
[16:54] micheil: pgriess: yours or mine there?
[16:54] sechrist: since my service is on a different port i'm just proxying the xhr crap through lighty
[16:54] pgriess: micheil: mine
[16:54] micheil: k
[16:54] kuya: can someone point me at a simple lib to get node to understand packages?
[16:54] sechrist: modified the client lib to not put a port on it
[16:54] pgriess: micheil: i have a test for client upgrade already; was waiting to submit it once my ws client worked
[16:54] micheil: kuya: packages as in?
[16:54] sechrist: kiwiwiwiwiwi
[16:54] SubStack: buffer parsers, eh?
[16:54] micheil: npm FTW
[16:54] kuya: micheil: things with a lib dir and packages.json 
[16:55] micheil: SubStack: yeah
[16:55] micheil: kuya: try npm
[16:55] SubStack: ACTION plugs his http://github.com/substack/node-bufferlist 
[16:55] kuya: thanks guys 
[16:55] micheil: but, the other way is just to require() the default file
[16:55] charlesjolley-_ has joined the channel
[16:55] micheil: SubStack: yeah, we need something slightly different
[16:55] pandark_: lol so young and allready flame for its package managers :p
[16:55] micheil: SubStack: we're parsing as it comes in, not after we receive and end
[16:56] SubStack: micheil: you can do that with bufferlist/binary
[16:56] micheil: ah, oh well.
[16:56] micheil: less deps this way ;P
[16:56] SubStack: it's got a .forever for just that case
[16:56] SubStack: I'm using it to decode vnc sessions
[16:57] derferman has joined the channel
[16:59] SubStack: also building a remote method invocation thing on top of socket.io
[17:01] derferman: I have created a small DSL for node, example http://pastie.org/1007131. My module adds a bunch of functions to the global namespace. Is this acceptable?
[17:01] derferman: I know that picard (node micro framework) does the same thing for some functions
[17:01] keyvan has joined the channel
[17:02] SubStack: derferman: you could do a fluent interface
[17:02] bradleymeck: i would be wary of doing this, if a user wants to put the functions into the global scope he can always enumerate the module
[17:03] micheil: pgriess: how are you sending the challenge to the server?
[17:03] kjeldahl: Any npm experts on who can explain why "npm install connect" doesn't put any connect executable in any bin directory?
[17:03] pgriess: micheil: using http.Client
[17:03] micheil: pgriess: nvm, req.write() not connection.write()
[17:03] derferman: bradley: I was thinking of adding a .dsl() function to the exports object that adds the functions to the global namespace.
[17:04] micheil: kjeldahl: lack of write access perhaps?
[17:04] bradleymeck: kjeldahl, connect's package.json is a bit off when i looked at it last as well
[17:04] micheil: off to watch a jsconf talk.
[17:04] kjeldahl: micheil: I meant "sudo npm install connect".. That should be enough...
[17:05] JimBastard: hee hee, i wonder if they are ever going to post my talk
[17:05] JimBastard: it was pretty bad
[17:05] JimBastard: i put it together the morning of pretty much
[17:05] derferman: that way a user can explicitly put the functions into the global namespace if they want 
[17:05] kjeldahl: micheil: tjholowaychuck blamed npm when I tweeted with him earlier today, but I really haven't got a clue who's to blame. Just annoying. Symlinking into ~/.node_libraries works just fine though.
[17:06] ryanmcgrath has joined the channel
[17:06] SubStack: maybe I should do a blog post about building monadic fluent interfaces to abstract over sequential asynchronous method chains
[17:07] zomgbie has joined the channel
[17:07] SubStack: ACTION adds it to the queue
[17:07] JimBastard: SubStack: maybe you should phrase it a lot simplier
[17:08] JimBastard: "how to pwnt async callbacks in node"
[17:08] SubStack: noted
[17:08] JimBastard: "async events for retards"
[17:08] JimBastard: no one knows monad except for real developers
[17:08] SubStack: "asynchronous programming the easy way" or some such
[17:08] JimBastard: who use functional programming langauges that dont have side effects
[17:08] JimBastard: you know, "pure"
[17:08] JimBastard: that shit scares me
[17:09] JimBastard: breaking encapsulation is like one of my favorite past times
[17:09] sechrist: SubStack: would that make waiting on callbacks appear synchronous like for templates?
[17:09] JimBastard: i usually wake up in the morning, drink some coffee, smoke an L or two, and then toString() eval() something
[17:09] JimBastard: sechrist: anything async
[17:09] JimBastard: its like Step
[17:09] technoweenie has joined the channel
[17:10] SubStack: sechrist: "appear" in a sense
[17:10] sechrist: yeah
[17:10] JimBastard: i sent an email to furf to make sexy.js dual sided
[17:10] SubStack: it's still explicit
[17:10] JimBastard: i might just do it
[17:10] sechrist: of course -- but it lowers the barrier for people converting over views
[17:10] SubStack: right
[17:10] sechrist: i've had multiple conversations about this in here -- mustache is apparently the only decent solution so far
[17:11] JimBastard: personally, i just use the event emitter
[17:11] SubStack: sechrist: mostly it's a way to flatten out the nested context of multiple dependent async events
[17:11] sechrist: your mom uses an event emitter
[17:11] sechrist: SubStack: yeah
[17:11] JimBastard: sechrist: my mom is dead and you are a noob about JS
[17:11] JimBastard: so take that
[17:11] sechrist: both statements are false
[17:11] sechrist: muah!
[17:12] isaacs has joined the channel
[17:12] SubStack: I might even be able to whip this approach into an abstract library
[17:12] CIA-76: node: 03isaacs 07master * r73f207f 10/ src/node_crypto.cc : Throw exceptions, not strings - http://bit.ly/cLpiSh
[17:12] isaacs: hooray!
[17:13] manveru has joined the channel
[17:14] samsonjs has joined the channel
[17:14] zomgbie has joined the channel
[17:15] slaskis has joined the channel
[17:16] markwubben has joined the channel
[17:16] jesusabdullah has joined the channel
[17:16] samsonjs has joined the channel
[17:17] samsonjs_ has joined the channel
[17:17] sechrist: what
[17:17] jesusabdullah has left the channel
[17:17] samsonjs has joined the channel
[17:19] samsonjs has joined the channel
[17:20] samsonjs has joined the channel
[17:21] samsonjs has joined the channel
[17:21] visnup has joined the channel
[17:21] tjholowaychuk has joined the channel
[17:22] samsonjs_ has joined the channel
[17:24] samsonjs has joined the channel
[17:25] mscdex has joined the channel
[17:26] CIA-76: node: 03Micheil Smith 07master * rb05daaa 10/ (lib/path.js test/simple/test-path.js): Adding path.existsSync (with tests.) - http://bit.ly/db10nO
[17:27] pgriess: micheil: new parser up on github
[17:27] pgriess: still retains 2 loop structure, but this is necessary to delegate parsing of frame types to individual functions, which i like
[17:27] zomgbie has joined the channel
[17:28] shackzter: I am having real problems with kiwi: "No such file or directory" no matter what i try to do
[17:28] CIA-76: node: 03Ryan Dahl 07master * rcf86527 10/ test/simple/test-fs-write-file.js : Fix writeFile(buffer) test - http://bit.ly/9l11lL
[17:29] shackzter: i have a little express project with mongodb that i just worked on beautifully at work
[17:29] shackzter: but at home im stumped by this
[17:29] shackzter: Anyone knows anything about this?
[17:30] tjholowaychuk: shackzter: sounds like it is failing to create ~/.kiwi
[17:30] tjholowaychuk: or something
[17:30] tjholowaychuk: shackzter: express is on npm now too though $ npm install express
[17:30] shackzter: i manually created it and the seeds dir
[17:30] tjholowaychuk: hm
[17:30] tjholowaychuk: should be fine then, must be some permission issues
[17:31] shackzter: i installed both node and kiwi globally in /usr/local
[17:31] shackzter: that can be it?
[17:31] shackzter: worked at work :/
[17:31] mscdex: port kiwi to the wii: kiwii!
[17:32] tjholowaychuk: hmm
[17:32] shackzter: the weord thing is that i cant even echo "whatever" from top of the kiwi script
[17:32] shackzter: it still bombs
[17:32] tjholowaychuk: $ which kiwi
[17:32] tjholowaychuk: where is it
[17:32] tjholowaychuk: at
[17:32] shackzter: node seems to work, at least simple hello world stuff
[17:32] shackzter: oops
[17:32] shackzter: which kiwi: /usr/local/bin/kiwi
[17:34] zomgbie has joined the channel
[17:35] cloudhead has joined the channel
[17:35] shackzter: Is npm better than kiwi? Kinda new to node.js world
[17:35] shackzter: compatible?
[17:36] isaacs: shackzter: they're not compatible, no, and tjholowaychuk has only recently started to move towards npm, so there's still a bit of conversion going on, i believe.
[17:36] tjholowaychuk: shackzter: short answer, use npm
[17:36] tjholowaychuk: kiwi is not going anywhere (for quite a while) but I am not actively developing it anymore
[17:37] shackzter: I am beginning to think it may be my node env since installing npm didnt work  :(
[17:37] shackzter: Error: Cannot find module 'crypto'
[17:37] isaacs: shackzter: gist the log, please?
[17:37] isaacs: whoa, yeah, update node
[17:37] isaacs: you're way behind
[17:38] JimBastard: ahahah
[17:38] caolanm has joined the channel
[17:38] isaacs: like, weeks!
[17:38] shackzter: strange its version 0.1.98
[17:38] isaacs: omg, that's like forever!
[17:38] shackzter: :D
[17:38] mscdex: javascript-fu!
[17:38] isaacs: wait wut?
[17:38] JimBastard: thanks mscdex lol
[17:38] JimBastard: i need isFu in the next two weeks
[17:38] JimBastard: lol fuck
[17:38] JimBastard: i need it today actually
[17:38] isaacs: shackzter: what is node -v?
[17:38] mscdex: git going then
[17:38] isaacs: $ node -v
[17:38] mscdex: huhu
[17:38] JimBastard: im on it
[17:38] shackzter: 0.1.90
[17:38] isaacs: shackzter: then you're not on 0.1.98
[17:38] shackzter: hmm
[17:39] mscdex: version hax!
[17:39] isaacs: shackzter: ./configure && make && sudo make install
[17:39] shackzter: how can that be?
[17:39] kjeldahl: Ok, seems we have all the right people on now. Can anybody confirm/deny that "sudo npm install connect" does NOT install connect in any bin directory by default?
[17:39] shackzter: did that 
[17:39] shackzter: ill purge and redo
[17:39] isaacs: kjeldahl: go into the node-repl, and then type: process.installPrefix
[17:39] tjholowaychuk: kjeldahl: works for me :( 
[17:39] tjholowaychuk: minus the sudo
[17:39] isaacs: kjeldahl: did you install node using homebrew?  if so, it borks the install prefix.
[17:39] mscdex: sud'oh
[17:40] kjeldahl: process.installPrefix => /usr/local
[17:40] isaacs: kjeldahl: then you should have a /usr/local/bin/npm
[17:40] isaacs: no?
[17:40] shackzter: Omg!
[17:40] isaacs: kjeldahl: oh, you mean the connect bin
[17:40] kjeldahl: isacs: npm is fine. "sudo npm install connect" does not put connect anywhere it can be run (bin directory).
[17:40] shackzter: I got stuff from Archlinux repo i think
[17:41] shackzter: argh!
[17:41] mscdex: lol
[17:41] kjeldahl: ACTION nods
[17:41] isaacs: kjeldahl: did you get any errors installing connect?  that is, did it say "npm ok" at the end?
[17:41] tjholowaychuk: kjeldahl: which connect
[17:41] tjholowaychuk: anything?
[17:41] isaacs: yeah, i get a /usr/local/bin/connect
[17:41] mscdex: repos don't update often enough to keep up
[17:41] jakehow has joined the channel
[17:41] tjholowaychuk: im using nvm but it works fine
[17:41] isaacs: ACTION can't wait until node/npm are stable enough to have a version work for more than a week or two..
[17:41] zomgbie has joined the channel
[17:42] tjholowaychuk: haha
[17:42] kjeldahl: isaacs: Yes, "npm ok". No visible errors. But nothing in /usr/local/bin either...
[17:42] isaacs: kjeldahl: that's... odd?
[17:42] isaacs: kjeldahl: try this: npm rm connect;  npm install connect
[17:42] isaacs: kjeldahl: then, gist the log from the instal
[17:43] kjeldahl: isaacs: On the install part, I now get "ronn: not found" on "ronn -r docs/api.md > docs/api.1"
[17:44] kjeldahl: Which package is that?
[17:44] isaacs: tjholowaychuk: ^^
[17:44] tjholowaychuk: ohhh
[17:44] JimBastard: mscdex: i keep my repos all updated
[17:44] tjholowaychuk: snap
[17:44] tjholowaychuk: one sec
[17:44] JimBastard: mscdex: i even have an automated tool to help :-)
[17:44] isaacs: tjholowaychuk: you guys should just keep the .1 files in the repo
[17:44] JimBastard: kinda
[17:44] mscdex: JimBastard: Linux distro repos.... not github ;-)
[17:44] JimBastard: o
[17:44] JimBastard: pwnt
[17:44] isaacs: tjholowaychuk: i've had to do that with npm, since no one has ronn, and it hardly ever installs right, apparently
[17:44] tjholowaychuk: isaacs: i do, i think I just screwed up the package.json
[17:44] tjholowaychuk: one sec
[17:44] isaacs: tjholowaychuk: yeah, it's got a "make doc" as the activate script, i think
[17:45] qFox has joined the channel
[17:45] isaacs: tjholowaychuk: i've got plans to implement a "publish" entry in the package.json scripts hash so that you can do stuff like this automatically when you publish, rather than tracking duplicate data in the repo or having users have to generate documentation
[17:46] isaacs: tjholowaychuk: then you'll be able to just have { "scripts" : { "publish" : "make doc" } } and it'll always have the stuff there in the package, and your (de)activate script can just move them into/out of place
[17:46] tjholowaychuk: nice!
[17:47] ewdafa has joined the channel
[17:47] keyvan has joined the channel
[17:47] indiefan has joined the channel
[17:48] jherdman has joined the channel
[17:48] isaacs: tjholowaychuk: you'd be amazed how much of npm is just there to make it easier to publish and deploy npm.
[17:48] isaacs: it's like the most recursive thing ever.
[17:49] tjholowaychuk: hahha
[17:49] tjholowaychuk: i believe it
[17:49] tjholowaychuk: good way to discover features though
[17:49] tjholowaychuk: like git being the scm for git
[17:50] JimBastard: hey pgriess are you the yahoo mail guy?
[17:50] pgriess: jimbastard: yeah
[17:51] JimBastard: cool beans
[17:51] JimBastard: ACTION bows before your internet cred
[17:51] pandark_ has joined the channel
[17:52] micheil: pgriess: lines 323-325, just why?
[17:52] tjholowaychuk: kjeldahl: I know what the problem is now, will release a new version in a few minutes
[17:53] kjeldahl: tjholowaychuk: Excellent. Thanks.
[17:53] shackzter: Ok, success on the npm, now lets get rocking!
[17:53] pgriess: micheil: mangling the data events is because i wanted to separate code for handshaking vs. connected state
[17:53] isaacs: shackzter: yayz!
[17:53] pgriess: micheil: the 'upgrade' handler just because
[17:53] pgriess: micheil: prob unnecessary
[17:53] shackzter: Btw, as an old Java dev: This stuff rox!
[17:54] tjholowaychuk: kjeldahl: just seems like `make install-docs`'s dependency line is fucked, even though docs/api.1 should be built already
[17:55] mattly has joined the channel
[17:55] kjeldahl: tjholowaychuk: Yeah, seems like I've got a nack for finding bugs like these... :-)
[17:56] bradleymeck: tjholowaychuk, did you get a chance to look at the sessions stuff?
[17:56] tjholowaychuk: bradley: a little bit, I have most of my own done too though
[17:56] bradleymeck: cool
[17:57] JimBastard: stupid NYC.js mailing list, firecrow is trying to tell me writing AS3 apps is just like writing JS apps
[17:57] SubStack: -_-
[17:57] JimBastard: okay, yes, they are both based on ecmascript
[17:57] slaskis: isaacs: tried to install connect with npm now (first try with npm at all actually) and it complained about my node version with this: npm testEngine required: node ">= 0.1.98-0"
[17:57] slaskis: npm fail Error installing connect@0.0.3
[17:57] slaskis: npm ! Error: node version not compatible: 
[17:57] slaskis: required: >= 0.1.98-0
[17:57] slaskis: actual: 0.1.98
[17:57] JimBastard: i get that
[17:57] JimBastard: but thats about it
[17:57] slaskis: woops, too long paste
[17:57] tjholowaychuk: wtf
[17:57] tjholowaychuk: someone told me -0 will support HEAD or some crap
[17:57] JimBastard: if you copy paste the same line 3 times fast enough you'll get auto g-lined
[17:57] tjholowaychuk: lol
[17:58] micheil: isaacs: should process.installPrefix == "/usr/local" ?
[17:58] isaacs: tjholowaychuk: yeah, so, i changed that for exatly the same reason
[17:58] b_erb has joined the channel
[17:58] isaacs: micheil: that looks fine
[17:58] micheil: k
[17:58] isaacs: tjholowaychuk: so now if you do >=1.2.3 then 1.2.3-4 will satisfy
[17:58] isaacs: tjholowaychuk: but 1.2.3-beta won't
[17:58] isaacs: tjholowaychuk: semver is a pita.
[17:58] micheil: pgriess: okay, um, basically I'm not sure why you're unbinding the events there, as soon as the objects are GC'd, the events will go anyway
[17:58] tjholowaychuk: isaacs: what should it be then?
[17:58] isaacs: tjholowaychuk: >=0.1.98
[17:59] tjholowaychuk: ah
[17:59] tjholowaychuk: lame
[17:59] stephenjudkins has joined the channel
[17:59] micheil: tjholowaychuk: that would have been me.
[17:59] tjholowaychuk: haha
[17:59] tjholowaychuk: was it not working with HEAD?
[17:59] micheil: micheil == miksago
[17:59] micheil: yeah
[17:59] isaacs: tjholowaychuk: previously 0.1.98 was > 0.1.98-0, so if you said >= 0.1.98 then 0.1.98-12-0cafebad would fail
[18:00] stephenjudkins has joined the channel
[18:00] isaacs: i guess i should probably make 0.1.2-0 == 0.1.2
[18:00] tjholowaychuk: I need to push a new release for that docs thing anyways
[18:00] isaacs: since 0 there would mean "zero builds above 0.1.2"
[18:00] micheil: pgriess: man.. some of your code is head turning.
[18:00] pgriess: micheil: oh?
[18:00] micheil: yes
[18:01] micheil: like lines 349 & 350
[18:01] aglemann has joined the channel
[18:01] pgriess: why is that head turning?
[18:01] micheil: I've spent so long playing with the server, that I look at that and think it's wrong
[18:01] micheil: hmm.. my version of the upgradeHead patch is borked
[18:01] isaacs: micheil, pgriess: which code?
[18:02] micheil: isaacs: http://github.com/pgriess/node-websocket-client/blob/master/lib/websocket.js#L323
[18:02] pgriess: micheil: yeah, the one we initially tried was busted. fixed on sent out to mailing list
[18:02] micheil: isaacs: we're working on a new piece to http.client to allow websocket clients in node
[18:02] isaacs: oh, neat
[18:02] micheil: pgriess is writing the client, I'm writing the tests for the new node code
[18:03] micheil: well, something like that, any way
[18:03] pgriess: micheil: so ... write() followed by end() is head turning for some reason?
[18:03] micheil: pgriess: yeah, it just looks odd because I know the socket's still open.
[18:04] pgriess: micheil: yeah, that's just how the client API is
[18:04] bmizerany has joined the channel
[18:05] micheil: pgriess: found an error in the upgradeHead patch
[18:05] CIA-76: node: 03David Siegel 07master * r81ad810 10/ (lib/dgram.js src/node_net.cc): Add UDP broadcast support - http://bit.ly/aOjZ57
[18:05] CIA-76: node: 03Ryan Dahl 07master * rcbf2a22 10/ (lib/dgram.js test/simple/test-dgram-pingpong.js): Add callback to dgramSocket.send() - http://bit.ly/aD4BaK
[18:06] pgriess: micheil: yes?
[18:06] micheil: yeah, just checking my patch
[18:07] micheil: error was: Error: Must have start <= end
[18:07] micheil: works now.
[18:07] pgriess: micheil: yeah. that is fixed in the patch that i sent out
[18:07] bradleymeck: tjholowaychuk is there some documentation around on the setup function for connect?
[18:07] brianmario has joined the channel
[18:07] micheil: pgriess: is it?
[18:07] pgriess: micheil: or, it should be. that was the error that i was getting w/ the old patch
[18:08] tjholowaychuk: bradleymeck: check `man connect`
[18:08] tjholowaychuk: think i have some in there
[18:08] pgriess: micheil: which patch are you working with? the one i sent out 30m ago? or the one from before that?
[18:08] micheil: ah, yeah
[18:08] micheil: I see.
[18:08] tjholowaychuk: if not ill add some
[18:08] pgriess: micheil: the one i just sent out also includes a unit test
[18:08] micheil: ooho.. pgriess just saw that.
[18:08] micheil: I was working off another version
[18:08] bradleymeck: but i already have a man for connect :(
[18:08] pgriess: micheil: yeah, figured ;)
[18:09] maushu has joined the channel
[18:09] tjholowaychuk: bradleymeck: man 2 connect vs man 1 connect
[18:09] tjholowaychuk: or man docs/api.1
[18:09] micheil: pgriess: so the tests' I'm working on are pretty much not needed..
[18:09] grahamalot has joined the channel
[18:10] bradleymeck: bleh, guess npm didnt install em
[18:11] tjholowaychuk: nope, fixing that right now
[18:11] ryah: pgriess: can you rebase your patch to master?
[18:11] pgriess: ryah: np, 1s
[18:11] kevwil has joined the channel
[18:12] mikeal has joined the channel
[18:13] mostlygeek has joined the channel
[18:13] micheil: wow. that is some mighty heavy rain.
[18:13] micheil: I can hear it over my music
[18:13] kodisha_ has joined the channel
[18:14] caolanm: patch to update the callback style for path.exists: http://github.com/caolan/node/commit/42cb3106c2b616d0357f3f89537ff751b3dbd570
[18:15] micheil: caolanm: mailing list.
[18:15] caolanm: will do
[18:15] micheil: although, I don't see the point for the err argument, to be honest.
[18:16] caolanm: if there is a permissions error for example, you don't actually know if the file exists or not
[18:16] linuxsable has joined the channel
[18:16] micheil: ah
[18:16] caolanm: also, it would now follow the conventional style
[18:16] caolanm: instead of being an oddball ;)
[18:16] micheil: caolanm: so it becomes: path.exists(function(err, exists?));
[18:17] caolanm: yeah
[18:17] micheil: k
[18:17] caolanm: and path.existsSync just throws whenever an error would have been returned to the callback
[18:17] micheil: sounds good, but bets are that it'll break a lot of stuff
[18:17] caolanm: yeah, thats the bad part
[18:17] mtodd has joined the channel
[18:17] caolanm: but better to do it now than after 0.2 right?
[18:17] Atmoz has joined the channel
[18:18] micheil: yeah, that's my feeling.
[18:19] micheil: it's up to ryah, i guess.
[18:24] awenkhh has joined the channel
[18:24] shackzter: Hmm with kiwi it was much simpler than with npm (at least at first?)
[18:24] shackzter: i just went: kiwi install node-mongodb-native
[18:25] shackzter: but its not in npm's registry
[18:25] shackzter: this is real noob stuff im sure :S
[18:25] isaacs[away]: shackzter: so, the issue there is that npm requires that the package author publish his stuff in order for it to be installable.
[18:26] shackzter: yup
[18:26] shackzter: like any pkg manager i guess
[18:26] isaacs[away]: shackzter: that's kind of inviting a certain amount of growing pains now while it's new to a lot of folks, but in teh long run, that's more sustainable.
[18:26] shackzter: ye its a good idea
[18:26] isaacs[away]: otherwise you have one guy/group/project that is a blocker for stuff getting updated and published
[18:26] micheil: shackzter: it's a matter of getting people to move stuff to npm
[18:26] ryah: pgriess: there must be something strange with your branch
[18:26] isaacs[away]: a la homebrew, etc.
[18:26] ryah: this patch isn't applying
[18:27] pgriess: ryah: hm
[18:27] pgriess: ryah: let me try applying that to a clean branch and see what happens
[18:27] isaacs[away]: really my own complaint with homebrew.  fixes for broken recipes take a long time, because it all has to go through mxcl
[18:27] shackzter: how do i just live with various packages in "mixed mode" with some sort of maintenance sanity?
[18:27] ryah: pgriess: nevermind
[18:27] ryah: pgriess: my mistake
[18:27] shackzter: in the meantime i mean
[18:27] isaacs[away]: shackzter: you can always download the code and then just install or link the folder.
[18:28] isaacs[away]: shackzter: worst case scenario, you have to write a package.json for it, which isn't hard, and you can send the author a pull req
[18:28] shackzter: can i fake it into npm structure?
[18:28] micheil: ryah: I just get whitespace errors
[18:28] shackzter: aha
[18:28] isaacs[away]: shackzter: yeah, just put a package.json file in the root of the folder, then do "npm install ./path/to/folder"
[18:28] shackzter: how do i do that? is there a spec or sumthing?
[18:28] shackzter: ok cool
[18:29] micheil: shackzter: doing the latter is what isaacs' did to me with node-websocket-server
[18:29] isaacs[away]: shackzter: yeah http://wiki.commonjs.org/wiki/Packages/1.1 and npm help json
[18:29] micheil:  / websocket-server
[18:29] shackzter: there are any particularly good example?
[18:29] shackzter: ah nice!
[18:29] shackzter: Ill give it a go!
[18:29] isaacs[away]: shackzter: the package.json in npm itself is a pretty good example of most of the things it can do
[18:29] shackzter: perhaps mongo-native can be in npm soon  :D
[18:29] jetienne_ has joined the channel
[18:29] isaacs[away]: yeah, please name it mongo-native, not node-mongo-native
[18:29] isaacs[away]: the "node" is implied
[18:29] shackzter: ah ye i was thinking of that :)
[18:30] isaacs[away]: you can use the "engines" field to specify what it works with
[18:30] shackzter: there are two though
[18:30] shackzter: engines, check
[18:30] awenkhh has joined the channel
[18:30] shackzter: cool, this will be fun
[18:30] isaacs[away]: shackzter: maybe then you can find some other cool node projects and package them up, too ;)
[18:31] shackzter: well one at a time but its good thing so time will be the factor
[18:31] shackzter: thx man ill get to it
[18:31] saikat has joined the channel
[18:32] CIA-76: node: 03Peter Griess 07master * r187f191 10/ (6 files in 2 dirs): 
[18:32] CIA-76: node: Support 'upgrade' event in HTTP client.
[18:32] CIA-76: node: - Add a unit test for client HTTP upgrade.
[18:32] CIA-76: node: - Move around unit tests for server HTTP upgrade. - http://bit.ly/bMdWm6
[18:32] micheil: ryah: do you ever do a git clean.. ?
[18:32] ryah: micheil: ?
[18:32] admc has joined the channel
[18:32] pgriess: ryah: heh
[18:32] micheil: the repo has heaps of objects.
[18:32] pgriess: ryah: looks like you already committed it
[18:32] pgriess: ryah: oh, oops
[18:32] pgriess: ryah: that was right now
[18:33] pgriess: ryah: what was the problem?
[18:33] jxson has joined the channel
[18:33] ryah: pgriess: wrong patch
[18:33] ryah: my ~/Downloads folder has had like 100 files starting in 0001
[18:33] pgriess: ryah: ah
[18:34] pgriess: ryah: thx for committing that. it'll be great to have socket clients working w/o a patched node
[18:34] mikeal: so many patches today :)
[18:34] mikeal: makes me all giddy 
[18:34] JimBastard: you cant stop the node
[18:34] JimBastard: node is unstoppable
[18:34] JimBastard: also, i heard at JSCONF that nodejs owns your face
[18:35] JimBastard: tmpvar got texture mapping working today for node-ogl
[18:35] JimBastard: something like 14k frames per second on linux
[18:35] JimBastard: thats 14 thousands frames per second
[18:36] JimBastard: s/thousands/thousand 
[18:36] isaacs[away]: you know what would be pretty kickass?  if there was a way to give npm a script such that it can modify the package.json data itself when you install something
[18:37] isaacs: so then you could like have it set your package's "contributors" field to a list of everyone in the commit log, or generate docs, or whatever.
[18:37] micheil: isaacs: actually, better would be tighter git intergratation... :D
[18:37] micheil: isaacs: so, a version bump piece
[18:37] micheil: if there's a standard versioning system for modules. (semver anyone?)
[18:38] isaacs: micheil: right, but then you could just have this sort of build-time pre-install script do something like that.
[18:38] micheil: then package authors could do: npm version:bump
[18:38] isaacs: micheil: also, don't pretend semver is any kind of solution.  it's an explanation of the problem.
[18:38] micheil: or something
[18:38] tjholowaychuk: Released connect 0.0.4 for anyone who was trying to install via npm, it should be fixed
[18:38] micheil: isaacs: it's not a solution, it's a standard.
[18:38] isaacs: right, but tha'ts just it, the script could even automatically update the version to the number of commits since the last one, etc.
[18:38] JimBastard: whats a good trick for determining if a list of booleans are all true
[18:38] micheil: isaacs: no, it increments by one
[18:38] JimBastard: im in a loop calling a function that returns TRUE or FALSE, need to aggregate all values
[18:39] JimBastard: i can think of a bunch of ways to do it
[18:39] JimBastard: but i hate them all
[18:39] micheil: JimBastard: just break on the first false.
[18:39] isaacs: JimBastard: myListOfBooleans.reduce(function (n, m) { return n && m }, true)
[18:39] JimBastard: hrmm the more i think about it maybe i need something more complicated
[18:39] micheil: for(var... ){ if(!ret) break;
[18:39] micheil: or somehing
[18:39] JimBastard: its a chain of validators
[18:39] JimBastard: so maybe false isnt enough
[18:40] JimBastard: i think i need to return validation metadata
[18:40] JimBastard: on why it failed
[18:40] micheil: isaacs: reduce is ES5, yeah?
[18:40] JimBastard: there could be multiple conditions
[18:40] JimBastard: hrmm
[18:40] isaacs: micheil: not sure.  been around for a while
[18:40] JimBastard: yeah isaacs thats what i was thinking
[18:40] micheil: k
[18:40] tmpvar has joined the channel
[18:40] isaacs: JimBastard: that's not very efficient, though, if the first one is false, and the list is long.
[18:41] JimBastard: it wont be long
[18:41] isaacs: JimBastard: what you probably want is eomthing that'll break on the first falsey value
[18:41] JimBastard: naaah i need them all for sure
[18:41] JimBastard: i think i know what to do here
[18:41] JimBastard: just kinda thinking outloud in IRC
[18:41] isaacs: right, but i mean, it should figure out the overall "all is good" state without having to walk through the entire list.
[18:41] JimBastard: ill aggregate into a list, then do what you are saying
[18:41] JimBastard: that way i know its overall false
[18:41] JimBastard: but i can still drill down and deterimine how many / which ones
[18:42] isaacs: JimBastard: you could also do var allGood = myListOfBools.indexOf(false) === -1
[18:42] isaacs: JimBastard: then it won't have to walk the entire list if the first one is false.
[18:42] JimBastard: i understand
[18:42] fizx has joined the channel
[18:42] JimBastard: ive really oversimplified my use case, but yeah i see what i can do now. thanks
[18:43] keyvan has joined the channel
[18:43] isaacs: np
[18:45] pandark_ has joined the channel
[18:45] micheil: --out.
[18:46] bradleymeck: well node-cookiejar is now supporting connect/sessions, should keep you w/ competition i hope tj
[18:47] tjholowaychuk: bradleymeck: never hurts to have more implementations :)
[18:47] tjholowaychuk: whats the repo url?
[18:48] kodisha_ has joined the channel
[18:48] bradleymeck: im aiming for something more heavyweight than you prolly, git://github.com/bmeck/node-cookiejar.git
[18:49] bradleymeck: not sure what to do w/ clients that dont supply host though, as from what i can tell not supposed to give em cookies
[18:49] shackzter: isaacs: Success!
[18:49] tmpvar: hows everyone doing?
[18:50] shackzter: a bit of an ugly require path so far but thats just a matter of definition i guess
[18:50] tjholowaychuk: bradleymeck: the clients handle that, you dont have to
[18:50] tjholowaychuk: bradleymeck: seems you implemented a client cookie api
[18:50] bradleymeck: well i have to set-cookie
[18:50] isaacs: "cookiejar" usually implies the place where a client keeps cookies
[18:50] isaacs: and client cookie logic is MUCH more complicaed
[18:50] tjholowaychuk: yea
[18:51] tjholowaychuk: mine is dumb, pass it some shit, outputs some shit
[18:51] bradleymeck: has both, couple of my projects use both
[18:51] tjholowaychuk: lol
[18:51] isaacs: cookie parsing is easy by comparison.  keeping track of cookies, expiring them at the right time, sending them to the right place, storing them long-term, that's hard.
[18:51] JimBastard: ehhh
[18:51] JimBastard: maybe ive just never done complex cookie stuff
[18:52] JimBastard: cookies are great client side for maintaining UI state though
[18:52] JimBastard: thats one of my favorite tricks
[18:52] JimBastard: is serializing the state of the UI and toss in into a cookie...or two....
[18:52] JimBastard: or...three...
[18:52] JimBastard: oofa
[18:52] tilgovi has joined the channel
[18:52] rolfb: :D
[18:52] rolfb: cookie-packs
[18:52] JimBastard: yeah im not sure what they have for sharding cookies now in the browser
[18:52] JimBastard: i rolled some shit by hand back when
[18:52] KungFuHamster: sharting cookies?
[18:53] JimBastard: it hurts
[18:53] JimBastard: need to chew more
[18:53] KungFuHamster: the chocolate chips are easier than the rest
[18:53] KungFuHamster: not that you can spot them
[18:53] bradleymeck: jimbastard, trying to figure out a good way to have a template that can store state info and then send diffs akin to facebook's primer stuff, do you have an example of the serializing stuff or is it all by hand?
[18:53] KungFuHamster: ACTION goes back to lurking after making his disgusting, yet hilarious joke.
[18:54] JimBastard: bradleymeck: usually im doing MVVM right
[18:54] tjholowaychuk: where is creationix at
[18:54] JimBastard: so at all times i have a ViewModel
[18:54] JimBastard: so i can just dump that as JSON
[18:54] JimBastard: and then pick it up later and let my ModelView render it
[18:54] JimBastard: or something, mumble mumble buzzwords
[18:55] JimBastard: basically if you have proper renderers and databinding setup
[18:55] JimBastard: you can just store your data for that view
[18:55] JimBastard: not sure if that helps
[18:57] bradleymeck: yea, but im trying to do diffs of templates (for ajax replace) so i might not have a full render in the diff, guess i could just bump it up until its inside a full renderer ~grumble grumble~
[18:57] kjeldahl: tjholowaychuk/isaacs: Did "sudo npm rm connect" and "sudo npm install connect" and everything works like expected now. Thanks!
[18:58] tjholowaychuk: kjeldahl: cool!
[18:58] isaacs: kjeldahl: nice.  (you shouldn't have to uninstall, though, that was just to try to debug the issue)
[18:58] isaacs: no harm in it, just unnecessary work
[18:58] JimBastard: bradleymeck: yeah i dont understand
[18:58] JimBastard: sorry
[18:58] JimBastard: i gotta focus for a few hours
[18:58] bradleymeck: np
[18:59] isaacs: dude, being able to pass FDs to child procs... that is awesome
[18:59] micheil has joined the channel
[18:59] isaacs: npm help actually is nice now
[18:59] isaacs: it scrolls and whatnot
[18:59] kjeldahl: tjholowaychuk: Re: reinstall, of course. Just wanted to test. You may want to retweet your connect announcement with an update to help those who tried to install the previous version... ;-)
[18:59] tjholowaychuk: isaacs
[18:59] tjholowaychuk: shit
[18:59] tjholowaychuk: haha
[18:59] micheil: hmm.. upgrade to os x 10.6.4 seems to be all good :D
[18:59] tjholowaychuk: does npm have an update command? or do you have to manually install new versions
[19:00] mscdex: oh, sx?
[19:00] isaacs: tjholowaychuk: planned, not implemented yet
[19:00] tjholowaychuk: and does it have potential for download stats etc?
[19:00] isaacs: tjholowaychuk: but now the auto-activate defaults to "always", so just a simple install will fetch the new version
[19:00] isaacs: tjholowaychuk: no stats yet.  i mean, i've got logs from couch, but i'm not doing anything with them
[19:01] isaacs: tjholowaychuk: since i plan to gut the registry architecture at some point, it seems a bit silly to invest any time in parsing the log files.
[19:01] tjholowaychuk: yeah for sure
[19:06] kodisha_ has joined the channel
[19:08] CIA-76: node: 03Ryan Dahl 07master * r1c6671a 10/ (49 files in 10 dirs): Upgrade V8 to 2.2.18 - http://bit.ly/bjdqN2
[19:09] ryah: micheil: the repo has heaps of objects because V8 is in there
[19:09] ryah: micheil: and git-clean is for cleaning your working dir, you probably mean git gc
[19:09] ryah: micheil: but even that, i dn't think, would effect the github repo i push to
[19:11] kodisha has joined the channel
[19:13] voodootikigod has joined the channel
[19:16] voodootikigod_ has joined the channel
[19:16] shackzter: isaacs: I sent the little file upstream to the maintainer
[19:16] shackzter: lets see if he takes it
[19:17] keyvan has joined the channel
[19:17] shackzter: If he does how does the whole npm thing work? Where is this registry and who maintains it?
[19:17] voodootikigod__ has joined the channel
[19:19] ryan_gahl: awe, someone turn _announcer on, i just tweeted about #node.js and no love :)
[19:20] awenkhh has joined the channel
[19:20] ryan_gahl: side note: anyone play with VoltDB yet - roadmap has c++ client, and the guy there told me it will be non-blocking
[19:20] tmpvar: "will be non-blocking"
[19:20] tmpvar: why not now!?
[19:20] ryan_gahl: the c++ client doesn't exist yet
[19:21] bradleymeck: shackzter, its maintained by isaacs, and its a package manager, http://github.com/isaacs/npm, physical registry is at http://registry.npmjs.org/
[19:21] ryan_gahl: the java client is async
[19:21] shackzter: Is this where npm lives: http://npm.mape.me/
[19:21] shackzter: ok thx
[19:21] ryan_gahl: btw tmpvar, are you working on avro bindings?
[19:22] tmpvar: ryan_gahl, nah.. msgpack is way cooler ;)
[19:22] tmpvar: i have the bindings compiling together
[19:22] ryan_gahl: awe, cuz cassandra has avro support (ish)
[19:22] ryan_gahl: guess i might have to use thrift afterall
[19:23] mrchrisadams has joined the channel
[19:24] bradleymeck: tj would it make sense to set the main of connect (in package.json) to lib/connect/index.js?
[19:24] tmpvar: ugh, voltdb looks horrible
[19:25] ryan_gahl: tmpvar: talking about the java-ness?
[19:25] tmpvar: yes
[19:25] ryan_gahl: yeah
[19:25] ryan_gahl: but seems to have some speed
[19:25] tmpvar: i mean thats fine, if its hidden behind a service layer.. I don't to see java guts lol
[19:26] tmpvar: *sick of java*
[19:26] sanderjd has left the channel
[19:27] rgahl has joined the channel
[19:27] rgahl: but of course the c++ wiring is where it would be at IRT node... i'm going to keep an eye on it
[19:27] rgahl: damn mIRC
[19:27] tmpvar: why not build a binding in js?
[19:27] rgahl: to what?
[19:28] rgahl: oh yeah, ok
[19:28] rgahl: just use sockets
[19:28] tmpvar: yeah
[19:28] tmpvar: much more debuggable / hackable
[19:28] pandark_ has joined the channel
[19:28] rgahl: sure, i don't why i always assume i need a c++ layer to port something like that into node... 
[19:28] rgahl: noob
[19:29] rgahl: s/don't why/don't know why/
[19:30] atmos: anyone know of an npm package that uses deps in the package.json offhand ?
[19:31] mrchrisadams has joined the channel
[19:31] joshbuddy has joined the channel
[19:32] tmpvar: atmos, jsdom does
[19:32] tmpvar: http://github.com/tmpvar/jsdom/package.json
[19:32] tmpvar: sorry, http://github.com/tmpvar/jsdom/blob/master/package.json
[19:33] atmos: ahh ok cool
[19:33] atmos: interesting that github doesn't display those inline
[19:34] atmos: man there are a whole lotta @ characters in the npm ls output
[19:35] bradleymeck: we are working on that, just have to iron out 1 more spec thing and then can finish up the new ls
[19:36] atmos: fictorial: ping ?
[19:37] mrchrisadams has joined the channel
[19:38] rnewson has joined the channel
[19:38] rnewson has joined the channel
[19:41] visnup has joined the channel
[19:43] mitkok has joined the channel
[19:44] mape: shackzter: that is only a temporary location
[19:46] DracoBlue has joined the channel
[19:47] visnup_ has joined the channel
[19:47] tjholowaychuk: bradleymeck: whats the main for?
[19:48] bradleymeck: if you include require("connect") it will default to that file as the module rather than just a directory
[19:48] tjholowaychuk: index.js is detected by require()
[19:48] tjholowaychuk: so i suppose either way works fine
[19:49] bradleymeck: i did not know that about require...
[19:50] tjholowaychuk: :)
[19:50] tjholowaychuk: i ignored it for a while because i hate having a file named index.js
[19:50] tjholowaychuk: but meh
[19:50] Aikar has joined the channel
[19:51] Fernandos has joined the channel
[19:53] Fernandos: hi
[19:53] Fernandos: how do I setup node-js?
[19:53] tjholowaychuk: Fernandos: ./configure && make && make install
[19:54] Fernandos: tjholowaychuk: ah. so I can't set it up without having full access to the server
[19:54] sechrist__ has joined the channel
[19:55] Fernandos: tjholowaychuk: I thought that node.js acts as client+server, so that it runs on the clientside
[19:55] Validatorian has joined the channel
[19:55] tjholowaychuk: nope
[19:55] tjholowaychuk: its a server
[19:55] tjholowaychuk: can act as a client too obviously but not client in the browser sense
[19:55] Fernandos: I see
[19:55] mscdex: why not just "./configure && make" then?
[19:55] mscdex: :P
[19:56] Fernandos: mscdex: I didn't say that compiling it is hard. I just wanted to know the way it works. Because I guessed that it is kind of p2p
[19:57] mscdex: no, i was referring to the comment about needing full access to the server
[19:57] mscdex: do you not have shell access?
[19:57] Fernandos: mscdex: no
[19:57] Fernandos: mscdex: not yet
[19:58] mscdex: i see, ok
[19:58] Fernandos: student^ :)
[19:59] Fernandos: Do you know if there is any p2p based clientside non-binary script?
[19:59] hassox has joined the channel
[20:00] Fernandos: something like node-js but running on the client
[20:00] mscdex: p2p completely client-side?
[20:01] Fernandos: yes
[20:01] mscdex: you can't listen on sockets in browsers
[20:01] mscdex: you're limited to outgoing connections via websocket or xhr
[20:02] Fernandos: websockets or xhr is ok
[20:02] Fernandos: altough I guess it's not that scalable as real sockets
[20:02] Fernandos: but that would be still suffcient
[20:03] mscdex: well, websockets are about as close to "real sockets" as you'll get
[20:03] mscdex: but not all browsers currently support them
[20:04] mscdex: you could have a pubsub type setup with a nodejs server and many clients, then clients could send each other messages through the server
[20:04] Fernandos: yeah, I know that's just those bleeding edge feature of html5 aware browsers 
[20:05] mscdex: poof!
[20:06] rgahl: presto change-o
[20:06] webr3: 10 points to Fernandos for guessing the future!
[20:06] ryan_gahl has joined the channel
[20:07] webr3: fernandos, it's an idea you shouldn't forget - I'd spend as much time as you can looking in to p2p on the client if I was you ;)
[20:08] Validatorian: anyone know how I can catch the ETIMEDOUT error? I get it daily and I don't know why, but I need my script to keep trucking along anyhow
[20:08] mscdex: webr3: you better hope he reads the logs :P
[20:09] mscdex: Validatorian: where does it occur?
[20:11] Validatorian: mscdex: I have two separate http clients that are called very often, and I generally get a timeout during the night when I'm sleeping, and I just got one a few minutes ago -- no rhyme or reason I can pinpoint
[20:11] ryah: Validatorian: add a listener to the client 'error' event
[20:11] Validatorian: I have an uncaughtException listener for process -- should I add one for the http requests?
[20:11] Validatorian: I do
[20:11] mscdex: it's a timeout during client connect?
[20:12] visnup has joined the channel
[20:12] Validatorian: mscdex: not sure at this point
[20:12] mscdex: oh
[20:13] fizx has joined the channel
[20:14] ryah: Validatorian: what's the trace?
[20:16] Validatorian: my logging is pretty shoddy -- all I get in console is 'ETIMEDOUT, Connection timed out' 
[20:19] isaacs[lunch]: shackzter: re: "how does the whole npm thing work"
[20:19] isaacs: shackzter: basically, the package author would use the "npm adduser" command to create an account on the registry, and then "npm publish" to push it live.
[20:20] ryah: Validatorian: sys.puts(err.stack)
[20:20] Judofyr has joined the channel
[20:21] atmos: isaacs: i lost my password :(
[20:22] isaacs: atmos: ugh.  ok.  that sucks.
[20:22] atmos: well, i might know it
[20:22] isaacs: atmos: i'll delete your acct, and then you can re-create it
[20:22] atmos: do i just base64 encode the value in ~/.authCrypt
[20:22] atmos: oh ok, that's easier
[20:22] atmos: i haven't pushed anything up yet
[20:22] isaacs: atmos: it'd be npm config set auth $(echo -n user:pass | base64)
[20:23] isaacs: but then you also have to set username and email
[20:23] atmos: can i push packages with unsatisfied deps up ?
[20:23] isaacs: atmos: atm, yes, but that's not great.
[20:23] visnup has joined the channel
[20:23] charlesjolley- has joined the channel
[20:23] isaacs: atmos: eventually, that will not be allowed.
[20:23] Validatorian: alright, I'll bring it up next time it happens, when I get the stack trace :)
[20:23] atmos: ahh ok, i didn't know about the username and email
[20:23] atmos: if you can nuke it that'd be perfect
[20:23] isaacs: suresure
[20:23] atmos: isaacs: i'm moving some stuff from kiwi and have deps i need people to push
[20:23] mattly has joined the channel
[20:23] isaacs: atmos: sure, i gotcha.
[20:24] atmos: i imagine they'll be resolved soonish so i'm not worried
[20:24] isaacs: atmos: the next version will have some better user/owner management tools
[20:24] isaacs: atmos: i was gonna do it for 17, but needed some time for stability and whatnot, so i've been holding off on any new features
[20:25] isaacs: atmos: ok, user acct deleted.  npm adduser atmos password email
[20:25] bradleymeck: isaacs while you are here how do you suggest we do the filtering on fields for ls, since single dash doesnt make sense, could use the double dash npm.config but idk if that seems right
[20:25] atmos: sweet, thanks dude
[20:25] isaacs: np
[20:25] bradleymeck: cause thats only on the arg immediately after the flag right?
[20:26] atmos: isaacs: is there push collaboration yet ?
[20:26] mape: tjholowaychuk: body-decoder     Buffers and parses json and urlencoded request bodies (extenable)
[20:26] isaacs: bradleymeck: what about npm ls filter="foo"
[20:26] isaacs: atmos: no, not yet.  one pacakge, one owner.  that needs to change soon.
[20:26] bradleymeck: could use equals, are their any other commands that use equals though?
[20:26] isaacs: bradleymeck: no, not atm.
[20:27] atmos: i'll wait to let fictorial push the redis stuff up then
[20:27] tjholowaychuk: mape: fuck
[20:27] isaacs: atmos: but if you push something of his, i can change the maintainer manually.
[20:27] tjholowaychuk: lol
[20:27] isaacs: but i'd like to not have that be the way we do things
[20:27] mape: tjholowaychuk: and is it suppose to end at body decode?
[20:28] atmos: isaacs: how do i tag something as stable ?
[20:28] tjholowaychuk: mape: right now yeah, need some more time to write up docs for the rest sorry
[20:28] isaacs: atmos: npm tag pkg version stable
[20:28] bradleymeck: even if their are multiple maintainers only 1 can push?
[20:28] isaacs: atmos: npm tag foo 1.0.0 stable
[20:28] atmos: cool
[20:29] isaacs: bradleymeck: it uses its own "maintainers" field, not from the package.json file
[20:29] bradleymeck: cool
[20:29] mape: tjholowaychuk: k np, perhaps add something like a footer so it is a "clean" end?
[20:29] tjholowaychuk: yeah good call mape
[20:29] mape: :)
[20:30] mikeal has joined the channel
[20:31] shackzter: isaacs: Its going good, i sent it to the upstream developer, i figure it might just as well go in there
[20:31] technoweenie has joined the channel
[20:31] shackzter: install works fine and minor changes from when using kiwi
[20:35] rnewson has left the channel
[20:36] mjr_ has joined the channel
[20:40] mrchrisadams has joined the channel
[20:43] LowValueTarget has joined the channel
[20:46] mjr_: 212 people in #node.js?  What's the world coming to?
[20:46] mjr_: It's coming to node I guess.
[20:47] ryan[WIN]: yeah we're getting too large
[20:47] ryan[WIN]: we're gonna have to have a test to determine who is old or new
[20:47] bradleymeck: what is ryan's favorite color?
[20:47] ryan_gahl: mine is blue
[20:48] ryan[WIN]:  ▲
[20:48] ryan[WIN]: ▲ ▲
[20:48] mjr_: a ratty old pink sweatshirt?
[20:48] ryan_gahl: i win
[20:48] mscdex: the triforce of courage!
[20:48] visnup: the triforce is your favorite color?
[20:48] mscdex: heh
[20:48] ryan[WIN]: speaking of triforces
[20:48] ryan[WIN]: ryan_gahl, how goes the unicode
[20:48] charlesjolley- has joined the channel
[20:48] ryan[WIN]: has it driven you insane like it has me already
[20:49] visnup: I don't think I want to be able to answer that question correctly anyway
[20:49] ryan[WIN]: do you look at unicode support everywhere and just facepalm
[20:49] ryan_gahl: heh, he thinks i'm the other ryan *ahl
[20:49] ryan[WIN]: the world is a lie
[20:49] ryan[WIN]: close enough
[20:49] ryan[WIN]: ;)
[20:50] mscdex: the cake is a lie
[20:50] ryan_gahl: my unicode is so awesome it's actually multicode
[20:50] AndChat has joined the channel
[20:51] bradleymeck: unicode information?
[20:51] ryan[WIN]: ryan_gahl, OUT!!! GGET OUT!!!  BLASPHEMY!!!
[20:51] ryan_gahl: whoa there
[20:51] ryan[WIN]: :D
[20:53] isaacs has joined the channel
[20:53] blowery: ACTION steps away, slowly
[20:53] joshbuddy has joined the channel
[20:54] ryan[WIN]: ACTION group hug?????
[20:54] mscdex: heh
[20:54] tmpvar: wow
[20:54] tmpvar: what is going on in here 
[20:54] mscdex: asynchronous group hugs?
[20:54] tmpvar: sure, ill get back with ya
[20:54] mscdex: haha
[20:54] joshbuddy has joined the channel
[20:54] joshbuddy has joined the channel
[20:55] mscdex: everything in here is asynchronous!
[20:56] ryan[WIN]: wow
[20:56] ryan[WIN]: I FORGOT TO SET A CALLBACK FUNCTION ON GROUP HUG
[20:57] ryan[WIN]: NOW WE'LL NEVER COMPLETE
[20:57] ryan[WIN]: ACTION sobs
[20:57] mostlygeek_ has joined the channel
[20:58] ryan_gahl: creationix: sup
[20:58] creationix: Sup
[20:58] kersny has joined the channel
[20:58] ryan_gahl: quick question - have you tried jsdom+extcore on the server yet?
[20:59] creationix: Nope
[20:59] ryan_gahl: k
[21:01] bmizerany has joined the channel
[21:02] Determinist has joined the channel
[21:04] rictic has joined the channel
[21:06] Determinist has joined the channel
[21:06] bradleymeck: didnt someone have an smtp module about?
[21:06] mape: think micheil was about to look at making one?
[21:07] keyvan has joined the channel
[21:07] tjholowaychuk_ has joined the channel
[21:09] derferman has joined the channel
[21:13] WALoeIII has joined the channel
[21:14] ivan has joined the channel
[21:17] ceej: creationix: how's it going?   Who's all meeting up tonight?
[21:22] bradleymeck: meetup? in tx?
[21:22] ceej: ye mckinney (dallas)
[21:22] aho has joined the channel
[21:22] mscdex: an smtp module would be awesome
[21:22] emma has joined the channel
[21:23] emma: hello :) i'm going to start learning javascript. Thanks for the wonderful interpreter!
[21:25] bradleymeck: :) just ask if you need any help
[21:25] bradleymeck: awww im in austin
[21:33] jsilver has joined the channel
[21:33] xer0xM has joined the channel
[21:35] keyvan has joined the channel
[21:36] AndChat has joined the channel
[21:40] bradleymeck: stupid jni invocation api is fail
[21:44] DracoBlue has left the channel
[21:46] kodisha_ has joined the channel
[21:47] markwubben_ has joined the channel
[21:59] ryah: event loops. gr
[22:00] derferman: anyone here successfully get ssl working on os x?
[22:02] ezmobius has joined the channel
[22:03] bmizerany: When calling a method in v8 (i.e. callback), how do you determine who should be the recv arg?
[22:04] bmizerany: i.e. Function::Call
[22:08] ryah: derferman: yes
[22:08] ryah: bmizerany: ?
[22:08] derferman: ryah: Is a specific version required?
[22:09] ryah: derferman: well, probably something modern, but not really
[22:09] derferman: ryah: K, the configure script finds openssl, so I must be doing something wrong
[22:10] saikat has joined the channel
[22:10] ryah: derferman: what's your error?
[22:10] micheil: mape: yeah, work will resume on it soon.
[22:10] micheil:  /cc bradleymeck 
[22:10] bmizerany: ryah: heh.  Function::Call takes a Handle<Object> as the first arg to be the scope in which the function executes (the `this`).  I'm not familiar enough with the rules in v8 to know how to determine who that should be and in what contexts.
[22:10] bradleymeck: mmm ah
[22:11] derferman: ryah: I am using the restler library to create a rest client. the call "this.client.setSecure("X509_PEM");" is failing
[22:14] jxson has joined the channel
[22:14] derferman: I don't set setSecure in the http.client api anymore, so I will change it
[22:14] ryah: derferman: the ssl api has changed
[22:15] derferman: ryah: K, I will make the necessary changes
[22:15] visnup_ has joined the channel
[22:15] ryah: derferman: just remove the argument
[22:16] ryah: derferman: that's probably enough
[22:17] JimBastard has joined the channel
[22:17] JimBastard: hey bradleymeck 
[22:17] derferman: sweet, thanks
[22:18] JimBastard has joined the channel
[22:18] bradleymeck: yessir?
[22:18] JimBastard: oops
[22:18] JimBastard: let me know if you have any questions about the JUP stuff
[22:18] JimBastard: < marak
[22:18] JimBastard: i responded to thread a bit
[22:18] micheil: ryah: do the tests show how to correctly use ssl on net.Server and net.Client?
[22:18] bradleymeck: just how to get haml -> jup automated
[22:18] JimBastard: :-D
[22:18] JimBastard: Ted.js
[22:19] JimBastard: as part of the workflow every developer runs a local node CI server (called Ted)
[22:19] JimBastard: he does a directory watch (on the views directory among other places)
[22:19] bmizerany: ryah: I guess I'm not making sense. :/  I think I found a way to do what I need with node::ObjectWrap
[22:19] jakehow has joined the channel
[22:19] JimBastard: then i do the parsing with fs modules and some magic
[22:19] JimBastard: and then bundle it up using some more magic
[22:19] JimBastard: its pretty straight forward stuff actually
[22:20] JimBastard: the only hard part is understanding how to turn nested directories into a nested json object
[22:20] JimBastard: but thats pretty easy too 
[22:20] bradleymeck: thats what i was looking for, getting the renders back as JUP compatable
[22:21] JimBastard: ?
[22:21] JimBastard: you mean like HAML => JUP ?
[22:21] bradleymeck: yes
[22:21] JimBastard: or HTML => JUP
[22:21] bradleymeck: haml pref
[22:21] JimBastard: ohh yeah
[22:21] JimBastard: so like i left a part out
[22:21] JimBastard: you need the HTML => JUP parser working
[22:22] ryah: micheil: yes, they do
[22:22] JimBastard: the one i have is kinda borked atm, we havent fully implemented it yet (still using html fragment strings in some places)
[22:22] micheil: okay, cool
[22:22] JimBastard: so you treat HTML as the intermediary layer
[22:22] JimBastard: since all the template languages eventually produce HTML
[22:22] JimBastard: so you do HAML => HTML => JUP
[22:22] JimBastard: there we go
[22:23] bradleymeck: mmm might have to make a parser for that then lol
[22:23] micheil: rendering HTML on server using JSDOM + YUI actually sounds like not a bad idea now.
[22:24] JimBastard: micheil: the HTML => JUP parser i wrote using JSDOM and jquery
[22:24] JimBastard: bradleymeck: we had 4 diffirent people here attempt it
[22:24] JimBastard: i got the closest with the DOM based parser
[22:24] micheil: jQuery, Dojo, YUI, whichever, all achieve effectively the same result
[22:24] JimBastard: second place went to my friend who reinvented sax-js
[22:24] JimBastard: also, he got last place
[22:24] JimBastard: the other guys were trying crazy regex
[22:24] JimBastard: mine almost works, but not quite
[22:24] JimBastard: id be down to assist if you wanted to try
[22:25] JimBastard: id like to see a pure JS one without DOM
[22:25] JimBastard: maybe using sax-js not sure
[22:25] micheil: JimBastard: you need the DOM if you want to build the html (not just do string conversion to html)
[22:25] bradleymeck: i rebuilt most of the tiddlywiki parser back in the day... wed be going regex nightmare route
[22:25] JimBastard: micheil: at the end of the day i just need a string, i use the DOM on the browser to render
[22:25] JimBastard: its a client-side templating app we talking about
[22:26] micheil: ah, well, doesn't really matter too much
[22:26] JimBastard: bradleymeck: if you could figure out HMTL => JUP i'll give you 10 internet points
[22:26] JimBastard: if you can do it without the DOM or without sax-js or an XML parser ill be like woah
[22:26] micheil: previously I was sorta thinking that doing the DOM on the server would be a PITA, but now I've seen what it can do, I'm impressed
[22:26] JimBastard: yeah, lets all thank tmpvar 
[22:27] bradleymeck: jsdom is really nice
[22:28] micheil: bradleymeck: had' to stop the show, didn't you?
[22:28] micheil: ;P
[22:30] tmpvar: thank you bradleymeck :)
[22:31] JimBastard: so my friend decided to use writeSync for no reason on this reporting node app. hes getting crazy results for some reason. hes using the FS module to write a file on every request. the files seem to be fuxor, data concating, truncating, malformed. does that make sense as a symptom of abusing sync fs write? or do you think he just borked his app that does the reporting?
[22:31] JimBastard: I SWEAR IT WASNT ME
[22:31] visnup has joined the channel
[22:31] JimBastard: hes getting like 10 requests a minute
[22:33] bradleymeck: tmpvar, still wanna try to merge in my dom stuff w/ yours someday, but got too much else on the plate
[22:34] tmpvar: yeah, i have a ton on my plate as well... where is your dom stuff again?
[22:35] stephenjudkins has joined the channel
[22:35] bradleymeck: its in Witch on github, but thats way outdated
[22:35] mattly has joined the channel
[22:36] bradleymeck: slick works on document and that was its original goal
[22:36] JimBastard: ohh so does anyone know if there is a JS tool that will do HTML => PostScript?
[22:36] JimBastard: is that even possible?
[22:37] bradleymeck: its not 1-1
[22:37] JimBastard: is it close?
[22:37] AndChat has joined the channel
[22:37] JimBastard: like how do HTML => PDF plugins work in other languages
[22:37] webr3: everything is possible; can't help beyond that
[22:38] JimBastard: thanks nub
[22:38] JimBastard: welcome to the node room
[22:38] sudoer has joined the channel
[22:38] webr3: ACTION hints, maybe look for html->pdf, pdf->postscript
[22:38] mscdex: javascript-fu!
[22:38] JimBastard: :-D
[22:38] bradleymeck: ghostscript can do something like that if memory serves
[22:38] xer0xM: html->pdf with java's flyingsaucer it's a mini-html parser rendering thang..
[22:39] JimBastard: nice, okay ill groogle some more see what i can do.
[22:39] xer0xM: html->pdf with prince is cool, but it isn't free
[22:39] webr3: pdf is only html3 anyways, and html3 is very like html5
[22:39] JimBastard: huh?
[22:39] bradleymeck: pdf is not at all html3
[22:39] micheil: exactly
[22:39] mscdex: html0.1.98
[22:39] micheil: because pdf is fairly manglated.. 
[22:40] saikat: actually, i just tweeted about this but forgot to include a #nodejs hashtag - does anyone know if a program exists that will record my Node.js REPL commands and turn them into unit tests?
[22:40] saikat: I think something like that exists for Haskell
[22:40] mscdex: pdf is fairly bloated
[22:40] micheil: saikat: best bet is to write a custom repl app
[22:41] micheil: saikat: because node-repl is only about 5 lines long
[22:41] JimBastard: saikat: interesting
[22:41] saikat: JimBastard: in other languages, to convert HTML -> PDF, you use a renderer
[22:41] micheil: the rest is the repl module
[22:41] saikat: for example QT
[22:41] saikat: will use webkit to render HTML to PDF
[22:41] JimBastard: yeah
[22:41] saikat: that's how i do exports to PDF in python
[22:41] JimBastard: hrmmm
[22:41] saikat: using PyQT
[22:41] JimBastard: so i can generate PDFs already in the browser and node
[22:41] JimBastard: but it requires PS
[22:41] JimBastard:   var doc = new pdf(); 	doc.text(20, 20, 'Hello world!');
[22:41] micheil: actually, there is JSPDF
[22:41] bradleymeck: pdf is a terrible format w/ its streams, but embedding encryption is amazingly nice
[22:42] JimBastard: yeah micheil im using most of that code
[22:42] micheil: search google for it, it generates pdf's on the client side
[22:42] JimBastard: wrapping it up nicely
[22:42] JimBastard: i know
[22:42] micheil: yeah
[22:42] saikat: there is JSPDF, but it depends on how much HTML you need to support
[22:42] JimBastard: its a bit messy 
[22:42] JimBastard: JSPDF doesnt use HTML
[22:42] JimBastard: it uses PS
[22:42] saikat: short of a full-fledged renderer, you won't get everything like floating divs
[22:42] tmpvar: pdf is horrible
[22:42] JimBastard: yeah it is
[22:42] tmpvar: really horrible
[22:42] JimBastard: i would just like a way on the server to send pdf() a html string though
[22:42] JimBastard: and get a basic PDF
[22:42] JimBastard: even if its not full featured 
[22:43] saikat: JimBastard: wkhtmltopdf is another way
[22:43] saikat: it's a standalone program
[22:43] saikat: that will probably work for you
[22:43] JimBastard: :-\
[22:43] JimBastard: i dont have a use case im just trying to release a module
[22:43] JimBastard: in pure JS
[22:43] saikat: and you can always make sys exec calls to a standalone binary
[22:43] JimBastard: you know, for the noders
[22:43] saikat: if you want to do something in pure JS, i think your best bet
[22:44] saikat: is to write bindings to QT
[22:44] saikat: look at how PyQT does it
[22:44] JimBastard: what is QT again? 
[22:44] mscdex: huhu
[22:44] saikat: or again, i guess it depends on how much work you want to put into it, but trying to write your own PDF printer
[22:44] saikat: will be a lot of work
[22:44] JimBastard: true life
[22:44] mscdex: never seen it
[22:45] mscdex: jspdf hasn't been updated in over a year
[22:45] webr3: is there nothing in c that you could port over and expose to node..
[22:45] saikat: QT is a lot of stuff - it's a cross-platform rendering engine, but it uses WebKit under the hood, so you only need the parts of it
[22:45] saikat: that let you just make library calls out to WebKit to tell it to do stuff
[22:45] saikat: like "print to PDF"
[22:46] tmpvar: QT? as in Quicktime?
[22:46] saikat: no not quicktime
[22:46] mscdex: huhu
[22:46] saikat: http://qt.nokia.com/products/
[22:46] mscdex: qt = cutie
[22:46] JimBastard: yeah i know qt, i didnt think you were talking about that
[22:46] JimBastard: i thought that was just for cross platform mobile
[22:46] tmpvar: oh, trolltech
[22:46] tmpvar: which is now nokia?
[22:46] mscdex: formerly of trolltech :P
[22:47] saikat: yeah, nokia bought them a year or two back i think
[22:47] mscdex: yep
[22:47] tmpvar: WOW
[22:47] tmpvar: im a bit out of the loop
[22:47] ajpiano has joined the channel
[22:48] saikat: though rendering PDFs this way would also require you to run a frame buffer - i do it with Xvfb on my server
[22:48] saikat: =/
[22:49] JimBastard: yeah this seems really brutal
[22:49] saikat: well
[22:49] saikat: yeah depends on your use case
[22:49] JimBastard: cant i just copy paste some code and make it all magic
[22:49] JimBastard: fuuuck
[22:49] JimBastard: :p
[22:49] bradleymeck: java jni interface w/ node is going to be wonky but step 1 is complete, java applets coming soon?
[22:50] saikat: it's less work than writing an actual converter, and it's more accurate/supports more HTML than any converter that i know of
[22:50] saikat: but it's definitely not a lightweight function call =)
[22:51] saikat: when i was trying to solve this problem, i know others who were actually opening up a firefox instance on their server to convert HTML over to PDF
[22:51] gf3 has joined the channel
[22:51] JimBastard: http://user.it.uu.se/~jan/html2ps.html
[22:51] JimBastard: looks like someone got it working in perl
[22:52] saikat: i bet you it doesn't support anything but fairly basic HTML
[22:52] JimBastard: thats all i want
[22:52] JimBastard: most people who need to dynamically create a PDF just need a basic html table or two
[22:52] JimBastard: like an invoice or a menu
[22:53] JimBastard: embedded images maybe
[22:53] saikat: oh ok - yeah i missed that you said that earlier, sorry =)
[22:53] JimBastard: id still have to port the perl script
[22:53] saikat: if that's the case
[22:53] saikat: check out PyPDF as well
[22:54] tmpvar: JimBastard, did you go home?
[22:54] JimBastard: aye
[22:54] saikat: (though i forget if that has direct html to pdf built in)
[22:54] saikat: and also
[22:54] saikat: xhtml2pdf
[22:54] Clooth: nighty night.
[22:54] saikat: was one of the more complete projects i think i saw
[22:54] JimBastard: thanks for the info, much appreciated
[22:54] saikat: np
[22:54] JimBastard: ill do some more research and see what i can do
[22:56] xer0xM: JimBastard have you looked at FlyingSaucer? It's Java.. but if you are looking for other examples of how people have done it, then it is a nice example.
[22:57] mw has joined the channel
[22:57] JimBastard: negative, will look xer0xM 
[22:57] xer0xM: https://xhtmlrenderer.dev.java.net/
[22:57] xer0xM: it's strick xhtml+css
[22:58] xer0xM: strick==strict, so I use another library to tidy the html up into xhtml...
[23:05] hassox has joined the channel
[23:06] kersny has joined the channel
[23:06] kodisha has joined the channel
[23:07] saikat: if i have function fn() { }, inside that function, is the "arguments" variable not an array type?
[23:07] saikat: trying to do things like arguments.slice and arguments.concat is throwing errors
[23:07] mde: saikat: It's an "array-like" object.
[23:08] mde: It has a length, but is missing the array methods.
[23:08] saikat: ah i see
[23:08] saikat: do people have techniques for manipulating it like an array?
[23:08] mde: You can do var args = Array.prototype.slice.call(arguments);
[23:08] mde: And args will be a real array you can use.
[23:08] saikat: hm, i just tried that and it threw an error, though maybe i did something wrong
[23:08] saikat: let me try again
[23:09] saikat: or actually, i tried something similar but not exactly that - thanks 
[23:09] mikeal: the old array slice trick
[23:09] mde: NP. It's an annoying deficiency in JS that's written into the spec.
[23:09] mde: Yeah. :)
[23:09] mikeal: it also mutates in really fucked up ways
[23:10] mikeal: unless you're just directly passing arguments off to a .apply you should always just slice it
[23:10] mde: I got a patch where the guy was iterating through it using simple "for." 
[23:10] mde: Which works fine, but means the iteration var is a string.
[23:11] saikat: also, i see things like this often in code: func.apply(this, arguments)
[23:11] saikat: for example, resig does it in this implementation of partial - http://ejohn.org/blog/partial-functions-in-javascript/#postcomment
[23:11] mikeal: if you modify it you can actually modify the variables in the scope as well, it's insane
[23:11] saikat: but why should you ever apply passing this as the this variable?
[23:11] mikeal: yeah, that's fine
[23:11] saikat: if you just call a function, isn't this by default what "this" is in that apply?
[23:11] saikat: god it's confusing to try to ask this question
[23:11] mikeal: if you don't mutate arguments before hand, and you just pass it off to a .apply, you don't need to slice it
[23:12] mikeal: this is magic :)
[23:12] saikat: yeah i read tho howtonode article about it
[23:12] saikat: and i think i understand how it works
[23:12] saikat: but in that code - why doesn't john simply do
[23:12] mde: It's magic, but it's usually manageable magic. 
[23:12] mikeal: the first argument to .appy is what "this" will be in that function execution context
[23:12] saikat: fn(args.concat...)
[23:12] saikat: right
[23:12] mikeal: it's predictable magic
[23:12] saikat: so my point is - why does it ever make sense to pass "this" as the first argument in that method
[23:12] mde: Because .apply gives you a specific execution context.
[23:13] mde: The first arg of apply is the context.
[23:13] saikat: yeah
[23:13] mikeal: prototype functions are called with this as the object
[23:13] mde: And you may want to call some function on some other specific object.
[23:13] mikeal: so if you want to call one of them like member method you need to pass the obj as the first argument
[23:13] saikat: oh i see - so in that case
[23:13] saikat: actually let me contrive an example
[23:13] saikat: to try to make sure i understand this
[23:14] mde: So like, foo.someMethod.apply(bar, [a, b, c]);
[23:14] saikat: right - but if i do foo.someMethod.apply(this, [a, b, c]) this refers to foo, right?
[23:14] mde: That calls foo's someMethod method, but "this" will be bar.
[23:14] mde: Yes.
[23:14] mde: But it ensures that "this" will correctly point to foo.
[23:15] mde: And in some calling contexts, it's necessary to do that.
[23:15] saikat: so in john resig's example, if i do test.x = partial(y, 5); foo.bar = x; foo.bar(6); will the context inside foo.bar be foo or
[23:15] saikat: will it be test
[23:15] saikat: or will it be global
[23:16] saikat: assuming y is defined as
[23:16] mde: I didn't look at his example. 
[23:16] saikat: y = function(x, y) { sys.puts(this); }
[23:16] saikat: http://ejohn.org/blog/partial-functions-in-javascript/#postcomment - just referring to his partial example
[23:18] mde: That's a lot of acrobatics. 
[23:18] saikat: basically, i'm trying to figure out - when he does fn.apply(this, whatever), does that "this" refer to the object that that partial is eventually called on or does that this refer to the object this function is on originally
[23:18] saikat: and if it's the former case, why ever pass "this" to apply
[23:18] saikat: heh you know what, i'm just going to test it out and see
[23:18] saikat: sorry
[23:18] mde: You're not really likely to pass a simple "this."
[23:18] saikat: yeah - which is why i wonder why he does it
[23:18] mde: Unless you're calling some *other* object's method on the current object.
[23:19] mde: So, like someObject.someMethod.call(this, a, b, c);
[23:19] mde: You may do it with a saved, local referece to "this" though, for callbacks.
[23:19] saikat: yeah, but that would still be something like
[23:20] saikat: var that = this; someObject.someMethod.call(that, a, b, c);
[23:20] saikat: not actually passing this to .call
[23:20] mde: var _this = this; var callback = function ()  { _this.someMethod.call(_this); };
[23:20] saikat: right?
[23:20] saikat: yeah
[23:20] mde: Only if it's in a function literal.
[23:21] mde: So in your example, "this" is still in scope.
[23:21] mde: In my example, it's down in that function, so "this" points to global scope.
[23:21] saikat: right
[23:22] mde: "this" is kind of magical, but you can use apply and call to make the behavior explicit.
[23:22] pgriess: tjholowaychuk: good luck w/ the dup2 binding ;)
[23:22] pgriess: tjholowaychuk: ry shot mine down a few weeks back
[23:22] mde: Okay, I'm off for a run. :)
[23:22] tjholowaychuk: :(
[23:22] saikat: thanks mde
[23:22] jsilver has joined the channel
[23:23] mde: Glad to help. JS is fun. :)
[23:23] pgriess: tjholowaychuk: maybe you'll have better luck. the use case i wanted it for was better solved other ways, which is why it was rejected. what do you want it for?
[23:23] ryah: tjholowaychuk: what's dup2 for?
[23:24] ryah: heh - just read the backlog :)
[23:24] ryah: tjholowaychuk: the problem with dup2 is that it's not portable to windows
[23:24] tjholowaychuk: ryah: I wanted to redirect the standard streams
[23:24] tjholowaychuk: ah
[23:24] tjholowaychuk: does not surprise me :D
[23:25] ryah: tjholowaychuk: if you're creating child processes, you can do that
[23:25] tjholowaychuk: ryah: was going to use it as part of process.daemonize()
[23:25] ryah: (see 92da636b977282d58f1d43560387f3e9bff6be4d)
[23:25] ryah: i think i want to do process.daemonize in c
[23:25] ryah: we can just use dup2 there directly
[23:26] tjholowaychuk: ah
[23:26] tjholowaychuk: shit
[23:26] tjholowaychuk: i started that but then i thought you would want it in js
[23:27] pgriess: what do you guys consider daemonization: detatch from tty?
[23:27] saikat: oh i just realized - his only reason for using apply isn't to set the context, it's so he can pass arguments as an array
[23:27] tjholowaychuk: pgriess: all i really need that is not within node so far (AFAIK) is the ability to redirect the std streams, and yeah detach 
[23:27] saikat: so that whole thing was just a red herring
[23:28] ryah: pgriess: yeah
[23:29] ryah: maybe setuid, etc
[23:29] hdon: hi all :) does node have any async database orm api?
[23:29] pgriess: yeah, that'd be handy
[23:29] hdon: or even non-orm? (since an orm could be built on top of a database api)
[23:29] pgriess: esp if you can setuid after the fork and before the exec
[23:29] ryah: hdon: mde is working on one
[23:29] pgriess: so that you can fully constrain the target process
[23:30] ryah: hdon: http://wiki.github.com/ry/node/modules#database
[23:30] hdon: ACTION clicks
[23:30] hdon: wow! there are a lot of node modules here!
[23:30] hdon: ryah, are all these modules written in javascript? or are they written in c/c++?
[23:31] ryah: some are c bindings
[23:31] hdon: cool. in my spare time i have been working on implementing the node api for gpsee, so i'll be excited to see what module we can share when it's done :)
[23:31] ryah: pgriess: i think daemonize won't exec()
[23:31] ryah: it'll just fork
[23:32] tjholowaychuk: yeah just fork
[23:32] ryah: which also is probably not portable to non-unix - but ...
[23:32] tjholowaychuk: does windows have fork?
[23:32] dandean has joined the channel
[23:32] ryah: well are windows users really going to daemonize?
[23:32] ryah: tjholowaychuk: no
[23:32] pgriess: will the parent exit after fork?
[23:32] tjholowaychuk: fuck them (IMO)
[23:32] ryah: pgriess: yes
[23:32] pgriess: ryah: hm. fwiw that plays very poorly w/ daemontools and the like that want to monitor the process they started
[23:32] ryah: hdon: cool
[23:33] tjholowaychuk: pgriess: would be cool to have that optional
[23:33] ryah: pgriess: hm, isn' that standard behavior?
[23:33] tjholowaychuk: the master process ideally could spawn some workers, then stick around detached from tty and perhaps spawn more when they fail
[23:33] tjholowaychuk: or something
[23:34] pgriess: ryah/tjholowaychuk: yeah. standard practice for daemons that believe they'll never crash. the problem is that you then need to roll your own health check + restart code when they do ultimately fail
[23:34] pgriess: if the master stays non-forked, daemontools/etc can do this for you
[23:35] pgriess: process.daemonize() is not a bad idea. there are certainly plenty of apps that do this. i just don't love it from an ops perspective
[23:35] tjholowaychuk: i dont care if it is in node or not really
[23:35] tjholowaychuk: but at least the tools to get it done would be nice
[23:35] batasrki has joined the channel
[23:35] pgriess: tjholwaychuk: +1
[23:36] pgriess: man, really wishing adium could tab-complete nicknames right about now ;)
[23:36] morganallen has joined the channel
[23:36] tjholowaychuk: hahah
[23:37] tjholowaychuk: yeah my last name sucks at least my short first name compensates :D
[23:38] pgriess: haha
[23:38] joshbuddy has joined the channel
[23:38] batasrki: tjholowaychuk: is there anything in express or node itself that would let me read configuration from a file, yaml style?
[23:39] tjholowaychuk: batasrki: I have yaml-js
[23:39] tjholowaychuk: or js-yaml or something
[23:39] tjholowaychuk: it is not a complete implementation though
[23:39] tjholowaychuk: just use json
[23:39] batasrki: json, of course, duh
[23:40] batasrki: my apologie
[23:40] batasrki: s
[23:40] tjholowaychuk: no worries!
[23:40] tjholowaychuk: yaml is kinda cool, i like it but it is not as pure, and json is the obvious choice for js related config
[23:41] batasrki: no, json makes total sense
[23:41] [[zz]] has joined the channel
[23:42] tjholowaychuk: gotta run
[23:44] kevm has joined the channel
[23:47] JimBastard: json always makes sense
[23:47] JimBastard: you can do anything in JSON
[23:48] JimBastard: i built a music looper that works off JSON songs
[23:48] JimBastard: now if only someone would give me a pipe to real audio processor
[23:48] JimBastard: and not afplay >>><<<<>><<<
[23:48] JimBastard: >><<
[23:49] JimBastard: http://connect.creativelabs.com/openal/default.aspx
[23:49] JimBastard: http://connect.creativelabs.com/openal/OpenAL%20Wiki/Source%20Code.aspx
[23:52] mostlygeek has joined the channel
[23:52] mostlygeek_ has joined the channel
[23:53] joshbuddy has joined the channel
[23:53] joshbuddy has joined the channel
[23:56] Aria has joined the channel
[23:58] rauchg has joined the channel
[23:59] rauchg: question
[23:59] rauchg: where did response.flush go?
[23:59] JimBastard: yo
[23:59] JimBastard: this data:application/pdf;base64 is some funny business
[23:59] JimBastard: let me tell you
