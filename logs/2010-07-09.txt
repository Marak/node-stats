[00:00] hassox: sorry for the ruby terminology ;)
[00:00] tjholowaychuk: hassox: yeah you can build your stack, and plug that stack into another stack
[00:00] mape: mde: not the last one I pasted? worked in ie678 and ff/chrome
[00:01] creationix has joined the channel
[00:01] hassox: how to be doing that?
[00:01] mde: mape: The last one I saw, IE versions had the problem where the div containing the textarea was 10px wider on the right than the empty div.
[00:02] mape: mde: http://mape.me/boxmodel.html doesn't that work in IE6 for you?
[00:03] coolston_bro has joined the channel
[00:05] mde: mape: I was using the same code, and the empty div underneath was 10px narrower, yes.
[00:05] mde: So, the textarea doesn't protrude, but that's because IE has that default behavior of expanding to fix.
[00:05] mde: Er.
[00:05] mde: To fit.
[00:05] creationix: hassox: I think tjholowaychuk put an example in the code base for that
[00:07] mape: tjholowaychuk: thought about adding minification to jade?
[00:07] tjholowaychuk: mape: it already sorta does, I dont have any fancy output
[00:07] tjholowaychuk: not even newlines right now haha
[00:08] mape: tjholowaychuk: http://gist.github.com/468831
[00:08] gb|work has joined the channel
[00:08] mape: something I threw together for my assetManager, not really sure if it should handle html but works fine for me when using single page with connect
[00:08] mape: (did that to get the pageSpeed raking up)
[00:08] gb|work: hi there, i wrote my first app, and it's really weird, FF fires one request, where chrome does two
[00:09] gb|work: does it have to do with connection keep-alive?
[00:09] gb|work: how can i prevent it from happening
[00:09] mape: tjholowaychuk: strips empty attributes and removes the " so attr="test" turns into attr=test but class="one two" stays the same
[00:10] creationix: Does this site load fast? http://205.186.160.54/  It's my new MediaTemple instance
[00:10] mape: not a lot of benefit really but fun to micro optimize
[00:10] rictic has joined the channel
[00:10] mape: creationix: loads fine
[00:10] creationix: mape: should be real fast on refresh because of the 304 responses
[00:11] mape: creationix: 1.56sec for page load on firefox running firebug from sweden
[00:11] mape: with cleared cache
[00:12] creationix: not bad
[00:12] creationix: I get 1.03sec here in California
[00:12] creationix: < 400ms with cache
[00:12] mape: the background takes the longest, 791ms
[00:12] creationix: yeah, it's a big file
[00:13] mape: 156ms with cache
[00:13] mostlygeek has joined the channel
[00:13] creationix: sweet, thanks
[00:13] creationix: I think I'll be moving my DNS soon
[00:13] mape: or well, 43ms now.. only fetching analytics
[00:14] gb|work: anybody? no word about keep alive?
[00:17] admc has joined the channel
[00:22] gwoo has joined the channel
[00:23] creationix: gb|work: probably favicon.ico, check the req.url
[00:23] gb|work: creationix: how would favicon.ico be a problem? this is my script http://pastie.org/1036879
[00:24] creationix: some browsers always request faviron.ico with every page load
[00:24] creationix: so you'll get two hits for each refresh
[00:24] gb|work: as a second request to the server?
[00:24] creationix: yep
[00:24] gb|work: that creates 2x times traffic
[00:24] creationix: yep
[00:24] gb|work: how can i prevent it from happening?
[00:25] creationix: it doesn't do it for ajax or resources
[00:25] creationix: just page loads
[00:25] gb|work: so you are saying if i go to google.com, it loads twice?
[00:25] gb|work: no
[00:25] creationix: there is nothing you can do about it, it's part of the browser
[00:25] creationix: just check the req.url and send a 404 if it's looking for favicon.ico
[00:25] gb|work: i guess you are right
[00:30] hpoydar has joined the channel
[00:32] pufuwozu has joined the channel
[00:38] tmpvar has joined the channel
[00:38] derferman has joined the channel
[00:40] brainproxy: I don't understand web development; I want to understand it but each time I get a little farther along my brain explodes and the complexity seems to go N^N
[00:40] brainproxy: :/
[00:41] brainproxy: ACTION is moaning
[00:41] Wandrewvious has joined the channel
[00:41] pufuwozu has joined the channel
[00:41] SubStack: web development covers a lot of ground
[00:41] bradleymeck_ has joined the channel
[00:41] brainproxy: heh, yep
[00:42] SubStack: with node it feels much more like regular programming
[00:42] brainproxy: yes, I'm enjoying node.js
[00:42] brainproxy: and I really really like Joose
[00:43] brainproxy: i dunno, my brain just thinks that way
[00:43] brainproxy: i find it easier than working with "regular" js
[00:43] SubStack: ACTION doesn't see a problem with javascript's vanilla object system
[00:43] SubStack: especially since objects are just types of closures
[00:45] SubStack: I don't like it when people expose what should be private members in javascript objects though
[00:46] brainproxy: you mean they don't build their objects properly?
[00:46] brainproxy: is that what you mean by "when people..
[00:47] Blackguard has joined the channel
[00:47] SubStack: sure
[00:47] SubStack: although I don't know about "properly" as there are some compelling reasons to do objects that way sometimes
[00:47] creationix: here is my idea for a proposed API interface for template languages: http://gist.github.com/468862
[00:48] creationix: the module itself it the compiler function that takes a string or buffer and returns a function that takes locals
[00:48] creationix: now to hash out async helpers...
[00:48] brainproxy: creationix: did you look at shotenjin-joosed?
[00:48] brainproxy: I've been using that for templating
[00:49] creationix: brainproxy: that looks cool
[00:49] brainproxy: the post-modern usage is really mind-bending
[00:49] brainproxy: in a good way i mean
[00:50] mikeal has joined the channel
[00:50] creationix: I don't like that it interprets the template 
[00:51] creationix: but sometimes compiling to a static javascript file isn't ideal I guess
[00:51] brainproxy: it seems pretty fast
[00:51] pufuwozu has joined the channel
[00:51] brainproxy: but maybe speed isn't your concern
[00:51] brainproxy: i mean in not liking the compile step
[00:51] creationix: partially speed, partially simplicity
[00:52] creationix: are there any good template languages with async I/O built in
[00:52] devinus has left the channel
[00:52] brainproxy: you could use it in combo with JooseX.CPS
[00:53] brainproxy: but I'm not trying to sell guys on joose, i just like it myself
[00:54] khug has joined the channel
[00:54] creationix: well, I'm not looking for something to use, but ideas for one I'm designing
[00:54] brainproxy: ah gotcha
[00:55] creationix: I seem to remember cramforce tweeting about async stuff, it must be joose he was talking about
[00:55] brainproxy: yeah, cramforce did joose v2
[00:55] brainproxy: samuraijack did v3
[00:55] brainproxy: which was a total rewrite
[00:55] brainproxy: of the internals
[00:55] khug: how is a templating language *not* asyncronous?
[00:56] brainproxy: maybe in reference to being able to render sections of a template w/o having the whole thing be evaluated and blocking
[00:56] brainproxy: not sure
[00:56] creationix: most templating languages just take in text and output text
[00:56] khug: wouldn't it just be up to the compiler to accept a callback?
[00:56] creationix: khug: yes, but proper placeholders and/or syntax for them is tricky
[00:57] khug: how so?
[00:57] brainproxy: creationix: are you rendering client side, server side, both?
[00:58] Yuffster has joined the channel
[00:58] khug: I guess the big question would be is templating the responsibility of the controller
[00:58] brainproxy: i guess it depends where the view is, right?
[00:59] khug: sounds like a case-specific question I guess
[00:59] brainproxy: i've got views client side, so controller calls view, and view renders template, with a tail-end call to jquery which does the dom manip
[00:59] creationix: brainproxy: both, yes
[01:00] creationix: the framework will pass in helpers to the view as local variables, things like "partial", but these often are async calls
[01:00] creationix: the template language needs to be able to handle async helpers and not finish till the helpers finish
[01:00] mattly has joined the channel
[01:00] creationix: or stream what's available as it comes in
[01:02] brainproxy: it seems like the xfer/stream time would be the main thing there that would hang you up and that template rendering would be take much less time relatively speaking
[01:02] brainproxy: but I get what you're describing
[01:03] creationix: brainproxy: well, a helper function might need to do a db query or load an external file (or on the client, do some ajax)
[01:03] khug: think streaming (x)html is practical?
[01:03] creationix: I'm not sold on the practicality of streaming the actual html to the browser, but some people think it's really important
[01:03] brainproxy: gotcha, so you want rendering before maybe even the helper is finished
[01:04] creationix: and It is in some cases
[01:04] creationix: for my use case, I don't mind buffering everything and sending it to the browser at once
[01:04] creationix: makes caching easier that way
[01:04] creationix: I just want async helpers to make the code much easier to read
[01:05] creationix: ok, back to prototyping...
[01:05] khug: how would an async helper / partial work, exactly? return promises?
[01:05] creationix: maybe, I'm not a fan of promises personally
[01:06] creationix: but it needs some sort of placeholder
[01:10] bradleymeck1 has joined the channel
[01:12] creationix: here would be an example of how to use an async capable template language: http://gist.github.com/468889
[01:12] creationix: quite a bit harder to implement
[01:13] sechrist has joined the channel
[01:14] creationix: brainproxy: ^
[01:14] brainproxy: looking
[01:17] brainproxy: in other words, in the async mode it would output up to ..name is..
[01:17] brainproxy: then pause
[01:17] brainproxy: then put the name
[01:17] brainproxy: and then finally the age
[01:17] brainproxy: understand it correctly or no?
[01:18] creationix: well, mine wouldn't stream
[01:18] creationix: it would store all the text into an array, fire off the async calls, and as they come back, fill in their places in the array
[01:18] creationix: then after all are done, call it's callback
[01:18] pydroid has joined the channel
[01:19] bradleymeck1 has joined the channel
[01:19] bradleymeck1: isaacs did you get that pull req?
[01:22] sechrist has joined the channel
[01:25] isaacs: bradleymeck: yeah, got it, haven't looked at it yet
[01:25] isaacs: thanks!@
[01:26] mrdoob has joined the channel
[01:26] JimBastard has joined the channel
[01:26] piratepenguin has joined the channel
[01:26] JimBastard: sup party people
[01:27] brainproxy: nada mucho
[01:30] ditesh|cassini has joined the channel
[01:32] satori: \o/ I worked out how to use js2c.py in waf. Now my addon is a single binary file.
[01:36] wattz: eveing sweethearts
[01:39] creationix: how about this style API for async capable templates? http://gist.github.com/468889
[01:39] creationix: brainproxy: ^
[01:43] creationix: now to figure out loops and conditionals
[01:44] creationix: shouldn't change the api, just make the compiler harder to write
[01:45] WarBot has joined the channel
[01:46] brainproxy: creationix: looks pretty smooth
[01:47] creationix: yeah, but I just realized that loops and conditional are MUCH harder to implement, but I don't think that's a problem with the interface itself
[01:47] mape: creationix: streaming ie flushing?
[01:48] creationix: mape: I'm not sold on the importance of it
[01:48] creationix: it makes the code much harder to write
[01:48] mape: it is major for front end development
[01:48] creationix: mape: usually ajax on page load can do the same thing
[01:48] mape: Being able to flush right after you send the header so it can start fetching resources without waiting for the rest
[01:49] creationix: but yeah, streaming html is better from the browser's point of view
[01:49] mape: ajax on page load? You want the css to start loading as soon as possible
[01:49] bradleymeck1: not sure you need to separate callback funcs and non-callback funcs
[01:49] brainproxy: I don't pretend to understand this, but I know that JooseX.Namespace.Depended does a trick where "modules" loaded with its use: get pulled in asyncronously (i.e. xhr or filesystem), and some temp placeholder stuff is used in the body:, then when the use: items have all loaded
[01:49] brainproxy: bang, it gets eval'd
[01:49] creationix: brainproxy: why not, it's not hard and makes it easier to write helpers
[01:49] mape: creationix: if you have 200KB of html it is better to flush the header so the browser can start getting the css instead of getting the remaining html
[01:49] brainproxy: sure, i mean that sounds similar to what you're doing, except in that case it's not templates per se
[01:50] mape: or well not instead, while its getting the rest of the html it starts fetching the css
[01:51] creationix: mape: agreed, it is useful, but I don't think it needs to be implemented in the compiler, it's a special enough case that you can do multi-step renders and flush manually in your application logic
[01:52] creationix: have two templates, one for the header and one for the rest
[01:53] mape: yeah or a tag in the template for flushing, if you are doing templates like django, which is really nice
[01:53] creationix: hmm, it does suck to break up your page into invalid partials just to get flushing
[01:53] creationix: maybe it's not too hard to add in streaming
[01:53] bradleymeck1: streaming is always nice
[01:54] creationix: I still think it's better to ajax data to the browser and render it client-side when possible. 200k of html is not a good sign
[01:54] bradleymeck1: why not stream each part of a template that doesnt need a callback up til a buffer limit, then stream out async stuff as it finishes (still filling buffers)
[01:55] mape: creationix: well that isn't progressive enhancement
[01:55] creationix: actually, it's not too hard to add streaming to my code, I just need a place-holder marker
[01:55] creationix: let me try that...
[01:56] creationix: how about id you don't supply a callback, it returns a stream object
[01:56] creationix: s/id/if/
[01:56] creationix: that seems like a sane API
[01:57] bradleymeck1: the adv to streaming and buffers is you dont have to hold a complete template, sounds sane
[01:57] mape: Does anyone rember a recent post about removing sprites and base64ing it instead?
[01:57] bradleymeck1: similair to what im using
[01:59] bradleymeck1: no clue about removing sprites
[02:00] markwubben has joined the channel
[02:00] cadorn has joined the channel
[02:01] mape: thinking of adding it to the assetsManager, just fetching all the files linked in the css and inject them as base64
[02:02] benbinary has joined the channel
[02:02] meso_ has joined the channel
[02:06] bradleymeck1: as data urls or just strings?
[02:07] mape: they are the same?
[02:07] bradleymeck1: data urls fail on ie6 if memory serves
[02:07] creationix: mape: success! http://pastie.org/1036939
[02:08] creationix: that's not so bad after all
[02:08] mape: bradleymeck1: yeah. then those get served another css
[02:08] mape: creationix: nice :)
[02:08] kodisha_ has joined the channel
[02:09] creationix: now to write a real compiler and not just test code
[02:10] c4milo has joined the channel
[02:10] kodisha__ has joined the channel
[02:19] aurynn has joined the channel
[02:19] hdon has joined the channel
[02:20] nrstott has joined the channel
[02:20] nrstott has joined the channel
[02:20] benbinary has joined the channel
[02:21] mikeal has joined the channel
[02:21] rtl has joined the channel
[02:21] khug has joined the channel
[02:26] sh1mmer has joined the channel
[02:27] khug: been noodling abut with the whole streaming content thing, and have run into a potential issue - what if an async helper throws an error? the headers would have already been sent, thus no 50x could be returned
[02:28] bradleymeck1: id just inject a script tag to redirect
[02:28] khug: ew
[02:28] stepheneb has joined the channel
[02:28] bradleymeck1: best youre gonna get and almost everyone has js enabled
[02:29] khug: I think I'd prefer buffering 
[02:29] khug: but that is one solution
[02:29] bradleymeck1: could just be an option for one or the other
[02:30] bradleymeck1: kinda like php's option to buffer, otherwise it streams
[02:31] khug: hmmmm: http://en.wikipedia.org/wiki/Chunked_transfer_encoding
[02:33] bradleymeck1: wonder how browsers deal w/ loading assets using that
[02:34] bradleymeck1: still wont resolve the status code issue
[02:34] admc_ has joined the channel
[02:34] admc has joined the channel
[02:35] khug: that's true
[02:37] WALoeIII has joined the channel
[02:38] Aaron_ has joined the channel
[02:38] bradleymeck1: i guess for curl etc you gotta have it buffered
[02:40] SamuraiJack has joined the channel
[02:40] khug: yep, looks like buffering is the way to go :-/
[02:41] khug: will make templating libs easier to write 
[02:42] mde: khug: Right, streaming to templates for anything other than a simple list is pretty hard.
[02:42] everton has joined the channel
[02:42] jimmyjazz14 has joined the channel
[02:43] bradleymeck1: nah, just make restful api's buffered, i think leaving browsers to streaming is fine for almost anything as long as you allow script injection if there is an error, which is not the best but a solution
[02:43] mde: Even loading all the partials async means you have to jump through some hoops.
[02:43] khug: and there's really no way to tell if there's a possible function inside a getter that will ruin your day
[02:44] jimmyjazz14: is there a good way to create a blocking function from a nonblocking call?
[02:44] bradleymeck1: nope doesnt work like that, you can chain stuff though
[02:44] jimmyjazz14: there is no escape hatch?
[02:45] isaacs: jimmyjazz14: nope
[02:45] mde: Exactly for even a moderately complicated UI, if you want to stream, you're probably better off starting with a client-side stub, and rendering client-side.
[02:45] bradleymeck1: unless it provides blocking yep
[02:45] isaacs: jimmyjazz14: there are Sync fs calls, though
[02:45] isaacs: jimmyjazz14: like fs.stat vs fs.statSync
[02:45] jimmyjazz14: isaacs: I am actually looking to block on an exec call
[02:45] isaacs: jimmyjazz14: yeah, no way to block on sub processes
[02:46] bradleymeck1: ppl do seem to ask that a lot though
[02:46] isaacs: maybe there ought to be a child_process.spawnSync?  Is that even possible?
[02:46] jimmyjazz14: I find that a little unfortunate, though I can kinda understand the reasoning for leaving that out
[02:46] bradleymeck1: it is possible, but it means a wait loop :/
[02:48] isaacs: bradleymeck: i mean, is it possible without something dumb like a wait loop ;)
[02:48] isaacs: bradleymeck: like, at the posix level
[02:48] isaacs: i don't think there is
[02:48] bradleymeck1: dont think so, esp since we could be getting events 
[02:48] aheckmann has joined the channel
[02:48] isaacs: although, the execv calls are blocking normally, right? in the C?
[02:49] bradleymeck1: yea, but they arent waiting on events normally like fs reads to my knowledge
[02:50] jimmyjazz14: I kinda thought something like process.waitTick() might exist 
[02:50] isaacs: jimmyjazz14: nope
[02:50] bradleymeck1: wouldnt make sense to have that
[02:51] isaacs: jimmyjazz14: there used to be something like that
[02:51] isaacs: when everything was promises, there was a Promise#wait function
[02:51] isaacs: but it sucked
[02:51] bradleymeck1: ewww wait loops
[02:51] isaacs: using it a lot pretty much ensured that you'd have some race condition somewhere.
[02:52] isaacs: when it returned to that stack, the state might've changed, and all kinds of things could go crazy and weird
[02:52] jimmyjazz14: isaacs: yeah understandable but using it with caution could be useful
[02:52] bradleymeck1: could be useful, but can be emulated w/ evenemitters w/o possible race cond
[02:52] isaacs: jimmyjazz14: the problem is that it is almost impossible to summon enough caution for it to be safe.
[02:53] isaacs: jimmyjazz14: chaining callbacks is easy once you wrap your brain around it.  check out step or the promise-chain.js and chain.js inside npm
[02:53] isaacs: jimmyjazz14: npm uses callback chaining for everything.  the nice thing is that it means that fs ops and http ops and child processes all have a very similar interface.
[02:54] jimmyjazz14: isaacs: I have no trouble with chaining callbacks really, I'm pretty used to the concept, I just wanted to build something a little like require() but for settings files
[02:54] bradleymeck1: can still use blocking fs calls for things like that
[02:55] isaacs: jimmyjazz14: that's interesting.
[02:55] jimmyjazz14: bradleymeck yeah thats true, I was just trying to call 'hostname' to determine the hostname of the server (to load up a settings file based on the server hostname)
[02:55] isaacs: jimmyjazz14: what do you end up having to use child processes for?
[02:55] isaacs: oic
[02:56] jimmyjazz14: there are other ways of doing what I want though I think
[02:56] isaacs: process.env.HOSTNAME perhaps?
[02:56] jimmyjazz14: Javascript needs 'do' blocks like in Haskell
[02:56] isaacs: jimmyjazz14: do { ..... } while false;
[02:57] isaacs: jimmyjazz14: do { ..... } while (false);
[02:57] jimmyjazz14: isaacs: no its a different thing
[02:57] isaacs: jimmyjazz14: what are 'do' blocks?
[02:57] isaacs: jimmyjazz14: like ruby's blocks?
[02:57] jimmyjazz14: its not a looping construct, its for flow control
[02:57] phiggins has joined the channel
[02:58] isaacs: do { ... } while (false) isn't exactly a looping construct either, since it doesn't loop
[02:58] isaacs: it's a breakable block
[02:58] isaacs: it is abusing the looping construct syntax, though ;)
[02:58] jimmyjazz14: isaacs: do block are something like the following... do { settings <- getSettings; doSomething(settings) }
[02:59] jimmyjazz14: which would in javascript turn into something like... getSettings(
[02:59] jimmyjazz14:   function(settings){
[02:59] jimmyjazz14:     doSomething(settings)
[02:59] jimmyjazz14:   });
[02:59] jimmyjazz14: (sorta)
[02:59] bradleymeck1: so its a chain that doesnt explicitly show itself?
[02:59] isaacs: jimmyjazz14: you should check out narrative
[02:59] jimmyjazz14: technically its for monads
[02:59] nrstott: ug
[02:59] jimmyjazz14: but monads are kinda like chains of functions (sorta)
[03:00] nrstott: next youll be getting us to use FRP ;0
[03:00] isaacs: jimmyjazz14: i think maybe javascript and haskell are just too different to say "x needs y's z" about them
[03:00] bradleymeck1: it looks pretty but seems like it takes away from clarity of separate execution blocks, kinda like evil goto
[03:00] tmpvar has joined the channel
[03:01] jimmyjazz14: isaacs: not really, Haskell uses the idea of continuation passing style very much (much like node does)
[03:01] nrstott: jimmyjazz14, languages that compile to JS are the only hope for such features
[03:01] isaacs: jimmyjazz14: node doesn't actually use continuation passing, though, it's callback passing, which is similar enough to be confusing, but different enough to be different :)
[03:02] jimmyjazz14: isaacs: how do you think they are different?
[03:02] nrstott: it would be nice to have a langauge that compiled to JS that had some of the Erlangy syntax for message passing
[03:02] bradleymeck1: callbacks invoke a stackframe
[03:02] jimmyjazz14: nrstott: there was once a project to make haskell compile to javascript but it died :(
[03:03] isaacs: jimmyjazz14: that's a huge subject, and i gotta leave soon.
[03:03] jimmyjazz14: isaacs: heh its okay
[03:03] bradleymeck1: and you can return values from callbacks while spawning multiple
[03:03] isaacs: jimmyjazz14: you know, node was almost in haskell?
[03:03] nrstott: jimmyjazz14, I think Haskell is going to stay in the realm of academia for the foreseeable future :)
[03:04] nrstott: isaacs, really?  wow
[03:04] jimmyjazz14: isaacs: they are similar enough where the names are at least almost interchangeable IMO
[03:04] isaacs: jimmyjazz14: ryah chose javascript because v8 came out, and was fast, and it already has a tradition of callback-passing for IO, so there was cultural acceptance of non-blocking-ness
[03:04] isaacs: jimmyjazz14: yeah, conceptually continuations and callbacks are very very similar, it's true.
[03:05] isaacs: jimmyjazz14: "do this thing, and when you're done, go over there and do that thing"
[03:05] jimmyjazz14: nrstott: hopefully my web framework will change that a little (Snap Framework)
[03:05] nrstott: jimmyjazz14, link?
[03:06] jimmyjazz14: http://snapframework.com/
[03:06] nrstott: I like Haskell a lot, but it was too hard to try ot use it for 'real' projects when I was messing with it
[03:06] brianmario has joined the channel
[03:06] jimmyjazz14: though for the record I still think node is cool :)
[03:06] isaacs: haha
[03:06] isaacs: looking at your benchmark bargraph
[03:06] jimmyjazz14: nrstott: yeah there is no doubt that it is hard
[03:07] isaacs: poor little rails, can't even get off the 0 line...
[03:07] jimmyjazz14: isaacs: yeah those benchmarks need some work though
[03:07] nrstott: jimmyjazz14, why Haskell instead of Erlang or OCaml
[03:08] jimmyjazz14: nrstott: Haskell is unique do to its pure nature, and its type system is amazing
[03:09] isaacs: jimmyjazz14: cabal is the package manager for haskell?
[03:09] nrstott: I don't argue about the value of Haskell, just it seems like you would've ahd to reinvent a lot of things to make a web framework in haskell
[03:09] jimmyjazz14: isaacs: yeah
[03:09] nrstott: whereas those helkper libs already exist in Erlang and OCaml
[03:09] bradleymeck1: wonder if coffee is going to make callbacks look like continuations
[03:09] isaacs: jimmyjazz14: have you played with npm?
[03:09] jimmyjazz14: nrstott: thats true but that was sorta the point
[03:10] jimmyjazz14: isaacs: only a little
[03:10] jimmyjazz14: why?
[03:10] isaacs: i'm always curious when people have used another package manager a bunch, what they like about it, etc.
[03:10] isaacs: ACTION wrote npm
[03:10] wilmoore has joined the channel
[03:11] jimmyjazz14: nrstott: Haskell actually has a very robust community so we did not have to reinvent as much as you might think
[03:11] isaacs: especially when people say things like "wow, this is really a pita in npm, you should do it like X, it's so much easier"
[03:11] sudoer has joined the channel
[03:11] nrstott: jimmyjazz14, last i looked into haskell the only thing written in haskell was darcs and the only thing darcs was used for was source control for haskell :)
[03:11] jimmyjazz14: isaacs: I've used so many package managers I can't even count them now
[03:11] mikeal: apache releases take forever!
[03:11] nrstott: glad to hear its evolving though
[03:11] jimmyjazz14: nrstott: you should look again
[03:12] mikeal: oh man, haskell
[03:12] mikeal: poor poor haskell
[03:12] mikeal: so much great shit, completely ruined by the academics that drive it :)
[03:12] isaacs: jimmyjazz14: lmk when you get around to building/installing/publishing stuff with npm.  i'll be curious about your feedback.
[03:13] jimmyjazz14: isaacs: are you the author?
[03:13] isaacs: jimmyjazz14: yeah
[03:13] jimmyjazz14: ok
[03:13] bradleymeck1: isaacs any plans on linking to repos?
[03:13] nrstott: isaacs, speaking of npm, when I install it on cygwin, it just makes a node dir in ../lib from my current dir... is this the expected behavior?
[03:13] isaacs: nrstott: hm... that's odd.
[03:14] isaacs: nrstott: it should be in ../lib/node from the node exe
[03:14] mikeal: awe shit
[03:14] mikeal: issacs has to debug on windows now ;P
[03:14] nrstott: isaacs, it just does it from my current dir
[03:14] isaacs: mikeal: /o\
[03:14] isaacs: nrstott: well, that's not right.  what version of node?  what's the process.execPath in the repl?
[03:15] nrstott: 0.1.99-20-gbbdd61d
[03:17] isaacs: hey, gotta run
[03:17] isaacs: nrstott: feel free to post an issue
[03:18] isaacs: nrstott: it seems like it's not getting the right process.installPrefix or process.execPath
[03:19] softdrink has joined the channel
[03:20] donspaulding has joined the channel
[03:23] sixthgear has left the channel
[03:24] ajpiano has joined the channel
[03:33] bpot has joined the channel
[03:34] tilgovi has joined the channel
[03:36] concernedcitizen has joined the channel
[03:50] mape: Nice, got it working
[03:51] creationix has joined the channel
[03:56] mape: throw if a couple of css files, they get minified, merged into one file, vendor prefixes are generated and all images linked in the css are replaces by base64 so all the http requests are gone, and then you set a far ahead header that you invalidate with the modified string supplied in the template
[03:57] mape: gotta love node
[03:59] pufuwozu has joined the channel
[04:00] creationix: mape: streaming interface http://gist.github.com/468889
[04:00] blorean has joined the channel
[04:00] creationix: mape: sounds like your plugin is coming along great
[04:00] creationix: put it on the connect wiki
[04:00] mape: Yeah really liking it.
[04:00] mape: Yup will do
[04:01] mape: Only think I haven't figured out is how to handle html
[04:01] mape: Since I have to create group, and they are cached as buffers
[04:01] mape: Not sure how to took that into routers and whatnot
[04:01] programble has joined the channel
[04:01] programble: :\
[04:01] mape: Don't want to have to create a group for every single path
[04:02] programble: hello
[04:02] mape: hi
[04:02] programble: i found node-wargame randomly on github :P
[04:02] programble: it doesn't see me?
[04:02] mape: The explore page? :)
[04:02] programble: yeah
[04:02] creationix: programble: how about now?
[04:03] mape: programble: Seems it can't geolocate you
[04:03] programble: beep
[04:03] programble: er, how does it do that?
[04:03] mape: curtis@botters/programble
[04:03] mape: Whoises you and uses the host
[04:03] mape: And since you are cloaked it can't find it
[04:03] programble: hm.. my vhost
[04:03] programble: can you even disable that on freenode?
[04:03] programble: just for a bit
[04:04] mape: Not sure, most people don't have it so not a big issue 
[04:04] jsilver has joined the channel
[04:04] mape: But the bot only works on network that don't cloak the host
[04:04] jsilver:  hello ^ -> 
[04:04] mape: unless you alter the code of the bot
[04:04] jsilver: what's cool in node land
[04:04] jsilver: hi all friends
[04:05] mape: could do something like !location Stockholm, Sweden and have the bot use googles APIs to find that
[04:05] mape: should be easy enough to add
[04:05] mape: Probly only like 10 lines of code
[04:05] programb1e has joined the channel
[04:05] programb1e: unidentified..
[04:06] mape: There you go
[04:06] programb1e: oh yay i see me
[04:06] mape: programb1e: peww peew
[04:06] programb1e: hehe
[04:06] programb1e: well i have to say
[04:06] programb1e: that is cool
[04:06] mape: Yeah people seem to like it
[04:06] programb1e: tbh, usually github explore turns up shit
[04:07] mape: old rust?.. :P
[04:07] programb1e: yeah
[04:07] pufuwozu has joined the channel
[04:07] creationix: well, the trending repos are purely organic growth, the featured repos are everything thechangelog links to
[04:07] programb1e: usually mostly rails crap too
[04:07] chilts: programb1e: peoowwwwnnnn
[04:07] chilts: heh
[04:07] programb1e: chilts: long distance
[04:07] chilts: yeah, it's a long range missile :)
[04:07] creationix: I'm one of the changelog authors, so if you come across a neat node project that needs some github featuring let me know
[04:08] mape: creationix: .. Like wargames? ;)
[04:08] mape: Guess its old news now though, but good to know
[04:08] chilts: I was on the front of GitHub once (with my distributed bug tracker) ... though that was 2 years ago now :)
[04:08] creationix: yeah, I try to not abuse my power
[04:08] programb1e: its ok, ive never written anything of interest
[04:08] programb1e: at all
[04:08] chilts: good plan
[04:09] creationix: I do have to write up an article with everything I feature, so it's a bit of work too
[04:09] programb1e: :O i feel like a target
[04:09] programb1e: creationix: pew pew
[04:09] creationix: mape: is there a way to fix my geolocation position
[04:09] chilts: creationix: heh, that's so funny, I knew your nick on GitHub and now I've just related the two (here and there) ... funny when that happens
[04:09] creationix: I'm wrong both at home and at work
[04:10] programb1e: it got mine right :)
[04:10] mape: creationix: sure give the the coordinates and I'll alter it in the cache
[04:10] creationix: hmm, how do I look up coords?
[04:10] creationix: I'm in Palo Alto, CA 94301
[04:11] mape: http://itouchmap.com/latlong.html
[04:12] creationix: 37.446654,-122.164334
[04:12] creationix: that's for my house
[04:12] tmpvar has joined the channel
[04:12] creationix: work is a couple of blocks away, so close enough
[04:12] WarBot has joined the channel
[04:12] creationix has left the channel
[04:12] jsilver has joined the channel
[04:12] creationix has joined the channel
[04:12] creationix has left the channel
[04:14] programb1e: mape: pew
[04:15] rtl has joined the channel
[04:15] pufuwozu has joined the channel
[04:15] creationix has joined the channel
[04:15] mape: Hmm slow day, usually this time of day the channel is the most active
[04:16] programb1e: ACTION hopes he will eventually have a good idea for a web app/site
[04:16] khug has joined the channel
[04:16] creationix: mape: yay, I moved!
[04:16] mape: creationix: Jup
[04:16] pavan_ has joined the channel
[04:16] liucougar has joined the channel
[04:18] bradleymeck1 has joined the channel
[04:19] programb1e: too bad most people have cloaks though
[04:19] benburkert has joined the channel
[04:19] mape: programb1e: huh? most don't
[04:20] programb1e: in the channel i would want to set it up in, a lot do
[04:20] mape: Ah k, yeah depends on the network mostly
[04:21] mape: But yeah, if the channel is a close group of people you could implement a !location command for manual changes
[04:22] programb1e: i suppose
[04:22] programb1e: well the rest on github explore are shit..
[04:22] programb1e: as usual
[04:23] mape: hard to write something that most people enjoy
[04:24] mape: So you poked around with node before or this is the first encounter?
[04:24] programb1e: never even heard of it
[04:24] programb1e: not much of a JS person
[04:25] WarBot has joined the channel
[04:25] matt_c has joined the channel
[04:25] joshbuddy has joined the channel
[04:25] mape: Well you are missing out
[04:25] programb1e: :O http://github.com/mape/node-wargames/blob/master/public/js/raphael.js
[04:25] programb1e: that makes me want to die
[04:26] mape: Well that is minified code
[04:26] nate__ has joined the channel
[04:26] programb1e: make chrome want to die too apparently
[04:26] nate__: has anyone had any luck building on an old mac with powerpc
[04:26] mape: programb1e: http://github.com/mape/node-wargames/blob/master/public/js/jquery.wargames.js
[04:26] mape: easier to read :)
[04:26] mape: Hopefully.. hehe
[04:27] skampler: hello world
[04:27] nate__: trying to build on powerpc I get Build failed:  -> task failed (err #1):          {task: cc ares_strcasecmp.c -> ares_strcasecmp_1.o}
[04:27] mape: skampler: There you go :)
[04:27] derferman has joined the channel
[04:27] skampler: sweet :)
[04:29] nate__: anyone have any ideas how to solve?
[04:29] mape: nate__: can't find anything on the google group?
[04:29] nate__: nope
[04:30] rictic has joined the channel
[04:31] derferman has joined the channel
[04:31] nate__: only that v8 doesn't build on powerpc but sometimes someone finds a trick
[04:31] nate__: thought I would ask
[04:31] nate__: suppose I need to upgrade
[04:31] mape: nate__: To be honest I'm supprised you haven't
[04:31] nate__: lol
[04:31] mape: My Apple products tend to break right before a new release
[04:31] nate__: yeah
[04:31] mape: Like clockwork
[04:32] programb1e: ew, apple
[04:32] nate__: I only use the laptop occationally
[04:32] mape: Have an iMac but use the laptop as a third monitor for twitter/irc
[04:33] mape: Nice to have something you can move around
[04:34] JSNewbie has left the channel
[04:36] programb1e: compiling node...
[04:37] programb1e: mape: how do i install the dependencies?
[04:37] programb1e: for wargames
[04:37] mape: programb1e: get npm
[04:38] mape: http://github.com/isaacs/npm
[04:38] mape: then you do sudo npm install irc && sudo npm install websocket-server
[04:38] mape: and you should be pretty much set
[04:38] mape: might have to change a require path but nothing to annoying
[04:39] programb1e: well this is strange
[04:40] programb1e: how can it permission denied when running as root/
[04:40] programb1e: ohhh
[04:40] programb1e: silly me
[04:41] SamuraiJack: hello
[04:42] SamuraiJack: I recall there were a debuger for node but can't find exactly where was it
[04:42] SamuraiJack: could someone point?
[04:42] mape: eclipse?
[04:42] SamuraiJack: no, something text-based
[04:42] SamuraiJack: that was `ndb` or something, I saw it on github..
[04:43] programb1e: mape: can't find 'node-websocket-server/lib/ws'
[04:43] mape: yeah try just websocket-server
[04:45] programb1e: :\
[04:45] mape: no?
[04:45] programb1e: no its running
[04:45] programb1e: web server doesnt appear to be working though :\
[04:45] mape: yeah you need to change the path to the server in jquery.client.js
[04:45] mape: so its pointing to your server
[04:45] SamuraiJack: oh, I guess its modules page, nvm
[04:46] mjr_ has joined the channel
[04:46] programb1e: mape: i did
[04:47] mape: have a fw on the machine running it?
[04:47] mape: or running a httpproxy?
[04:47] programb1e: no, im trying with localhost
[04:47] siculars has joined the channel
[04:48] mape: getting errors in the console?
[04:48] programb1e: no...
[04:49] mape: and no errors in the terminal?
[04:49] programb1e: just this
[04:49] programb1e: Failed update, frigg lacks coordinates.
[04:49] programb1e: Fetching position for WGBotParen@67.68.24.98
[04:49] programb1e: Failed update, programb1e lacks coordinates.
[04:49] programb1e: Fetching position for programb1e@67.68.24.98
[04:49] mape: so that works
[04:49] mape: sure you aren't using a http proxy for the browser?
[04:50] programb1e: nope
[04:50] programb1e: er
[04:50] programb1e: yes
[04:50] programb1e: yes, no
[04:50] jsilver: sup guys
[04:50] programb1e: port 8080 is open
[04:50] programb1e: but i cannot connect
[04:50] jsilver: whats websocket-server
[04:51] mape: programb1e: chrome/safari?
[04:51] jsilver: i got npm node and coffee installed properly
[04:51] programb1e: mape: chromium
[04:51] jsilver: i need a tutorial or something to do
[04:51] jsilver: or a ticket or something
[04:51] jsilver: lol
[04:51] mape: programb1e: hmm k, might be some wonky websocket revision stuff, not sure
[04:52] mape: might want to try chrome just to rule it out
[04:54] programb1e: cant
[04:54] programb1e: and uh
[04:54] programb1e: i cant even wget the page
[04:55] mape: telnet it?
[04:55] jsilver: whayt are you guys working on
[04:55] jsilver: i wanna play
[04:56] programb1e: jsilver: im trying to get wargames set up
[04:58] programb1e: jsilver: pew pew
[05:02] programb1e: argh, why wont it work
[05:02] mape: tried telnet?
[05:03] mjr_: have you run netstat to see if it is listening on the right port and right address?
[05:06] dnolen has joined the channel
[05:07] hassox has joined the channel
[05:07] programb1e: the port is open..
[05:07] programb1e: well, i can connect to it
[05:07] programb1e: nmap doesn't show it
[05:07] programb1e: :\
[05:07] mjr_: nmap is not a good way to do this kind of testing
[05:08] mjr_: If you run lsof, can you see that node is listening on the right TCP socket on the right address?
[05:09] programb1e: node      22025 curtis    6u     IPv4     317179       0t0       TCP *:1337 (LISTEN)
[05:10] mjr_: port 1337.  Nice.
[05:11] programb1e: its default
[05:11] mjr_: of course
[05:11] mape: programb1e: have you tried using chrome?
[05:11] programb1e: im not about to build chrome just for one test that i know will fail
[05:11] jsilver: programb1e: cool cool
[05:12] mape: k
[05:12] subsume has joined the channel
[05:12] programb1e: the HTTP server simply doesn't respond...
[05:12] subsume: I'm attempting to adapt the node.js chat example but the sessions don't appear to be expiring when /part is called.
[05:12] mjr_: Can you run some sort of packet capture thing to see if there are successful connections, and if so, any traffic on them?
[05:12] programb1e: hm
[05:13] tmpvar has joined the channel
[05:13] subsume: What's strange is the session.destroy() function seems to being called and is returning the appropriate js. but when the page reloads, the nickname still seems to be taken within the server.
[05:13] mape: programb1e: there is no http
[05:13] programb1e: uh
[05:14] programb1e: helps to know that
[05:15] mape: that is why I told you to try telnet
[05:15] mape: to see if it responds
[05:18] programb1e: damn, everyone has cloaks
[05:18] jsilver: whats wargames again
[05:18] jsilver: that freenode node.js irc thingy right
[05:18] programb1e: jsilver: http://wargamez.mape.me/
[05:19] jsilver: i think ive seen it
[05:19] jsilver: its cool
[05:20] jbr has joined the channel
[05:21] jsilver: i think I am going to make a gedit pattern file for coffeescript
[05:21] jsilver: :P
[05:21] jsilver: i have it kinda started
[05:23] hdon has joined the channel
[05:27] mostlygeek has joined the channel
[05:29] rolfb has joined the channel
[05:29] SamuraiJack: is there a node module, which supports HTTP requests with 302 redirects?
[05:30] mikeal has joined the channel
[05:31] aurynn: SamuraiJack, what?
[05:31] SamuraiJack: some module which will perform HTTP request and if it will reiceve the 302 response code it will follow the redirect
[05:32] polotek has joined the channel
[05:34] mjr_: SamuraiJack: I think this does what you want:  http://github.com/mikeal/node-utils/tree/master/request/
[05:34] mjr_: But I haven't tried it myself.
[05:34] mape: i have
[05:34] mape: works fine
[05:35] polotek: is anybody working on a robust http lib around http.Client?
[05:35] tmpvar: just to let everyone here know.. jsdom development is probably going to be put on hold for the next 4 or so weeks
[05:35] SamuraiJack: seems what I was looking for, thanks
[05:36] tmpvar: I will be taking patches, and possibly submitting small commits (chipping away at level2/core) but I've run out of bandwidth
[05:36] mde: tmpvar: Good to get a heads-up. We have been looking at perhaps using it here at Yammer.
[05:36] tmpvar: mde, for what exactly?
[05:36] aurynn: dear #node.js: Please reimplement LWP in javascript. Don't get clever like Python tried to be.
[05:36] mde: We're doing some stuff right now with TheRubyRacer, but it's just a stopgap.
[05:37] tmpvar: mde, can you be more specific?
[05:37] mde: Eventually it'll likely be Node, but it's basically server-side rendering of templates.
[05:37] tmpvar: ah, got ya
[05:37] tmpvar: do you need level2/3?
[05:37] mde: Right now strictly limited to EJS. We're not even doing any DOM stuff. Yet.
[05:37] tmpvar: you want to take this off channel?
[05:38] mde: But it would be awesome to provide people with that.
[05:38] programb1e: mape: how do i set the coords in the cache manually? it doesn't seem to be working
[05:38] mde: No, it's fine. There really aren't much more details than that. I have just been kicking the tires on it.
[05:38] mape: programb1e: close the app, alter, start
[05:39] mape: otherwise it will be overwritten every 10sec
[05:39] tmpvar: mde, ok -- well I'm definitely alive, just sorting my priority list
[05:39] mape: and only loads the cache on app start
[05:39] mde: tmpvar: It's definitely something we will need.
[05:39] mape: programb1e: so what was the problem?
[05:39] programb1e: nvm
[05:39] tmpvar: mde, a DOM or a specific level of the dom?
[05:40] mape: programb1e: huh? Would be good to know if someone else have the same issue
[05:40] mde: tmpvar: Basically as much of a faux-browser experience as we can give people.
[05:40] programb1e: nah it was me being stupid
[05:40] programb1e: too late at night
[05:40] mape: Still, other people can be stupid as well
[05:40] mde: With whatever caveats are reasonable.
[05:40] mape: and there is at least one night a day
[05:41] mde: I guess basic sort of benchmark is that I know people will ask "Can I use JQuery?"
[05:42] tmpvar: you can use jQuery now, minus things like compareDocumentPosition .. which is a relatively minor feature
[05:42] mikeal: someone pinged me
[05:42] mikeal: i don't know who
[05:42] tmpvar: but important..
[05:42] mjr_: mikeal: I pasted a link to your gh.
[05:42] mape: just have to clean the html for it to be parseable
[05:42] mde: tmpvar: Nice, okay. Yeah, people will be fine with caveats.
[05:42] mikeal: ah
[05:42] mikeal: which project?
[05:42] mjr_: node-utils
[05:43] mikeal: sweet
[05:43] mikeal: i need to spend some more time on the streams library
[05:43] mikeal: write some good tests
[05:43] mape: mde: I've used jsdom and jQuery for web scraping, worked fine when I piped the pages through htmltidy first
[05:43] tmpvar: mde, let me rephrase, its trivial to implement and allows for jQuery("parent child") queries.. thats in level3 though which is a ways off unless I get some help :)
[05:43] mde: tmpvar: Actually, the one big thing is that it assumes CommonJS.
[05:43] mape: programb1e: so mind saying what made it not work?
[05:43] streblo has joined the channel
[05:43] mikeal: request is really solid tho
[05:43] mikeal: i use it daily
[05:43] mikeal: it's so simple
[05:43] mde: mape: That's pretty cool.
[05:43] polotek: does anyone know where to look for the number of processes used in the io pool?
[05:44] programb1e: mape: not stopping the app
[05:44] mape: mde: yeah really handy
[05:44] mde: tmpvar: And we're using it in plain TheRubyRacer. It's just embedded V8.
[05:44] tmpvar: mde, mape: right.. you need to use a better parser. Aria's html5 parser might work a bit better than node-htmlparser
[05:44] mikeal: polotek, you mean threads?
[05:44] mjr_: mikeal: did any of the Oakland violence happen near the couchio office?
[05:44] polotek: mikeal: er, yeah
[05:44] mde: Right now it's not even Node.
[05:44] tmpvar: mde, got ya
[05:44] mape: programb1e: how did that make you unable to connect to it? Changed port without restarting the app?
[05:44] tmpvar: mde, not only is it not node, but its not using a dom either
[05:44] mikeal: mjr_: i don't think so, we're at 8th and it was mostly 14th and up
[05:44] programb1e: oh er that
[05:44] mde: So it's a Frankensteined mishmosh, kinda.
[05:45] programb1e: thoguht you meant the other thing
[05:45] mape: tmpvar: does arias work with jsdom now?
[05:45] programb1e: no, it was just me being stupid
[05:45] mde: tmpvar: Right, exactly.
[05:45] programb1e: didnt start httpd
[05:45] tmpvar: mape, aria's uses jsdom currently
[05:45] mape: programb1e: ah k
[05:45] mikeal: polotek: maybe, hopefully it's elastic and just has an upper limit
[05:45] mape: tmpvar: k nice
[05:45] polotek: mikeal: not last time I talked to ry about it
[05:45] polotek: it's hard coded to 4
[05:45] polotek: which is why I'm looking for it
[05:46] mikeal: interesting
[05:46] mikeal: you know
[05:46] tmpvar: mde, alright. sounds a bit far off, but I'll keep you in mind when I try and ignore xml namespace implementations ;)
[05:46] polotek: do you know where the code is that sets it up?
[05:46] mikeal: node is crazy fast, so we all kind of assume all these optmizations
[05:46] mikeal: but there really aren't many
[05:46] mde: tmpvar: Haha, nice. :) 
[05:46] mikeal: it's just built on a series of better ideas
[05:46] mikeal: which are inherently faster and more awesome
[05:47] mde: tmpvar: I'll check out aria's parser. There's a lot of stuff like sanitizing output and so on we'll have to do.
[05:47] tmpvar: mde: im at 59% or 53% done with level2/core (xml namespaces) depending on the branch/perspective 
[05:47] mde: Oh, namespaces. :)
[05:47] mikeal: tmpvar: jsdom?
[05:47] polotek: oh mikeal nice article about databases and mongo
[05:47] tmpvar: mde: sounds good, although its no tagsoup/beautiful soup
[05:48] tmpvar: mikeal, yeah, more dom nonsense ;)
[05:48] polotek: it was pretty enlightening
[05:48] mikeal: polotek: thanks, the response is kind of huge, way bigger than i thought it would be
[05:48] mikeal: tmpvar: is vmx using that branch?
[05:48] mikeal: i know he really needed namespaces
[05:48] tmpvar: vmx?
[05:48] polotek: then you were fooling yourself :)
[05:48] mape: mde: she had some serious testcases so I think it should be able to take pretty much any crap
[05:48] mikeal: volker
[05:48] mikeal: i wish i had the link handy
[05:48] mikeal: he got it working in the couchdb view server
[05:48] mde: mape: Excellent, because this will be for third-party devs.
[05:48] tmpvar: mape, right, its not perfect though
[05:49] mape: Well they never are
[05:49] mde: Many of whom are not likely to be very good devs.
[05:49] mape: at least she isn't using regex
[05:49] mikeal: and was taking some raw geo xml and converting it to geojson in an update function
[05:49] tmpvar: interesting
[05:49] tmpvar: the branch is haphazard btw.. and I wouldnt recommend using it
[05:49] tmpvar: mikeal,  you are coming to nyc this month, right?
[05:49] mikeal: maybe that isn't what he's using
[05:50] mikeal: what happens in the master right now if you have namespaces?
[05:50] mikeal: just ignored?
[05:50] mikeal: tmpvar: yup
[05:50] mikeal: i'll be there the 20th - august 2nd
[05:50] tmpvar: nice, cant wait to meet ya
[05:50] mikeal: in the last week i'm actually looking for places to crash
[05:50] mikeal: you got a couch :)
[05:50] tmpvar: in brooklyn
[05:50] mikeal: i've got free CouchDB tshirts :)
[05:50] tmpvar: you might want to talk to Marak 
[05:50] mikeal: that's where i'm staying most of the time 
[05:51] mikeal: my brother lives in brooklyn
[05:51] tmpvar: ah, well sleep on his couch ;)
[05:51] mikeal: i did, he also offered
[05:51] mikeal: and marak
[05:51] mikeal: i don't want to stay anywhere for too long tho
[05:51] tmpvar: if you need one I'm sure I could work it out
[05:51] mikeal: hate to wear out a welcome
[05:51] tmpvar: im down in bay ridge though
[05:51] tmpvar: so it might be a commute for ya depending on where you need to be/etc
[05:52] mape: mikeal: will code for couch?
[05:52] tmpvar: i dont generally bother offering because its pretty far down here, chill area though
[05:52] mape: or you do already? eh.. couchio
[05:52] mikeal: will code couchdb for couch :)
[05:52] mikeal: tmpvar: i have like 5 places i'm speaking at
[05:53] mikeal: and my good friend is a bartender at death and company so drinking will be happening 
[05:53] mikeal: other than that, not a lot of plans
[05:53] tmpvar: word, well hit me up at tmpvar@gmail.com if you want contact infoz or need something
[05:53] mape: mikeal: you should tell your friend their website throws a "this site will harm your computer" message from google
[05:53] mikeal: hahaha
[05:54] mikeal: tmpvar: i'm sure we'll get drinks when i get there
[05:54] tmpvar: of course
[05:54] mikeal: maybe a node meeting on the 23rd 24th ish
[05:54] holydevil has joined the channel
[05:54] mape: Nevertheless, the cocktails created by head bartender Brian Miller are killer.
[05:55] mikeal: mjr_: maybe i'm selfish, but i'm pretty sure today just insured that my rent won't go up for a few more years :)
[05:55] mikeal: mape: i haven't been yet, last time i went to Milk and Honey and PDT but i didn't make it to death & co
[05:55] mjr_: mikeal: yeah, by as a homeowner, it also capped my properly value for the next few years.
[05:55] tmpvar: mikeal, Brian mentioned that tonight
[05:55] mikeal: renting FTW!
[05:56] mape: mikeal: what happened today?
[05:56] mikeal: which Brian?
[05:56] mikeal: mape: riots
[05:56] tmpvar: Mitchel
[05:56] tmpvar: two l's?
[05:56] mape: oh, where?
[05:56] mikeal: they looted a foot locker
[05:56] mikeal: who can find their shoe size that fast
[05:56] mikeal: in the dark
[05:56] mikeal: Oakland
[05:56] mape: how come? just party times?
[05:56] mape: they have an apple store there?
[05:56] tmpvar: for the shoes
[05:57] mjr_: mape: some cops executed a guy, and the cop's trial was today. The verdict was "just barely guilty" and people are pissed.
[05:57] mape: oh k
[05:57] mikeal: this cop that shot a detained black guy who was cuffed on the ground in front of like 8 video cameras was convicted on involuntary manslauter
[05:57] mikeal: mape: nope, gotta go to emmeryville :)
[05:59] mikeal: this whole thing is crazy tho
[05:59] mikeal: really really nuts
[06:00] creationix: almost done designing the plans for my new queen/twin bunk bed http://bit.ly/cIh7hU
[06:00] mape: so just destroying public property or just general burning cards/looting private stores?
[06:00] mikeal: one of the lawyers was saying he doesn't know of a time where any police officer was convicted of *anything* in CA and even in the US for shooting an african america male
[06:01] mikeal: well, there was this rally at 6pm
[06:01] mikeal: but the organizers of the rally just didnt' do anything, or maybe even show up
[06:01] mikeal: so everyone just kind of stood around
[06:01] creationix: mikeal: so who was mad and about what?
[06:01] mape: 07:57:15 < mikeal> this cop that shot a detained black guy who was cuffed on the ground in front of like 8 video cameras  was convicted on involuntary manslauter
[06:02] mikeal: and then at like 8 a few groups of people started doing a few things and most of the other people left
[06:03] mikeal: people are right to be pissed, and the riots last year came at a time when the city basically ignored what had happened and the mayor didn't say anything for 4 days, basically until after there were riots
[06:03] mikeal: and the riots were basically angry protestors the cops decided to block in
[06:03] mikeal: this stuff today, a lot of it, just felt really… opportunistic 
[06:03] mikeal: i mean, his family is on tv telling people to stay peaceful
[06:04] mde: tmpvar: Thanks for the info, and the work on jsdom.
[06:04] mjr_: Yeah, basically angry assholes running around because they think they can get away with it.  Mostly unrelated to any sort of trial, race issues, justice, etc.
[06:04] polotek: clearly I have no clue how the node codebase is organized
[06:04] jetienne has joined the channel
[06:04] mde: I'm headed out. Talk to y'all later. 
[06:04] mikeal: and they *were* in front of city hall, where a riot might have at least been symbolic, but instead they went on the street and tore up a foot locker
[06:05] mikeal: polotek: what are you looking for?
[06:05] mape: later
[06:05] mikeal: the thread pool is in one of the deps
[06:05] polotek: where the number of threads is set... still
[06:05] mikeal: libeio
[06:05] tmpvar: mde, np. feel free to hit me up if you have questions/suggestions/patches :)
[06:05] polotek: yeah, that's where I am
[06:06] polotek: I'm just saying I'm ignorant of how a lot of these low level libs work
[06:06] mjr_: mikeal: this photo kind of sums it up for me:  http://www.flickr.com/photos/arlette/4776448074/  Anyway, JavaScript.
[06:06] mikeal: i love that theatre
[06:07] mjr_: That's my neighborhood.
[06:08] holydevil has joined the channel
[06:08] polotek: I understand mikeal's point about opportunistic peoiple
[06:08] mikeal: people have a right to be pissed
[06:08] polotek: but more and more lately it seems like only drastic measures can keep the powers that be from pissing all over people
[06:08] mikeal: oh, i'm all for that
[06:08] mikeal: that's what it was like last year
[06:09] mikeal: polotek: http://github.com/ry/node/blob/master/deps/libeio/eio.c#L226
[06:09] mikeal: i *think* that's it
[06:09] mape: guess there is a reason there are 4?
[06:10] mikeal: when people are that pissed and it's obvious the system isn't working a riot seems almost natural
[06:10] mikeal: that's what it felt like last year for sure
[06:10] mikeal: everyone here was pissed, it was crazy
[06:10] mikeal: there are like 8 video on the internet of this execution and this guy isn't even suspended 
[06:11] mape: anyone got hurt or just property?
[06:11] mikeal: and now, this verdict, i was ready for it to be the same
[06:11] tmpvar: thats fucked
[06:11] mikeal: just property
[06:11] polotek: etp = "event thread pool" ?
[06:11] mape: good
[06:11] mikeal: oh, and way earlier a cop car was backing up and clipped someone
[06:11] jsilver: hi all
[06:12] mikeal: polotek: http://github.com/ry/node/blob/master/deps/libeio/eio.c#L215
[06:12] mikeal: that actually might be it
[06:13] polotek: yes that's it
[06:13] mikeal: but i don't understand this code enough yet to tell for sure
[06:13] polotek: mikeal: yeah, that's my problem :)
[06:13] polotek: what needs to happen is pretty simple
[06:13] polotek: there are already three functions in there for controlling max threads, min threads, and max idle threads
[06:14] mikeal: armed revolution?
[06:14] polotek: these can be configured at runtime
[06:14] polotek: and ry wanted to surface them as properties on process
[06:14] polotek: so I need to a) make sure I'm in the right place
[06:15] polotek: b) write some v8 wrappers to surface those functions
[06:15] polotek: c) set them as setter functions on process
[06:15] mikeal: when you do, make sure there is a way to ask for the current utilization
[06:15] mikeal: i'd like to profile what kind of load it takes to max these out
[06:16] pydroid has joined the channel
[06:16] mikeal: and also, at what point does the thread overhead start to outweigh any benefits in increasing the pool size
[06:16] pydroid has joined the channel
[06:16] mikeal: erlang has a similar threadpool and with CouchDB we found that on most systems 4 is a pretty good number, but if you have a lot of slow connections like mobile phones it's fine to do like 8
[06:17] mikeal: at some point randall did 256 and things got SLOW
[06:17] polotek: it always feels to me like having 1 per cpu core plus a couple for slack is the most reasonable
[06:18] polotek: so for 4 cores, 6-8
[06:18] mikeal: it's not really all that related to cores tho
[06:18] mikeal: the bottleneck is going to be disc 
[06:18] jsilver: yo guys
[06:18] mikeal: because they block up while you're waiting on disc io
[06:18] jsilver: what are the mimetypes of coffeescritp?
[06:18] mikeal: jsilver: it doesn't have one
[06:18] jsilver: i'm doing a gEdit gtksourceview
[06:18] jsilver: k
[06:19] jsilver: i thought it was text/coffeescript
[06:19] mikeal: once compiled to js it's application/javascript
[06:19] mikeal: or text/javascript
[06:19] mikeal: i can never remember
[06:19] SubStack: yay, published my second module to npm
[06:19] jsilver: it doesnt have one for the raw form?
[06:19] polotek: this code is pretty simple
[06:19] jsilver: u sure?
[06:19] polotek: the names are just esoteric
[06:19] jsilver: how do you feed something to coffee.js?
[06:20] jsilver: in browser
[06:20] polotek: esoteric == "I don't know what they mean" :P
[06:20] mikeal: jsilver: i don't think any coffescript people are around right now
[06:20] mikeal: we have no idea
[06:20] jsilver: me either
[06:20] jsilver: that's cool
[06:20] jsilver: thanks
[06:21] mikeal: does coffescript have an irc channel yet?
[06:21] creationix: I used to be a coffeescript person, but it's been rewritten since then
[06:21] jsilver: yes
[06:21] jsilver: i small one
[06:21] jsilver: i'm trying to do new-style coffee/node
[06:21] jsilver: actually
[06:21] jsilver: i'm making a GTKsourceview lang def file for coffee
[06:22] jsilver: nobody around there right now tho
[06:23] mikeal: i would just email their list
[06:23] mikeal: time for bed now
[06:23] mikeal: gnight everyone
[06:23] mikeal: polotek: ping me when you finish this, it sounds really interesting
[06:23] polotek: mikeal: it wont be tonight.  I'm fading fast
[06:23] mikeal: i figured
[06:24] mikeal: what TZ are you in?
[06:25] mikeal: haha, i feel like i'm in Eastern Standard Tribe now :)
[06:26] aubergine has joined the channel
[06:32] gwoo has joined the channel
[06:32] jbr has joined the channel
[06:37] ph^ has joined the channel
[06:37] polotek has left the channel
[06:39] softdrink has joined the channel
[06:53] jxson has joined the channel
[06:53] aliem has joined the channel
[06:59] creationix has joined the channel
[07:03] matt_c has left the channel
[07:06] kodisha has joined the channel
[07:12] b_erb has joined the channel
[07:15] jsilver: IM STILL HERE
[07:19] mscdex: ME TOO
[07:19] freshtonic has joined the channel
[07:20] christkv has joined the channel
[07:23] jsilver: cool
[07:23] jsilver: i'm compiling e text editor
[07:23] jsilver: but if i dont like it
[07:23] mscdex: nano!
[07:23] jsilver: i'm gonna make a tmLanguage -> gtk converter
[07:23] jsilver: as a "fuck you" to textmate and a prank
[07:24] jsilver: using ruby too
[07:24] jsilver: as a "fuck you" to programming and stuff
[07:24] mscdex: but not to node
[07:24] jsilver: nope
[07:24] mscdex: ok, awesome
[07:24] jsilver: as a "big up" to node
[07:25] mscdex: even bettar!
[07:25] jsilver: and a "big fuck you" to Mycro$0ft
[07:25] jsilver: idk lol
[07:25] jsilver: lots of tings
[07:25] benburkert has joined the channel
[07:25] mscdex: steve ballmer is going to revoke your windows licenses now
[07:25] jsilver: good
[07:25] jsilver: i'm deleting windows if it wasnt for ableton live anyways
[07:26] jsilver: :D
[07:26] mscdex: and photoshop
[07:26] jsilver: tea
[07:26] jsilver: gimps ok
[07:26] mscdex: not really unfortunately
[07:27] mscdex: the UI is a mess
[07:27] jsilver: yes
[07:27] mscdex: :\
[07:27] mscdex: i guess you could run it under wine though
[07:27] jsilver: i wish there was a 100% opensource port of ableton that used linux-rt kernel stuff
[07:28] jsilver: the sound quality would outshine the windows version
[07:28] jsilver: because of how rpc and shit work
[07:28] jsilver: they interrupt I/O
[07:28] jsilver: which is similar to the concepts behind node
[07:28] jsilver: funnily enough
[07:28] jsilver: :)
[07:29] jsilver: concurrency shit
[07:29] jsilver: multitasking and resource allocation at the kernal level
[07:29] jsilver: kernel*
[07:29] jsilver: it can have a momentous affect on sound quality
[07:29] mscdex: if they only node
[07:30] jsilver: glitches can be eliminated
[07:30] jsilver: the audio latency goes to 2ms
[07:30] jsilver: its just that linux audio apps mostly $uck
[07:30] jsilver: something must be done
[07:31] jsilver: the audio system (ALSA + JACK + rt Kernel + Pulse + whatever) is all good and stable enough on some chips to get super awesome direct I/O latency
[07:32] jsilver: and apparently there's a driver called Wine ASIO that might be able to patch Ableton running Wine to ASIO to this system... but I havent tried it 
[07:32] jsilver: WineASIO
[07:32] jsilver: not sure how stable it is either
[07:37] mtodd has joined the channel
[07:41] virtuo has joined the channel
[07:43] teemow has joined the channel
[07:44] creationix has joined the channel
[07:47] crohr has joined the channel
[07:51] sh1mmer: is there a udp module
[07:51] sh1mmer: I can't see one in the docs
[07:51] sh1mmer: but there is DNS
[07:51] aurynn has joined the channel
[07:53] mitkok has joined the channel
[07:53] augustl has joined the channel
[07:54] MattJ has joined the channel
[07:54] augustl: I'm creating a "net" server, is there a way to parse HTTP-like headers there?
[07:55] Clooth has joined the channel
[07:55] augustl: data.split("\r\n"); doesn't feel very safe..
[07:58] satori: The is a UDP module. not in docs yet
[07:59] satori: it is dgram.Socket
[07:59] satori: i believe
[08:00] mscdex: yep
[08:00] stride: yep, at least require("dgram") exposes some Socket class
[08:02] mscdex: augustl: why are you parsing http headers in tcp?
[08:02] augustl: mscdex: websockets
[08:03] mscdex: augustl: have you tried miksago's websocket module or socket.io?
[08:04] augustl: socket.io does a bit too much for my likings.
[08:04] augustl: tried http://github.com/ncr/node.ws.js, couldn't make it work
[08:04] augustl: I'll look up miksagos module
[08:04] mscdex: http://github.com/miksago/node-websocket-server
[08:05] micheil: oh?
[08:05] micheil: augustl: feel free to ask me anything about it, I'm the author.
[08:05] mscdex: and you have questions, micheil is here for you :P
[08:05] mscdex: ha
[08:05] mscdex: *if
[08:05] augustl: micheil: trying it now ;)
[08:06] micheil: augustl: tell me what you think, and if you think there could be anything added.
[08:06] micheil: I'm currently working on v1.3.10 (when I get time / take a break from my paid work)
[08:07] augustl: out of curiousity, why doesn't the lib create the http server for you?
[08:07] augustl: hmm perhaps it's optional, nvm
[08:08] pquerna: http://journal.paul.querna.org/articles/2010/07/09/the-illusion-of-stability/ <- in which i mention node.js' modules for growing so quickly :-/
[08:08] mscdex: wordy method names = </3
[08:08] pquerna: don't let it give you any idea ryah, i still want a stable api :)
[08:08] micheil: augustl: the lib does create a http server for you, it's optional
[08:09] augustl: I see
[08:09] micheil: websocket support in core would be awesome.. *wink wink* *nudge nudge* :P
[08:10] micheil: augustl: that's mainly an option of those using an existing http framework, like Connect or Express
[08:10] micheil: or even Fab, perhaps
[08:10] augustl: why would chrome yield "Uncaught Error: INVALID_STATE_ERR: DOM Exception 11"?
[08:10] micheil: umm.. shouldn't
[08:10] augustl: it's the same error it yields if the websocket isn't up at all
[08:10] mscdex: someone brought that up the other week
[08:10] mscdex: RE: Dom Exception 11
[08:10] micheil: augustl: are you sure the client is connected to the server
[08:10] micheil: and is this with my server?
[08:12] tyfighter has joined the channel
[08:12] ctp has joined the channel
[08:13] jetienne: pquerna: imagine httpd without stable release. look at ffmpeg and the consequences they got no release. on-the-edge/buggy code is ok but only for toying/prototyping. else it becomes a trouble, up to "ok lets code this ourself and dont depends on this"
[08:13] jetienne: pquerna: my 2cts
[08:14] pquerna: jetienne: yes, i've done the  majority (?) of the apache 2.2 releases. probally one this week.
[08:14] augustl: micheil: http://gist.github.com/469222
[08:15] augustl: micheil: that prints "listening" and "connection" on the server, and errors in chrome
[08:15] pquerna: i 'get' it for this like apache, but most projects don't do that anymore. but thats a whole nother blog post really :-/
[08:15] keeto has joined the channel
[08:16] mscdex: pquerna: in the blog link you posted: s/shear/sheer/
[08:16] micheil: augustl: what version of chrome?
[08:16] augustl: micheil: 5.0.375.99 (0)
[08:16] augustl: Chromium also, not Chrome, if that matters
[08:16] pquerna: mscdex: thanks
[08:16] jetienne: pquerna: long term projects have to do it. 'weekend' hacks dont. a bit carricatural but close to my opinion
[08:17] micheil: augustl: ah, I see why: you're not waiting for the connection
[08:17] micheil: augustl: it's async in the browser, remember
[08:17] augustl: micheil: ah, I see
[08:17] pquerna: jetienne: yes, unfortunately, one person's weekend hack is another's business :)
[08:17] micheil: conn.onopen = function(){ ... start doing stuff here }
[08:17] jetienne: pquerna: :)
[08:17] micheil: or, if(conn){}
[08:19] augustl: micheil: indeed, tnx
[08:19] micheil: would it be a good idea for me to disconnect the client if a send fails 3 times?
[08:24] Alystair has joined the channel
[08:25] Alystair: just looking at wargames demo
[08:25] mscdex: prepare to fast forward!
[08:25] micheil: oh, yeah, probably around v1.4.00 or 1.3.10 we'll see SSL support for websockets. (currently present in spec but not yet implemented.)
[08:25] micheil: mscdex: ?
[08:25] Alystair: ACTION assumes it creates a warhead effect when someone mentions another person
[08:25] mscdex: micheil: nothing, just a little spaceballs is all
[08:26] mscdex: micheil: couldn't you just do SSL yourself?
[08:26] micheil: mscdex: um, at the time I originally wrote it, no, I found it too complex
[08:26] mscdex: using setSecure or whatever
[08:26] mscdex: !api setsecure
[08:26] _api: mscdex: (http.Server) method: setSecure(credentials) -- Enables HTTPS support for the server, with the crypto module credentials specifying the private key and certificate of the server, and optionally the CA certificates for use in client authentication. [ http://nodejs.org/api.html#server-setsecure-167 ]
[08:26] micheil: now I have this: http://www.silassewell.com/blog/2010/06/03/node-js-https-ssl-server-example/
[08:27] micheil: mscdex: and very nice there.
[08:27] micheil: mscdex: your creation?
[08:27] mscdex: ?
[08:27] mscdex: the blog?
[08:28] micheil: !api
[08:28] mscdex: oh that
[08:28] mscdex: yeah
[08:29] mscdex: !api modules
[08:29] _api: mscdex: Buffers, EventEmitter, Readable Stream, Writable Stream, Global Objects, process, sys, Timers, Child Processes, Script, File System, fs.ReadStream, fs.WriteStream, http.Server, http.ServerRequest, http.ServerResponse, http.Client, http.ClientRequest, http.ClientResponse, net.Server, net.Stream, Crypto, DNS, Assert, Path, URL, Query String, REPL
[08:29] micheil: mscdex: 1.3.10 or 1.4.00 will also have tests.
[08:29] mscdex: micheil: cool
[08:30] TomY has joined the channel
[08:31] mscdex: hrmm, i keep forgetting about my asterisk module. i need to finish it tomorrow
[08:31] mscdex: paid work is depending on it heh
[08:32] micheil: asterisk module?
[08:32] mscdex: yeah for interacting with asterisk servers
[08:32] mscdex: listening for events, placing calls, etc
[08:33] ollie has joined the channel
[08:33] mscdex: i'm working on realtime asterisk integration with sugarcrm
[08:33] mscdex: using node
[08:33] mscdex: and socket.io
[08:33] mscdex: and node-asterisk
[08:33] mscdex: :-D
[08:34] micheil: okay.. sweet. just picked up a job doing some film editing / post-production work
[08:34] aubergine has joined the channel
[08:34] micheil: (just for a challenge and change, y'know.)
[08:34] mscdex: yep
[08:35] micheil: mscdex: socket.io.. tut tut tut :P
[08:35] mscdex: :P
[08:35] mscdex: i know, i know
[08:35] SubStack: eh?
[08:35] micheil: mscdex: if there's enough interest for it, and someone wanting to support it, then I'll be writing a abstraction / client to node-websocket-server that does either cometd send or reverse XHR
[08:35] SubStack: did some new transport library come out that I missed?
[08:35] micheil:  / long polling
[08:35] mscdex: the problem is the user base
[08:36] holydevil has joined the channel
[08:36] SubStack: ah that
[08:36] mscdex: not everyone that will be using this addon uses chrome/chromium
[08:36] micheil: the pure thing with the support on that, is mainly if I have finance to write it, then it'll come out much quicker
[08:36] SubStack: http://github.com/substack/dnode might be relevant to this discussion
[08:37] mscdex: ollym had started a github project that is socket.io minus the reliance on json or whatever
[08:37] hellp has joined the channel
[08:37] micheil: SubStack: yeah... but no.
[08:38] creationix has joined the channel
[08:38] SubStack: ACTION hacks on it some more
[08:38] micheil: mscdex: is there a socket.io minus the socket.io part, so it's just the fallback transports?
[08:38] micheil: SubStack: also, you might be doing slowcase using the firstType thing
[08:39] mscdex: micheil: i dunno, but here is the project: http://github.com/ollym/node-io
[08:39] mscdex: not much there, but it's a start i guess
[08:40] SubStack: micheil: slowcase?
[08:40] micheil: yeah, I saw something on one js engine going into cold case / slow case when calling a function with too many undefined args.
[08:40] micheil: like, it was faster & more memory efficient to declare function arguments
[08:41] micheil: also, the number of for loops there must be utterly insane
[08:41] SubStack: .connect and .listen are called pretty much once
[08:42] micheil: mscdex: should tell him to make it pluggable ;P
[08:42] caolanm has joined the channel
[08:42] micheil: mscdex: no really big point on the burden of maintaining a websocket server
[08:42] mscdex: micheil: ollym comes in here every now and again
[08:42] augustl: is there something in node to handle accept headers? I want to see if application/json is accepted.
[08:42] mscdex: micheil: you'll have to talk to him :P
[08:43] mscdex: augustl: sure, just check the request.headers
[08:43] mscdex: !api headers
[08:43] _api: mscdex: (http.ServerRequest) property: headers -- Read only. [ http://nodejs.org/api.html#request-headers-174 ]
[08:43] mscdex: :-)
[08:43] augustl: mscdex: well, there's request.headers.accept, but that's just a string
[08:43] mscdex: right
[08:43] spot|2 has joined the channel
[08:43] mscdex: what more do you want?
[08:44] augustl: a parser for the accept header :)
[08:44] mscdex: request.headers.accept.split(";")
[08:44] mscdex: ?
[08:45] mscdex: or "; "
[08:46] micheil: actually, request.headers.split(/,|;/g)
[08:46] mscdex: either way, you just split on the delimiter
[08:46] micheil: yeah
[08:46] mscdex: then do a check on that array for: indexOf("application/json") > -1
[08:46] micheil: the reason for , or ; is ; is for charsets, , is for multiple types
[08:47] micheil: (sorta like cookies)
[08:47] mscdex: delicious!
[08:47] micheil: or just do a string.match("application/json")
[08:47] mscdex: that too hehe
[08:47] micheil: or string.indexOf
[08:48] augustl: I find the docs a bit hard to grok. Are there any collections of examples out there, perhaps?
[08:48] mscdex: howtonode has some i think
[08:49] mscdex: dunno what others off the top of my head
[08:49] augustl: especially some http examples
[08:49] augustl: trying to find out how I can read the request body etc
[08:49] cloudhead has joined the channel
[08:49] satori: I like how geeks use the word grok, and no-one else has any idea what it means.
[08:50] mscdex: augustl: add a listener for the 'body' event
[08:50] mscdex: augustl: the 'body' event will fire for each chunk of the body it receives, so you'll have to buffer it
[08:51] augustl: cool :)
[08:51] mscdex: er wait, not 'body', but 'data'
[08:51] mscdex: request.addListener('data', function (chunk) {
[08:51] mscdex: });
[08:51] mscdex: heh
[08:52] mscdex: or if you are using head, you can optionally replace addListener with "on"
[08:52] mscdex: :-)
[08:53] javajunky has joined the channel
[08:55] mscdex: augustl: and if you're going to be parsing html forms that may include file uploads, take a look at node-formidable: http://github.com/felixge/node-formidable
[08:55] augustl: tnx
[09:03] augustl: how do I know when I have the last 'data' event?
[09:06] cloudhead: augustl: you get an 'end' event
[09:06] augustl: dhe docs say "Emitted exactly once for each message" for the end event - what's a message?
[09:06] augustl: the*
[09:07] cloudhead: I guess an http request/response
[09:07] brainproxy: hey, cloudhead 
[09:08] zomgbie has joined the channel
[09:08] brainproxy: looking forward to investigating your couchdb adapter for node :)
[09:08] cloudhead: brainproxy: hey, cool
[09:09] brainproxy: i'm building an mvc framework thing on top of node and I'm hoping to use it to keep state on the backend
[09:09] brainproxy: with object versioning and such
[09:10] cloudhead: nice
[09:10] cloudhead: I'm working on an orm on top of it
[09:10] brainproxy: btw, i'm the dude that tweeted today asking if shotenjin-joosed might be made to work well with less.js
[09:10] cloudhead: ohh
[09:10] cloudhead: I saw, haven't looked into it yet
[09:10] brainproxy: np
[09:10] brainproxy: i imagine you're quite busy
[09:11] brainproxy: are there some fun examples of less.js usage to sink my teeth into
[09:11] augustl: is this code sensible? http://gist.github.com/469256
[09:11] cloudhead: you mean of the language?
[09:12] ceej_ has joined the channel
[09:12] brainproxy: yes, I'm coming at it from the perspective of somone who never used the ruby version
[09:12] xla has joined the channel
[09:12] brainproxy: and I tend to learn and build from looking at how someeone else used it
[09:14] creationix has joined the channel
[09:16] tomc has joined the channel
[09:17] mscdex: augustl: any reason you're storing the chunks in an array initially?
[09:17] cloudhead: brainproxy: http://vowsjs.org/less/main.less
[09:17] cloudhead: brainproxy: it's a little messy, but has a couple good examples
[09:18] brainproxy: okay, not that's great
[09:18] brainproxy: so essentially there's no syntax change
[09:18] brainproxy: between less and less.js
[09:18] brainproxy: for the .less templates themselves?
[09:18] augustl: mscdex: I need to parse the full body
[09:18] cloudhead: brainproxy: not really no, there's only a couple of little things
[09:19] cloudhead: which have changed
[09:19] mscdex: augustl: why not make data a string and just append to the string?
[09:19] augustl: mscdex: the chunks are parts of the body, right?
[09:19] mscdex: augustl: yep
[09:19] augustl: mscdex: not full bodies?
[09:19] augustl: mscdex: cause that ends up generating lots of unneeded strings
[09:19] augustl: premature GC optimization ;)
[09:19] mscdex: augustl: it'd be one string
[09:19] augustl: hmm, true, += appends
[09:20] mscdex: augustl: http://gist.github.com/469260
[09:20] mscdex: er wait
[09:20] micheil: augustl: I'd actually use a Buffer for it.
[09:20] mscdex: ok there
[09:21] augustl: micheil: I noticed the objects passed to 'data' aren't strings but Buffer instances
[09:21] augustl: at least that's what they appear to be when sys.inspect-ing them
[09:21] mscdex: probably
[09:22] MrNibbles: morning gents
[09:22] brainproxy: cloudhead:  I don't understand writing tests; conceptually i have some notions after looking at your vows bdd and some other related approaches; but do you have a resouce you'd recommend for learning how to think in terms of tests
[09:22] augustl: micheil: from the docs I can only see how to create a buffer with a known amount of data
[09:22] micheil: augustl: in which case, Buffer.copy :D
[09:22] augustl: new Buffer(size) etc
[09:23] augustl: micheil: so I would append the new buffer to the previous buffer? Instead of creating my own buffer object and appending to that?
[09:23] micheil: umm...
[09:23] micheil: I guess
[09:23] micheil: not 100% sure on it
[09:23] augustl: ah, ok
[09:24] cloudhead: brainproxy: I think of it as a todo
[09:24] micheil: I actually use an array + a buffer in node-websocket-server
[09:24] cloudhead: brainproxy: I write my tests in a way I want the software to work
[09:24] cloudhead: brainproxy: and then it's a matter of checking them off by implementing it
[09:24] javajunky: cloudhead: one issue I've had with (my understanding of) vows is how I would test a long running process..say to test whether a setInterval(…) function calls back 3 times.. do you think thats do-able with vows ? …and also where to put a hook to stop the timer :)
[09:24] micheil: but I may change that.
[09:25] micheil: eg, if there's a method available to grow a buffer, then I'll definitely change it.
[09:25] micheil: I just don't want to restrict max message size for now
[09:25] cloudhead: javajunky: Yea I got your message, maybe in the last assertion function
[09:25] cloudhead: as those are run in order
[09:25] brainproxy: cloudhead: that makes sense, i guess I'm having trouble figuring out how to work in the test writing and test implementation alongside my code
[09:25] brainproxy: I'll think about it some more
[09:26] cloudhead: javajunky: but maybe I could add a `cleanup` function in the api, which gets run after all tests
[09:26] mscdex: bye _api!
[09:26] cloudhead: brainproxy: it's especially good when writing apis or libraries
[09:26] cloudhead: brainproxy: TDD/BDD, that is
[09:27] mscdex: beam him back up scotty!
[09:27] javajunky: cloudhead: ah, actuall that message is from a colleague, but yeah I'm speaking on his behalf as I couldn't figure out how to help him;)
[09:27] cloudhead: brainproxy: testing in general is just necessary for libraries, things break often, you need to know when they do
[09:27] aubergine has joined the channel
[09:27] _api has joined the channel
[09:27] cloudhead: javajunky: ah ok
[09:27] cloudhead: javajunky: when would you ideally have it stop?
[09:28] cloudhead: javajunky: oh and btw, you can do something like `this.timer = x` in the topic, and have access to it in the vows
[09:28] javajunky: well I think he wants to do something like  when 'I start this function [which kicks off a setInterval]' I expect this callback to be called twice ' ..  … after it has been called twice then I need to stop this . 
[09:29] cloudhead: hmm
[09:29] cloudhead: I'll think about it
[09:29] brainproxy: cloudhead: is it / will it be possible to manipulate the styles defined in a .less file after the initial rendering of that file into css
[09:29] javajunky: thx :)  
[09:30] brainproxy: on the browser-side i mean
[09:30] mscdex: man i love building node ever since the builder defaulted to use all cores
[09:30] mscdex: :-D
[09:30] cloudhead: brainproxy: not currently, but with an api, it would
[09:32] mscdex: beam him up again scotty!
[09:32] cloudhead: brainproxy: you can also just create a new <style> node after page load
[09:33] _api has joined the channel
[09:36] aubergine has joined the channel
[09:39] tmedema has joined the channel
[09:41] brainproxy: cloudhead: sure, thanks, i'll be experimenting for sure
[09:42] femto has joined the channel
[09:46] danicgross has joined the channel
[09:47] danicgross: is there a mysql library that's up to date with the latest version of node?
[09:48] stride: I'm using dbslayer (new york times project for mysql-json via http) and node-dbslayer if that's an option for you
[09:48] danicgross: i've tried, but dbslayer is still using the old Promise code
[09:50] stride: oh, yeah, I might have changed a bit in there, wait a sec
[09:51] FireFoxIII has joined the channel
[09:53] mscdex: danicgross: maybe try http://github.com/sidorares/nodejs-mysql-native   or http://github.com/masuidrive/node-mysql
[09:53] stride: meh, nope, I think I use another version, but I don't really know which one :)
[09:53] danicgross: ah, ive tried, nothing works with the latest node
[09:53] danicgross: feel guilty about reverting to an older version
[09:53] aubergine_ has joined the channel
[09:53] mscdex: hmm... the first link was updated 3 days ago
[09:55] danicgross: will give it another run.. thanks
[09:55] cloudhead has joined the channel
[09:55] maushu has joined the channel
[09:56] mscdex: if it doesn't work, it's maushu's fault
[09:57] mscdex: kidding :-D
[09:57] danicgross: also - do most people use haml to template? or is there something else i'm missing
[09:57] mscdex: people use a variety of templating systems
[09:57] mscdex: haml is one of them
[09:58] danicgross: right
[09:58] danicgross: ok, thanks!
[09:58] mscdex: d'oh, left too fast :S
[10:01] cloudhead has joined the channel
[10:04] augustl: does a net server keep a tab of all it's connections?
[10:05] augustl: or would I have to do that manually via connect and close?
[10:05] mscdex: you would have to do it
[10:05] aubergine has joined the channel
[10:06] cloudhead has joined the channel
[10:16] rtl has joined the channel
[10:17] aubergine_ has joined the channel
[10:19] aubergine has joined the channel
[10:20] jblanche has joined the channel
[10:21] mscdex: yay! nodejs-mysql-native works on v0.1.100
[10:25] SvenDowideit has joined the channel
[10:30] fermion has joined the channel
[10:30] fermion has joined the channel
[10:33] pandark_ has joined the channel
[10:35] keru0a has joined the channel
[10:56] c4milo has joined the channel
[10:59] pgriess1 has joined the channel
[11:14] leepa has joined the channel
[11:19] confoocious has joined the channel
[11:24] jetienne has joined the channel
[11:32] confoocious has joined the channel
[11:41] oberhamsi has joined the channel
[11:44] hpoydar has joined the channel
[11:58] hojberg has joined the channel
[12:01] pydroid has joined the channel
[12:06] StanAngeloff has joined the channel
[12:06] confoocious has joined the channel
[12:07] StanAngeloff: yo chaps, any idea how to capture DNS resolution exceptions in http.createClient?
[12:09] aheckmann has joined the channel
[12:10] mtodd has joined the channel
[12:11] mklappstuhl has joined the channel
[12:12] chrischris has joined the channel
[12:14] hellp has joined the channel
[12:20] kevm_ has joined the channel
[12:24] pydroid has left the channel
[12:24] Ori_P has joined the channel
[12:25] mklappstuhl has joined the channel
[12:28] Ori_P_ has joined the channel
[12:29] ajpiano has joined the channel
[12:30] Ori_P__ has joined the channel
[12:35] Ori_P_ has joined the channel
[12:36] Ori_P__ has joined the channel
[12:40] markwubben has joined the channel
[12:44] k23z has joined the channel
[12:44] k23z: what's up ?
[12:45] phiggins has joined the channel
[12:47] augustl: what are ppl using for unit testing node apps?
[12:49] Ori_P_ has joined the channel
[12:50] kriszyp has joined the channel
[12:51] kevm_ has joined the channel
[12:54] malkomalko has joined the channel
[12:55] k23z: augustl: dunno, but I tested some stuff
[12:55] k23z: augustl: I think you need to do like asynchronous testing
[12:55] k23z: augustl: which is not like normal unit testing
[12:55] mape: augustl: take a look at vows
[12:55] k23z: augustl: but you can check this out http://github.com/wsdookadr/Q-Chess/blob/master/server/chess_test.js
[12:55] k23z: augustl: works for me
[12:55] mape: http://vowsjs.org/
[12:56] k23z: using an entirely different framework just for unit testing ..
[12:56] k23z: mape: what does it offer in comparison to .. require('assert') ?
[12:56] k23z: mape: maybe like test coverage or ... ?
[12:57] mape: k23z: never used it, just heard people enjoying it
[12:57] mw has joined the channel
[12:57] k23z: mape: yea .. ok
[12:58] mape: So not sure it is what you are looking for but somewhere to start
[13:02] kevm_ has joined the channel
[13:02] holydevil has joined the channel
[13:02] bradleymeck has joined the channel
[13:02] kevm__ has joined the channel
[13:04] aheckmann: mape: tjholowaychuk mentioned you building a connect plugin that can concat static files into a single request?
[13:05] davidsklar has joined the channel
[13:06] mape: aheckmann: Jup poking with it right now, you assign a group of files and manipulations to them, so the files get minified, groups into one file, and I have modifies to fix all the vendor prefixes for the css, so if you write border-radius: 10px it adds the -moz -webkit and whatnot
[13:06] aheckmann: nice!
[13:06] mape: Also wrote a modifier last night that fetches all the images linked in the css and injects them as base64 instead
[13:06] mape: so you lesses the http requests by quite a bit
[13:06] aheckmann: that's perfect
[13:07] mape: And it autoreloads the buffer cache so no need to reload the server and whatnot when altering the files
[13:07] aheckmann: i was toying with building that for express a few weeks ago but no time. 
[13:07] aheckmann: now that express is converting to connect that's great
[13:08] mape: And now it pushes out the assets at a rate of 94MB/sec
[13:08] aheckmann: have you posted the code anywhere
[13:08] mape: So no issues with speed
[13:08] mape: Not yeah, just wanna take care of the edge cases but will release it for sure
[13:08] aheckmann: awesome. 
[13:08] mape: If you hang out on irc or @mape on twitter I'll let you know
[13:09] aheckmann: i just followed you.
[13:09] mape: I'll try to get it out asap
[13:10] aheckmann: Anyone have an opinion on how best to send email with node? I'm currently using sendmail but there must be a better way?
[13:10] behmann has joined the channel
[13:11] mape: Looked at node-smtp?
[13:13] aheckmann: not really. hasn't been updated since jan
[13:13] mape: Ah :/
[13:13] Tim_Smart has joined the channel
[13:14] davidsklar has joined the channel
[13:15] stagas has joined the channel
[13:21] jherdman has joined the channel
[13:22] aheckmann: actually just noticed he started rewritting on a separate branch in June
[13:22] aheckmann: thanks
[13:24] bradleymeck: mmm can you upgrade a tcp connection after connecting to a server to ssl
[13:31] Ori_P has joined the channel
[13:32] sechrist has joined the channel
[13:34] JSNewbie has joined the channel
[13:34] sechrist: anybody know a good benchmark tool for drives on mac?
[13:34] sechrist: #mac is dead
[13:40] pzich: Finder
[13:40] pzich: actually DiskWarrior is pretty good, but not free
[13:41] sechrist: Finder does it?
[13:41] sechrist: I'm doing copies over to my nas but it doesn't show speed
[13:41] sechrist: pisses me off
[13:42] StanAngeloff_ has joined the channel
[13:43] athenot has joined the channel
[13:46] MrTopf: so the 
[13:47] MrTopf: node-mysql-native driver is using async io?
[13:47] sechrist: I think so but unless they really changed it it's only async for entire results
[13:47] sechrist: which is retarded
[13:47] sechrist: I haven't used it in a long time though
[13:47] MrTopf: lets say suboptimal ;-)
[13:48] sechrist: events should fire for each row as they come in
[13:48] MrTopf: there seems to be a row event
[13:48] sechrist: oh lovely
[13:48] sechrist: that may be usable then
[13:48] sechrist: if you like mysql
[13:48] MrTopf:     'field'(field) - one for each field description
[13:48] MrTopf:     'fields_eof'() - after last field
[13:48] MrTopf:     'row'(rows) - array of field values, fired for each row in result set
[13:48] MrTopf: it's sometimes not so much a question of liking ;-)
[13:48] bradleymeck: relational databases return w/ a vengeance, news at 9
[13:48] MrTopf: and rdbms have their place nevertheless
[13:49] sechrist: bradleymeck: drizzle my nizzle, fo shizzle dizzle
[13:49] MrTopf: and I might test this with amazon RDS
[13:50] cloudhead has joined the channel
[13:50] MrTopf: here is an example: http://github.com/sidorares/nodejs-mysql-native/blob/master/examples/myhttp.js
[13:50] pzich: sechrist: speed is calculated by size vs. time, copy something you know the size of and time it
[13:50] sechrist: pzich: I want to see transfer rate as it happens kthnx
[13:50] sechrist: with a graph
[13:50] sechrist: preferably
[13:50] pzich: grab MenuMeters
[13:51] pzich: or iStat Menus
[13:51] sechrist: I can't do it just on the interface
[13:51] sechrist: there's more traffic than that
[13:51] sechrist: but i'll try, ty
[13:52] sechrist: hmm, i'm reading 40-45 MB/s on average, that's pretty good. spikes up to around 60
[13:53] sechrist: jumbo frames: super effective
[13:53] sechrist: holy crap it hit 70MB/s
[13:53] sechrist: sustaining
[13:55] donspaulding has joined the channel
[13:57] hpoydar has joined the channel
[14:00] zapnap has joined the channel
[14:04] gf3 has joined the channel
[14:06] davidwalsh has joined the channel
[14:08] mattly has joined the channel
[14:10] bradleymeck has joined the channel
[14:10] jstewart1 has left the channel
[14:14] tzmartin has joined the channel
[14:16] donspaulding1 has joined the channel
[14:18] cloudhead has joined the channel
[14:18] jstewart has joined the channel
[14:23] nodista has joined the channel
[14:25] khug has joined the channel
[14:28] tmpvar has joined the channel
[14:32] creationix has joined the channel
[14:32] ben_alman has joined the channel
[14:32] Ori_P_ has joined the channel
[14:39] mape: aheckmann: Have browser specific groups now as well, so you can enter a regex to match the useragent, so now I only bundle the images as base64 for those user agents that wont match MSIE
[14:40] ajpi has joined the channel
[14:40] _frankie has joined the channel
[14:41] mape: Also allows you to do inline IE fixes that are removed in all other versions
[14:42] bradleymeck: when did _utility go down i dont see it in the irc logs
[14:42] xla has joined the channel
[14:44] fermion has joined the channel
[14:44] jetienne has joined the channel
[14:47] JimBastard_ has joined the channel
[14:47] JimBastard_: !translate English:Spanish Hello bitches
[14:47] _utility: Hola perras
[14:48] bradleymeck: !translate Hola muchachos
[14:48] _utility: boys
[14:48] bradleymeck: hehe
[14:49] bradleymeck: !translate 'hola muchachos'
[14:49] _utility: hello guys
[14:50] bradleymeck: mmm should default to reclaiming the language if the first word fails prolly...
[14:51] kodisha has joined the channel
[14:54] listentorick has joined the channel
[14:54] listentorick: hello all
[14:54] listentorick: I'm rrunning node on windows (via cywgin)
[14:54] listentorick: within cygwin I can succesfully nslookup
[14:54] listentorick: however
[14:55] listentorick: from a node app - all http requests result in an ECONNREFUSED
[14:55] listentorick: any ideas?
[14:55] Yuffster has joined the channel
[14:55] micheil: not on windows, no.
[14:56] listentorick: hmmm
[14:56] micheil: probably something odd in libev or http parser or something.
[14:56] micheil: remember: node under windows is extremely unstable and is not yet officially supported (to my knowledge)
[14:56] listentorick: its only for dev purposes
[14:57] listentorick: I like my notepad++
[14:57] listentorick: :)
[14:57] listentorick: can always switch to ubuntu
[14:58] caolanm: yeah, what linux really lacks is a good text editor ;)
[14:59] stride: yeah, I'm stuck in vim for 3 weeks now because I don't know how to quit it ;)
[14:59] bradleymeck: what features can you not find in linux?
[15:00] callen: I always seem to miss holoway.
[15:00] callen: caolanm: what do you use?
[15:04] rtl has joined the channel
[15:05] listentorick: meh
[15:05] listentorick:  I jsut like notepad++
[15:05] listentorick: I dont really want to dual boot
[15:06] listentorick: so I'll use a vm
[15:06] stride: have you tried running it in wine?
[15:06] nefD: linux lacks a really good text editor? coulda fooled me.. my vim setup is hellafied fast and supports as many features as my co-workers graphical ide's :D
[15:06] stride: nefD: really? even the ridicolous amount of ram used by them? ;)
[15:07] dmcquay has joined the channel
[15:07] nefD: bah! drastically less ram, of course
[15:07] nefD: to quit, do :q
[15:07] nefD: to save & quit, do :qw
[15:07] listentorick: nope
[15:07] JimBastard_ has joined the channel
[15:07] bradleymeck: vim though can confuse drastically, just getting back to the console of vim is painful at times
[15:07] stride: nefD: uh, yeah, thanks but that was a joke. :)
[15:07] listentorick: Ideally I'd move away from windows, however I have lots of expensive music creation software that I cant just throw away :)
[15:08] nefD: stride:  Ah. Im pretty used to vim questions like that, so i can never tell anymore :P
[15:08] stride: :) hehe
[15:08] nefD: listentorick:  What music prod. software do you use?
[15:08] listentorick: reason
[15:08] listentorick: and cubase 
[15:09] nefD: ahh cool
[15:09] femto has joined the channel
[15:09] listentorick: I've invested a lot in vsts
[15:09] steadicat has joined the channel
[15:09] nefD: i havent messed with it in a little while, but my main setup is Renoise and Ableton Live
[15:09] caolanm: callen: I use vim
[15:09] JimBastard_: listentorick: as in PAID for?
[15:09] listentorick: ooooh - I've always fancied a play with ableton
[15:09] aheckmann: btw, to save and quit in vim you can just :x
[15:09] listentorick: of course
[15:09] JimBastard_: lol....
[15:09] nefD: ableton is *fantastic*.. its quite a lot of fun to use
[15:09] JimBastard_: ive got like 200+ gigs of VSTs
[15:10] JimBastard_: and then like 30gb of just drum samples
[15:10] callen: listentorick: here's how this works
[15:10] JimBastard_: pretty much every VST i could find over a 5 year period
[15:10] callen: listentorick: you mention something JimBastard_ thinks he knows about, then he one ups you
[15:10] nefD: you can use it as a musical scratchpad if you want to mess around, you can use it in live settings (pun intended) very well (at least, in my experience), and its extremely competent for full fledged composition
[15:10] callen: listentorick: best thing to do: don't bother.
[15:10] listentorick: :)
[15:10] caolanm: haha
[15:10] JimBastard_: always with the personal attacks, everytime
[15:10] JimBastard_: i've never produced or released any music
[15:10] JimBastard_: http://myspace.com/yeoldewreckingshoppe
[15:11] listentorick: when I create the killer app which I'm failing to think of, I'll get a shiny mac
[15:11] JimBastard_: (links a shitty myspace that hasnt been updated in years)
[15:11] mitkok has joined the channel
[15:12] callen: JimBastard_: at least I don't sit on IRC one-upping people when they're discussing their passions.
[15:12] JimBastard_: no, you are just a hater who doesnt produce anything and attacks people he is jealous of
[15:12] callen:  :)
[15:12] nefD: listentorick:  I haven't heard much about cubase in a while.. are they still releasing new versions of it?
[15:13] listentorick: yup - but mine is ancient 2.5sx or something
[15:13] javajunky: ACTION loves his mac <g>
[15:13] JimBastard_: yeah listentorick im in the same boat as you, i still have my windows xp machine running SX 3 with all those VSTs
[15:13] JimBastard_: im actually setting up ableton today, got some new gear coming in the mail
[15:13] JimBastard_: got a new macbook for it
[15:13] nefD: JimBastard:  You'll like ableton.. its pretty ace
[15:14] JimBastard_: nefD: thats what everyone keeps saying, im looking to start doing more live performance stuff then studio work anyway
[15:14] StanAngeloff_: listentorick: which cygwin version are you on ?
[15:14] nefD: another fun tool to check out for shits and giggles is Audiomulch
[15:14] JimBastard_: i got some friends who are gonna show me how to use it
[15:14] nefD: JimBastard:  *nod* once you learn the basics, its pretty easy to feel your way through the rest of the program
[15:15] StanAngeloff_: listentorick: on mine i had to `vim /etc/resolv.conf` and then `nameserver 8.8.8.8``:wq`
[15:16] donspaulding has joined the channel
[15:17] tjholowaychuk has joined the channel
[15:18] listentorick: i manually created a resolv.conf
[15:18] listentorick: and it appeared to make no difference
[15:18] listentorick: as I mentioned from cygwin itself nslookup works
[15:19] listentorick: which is strange since I assumed that if cygwin was happy, so would node be
[15:20] phiggins has joined the channel
[15:24] MrTopf1 has joined the channel
[15:24] listentorick: will give it another go :)
[15:26] bradleymeck: mmm net.createConnection is failing on smtp.gmail.com... connection refused...
[15:26] Ori_P_ has joined the channel
[15:27] mikeal has joined the channel
[15:28] pavan_ has joined the channel
[15:28] StanAngeloff_: listentorick: i was getting the same error and then i read http://wiki.github.com/ry/node/building-node-on-windowscygwin 
[15:29] StanAngeloff_: listentorick: downloaded node 0.1.100 and re-compiled after I had the conf file -- works like a charm
[15:30] listentorick: right - so it looks like I need a rebuild
[15:30] listentorick: I wonder why?
[15:31] kodisha has joined the channel
[15:32] JimBastard_: hey callen, you still begging people for money on reddit? http://www.reddit.com/comments/8tbxw/help_a_fellow_redditor_help_himself/?sort=top
[15:33] JimBastard_: im sure it was your "friend" 
[15:33] Shorrockin has joined the channel
[15:33] peburrows has joined the channel
[15:34] JimBastard_: i didnt know you were in NYC,  646-468-3688
[15:37] boaz has joined the channel
[15:38] boaz has joined the channel
[15:40] jstewart has joined the channel
[15:40] cloudhead has joined the channel
[15:41] JimBastard_: sup cloudhead, we had a great talk about vows and resourcer last night at nyc.js
[15:41] [[zz]] has joined the channel
[15:41] JimBastard_: lots of people interested :-)
[15:42] mitkok has joined the channel
[15:45] donspaulding has joined the channel
[15:45] JimBastard_: [11:47] <@satanism> callen (~callen@unaffiliated/callen) was last seen being kicked from #askreddit by satanism 63 days, 10 hours, 35 minutes ago.
[15:46] JimBastard_: http://imgur.com/g8GZv.jpg
[15:46] JimBastard_: it all makes sense now callen 
[15:46] JimBastard_: im sorry man, i'd be upset too if i were you
[15:46] JimBastard_: i'll try to just ignore you :-)
[15:47] JimBastard_: if you need to beg for money again on reddit let me know, i'll paypal you a few bucks
[15:48] bradleymeck: jim just cool it, oh and sorry if _utility went down, no log on why
[15:48] JimBastard_: bradleymeck: if people are going to personally attack me, unprovoked, i'm going to address it
[15:49] JimBastard_: if someone wants to disagree with me, thats awesome. i like disagreements
[15:49] JimBastard_: i dont like personal attacks
[15:49] bradleymeck: true, but you have done so, let him respond
[15:49] JimBastard_: fair enough, i am gonna drop it
[15:49] JimBastard_: dude obviously has some life problems
[15:53] arlolra has joined the channel
[15:54] nefD: JimBastard:  I disagree with that underscore following your nick
[15:54] nefD: JimBastard:  *wholeheartedly*
[15:54] everton has joined the channel
[15:54] markwubben_ has joined the channel
[15:54] mitkok has joined the channel
[15:55] malkomalko: dammit
[15:55] malkomalko: I missed nyc.js last night?
[15:55] JimBastard_: lolwut nefD ?
[15:55] JimBastard_: yeah malkomalko ! i told you didnt i
[15:55] malkomalko: fudge!
[15:55] malkomalko: I don't think so
[15:55] JimBastard_: nefD: im signed at at home under the other one
[15:55] malkomalko: but it don't matter to the jesus, I'll be at the next partay
[15:55] nefD: JimBastard:  FIX IT
[15:55] charlesjolley- has joined the channel
[15:55] JimBastard_: it was good times malkomalko 
[15:55] JimBastard_: lots of good talks
[15:56] JimBastard_: i got sucked into talking about gemini.js
[15:58] malkomalko: nice!
[15:58] malkomalko: I took today off, didn't feel like going into the heat again
[15:58] JimBastard_: yeah i wanted to do that same ughhh
[15:58] JimBastard_: i got this music gear shipping to my house and no one is there fuck
[15:59] malkomalko: I saw you just got ableton
[15:59] malkomalko: have been using live for like 6 years
[15:59] JimBastard_: nice, i might bug ya on how to use
[15:59] malkomalko: let me know if you need any pointers
[15:59] JimBastard_: ive been using cubase for like 9 years
[15:59] JimBastard_: maybe 8
[15:59] JimBastard_: for sure
[15:59] malkomalko: yah, I used cubase for a long time
[15:59] malkomalko: nuendo too
[15:59] JimBastard_: i got my coworker to help me out
[16:00] malkomalko: never got into protools
[16:00] JimBastard_: but im sure i'll have questions
[16:00] malkomalko: but I'm in love with live
[16:00] JimBastard_: did i tell you what im doing?
[16:00] malkomalko: the online wave sampler
[16:00] JimBastard_: with the theremin, audio=>midi, and sampler
[16:00] malkomalko: ?
[16:00] JimBastard_: naaah, this is something else
[16:00] JimBastard_: JSONloops is just a software project
[16:00] malkomalko: that sounds interesting
[16:00] JimBastard_: yeah, ive got a strategy 
[16:00] StanAngeloff_ has left the channel
[16:00] JimBastard_: i think start doing live shows again, its been almost a year :-\
[16:01] JimBastard_: the last show we did was a flop too, bad weather and no promotion
[16:01] JimBastard_: bad shows suck
[16:01] bradleymeck: who released a new oauth module?
[16:01] malkomalko: brb
[16:03] brianmario has joined the channel
[16:04] nefD: apparently my nick is an acronym for 'noise equivalent flux density'
[16:05] gf3: creationix: yao
[16:05] creationix: hey
[16:06] gf3: creationix: I thought it might be worthing mentioning ECMA262-5's Function#bind in your closure article
[16:06] c4milo has joined the channel
[16:06] gf3: s/worthing/worth.
[16:06] gf3: when you provide solutions for passing instance methods as hollabacks
[16:07] viktors has joined the channel
[16:07] creationix: gf3: I don't think v8 has that yet
[16:07] BrianTheCoder has joined the channel
[16:07] gf3: creationix: it doesn't, but it's easily emulatable for the time being
[16:08] creationix: well, if emulated it's just as slow as using the closure method
[16:08] gf3: and the resulting syntax is very clean, e.g.: lol.addListener("anevent", this.rofl.bind(this))
[16:08] creationix: but yes, it does help when using instances
[16:08] tjholowaychuk: addListener should just accept an obj for context 
[16:08] creationix: gf3: just post a comment, people read those
[16:10] tjholowaychuk: bahahah im so dumb, just found the bug preventing me from committing my new session shit
[16:10] JimBastard_: lolwut callen works 3 blocks away from where i live
[16:10] JimBastard_: thats hilarious
[16:10] tjholowaychuk: and it was the most retarded thing ever
[16:11] tswicegood has joined the channel
[16:11] bradleymeck: never use this unless you are caching it or its a prototyped function!
[16:11] javajunky: bradleymeck: can't rememeber his name, but its in the maling list, he based it on mine, the api's a bit nicer I guess, not my thing though
[16:12] bradleymeck: yea, trying to oauth into gmail's smtp wanted to try it
[16:12] javajunky: did mine not work ?
[16:12] javajunky: hmmmm actually how does *that* work ? 
[16:12] benburkert has joined the channel
[16:13] bradleymeck: yours works just comparing
[16:13] javajunky: ah, fair, fair .  the api on his is a little more fluent 
[16:13] bradleymeck: smtp in starttls upgrade then fire off http://code.google.com/apis/gmail/oauth/protocol.html
[16:13] javajunky: (also glad it worked) 
[16:15] nrstott has joined the channel
[16:15] bradleymeck: the 2 vs 3 step is a bit odd
[16:15] gf3: creationix: cool
[16:15] javajunky: I can't remember, but when I looked at it, there was something I wasn't that keen on it, but I think it works ok
[16:19] bradleymeck: need to make a better telnet repl...
[16:21] Ori_P_ has joined the channel
[16:22] mitkok1 has joined the channel
[16:25] donspaulding has joined the channel
[16:25] nuba has joined the channel
[16:26] rauchg_ has joined the channel
[16:26] bradleymeck: wish JS had a deepcopy built in
[16:26] tyfighter has joined the channel
[16:28] bpot has joined the channel
[16:28] aurynn: you can write a deepcopy
[16:29] bradleymeck: i have a deepcopy, its slow
[16:29] stepheneb has joined the channel
[16:30] nuba has joined the channel
[16:30] aurynn: So what you want is a fast deepcopy
[16:31] bradleymeck: preserving references for clones to other clones is painful because you have to make an array and use indexof, if you could remove that need for indexof it would be fine
[16:35] derferman has joined the channel
[16:38] gf3: eh, inheritance usually works better in places where you'd normally want to copy/deepcopy
[16:38] tjholowaychuk: holyyy fuck i am full of weird ass bugs today
[16:39] mklappstuhl has joined the channel
[16:39] bradleymeck: idk if i can use inheritance on tree structures that are being copied
[16:40] bradleymeck: could use prototype but then i wouldnt deep copy arrays that have stuff inside the tree etc
[16:41] sudoer has joined the channel
[16:41] disappearedng_ has joined the channel
[16:41] disappearedng_: Hey how are websockets provided on node.js bidirectional?
[16:41] gf3: bradleymeck: you can use __proto__
[16:42] bradleymeck: i know i can but it wont be a deep copy
[16:42] gf3: no, it won't be a copy at all
[16:42] bradleymeck: disappearedng_ varies
[16:42] disappearedng_: what is the most popular websocket emulator in JS right now
[16:43] bradleymeck: given obj={x:[y],z:y},y=[ob,y]} idk how __proto__ could emulate a deep copy
[16:44] bradleymeck: socket.io is pretty popular it tries flash and then longpolling i think
[16:44] bradleymeck: remove that last }
[16:45] gf3: bradleymeck: WAT?
[16:47] bradleymeck: im copying structures that are referencing eachother like mad for my interface module
[16:47] bradleymeck: hence deep copy :/
[16:47] bradleymeck: anywho bbl
[16:49] sh1mmer: is there a udp module?
[16:49] sh1mmer: there is a dns module, but I'm assuming that's plugging into some system thing that doesn't expose udp up
[16:51] astrolin has joined the channel
[16:52] isaacs has joined the channel
[16:54] jakehow has joined the channel
[16:58] disappearedng_: bradleymeck: you familiar with socket.io? 
[16:59] isaacs: hey, _announcer didn't see my tweet
[16:59] isaacs: bradleymeck: did _announcer fall over?
[16:59] isaacs: _announcer: wake up, buddy!
[17:00] astrolin has joined the channel
[17:03] ajpiano has joined the channel
[17:03] benbinary has joined the channel
[17:04] isaacs: that job board is awesome.
[17:04] micheil: it is pretty good
[17:04] micheil: for those interested, here's a table of browser support for websockets: http://wiki.github.com/miksago/node-websocket-server/browser-support
[17:04] isaacs: it'll be better when there's more content.  but i really dig the simplicity
[17:04] benbinary has joined the channel
[17:04] micheil: yeah, it looks good so far.
[17:05] micheil: you know what sucks?
[17:05] nefD: is ie9 slated to support websockets?
[17:05] amuck has joined the channel
[17:05] creationix has joined the channel
[17:05] micheil: not being able to apply for fulltime jobs due to other commitments
[17:06] micheil: nefD: is it?
[17:06] nefD: micheil:  I have no idea.. im guessing no, but i was surprised when they announced canvas support, so who knows?
[17:06] mape: "Sorry, Mike-- The IE team has not made any announcements regarding if/when support for WebSockets will appear in IE.
[17:06] nefD: booo :(
[17:06] mape: 110 days ago though
[17:07] mape: could just be they don't want to say before they have it nailed down
[17:07] mape: so people don't go bad shit crazy if they have to drop it
[17:07] micheil: nefD: true, it shall be interesting
[17:07] sudoer has joined the channel
[17:07] micheil: yeah, cause implementing draft76 is pretty hard to get 100% right
[17:08] aubergine has joined the channel
[17:09] nefD: i suppose theres always the flash fallback for ie
[17:09] nefD: at least the other major browsers are on baord
[17:09] nefD: s/baord/board
[17:09] mape: the flash one is just drop in?
[17:09] mape: or does it mean changes to the code?
[17:10] nefD: i only have experience with socket.io, where the determination of which method to use is automatic
[17:10] mape: hmm k
[17:10] micheil: mape: it's currently only draft 75.
[17:10] mape: oh, so won't work with yours?
[17:10] micheil: but if the actionscript source code is available I may add draft 76 support.
[17:10] micheil: mape: it will.
[17:10] micheil: unless you tell mine to reject draft75 connections
[17:10] pgriess has joined the channel
[17:11] mape: hmm k
[17:11] mape: http://github.com/gimite/web-socket-js
[17:11] mape: that one?
[17:11] pgriess: creationix: you guys thought any more about routing vhost to specific workers?
[17:11] mape: that has the source?
[17:11] ajpiano has joined the channel
[17:11] creationix: pgriess: I haven't found a good way yet, the most reliable way I've found is using node's http server and client
[17:12] creationix: but that's probably not the most effecient
[17:12] pgriess: creationix: i think i came up w/ a way
[17:12] pgriess: creationix: untested, just a theory
[17:12] creationix: pgriess: do share
[17:12] disappearedng_: so let me get this straight, node.js is on the server end right? 
[17:12] mape: jup
[17:12] MrTopf has joined the channel
[17:12] pgriess: creationix: this has some holes in it, but bear with me ;)
[17:13] creationix: disappearedng_: yep
[17:13] micheil: mape:  yeah, but it's nasty as bro. http://github.com/gimite/web-socket-js/blob/master/flash-src/WebSocket.as
[17:13] pgriess: creationix: add a listener to the server instance for the 'connection' event. in this event, add a new 'data' event listener. use this listener to buffer up all received data from the socket
[17:13] mape: and there is no other?
[17:13] disappearedng_ has left the channel
[17:13] creationix: btw, can some people from around the globe check my dns for howtonode.org? what IP does it give when pinging?
[17:13] pgriess: creationix: in the 'request' event in the http server, parse the headers and all that jazz to determine which vhost we're targetting
[17:13] pgriess: creationix: and pause the incoming stream
[17:13] micheil: mape:  probably not
[17:14] pgriess: creationix: based on what you see, decide on a worker and send the fd and all already-seen data over
[17:14] pgriess: creationix: then, construct a stream around the received fd
[17:14] pgriess: creationix: emit a 'connection' event
[17:14] tjholowaychuk: creationinx: 72.14.187.119
[17:14] micheil: creationix: 205.186.160.54
[17:14] khug has joined the channel
[17:14] creationix: pgriess: ok, so pass the fd of  the client itself?
[17:14] pgriess: (on the http server instance, which it will pick up and think a client is connecting)
[17:14] pgriess: creationix: then emit the data you already saw
[17:14] pgriess: creationix: yeah
[17:14] pgriess: creationix: there are some races there
[17:14] pgriess: creationix: but i think it can work w/ some pausing and whatnot
[17:14] creationix: pgriess: perhaps
[17:14] mape: hmm doesn't work with ie7
[17:15] creationix: it's certainly faster than proxying everything if it works
[17:15] pgriess: creationix: yeah
[17:15] nefD: creationix:  205.186.160.54
[17:15] creationix: Thanks everyone, 205.... is the new one
[17:15] micheil: oh, wow. it's only 3:15am.
[17:15] pgriess: creationix: the other idea i had was to use use PEEK to read the headers off of the socket
[17:15] creationix: Media Temple is hosting howtonode for me for free
[17:15] pgriess: creationix: and then just pass the fd over to teh client
[17:15] micheil: I was... y'know, expecting it to be.. like 5am.
[17:16] pgriess: creationix: but that's more invasive, i think
[17:16] mape: micheil: twitter
[17:16] Ori_P_ has joined the channel
[17:16] micheil: mape: ?
[17:16] mape: mdoob on an error with your server
[17:16] creationix: pgriess: I wonder how slow doing a reverse proxy with just raw tcp would be?  Just buffer enough data to parse the headers and then pass everything on
[17:16] micheil: uh-oh :D
[17:16] pgriess: creationix: not slow, i think. this is basically what an LB does
[17:17] benburkert has joined the channel
[17:17] pgriess: creationix: if you're willing to use http_parser directly then i think that's your best shot
[17:17] jan____ has joined the channel
[17:17] creationix: less race conditions I would think
[17:17] jan____: who runs nodejobs?
[17:17] pgriess: in fact, that's probably less invasive than trying to fenagle http.server to do this for you
[17:17] pgriess: creationix: agree
[17:17] creationix: pgriess: but I like your idea if we can make it reliable
[17:17] creationix: especially for large data transfers
[17:17] pgriess: creationix: still have the race in the child process where we need to be *sure* that the buffered data that we emit is seen before any new data on the socket
[17:17] meder has joined the channel
[17:18] meder: is there a DOM lib I can use to parse uris?
[17:18] mikeal: jan____: terry marting
[17:18] mikeal: er martin
[17:19] jan____: is he in here?
[17:19] meder: oops inimino is here.. i meant
[17:19] Gruni has joined the channel
[17:19] mape: only 36 spots left on node knockout
[17:19] meder: Is there a DOM library that I can use to parse hypertext markup language pages?
[17:20] mape: meder: I've used jsdom and jQuery to scrape sites
[17:20] sh1mmer: mape: hm I should probably register then
[17:20] meder: mape: You are referring to http://github.com/tmpvar/jsdom ?
[17:20] creationix: pgriess: thanks for all your work on this multicore stuff.  I'll admit it was all over my head at first, but I think I'm starting to understand it
[17:20] mape: Yes
[17:20] jan____: meder: http://github.com/vmx/xml2dom/
[17:20] pgriess: creationix: np. its fun to think about.
[17:21] creationix: pgriess, and I'm interested to see what you guys end up using node for in production
[17:21] sh1mmer: pgriess: did you see that article about clojure yesterday?
[17:21] pgriess: creationix: yeah, me too. we've kicked around a lot of ideas over the last month or two. but we're starting to settle
[17:21] pgriess: sh1mmer: yeah. kind of busted 
[17:21] sh1mmer: pgriess: I'd be interested in your thoughts about some of the commentary on HN
[17:22] shimondoodkin has joined the channel
[17:22] pgriess: sh1mmer: since all clojure win was from multi-core
[17:22] pgriess: sm1mmer: node runnon on connect or multi-node would smoke it
[17:22] pgriess: sh1mmer: haven't ready the HN commentary. link?
[17:22] sh1mmer: http://news.ycombinator.com/item?id=1497161
[17:22] pgriess: heh, isaacs ftw!
[17:23] sh1mmer: pgriess: isaacs pointed out your point but a bunch of people shot him down
[17:23] micheil: mape: oh boy, check this error out:
[17:23] mape: doesn't clojure ease the communication between?
[17:23] isaacs: orly?
[17:23] sh1mmer: citing things like memory contention
[17:23] micheil: "Error: EMFILE, Too many open files"
[17:23] pgriess: sh1mmer: intersting. reading.
[17:23] mape: micheil: have the stress test online so I can help out?
[17:23] isaacs: i thought the whole point of the clojure wsa that it used threads to leverage multiple cores more efectively
[17:23] mape: micheil: yeah had that when a lot of people were using it
[17:23] mape: but if I recall correctly it was the DNS wonkying out
[17:23] micheil: mape: it's a server issue.. looks like it's not actually closing sockets.
[17:23] mape: at least in the trace
[17:24] pgriess: isaacs: afaict the point is that it provides very fast lockless, immutable datastructures. designed to decrease contention in multi-threaded programming
[17:24] sh1mmer: isaacs: right that's the crux of it
[17:24] adinardi has joined the channel
[17:24] mape: ah snassy
[17:24] mape: micheil: good to have a project like mrdoobs to test the server on :)
[17:24] micheil: mape: yeah.. now how to fix it..
[17:25] callen has left the channel
[17:25] shimondoodkin: dows any bode has expirience with creationix Step?  http://gist.github.com/469737#303
[17:26] shimondoodkin: s/ any bode/ anybody/
[17:26] tjholowaychuk: holy crap lol
[17:26] callen has joined the channel
[17:26] creationix: shimondoodkin: a bit ;)
[17:26] shimondoodkin: :)
[17:26] micheil: net.Stream - socket.close, sets readyState to readOnly
[17:26] micheil: and sends fin.
[17:26] micheil: !api net.Stream
[17:27] hojberg has joined the channel
[17:27] micheil: !api modules
[17:27] _api: micheil: Buffers, EventEmitter, Readable Stream, Writable Stream, Global Objects, process, sys, Timers, Child Processes, Script, File System, fs.ReadStream, fs.WriteStream, http.Server, http.ServerRequest, http.ServerResponse, http.Client, http.ClientRequest, http.ClientResponse, net.Server, net.Stream, Crypto, DNS, Assert, Path, URL, Query String, REPL
[17:27] micheil: !api net.Stream.close
[17:27] micheil: nup. it doesn't like me.
[17:27] micheil: stream.end()
[17:27] micheil: Half-closes the stream. I.E., it sends a FIN packet. It is possible the server will still send some data. After calling this readyState will be 'readOnly'.
[17:29] shimondoodkin: creationix: the log is http://bechick.co.il/log.php
[17:29] isaacs: pgriess, sh1mmer: can someone please post a response comparing clojure to connect in multicore mode?
[17:29] isaacs: it's not that i want node to win.  it's that i want accuracy, and don't feel like installing clojure ;)
[17:30] sh1mmer: isaacs: it's how we can tell we are doing good
[17:30] sh1mmer: isaacs: when everyone is trying to compare themselves to us and prove they are "better"
[17:30] isaacs: if clojure is in fact that much faster, in a fair test, then we need to figure out wtf is going on and fix it.
[17:30] jan____: again, http://nodejobs.com/ is down, how can I report that? :)
[17:30] sh1mmer: isaacs: it's just a wrapper to an old java project. "faster" is making a lot of assumptions
[17:30] tmpvar has joined the channel
[17:30] creationix: shimondoodkin: so what's the question about Step?  that's a lot of code to digest at once
[17:31] pgriess: isaacs: there are known GC bottlenecks w/ holding on top a lot of tcp connections at any one time.  for example, nginx beats node by 30-40% if origin latency is 1s due to the v8 gc looking at all of the outstading objects to see if it can collect them
[17:31] reid has joined the channel
[17:32] pgriess: isaacs: no immediate plans to address this, but its a known concern
[17:32] pgriess: isaacs: at 10k reqs/s and 1s origin latency, v8 spends 40% of a CPU doing GC
[17:32] isaacs: i see.
[17:32] shimondoodkin: creationix: actualy it is like 30 lines,  function load_subitems at line 303 , it does not goes to the next step 
[17:32] tjholowaychuk: creationix: managed to come up with a session api that is easy to plug stores into, as well as friendly for the developer https://gist.github.com/ced47a2e3a645a02196f
[17:32] tjholowaychuk: is all you need now
[17:32] sh1mmer: pgriess: surely JVM would have similar constraints
[17:32] tjholowaychuk: mandatory at least
[17:32] creationix: tjholowaychuk: perfect
[17:33] pgriess: sh1mmer: possibly. the jvm GC is different than the v8 gc
[17:33] pgriess: sh1mmer: also, it depends how much of their networking stack is in java and how allocation heavy it is
[17:33] pgriess: sh1mmer: the node net/http stack is mostly js
[17:33] pgriess: sh1mmer: rewriting it to c would have a bunch of downsides, but would help in this performance case
[17:33] micheil: mape: oh, hangon.. here we go.. it's doing more connections again, but extremely slowly.
[17:34] pgriess: sh1mmer: fwiw its possible that tuning the node gc will solve this
[17:34] sh1mmer: pgriess: right, it might end doing the python thing and having dual stacks
[17:34] reid: isaacs: Could you take a look at my homebrew patch for node? http://github.com/mxcl/homebrew/issues/issue/1552/
[17:34] mape: micheil: have the stress test online so I can jump on to increase the connections?
[17:34] shimondoodkin: creationix: at line 314 i do foreach, at line 323 i do  closure, when it ends i call group-callback() created just before on line 312, and i expect it to execute my next function in step arguments and it does not
[17:34] sh1mmer: use the c stack for speed and the javascript stack to hack on
[17:34] micheil: mape: not yet.
[17:34] isaacs: reid: actually, this is fixed in npm 0.1.19 with node 0.1.100
[17:34] creationix: shimondoodkin: is "selection.model.list" sync or async?
[17:35] shimondoodkin: async
[17:35] reid: isaacs: What changed?
[17:35] sh1mmer: is reid who I think reid is?
[17:35] reid: sh1mmer: yup, hey there!
[17:35] sh1mmer: :)
[17:35] isaacs: reid: process.execPath was added, and npm is using that.
[17:35] sh1mmer: it's a gentle invasion. we just need dav in here now.
[17:35] creationix: shimondoodkin: ok, group() generates a callback, it doesn't actually call it
[17:35] isaacs: reid: that's *always* the actual location of the executable.
[17:35] reid: isaacs: awesome.
[17:35] tjholowaychuk has joined the channel
[17:35] creationix: since you're wrapping the callback manually you need group()(null, data) and group()(err)
[17:36] isaacs: still, doing ./configure properly is good
[17:36] micheil: mape: seems to hang for me in safari at around 249 previous connections
[17:36] shimondoodkin: creationix: it calls the4 call back if you folow the sys.puts commentsyou can see the log here http://bechick.co.il/log.php
[17:36] reid: isaacs: well, installPrefix could be seen as ambiguous in homebrew's case
[17:36] isaacs: yeah, totally
[17:36] reid: it's installed somewhere else, then linked...
[17:36] isaacs: it's good to put the proper data in there.
[17:36] isaacs: oh, i see
[17:37] tjholowaychuk: creationix: im going to push 0.2.1, ill consider it patch since the old sess api was a super quick hack
[17:37] isaacs: yeah, i think since npm/node worked around this, it's not such a big deal for homebrew to change.
[17:37] shimondoodkin: creationix: can you please edit my gist so it might work? i am kind of banging my head against this like two days
[17:37] reid: yeah. the installPrefix homebrew uses is correct. but npm can't expect it to be in the PATH.
[17:37] isaacs: reid: also, if you compile it in place, and then just run it by doing ./build/node, then it'd break, so that's another reason to go this direction.
[17:37] creationix: tjholowaychuk: sounds good
[17:37] isaacs: ie, never doing a "make install"
[17:37] reid: isaacs: yeah, exactly
[17:38] reid: good to know!
[17:38] aubergine has joined the channel
[17:38] creationix: shimondoodkin: on line 232 to need to generate the callback with something like "var callback = group()"
[17:39] shimondoodkin: creationix idid this already on line 312
[17:39] creationix: and then inside your callback where you call group(), instead do "callback(null, selection)" and callback(err)
[17:39] liucougar has joined the channel
[17:39] sechrist has joined the channel
[17:39] creationix: shimondoodkin: group's api is group()()(err, data)
[17:39] creationix: you call it once to make a group
[17:39] creationix: then you call the group once for each callback you want generated
[17:40] creationix: then you call the callback when you have data
[17:41] c4milo: anybody here doing addons in C++ ? 
[17:41] mikeal has joined the channel
[17:41] shimondoodkin: ok
[17:42] creationix: shimondoodkin: it's slightly complicated, but for the common use case, it's really elegant
[17:42] creationix: since you're normally just passing group() as the callback and never calling it directly
[17:42] tjholowaychuk: git stash is the greatestttt
[17:42] creationix: tjholowaychuk: yes it is
[17:43] creationix: especially if you like to rebase
[17:43] Rik` has joined the channel
[17:43] markwubben has joined the channel
[17:43] grahamalot has joined the channel
[17:44] grahamalot has joined the channel
[17:44] shimondoodkin: in reference to group()()(err, data), i need to do like g=group(); thren g2=g(); then g2(err, data), right ?
[17:44] aheckmann has joined the channel
[17:45] adinardi: aaadaaa~.
[17:45] micheil: hmm.. where'd ubunutu store it's apt-get sources list again..
[17:45] halorgium: micheil: /etc/apt/sources.list
[17:45] sechrist_ has joined the channel
[17:46] micheil: thanks
[17:46] difekta has joined the channel
[17:46] difekta: anyone have pointers for using bundler with a node.js project?
[17:47] difekta: we're using cucumber+rspec.
[17:47] creationix: shimondoodkin: this.group is a group generator. so "var group = this.group()", then group is a callback generator so "var callback = group()"  Then callback must be called for either error or success with the api callback(err, data)
[17:47] astrolin_ has joined the channel
[17:48] khug: git-up is a nice alternative to git pull
[17:48] khug: http://github.com/aanand/git-up
[17:48] creationix: shimondoodkin: calling this.group() reserves a slot in the arguments of the next step.  generating the callback reserves a slot within the array that will be passed to that argument, and calling the callback fills in that slow
[17:48] creationix: *slot
[17:48] astrolin_ has joined the channel
[17:48] khug: stashes & rebases across all branches
[17:48] creationix: shimondoodkin: you have to reserve the slot within the array before calling your async function
[17:49] micheil: mape: I'll be a little while, gotta setup my server to run node
[17:49] micheil: build-essential even.
[17:49] creationix: shimondoodkin: the "var group" and "this.group" are two different things, maybe I should use different names in my examples
[17:50] mape: micheil: kk
[17:50] Rik`: micheil: http://github.com/miksago/node-websocket-server/blob/master/README.md doesn't mention the connection.broadcast method
[17:51] jsilver: hi all
[17:51] shimondoodkin: creationix: aha, first sense i have is that i get it, i have to test it to see it works, thanks
[17:51] creationix: shimondoodkin: :)
[17:51] micheil: Rik`: it's brand new, and I haven't documented it yet.
[17:51] micheil: Rik`: take my word that it is there.
[17:51] mjr_ has joined the channel
[17:51] micheil: Rik`: I generally release a version, then do catch-up with documentation
[17:52] Rik`: micheil: oh in fact I haven't read the last modified date on README.rd, I should have
[17:52] malkomalko_ has joined the channel
[17:54] micheil: Rik`: no worries :)
[17:54] creationix: http://static.creationix.com/howtonode.vs.google.png, I know it's meaningless, but still fun
[17:54] Nathan__ has joined the channel
[17:55] maritz has joined the channel
[17:55] creationix: if you've gotten the new 205.186.160.54 dns for howtonode.org, it's running pure node, not even nginx in front
[17:55] creationix: just node of port 80
[17:56] creationix: *on
[17:57] mjr_: creationix: do you have a node-based load balancer / reverse proxy, or just dedicated an IP address to it?
[17:57] malkomalko has joined the channel
[17:57] Rik`: micheil: btw, I'm trying to come up with a good usecase to demo websockets
[17:57] creationix: mjr_: dedicated ip address with 4 child processes sharing the same fd
[17:58] sechrist has joined the channel
[17:58] micheil: Rik`: I think the best one I've seen is a collab drawing pad.
[17:58] Rik`: micheil: that's one thing I thought of
[17:58] micheil: also, wtf node?
[17:58] micheil: Checking for openssl                     : not found 
[17:58] micheil: Checking for function SSL_library_init   : yes 
[17:58] micheil: Checking for header openssl/crypto.h     : yes 
[17:59] mjr_: I know, ssl is clearly there.
[17:59] micheil: man.. building over ssh is awesome.. 
[17:59] micheil: there's no cpu / mem toll locally, but you get to see it doing stuff.
[18:00] micheil: (what, I don't do server admin stuff often)
[18:00] shimondoodkin: +1like: http://static.creationix.com/howtonode.vs.google.png, I know it's meaningless, but still fun
[18:01] creationix: http://gist.github.com/469781
[18:01] difekta: has anyone here tried to use factory_girl for a node.js project?
[18:01] creationix: mjr_: ^
[18:02] voodootikigod_: difekta: factory_girl is a ruby project afaik
[18:02] difekta: yes it is.
[18:02] voodootikigod_: ok so node is 100% javascript
[18:02] difekta: yup.
[18:02] voodootikigod_: from interface side
[18:02] voodootikigod_: so...
[18:02] difekta: but we're using cucumber for our acceptance testing.
[18:02] isaacs: voodootikigod: node is a lot of C++, too
[18:02] voodootikigod_: user side
[18:02] voodootikigod_: user side
[18:02] voodootikigod_: not dev side
[18:03] tmpvar: huh?
[18:03] difekta: cucumber will access the node.js server and check the results.
[18:03] voodootikigod_: ok
[18:03] isaacs: voodootikigod: right.  if your'e a user and you write a .node addon file, then you're using the C++ api
[18:03] voodootikigod_: so where would factory gilr fit in?
[18:03] isaacs: but you're right, no ruby in sight
[18:03] holydevil has joined the channel
[18:03] difekta: we want to have our tests say something like "when i fire a pixel for a facebook url"
[18:03] voodootikigod_: isaacs: contextually its 100% javascript
[18:03] isaacs: it'd be kind of rad (in a sick wrong way) to have a node addon that lets it run ruby files.
[18:03] micheil: what package gives you ab?
[18:03] shimondoodkin: today some girl called to me, she said that i'm cute and sweet, i didn't knew her and she did not said her name ether..
[18:04] difekta: we want to treat URL's as objects that can inherit and extend with different attributes (e.g. different URL structures).
[18:04] voodootikigod_: isaacs: please no
[18:04] difekta: shimondoodkin you're indian, right?
[18:04] jbr has joined the channel
[18:04] isaacs: hahaa
[18:04] shimondoodkin: no iam israeli
[18:04] voodootikigod_: difekta: ok... and
[18:04] difekta: shimondoodkin "did" is already in the past tense, so you would say "i didn't know her".
[18:04] qFox has joined the channel
[18:04] voodootikigod_: are you jut looking for a way to trigger you data to return something expected?
[18:04] sechrist has joined the channel
[18:04] MrTopf has joined the channel
[18:04] felixge has joined the channel
[18:04] felixge has joined the channel
[18:04] Rik`: micheil: apache2-utils ?
[18:05] MrTopf1 has joined the channel
[18:05] micheil: nup
[18:05] creationix: good evening felixge 
[18:05] tjholowaychuk: does node have a liquid template engine implementation?
[18:05] towski has joined the channel
[18:05] shimondoodkin: difekta: thanks it is welcome, my english is from audio books
[18:05] felixge: creationix: hey there : )
[18:05] felixge: ryah: are you still in europe?
[18:05] difekta: shimondoodkin =>  well then you're english is pretty good! :)
[18:06] sudoer has joined the channel
[18:06] difekta: voodootikigod basic point is, we want to make things more object oriented, rather than e.g. sticking in a predefined URL in the test.
[18:06] creationix: felixge: It's looking like I will get to go to jsconf.eu, are you going
[18:07] creationix: tjholowaychuk: I'm not sure binding to a host is working in connect
[18:07] felixge: creationix: I don't know if I'm speaking yet
[18:07] tjholowaychuk: creationix: shit really? hmm
[18:07] creationix: I bind howtonode.org to one IP, but if I hit another IP on the same machine I still get the site
[18:07] felixge: creationix: I have only bought one ticket for my business partner so far
[18:07] voodootikigod_: difekta: define more "object oriented"
[18:07] felixge: but yeah I think I'll go either way
[18:08] isaacs: felixge: hey, there you are
[18:08] felixge: isaacs: heya
[18:08] creationix: felixge: awesome, it would be good to finally meet you
[18:08] felixge: creationix: can't await it :)
[18:08] mtodd has joined the channel
[18:08] felixge: creationix: I think the "node crowd" will be much bigger this time
[18:08] voodootikigod_: felixge: yea ++ to creationix thought
[18:08] felixge: creationix: last time it was just 4-6 of us
[18:08] felixge: :)
[18:08] voodootikigod_: damn volcanoes 
[18:08] isaacs: felixge: so, it seems that paperboy's npm registry publish had been affected by an old bug leading to a 404 on the tarball.
[18:08] creationix: voodootikigod_: I still have the volcano theme on howtonode
[18:08] benburke_ has joined the channel
[18:08] creationix: I should update it for jsconf.eu
[18:08] felixge: isaacs: not good :)
[18:09] isaacs: felixge: i republished it, and set us both as maintainers.
[18:09] voodootikigod_: creationix: your a genius
[18:09] isaacs: felixge:  but what's published now is the code as of a few days ago.  it's still 0.0.1
[18:09] felixge: creationix: don't update it until you know there won't be a volcano again
[18:09] voodootikigod_: difekta: look here http://howtonode.org/why-use-closure
[18:09] felixge: creationix: can't guarantee for anything
[18:09] felixge: isaacs: that's good
[18:09] creationix: lol, maybe I'll get stranded in Berlin
[18:09] creationix: :)
[18:09] voodootikigod_: difekta: and then here: http://vowsjs.org/
[18:09] felixge: isaacs: I don't maintain paperboy very actively, that is I only merge patches I receive from time to time
[18:09] isaacs: kewl
[18:10] isaacs: so, the next time you publish it (or anything, really) with npm, just make sure that npm and node are up to date, and it shoudl be fine.
[18:10] creationix: isaacs: do you know if node supports binding to one IP on a machine, but not all of them?
[18:10] bradleymeck: isaacs maushu is _announcer im _utility
[18:10] reid: isaacs: is npm v0.1.19 released?
[18:10] creationix: I know if I bind to 127.0.0.1 I can't access it outside the machine
[18:10] creationix: so I'm assuming so
[18:11] difekta: voodootikigod with factory_girl, we can have some base class for a URL, and extend it conveniently. we can use sequences, to make a series of unique URL's that follow a common pattern, for really powerful testing.
[18:11] reid: isaacs: http://github.com/isaacs/npm/tarball/v0.1.19 yields 404, i think it used to work?
[18:11] felixge: btw. does anybody know if Amazon Ec2 is cheating when they give you 8 core machines?
[18:11] reid: isaacs: or homebrew devs put it there by mistake
[18:11] difekta: i mean object oriented in the sense that we're dealing with something more than a string. it can have multiple properties/methods and we can do some pretty cool things with that.
[18:11] creationix: I only run a couple of domains on my server usually, and I'd rather just bind to IPs directly instead of messing with vhosts and reverse proxies
[18:11] felixge: I tried to see how fast I could go with a simple hello world server using 8 processes
[18:11] [[zz]] has joined the channel
[18:11] jspiros has joined the channel
[18:12] felixge: but it actually didn't go much faster than when using a single process
[18:12] isaacs: reid: yeah... that's not the right url for the tarball
[18:12] creationix: felixge: what did you try?
[18:12] felixge: creationix: basically your github gist
[18:12] isaacs: reid: but it should work now, i guess
[18:12] creationix: felixge: I get linear speed improvement up to the number of cores on the machine
[18:12] reid: isaacs: what's the correct url?
[18:12] voodootikigod_: creationix: are you or do you know of someone banging out a UI friendly authentication module for connect btw
[18:12] huyhong has joined the channel
[18:12] creationix: voodootikigod_: IO friendly?
[18:12] micheil: okay.. soo.. I can't actually get ab on my server. wtf?
[18:12] creationix: *UI
[18:12] gJ|Alex has joined the channel
[18:13] voodootikigod_: IE standard form post
[18:13] voodootikigod_: versus http basic auth
[18:13] voodootikigod_: etc
[18:13] difekta: voodootikigod i use closures all the time. how are closures relevant to anything i've asked?
[18:13] isaacs: reid: the "correct" way to get the url is to parse http://registry.npmjs.org/npm/stable and look for the dist.tarball member
[18:13] isaacs: reid: or http://registry.npmjs.org/npm/-/npm-0.1.19.tgz
[18:13] creationix: voodootikigod_: not that I know of, but there are a few third-party modules on the wiki on github
[18:13] Rik`: micheil: http://packages.debian.org/sid/apache2-utils
[18:13] creationix: I haven't looked at all of them yet
[18:13] voodootikigod_: cool
[18:13] voodootikigod_: just wondering
[18:13] isaacs: but the github url should work now
[18:13] difekta: voodootikigod vows looks f-ing awesome!
[18:14] micheil: Rik`: ya, I installed that, and I don't have any ab program installed
[18:14] tjholowaychuk: voodootikigod_: there is janrain engage support with one of the contrib middleware
[18:14] voodootikigod_: difekta: thats how you SHOULD make it more object oriented, then you can trigger on the closure the state/mock you want
[18:14] tjholowaychuk: if your into that sort of thing
[18:14] Rik`: micheil: maybe it's only available to the root ?
[18:14] micheil: I don't think so..
[18:15] micheil: fail. 
[18:15] voodootikigod_: tjholowaychuk: thanks, but yea like you implied "that sort of thing" you and i same wavelength
[18:15] micheil: it is only available to root.
[18:15] creationix: is it bad that I don't even know that janrain engage is?
[18:16] maushu has joined the channel
[18:16] isaacs: isn't janrain the openid people?
[18:16] voodootikigod_: rpx now
[18:16] voodootikigod_: yea
[18:17] voodootikigod_: err
[18:17] voodootikigod_: was rpx now
[18:17] voodootikigod_: now called engage
[18:17] voodootikigod_: thats confusing
[18:17] voodootikigod_: basically its an auth proxy
[18:17] voodootikigod_: that returns open id tokens
[18:17] kriszyp has joined the channel
[18:17] reid: Is process.execPath set at compile time or runtime?
[18:18] creationix: reid: runtime
[18:18] creationix: it's awesome
[18:18] creationix: prefix is set at compile time
[18:19] MrTopf1: when I try to open up a fs.WriteStream I get "TypeError: Object #<an Object> has no method 'flush'" 
[18:19] reid: creationix: thanks!
[18:19] MrTopf1: looks like some internal API change problem
[18:19] creationix: tjholowaychuk: also I think the connect runner should have an option to drop to a specified user after binding to the port, so I can run my app on port 80 but not as root
[18:20] reid: though, it makes my life more difficult, because when using a package manager you get "/usr/local/Cellar/node/0.1.100/bin"
[18:20] JimBastard has joined the channel
[18:20] difekta: voodootikigod we're using cucumber for acceptance testing. we're in ruby land. for unit testing of the actual node.js javascript, vows looks great.
[18:20] reid: danger, will robinson.
[18:20] JimBastard: +10 for vows
[18:20] tjholowaychuk: creationix: that would be part of the daemonization process, if we ever get that in
[18:20] creationix: tjholowaychuk: it's seperate from that I think
[18:20] reid: homebrew should just remove the formula at this rate :/
[18:20] tjholowaychuk: could be
[18:21] tjholowaychuk: it wasin there but I tore it out due to not having enough apis to implement --daemonize properly
[18:21] bradleymeck: seems all the node-irc using bots died at the same time... wonder if that was the source of the boom since there is nothing in the log
[18:21] voodootikigod_: difekta: glad to help
[18:22] creationix: tjholowaychuk: well, I can add user setting, what flag should I use?
[18:22] tjholowaychuk: -u,--user ID|NAME
[18:22] tjholowaychuk: --group is in there too
[18:22] creationix: but eventually proper daemonizing would be great, 
[18:22] creationix: oh, it's already there
[18:23] creationix: hah
[18:23] tjholowaychuk: just waiting on ryan with whatever he wants to do for detaching
[18:23] tjholowaychuk: its there but im not sure if it is implemented anymore
[18:23] micheil: hmm.. I think my server's firewall is a little too strong..
[18:23] creationix: tjholowaychuk: so it doesn't work at the moment?
[18:23] micheil: http://brandedcode.com:8000/
[18:23] isaacs: tjholowaychuk: yeah, i'm curious about that too
[18:23] tjholowaychuk: creationix: I dont think so, maybe just grep for setuid
[18:23] creationix: alright
[18:24] isaacs: tjholowaychuk: i'd like to make supervisor able to detach and then re-connect to a process.
[18:24] creationix: the only problem with nvm is that It installs "connect" a path that root doesn't have
[18:24] creationix: I can't "sudo connect"
[18:24] zapnap has joined the channel
[18:24] jxson has joined the channel
[18:24] tjholowaychuk: ah yeah shitty you can still absolute it i guess
[18:25] tjholowaychuk: isaacs: detaching would be so nice lol get this damn thing out of the way
[18:25] isaacs: yeah
[18:25] isaacs: so, i guess what i'd want is a way to detach a process, and then also RE-attach to it
[18:25] creationix: isaacs: I thought about nvm last night for a bit, I would like to improve it
[18:26] isaacs: say, "give me a cp object that points to this specific pid, so i can kill it, watch it, etc."
[18:26] creationix: maybe we can talk about it on Monday
[18:26] isaacs: creationix: that'd be great.
[18:26] isaacs: maybe i'll be able to nvmify nave over the weekend :)
[18:26] jspiros has joined the channel
[18:26] creationix: I'm not sure what I want is even possible
[18:26] tjholowaychuk: im still using my branch of nvm
[18:26] tjholowaychuk: cant remember why now
[18:27] creationix: I want a "nvm" command that's available without sourcing bash stuff, but I don't want every node server I run to have an extra bash process above it
[18:27] micheil: there we go..
[18:27] micheil: mape: server's running.
[18:27] c4milo has joined the channel
[18:27] admc has joined the channel
[18:27] admc_ has joined the channel
[18:27] difekta: whenever i see projects like vows, i'm like, "what kind of mad genius has the time to write this, and then go make an awesomely designed site for it?"
[18:27] creationix: cloudhead is a mad genius 
[18:28] tjholowaychuk: programmers, because we have nothing better to do
[18:28] tjholowaychuk: haa "You're a dynamo! do you ever sleep?! :)"
[18:29] jsilver: hey guys
[18:29] micheil: alright... who did a HEAD request?
[18:29] mjr_: Yeah, I wish I could make better looking websites.
[18:30] tjholowaychuk: ACTION implementing ejs then liquid
[18:30] javajunky has joined the channel
[18:31] JimBastard: we talkng about cloudhead again?
[18:31] JimBastard: +10
[18:31] JimBastard: :-)
[18:31] JimBastard: there was a great talk last night at nyc.js about vows and resourcer 
[18:32] mikeal has joined the channel
[18:33] gwoo has joined the channel
[18:33] kersny has joined the channel
[18:34] benbinary: JimBastard: do you know if anybody recorded the talk?
[18:34] tmpvar: it wasnt recorded
[18:35] donspaulding1 has joined the channel
[18:36] felixge: hey, does anybody have a node-based software as a service product build on node yet?
[18:36] felixge: Or can we still call "first!" on tuesday? :)
[18:36] MrTopf1: oh wait, I still have until tuesday? ;-)
[18:36] felixge: MrTopf1: yes : )
[18:37] MrTopf: lets think about something quickly ;-)
[18:37] teemow has joined the channel
[18:37] creationix: felixge: which product, or can you say?
[18:37] aubergine has joined the channel
[18:37] felixge: creationix: http://transloadit.com/ of course
[18:37] MrTopf: speaking of it, I think teemow did something SaaS like with node ;-) 
[18:38] BrianTheCoder has joined the channel
[18:38] creationix: oh, right, I knew that
[18:38] Validatorian: I'm having a bit of trouble here -- is there any way I can take a timestring (11:31:12) and convert it to a javascript date object? I would assume, new Date('11:31:12') would return todays date, with that time
[18:38] JimBastard: sorry benbinary , no recording :-\
[18:38] felixge: creationix: (have you checked out the new homepage?)
[18:38] creationix: felixge: looking
[18:38] MrTopf: Hi teemow!
[18:38] JimBastard: it was very informal meeting, nyc.js is mostly discussion based which is awesome
[18:39] tjholowaychuk: felixge: sweet robot lol
[18:39] felixge: tjholowaychuk: thanks :)
[18:39] tjholowaychuk: did you draw it?
[18:39] JimBastard: ahaha nice UI felixge 
[18:39] creationix: felixge: nice.  I love the robots and the Balsamiq mockup art
[18:39] felixge: tjholowaychuk: nope, they're done by http://mark-story.com/
[18:39] MrTopf: felixge: nice, but I would be more interested in the source code of that service ;-) 
[18:39] felixge: tjholowaychuk: awesome guy, worked with him on the CakePHP core
[18:40] tjholowaychuk: ah cool!
[18:40] tjholowaychuk: good luck with the service man looks good
[18:40] felixge: MrTopf: well the website is in PHP, and the source of the API is in node. But neither are going to be open source anytime soon
[18:40] felixge: : |
[18:40] tjholowaychuk: need more of that on the web IMO, so many things are done over and over
[18:40] felixge: but we'll try to open source certain parts of it
[18:40] felixge: MrTopf: http://github.com/felixge/node-formidable is already open source
[18:40] mjr_: Validatorian: you'll need to supply more information than that to the Date constructor.  https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Date
[18:41] MrTopf: felixge: cool
[18:41] sh1mmer: MrTopf: small world.
[18:41] MrTopf: felixge: how do you do image resizing btw, simply calling imagemagick etc. or is there some JS lib for that?
[18:41] mjr_: Validatorian: which probably means you'll have to parse out the string and then feed the args into new Date(), or else make up a new string that Date.parse() understands.
[18:41] felixge: MrTopf: we use an orchester of about ~15 different command line tools
[18:41] benbinary: felixge: I was looking at transloadit last night, I really like your solution, great idea with the robots.
[18:41] felixge: MrTopf: images are done via image magick so
[18:42] felixge: benbinary: glad you like it : )
[18:42] MrTopf: ah, ic
[18:42] creationix: felixge: you should contact my old boss at newmediagateway.com, they do a lot of transcoding stuff
[18:42] MrTopf: would be nice to have canvas serverside ;-)
[18:42] benbinary: felixge: also, thanks for formidable, that'll come in handy
[18:42] MrTopf: sh1mmer: it gets smaller and smaller ;-)
[18:42] sh1mmer: MrTopf: I keep bumping into Plone people.
[18:43] MrTopf: felixge: and formidable looks formidable on first look :)
[18:43] felixge: : )
[18:43] felixge: MrTopf: well, image magick is a pretty optimized tool. Canvas is pretty much the opposite :)
[18:44] felixge: MrTopf: but yeah, for stuff like drawing complex patterns I'd not want to use image magick
[18:44] MrTopf: nevertheless I like APIs more than child processes with command line params ;-)
[18:44] MrTopf: but one could maybe wrap it
[18:45] JimBastard: you should always wrap it up
[18:45] MrTopf: sh1mmer: as long as it's not the plan to port Plone to node.js… ;-) or maybe it would be good if you would rewrite it in that process
[18:45] sh1mmer: MrTopf: let's not but say we did.
[18:45] sh1mmer: ACTION is enjoying a performant system
[18:46] MrTopf: yeah, and maybe the time of big server side apps is over, too.. 
[18:46] micheil: I should've made the broadcast on an interval..
[18:46] MrTopf: so now I am using sys.pump for my upload process and suddenly it's quite slow
[18:47] MrTopf: so probably I am doing something wrong ;-)
[18:48] benbinary: anybody doing node knockout?
[18:48] bradleymeck: lots
[18:48] mjr_: Yeah, I think most people in here are doing it in some way, aren't they?
[18:49] benbinary: excellent, just signed up last night
[18:50] mjr_: I'm really looking forward to seeing what people will come up with.
[18:50] JimBastard: benbinary: mamma said knock you out
[18:50] creationix: I'm a judge so I hope it will be good
[18:50] JimBastard: im on the NYC Nodejitsu Ninjas, our team is the best
[18:50] creationix: I'll bet it is
[18:51] JimBastard: o
[18:51] micheil: JimBastard: is that you doing the spam test on my websocket server?
[18:51] JimBastard: :p
[18:51] mjr_: creationix: is there a Sencha team?
[18:51] brianmario has joined the channel
[18:51] JimBastard: micheil: no
[18:51] micheil: k
[18:51] JimBastard: micheil: do you want me to?
[18:51] micheil: someone is. it's kinda funny.
[18:51] JimBastard: micheil: if i was gonna try to ddos you, i feel like we have the type of relationship where id give you warning
[18:51] sh1mmer: Am I missing something or are there no docs for dgram.js ?
[18:51] mjr_: micheil: I ran it in Safari, and it didn't go nearly as fast as the stern warning would have me believe.
[18:52] mjr_: sh1mmer: I'm actually working on dgram.js right now.  No, there are no docs, and the API is likely to change.
[18:52] micheil: mjr_: ya, the spam test is only really a spam test running on localhost
[18:52] MrTopf: what is or used to be sys.p ?
[18:52] creationix: mjr_: I don't think so.  Also sencha might be sponsoring
[18:52] creationix: might pose a conflict of interest
[18:52] sh1mmer: mjr_: ok I think I'll just use binding then
[18:52] mjr_: sh1mmer: the best doc for dgram right now is the dgram test.
[18:53] micheil: okay.. I actually changed the port number for access the html page..
[18:53] JimBastard: if for any reason my team actually makes it towards the end we will bow out. i want the winner to be someone from outside the core node people
[18:54] JimBastard: i like winning stuff, but this event is more about node then winning
[18:54] JimBastard: and node winning is a much bigger win for me :-)
[18:54] creationix: JimBastard: don't worry, there are lots of winners
[18:54] JimBastard: hee hee
[18:55] boaz has joined the channel
[18:55] JimBastard: im excited, will be a fun time
[18:55] benbinary: everybody wins
[19:01] bradleymeck: !translate English:Japanese Everybody wins!
[19:01] _utility: みんなの勝！
[19:01] micheil: mjr_: the only thing that would probably take down this server, other then the bug I'm trying to find, would be possibly an extremely large packet.
[19:01] mitkok has joined the channel
[19:02] micheil: mjr_: (like, bigger then you can probably create in your browser, due to memory limits.)
[19:02] mjr_: I love extremely large packets.
[19:02] micheil: try me.
[19:02] micheil: :P
[19:02] mjr_: oh, you mean large WS message, not IP packet.
[19:03] micheil: mjr_: yeah
[19:03] mjr_: I'm living in packet land lately, but I hope to get back to WebSocket land eventually.
[19:04] mjr_: I'm bummed that iOS4 dropped support for WS.
[19:04] mjr_: Otherwise I'd be using it right now.
[19:04] micheil: mjr_: heh heh.
[19:04] nefD: !translate English:Japanese Godzirra is attacking the shitty!
[19:04] mscdex: but websockets aren't supposed to be used by anybody yet!
[19:04] _utility: Godzirraはくだらないを攻撃している！
[19:04] rtl has joined the channel
[19:05] mjr_: oh shit!  nobody tell micheil.
[19:05] micheil: :P
[19:05] mscdex: ;-)
[19:05] tilgovi has joined the channel
[19:05] mjr_: I did write a little logfile tailer in WS for an internal tool, and it's so nice.
[19:06] mjr_: compared to XHR.  Fuck XHR.
[19:06] mscdex: why the XHR hatred?
[19:06] bradleymeck: ie6 is why i hate
[19:06] bradleymeck: everything
[19:06] micheil: ACTION is actually going to at somestage write a cometd plugin to his websocket server.
[19:06] micheil: and a tcp plugin..
[19:07] bradleymeck: npapi gogo
[19:07] mscdex: bradleymeck: that hate extends to all versions of ie
[19:07] mjr_: For doing very low latency stuff, it's hard to get XHR to do really simple things.  Error handling is awful, etc.
[19:08] mjr_: No way to reliably get partial updates.
[19:08] mscdex: well yeah, XHR isn't low latency by design, compared to the likes of websockets anyway
[19:08] micheil: this is how I roll: http://drp.ly/1kYk4X
[19:08] mjr_: ACTION shakes fist at XHR
[19:08] mscdex: multipart is better, but that's mozilla only :\
[19:09] franksalim: http://www.w3.org/TR/XMLHttpRequest2/
[19:09] franksalim: xhr2 > multipart
[19:09] mscdex: meh
[19:10] mjr_: Isn't XHR2 already mostly out there?
[19:10] mscdex: multipart allows you to constantly stream though
[19:10] franksalim: so does xhr2
[19:10] mjr_: you can stream uploads?
[19:10] mjr_: Like, start sending from a browser before you have all of the data?
[19:10] dgathright has joined the channel
[19:10] franksalim: ooh, no. good point
[19:10] mjr_: then progressively add more data to send into the POST request?
[19:10] mjr_: Because that is why I hate XHR.
[19:11] franksalim: you can only stream in one direction
[19:11] mscdex: can you stream an unknown length of content though with xhr2?
[19:11] franksalim: you get notification of upload progress but you cannot add content on the fly
[19:12] felixge: alright, time for beer : )
[19:12] c4milo has joined the channel
[19:12] mjr_: Also, why is the W3C so afraid of adding any kind of error reporting?  "error" isn't not that useful.
[19:12] franksalim: on xhr or websocket?
[19:12] WALoeIII has joined the channel
[19:13] mjr_: The action you'd take on DNS error is different than on connection timeout.
[19:13] mjr_: Both have terrible error reporting.
[19:13] bradleymeck: why doesnt the w3c believe in CSS variables being valuable? because they charge tons of money to think about things without using them thoroughly
[19:14] mjr_: Yeah, that's why I like HTML5, even though it is a security/complexity/Crockford disaster.  Google/Apple are actually using these things.
[19:14] charlesjolley- has joined the channel
[19:16] mscdex: The Crockford Files!
[19:16] mjr_: still funny
[19:17] V1 has joined the channel
[19:17] franksalim: reporting errors to application code has a security impact
[19:17] bradleymeck: w3 has good ideas for streamlining but lacks usage and desire for complexity
[19:18] franksalim: i won't engage in political conversation about the people or the process, though
[19:18] franksalim: if you want to really why people believe what about css variables or anything else, you can read about it
[19:18] franksalim: *really know
[19:19] mjr_: franksalim: everything is a tradeoff, for sure.  The current API makes it hard to write reliable network programs, and therefore makes web apps less "good" than native apps.
[19:20] franksalim: mjr_, ok, i'll buy that
[19:20] b_erb has joined the channel
[19:20] mjr_: Somebody needs to photoshop Crockford's face onto this:  http://www.videospot.co.za/scripts/upload/img/rock2.jpg
[19:22] Ori_P has joined the channel
[19:23] BrianTheCoder has joined the channel
[19:24] underdev has joined the channel
[19:24] bradleymeck: i have read tons of stuff on CSS variables, nesting, multiple property setting, relative values, etc being bad. And all of them remind me of people who tell me in math class the origin must be at 0,0 on a piece of graph paper...I feel differently
[19:25] hdon has joined the channel
[19:27] bradleymeck: ACTION goes off before exploding about CSS
[19:27] zomgbie has joined the channel
[19:30] mitkok has joined the channel
[19:37] pgriess has joined the channel
[19:41] pquerna: random question, has any compiled a large node.js project using the google clsure compiler? is it faster/slower?
[19:42] bradleymeck: it is faster if you use ADVANCED_COMPILATION, just minifying only speeds up load time
[19:43] pquerna: right, thats what i meant :)
[19:44] ryan_gahl has joined the channel
[19:44] micheil: JimBastard: you've probably been waiting for this, but do you want to run the spam test?
[19:44] micheil: if so, save this gist to a file: http://gist.github.com/469937 and open it up.
[19:45] JimBastard: micheil: im kinda busy, wrapping up some last minute stuff at work
[19:45] micheil: then just click "Run Spam Test"
[19:45] JimBastard: i can run it if you want
[19:45] micheil: (that's an open off to anyone else too)
[19:47] jsilver: micheil I got disconnected or something
[19:47] jsilver: im gonna go for a bike ride tho
[19:47] micheil: okay
[19:47] jsilver: laterz
[19:47] micheil: wow.
[19:47] tmpvar: running the spamz
[19:47] micheil: found the bottle neck in the spam test
[19:47] tjholowaychuk has joined the channel
[19:47] paulwe_ has joined the channel
[19:47] micheil: writing the data to the DOM
[19:47] tmpvar: yeah
[19:48] JimBastard: micheil: you could make the test a bit more browser friendly
[19:48] micheil: I'm currently hitting my server with something near 90-160KB/s
[19:48] JimBastard: if you just reset the DOM a little bit it would be more managable
[19:48] JimBastard: this is gonna freeze my browser eventually
[19:49] micheil: reload the gist.
[19:49] micheil: it isn't writing to dom now.
[19:50] tmpvar: running new gist
[19:50] tilgovi has joined the channel
[19:51] micheil: what was that top thing for network i/o?
[19:51] mjr_: micheil: you should patch my http_trace to understand WebSocket
[19:51] zomgbie has joined the channel
[19:52] micheil: mjr_: later.
[19:52] tmpvar: micheil, when you find it let me know :)
[19:52] micheil: okay.. soo.. we're actually sending so much data it's lagging the slower connections.
[19:53] micheil: I'm see a few dropped packets..
[19:53] aheckmann has joined the channel
[19:55] bpot has joined the channel
[19:57] creationix has joined the channel
[19:57] charlesjolley- has joined the channel
[19:58] creationix_ has joined the channel
[19:59] micheil: so.. should I leave it running while I sleep or kill it?
[20:02] DracoBlue has joined the channel
[20:05] mw has joined the channel
[20:05] shahbaz has joined the channel
[20:06] bmizerany has joined the channel
[20:06] rob___ has joined the channel
[20:08] tzmartin has joined the channel
[20:09] falconair: hi, i often see "var self = this" in node.js code, what does that mean?  why not just use "this?"
[20:09] JimBastard: falconair: makes a reference to this for later use?
[20:09] mjr_: falconair: because the value of "this" changes inside of anonymous functions.
[20:09] micheil: shutdown the server.
[20:09] JimBastard: yeah, the scope of this could change, but you wanted the "old" this
[20:10] mjr_: So the variable self captures the current state of "this" so that the callbacks have the context they need.
[20:10] JimBastard: that sounds right to me, i think
[20:10] ryah: hi
[20:10] JimBastard: all hail king node and his water breathers
[20:10] JimBastard: sup ryah 
[20:10] ryah: sup
[20:10] falconair: i see, "self" makes sense now, thanks all
[20:11] mjr_: ryah: node jobs, how about that?
[20:11] mjr_: More people getting paid to use node.
[20:11] ryah: yeah. a bit frightening
[20:12] tzmartin: ryah: no pressure ;-)
[20:12] JimBastard: someone asked me if i was trying to get my job to switch to node. i said no. they said, well wouldnt that be cool if they did? i said no. they said, what would you do if they switched to a node stack? i said, i'd quit.
[20:12] JimBastard: :-)
[20:13] micheil: ryah: not a lot, just been stress testing my websocket server
[20:13] ryah: paris is really hot :(
[20:13] mjr_: SF is cold
[20:13] ryah: good
[20:13] JimBastard: nyc is hot as balls
[20:14] JimBastard: ryah: we had some great node talks going at nyc.js last night. talking about cloudheads stuff a bunch and dual-sided libraries
[20:14] mjr_: I kind of wish it was a bit warmer.  It's even cold and cloudy across the bay in Oakland.
[20:14] micheil: ryah: a few figures: max outgoing: 837.90 kb/s, incoming: 580.61 kb/s, max cpu load: 44.30%, avg: 0.59% 
[20:15] micheil: ryah: with graphs: http://drp.ly/1l0e2z
[20:17] ryah: micheil: what's your test?
[20:17] ryah: micheil: sending lots of little messages?
[20:18] joshbuddy has joined the channel
[20:20] ryah: what do people think about loading modules in their own global contexts?
[20:20] ryah: pros:
[20:20] ryah: - would allow include()
[20:20] ryah: - safer
[20:20] ryah: cons:
[20:20] ryah: - less JS-y
[20:20] ryah: - instanceof might break?
[20:20] tjholowaychuk: ryah: what do you mean?
[20:20] tjholowaychuk: ryah: a pseudo global scope for modules?
[20:20] SubStack: afer?
[20:21] SubStack: s/^/s/
[20:21] ryah: tjholowaychuk: a new context for each module
[20:21] tjholowaychuk: ryah: ah :) hmmm
[20:21] ryah: using Script.evalInContext (or whatever it's called)
[20:22] tjholowaychuk: ryah: a few months ago I would have probably been +1 but probably not now
[20:22] tjholowaychuk: im happy with the module system 
[20:22] tjholowaychuk: mostly
[20:22] c4milo: +1 in its own context 
[20:22] tjholowaychuk: for actual globals would you HAVE to use "global" then?
[20:23] DracoBlue: +1 for an option to switch that on and off
[20:23] DracoBlue: ;)
[20:23] tjholowaychuk: or just no globals at all i guess lol
[20:23] bradleymeck: ah ppl complaining about weather, come to texas with oilly rain 100+ temps for 3 months straight and hail, still dunno why it hails in this temp
[20:25] mde: ryah: Seems like that would also change how to share code between server and browser.
[20:25] DracoBlue: wouldn't different js context for each require break the closures in the callbacks?
[20:25] sveisvei has joined the channel
[20:25] DracoBlue: Or is this a different thing? I am not so in v8/node.JS c depth.
[20:25] ryah: mde: slightly
[20:26] ryah: DracoBlue: no, i don't think so
[20:27] mde: ryah: So you mean requiring the same module in multiple places would be different copies? Or am I misunderstanding?
[20:27] bradleymeck: if they have their own global context that doesnt break Array.isArray() i think itll be ok, also if we break instanceof ill be one hell of a sad panda
[20:28] markwubben_ has joined the channel
[20:29] hellp has joined the channel
[20:29] c4milo: guys please read before say something 
[20:29] c4milo: http://code.google.com/apis/v8/embed.html#contexts
[20:29] DracoBlue: Just one other thing about the context. Is this like an entire new "context" or is it copied from somewhere? I am thinking about global extending the String prototype, and may still want to have the possibility to have this for all strings. Generated in any module. Is this still possible?
[20:29] DracoBlue: PS: Last newbie question ;)
[20:30] DracoBlue: c4milo: thanks for the link
[20:30] c4milo: DracoBlue: your welcome :)
[20:30] mjr_: Man, V8 is awesome.
[20:31] benburkert has joined the channel
[20:31] khug: instead of making new contexts all willy nilly, why not just avoid polluting the global namespace?
[20:33] khug: this should be considered very impolite behaviour imo
[20:33] javajunky has joined the channel
[20:33] jaywalk has joined the channel
[20:33] ryah: it would be nice to have include()
[20:33] mjr_: khug: it's more to minimize the impact of mistakes.
[20:33] jaywalk: hey all
[20:34] ryah: include('http'); ... createServer(...
[20:34] khug: mjr_: mistakes?
[20:34] tjholowaychuk: ryah: I did that a while back with import() if you remember
[20:34] JimBastard: sup jaywalk 
[20:34] tjholowaychuk: sucks that it has a decent hit on performance though
[20:34] zomgbie has joined the channel
[20:34] mde: I think I understand the idea of execution contexts -- I'm wondering if that would change module caching.
[20:34] mjr_: Of course you should TRY not to pollute the global namespace, but sometimes you do it accidentally.  This is especially true when pulling in modules from other people.
[20:35] ryah: no, modules would still be cached
[20:35] bradleymeck: then again sometimes it is on purpose, like with underscore.js
[20:35] bradleymeck: would make anyone that wants to change a native's prototype painful
[20:35] DracoBlue: +1 ;) this should still be possible at least.
[20:35] jaywalk: JimBastard: testing node for the first time :)
[20:36] TrisMcC has joined the channel
[20:36] JimBastard: cool
[20:36] DracoBlue: but we still have GLOBAL[key] for that, don't we?
[20:36] Aaaarg_ has joined the channel
[20:36] jaywalk: wargames got me motivated for starting ;)
[20:36] khug: anyone have numbers on how expensive new contexts are?
[20:36] JimBastard: cool cool, mape made that
[20:36] JimBastard: hes around
[20:36] JimBastard: make sure to check out the modules page on the node wiki
[20:36] JimBastard: lots of good stuff in there
[20:36] jaywalk: but I have problems with the websocket side running on both debian and opensolaris
[20:36] DracoBlue has left the channel
[20:36] mde: Okay, then other than potential instanceof breakage, doesn't sound terrible.
[20:36] mde: As long as it's still possible to globalize if you want to.
[20:36] dgathright_ has joined the channel
[20:36] tjholowaychuk: khug: I had a hack before for import() ( same as include() conceptually ) but using "with" in the generated anonymous func wrapper
[20:36] jaywalk: mape: great job, looks very promising :)
[20:36] c4milo: khug: http://translate.google.ru/translate?js=y&prev=_t&hl=ru&ie=UTF-8&layout=1&eotf=1&u=http://sysoev.ru/prog/v8.html&sl=ru&tl=en
[20:37] tjholowaychuk: khug: not sure if it would be faster or slower than that
[20:37] mape: jaywalk: ?
[20:37] c4milo: khug: http://groups.google.com/group/nodejs/browse_thread/thread/f07009bdbcc322f0/cc1202010e42aaea?show_docid=cc1202010e42aaea&fwc=1
[20:37] jaywalk: mape: I'm playing with node-wargames :)
[20:38] mape: ok
[20:38] khug: ouch
[20:38] jaywalk: mape: the websocket-server readme says it has issues with ubuntu and solaris, the servers i had available run opensolaris and debian and I am having issues :)
[20:38] c4milo: "Actually we are now much faster at creating new contexts than we were 
[20:38] c4milo: when this was written.  We can create a new context and then throw it 
[20:38] twomashi has joined the channel
[20:38] c4milo: away immediately in around 200us"
[20:39] c4milo: Erik Corry said that 
[20:39] mape: jaywalk: then you should speak with micheil 
[20:39] khug: If I'm reading correctly, that's 2ms *per module* and potentially *per request* to avoid using a best practice
[20:39] jaywalk: mape: ok :) do you know what wargamez.mape.me runs on?
[20:39] mape: jaywalk: debian 4
[20:40] ryah: we're not talking about creating contexts for earch request
[20:40] jakehow has joined the channel
[20:40] ryah: just for each module
[20:40] jaywalk: mape: ok, its debian 5 for mine but guess that should work, my fault most probably :)
[20:40] ryah: the performance impact should be little
[20:40] ryah: mape: http://wargamez.mape.me/ isn't working...
[20:40] ryah: (for me)
[20:40] mape: These are not the droids you are looking for
[20:40] khug: sounds like a hack to me
[20:41] mape: ryah: Works for me.
[20:41] c4milo: ryah: I'm agree with create context's per module, that would be more safe for node itself 
[20:41] mde: It's definitely less JavaScripty.
[20:41] mape: ryah: What browser?
[20:41] ryah: commonjs is less javascripty
[20:41] ryah: *commonjs modules
[20:41] ryah: mape: chrome
[20:42] ryah: mape: might be a firewall
[20:42] mape: Yeah running on wonky port
[20:42] mde: ryah: Right, it's a continnum, and how far do you want to go, I guess.
[20:44] mape: micheil: neat, got the bug fixed? :)
[20:47] bradleymeck: O-o i think i just made a libming working copy for node... its saving actionscript... lol server js to flash file to the browser
[20:48] c4milo: ryah: in node source code, where do persistent symbols get disposed ?  
[20:49] JimBastard: bradleymeck: lolwut
[20:49] JimBastard: sounds like haxe
[20:49] twomashi has left the channel
[20:50] ryah: c4milo: NODE_PSYMBOL() things? never
[20:50] bradleymeck: it is like haxe but i find ming better than haxe for procedural production
[20:51] c4milo: ryah: what about addons ? do they need dispose them ?
[20:52] JimBastard: i think im about a day away from breaking down and offering a bounty for an audio pipe out of ndoe
[20:52] rictic has joined the channel
[20:52] JimBastard: node
[20:52] ryah: c4milo: addons don't get unloaded
[20:54] rob___ has joined the channel
[20:54] gb|work has joined the channel
[20:54] gb|work: hi there, is there a good write-up on how to implement listeners in the node.js server?
[20:54] bradleymeck: listeners for what?
[20:55] dgathright has joined the channel
[20:56] c4milo: ryah: I got it , thank you. I was confused about it :)
[20:57] mscdex: mjr_: ping
[20:58] mjr_: hey
[20:58] jakehow has joined the channel
[20:58] mscdex: mjr_: http://img638.imageshack.us/img638/9730/crockfordfiles.png
[20:58] mjr_: yes!
[20:58] mjr_: That's awesome.
[20:58] gb|work: so, let's say i have a request to the server that should save something in the DB
[20:58] gb|work: how can i save it, and then on db save spit out response to the user
[20:59] JimBastard: gb|work: you should check out howtonode.org
[20:59] gb|work: JimBastard: on it, anything specific?
[20:59] JimBastard: gb|work: node doesnt come with any databases by default
[20:59] JimBastard: gb|work: which is a good thing, but it means you'll have to pick your stack
[20:59] mscdex: photoshop ftw!
[20:59] gb|work: JimBastard: i understand, i'm feeding mongodb
[21:00] JimBastard: gb|work: so do you have a mongodb module working for node?
[21:00] JimBastard: there are a few
[21:00] JimBastard: its just gonna be callbacks, you have the callback for http.server ping mongo, in in that callback you can return the resp to the server
[21:00] JimBastard: if thats the way you want to do it.....
[21:00] gb|work: JimBastard: yes, i'm writing it to the DB just fine. all i'm saying is i need to implement callbacks
[21:00] gb|work: exactly
[21:00] gb|work: that's what i'm asking
[21:01] JimBastard: so yeah, it should be really easy if you are that far
[21:01] JimBastard: paste us your code
[21:01] JimBastard: it should just be a matter of nesting the callback
[21:01] JimBastard: and you should be good to go
[21:02] gb|work: JimBastard: http://pastie.org/1038144
[21:02] JimBastard: gb|work: at a quick glance that looks right...but i gotta go sorry
[21:02] gb|work: should i resp to the server after the DB record is saved?
[21:02] JimBastard: 5pm meeting
[21:02] gb|work: k, thx
[21:03] Avius has joined the channel
[21:03] ryah: ACTION gone
[21:03] viktors has joined the channel
[21:04] pgriess: creationix: yt?
[21:04] creationix: pgriess: yes?
[21:04] pgriess: creationix: prototype of vhost routing
[21:05] pgriess: creationix: http://gist.github.com/470053
[21:05] pgriess: creationix: works, but is undoubtedly full of holes (socket cleanup is a mess, lots of other edge cases)
[21:05] Astro: emacs js2-mode ain't like visionmedia coding style. meh.
[21:05] creationix: pgriess: cool, I'm in a meeting, will look at it later
[21:05] pgriess: creationix: l8
[21:10] mape: creationix: If my assetmanager is faster when I don't have your cache module running.. What is going on?
[21:10] ctp_ has joined the channel
[21:11] creationix: mape: the dafault cache timeout it instant
[21:11] creationix: so it only helps with high concurrent load
[21:12] creationix: pgriess: is this passing the fd or proxying?
[21:12] mape: well yeah, minde does 17000req/sec with the cache on it does around 13000
[21:12] pgriess: creationix: passing the fd
[21:12] pgriess: creationix: reads enough of the stream to get all req headers and saves a copy of the data
[21:12] pgriess: creationix: then stops reading and sends the data + fd over to the worker
[21:13] pgriess: creationix: sends already-read data so that the http stack in the worker can run un-modified
[21:13] pgriess: creationix: that's the ondata() call at the end of onmessage()
[21:13] creationix: oh, I see, using your worker lib
[21:13] pgriess: creationix: but of course ;)
[21:13] creationix: looks cool
[21:13] pgriess: creationix: its a hack, but i just wanted to prove to myself that it was possible
[21:13] tjholowaychuk: mape: are you open sourcing that soon? (unless it is already haha)
[21:14] mape: tjholowaychuk: Yeah writing the readme now
[21:14] tjholowaychuk: mape: cool man
[21:14] aheckmann: sweet
[21:14] creationix: pgriess: very impressive, hopefully we make it 100% reliable and package it in an easy to use way.
[21:14] admc has joined the channel
[21:14] admc_ has joined the channel
[21:15] pgriess: creationix: yeah
[21:15] rob___ has joined the channel
[21:16] pgriess: creationix: anyway, feel free to steal this if you want it
[21:16] creationix: ok, thanks
[21:16] mape: Anyway to bold something in a code block in markdown?
[21:17] tjholowaychuk: mape: __foo__
[21:17] tjholowaychuk: or **foo**
[21:17] tjholowaychuk: oh
[21:17] tjholowaychuk: fuck
[21:17] tjholowaychuk: in a code block i dont know
[21:17] tjholowaychuk: you can still use html tags so i guess you could wrap and have some strong tags
[21:18] rob___ has joined the channel
[21:18] mape: Doesn't seem to work in code blocks, owell
[21:18] difekta: we're using cucumber to test our node.js app at a high level (as if we're a "browser"), but we can't test certain things easily because of the asynchronous nature of node.js. (e.g. testing that a post to a URL caused a new record to be created with mongoDB).
[21:18] difekta: maybe we should just be using Vows and leave cucumber out entirely?
[21:19] mscdex: sounds like cucumber is leaving you in a pickle
[21:19] tmpvar: lol
[21:19] JimBastard: gb|work: yes, dont respond until db save is done
[21:19] JimBastard: difekta: vows ++
[21:19] tmpvar: vows looks pretty cool.. sort of painful for certain usecases though
[21:20] JimBastard: which ones tmpvar ?
[21:20] JimBastard: we are kinda building our infrastructure around vows
[21:20] tmpvar: umm, there was one brought up last night
[21:20] tmpvar: nested tests
[21:20] JimBastard: yeah im not too worried about that, its just syntax
[21:20] tmpvar: and, I meant to ask.. how do you set up your sample data?
[21:20] difekta: we can't just not respond until the save is done, because in production that would make no sense.
[21:21] JimBastard: tmpvar: sample data for what?
[21:21] JimBastard: tests?
[21:21] tmpvar: yeah
[21:22] JimBastard: i mean, you just write it in there?
[21:22] viktors has joined the channel
[21:22] JimBastard: what kind of sample data you talking about?
[21:22] JimBastard: stubs?
[21:22] tmpvar: when you connect to a db
[21:22] tmpvar: and you expect a certain set of data to be there
[21:22] JimBastard: you just set that as the topic?
[21:22] tmpvar: how do you ensure that data is actually there before running the test?
[21:22] JimBastard: ohhh 
[21:23] JimBastard: im lost i dunno
[21:23] JimBastard: its end of day
[21:23] difekta: oh, no worries. the response doesn't happen until the callback is fired.
[21:23] JimBastard: i got my theremin at home waiting for me
[21:23] tmpvar: says the fried brain to another fried brain
[21:25] mtodd has joined the channel
[21:25] gb|work: how can implement connection pooling in node for mongo?
[21:28] JimBastard: gb|work: i would think the mongo module would already do that?
[21:28] sh1mmer has joined the channel
[21:28] JimBastard: gb|work: what are you using to talk to mongo?
[21:29] gb|work: JimBastard: yes, i'm using it to talk to mongo
[21:29] gb|work: are you done with your meeting? was it a standup? :)
[21:29] JimBastard: no, product demo
[21:30] JimBastard: gb|work: WHAT are you using to talk to mongo
[21:30] JimBastard: link?
[21:30] gb|work: node-mongodb-native
[21:31] JimBastard: gb|work: Notes The current version does not support connection pooling, but it will be implemented soon.
[21:31] JimBastard: http://github.com/christkv/node-mongodb-native
[21:32] JimBastard: gb|work: open up an issue or send the guy a message about it
[21:32] JimBastard: looks like they are already working on it
[21:32] teemow has joined the channel
[21:33] gb|work: JimBastard: any other recommendations? I'd love to take node to prod somewhat soon
[21:33] JimBastard: gb|work: we are using couchdb and cradle atm
[21:33] JimBastard: also resourcer (not released)
[21:33] JimBastard: im not a mongo fan
[21:34] gb|work: ic, got it
[21:35] JimBastard: there are other mongo modules
[21:35] JimBastard: im sure someone knows one that has connection pooling
[21:35] JimBastard: is that a breaking point for you?
[21:35] JimBastard: does the connection have to pool?
[21:39] Shorrockin has left the channel
[21:39] saikat has joined the channel
[21:47] gb|work: well, we haven't done any perf testing yet, but at some point we'll prolly have to have connection pooling
[21:47] gb|work: we don't want to create connection on every request
[21:49] felixge has joined the channel
[21:54] mitkok has joined the channel
[21:55] difekta: anyone know of a good FactoryGirl-like tool for Node?
[21:55] JimBastard: difekta: what does that do again
[21:56] difekta: factories are an alternative to fixtures.
[21:56] JimBastard: ohhh yeah i see
[21:56] JimBastard: i dunno if that paradigm makes a lot of sense for js
[21:56] difekta: i don't see why not.
[21:56] JimBastard: im probably wrong though 
[21:57] JimBastard: my testing-fu is pretty weak
[21:57] difekta: probably. :)
[21:57] JimBastard: tests are for code that doesnt work
[21:57] JimBastard: :p
[21:57] isaacs: JimBastard: HAHAHAAHAH
[21:57] difekta: we're trying to go BDD/TDD here and it's a slow process right now because we're in transition.
[21:57] difekta: lol.
[21:57] difekta: bugs are a part of life when you code.
[21:57] difekta: you want to catch them as soon as you can.
[21:57] davidwalsh has joined the channel
[21:57] tjholowaychuk: difekta: factory girl type stuff is orm specific 
[21:58] tjholowaychuk: so you wont find anything like that really yet
[21:58] difekta: that was what i was trying to determine. thanks!
[21:58] tjholowaychuk: are you leaning more towards BDD or TDD style testing?
[21:58] difekta: factory girl is "working" for us, but i think it tries to call the build method on whatever classes we tell it about.
[21:58] difekta: both.
[21:59] tjholowaychuk: ah
[21:59] difekta: BDD drives the TDD.
[21:59] difekta: start at a high level with cucumber BDD testing.
[21:59] satori has joined the channel
[21:59] difekta: as you start to code things that go deeper than what you should test with cucumber, you use TDD via e.g. Rspec.
[22:00] JimBastard: *shudder* ruby and rails
[22:02] difekta: lol.
[22:02] difekta: rails is so f-ing awesome dude.
[22:02] jaywalk: seem to have gotten it right now, thanks mape :)
[22:02] tjholowaychuk: :s
[22:03] tjholowaychuk: I dont like rails either
[22:03] mrdoob has joined the channel
[22:03] tjholowaychuk: but to each their own
[22:03] pquerna: i like ponies.
[22:03] mape: tjholowaychuk: http://github.com/mape/connect-assetmanager please let me know what you think
[22:03] tjholowaychuk: mape: sweet! dont forget to put it on the wiki page :D
[22:03] mrdoob: moi
[22:04] mape: Any way to get syntax hilighting in the readme on github?
[22:04] pquerna: ponies for orphans team for node knockout is 75% full! selling the last slot for a nice belgium ale?
[22:04] bradleymeck: mape, yes but forget how
[22:04] malkomalko: Jim, you are using couchdb?  How do you find using map/reduce for all your views?
[22:04] c4milo: wow good work mape 
[22:05] mape: bradleymeck: hmm k
[22:05] mape: c4milo: Try it before you say anything :P
[22:05] JimBastard: malkomalko: i dunno? lol
[22:05] mjr_: mape: I don't think so.  Some people process their code into formatted HTML, which you can do in markdown.
[22:05] benbinary has joined the channel
[22:05] JimBastard: malkomalko: im using an ORM so i dont have to deal with a lot of that
[22:06] mape: But I think it is pretty neat, allows you to serve different packs for different user agents, and pack all your images into your css for faster load.
[22:06] JimBastard: mape: that does look pretty cool
[22:06] mape: Also please let me know if the docs are hard to understand
[22:06] malkomalko: really?  How do you do finds over couchdb? lol
[22:06] JimBastard: malkomalko: ORM magic
[22:06] tjholowaychuk: mape: I like the data uri thing, I was doing that manually the other day and realized "hey wow, I really dont want to stare at this in my css"
[22:06] tjholowaychuk: haha
[22:06] malkomalko: you must have your views built already
[22:07] mape: Hehe yeah, slows down the editor as well so nice to have it outside of the css, and you have fallback for MSIE browsers automagicly
[22:07] mape: Guess I should look at adding SASS/less in there as well
[22:07] malkomalko: yah, add less in for sure
[22:07] tjholowaychuk: mape: ya that is dope, its not friendly to have that in your file at all
[22:08] bradleymeck: less would be a bit odd since they try client side caching too
[22:08] tjholowaychuk: mape: we have less / sass though with the "compiler" middleware
[22:08] malkomalko: I guess both shoot down to css though
[22:08] JimBastard: malkomalko: my theremin is waiting at home , time to go rage
[22:08] malkomalko: sweet!
[22:08] JimBastard: i gotta pic up a mic stand from guitarcenter
[22:08] JimBastard: maybe some cables
[22:08] malkomalko: 23rd st?
[22:08] mape: Yeah, just generate it on the server and push it, nothing client 
[22:08] JimBastard: 14th
[22:08] malkomalko: 14th, that's right
[22:08] malkomalko: I got one by my house in BK
[22:09] JimBastard: cool
[22:09] JimBastard: yeah, im gonna go get blazed and work on this theremin midi sampler experiment
[22:09] JimBastard: and install 8 gigs of ram and a SSD into my macbook
[22:09] c4milo: mape: If it doesn't work then why did you publish it ? :P
[22:09] JimBastard: nerd orgasm 
[22:10] mape: c4milo: Hehe works for me, might seem overkill for some though, but I found it to be pretty easy to work with
[22:10] mape: But yeah, if anyone has feedback throw it my way and I'll take a look at it
[22:10] JimBastard: i haven't heard a peep from callen since i posted that link of him begging for money on reddit. i hope he'll be nice enough to not bother me anymore
[22:10] c4milo: mape: I know, it's easy in ruby why not in javascript ;)
[22:11] pgriess: creationix/tjholowaychuk: how do you guys want patches for connect?
[22:11] tjholowaychuk: pgriess: I think we need a CLA first :(
[22:11] pgriess: narf
[22:11] pgriess: these clas are killing me. and keeping our lawyers employed. 2 birds/1 stone.
[22:12] joshbuddy has joined the channel
[22:12] tjholowaychuk: pgriess:  haha :D git am style is all good tho
[22:12] pgriess: ok i guess i'll just file a bug. its not complicated or urgent, just a nice-to-have that i was going to bang out.
[22:13] tjholowaychuk: pgriess: im not sure whose is handling the CLA thing, but we have only had a few tiny patches for doc typos n shit
[22:13] tjholowaychuk: pgriess: sounds good tho
[22:13] pgriess: tjholowaychuk: yeah this is similarly tiny. a makefile tweak.
[22:13] tjholowaychuk: cool cool
[22:14] tjholowaychuk: my makefile-fu is decently weak
[22:14] pgriess: tjholowaychuk: actually i just need 2 characters: ? and ?
[22:14] pgriess: want to override LIB_PREFIX and PREFIX
[22:14] pgriess: so just need ?=
[22:15] tjholowaychuk: ah my bad :)
[22:15] mape: Gah, never seem to get tweets right
[22:15] mape: And where is the announcer?
[22:15] pgriess: tjholowaychuk: np. should i bother to file a bug?
[22:16] tjholowaychuk: pgriess: nah I will chuck that up right away
[22:16] pgriess: tjholowaychuk: much obliged. thanks!
[22:16] tjholowaychuk: k a6f214a
[22:16] tjholowaychuk: haha
[22:17] bradleymeck: ACTION is ashamed to be having soo much fun from playing w/ libming
[22:17] felixge_ has joined the channel
[22:18] Avius: hey guys, just wondering if any of you are using ES5 features in node, is there support in v8 for the defineProperty stuff for example?
[22:19] mape: http://rfw.posterous.com/how-nodejs-saved-my-web-application
[22:19] pgriess: hehe
[22:19] pgriess: thx
[22:20] mape: Oh that is old..
[22:20] tjholowaychuk: pgriess: you can override without ?= though AFAIK
[22:20] tjholowaychuk: I do all the time
[22:20] pgriess: tjholowaychuk: oh? do tell
[22:22] tjholowaychuk: pgriess: for example $ make test TESTS=test/utils.test.js
[22:22] tjholowaychuk: will still work without ?=
[22:22] pgriess: i thought that only worked with the ?=
[22:22] pgriess: oh
[22:22] pgriess: sweet
[22:22] tjholowaychuk: ill remove them
[22:22] felixge has joined the channel
[22:22] pgriess: man, now there's ? on my face
[22:22] tjholowaychuk: I think ?= is only if you have something like
[22:22] tjholowaychuk: FOO=
[22:23] tjholowaychuk: reverted
[22:23] mrdoob: Has anyone had issues with node.js/websockets?
[22:24] pgriess: tjholowaychuk: well color me surprised. but thanks for setting me straight.
[22:24] mrdoob: For some reason after about 1050 connections the websocket server stops broadcasting
[22:24] mrdoob: ≈1050
[22:25] mape: mrdoob: Are the flattr donations recuring? Ie if someone flattrs you do you get them every month for that person? Or just the month someone clicked?
[22:25] mrdoob: just the month
[22:25] mrdoob: I think they can flattr again the next month
[22:25] mape: k
[22:28] Shorrockin has joined the channel
[22:31] bradleymeck: Avius yes there is a wiki page on the ecma5 features in node
[22:31] bradleymeck: http://wiki.github.com/ry/node/ecma-5mozilla-features-implemented-in-v8
[22:31] mrdoob: mape, is not a lot of money, but seems more stable than paypal
[22:31] mape: Guess it is more a token of gratitude then anything
[22:31] Avius: ah, thanks, was just browsing the good group, but couldnt find much
[22:32] mape: Don't really like the registration process though
[22:32] mape: But assume there is a reason for it
[22:32] mrdoob: mape, well, there is money involved...
[22:32] mape: Yeah
[22:32] mrdoob: the point is that once you're logged in you don't just need to click on a button to donate
[22:32] mrdoob: that's the point
[22:32] mrdoob: and as per gratitude
[22:33] mrdoob: it depends, it's very variable
[22:33] mrdoob: I got only 1 flattr on one item but it was worth 10�
[22:34] mrdoob: and in other you may get 30 flattr, but they all sum up 10�
[22:35] MrTopf1 has joined the channel
[22:35] tjholowaychuk: ohhh yeah full test coverage for expresso here i come
[22:36] tjholowaychuk: *coverage reporting*
[22:36] mrdoob: ok, seems like I'm not having much luck here, will investigate by myself...
[22:36] marshall_law has joined the channel
[22:38] sh1m has joined the channel
[22:39] ajpiano has joined the channel
[22:42] javajunky has joined the channel
[22:42] maushu has joined the channel
[22:42] jakehow has joined the channel
[22:43] bradleymeck: oi, how do you communicate from JS to Flash, i got the other way working, but do i have to export something
[22:44] javajunky has joined the channel
[22:45] maushu: bradleymeck, browser js?
[22:45] bradleymeck: ya
[22:46] maushu: ExternalInterface
[22:46] maushu: http://kb2.adobe.com/cps/156/tn_15683.html#exampleas3
[22:47] bradleymeck: mmm libming fails to find that... 
[22:47] creationix has joined the channel
[22:47] sh1mmer has joined the channel
[22:51] DarthShrine has joined the channel
[22:53] bmizerany has joined the channel
[22:56] creationix has joined the channel
[22:57] saikat has joined the channel
[22:57] tjholowaychuk: in roughly 20 minutes expresso will have full test coverage reporting capabilities including source output :)
[22:58] hartley has joined the channel
[23:01] mape: nice
[23:01] hartley: Rather than use an external base64 library I'd like to use crypto to generate a base64 Basic Authentication string. I've reviewed the docs but can't find a way to get there
[23:03] hartley: I've tried crypto.createHash('md5').update(USERNAME + ':' + PASSWORD).digest("base64"); however I don't think I need an algorithm
[23:04] sveimac has joined the channel
[23:05] rodrigo3n has joined the channel
[23:06] bradleymeck: well _utility just blew up, awesome *digs*
[23:06] javajunky has joined the channel
[23:06] bradleymeck has left the channel
[23:09] viktors has joined the channel
[23:09] difekta: what version of JS is node based on?
[23:09] difekta: 1.8?
[23:09] mape: difekta: What do you mean?
[23:10] tjholowaychuk: whats the unicode for the fancy checkmarks
[23:10] difekta: which version of javascript is Node based on.
[23:10] mape: difekta: What ECMA standard?
[23:10] tjholowaychuk: nvm
[23:10] tjholowaychuk: got it
[23:10] difekta: right.
[23:10] mape: Well it is running the last V8, so its moving towards 5
[23:11] Avius: as was pointed out to me a bit earlier: http://wiki.github.com/ry/node/ecma-5mozilla-features-implemented-in-v8
[23:12] bpot has joined the channel
[23:12] SubStack: odd, npm publish tells me not ok once again but everything shows up fine on the remote registry
[23:12] isaacs: SubStack: care to gist the log?
[23:13] SubStack: sure
[23:15] SubStack: isaacs: http://gist.github.com/470232
[23:16] SubStack: it did hang for a while before printing out "not ok"
[23:16] mape: SubStack: It does end with ok, just prefixed with not ;)
[23:16] isaacs: SubStack: ok, that's odd.
[23:17] isaacs: SubStack: race condition.  you got lucky :)
[23:17] SubStack: mape: tehe
[23:17] SubStack: isaacs: it did that last night when I pushed out another package too
[23:17] isaacs: SubStack: yeah, this bug recently got a LOT worse.  i think there's something wonky going on in node.
[23:17] SubStack: v0.1.100-9-gb1901cd here
[23:17] SubStack: just compiled a few days ago
[23:17] mscdex: hartley: i don't think there is a built-in way to do just base64 encoding
[23:18] batasrki has joined the channel
[23:19] mjr_: Seems like we should have a built in way to do base64.  It's such a common thing, and can be done much faster in C++.
[23:19] mscdex: right
[23:19] mscdex: maybe the crypto binding could be tweaked to add it
[23:19] SubStack: http://github.com/pkrumins/node-base64 
[23:19] satori: yeah. b64 enc/dec should be native in node
[23:19] SubStack: ^ is c++
[23:20] mjr_: Yeah, there are a couple of native code base64 ways to go.  I think it shoudl be a default thing in node.
[23:20] mjr_: But at least there are ways to do it now until that part settles out.
[23:20] SubStack: only encode for now, but should be pretty simple to extend it
[23:20] mscdex: there is a pure-js implementation that is MIT licensed and is supposedly very fast here: http://code.google.com/p/javascriptbase64/
[23:20] hartley: mscdex: doesn't look like it.  miksago suggested I could use crypto and he is a bit of a node wrangler
[23:21] satori: buffer.toString('base64') would be nice
[23:21] isaacs: satori: +1
[23:24] pkrumins: i added buffer.toBase64 once http://github.com/pkrumins/node/commit/1e5662037cc6ce3858d51c4290412cffb2d10bb5
[23:24] mjr_: putting it on Buffer seems fine.
[23:25] mjr_: We'll have to bug ryah about this when he gets back from vacation.
[23:25] pkrumins: but that got rejected since it was argued that it should be a separate module.
[23:25] batasrki: does anyone know what version of node mongoose is compatible with?
[23:25] pkrumins: so i made node-base64.
[23:25] batasrki: I foolishly ran node off HEAD and broke mongoose...I think
[23:25] tjholowaychuk: isaacs: yo, how do you remove a published module again?
[23:26] Shorrockin has left the channel
[23:26] MrTopf1: Does somebody know an ical library for JS?
[23:26] pkrumins: but yeah, encode only for now. gonna hack that decode later (didn't have a need for that yet)
[23:26] mape: Yeah thanks for that pkrumins :) Using it now to encode images in the asset manager. Working great.
[23:27] mjr_: Wow, I just used clang for the first time to compile some C code.  What amazing error messages it has.
[23:27] mjr_: Slowly moving into the future of compilers.  Now if only they'd do that for C++.
[23:27] tjholowaychuk: mjr_: really? gist?
[23:27] mscdex: http://github.com/visionmedia/node/commit/3e489b7d846e5f3f53d676bfd977d1c2524b594e
[23:27] mscdex: :P
[23:27] pkrumins: mape: sweet! :)
[23:28] tjholowaychuk: mscdex: what lol
[23:28] pkrumins: i'm hacking base64-decode in right now
[23:28] pzich: hacking?
[23:28] tjholowaychuk: isaacs: :( !! lol
[23:28] chewbranca has joined the channel
[23:28] isaacs: tjholowaychuk: npm unpublish pkg version
[23:29] tjholowaychuk: isaacs: my bad its in the help now, i dont think it was before
[23:29] isaacs: hehe :)
[23:29] satori: mjr_:is the only diff between clang and gcc the error messages?
[23:30] batasrki: isaacs, what version of node is npm compatible with?
[23:30] mjr_: http://ranney.com/gcc_vs_clang.png
[23:30] isaacs: batasrki: 0.1.99+
[23:30] jaywalk: mape: the pretty links that are drawn on the front github page of node-wargames, are they disabled?
[23:30] mjr_: clang uses the amazing LLVM stuff to do static analysis and other things from the future.
[23:31] mjr_: tjholowaychuk: gist loses the colorized output, so I uploaded a PNG.
[23:31] satori: wow. look much saner
[23:31] tjholowaychuk: mjr_: sexayyy
[23:31] mape: jaywalk: What links?
[23:31] jaywalk: mape: the screenshot shows nice arcs between people
[23:32] mape: jaywalk: Yeah they are shown
[23:32] mape: but not on pageload
[23:32] mape: jaywalk: just after you opened the page
[23:33] jaywalk: mape: I cant see them, ff4b2pre
[23:33] mape: jaywalk: Hmm never tried it on that
[23:33] jaywalk: ok, I'll fetch chromium :)
[23:34] [[zz]] has joined the channel
[23:35] shimondoodkin has joined the channel
[23:35] dnolen has joined the channel
[23:37] jaywalk: oh, I need sid or to build it myself :(
[23:37] zapnap has joined the channel
[23:39] tjholowaychuk: expresso 0.4.0 is out, http://github.com/visionmedia/expresso
[23:39] tjholowaychuk: http://dl.dropbox.com/u/6396913/cov.png
[23:39] mape: Nice!
[23:39] tjholowaychuk: sexxxxxx
[23:40] mjr_: that looks awesome
[23:40] tjholowaychuk: finally decided staring at a table was only so useful lol so added the reporting
[23:40] tjholowaychuk: had to proxy process.emit() for exit though
[23:40] tjholowaychuk: to have time
[23:40] tjholowaychuk: the table was just a listener before
[23:41] jaywalk: mape: confirmed, it was just ff4 not rendering the arcs :)
[23:41] mape: Can you check the console to see if there are any errors?
[23:42] jaywalk: mape: I get failed links when one persons host doesnt resolve (hidden), but that's it
[23:42] Dmitry1 has joined the channel
[23:42] mape: jaywalk: Yeah that is only serverside
[23:42] mape: meant clientside on latest ff
[23:42] jaywalk: ahh
[23:42] jaywalk: I'll see what I can find but I'm not used to debugging browser behavour :)
[23:43] mape: Ah k
[23:44] creationix has joined the channel
[23:45] jaywalk: mape: Error: a[0] is undefined; Source File: http://wopr.telecomix.org/js/raphael.js; Line: 22
[23:45] mape: Ah k, then the issue is with the raphael framework it seems..
[23:45] jaywalk: and thats ours btw, wopr.telecomix.org :)
[23:46] mape: http://raphaeljs.com/
[23:46] mape: can you test some demos and see if they work in firefox?
[23:46] mape: jaywalk: Kul med lite svenskar :)
[23:47] WarBot has joined the channel
[23:47] jaywalk: mape: hehe, detsamma :)
[23:47] jaywalk: I'll check
[23:47] tjholowaychuk: anyone interested in SOC / SLOC for their js should check out expresso too :)
[23:48] benbinary: doesn't look like the raphael demos work on ipad
[23:48] ryan[WIN] has joined the channel
[23:48] mape: Sure? Tim used that to demo Connect
[23:49] mape: benbinary: works on my iPhone
[23:49] mape: which demo isn't working?
[23:49] benbinary: yea they don't seem to be running, let me open in the 'real' browser instead of the UIWebView in colloquy 
[23:50] benbinary: mape: which one is working for you? i'll try that
[23:50] mape: the clock
[23:50] mape: third down on the left side
[23:51] benbinary has joined the channel
[23:51] mape: the gear also works
[23:51] benbinary: mape: ok I take that back, it does work in safari
[23:52] benbinary: mape: i was opening it in my ipad irc client before, didn't work then
[23:52] mape: ah k
[23:53] jaywalk: mape: just copied some demo from their site, that one ran fine (playground.html)
[23:53] mape: Hmm k
[23:53] mape: Guess its something I did then.. hmm 1sec
[23:53] mape: jaywalk: http://raphaeljs.com/map.html does that one?
[23:53] mape: *work
[23:54] jaywalk: mape: yes, it does!
[23:54] mape: Well that is bad then..
[23:54] jaywalk: draws a little dotted arc down in africa
[23:54] mape: Yeah, guess I'll fetch the beta
[23:56] tjholowaychuk: this test cov is the best thing since sliced bread. now if only v8 would expose a json ast
[23:56] SubStack: json ast? what
[23:56] mape: wtf..
[23:57] shimondoodkin: ithink you have some dump in node
[23:57] SubStack: how would a json ast differ from the regular sort?
[23:57] tjholowaychuk: v8 has a json ast compiler but (AFAIK) its used for something internally
[23:57] mape: http://mape.me/firefox-beta.png
[23:57] mape: guess it is still a beta..
[23:57] tjholowaychuk: would be nice to remove the node-jscoverage dependency I have for expresso
[23:57] tjholowaychuk: and do the instrumentation with v8
[23:58] shimondoodkin: remind sme internet explorer 4
[23:58] mape: jaywalk: test
[23:58] mape: hmm
[23:59] jaywalk: mape: it is, ff4b2pre is beta 2 pre :) I thought chrome was too as everything google does but apparently it isnt :)
[23:59] mape: jaywalk: bink
[23:59] mape: Hmm yeah not working
[23:59] mape: websockets seem to be fine though
[23:59] jaywalk: mape: wroom
[23:59] mape: Don't get an error message either but that is probly just firebug lite not being great
