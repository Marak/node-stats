[00:00] mikeal: because i want the full unix command line parsing semantics
[00:00] mikeal: which you can't do that simply
[00:00] tjholowaychuk: mikeal: http://github.com/extjs/Connect/blob/master/bin/connect#L479-581
[00:00] tjholowaychuk: ah
[00:00] tjholowaychuk: I suppose
[00:00] creationix: mikeal: ryah: is there a know compromise between netstrings (fast, but highly fragile should data get corrupted) and marker patterns (slow, because requires linear scan of data)
[00:00] creationix: *known
[00:00] mikeal: -r —read being the same thing
[00:00] mikeal: support —read filename as well as --read=filename
[00:01] rtomayko has joined the channel
[00:01] tjholowaychuk: mikeal: that is my suggestion though, I prefer it far more than any option parser, and I wrote commander for ruby which was pretty robust
[00:01] tjholowaychuk: generated cool help docs but its all kinda meh IMO
[00:01] tjholowaychuk: something nice and raw about this approach
[00:02] tjholowaychuk: just have case '--read=': in there too lol i dont know
[00:02] mikeal: i want something dirt simple to use
[00:02] mikeal: but if you like can support all these switches
[00:02] mikeal: the one i currently have has a terrible API because it's like the Python optionparser api
[00:02] creationix: yuck
[00:03] tjholowaychuk: mikeal: might give you some ideas http://github.com/visionmedia/commander
[00:03] mjr_: everybody has a lot of opinions about how that should go, but if there was just a simple one in node by default, everybody would use it anyway.
[00:03] creationix: mjr_: or in a node distro ;)
[00:03] steadicat has joined the channel
[00:04] mikeal: i think because there are so many opinions it won't end up in node core :)
[00:04] mjr_: Just like the HTTP API.  Opinions abound, for sure, about the best way to do that, but since there's already one in there, most people just use it.
[00:04] mikeal: maybe part of a distro :)
[00:04] mikeal: the one in there is low level and people build on it
[00:04] mikeal: my request library is a good example, and will never be in node core
[00:05] mjr_: yeah, maybe it shouldn't be in core, but having another dependency makes me not want to have options.
[00:05] mjr_: So maybe as part of a distro.
[00:06] creationix: mikeal: I say we call it Pumpkin!
[00:06] creationix: ('cause it yummy)
[00:06] creationix: *it's
[00:06] mikeal: haha
[00:07] creationix: and it will be full of all sorts of syntax sugar that doesn't belong in node
[00:07] mikeal: haha
[00:07] robotarmy has joined the channel
[00:08] ryah: pquerna: good bench
[00:09] tjholowaychuk: 100% test coverage, fuck ya
[00:09] creationix: mikeal: better plan, I'll just start one and people can fork it on github
[00:09] creationix: tjholowaychuk: what for?
[00:09] ryah: pquerna: i suspect it's the buffer creation time
[00:09] pquerna: ryah: writing up an email with some thoughts and starting on the 'why'
[00:09] tjholowaychuk: creationix: little secret project that uses nStore and a few others
[00:09] tjholowaychuk: ill push it up tomorrow morning
[00:09] creationix: tjholowaychuk: cool
[00:09] rictic has joined the channel
[00:09] pquerna: ryah: hmm, it should only be creating the buffer once per run right?
[00:09] tjholowaychuk: creationix: I think that #clear() method gave me everything I needed
[00:10] pquerna: ACTION double checks
[00:10] pquerna: http://github.com/pquerna/node/blob/buffer_sizes/benchmark/io.js
[00:10] rnewson has joined the channel
[00:14] creationix: mikeal: so for buffer support in nStore, do you want it as any arbitrary value in the JSON structure or as the entire document?
[00:14] mikeal: entire document
[00:15] creationix: ok, that's not too hard
[00:15] ncb000gt has joined the channel
[00:15] mikeal: unless you want to do attachments
[00:15] mikeal: you might want to do attachments instead
[00:15] creationix: attachments as in store it externally?
[00:15] mikeal: require JSON as the document and support attachments as something else that you can add to the documents
[00:15] aheckmann has joined the channel
[00:15] mikeal: yeah
[00:16] mikeal: the nice thing about that is that if you can keep a could different append-only files around for attachments
[00:16] mikeal: and then give a stream
[00:16] mikeal: so it's streaming to one of them while others can still take documents
[00:16] mikeal: don't do that yet
[00:16] mikeal: but it's an optimization you can make if you break attachments out of the normal object API
[00:17] creationix: mikeal: so these buffers are likely large 
[00:17] creationix: meaning making them inline isn't a good idea
[00:17] creationix: well, if the document IS the buffer, then it's not bad
[00:17] CIA-76: node: 03David Siegel 07master * r2085909 10/ (3 files in 2 dirs): 
[00:17] CIA-76: node: fix corner-case bug in Module
[00:17] CIA-76: node: and added a test to expose it - http://bit.ly/bdnzFr
[00:17] CIA-76: node: 03Mikeal Rogers 07master * r16cb451 10/ lib/sys.js : Adds "pause" and "resume" events to pump and it's readable argument. - http://bit.ly/9o0su2
[00:18] mikeal: awesome
[00:18] creationix: :)
[00:18] creationix: mikeal: also I want some way to not have to linearly scan the whole doc on startup
[00:18] mikeal: creationix: i don't know, i can see the benefit to both
[00:18] mikeal: attachments are very couchish
[00:19] mikeal: if you want to be more of a strict k/v store you could just make the buffers the value, you just might not have the best stream handling
[00:19] mikeal: creationix: which doc?
[00:20] creationix: so when parsing, I have to check the entire file character by character
[00:20] creationix: I'd like to be able to skip parts
[00:21] creationix: mikeal: also I have a max buffer size for reading documents with the current parser
[00:22] ryah: creationix: nstore, cool - but why?
[00:22] creationix: ryah: because it's easy
[00:22] ryah: creationix: that is, what's wrong with redis?
[00:22] creationix: no dependencies
[00:23] creationix: why sqlite?
[00:23] mikeal: Redis keeps keys and values in memory
[00:23] mikeal: so the upper limit is much higher
[00:23] ryah: creationix: well, okay
[00:23] mikeal: and if you don't have to talk over a network you can make this insanely fast
[00:23] ryah: local tcp is probably very fast
[00:24] creationix: ryah: btw, I should make it to the thing Thursday so I'll bring the jacket
[00:24] mikeal: creationix: how many writes per second do you do?
[00:24] creationix: mikeal: last I tested it did 100l
[00:24] creationix: 100K
[00:24] ryah: the thing on thrusday may be cancled
[00:24] ryah: canceled
[00:24] mikeal: why?
[00:24] ryah: i got a strange email today - asking if they could reschedule
[00:24] mikeal: say no :)
[00:25] mape: The digg one?
[00:25] mape: Perhaps they are busy doing the digg 4 things?
[00:26] creationix: ryah: well, then want a meetup down here some time?
[00:27] mikeal: ryah: there might be a CouchDB 1.0 release party tomorrow
[00:27] mikeal: you should come
[00:27] MattJ has joined the channel
[00:27] mjr_: mikeal: at CouchIO world HQ in Oakland?
[00:28] beelzabub1: hey ryah
[00:28] mikeal: i'm thinking the city
[00:28] mikeal: maybe thirsty bear
[00:28] mikeal: still working out details
[00:28] beelzabub1: are you working on the stuff rob asked regarding module loading?
[00:28] ryah: beelzabub1: pm
[00:29] blaines has joined the channel
[00:29] saikat has joined the channel
[00:30] mscdex: should i be manually deleting new Buffers?
[00:31] creationix: mscdex: no, they get garbage collected
[00:31] mscdex: ok, i thought so, but thought i'd double check anyway :-)
[00:32] inimino: creationix ⋱ you can also store the lengths of the strings in more than one place in the file if you want redundancy
[00:32] mscdex: does that also include "resizing" a buffer by assigning itself to a slice of itself? i.e. foo = foo.slice(3, 5);
[00:33] inimino: (like superblocks on a filesystem)
[00:33] creationix: mscdex: I assume that just creates a new buffer and loses the reference to the old one
[00:33] mscdex: in that case GC picks up 0,2 ?
[00:33] mscdex: slice references the original memory though
[00:33] creationix: the GC itself can't see the malloc'ed memory
[00:34] creationix: I think it's all code in the buffer's destructor
[00:34] blaines has joined the channel
[00:34] creationix: mscdex: not sure
[00:35] mtodd_ has joined the channel
[00:35] creationix: pgriess: how horrible an idea would it be to implement messagepack in pure js
[00:35] creationix: it would be slower than JSON for sure
[00:35] pgriess: creationix: moderately horrible
[00:35] creationix: just moderately?
[00:35] pgriess: creationix: unless you really cared about space savings, i wouldn't do it
[00:35] mscdex: hrm.. guess i'll just make a new copy just in case
[00:36] pgriess: creationix: check that: more than moderately ;)
[00:36] pgriess: creationix: implementing the msgpack spec doesn't look too horrible, but it's not trivial
[00:36] pgriess: creationix: and it will perform pretty badly
[00:36] creationix: pgriess: well, my thinking is that performance doesn't matter when just playing around, and if you're setting up a production box, you'll take the time to compile the c version by hand
[00:36] pgriess: creationix: pure-js built on top of a node-provided byte-packing api would scream tho
[00:36] creationix: pgriess: think so
[00:37] pgriess: creationix: so you're considering using msgpack for your persistence format and want to be able to get by if people don't have node-msgpack installed?
[00:37] creationix: pgriess: something like that
[00:37] creationix: just considering
[00:37] pgriess: creationix: i'd say for dev mode, just use netstrings + json
[00:38] rauchg_ has joined the channel
[00:38] pgriess: creationix: and, in fact, for production mode too unless you find that you raelly care about the space savings and de-serialization perf
[00:38] pgriess: creationix: i suspect you won't
[00:38] creationix: I might, don't know yet
[00:38] creationix: haven't hit any performance walls yet
[00:38] pgriess: creationix: esp since nstore isn't really supposed to be a production system (right?)
[00:39] creationix: pgriess: sure it is for small stuff
[00:39] creationix: I want it fast enough for real sites with just thousands or hundreds of users
[00:40] pgriess: creationix: ok
[00:40] blaines has joined the channel
[00:40] creationix: I wish node exposed more of these low-level things that can't be done feasibly in pure js
[00:41] creationix: byte packing on buffers for example
[00:41] pgriess: creationix: byte packing isn't something that's implemented in node and just not exposed. we need to actually implement it
[00:41] pgriess: creationix: a python/perl-style pack/unpack api would be awesome
[00:41] pgriess: creationix: but is fairly complex
[00:41] pgriess: creationix: esp w/ padding and alignment
[00:41] creationix: pgriess: sure, but I don't think it's hard, it's just a question of should it be in node
[00:42] creationix: I could probably even do it if I knew ryah would accept it
[00:42] pgriess: creationix: imo yes. makes it far easier to implement extremely performant network protocols in node
[00:42] pgriess: creationix: and its very generic
[00:42] creationix: ryah: are you against byte utils in Buffer or just don't have time to implement it yourself?
[00:42] sh1mmer has joined the channel
[00:43] pgriess: creationix: ryah mentioned this a while back as a possible answer https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/TypedArray-spec.html
[00:43] ryah: creationix: byte utils?
[00:43] creationix: ryah: byte packing helpers
[00:43] mscdex: yay 95% done with grappler. just need to finish multipart stuff now :>
[00:43] ryah: creationix: oh, no - just undecied on the api
[00:43] creationix: and indexOf and other utilities that make working with buffers easier
[00:44] mape: mscdex: grappler?
[00:44] creationix: ryah: ok, anything I can help with
[00:45] mscdex: mape: it's a module i started working on the other day -- a minimialistic server for "comet" connections
[00:45] mscdex: and tcp connections at the same time
[00:45] pgriess: i haven't digested the typed buffer stuff yet to really compare it to pack/unpack, but i've worked w/ the former quite a bit and like its flexibility
[00:45] pkrumins: ACTION bought nodechess.com gonna create a new, free chess website, that works on node.js, where you can just play chess, no bullshit!
[00:45] mscdex: it's as low level as possible
[00:45] mscdex: no json or anything in between
[00:45] mape: ah k
[00:45] jsilver has joined the channel
[00:45] mscdex: supports websocket (including flash), long poll, multipart
[00:46] jsilver: yo guys
[00:46] mape: using micheils module?
[00:46] blaines has joined the channel
[00:46] mscdex: no
[00:46] creationix: ryah: if I could feasibly implement things like msgpack and postgres binary protocol and generate pdf's or swf's in node using pure JS that would rock
[00:46] jsilver: micheil's module doesn't run for me btw
[00:46] mape: jsilver: probly something on your end 
[00:46] jsilver: linux
[00:46] ryah: creationix: you can already :)
[00:46] creationix: ryah: I can, but it's slow
[00:47] mscdex: i started with what i added to socket.io for websocket support... but then rewrote it to use buffers instead of strings
[00:47] creationix: so slow that it's often not feasable
[00:47] creationix: nStore uses JSON.parse because it's impossible to write anything faster using pure JS, no matter how effecient the format
[00:47] mape: mscdex: have you tested now much overhead you get with socket io?
[00:48] jsilver: creationix: nStore looks nice
[00:48] creationix: jsilver: thanks
[00:48] jsilver: best backend solution ive seen for a node app yet
[00:48] mscdex: not yet, i haven't even had a chance to test grappler yet
[00:48] jsilver: :)
[00:48] mscdex: but coding like mad
[00:48] mscdex: *been
[00:48] pquerna: mape: i don't supose your io.js ever finished did it :D ?
[00:48] mape: pquerna: huh?
[00:50] stagas has joined the channel
[00:51] pquerna: the little benchmark script
[00:51] sechrist_ has joined the channel
[00:51] mape: oh, think I lost it when closing to many terminals.. will start again
[00:52] pquerna: no, don't worry about it
[00:52] pquerna: made a post aobut it on the list
[00:52] pquerna: I gave up on it here myself
[00:52] sechrist_ has joined the channel
[00:53] mape: I have nothing better to do so
[00:53] creationix: pgriess: does what I'm wanting seem possible?  Can node expose enough tools to make writing advanced and fast protocols possible in pure js?
[00:54] pgriess: creationix: yeah, for sure. either a pack/unpack interface or typedarray will do the trick
[00:54] creationix: pgriess: where is an example of a pack/unpack api?
[00:54] pgriess: creationix: 1s
[00:54] ryah: i prefer the typedarray api
[00:55] mscdex: another quick question: does the setKeepAlive delay only activate once the socket becomes idle or is it a constant interval as soon as you set the keepalive tcp option?
[00:55] creationix: ryah: this one? https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/TypedArray-spec.html
[00:55] ryah: mscdex: man tcp
[00:55] ryah:      TCP_KEEPALIVE          The TCP_KEEPALIVE options enable to specify the amount of time, in seconds,
[00:55] ryah:                             that the connection must be idle before keepalive probes (if enabled) are
[00:55] sechrist has joined the channel
[00:55] ryah:                             sent.  The default value is specified by the MIB variable
[00:55] ryah:                             net.inet.tcp.keepidle.
[00:56] mscdex: ah ok :x
[00:56] ryah: creationix: yes
[00:56] pgriess: creationix: file:///Developer/Documentation/Python/Python-Docs-2.3.4/lib/module-struct.html
[00:56] pgriess: heh
[00:56] pgriess: so that url works for you, right?
[00:56] mscdex: ACTION goes back into hiding
[00:57] x_or has joined the channel
[00:57] sechrist_ has joined the channel
[00:57] creationix: pgriess: hmm, not quite ;)
[00:57] pgriess: http://docs.python.org/library/struct.html
[00:57] maushu has joined the channel
[00:57] ryah: creationix: but i think there is a problem with having a .getInt32() method
[00:57] creationix: pgriess: ahh, yes, I remember that one
[00:57] ryah: creationix: it's often possible integers are on buffer boundaries 
[00:58] pgriess: creationix/ryah: i really like the ability to easily consume and produce an array of heterogeneous values
[00:58] sechris__ has joined the channel
[00:58] ryah: creationix: so i would say that we really need a "buffer list" class of some sort
[00:58] ryah: which has these methods
[00:58] creationix: ryah: yeah,
[00:58] pgriess: creationix/ryah: of course, this api could be implemented using a TypedArray
[00:59] pgriess: ryah: i'd love a buffer list
[00:59] ryah: otherwise i fear .getInt32() is going to not be used much
[00:59] pgriess: ryah: esp one that could transparently slice across buffers
[00:59] creationix: so what if I implemented the api in pure JS, and then later we rewrite it in c to make it faster
[00:59] pgriess: creationix: you can use node-jspack as your starting point. it should give you all the primitives you need.
[00:59] _announcer: Twitter: "I don't want to bother you with all that node.js tweets, but thats some pretty fun stuff :) http://github.com/mustardamus/biggie-smalls" -- Sebastian Senf. http://twitter.com/mustardamus/status/18480089504
[00:59] creationix: pgriess: yeah, I've got a few from my postgres-js too
[01:00] pgriess: creationix: ok cool
[01:00] zapnap has joined the channel
[01:00] creationix: the part about smoothing over boundaries seems hard though
[01:00] creationix: that would be awesome to have built in though
[01:01] pgriess: a buffer list would also obviate a lot of code in everyone's custom protocol layer that keeps a list of buffers and waits for data to arrive before joining them into one large copy
[01:01] creationix: pgriess: yes
[01:01] pgriess: removes code complexity and a copy from a ton of codepaths, i suspect
[01:02] pgriess: in the meantime, i'm going to hack together a netstring impl
[01:02] creationix: just so long as we don't end up with an api that's not optimizable
[01:02] pgriess: must because
[01:02] pgriess: erm, just because
[01:02] pgriess: creationix: agree
[01:03] pgriess: ryah/creationix: and i guess i don't have an objection about the low-level api being TypedArray-esque. it should be easy enough to build pack/unpack on top of it
[01:03] creationix: pgriess: which is more efficient as a base I wonder?
[01:04] pgriess: pack/unpack would move more code into c++, but it would be dumb stuff like object interrogation and the like
[01:04] pgriess: pack/unpack is def a higher-level api. going by node's api choices thus far, the lower-level api is the right place to start
[01:05] pgriess: and we can build pack/unpack in js and ship it w/ node if desired, moving it into c++ if perf dictates
[01:05] creationix: pack looks like sprintf for binary data
[01:05] pgriess: creationix: that's a good analogy
[01:07] creationix: actually TypedArray looks pretty good for a low level base, I think it scales down well
[01:08] paulwe_ has joined the channel
[01:08] pgriess: offline for the evening, l8
[01:09] sechrist has joined the channel
[01:11] malkomalko has joined the channel
[01:16] sechrist_ has joined the channel
[01:18] sechrist has joined the channel
[01:19] c4milo has joined the channel
[01:20] sechrist has joined the channel
[01:22] sechrist_ has joined the channel
[01:22] blaines has joined the channel
[01:22] jashkenas has joined the channel
[01:23] richcollins has joined the channel
[01:32] jherdman has joined the channel
[01:33] blaines has joined the channel
[01:33] Blackguard has joined the channel
[01:35] _announcer: Twitter: "Not so intimidated by Node.js after reading the latest Sitepoint newsletter" -- Adam Hill. http://twitter.com/adocentral/status/18482367332
[01:37] softdrink has joined the channel
[01:40] micheil: ryah: either way, a C++ backed pack/unpack for going to big endian could be good
[01:42] ryah: i think it's more about getting the api right
[01:42] ryah: and i think the right api is a buffer list of some sort
[01:42] ryah: be that in c or otherwise
[01:43] jsilver has joined the channel
[01:43] robotarmy has joined the channel
[01:44] ryah: ACTION away
[01:45] tmpvar has joined the channel
[01:47] aho has joined the channel
[01:52] Blackguard has joined the channel
[01:57] voodootikigod_ has joined the channel
[01:58] technoweenie has joined the channel
[02:02] SamuraiJack has joined the channel
[02:05] ChrisPartridge has joined the channel
[02:06] khug has joined the channel
[02:08] polotek has joined the channel
[02:08] ncb000gt: pkrumins: you there?
[02:09] _announcer: Twitter: "nStore - easy database written for node.js in node.js http://bit.ly/c0XKzK" -- Rich Manalang. http://twitter.com/rmanalan/status/18484608635
[02:12] blaines has joined the channel
[02:12] pkrumins: sure
[02:13] _announcer: Twitter: "Wow.. I installed node.js on my server at 6:30 and started playing around and next thing I notice it's 9!" -- Ben Mills. http://twitter.com/benemills/status/18484863909
[02:19] ncb000gt: pkrumins: I'm trying to use your base64 lib but am running into issues. I'm pulling data out of a file, stuffing it into a buffer, and then passing the buffer to decode.
[02:19] ncb000gt: the result is unexpected
[02:19] pkrumins: did you make sure that when you stuffed it into the buffer you used 'binary' encoding?
[02:19] ncb000gt: aye
[02:19] Blackguard has joined the channel
[02:19] pkrumins: ok, try this
[02:19] pkrumins: write that part to a file
[02:19] pkrumins: and then run
[02:20] pkrumins: perl-base64-encode.pl on it from tests/ directory of node-base64
[02:20] pkrumins: and then run node-base64-encode.js on it
[02:20] pkrumins: see if the output matches
[02:20] ncb000gt: ok, will do
[02:21] pkrumins: make sure not to forget 'binary'
[02:21] pkrumins: the module should absolutely work!
[02:21] pkrumins: i wrote it cause no other worked correctly
[02:21] pkrumins: i am using it for an app that does base64 all the time
[02:21] ncb000gt: that is what i was finding so i jumped to yours
[02:21] pkrumins: haven't noticed it not working yet
[02:21] ncb000gt: good to know
[02:21] ncb000gt: it's likely me doing something bone-headed
[02:21] ncb000gt: :)
[02:21] pkrumins: could be!
[02:24] zapnap has joined the channel
[02:27] ncb000gt: pkrumins: the encoded data matches fine it looks like
[02:27] pkrumins: kk
[02:27] pkrumins: then it should work
[02:27] ncb000gt: heh
[02:28] tmpvar: yo
[02:28] ncb000gt: hey tmpvar 
[02:29] ncb000gt: how's it going?
[02:29] tmpvar: goes well man, how are you?
[02:29] pavan_ has joined the channel
[02:29] pavan_ has joined the channel
[02:29] ncb000gt: good, working on a node downloader for amazonmp3 files :)
[02:29] tmpvar: ha! awesome
[02:29] tmpvar: how about an nntp client?
[02:29] tmpvar: ;)
[02:29] ncb000gt: i suspect you have a need?
[02:30] tmpvar: ive thought about it 
[02:30] tmpvar: because I read a ton of news via yenc
[02:30] ncb000gt: gotcha
[02:30] tmpvar: lol
[02:30] ncb000gt: :)
[02:31] ncb000gt: well, i buy a ton of music off amazon
[02:31] ncb000gt: sooo...
[02:31] tmpvar: ah, nice
[02:31] ChrisPartridge: tmpvar: I've been working on a nntp client :)
[02:31] tmpvar: ChrisPartridge, link?
[02:31] tmpvar: ncb000gt, I'm not sure what to do about node-ogl heh
[02:32] ChrisPartridge: tmpvar: Not up yet, i'll have something online this weekend 
[02:32] tmpvar: I think I may backburner it until I have a pressing need
[02:32] tmpvar: ChrisPartridge, nice :)
[02:32] ChrisPartridge: tmpvar: You want it for use with binaries? or just text?
[02:33] ChrisPartridge: As there is a half decent text one on github somewhere
[02:33] tmpvar: its all text, you use yenc to decode to binary :)
[02:33] polotek has left the channel
[02:34] tmpvar: unless I'm mistaken.....
[02:34] ncb000gt: tmpvar: what part, or all of it?
[02:34] ChrisPartridge: Ha, certainly not - my goal is binaries+auto par checking+extraction
[02:35] ncb000gt: tmpvar: yea, pressing needs tend to force you into making decisions ;D
[02:35] tmpvar: ChrisPartridge, nice, cant wait :)
[02:36] tmpvar: ncb000gt,  well, I could make some demos and whatnot.. but I really could be working other more important things heh
[02:36] ncb000gt: tmpvar: i agree with that...although I've spent the last few days wasting away in front of SC2
[02:36] ncb000gt: so...
[02:36] ncb000gt: any coding is more productive
[02:37] tmpvar: nice
[02:37] tmpvar: yeah.. ive been working the day job pretty hard lately
[02:37] tmpvar: so in my small shards of time i'd like to move the project(s) that I think need moving
[02:43] _announcer: Twitter: "@brntbeer will try to, sounds like an awesome conf, the nodejs guy is giving a talk! there are like 5 tracks, just found out about it today" -- Chris Oliver. http://twitter.com/excid3/status/18486873124
[02:45] victorstan: anyone here have experience with mongojs or using mongodb and nodejs?
[02:45] victorstan: im going through a tutorial and it doesnt want to compile
[02:45] victorstan: i think the tutorial might be faulty, but maybe not...
[02:45] tmpvar: ACTION is confues
[02:45] victorstan: im doing: var mongo = require('mongodb');
[02:45] tmpvar: confused*
[02:45] mape: victorstan: try looking at the js native mongo client
[02:46] tmpvar: which is all in js, btw
[02:46] mape: yeah, js native
[02:46] tmpvar: heh
[02:46] ncb000gt: tmpvar: that makes sense. which projects would those be?
[02:47] tmpvar: when I think native, I think "I'm going to have to compile this natively" -- aka c addon
[02:47] tmpvar: ncb000gt, carena / composer
[02:47] tmpvar: for the next month or so
[02:47] victorstan: how do i know which mongo db driver npm installed?
[02:47] lachlanhardy has joined the channel
[02:47] tmpvar: npm list | grep mongo
[02:49] victorstan: cool got it
[02:49] victorstan: how do i get npm to update its list of stuff or all the installed modules? the man pages seem sparse to say the least
[02:50] tmpvar: i think for now its a 1 by 1 process
[02:50] ncb000gt: victorstan: it should be up to date with whatever is installed
[02:51] mape: I usually just do npm ls |grep installed and manually do the installs to update
[02:52] victorstan: does this mean anything to anyone?
[02:52] victorstan: var Db = require('mongodb/db').Db,
[02:52] victorstan: 	ObjectID = require('mongodb/bson/bson').ObjectID,
[02:52] victorstan: 	Server = require('mongodb/connection').Server;
[02:52] mape: that doesn't look like the native javascript client for mongo
[02:52] tmpvar: lol
[02:52] tmpvar: that name has caused so much confusion
[02:53] tmpvar: good laughs
[02:54] victorstan: can i get in on the joke ;)
[02:54] mape: should just name all modules after old vikings and be rid of the issue
[02:54] PyroPeter has joined the channel
[02:55] tmpvar: no, but thoughtful names are helpful!
[02:55] tmpvar: does mongo-native work in the browser?
[02:55] mape: do you have a mongo server running in the browser?
[02:56] tmpvar: oh, its a server?
[02:56] tmpvar: :P
[02:56] mape: nope
[02:56] tmpvar: im just curious what it is native to
[02:56] mape: javascript
[02:56] tmpvar: node? js in general?
[02:56] tmpvar: ok, so it does work in the browser?
[02:56] mape: well it uses the node api
[02:56] mape: so no won't work in browser
[02:56] tmpvar: ok, so its native to node
[02:56] mape: but it isn't js+compiled dependancy
[02:57] mape: just js
[02:57] mape: *ency
[02:57] statim has joined the channel
[02:57] tmpvar: hrm
[02:58] liucougar has joined the channel
[02:58] ncb000gt: It's a node-native mongodb module
[02:58] victorstan: also
[02:58] victorstan: im doing this
[02:58] victorstan: var mongo = require('mongodb');
[02:58] ncb000gt: I agree it could be much clearer
[02:58] victorstan: but the tutorial uses kiwi
[02:58] tmpvar: so.. node-native-mongo might fit better?
[02:59] victorstan: and hes doing: kiwi.seed('mongodb-native')
[02:59] mape: tmpvar: well it is called node-mongodb-native
[02:59] tmpvar: yeah
[02:59] mape: just wrong position of the native part
[02:59] ncb000gt: tmpvar: or even node-mongodb
[02:59] tmpvar: purposefully 
[02:59] ncb000gt: :)
[02:59] tmpvar: right
[02:59] tmpvar: there are other mongo drivers?
[02:59] mscdex: cool, SSE is now supported in Chrome 6 and Safari 5 in addition to Opera 9. Looks like support in FF is on the way too...
[02:59] ncb000gt: yea
[02:59] victorstan: var ArticleProvider= require('./articleprovider-mongodb').ArticleProvider;
[02:59] victorstan: is what comes before:
[02:59] tmpvar: node-mongodb
[02:59] ncb000gt: I haven't really looked at them though
[02:59] victorstan: var articleProvider= new ArticleProvider('localhost', 27017);
[03:00] victorstan: and that's what upseds nodejs
[03:00] victorstan: the new guy
[03:00] _announcer: Twitter: "#VertexDB reimplemented using node.js? http://github.com/stevedekorte/vertex.js #GraphDB @al3xandru" -- Achim Friedland. http://twitter.com/ahzf/status/18487986385
[03:00] jashkenas has left the channel
[03:00] tmpvar: node-mongodb is really "native" imho
[03:00] tmpvar: it's a c lib
[03:00] tmpvar: c addon rather
[03:00] victorstan: i dont think the prob is the driver
[03:00] victorstan: i think its the code
[03:00] tmpvar: *shrug* wtf do I care
[03:00] TS_ has joined the channel
[03:00] pkrumins: ncb000gt: did you figure it out?
[03:00] mape: hehe
[03:01] ncb000gt: pkrumins: not yet, wife came home and have been running back and forth
[03:01] ncb000gt: still looking
[03:01] lachlanhardy has joined the channel
[03:01] victorstan: var articleProvider = new ArticleProvider('localhost', 27017);
[03:01] victorstan:                       ^
[03:01] victorstan: TypeError: undefined is not a function
[03:01] victorstan: im not making a function so...
[03:01] ncb000gt: you're calling one
[03:01] ncb000gt: or trying to
[03:02] victorstan: sure
[03:02] victorstan: var ArticleProvider = require('./articleprovider-mongodb').ArticleProvider;
[03:02] tmpvar: is undefined..
[03:02] victorstan: does that make a function?
[03:02] tmpvar: dunno, inspect it
[03:02] tmpvar: read the docs for the project,e tc
[03:02] tmpvar: etc*
[03:02] tmpvar: shit changes fast, if you blink .. you could miss it
[03:02] victorstan: ArticleProvider = function(host, port) {
[03:03] ncb000gt: did you export ArticleProvider in your articleprovider-mongodb file?
[03:03] hpoydar has joined the channel
[03:03] victorstan: dont see an export word
[03:04] victorstan: is requiring it making an export?
[03:04] victorstan: im new here haha
[03:04] tmpvar: heh
[03:04] tmpvar: can you share the code?
[03:04] victorstan: http://howtonode.org/express-mongodb
[03:05] ncb000gt: victorstan: it access data in other modules you have to add them to the export object within that module
[03:05] mape: old article?
[03:05] tmpvar: yeah
[03:05] tmpvar: kiwi has been discontinued
[03:05] ncb000gt: with the way modules work it helps to namespace everything out so you can have some private methods to the module and public if you really need
[03:05] victorstan: a bit i had to reword some things to make it work so far
[03:05] ncb000gt: err
[03:05] ncb000gt: public and private if you really need
[03:05] ncb000gt: :)
[03:06] tmpvar: exports.ArticleProvider = ArticleProvider; -- did you do that?
[03:06] ncb000gt: what tmpvar said
[03:06] victorstan: nope
[03:06] ncb000gt: :)
[03:06] tmpvar: do that :)
[03:06] ncb000gt: you'll want to do that in the articleprovider-mongodb.js file tho
[03:06] victorstan: in app.js or article...-mongodb.js?
[03:07] victorstan: k
[03:07] tmpvar: wow
[03:07] tmpvar: that is a huge tut
[03:07] ncb000gt: haha
[03:07] victorstan: at the beginning or the end of the file?
[03:07] tmpvar: "find a goat, milk the goat, churn for hours, goat butter!"
[03:08] tmpvar: end
[03:08] victorstan: ok so far so good, nodejs did not complain yet
[03:08] ncb000gt: victorstan: technically it shouldn't matter
[03:08] tmpvar: right
[03:08] ncb000gt: but in terms of style, it's better imo at the end
[03:08] victorstan: i dont mind someone telling me best practices though
[03:08] tmpvar: or in the definition
[03:09] ncb000gt: yea
[03:09] tmpvar: var ArticleProvider = exports.ArticleProvider = function....
[03:09] tmpvar: thats pwn right there
[03:09] ncb000gt: haha
[03:09] tmpvar: everything in one place
[03:10] victorstan: except that var ArticleProvider is made in app.js
[03:10] victorstan: and it calls a require
[03:10] victorstan: var ArticleProvider = require('./articleprovider-mongodb').export.ArticleProvider;
[03:10] victorstan: ?
[03:10] tmpvar: its defined in articleprovider-mongodb.js
[03:10] tmpvar: no
[03:10] tmpvar: http://howtonode.org/express-mongodb/articleprovider-mongodb.js -- last line
[03:10] ncb000gt: no export.
[03:11] victorstan: lol
[03:11] victorstan: haha
[03:11] tmpvar: thats how you get it to be required in the app.js
[03:11] ncb000gt: var ArticleProvider = require('./articleprovider-mongodb').ArticleProvider;
[03:11] victorstan: the guys hiding that code!
[03:11] tmpvar: you gotta scroll there sonny boy
[03:11] ncb000gt: in app.js you want to put what I posted above
[03:11] victorstan: ayeah
[03:11] victorstan: i see now
[03:11] rnewson has left the channel
[03:11] ncb000gt: cool cool
[03:11] victorstan: my oversight
[03:11] ncb000gt: :) all good
[03:11] tmpvar: haha, if they didnt overflow scroll there.. that article would be twice as dreadful
[03:12] mtodd has joined the channel
[03:12] victorstan: its really good for noobs like me
[03:12] tmpvar: he should have written the articleprovider-mongodb.js, put it on github, package.json'd it
[03:12] tmpvar: and saved a page of tutorial
[03:12] ncb000gt: lol
[03:12] ncb000gt: I still haven't looked at it yet
[03:13] mcarter_ has joined the channel
[03:13] tmpvar: its basically a node-mongodb wrapper lol
[03:13] tmpvar: erll
[03:13] tmpvar: mongodb-native
[03:13] tmpvar: i hate mongo for this reason.. hahahah
[03:15] victorstan: i appreciate that it show me a bit of how mongo works
[03:18] jc00ke has joined the channel
[03:19] tmpvar: victorstan, I hear ya, just saying thats a huge tutorial makes me a bit squeamish even
[03:19] tmpvar: alright, relax time. have a good night
[03:20] ajpiano has joined the channel
[03:20] _announcer: Twitter: "http://nodejs.org/, "python-twisted"-тэй их төстэй юм байна. гэхдээ хөгжүүлэгчдэд их сэтгэлд ойрхон санагдана байхдаа." -- Tulga. http://twitter.com/melug/status/18489366348
[03:23] victorstan: i should learn a bit more about scoping
[03:23] victorstan:  hear its the nemesis
[03:23] ncb000gt: lol, there is always more to learn
[03:23] ncb000gt: :)
[03:26] victorstan: true
[03:26] victorstan: is there a must read js book out there?
[03:30] WALoeIII has joined the channel
[03:30] mscdex: i dunno, but there is a must watch js tv series out there
[03:30] mscdex: it's called, The Crockford Files :-D
[03:30] victorstan: lol
[03:30] victorstan: i think i saw that presentation
[03:31] ncb000gt: Crockford has a book out too "Javascript: The Good Parts"
[03:31] victorstan: yeah, i think im on chapter 1
[03:31] ncb000gt: cool
[03:31] ncb000gt: There are many talks from the JSConf conferences that have gone on
[03:32] ncb000gt: those are some good vids to watch, although the topics there vary
[03:32] mscdex: victorstan: http://i27.tinypic.com/2yzn2u8.jpg
[03:32] mscdex: ;-)
[03:33] mscdex: season two!
[03:33] victorstan: where's scully?
[03:33] stepheneb has joined the channel
[03:33] mscdex: no no no, wrong series!
[03:34] victorstan: oh i see... this one only has callbacks?
[03:34] mscdex: in this series, crockford plays a javascript detective
[03:34] bradleymeck has joined the channel
[03:34] victorstan: yeah haha
[03:35] victorstan: well maybe his findings can enlighten me
[03:35] ncb000gt: his findings enlighten everyone...
[03:36] victorstan: you can't make out slight intonations in a chat room
[03:37] bpot has joined the channel
[03:37] chrischris has joined the channel
[03:38] bradleymeck: mmm?
[03:38] ncb000gt: pkrumins: this is bizarre, when I take the file that was encoded using the perl base64 encoding and decode it with your base64 decode function, I get the appropriate data.
[03:39] ncb000gt: yet when I try to decode the original file with the module it doesn't work, yet it does with python
[03:39] pkrumins: hmm...
[03:40] chrischris has joined the channel
[03:40] SubStack: decode the original file?
[03:40] mscdex: hopefully we'll have base64 in node core/crypto soon
[03:40] SubStack: nifty
[03:40] jxson has joined the channel
[03:40] mscdex: at least, according to discussion in the illuminati video
[03:40] _announcer: Twitter: ".@scichelli goodness. “@creationix: Good short article explaining what #node.js is http://bit.ly/ddPFWo”" -- Kevin Miller. http://twitter.com/kevm/status/18490668342
[03:45] ncb000gt: pkrumins: it looks like it's getting chopped at about 57 bytes
[03:47] SubStack: o_O
[03:48] BryanWB has joined the channel
[03:48] BryanWB: is step.js the preferred way to group and manage callbacks?
[03:48] ncb000gt: it looks to be the same way on any of the amz files, I'm thinking there might be some invalid byte in these files that the python stuff is either stripping or ignoring.
[03:50] BryanWB: any Italian noders? I move to rome this weekend
[03:50] pkrumins: ncb000gt: :( can you make a test case somehow?
[03:50] jc00ke has left the channel
[03:51] pkrumins: ncb000gt: did i get it right that the decoding is failing?
[03:51] pkrumins: ncb000gt: and it's failing when you do it live, but not failing if you do decoding from a file?
[03:51] bradleymeck: BryanWB it is a common way of dealing w/ callbacks yes
[03:52] BryanWB: bradleymeck, do u prefer/use other libs for grouping and managing callbacks?
[03:52] _announcer: Twitter: "@benemills node.js is built on V8 JavaScript engine. V8 is a lot like JUIC, the JS engine we created at my work. :)" -- Josh Minnich. http://twitter.com/joshminnich/status/18491461432
[03:53] ncb000gt: pkrumins: I'll try to produce a test case. The decode is failing for any of my .amz file contents (should already be base64). When I try to decode them they stop at 57 bytes.
[03:53] ncb000gt: This is just files
[03:53] ncb000gt: not even live
[03:53] bradleymeck: i avoid callback libs mostly by making utility functions that group together callbacks, however when i need em I do use Step
[03:53] pkrumins: ncb000gt: ah
[03:54] _announcer: Twitter: "I am quite curious whether it will be #clojure or #nodejs that becomes the dominant language/runtime for concurrent programming" -- Bryan. http://twitter.com/bryanwb/status/18491532097
[03:54] _announcer: Twitter: "@joshminnich interesting. I'm rewriting Pond to use node.js, its going to be extremely fast when I'm done :)" -- Ben Mills. http://twitter.com/benemills/status/18491553066
[03:54] jakehow has joined the channel
[03:54] BryanWB: bradleymeck, tks, i quite like step but have yet to use it or node for an actual project
[03:54] scoates has joined the channel
[03:55] _announcer: Twitter: "This is because IE6 http://bit.ly/9y2cv2 Rendaringubagu node removal does not occur if excessive, uupaa.js it uu.node.normalize () bug which only included the first run and various cured, CSS selectors find the UP speed" [ja] -- uupaa. http://twitter.com/uupaa/status/18491604764
[03:55] scoates: The mapping thing is pretty cool. kudos on that (-:
[03:57] pkrumins: ncb000gt: it must be that it contains an unexpected byte, yes.
[03:57] ncb000gt: pkrumins: that's my conclusion, tho, I'm trying to figure out where, what, and why...damn you amazon!
[03:58] pkrumins: static inline bool is_base64(unsigned char c) { return (isalnum(c) || (c == '+') || (c == '/'));
[03:58] pkrumins: }
[03:58] dnolen has joined the channel
[03:58] scoates has left the channel
[03:58] mscdex: hmmm, _announcer also looks for just "node" in tweets?
[03:59] pkrumins: a-zA-Z0-9 or + or /
[03:59] pkrumins: ncb000gt: look if it contains any other symbols than these!
[03:59] bradleymeck: looks for "node.\w+"
[03:59] mscdex: :S
[04:00] bradleymeck: bleh websocket-server is failing on my ubu box
[04:01] mscdex: :o
[04:01] ncb000gt: pkrumins: yea, i saw the array of characters at the top of the file.
[04:01] ncb000gt: qq, does node suppress c based stdout like printf?
[04:01] ncb000gt: by default
[04:02] softdrink has joined the channel
[04:02] pkrumins: it doesn't
[04:02] pkrumins: you can add printf to the module's code
[04:02] ncb000gt: i didn't think so
[04:03] ncb000gt: that's strange, i have, but it's not printing...
[04:03] ncb000gt: hmm
[04:03] pkrumins: i have been debugging with printf all the way down.
[04:03] DozyPieman has joined the channel
[04:03] ncb000gt: well i noticed a few fprintf's in the module code
[04:04] pkrumins: i left them there?
[04:04] pkrumins: nope, none.
[04:04] ncb000gt: there were a couple for errors
[04:05] ncb000gt: valid errors
[04:05] ncb000gt: "
[04:05] ncb000gt:         fprintf(stderr, "out of memory!\n");
[04:05] ncb000gt: that one for instance on ln 109
[04:06] ncb000gt: ....
[04:06] ncb000gt: ....
[04:06] ncb000gt: hmmm
[04:07] pkrumins: something wrong with your node!
[04:08] ncb000gt: so i was def looking at the wrong file.
[04:08] ncb000gt: that said, it's still not working 
[04:08] ncb000gt: heh
[04:09] pkrumins: which file are you looking at?
[04:10] gb|str has joined the channel
[04:11] ncb000gt: a non-working base64 implementation.... I'm now looking at yours, I was compiling and using yours but making changes to a different module
[04:12] ncb000gt: no wonder it wasn't working
[04:12] ncb000gt: ;D
[04:12] pkrumins: oh okay
[04:12] pkrumins: add some debug statements to mine
[04:12] pkrumins: also make sure you are actually using mine
[04:12] pkrumins: might be you're still using the other one
[04:13] ncb000gt: I was definitely using yours
[04:13] blaines has joined the channel
[04:14] pkrumins: ok i think i know what is going on
[04:14] pkrumins: you have a line-break in there
[04:14] pkrumins: and my module decodes continous streams, not broken into newlines
[04:14] jamescarr has joined the channel
[04:15] pkrumins: that must be it!
[04:15] polotek has joined the channel
[04:15] pkrumins: yep.
[04:15] ncb000gt: I wouldn't be surprised if this was broken into new lines
[04:16] ncb000gt: that is exactly where it fails
[04:16] ncb000gt: good call
[04:16] pkrumins: need to skip \n and \r tokens
[04:17] ncb000gt: aye
[04:17] pkrumins: can you patch it? i am actually really busy with somethign else right now.
[04:17] pkrumins: will be free only after like 8 hours.
[04:17] ncb000gt: yea, I'll work on it
[04:17] pkrumins: thanks!
[04:17] pkrumins: :)
[04:17] ncb000gt: sure :)
[04:24] dnolen has joined the channel
[04:29] _announcer: Twitter: "Help stress test my Node.js experiment! http://node.amadeusamade.us:8080/ (arrow keys to move around, press enter to chat)" -- Amadeus Demarzi. http://twitter.com/demarzi/status/18493700779
[04:29] dgathright has joined the channel
[04:30] _announcer: Twitter: "one of the best @jsmontreal meetings yet. so many ideas. but too tired to do CPS front-end for node.js tonight" -- Vladimir Sedach. http://twitter.com/vsedach/status/18493790909
[04:30] ludde has joined the channel
[04:33] mikeal: ryah: you around?
[04:34] tmpvar has joined the channel
[04:35] polotek: hey mikeal 
[04:35] mikeal: hiya
[04:35] polotek: watching this illuminati video
[04:35] polotek: that creationix posted
[04:35] mikeal: cool
[04:35] polotek: didn't know our conversation had such an impact on the proceedings
[04:36] mikeal: it's kinda long but it's actually pretty dense
[04:36] polotek: indeed
[04:38] _announcer: Twitter: "@joshminnich yeah the idea is node.js will hold everything in memory, mongodb will persist that incase of a fail + for archiving." -- Ben Mills. http://twitter.com/benemills/status/18494267604
[04:39] concernedcitizen has joined the channel
[04:39] mikeal: polotek: remind me again what area you're located?
[04:39] polotek: DC
[04:39] mikeal: i see
[04:39] mikeal: you should come up to NYC next week :)
[04:39] polotek: what's happening?
[04:40] mikeal: i'll be there :)
[04:40] mikeal: i'm gonna do some kind of node meetup
[04:40] mikeal: get jimbastard out as well
[04:40] polotek: heh, thought you were trying to convince me to come ;)
[04:40] mikeal: hahahahaa
[04:40] polotek: but yeah.  send me the info and I might make it happen
[04:40] polotek: never been to nyc
[04:41] mikeal: i'm actually still laughing
[04:41] mikeal: yeah, i gotta figure out where to have the meetup
[04:41] mikeal: how is the 29th/30th?
[04:43] hassox: hey guys
[04:43] polotek: mikeal: that's thursday/friday. I don't think I could take off work
[04:43] hassox: can someone explain to me what the importance of fd of 0 in http://github.com/extjs/Connect/blob/master/bin/connect#L373
[04:43] hassox: anyone know the importance of the 0 in : new net.Stream(0,fd) 
[04:43] hassox: new net.Stream(0,'unix')
[04:43] hassox: that should have been
[04:43] mikeal: 24th/30th?
[04:44] hassox: any of the connect guys in?
[04:44] isaacs has joined the channel
[04:44] polotek: Could probably do 24th or 31st
[04:45] polotek: actually could probably do 30th as well
[04:45] mikeal: i think the 24th might be best
[04:45] polotek: take off early and catch a bus or something
[04:47] ncb000gt: polotek you going to nyc?
[04:47] mikeal: send an email to the list
[04:47] polotek: ncb000gt: thinking about it
[04:47] jedschmidt has joined the channel
[04:47] polotek: you wanna come?
[04:47] ncb000gt: pkrumins: i believe I got it, I'll be sending a patch after i'm sure
[04:47] ncb000gt: I'd be interested
[04:47] ncb000gt: could take the train, car, whatever
[04:48] ncb000gt: it's like 4-5 hours
[04:48] ncb000gt: depeneding on traffic and such
[04:48] isaacs: ryah: ping
[04:48] [[zzz]] has joined the channel
[04:48] isaacs: ryah: i've got a present for you.
[04:48] mikeal: i don't think he's around
[04:48] mikeal: i pinged him a minute ago
[04:48] isaacs: ryah: and by "present", i mean, "a test that shows a hideous bug"
[04:48] satori: hassox: '0' just means create a new fd
[04:48] isaacs: ah, k
[04:49] isaacs: this is what's wrong with npm: http://github.com/isaacs/node/commit/f681f2865d8ee828f01e07d22a07ce84c7eff433
[04:49] isaacs: these tests fail BAD
[04:49] isaacs: like, about half the time, there's no error even, it just stops outputting, process crashes, no on("exit") handlers, nothing
[04:50] polotek: isaacs: fun times
[04:51] mikeal: i can't wait for EventSource to land
[04:51] mikeal: i hit a bug today that i would have seriously helped with
[04:51] isaacs: yes, about 1/4th of the crashes that these tests show would be a LOT easier to debug with stack traces that go all the way back.
[04:52] polotek: is EventSource going to hold up 0.2.0?
[04:52] mikeal: i advocated it landing after
[04:52] technoweenie has joined the channel
[04:52] mscdex: heh... EventSource is the name of the interface for Server-Sent Events
[04:52] polotek: are we even still _close_ to 0.2.0 at this point?
[04:52] mscdex: :P
[04:52] polotek: I don't know what the blockers are
[04:53] mikeal: i *think* we talked ryah in to just pushing it
[04:53] mikeal: by convincing him that breaking compatibility again isn't such a big deal :)
[04:53] mikeal: and promises are meant to be broken 
[04:53] mscdex: lol
[04:53] mscdex: js promises?
[04:53] mscdex: ;-)
[04:53] mikeal: that joke was made
[04:54] polotek: I think we node should hit 2.0 stable
[04:54] mscdex: aw
[04:54] mikeal: "hell, ryan *removes* promises"
[04:54] polotek: and then break everything to holy hell
[04:54] mikeal: polotek: agreed
[04:55] ncb000gt: Keep people on their toes
[04:55] ncb000gt: it's a good plan
[04:55] stepheneb has joined the channel
[04:56] polotek: when people start seeing the benefit of that eventsource has on debugging async code, they'll fall in line
[04:56] polotek: or give up and go back to ruby.  and really, who needs those guys
[04:56] mikeal: it's not actually a backwards incompatible change
[04:57] mikeal: giving all modules their own v8 context, that is going to break compat
[04:57] hassox: satori: so in that case it's just a new fd that is unbound?
[04:57] polotek: mikeal: yeah if I read the pdf right it shouldn't the api at all
[04:57] polotek: but it will almost certainly break some use cases
[04:57] polotek: or introduce some creeping bugs
[04:57] ts__ has joined the channel
[04:58] polotek: mikeal: when did the modules thing come up?
[04:58] mikeal: before the streams stuff
[04:58] mikeal: at first it'll be a different require
[04:59] satori: hassox: I think fd is lazy created on connect
[04:59] satori: ?
[05:00] hassox: satori: k thanx :)
[05:00] hassox: ACTION is trying to follow the spawingning of child servers in Connect
[05:00] polotek: so that means no more modifying the global scope from a module?
[05:00] hassox: lots of undocumented stuff 
[05:00] mikeal: polotek: correct
[05:01] polotek: I like it.  but some other people are gonna be piiisssssssed
[05:01] [[zzzz]] has joined the channel
[05:01] mikeal: everyone try to do DSL shit in javascript
[05:01] mikeal: which makes me happy that it's happening :)
[05:01] pquerna: ryah: thinking more about the SSL-in-seperate thread thing, it might make more sense than I thought originally; Thinks like if you wanted to implement a ssl session cache, or even the OCSP stapling -- OpenSSL's API for these is they make a callback, and you have to return the right values -- its not something you could ever make a 'javascript' callback if it ran in the main thread, because the js couldn't be allowed to 'go async', unless we had c-c
[05:01] ericvkng has joined the channel
[05:02] _announcer: Twitter: "@getify anytime man. I'll try to make it to the JS meet-up next week. Curious to learn more about node.js." -- Andrew Hite. http://twitter.com/andyhite/status/18495585058
[05:02] polotek: mikeal: word
[05:03] polotek: mikeal: something else I've been thinking about for a bit
[05:03] polotek: but haven't had a chance to try out
[05:03] polotek: what's a good way to have module A wrap and enhance module B
[05:04] ThePub has joined the channel
[05:04] polotek: but without actually modifying B
[05:04] polotek: like you only get the enhancements through A
[05:04] polotek: So for instance, I'm gonna start implementing the dom api on top of libxmljs
[05:04] _announcer: Twitter: "I refuse to be eighties. working hard with nodejs" [es] -- Alvaro Véliz Marin. http://twitter.com/alvaroveliz/status/18495723193
[05:04] polotek: but I want a separate module for that
[05:05] polotek: that just pulls in the libxmljs core and enhances the prototypes
[05:05] polotek: actually, I just answered my own question
[05:05] mikeal: module.exports = require('libxmljs')
[05:05] mikeal: and then extend from there
[05:05] polotek: yeah but that will still change the core module right?
[05:06] mikeal: not after the context stuff lands
[05:06] polotek: if I do exports.Element.prototype.getAttribute = ...
[05:06] mikeal: for now
[05:06] mikeal: just keep your own copy of libxmljs and import it relatively
[05:06] mikeal: don't treat it like a normal dependency and npm won't try to install and use a global one
[05:06] polotek: that would work.  But any instanceof checking would fail
[05:07] polotek: ideally you could do e instanceof libxmljs.Element
[05:07] polotek: and have it work whether you went through the enhanced module or not
[05:07] mikeal: instanceof is breaking after the context move anyway
[05:07] isaacs: mikeal: i am still skeptical that "the context stuff" will ever land for everyone.
[05:07] polotek: the idea I just had was to duplicate the prototypes and have them inherit
[05:07] isaacs: mikeal: i could be wrong... but i strongly suspect that that'll get built and we'll be like "oh, this breaks the world for some reason"
[05:08] polotek: mikeal: I just learned about this context move.  don't break my heart yet man
[05:08] mikeal: hehe
[05:08] polotek: but seriously that does give me pause about this idea
[05:08] isaacs: if modules inherit their context from their calling module, that's great... but doesn't there have to still be a single global module cache?  so how does that work?
[05:09] isaacs: if A includes B, and B includes C, and C includes A, then does the cached A given to C inherit from C's context?
[05:09] mikeal: they all do inherit, remember
[05:09] mikeal: and the top level context will implement require
[05:09] isaacs: right, but let's say B does global.B = "b"
[05:09] isaacs: (you could still pass a custom require() to each context, and probably still have to for a few reasons)
[05:10] isaacs: but let's talk about plain old normal globals..
[05:10] isaacs: so A does global.a = "a" and B does global.b = "b" and C does global.c = "c"
[05:10] isaacs: A ~ require("B")
[05:10] isaacs: B ~ require("C")
[05:10] isaacs: C ~ var a = require("A")
[05:11] isaacs: at that point, in "C", it gets a cached A, to prevent the infinite loop
[05:11] isaacs: BUT, the A that is cached didn't inherit from C.  does it now?
[05:11] isaacs: A ~ exports.getc = function () { return global.c } 
[05:11] mikeal: how locked down is the context
[05:12] isaacs: well, without re-compiling the code, it's permanent.
[05:12] isaacs: a function compiled in context X is *always* in context X, no matter who's calling it.
[05:12] mikeal: if i pass something from the top level globals to the context is it a pointer and can it still modify it's local varibables form the other context
[05:12] isaacs: mikeal: yeah, unless you do the security token stuff (which isn't exposed to node's js env, afaik)
[05:13] isaacs: also, unless it changed since 2008 when i last took a look at that.
[05:13] isaacs: :)
[05:13] mikeal: so if the top level context keeps it's cache local, and it's passed to every new module context, the cache would basically be as it is now
[05:14] mikeal: the cache would just be local to require, and require would be passed to each new module compile
[05:14] _announcer: Twitter: "OMG! How lovely is this . The first two graphs are enough. http://www.sitepoint.com/blogs/2010/07/13/node-js-is-the-new-black/" -- lori. http://twitter.com/lorischaolcom/status/18496221891
[05:17] adelcambre has joined the channel
[05:18] saikat has joined the channel
[05:20] blaines has joined the channel
[05:20] creationix has joined the channel
[05:20] creationix: Astro: http://wiki.github.com/extjs/Connect/extjs.github.com/Connect/Connect%20Individual%20CLA.pdf
[05:21] creationix: Astro I mean http://extjs.github.com/Connect/Connect%20Individual%20CLA.pdf
[05:22] lachlanhardy has joined the channel
[05:25] rictic has joined the channel
[05:26] ncb000gt: pkrumins: I got it to report the right number of bytes, but those bytes appear to be innacurate. I'm trying to figure out why and all that goodness. I'll keep looking tomorrow at some point.
[05:27] pkrumins: thanks for the feedback
[05:27] pkrumins: the fix is actually really easy
[05:27] pkrumins: weren't i busy, i'd have fixed it in 5 mins
[05:27] pkrumins: but really busy to switch to that problem
[05:28] dgathright has joined the channel
[05:28] ncb000gt: pkrumins: no worries, if you do get around to it before I can finish it up then I'll just take a look at what you did. :)
[05:28] ncb000gt: anyway, i need sleep so i can function in the AM
[05:28] pkrumins: yeah ok!
[05:28] pkrumins: good night!
[05:28] ncb000gt: night
[05:29] ncb000gt: and thanks for the help earlier
[05:32] polotek has left the channel
[05:34] blaines has joined the channel
[05:48] teemow has joined the channel
[05:50] isaacs: mikeal: the issue is that "inheriting scope from the parent module" is probably going to introduce irregularies
[05:50] isaacs: mikeal: it might inherit from its *original* parent, but not from its *current* parent
[05:51] mikeal: hrm....
[05:51] isaacs: i mean, right now that's how module.parent works.  it's just the first parent.  but who cares?
[05:52] isaacs: no one uses module.parent for anything.  it's really only a (soon to be) vestigial requirement to make require.async work
[05:52] isaacs: but if that's now where globals come from, it becomes relevant
[05:53] isaacs: every module in a 100% new global context is one thing.  every module in a semi-shared-in-unpredictable-ways context is not ok.
[05:57] _announcer: Twitter: "Live development discussion of some new NodeJS APIs: http://vimeo.com/13292130 This is so nerdy and wonderful. #nodejs #omgihatemyvoice" -- Ⓘⓢⓐⓐⓒ. http://twitter.com/izs/status/18498416842
[06:00] _announcer: Twitter: "@shinyloz I hadn't considered nodejs. Was thinking php5 and a simple event implementation. Perhaps running on EC2 - for the powah." -- isofarro. http://twitter.com/isofarro/status/18498563099
[06:01] isaacs: it's interesting how hash-tags become room links in colloquy
[06:03] zaach: ACTION joins #omgihatemyvoice
[06:08] derferman has joined the channel
[06:12] zaach has left the channel
[06:13] huyhong has joined the channel
[06:14] blaines has joined the channel
[06:18] mikeal: isaacs: i think everyone hates their voice
[06:18] mikeal: i certainly hate mine
[06:18] isaacs: yeah
[06:18] mikeal: i was like "do i only have a lisp when i'm drinking or always?"
[06:19] isaacs: i was watching, and kind of interested until i heard myself talk, and then was like "omgno"
[06:19] mikeal: haha
[06:19] mikeal: i was actually curious to remember all the iterations we went thru to get to the filter API
[06:19] mikeal: so i skipped to that part
[06:19] agnat has joined the channel
[06:21] beawesomeinstead has joined the channel
[06:24] mscdex: it's about the content, not the speech ;-)
[06:24] sh1mmer has joined the channel
[06:33] admc_ has joined the channel
[06:33] admc has joined the channel
[06:35] paulwe_ has joined the channel
[06:36] pdelgallego has joined the channel
[06:36] paulwe_ has joined the channel
[06:51] jmar777 has joined the channel
[06:52] felixge has joined the channel
[06:53] _announcer: Twitter: "@bryanwb IMHO, the #java crowd will use #clojure, everybody else will use #nodejs. Except the #python guys, they already have everything. :)" -- Kristof Kovacs. http://twitter.com/kkovacs/status/18500949403
[06:55] mscdex: so is there any clever way to make a script restart itself?
[06:56] sdgvf: god?
[06:56] mscdex: :S
[06:57] mscdex: what about without divine intervention?
[06:57] sveimac has joined the channel
[06:57] sdgvf: http://god.rubyforge.org/
[06:57] SubStack: require('child_process').exec(process.argv.slice(0,1).join(' '))
[06:57] SubStack: clever enough?
[06:57] SubStack: actually might as well just .exec(process.argv)
[06:58] mscdex: the child process won't exit if the original process does?
[06:58] SubStack: oh bah .exec doesn't do what I think it does
[06:58] mscdex: hmm
[06:59] markwubben has joined the channel
[07:02] ecmanaut has joined the channel
[07:02] mscdex: didn't work :\
[07:04] mscdex: maybe i can use 'at' or something :S
[07:06] b_erb has joined the channel
[07:14] mjr__: It's interesting that so many people looked at that giantly long node video.
[07:15] mjr__: I spent about half of today in that same conference room, only with no liquor.
[07:15] mscdex: heh
[07:15] mscdex: my productivity went down because i watched it in its entirey
[07:15] mjr__: wow
[07:15] mscdex: but was good discussion
[07:15] mjr__: But now just think of how enlightened you are.
[07:16] mscdex: would've been good to get what was said before it started though, because it seemed like the discussion had already been going on at the start of the video
[07:16] mjr__: Yeah, sorry about that.
[07:17] mjr__: mikeal had the idea to first have the meeting, and then make a summary video.
[07:17] mscdex: ah
[07:17] mjr__: But that just never would have happened.  We talked until we were all exhausted.
[07:17] mscdex: i can imagine
[07:18] pquerna: 17 files changed, 235 insertions(+), 218 deletions(-)
[07:18] mscdex: egad!
[07:19] mscdex: darn, at doesn't have sub-minute resolution
[07:20] mjr__: pquerna: my dgram fix + tests + docs is like 500 lines of changes.
[07:21] pquerna: ship it :)
[07:21] jmar777 has left the channel
[07:21] mjr__: I think ryah returned EPATCHTOOLARGE on that one.
[07:22] mjr__: What with his post-vacation queue and all.
[07:22] pquerna: well, this patch i'm doing now is 10 commits
[07:22] pquerna: i guess ill attach 10 .patch files to the email
[07:22] pquerna: :|
[07:22] mjr__: I think mine was like 6, rebased into a giant one.
[07:22] mjr__: What are you working on?
[07:22] pquerna: module loading
[07:23] _announcer: Twitter: "Node.js clearly explained: http://bit.ly/aMamVK. The future for web servers?" [nl] -- Chris Flink. http://twitter.com/chrisflink/status/18502260130
[07:23] pquerna: so, its getting to close to being able to hook in your own modules in the same way as the 'core' ones are
[07:23] pquerna: or rather, making core modules more like normal extensions
[07:25] mjr__: I'm glad people are working on things like modules, loading them, packages, installing them, etc.
[07:25] mjr__: Because I do not care about any of that, as long as something more or less works.
[07:26] pquerna: heh
[07:32] benburkert has joined the channel
[07:33] christkv has joined the channel
[07:44] statim has joined the channel
[07:45] felixge has joined the channel
[07:47] micheil: pquerna: that is quite an epic commit that last commit
[07:47] micheil: ** patch
[07:48] TomY has joined the channel
[07:49] kuya: is the author of mongoose here?
[07:50] kuya: or anyone else that knows about it ...
[07:50] pquerna: micheil: true, though I think over the next few months, its a related goal to move node.cc from ~2,000 LOC to about ~40
[07:51] micheil: pquerna: okay, interesting
[07:51] khug has joined the channel
[07:51] micheil: bbl, watch illuminati talk
[07:51] pquerna: i want the int main() to be almost nothing, a wrapper around a few node:: functions -- that lets you plugin a different frontend /initilization code, to do things like make a single binary distribution of baseline node + custom extensions + custom js compiled into C
[07:55] _announcer: Twitter: "Seriously, folks. Game-changers crafting the future of the internet. Long but important video. Also funny. http://vimeo.com/13292130 #nodejs" -- HB Stone. http://twitter.com/hbstone/status/18503570341
[07:58] jsilver has joined the channel
[08:03] _announcer: Twitter: "@kkovacs interesting! methinks the #python folks will move to node.js because afaict python 3.0 isn't seeing big speed improvements" -- Bryan. http://twitter.com/bryanwb/status/18503914592
[08:05] Validatorian has joined the channel
[08:05] jsilver: ROFL
[08:05] jsilver: trollish tweet
[08:20] jedschmidt has joined the channel
[08:21] satori: If I have a base class in c++, wrapped and exposed to js, and I inherit from this object in js. Is it possible to create instances of the subclass from c++ code?
[08:21] markwubben has joined the channel
[08:22] felixge has joined the channel
[08:22] felixge has joined the channel
[08:23] jsilver: satori, i dont see why not
[08:23] satori: I am stuck with a lib i am binding...
[08:23] khug has joined the channel
[08:23] satori: I have a function that uses the abtract factory pattern to assign a control class...
[08:24] jsilver: whats abstract factory pattern and control class
[08:24] jsilver: lol
[08:24] jsilver: not enuf details
[08:24] satori: looks like setCtrlClass(new Factory<CLASS>);
[08:24] satori: where the factory instance actually creates CLASS instaces when they are needed.
[08:24] satori: Factory() is the abstract factory class...
[08:25] satori: The problem is.... I want to have user create subclasses in js code used by this factory
[08:25] satori: I don't know how to connect the c++ and js sides here
[08:26] mscdex: well, kinda got something working, but i can't find a portable way to bring a process started by node to the shell's "forefront"
[08:26] satori: Factory() uses templates to create instances. But I don't know how to have it create instances that are actually defined in js rather than c++
[08:26] satori: ?
[08:27] mscdex: satori: trying to find a way to restart a node process
[08:27] satori: what to you mean by forefront?
[08:27] satori: do
[08:27] mscdex: foreground
[08:28] mscdex: i can't use 'fg' because the process wasn't launched by the shell
[08:28] mscdex: unless i can somehow change the process owner
[08:28] mscdex: or whatever
[08:28] mscdex: heh
[08:29] satori: You don't know if it's possible to have c++ create js defined subclass instances do you? :P
[08:30] mscdex: :S
[08:30] satori: It's hard working this stuff out my own. I need more nerd friends.
[08:30] satori: :)
[08:31] mscdex: maybe i'll just force the user to restart the process
[08:31] mscdex: gah
[08:31] jetienne has joined the channel
[08:33] mscdex: a self-mutating javascript program!
[08:33] mscdex: :-D
[08:33] jsilver: we're all friends here
[08:37] _announcer: Twitter: "Twitter Node.JS for a semi-finished library was not complete ... and to use in graduate research" [ja] -- KOBA789. http://twitter.com/koba789/status/18505295001
[08:38] mattly has joined the channel
[08:43] xla has joined the channel
[08:44] satori: hmm. I may have worked out my problem. If I pass in a js constructor, maybe I can create a v8 template from it and then wrap factory created classes with that template... maybe,
[08:48] _announcer: Twitter: "Awesome way of describing Node.js http://www.debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb" -- jakescott. http://twitter.com/jakescott/status/18505724451
[08:50] jedschmidt_ has joined the channel
[08:50] _announcer: Twitter: "@pat less (ruby) is a dead project, less.js is very interesting, although its client side or node. sass stole less' syntax—therefore OK." -- Ben Schwarz. http://twitter.com/benschwarz/status/18505838490
[08:54] _announcer: Twitter: "The principle node.js again briefly and succinctly explains to SitePoint: http://bit.ly/aMamVK" [de] -- Christian Schaefer. http://twitter.com/derSchepp/status/18505979579
[08:55] jsilver: dude
[08:55] MrNibbles: ACTION <3 http://css3pie.com/
[08:56] MattJ has joined the channel
[09:01] mscdex: css3pie is on the slow side though :-\
[09:01] Rik`: and keeps bad browsers in the game
[09:02] mattly has joined the channel
[09:02] mscdex: man, event visiting github in ie6 sucks very very bad
[09:02] mscdex: *even
[09:03] micheil has joined the channel
[09:04] blackdog_ has joined the channel
[09:06] xla has joined the channel
[09:12] MrNibbles: mscdex: yeah, very true
[09:12] MrNibbles: Rik`: most people on IE6 dont do it through choice
[09:12] MrNibbles: its mainly companies hoarding old machines
[09:12] MrNibbles: i had a screengrab from Nestlé the other day.... in IE 5
[09:12] MrNibbles: i kid you not
[09:13] Rik`: MrNibbles: and companies don't need those fancy features
[09:13] MrNibbles: Rik`: no, people do
[09:14] Rik`: really ? people using IE6 in a company need CSS3 gradients ?
[09:14] MrNibbles: it depends, say for example that effect really helps you get your information across
[09:15] felixge has joined the channel
[09:15] MrNibbles: or if you are using it dynamically to represent data
[09:15] MrNibbles: then yes
[09:15] MrNibbles: it can be very useful
[09:15] felixge_ has joined the channel
[09:15] Rik`: if people are still on IE5, they have an old computer, so generating those effects client side will dramatically affect the usability of the app
[09:16] hassox has joined the channel
[09:16] MrNibbles: maby so, but sacrificing usability for 0.5% of your audience seems like insanity to me
[09:17] jetienne_ has joined the channel
[09:18] MrNibbles: Rik`: i do agree with your point on it keeping old browsers hanging around
[09:18] _announcer: Twitter: "Let&#39;s try it .. I wonder node.js" [ja] -- jugyo [十行]. http://twitter.com/jugyo/status/18506939798
[09:18] _announcer: Twitter: "An excellent introduction to #node.js http://bit.ly/c9REC0" -- Nick Telford. http://twitter.com/nicktelford/status/18506949086
[09:18] MrNibbles: unfortunately i dont think its going to change the amount of users of these old browsers either way
[09:18] _announcer: Twitter: "node.js want to experience the fun of a" [ja] -- jugyo [十行]. http://twitter.com/jugyo/status/18506964660
[09:19] MrNibbles: and if anything, it helps you make a visual impact on that user, who is not expecting such a full visual experience under IE
[09:19] Rik`: I really don't see how using a gradient, rounded corners, shadows can be useful in a company that still uses IE6 or 7
[09:19] Rik`: if they are still using those browsers, they have no interest in a quality UI design
[09:20] MrNibbles: i see your point, and if i were to design software for internal company use (where they used only IE) i wouldnt consider using them
[09:21] MrNibbles: however, to help keep things consistent, it makes sense to add these in rather than let the effects degrade
[09:21] jedschmidt_ has joined the channel
[09:21] Rik`: http://dowebsitesneedtolookexactlythesameineverybrowser.com/ :)
[09:22] MrNibbles: Ha :P
[09:22] MrNibbles: try telling that to some of our clients..
[09:22] jsilver: cute site
[09:23] markwubben_ has joined the channel
[09:23] Rik`: MrNibbles: part of a professionnal's job is to explain the client why he is paying you
[09:23] Rik`: and he is paying you to make good decisions in a domain he doesn't know
[09:23] Rik`: (ok, easy to say, not easy to achieve ;) )
[09:24] MrNibbles: yeah, most of the time its not an issue
[09:24] MrNibbles: its the simple things though, rounded buttons etc
[09:24] MrNibbles: id rather use those effects than do an image replacement
[09:28] _announcer: Twitter: "Someone tell me if Kurasa node.js the sexy" [ja] -- mochiz. http://twitter.com/mochiz/status/18507340072
[09:29] lief has joined the channel
[09:29] robinduckett: what the hell
[09:30] seutje has joined the channel
[09:34] borior: hi all, I'm having difficulty understanding the documentation on IO streams. Is there any way I can create my own stream and pipe data into it without using fs.readStream?
[09:35] borior: I want to read data from multiple files and pass it to the stream, which in turn is being read by the HTTP server and spat out to the client ....
[09:35] _announcer: Twitter: "Parsing file uploads with Node.js @500MB/sec http://bit.ly/bkmkGG This guy has a nack for explaining stuff in such simple terms :)" -- jakescott. http://twitter.com/jakescott/status/18507643181
[09:39] borior: am I right in that there seems to be no way of creating custom streams?
[09:40] mscdex: what the hell @ what the hell
[09:40] x_or has joined the channel
[09:41] borior: mscdex: was that directed at me?
[09:41] mscdex: borior: no
[09:42] borior: good good =)
[09:43] mscdex: borior: mikeal has a utility function that does pumping of multiple streams: http://github.com/mikeal/node-utils/blob/master/streams/lib/main.js
[09:44] mscdex: borior: i've never personally used it, but it may be what you're after.
[09:46] borior: mscdex: cheers, I'll have a look
[09:47] mscdex: ./afk
[09:51] rictic has joined the channel
[09:52] _announcer: Twitter: "node.js Gets its Own Key-Value Store: nStore - nStore: › A simple in-process key/value document store for... http://tumblr.com/xzjdeha8w" -- Alex Popescu. http://twitter.com/al3xandru/status/18508300433
[10:03] jetienne_: q. in a http client.addListener("error", what are the parametere of the callback ?
[10:03] ctp has joined the channel
[10:07] stride: jetienne_: just the exception object
[10:07] jetienne_: stride: does it contain info on the source of the error ?
[10:07] jetienne_: beside lines + file names i mean
[10:07] c4milo has joined the channel
[10:09] sztanpet has joined the channel
[10:10] javajunky has joined the channel
[10:10] stride: don't know, you can look at it with sys.inspect
[10:10] javajunky: ugggh longest stag weekend *ever*
[10:12] MrNibbles: javajunky: ill say, its wednesday!
[10:14] javajunky: indeed, blew my car up :(
[10:15] javajunky: still catching up on changes in node ;) …surprised no new releases in the last 4 days <g>
[10:16] Lazesharp: is there another way to construct an http.Server aside from http.createServer()?
[10:16] Lazesharp: because the factory means I can't properly descend from http.Server :\
[10:22] jetienne_: require('url').parse("http://127.0.0.1:8124").pathname === undefined
[10:22] jetienne_: require('url').parse("http://127.0.0.1:8124/").pathname === "/"
[10:22] jetienne_: not sure if it is correct, but it costed me quite a bit of time :)
[10:27] olegp has joined the channel
[10:31] _announcer: Twitter: "@ Satay as a candidate for the Shadow Minister for javascript frameworks are mandatory I ask you: What do you think nodejs.org? :)" [cs] -- Pavel Šuchmann. http://twitter.com/bver/status/18509915951
[10:33] Lazesharp: hmm, is it not possible to inherit from the base "Array" object? sys.inherts(MyObj, Array)
[10:33] fdmanana has joined the channel
[10:34] Lazesharp: ahh, I see: for...in doesn't work on Array
[10:34] Lazesharp: hmm :\
[10:37] x_or has joined the channel
[10:38] fermion has joined the channel
[10:39] rsterner_ has joined the channel
[10:40] jetienne_: stride: btw i did the test, and it is possible to test because notified exception message is "ECONNREFUSED, Connection refused"
[10:40] jetienne_: so possible to parse
[10:43] stagas has joined the channel
[10:44] _announcer: Twitter: "node.js Gets its Own Key-Value Store: nStore: http://github.com/creationix/nstore" -- Lao Wang. http://twitter.com/lao_wang/status/18510468004
[10:48] javajunky: chortle, that should read 'gets yet another key-value store' ;)
[10:49] pavan_ has joined the channel
[10:52] _announcer: Twitter: "Okay, Alias the FIFO that you have a deal set to hit an email Node.JS Let him be made to run daemon" [ja] -- KOBA789. http://twitter.com/koba789/status/18510801626
[10:59] maushu has joined the channel
[10:59] Tim_Smart has joined the channel
[11:00] felixge has joined the channel
[11:00] felixge has joined the channel
[11:01] mklappstuhl has joined the channel
[11:01] afters has joined the channel
[11:03] _announcer: Twitter: "@ Oncletom and level access to a database? you see how it node.js with?" [fr] -- Thibaut LE LEVIER. http://twitter.com/tiboll/status/18511294018
[11:05] charlenopires has joined the channel
[11:06] javajunky has joined the channel
[11:09] MrNibbles: ACTION <3's safari 5's console display of js objects
[11:11] markwubben has joined the channel
[11:14] afters: http-client's request method throws uncaughtExceptions, instead of normal catchable ones.
[11:15] afters: is this a known issue?
[11:15] jetienne_: afters: try to catch the exception
[11:17] afters: jetienne_: it refuses to be caught. process.addListener('uncaughtException' ... ) does respond, however
[11:20] _announcer: Twitter: "Ha, caveman :) “@dgentry: Very concise description of node.js. Even a caveman like me can understand it. http://bit.ly/d1SsqV”" -- Mark Essel. http://twitter.com/VictusFate/status/18512041036
[11:20] wao: damn guys, node.js are great platform for new websocket projects
[11:20] wao: :)
[11:20] wao: like wpilot game
[11:20] wao: :)
[11:22] jedschmidt has joined the channel
[11:22] x_or has joined the channel
[11:22] pavan_ has joined the channel
[11:24] satori: Anyone with a good understanding of the v8 side of node here?
[11:25] borior: hmm, if I do a readFile with a specified encoding, surely I shouldn't get a Buffer back?
[11:26] ph^ has joined the channel
[11:26] robinduckett: if you haven't spelt the encoding correctly
[11:26] robinduckett: then you might
[11:26] robinduckett: i.e. writing utf-8 instead of utf8
[11:27] borior: robinduckett: I'm not actually quite that stupid
[11:27] borior: it seems that if I read from a zero-length file with utf8 encoding, I get a Buffer
[11:28] borior: is that a bug? I'd say I should get the empty string.
[11:31] herbySk has joined the channel
[11:35] cloudhead has joined the channel
[11:35] herbySk: anyone openssl here? I wanted to get https page through HttpClient but am unable to connect securely (verifyPeer returns false, and lynx -dump writes ssl error 'unable to get local issuer certificate'
[11:37] javajunky: herbySk: did you compile with ssl enabled ?
[11:38] borior: yes, given that the results from sync and async are different, I'm going to file this as a bug: http://gist.github.com/475317
[11:39] herbySk: javajunky: yes
[11:39] javajunky: herbySk: hmm, got a gyst
[11:41] herbySk: javajunky: it's probably somthing setupwise, as I told, cli lynx had https problem, too. maybe I should create some local certificates or import some root certificaters into openssl or something like that, but I never did anything like that
[11:45] javajunky: the common (mozilla) certificates are in by default
[11:48] _announcer: Twitter: "Key/Value store written in&for NodeJS with append-only data file, JSON data format & in-memory index: http://github.com/creationix/nstore" -- Uwe Dauernheim. http://twitter.com/uwe_/status/18513407805
[11:49] _announcer: Twitter: "#nodling with #nodejs with various other speaking Javascript things that smart people on Web keep creating & sharing with the world for free" -- obiwon. http://twitter.com/obiwon/status/18513430197
[11:49] mape: Is youtube down?
[11:49] mape: Hmm yeah.. :S
[11:50] mape: And up
[11:52] stepheneb has joined the channel
[11:53] hpoydar has joined the channel
[11:55] herbySk: javajunky: http://gist.github.com/475325
[11:56] javajunky: herbySk: have you had a look at the https tests in the node.js codebase ?
[11:56] aliem has joined the channel
[11:57] Ori_P has joined the channel
[11:57] jetienne_: var google = http.createClient(80, 'graph.faceboook.com', true);  <- uber naive... you are sure of port 80 ?
[11:58] herbySk: jetienne: ah... copy/paste from docs...
[11:58] herbySk: thanx... but I'll see if it really helps
[11:58] mape: Warning: Suspected phishing site! The website at graph.faceboook.com has been reported as a "phishing" site.
[11:58] mape: heh
[11:59] jetienne_: nice :)
[12:05] charlenopires has joined the channel
[12:06] aheckmann has joined the channel
[12:07] tmedema has joined the channel
[12:08] nicklovescode has joined the channel
[12:08] nicklovescode: working on building a node based online irc client, not sure if I'm fundamentally understanding or not
[12:09] satori: Whats ur prob?
[12:09] nicklovescode: I want node to keep a connection with IRC open, and when it gets a message, send back to my javascripot
[12:09] nicklovescode: I can do a 'long ajax' comet type thing, but then the connection closes and I need the irc connection to stay open
[12:10] satori: a net.Stream shouldn't close unless you close it or the irc server does.
[12:10] nicklovescode: but how can I report back to my javascript?
[12:10] nicklovescode: sorry
[12:10] nicklovescode: clientside
[12:10] satori: you could use web sockets
[12:10] satori: that would be ideal
[12:11] nicklovescode: anything else? web sockets are virtually unsupported as of now, I believe
[12:11] Tim_Smart: nicklovescode: Take a look at some existing IRC client libraries :)
[12:11] jetienne_: nicklovescode: there is the chat demo. aka a kindof irc live chat in nodejs
[12:11] jetienne_: this will give the browser side
[12:11] Tim_Smart: socket.io is the alternative to websockets that work well
[12:11] satori: There are fall back methods that use native ws where possible (chrome, Flash sockets (invisible) where not)
[12:11] mape: Unless you have heavy load
[12:12] nicklovescode: wow, thanks guys. I meant to checkout the chat source, good idea. 
[12:12] satori: socket.io is what you should look at
[12:12] jetienne_: http parser is giving me trouble
[12:12] Tim_Smart: Unless you are making a multiuser sketch pad :) (or a game)
[12:13] nicklovescode: well I'm allowed to spend 20% of my time on an open source project, and I'm picking this, so I guess it just has to be more of a proof of concept. I think I'll use websockets
[12:13] borior: and now I appear to have found a bug in writeFile as well! ugh. http://gist.github.com/475340
[12:17] dberlinger has joined the channel
[12:18] satori: borior: yeah, looks like it.
[12:18] satori: zero length strings
[12:18] herbySk: jetienne_, javajunky: thanx for pointing out to obvious mistake, but it did not help: http://gist.github.com/475343
[12:19] herbySk: I probably need to do something with openssl configuration :-( but I don't know what
[12:20] jetienne_: http://pastebin.com/qtAK77Eh <- this is a http log, after the header, node http client is closing the connection, due to http_parser for all i see... anybody knows if this http is ok ? (the server works ok with wget/curl as client, only nodejs got issue with it)
[12:20] Tim_Smart: borior: That bug has already been reported from memory
[12:21] _announcer: Twitter: "A simple in-process key/value document store for node.js. http://bit.ly/9nIqqt" -- Hirohisa Suzuki. http://twitter.com/hsuzu/status/18515128237
[12:21] Tim_Smart: By Jeremy Ashkenas (the founder of CoffeeScript)
[12:22] _announcer: Twitter: "Today. NET User Group meeting in HH # # to server-side Javascript with node.js - http://bit.ly/cTGAtq - Free places!" [de] -- Steffen Forkmann. http://twitter.com/sforkmann/status/18515186298
[12:25] _announcer: Twitter: "@ Sforkmann Cool topic! For someone already in the Set node.js. NET environment an pratkisch?" [de] -- robertmischke. http://twitter.com/robertmischke/status/18515385375
[12:28] Tim_Smart: borior: What version of node were you using?
[12:29] Tim_Smart: borior: Take a look at http://github.com/jashkenas/coffee-script/issues/issue/420
[12:37] _announcer: Twitter: "Having a quick glance at nStore http://is.gd/drBGZ, a simple in-process key/value document store for node.js." -- Raphael Stolt. http://twitter.com/raphaelstolt/status/18516033119
[12:37] chrischris has joined the channel
[12:37] jherdman has joined the channel
[12:38] _announcer: Twitter: "I wonder if I libeio a beta. I guess I also used node.js, or just not a page refresh" [ja] -- ヾ(o゜ω゜o)ノ゛ プニプニ！ . http://twitter.com/punytan/status/18516136268
[12:40] jherdman has joined the channel
[12:46] dnolen has joined the channel
[12:47] _announcer: Twitter: "I want to make something cool with node.js, but I have no idea what!" -- Elliott Kember. http://twitter.com/elliottkember/status/18516583327
[12:49] maushu: ヾ(o゜ω゜o)ノ゛
[12:50] jetienne_: ryah: http://pastebin.com/qtAK77Eh is a http exchange, after server replies, node/http-parser is closing the cnx on HTTPParser.onMessageComplete .... before the server sends its data. nevertheless curl/wget/chrome/firefox are all able to read the content from the server. any suggestion ? can you confirm this is not valid http from a http parser point of view ? 
[12:52] dnolen_ has joined the channel
[12:52] ericvkng has joined the channel
[12:55] _announcer: Twitter: "@ Sforkmann Very cool topic # nodejs can unfortunately not be there. # # Javascript rocks" [de] -- MikeBild. http://twitter.com/mikebild/status/18517013355
[12:59] maushu: mscdex: Is this issue related to ours? http://github.com/ry/node/issuesearch?state=open&q=ssl#issue/206
[12:59] maushu: I never noticed if cpu reached 100%.
[12:59] _announcer: Twitter: "@ # Robertmischke nodejs has nothing to do with. NET except fork http://bit.ly/cxqV1l notedotnet # - # dotnetclient with WebRequest / Response" [de] -- MikeBild. http://twitter.com/mikebild/status/18517296085
[13:00] stagas has joined the channel
[13:01] jetienne_: ryah: http://github.com/ry/http-parser/blob/master/http_parser.c#L1381 is the line discarding the http request
[13:03] jetienne_: ryah: apparently http parser requires content-length
[13:04] ben_alman has joined the channel
[13:08] behmann has joined the channel
[13:10] stagas has joined the channel
[13:10] _announcer: Twitter: "My 1st blog post: Why I choose Javascript - http://bit.ly/9oYUq0 #javascript #nodejs #blog #coding #amiga #php" -- George Stagas. http://twitter.com/stagas/status/18518005770
[13:14] stagas has joined the channel
[13:15] gf3 has joined the channel
[13:15] TkTech has joined the channel
[13:15] jetienne_: got it!
[13:16] jetienne_: HTTP/1.1 applications that do not support persistent connections MUST include the "close" connection option in every message. <- i forgot this one. ryah was correct and not me :)
[13:17] _announcer: Twitter: "@ Mike-building is already clear to me why ;-) I also wrote: &quot;. NET environment.&quot; Node.js&#39;s cool, really I do not really need." [de] -- robertmischke. http://twitter.com/robertmischke/status/18518389222
[13:19] khug has joined the channel
[13:19] Ori_P_ has joined the channel
[13:23] phiggins has joined the channel
[13:28] botanicus has joined the channel
[13:28] jbrantly has joined the channel
[13:29] _announcer: Twitter: "Enjoying the NOS Tour de France stream playing in VLC. #nodejs hacking FTW!" -- Mark Wubben. http://twitter.com/novemberborn/status/18519149978
[13:31] davidsklar has joined the channel
[13:34] joshbuddy has joined the channel
[13:34] joshbuddy has joined the channel
[13:38] maushu: I really need to fix those http entities in the tweets.
[13:39] bradleymeck: that would be nice
[13:39] bradleymeck: is it from the translate?
[13:41] airportyh has joined the channel
[13:44] _announcer: Twitter: "nStore: a simple, in-process key/value database for node.js http://github.com/creationix/nstore" -- Ryan Carmelo Briones. http://twitter.com/ryanbriones/status/18520137481
[13:46] proppy has joined the channel
[13:46] maushu: bradleymeck: Yeap.
[13:50] _announcer: Twitter: "Urgh. Linking fails when building #nodejs 0.1.100 #help" -- P Envall. http://twitter.com/npup/status/18520566534
[13:50] maushu: wut
[13:52] _announcer: Twitter: "#nosql: node.js Gets its Own Key-Value Store: nStore. http://php-app-engine.com/2010/nosql/node-js-gets-its-own-key-value-store-nstore/" -- php-app-engine. http://twitter.com/phpae/status/18520704224
[13:56] npup has joined the channel
[13:56] npup: oh hai! ;-)
[13:57] npup: i'm having problems building version 0.1.100, and need some help
[13:57] jetienne_: hi p envall
[13:57] npup: it fails on linking stage it seeems
[13:57] npup: hi
[13:58] maushu: Hey.
[13:58] maushu: Saw your tweet.
[13:58] npup: aha :)
[13:58] jetienne_: npup: give info
[13:58] maushu: What is the error?
[13:58] npup: make chugs along for a long while
[13:58] npup: then it says
[13:58] npup: ld: symbol(s) not found
[13:58] npup: collect2: ld returned 1 exit status
[13:58] npup: Waf: Leaving directory `/Users/Petter/js/node_js/git_0_1_100/node/build'
[13:58] npup: Build failed:  -> task failed (err #1): 
[13:58] npup: 	{task: cxx_link node_4.o,node_buffer_4.o,node_http_parser_4.o,node_net_4.o,node_io_watcher_4.o,node_child_process_4.o,node_constants_4.o,node_cares_4.o,node_events_4.o,node_file_4.o,node_signal_watcher_4.o,node_stat_watcher_4.o,node_stdio_4.o,node_timer_4.o,node_script_4.o,platform_darwin_4.o,node_crypto_4.o,eio_1.o,http_parser_2.o,ev_1.o,ares_strcasecmp_1.o,ares_free_string_1.o,ares_options_1.o,ares_send_1.o,ares_parse_txt_r
[13:58] npup: ly_1.o,ares_parse_ptr_reply_1.o,ares_nowarn_1.o,ares_search_1.o,ares_gethostbyname_1.o,ares_getsock_1.o,ares__timeval_1.o,inet_ntop_1.o,ares_parse_a_reply_1.o,ares_getopt_1.o,ares__close_sockets_1.o,ares_expand_string_1.o,ares_destroy_1.o,ares_cancel_1.o,ares_parse_aaaa_reply_1.o,ares_parse_ns_reply_1.o,ares_version_1.o,ares__get_hostent_1.o,ares_writev_1.o,ares_expand_name_1.o,ares_free_hostent_1.o,ares_parse_mx_reply_1.o,are
[13:58] npup: gethostbyaddr_1.o,ares_query_1.o,ares_data_1.o,ares_init_1.o,ares_fds_1.o,inet_net_pton_1.o,ares_strerror_1.o,bitncmp_1.o,ares_getnameinfo_1.o,ares_library_init_1.o,ares_mkquery_1.o,ares_process_1.o,windows_port_1.o,ares_parse_srv_reply_1.o,ares_llist_1.o,ares_timeout_1.o,ares__read_line_1.o,ares_strdup_1.o -> node}
[13:58] npup: make: *** [all] Error 1
[13:58] npup: the latest version of node i could build was 0.1.30
[13:59] npup: and things move so fast that it feels really old
[13:59] jetienne_: npup: which os are you running
[13:59] npup: osX
[13:59] davidwalsh has joined the channel
[13:59] npup: 10.6.4
[14:00] jetienne_: npup: hmm so this is a local conf issue, many people here uses osx without trouble
[14:00] jetienne_: npup: i dont tho
[14:00] npup: i suppose
[14:00] npup: mm
[14:00] TrisMcC has joined the channel
[14:00] npup: i cant dechipher the message properly to find out what is wrong on my box 
[14:00] npup: dang
[14:01] jetienne_: i went in http_parser.c today, this is enougth :)
[14:01] maushu: What happens right before ld: symbol(s) not found ?
[14:01] hpoydar has joined the channel
[14:01] jetienne_: npup: pastebin the compile log
[14:01] maushu: Or do that. ^
[14:01] npup: ahhh "undefined symbols"!
[14:02] npup: and 3 warnings about architeture mismatch
[14:02] npup: ld: warning: in /opt/local/lib/libssl.dylib, file is not of required architecture
[14:02] npup: ld: warning: in /opt/local/lib/libcrypto.dylib, file is not of required architecture
[14:02] npup: ld: warning: in /opt/local/lib/libz.dylib, file is not of required architecture
[14:02] npup: Undefined symbols:
[14:02] npup:   "_OpenSSL_add_all_digests", referenced from:
[14:02] npup:       node::InitCrypto(v8::Handle<v8::Object>)         in node_crypto_4.o
[14:02] npup:   "_SSLv3_client_method", referenced from:
[14:02] jetienne_: npup: pastebin!!!
[14:02] npup: hehe
[14:02] npup: *agrees*
[14:02] maushu: openssl problems?
[14:03] npup: i just did git clone and tried to build it
[14:03] jetienne_: like install it :)
[14:03] maushu: ...
[14:03] maushu: ACTION facepalms.
[14:04] maushu: When you said "building #nodejs 0.1.100" I thought you meant the tar.
[14:05] jetienne_: [16:02] <npup> ld: warning: in /opt/local/lib/libssl.dylib, file is not of required architecture <- big hint
[14:05] jetienne_: it doesnt say "not installed" 
[14:05] npup: jepp
[14:06] jetienne_: and notice libz, is the same error
[14:06] maushu: Wrong openssl installation?
[14:06] jetienne_: file /opt/local/lib/libcrypto.dylib <- do that in a terminal
[14:06] npup: I was under the impression i could follow the simple steps and just "make" it, since "There are no other dependencies"
[14:07] npup: it says /opt/local/lib/libcrypto.dylib: Mach-O dynamically linked shared library i386
[14:07] jetienne_: npup: now you find a osx personn to tell you if it is n ormal answer
[14:08] npup: nice, thanks a lot!
[14:09] npup: some macports stuff i think
[14:10] maushu: npup: Actually, it's kind of silly. It *doesn't* have other dependencies.
[14:10] maushu: The problem is that you have some libs installed that node.js *can* use, and so decides to use them. "Why not?" says node.js
[14:11] maushu: Then the libs have some problem and node.js breaks. :3
[14:11] npup: yeah.. maybe i can just try to comment that out then
[14:11] npup: macports is a beast
[14:11] npup: it has ruined both perl and postgres installations for me in the past
[14:12] maushu: Technically it should be possible to turn off the libs usage in the command line.
[14:14] maushu: Never used it.
[14:14] qschzt has joined the channel
[14:15] qschzt: is there some 'advanced' logging framework yet? apart from >>log 2>&1 :)
[14:17] qschzt: say, various log levels, filters, maybe logging to a scribe server .. etc
[14:18] maushu: Wut.
[14:18] satori: qschzt: check here http://wiki.github.com/ry/node/modules
[14:18] maushu: Are you saying >>log 2>&1 is not good enough?! SHAME ON YOU.
[14:19] zaach has joined the channel
[14:19] qschzt: satori, ah of course. thanks. couple worth checking out :) 
[14:19] micheil: ryah: some interesting discussion in that illuminati meeting video.
[14:20] gwoo has joined the channel
[14:20] khug has joined the channel
[14:22] bradleymeck_ has joined the channel
[14:23] Rik`: is there a way to install node in a different directory ? make install needs root access otherwise
[14:25] Rik`: ok, --destdir 
[14:25] blackdog_: probably ./configure --prefix=destdir but i haven't tried it
[14:28] sh1mmer has joined the channel
[14:31] proppy: --prefix ?
[14:31] proppy: Rik`: but you can run node without installing it
[14:32] Rik`: yeah but I need to use node-waf
[14:32] proppy: ./bin/node-waf
[14:32] sudoer has joined the channel
[14:32] _announcer: Twitter: "@elliottkember dawg make node.js in your node.js" -- Ryan McGrath. http://twitter.com/ryanmcgrath/status/18523534227
[14:32] Rik`: I had an error about a Scripting python module
[14:35] _announcer: Twitter: "#nodejs 0.1.100 #happy #happy #joy #joy, thanks jetienne_ and maushu on #node.js irc" -- P Envall. http://twitter.com/npup/status/18523772808
[14:36] npup: great!
[14:36] jetienne_: npup: what was the issue
[14:36] npup: i could bypass the ssl stuff with a flag to configure
[14:37] npup: sweet
[14:37] npup: ./configure --without-ssl
[14:37] maushu: Yeah, thats the one.
[14:38] maushu: Idea for module: node-dawg - node.js implemented in node.js.
[14:38] npup: next time i have a problem, i will just try to throw in a flag with a name that says what i want
[14:38] npup: maybe it will work, like ity would have this time
[14:41] maushu: That's... a interesting way to solve something.
[14:43] sh1mmer has joined the channel
[14:43] ajpiano has joined the channel
[14:45] hammerdr has joined the channel
[14:45] locks has joined the channel
[14:45] botanicu_ has joined the channel
[14:45] pgriess has joined the channel
[14:45] hammerdr: I'm looking to do a rail-esque web application. What would be the best Node.js framework for that? Fab?
[14:48] figital has joined the channel
[14:48] _figital has joined the channel
[14:49] javajunky: hammerdr: geddy is the closet to rails I Guess, express is closest to sinatra 
[14:51] jesusabdullah: I've never used a framework. I feel kinda silly! :S
[14:51] jesusabdullah: But I've never really done web site stuff past, like, my blog
[14:53] mies has joined the channel
[14:54] _announcer: Twitter: "How many times can I not install the port in nodejs, xcode version went smoothly give him." [ja] -- snj14. http://twitter.com/snj14/status/18525084097
[14:54] botanicus has joined the channel
[14:58] Yuffster has joined the channel
[15:05] sh1mmer has joined the channel
[15:06] WALoeIII has joined the channel
[15:08] Rik`: orlandov: I have troubles installing node-sqlite, can you help ?
[15:13] gb|str has joined the channel
[15:14] mikekelly has joined the channel
[15:14] gb|str: what are people use for deployment for node.js? would good old capistrano work or there are other packages?
[15:15] blowery: rcp
[15:15] zomgbie has joined the channel
[15:15] blowery: i kis
[15:15] blowery: kid even
[15:16] blowery: it's just text files, so just about anything should work
[15:16] aliem_ has joined the channel
[15:16] gb|str: right, but it wouldn't hurt to have release versioning
[15:16] zapnap has joined the channel
[15:16] gb|str: also, i have read something about hotload 
[15:18] botanicus has joined the channel
[15:22] nefD has joined the channel
[15:22] jashkenas_ has joined the channel
[15:22] jashkenas_ has left the channel
[15:22] hammerdr has joined the channel
[15:23] steadicat has joined the channel
[15:25] TrisMcC has joined the channel
[15:26] sh1m has joined the channel
[15:27] tjholowaychuk has joined the channel
[15:30] bradleymeck_: w/ websocket-server how are you supposed to add a rejection listener? onrejected doesnt seem work
[15:31] sh1mmer has joined the channel
[15:33] mape: bradleymeck_: better off asking micheil if you think you've found a bug
[15:33] kriszyp has joined the channel
[15:33] micheil: hmm?
[15:34] dmcquay has joined the channel
[15:37] meder_ has joined the channel
[15:37] bpot has joined the channel
[15:38] amerine has joined the channel
[15:38] c4milo: hi
[15:39] c4milo: I have a question 
[15:40] c4milo: forget it :S  
[15:40] c4milo: sorry 
[15:40] c4milo: I found the answer myself :S 
[15:41] locks: that's the best kind of question ;P
[15:42] benburkert has joined the channel
[15:42] pgriess has joined the channel
[15:43] pavan_ has joined the channel
[15:43] mtodd has joined the channel
[15:44] bradleymeck_: micheal, how do you add a reject listener, onreject wont fire if the server isnt listening on that port?
[15:48] _announcer: Twitter: "interested in node.js because you've heard it's awesome, but you're a bit "huh wtf?" watch this http://bit.ly/9lIh9M" -- Josh Russell. http://twitter.com/joshr/status/18528938336
[15:48] bradleymeck_: micheil*
[15:49] micheil: huh?
[15:49] bradleymeck_: node-websocket-server, how do you add a reject listener, onreject wont fire if the server isnt listening on that port?
[15:49] mindeavor has joined the channel
[15:53] sh1mmer has joined the channel
[15:54] gb|str has joined the channel
[15:56] _announcer: Twitter: "@billreiss Then there's @mattpodwysocki. And the developers of CouchDB, and of Node.js..." -- Will Green. http://twitter.com/hotgazpacho/status/18529530094
[15:57] _announcer: Twitter: "@elliottkember I had an idea to create a node.js app that came up with random node.js app ideas. Still working on the algo." -- Derek Reynolds. http://twitter.com/whatupderek/status/18529575730
[15:58] khug has joined the channel
[16:03] tjholowaychuk: love when shit that worked yesterday is broken today GarRARrr
[16:03] _announcer: Twitter: "@billreiss It will good if you take a look at some stuff going on like node.js, Jquery, and oh yeah, pretty much all NoSql db's out there?" -- Hernan Garcia. http://twitter.com/theprogrammer/status/18529985262
[16:08] mitkok has joined the channel
[16:08] bradleymeck_: yes, those are good times
[16:08] cloudhead has joined the channel
[16:10] gb|str has joined the channel
[16:12] javajunky: tjholowaychuk: I love it when its not *my* shit ;)
[16:13] tjholowaychuk: javajunky: :D
[16:17] bpot has joined the channel
[16:17] markwubben has joined the channel
[16:19] brianmario has joined the channel
[16:20] aconbere has joined the channel
[16:21] aubergine has joined the channel
[16:25] jblanche has joined the channel
[16:29] WALoeIII has joined the channel
[16:31] benburkert has joined the channel
[16:31] jakehow has joined the channel
[16:36] charlenopires has joined the channel
[16:39] tjholowaychuk has joined the channel
[16:39] _announcer: Twitter: "Ooh! Stress testing a node.js server. Fun fun!" -- Ómar Kjartan Yasin. http://twitter.com/omarkj/status/18532489691
[16:43] Astro: why is information on twitter always so sparse?
[16:43] Astro: oh wait...
[16:43] maushu: IT'S BELOW 140 CHARAAAAAAAAACTERS!
[16:44] gb|work has joined the channel
[16:45] _announcer: Twitter: "Compiling node.js http://nodejs.org/ and then to Hamler and sass kiwi ^ ^" [es] -- Carlos Elías. http://twitter.com/carloselias/status/18532894861
[16:46] derferman has joined the channel
[16:46] tjholowaychuk: maybe im doing something wrong but say for a multipart request, why cant you immediately respond and then do whatever you want with the request body after the fact
[16:47] benbinary has joined the channel
[16:48] ryah: tjholowaychuk: you should be able to
[16:48] ryah: tjholowaychuk: maybe the web browsers dont like it if you respond before the request is complete though...
[16:48] jesusabdullah: Does anyone know where I can find a good example of the use of event emmiters?
[16:48] tjholowaychuk: ryah: ya I was not sure if that was maybe the case
[16:49] jesusabdullah: I read the nodejs docs, but I'm feeling pretty thick this morning
[16:49] tjholowaychuk: ryah: ill try with a different client
[16:50] gb|work: tjholowaychuk: back online, and trying to figure out why my config wouldn't get read when i put it in process.connectEnv. i have 2 separate config files that i load depending on the env, but for some reason my port, an host wouldn't apply. any ideas? i can paste code if needed
[16:50] _announcer: Twitter: "@capotej yea I'm using an iPhone to report the location updates. node.js w/ socket.io to handle everything else." -- ben bloch. http://twitter.com/benbinary/status/18533251245
[16:50] mape: "This sample uses CSS transforms and transitions, meaning that it requires a Firefox 4 preview build." 
[16:50] towski has joined the channel
[16:50] mape: >_<
[16:51] tjholowaychuk: gb|work: lets see the code, maybe you are going about it a different way than we usually do
[16:52] benbinary: ha, there goes my tweet... apparently
[16:54] creationix has joined the channel
[16:54] gb|work: tjholowaychuk: https://gist.github.com/eaad9f228b159a198469
[16:55] gb|work: <tjholowaychuk: couple of things, #1, none of my config would get applied even though i have it available when i try to console.log it, and listen on specified port wouldn't work int he module.exprts = connect.createServer block
[16:55] gb|work: is anybody using hotload for deployment? or what are the options
[16:55] _announcer: Twitter: "New blog post: Multi-node: Concurrent NodeJS HTTP Server http://www.sitepen.com/blog/2010/07/14/multi-node-concurrent-nodejs-http-server/" -- sitepen. http://twitter.com/sitepen/status/18533603315
[16:57] tjholowaychuk: ryah: ya seems totally dependant on the client, a simple curl post of a 700mb avi does not even emit any request data events if you end() right away
[16:57] tjholowaychuk: gb|work: ill check it out
[16:58] _announcer: Twitter: "Multi-node: http://bit.ly/d2W7qm Blog post on running multiple nodejs processes for HTTP serving." -- kriszyp. http://twitter.com/kriszyp/status/18533742555
[16:58] gb|work: tjholowaychuk: thx
[16:59] admc_ has joined the channel
[16:59] admc has joined the channel
[17:00] _announcer: Twitter: "Here&#39;s a look at reverseproxy node.js. I write fairly simple http://gist.github.com/475674" [ja] -- FUJIWARA Shunichiro. http://twitter.com/fujiwara/status/18533905171
[17:02] isaacs has joined the channel
[17:02] creationix: I love how much faster node compiles now
[17:02] mape: the multi core stuff?
[17:02] creationix: mape: yep
[17:03] creationix: isaacs: does the latest node patch mean that prefix is no longer hard-coded?
[17:03] creationix: ACTION is recompiling to find out
[17:04] tjholowaychuk: gb|work: hmm looks fine to me at a glance, the "custom-config" example might be a bit of help
[17:04] tjholowaychuk: but seems like that is what you are doing pretty much
[17:06] tjholowaychuk: db|work: is development.rb something you are loading in? should you JSON.parse().app it ?
[17:06] tjholowaychuk: not sure what that is there for
[17:06] tjholowaychuk: gb|work: Connect has no "app" key for the env, looks like that is what is going wrong
[17:07] gb|work: <tjholowaychuk>: hm... ok, i'll try to tweak it
[17:08] pavan_ has joined the channel
[17:09] aconbere: hmpf
[17:09] mattly has joined the channel
[17:12] aconbere: hmmm I haven't updated npm in a long time and I've got some things I wanted to do
[17:12] aconbere: npm install npm (failed because it requires node 01.99)
[17:13] aconbere: hmmm
[17:13] aconbere: okay never mind
[17:13] aconbere: I thought I checked out v0.1.99
[17:13] aconbere: but 0.1.100 is installed
[17:13] aconbere: maybe that's the issue
[17:14] amuck has joined the channel
[17:16] ryah: pquerna: you should have the first line of your commits be only 50 columns long
[17:16] ryah: pquerna: See "man git-commit" DISCUSSION section.
[17:17] mape: pquerna: saw my response in the mail thread?
[17:17] DTrejo__ has joined the channel
[17:17] DTrejo__: hello
[17:18] mape: took around 3h to run the test
[17:19] ryah: we're doing something really stupid 
[17:20] ryah: wrt thread pool stuff
[17:20] ryah: should be able to get a big win relatively easily
[17:20] gb|work: kriszyp: hi there, we just installed your multi-node, and it's very impressive. the only thing is now that we have an app using it, ctrl-c wouldn't kill the process. ideas?
[17:21] mape: or rather 3.8h
[17:21] aliem has joined the channel
[17:21] sveisvei: killemall
[17:22] kriszyp: gb|work: this is what I do:
[17:22] kriszyp: 		var stdin = process.openStdin();
[17:22] kriszyp: 		stdin.addListener("close", process.exit);
[17:22] kriszyp: I am not sure why ctrl-c behaves differently when there are multiple processes though...
[17:22] tjholowaychuk: gb|work if your using connect you can also just $ connect -n 4
[17:22] tjholowaychuk: easier IMO and abstracts it out of your app's code
[17:23] gb|work: kriszyp: from within the app?
[17:23] kriszyp: but then you'd be stuck with connect
[17:23] _announcer: Twitter: "NodeJS goes multicore with multi-node http://bit.ly/b1oDSz. I wonder what throughput it can yield on the new EC2 Cluster Compute instance!" -- chanezon. http://twitter.com/chanezon/status/18535447722
[17:23] kriszyp: gb|work: yes
[17:23] gb|work: lol ;0
[17:23] tjholowaychuk: your not stuck with connect at all
[17:24] tjholowaychuk: it can run any server
[17:24] kriszyp: you can use the script on its own?
[17:24] tjholowaychuk: yea
[17:24] pgriess: creationix: rfc http://github.com/pgriess/node-netstring
[17:24] creationix: kriszyp: yep!
[17:24] tjholowaychuk: its not tied to a connect server 
[17:24] pgriess: creationix: more fun than actual work
[17:24] _announcer: Twitter: "Just had another idea for a cool little #node.js module.  This is why none of them ever get very far." -- Marco Rogers. http://twitter.com/polotek/status/18535494962
[17:24] creationix: pgriess: nice
[17:24] kriszyp: cuz the "connect" part makes it look like it is part of connect ;)
[17:24] creationix: kriszyp: yeah, I'm thinking about breaking out the runner into it's own project
[17:24] tjholowaychuk: unfortunately yea lol if people dont read any docs :(
[17:24] V1 has joined the channel
[17:25] tjholowaychuk: i think the connect name works well for it but ya people get confused
[17:25] creationix: kriszyp: the only requirement is that you export an instance of http.Server
[17:25] pgriess: creationix: writing to/from a buffer doesn't work (yet) but everything else does
[17:25] tjholowaychuk: maybe we should just rename it creationix, but keep it in
[17:25] pgriess: creationix: not sure if you're still considering using netstrings, but if you are, let me know how this works for you
[17:26] creationix: pgriess: sure thing, I've got other work today, but I'll look at it when I get back on binary stuff
[17:26] x_or has joined the channel
[17:27] liucougar has joined the channel
[17:30] mattly has joined the channel
[17:30] felixge has joined the channel
[17:30] felixge has joined the channel
[17:31] mape: http://lists.openid.net/pipermail/openid-security/2010-July/001156.html
[17:31] mape: hmm
[17:31] _announcer: Twitter: "Concurrent NodeJS Server: http://is.gd/drTtd Cool! Add a rails-like framework & server-side JS might start to really matter." -- AndroidDev. http://twitter.com/AndroidDev/status/18535979332
[17:33] jc00ke has joined the channel
[17:34] gb|work: <kriszyp>: do we want to add a close listener to child processes or master process?
[17:34] _announcer: Twitter: "Concurrent NodeJS server: http://is.gd/drTtd Cool! Add a Rails-like framework & server-side JS could become a big deal." -- Tim Bray. http://twitter.com/timbray/status/18536116673
[17:34] kriszyp: just the master gb|work 
[17:35] gb|work: <kriszyp>: so do we have to add it to multi-node.js? or our app?
[17:35] gb|work: i'd assume the app?
[17:35] kriszyp: you can do it in your app
[17:35] gb|work: outside of createServer block right?
[17:36] kriszyp: var nodes = multiNode.listen(...); if(nodes.isMaster){ process.openStdin().addListener(...
[17:36] kriszyp: right, outside of createServer
[17:37] kriszyp: I could add that to multi-node. I was originally under the impression a change in node had caused ctrl-c to stop working, but I'll look into it further
[17:38] rolfb has joined the channel
[17:38] V1: What would be wiser, closing a net connection after the data has been send, and re-open it again when it's needed again. Or just keep it "open" so you can communicate instantly again.
[17:38] khug has joined the channel
[17:38] dgathright_ has joined the channel
[17:39] _announcer: Twitter: "@timbray unclear about the relationship between node.js & websocket.  Is there one?" -- John Minnihan. http://twitter.com/jbminn/status/18536427803
[17:40] tjholowaychuk has joined the channel
[17:40] _announcer: Twitter: "@timbray We've been using node.js very succesfully for some high concurrency, high volume, low latency back end sevices. It's wicked cool." -- dierken. http://twitter.com/dierken/status/18536537394
[17:43] _announcer: Twitter: "NodeJs + Haml + Sass = Belleza" -- Alvaro Véliz Marin. http://twitter.com/alvaroveliz/status/18536720333
[17:43] jstewart has left the channel
[17:45] gb|work: kriszyp: we added process.addListener('SIGINT', function() {
[17:45] gb|work:           process.exit();
[17:45] gb|work:         }) to the bottom of multi-node, and it worked
[17:45] gb|work: in the isMaster branch
[17:45] gb|work: do you want to commit it into multi-node?
[17:45] gb|work: or should we fork it
[17:46] kriszyp: gb|work: that's a good enough patch for me :)
[17:47] spot|3 has joined the channel
[17:47] _announcer: Twitter: ". @ryah Node.js has come a long way, @timebray just tweeted about it! http://twitter.com/timbray/status/18536116673" -- Matthew Taylor. http://twitter.com/rhyolight/status/18536967214
[17:48] gb|work: kriszyp: i like u :)
[17:48] gb|work: kriszyp: eta on commit?
[17:50] _announcer: Twitter: "Check out @jsuchy talk on Node.js http://bit.ly/cu4myc" -- Paul Pagel. http://twitter.com/paulwpagel/status/18537158806
[17:51] _announcer: Twitter: "Concurrent connections in node.js with processor level load balancing.  Good stuff — http://j.mp/a7klfk" -- Shad Reynolds. http://twitter.com/shadr/status/18537175189
[17:52] pgriess has joined the channel
[17:52] creationix: tjholowaychuk: did you see this one? http://github.com/creationix/node/commit/a299765f1ab37c8d9e36174a78756e9f13465522
[17:53] creationix: makes building a node distro much easier
[17:54] tjholowaychuk: cool cool
[17:54] kriszyp: gb|work: committed a fix
[17:54] gb|work: thx, pulling it
[17:57] maushu has joined the channel
[17:58] softdrink has joined the channel
[17:58] dgathright_ has joined the channel
[17:59] CIA-76: node: 03Paul Querna 07master * r870aa3d 10/ (4 files): Move evals to extension module. (+12 more commits...) - http://bit.ly/9J2Zsh
[18:01] _announcer: Twitter: "@AndroidDev there's Express, sinatra-like framework for node-js http://expressjs.com/" -- Luis Abreu. http://twitter.com/lmjabreu/status/18537845095
[18:04] creationix: ryah: I thought isaacs had beat me to it, but after I pulled I couldn't see it.
[18:04] creationix: either way, I'm glad it's in there
[18:04] creationix: ACTION is building a distro right now...
[18:05] mertimor has joined the channel
[18:05] khug1 has joined the channel
[18:11] _announcer: Twitter: "@pjb3 ah. Right you are. I've got a name and a logo idea for a node.js ORM that someone can have: "Norm", mug o' sudsy beer" -- Casey Forbes. http://twitter.com/caseyf/status/18538417952
[18:11] robotarmy has joined the channel
[18:13] ryah: creationix: excellent 
[18:14] creationix: ryah: I decided to keep it simple and do it the way I wanted, if others like it, then fine
[18:14] creationix: I think that's a good way to start
[18:16] mape: creationix: yay, json view for chrome
[18:16] tjholowaychuk: creationix: let me know when your done ill try it out
[18:16] ryah: simple is good
[18:17] creationix: tjholowaychuk: sure thing
[18:17] creationix: ryah: agreed, I'm ALWAYS for simple
[18:17] creationix: unless it's just wrong
[18:19] khug has joined the channel
[18:20] bradleymeck_: creationix i managed to recreate the tmpdb error at home last night but it seemed kinda random
[18:22] _announcer: Twitter: "Two #nodejs bindings I would like to see: LLVM and re2 (http://code.google.com/p/re2/)" -- Zach Carter. http://twitter.com/zii/status/18539110979
[18:22] javajunky has joined the channel
[18:22] creationix: bradleymeck_: any idea what causes it?
[18:22] _announcer: Twitter: "Join Greylock and your engineer peers to hear Joyent's Ryan Dahl talk abt Node.JS on 7/15 at 6pm in SF - free pizza! - http://bit.ly/bTj5Ww" -- Greylock Partners. http://twitter.com/GreylockVC/status/18539145479
[18:22] creationix: I'm sure it's some nasty race condition
[18:23] bradleymeck_: i cant track down the race condition
[18:23] creationix: tjholowaychuk: http://github.com/creationix/ivy Not finished, but that's the general idea
[18:23] bradleymeck_: but yea, think it is a race :/
[18:23] creationix: bradleymeck_: what are you doing when it dies?
[18:23] bradleymeck_: db.save()
[18:23] bradleymeck_: w/ args
[18:24] bradleymeck_: open never fails, get doesnt seem to fail (though i dont use get as much as save)
[18:25] aliem_ has joined the channel
[18:25] creationix: bradleymeck_: I'm sure it's a bug in the compaction code
[18:26] creationix: which is only triggered on save/remove
[18:26] _announcer: Twitter: "The #nodejs talk I was going to give tomorrow at Digg has been postponed." -- Ryan Dahl. http://twitter.com/ryah/status/18539347157
[18:26] programble has joined the channel
[18:26] creationix: bradleymeck_: you can disable online compaction if you just need it to work for now, but it will bloat the file if you do a lot of updates or deletes
[18:26] bradleymeck_: ah, using an in memory emulation layer until that stops doing it every so often. I do a fair amount of updates
[18:27] bradleymeck_: !tweet @ryah :O but its still going on right?
[18:27] creationix: bradleymeck_: feel free to go over the compaction code, it's pretty simple, maybe you can see something not safe
[18:27] creationix: bradleymeck_: yes, next Wed
[18:27] CIA-76: node: 03Ryan Dahl 07master * r8e2530c 10/ (81 files in 9 dirs): Upgrade V8 to 2.2.24 - http://bit.ly/bxWTvC
[18:27] ryah: ^-- Object.freeze
[18:27] bradleymeck_: cools
[18:27] chewbranca has joined the channel
[18:28] zaach: nice
[18:28] creationix: and stack traces
[18:28] bradleymeck_: anyone have a clue how to preserve the Object.defineProperty's property descriptor from a setter?
[18:28] creationix: ryah: dang and I just pushed the binaries for my node distro :P
[18:29] ryah: bradleymeck_: http://www.facebook.com/event.php?eid=106330769408119&ref=mf
[18:29] grahamalot has joined the channel
[18:30] creationix: I love how EVERY V8 changelog says "Performance improvements on all platforms."
[18:30] mjr_: Wow, Object.freeze?  The Crockfordiand JavaScript future is nearly upon us.
[18:30] mape: any numbers?
[18:31] creationix: mjr_: yeah, and Object.isExtensible and Object.preventExtensions landed back in 2.2.22
[18:31] _announcer: Twitter: "# Nosql news: http://nosql.mypopescu.com/ # couchdb # nodejs" [pl] -- Vincent RABAH. http://twitter.com/itwars/status/18539657604
[18:32] creationix: someone needs to update the wiki about es5 stuff, but maybe wait till it's in a released version of node
[18:32] bradleymeck_: creationix its not too hard since they are working w/ an assembler jit
[18:33] javajunky has joined the channel
[18:33] ryah: mape: http://build.chromium.org/buildbot/perf/xp-release-v8-latest/v8_benchmark/report.html?history=150&rev=-1
[18:33] bradleymeck_: but no idea on how to get a hold of that property descriptor?
[18:33] mape: ryah: ah thanks
[18:33] mertimor has joined the channel
[18:34] _announcer: Twitter: "@androiddev @kultar @dshaw @lmjabreu @timbray Re. Rails-like framework for Node.js -- we're working on that: http://geddyjs.org/" -- Matthew Eernisse. http://twitter.com/mde/status/18539826563
[18:34] mape: any way to get the graph to show version rather then revision?
[18:34] bradleymeck_: like the mass @'s mde
[18:34] ryah: mape: i'm sure v8 has it's own intenral build bot for that - this is just chrome
[18:35] mape: oh
[18:35] dnyy: is the code for _announcer somewhere?
[18:35] _announcer: Twitter: "@ryah I'm giving a little #nodejs talk toinght at @atlrug! :) demoing Node.js app w/ TwitterStream and WebSockets http://is.gd/drZ0T" -- Matt Todd. http://twitter.com/mtodd/status/18539924259
[18:35] _announcer: Twitter: "Out of at least 387 submissions about node.js, we picked @pilif (+ 2 more) Here is hoping for some real hardcore insights http://j.mp/94L6A0" -- jsconfeu. http://twitter.com/jsconfeu/status/18539934987
[18:36] mjr_: 387 submissions?  Wow.
[18:36] ryah: 387 submissions? wtf
[18:36] mape: hah
[18:37] mape: At least 87% of all talk submissions for this year's JSConf.eu were about Node.js. We picked Philip's:
[18:37] mjr_: How many jquery submissions did they get, 1e1235?
[18:37] jxson has joined the channel
[18:37] mikeal has joined the channel
[18:37] chandru_in has joined the channel
[18:38] bradleymeck_: dnyy yes, also if you just want to see what its using look at node-irc and tweetstream
[18:38] chandru_in: I tried using multipart-js to handle file uploads but I find that it runs out of memory in large binary files (>700+ MB)
[18:38] tjholowaychuk: whoop, judging rails rumble
[18:38] tjholowaychuk: chandru_in: check out node-formidable
[18:38] tjholowaychuk: its dope
[18:38] dnyy: bradleymeck_: ah, thanks, that's what i was wanting to know (node-irc specifically).
[18:39] mikeal: this is too awesome
[18:39] mikeal: http://www.couch.io/
[18:39] rauchg_ has joined the channel
[18:39] _announcer: Twitter: "RingoJS http://3qen.sl.pt is the best JavaScript web platform built on Rhino & Jetty. With a Java API it rivals NodeJS see http://3qem.sl.pt" -- Tom Flaherty. http://twitter.com/tomflah/status/18540179560
[18:40] mjr_: mikeal: you didn't make it onto the marquee.  Probably too much node-ing around.
[18:40] mikeal: haha
[18:40] mikeal: i'm not a committer
[18:40] voxpelli-laptop has joined the channel
[18:41] mikeal: i just write javascript patches and jchris commits them :)
[18:41] mscdex: The Crockford Files!
[18:42] jakehow has joined the channel
[18:42] mape: really nice design on couchio
[18:42] mjr_: Yeah, I really like their designer.
[18:42] tilgovi has joined the channel
[18:42] creationix: mape: can you test my ivy distro on your linux?
[18:43] mape: will it hurt?
[18:43] creationix: http://github.com/creationix/ivy
[18:43] mscdex: ivy sounds itchy
[18:43] creationix: mape: no, just clone it and run node-linux from the bin folder
[18:43] creationix: it should "just work"
[18:43] mikeal: mjr_: i think she's available for contact
[18:43] mikeal: she's in the co-working space with jan in Berlin
[18:44] mjr_: nice
[18:44] mape: creationix: mape@dunderklumpen:~/tmp/ivy/bin$ ./node-linux -v
[18:44] mape: v0.1.100
[18:44] mjr_: I'm still battling internally over the importance of aesthetics.
[18:44] mape: seems to work fine
[18:44] creationix: mape: ok, try running the repl and require something like "connect"
[18:44] creationix: that should "just work" too
[18:44] derferman has joined the channel
[18:45] mape: creationix: http://gist.github.com/475841
[18:45] _announcer: Twitter: "A must read post on Concurrent NodeJS HTTP Serving capabilities http://bit.ly/bZRYy1" -- chetan conikee. http://twitter.com/conikeec/status/18540509777
[18:45] creationix: mape: awsome, thanks!
[18:45] mape: np
[18:46] creationix: mape: and youre ubuntu 64 bit?
[18:46] mape: debian amd64
[18:46] chandru_in: thanks tjholowaychuk that helped
[18:46] tjholowaychuk: np
[18:46] creationix: sweet, now does anyone have osx 10.5 to test on
[18:46] creationix: ?
[18:48] creationix: Astro: http://github.com/extjs/Connect/commits/master/ :D
[18:48] admc_ has joined the channel
[18:48] admc has joined the channel
[18:48] _announcer: Twitter: "Finally compiled nodejs. Windows isn't a friendly environment for this type of thing." -- Stephen Perelson. http://twitter.com/perelson/status/18540673533
[18:50] tjholowaychuk: yay and he writes tests lol
[18:51] bradleymeck_ has joined the channel
[18:51] creationix: tjholowaychuk: I wrote tests for nStore ;)
[18:51] tjholowaychuk: :D
[18:51] tjholowaychuk: i noticed he named the middleware gzip-proc etc should we change them to gzipProc / gzipCompress
[18:51] tjholowaychuk: ah nvm
[18:52] bradleymeck_: how many times is that ringojs article going to be fully rewritten?
[18:53] creationix: tjholowaychuk: yeah, Astro did some neat stuff
[18:53] tjholowaychuk: just missed the last bit there
[18:54] Validatorian: what do you guys recommend for a cxx compiler? (new setup)
[18:54] Validatorian: error: could not configure a cxx compiler!
[18:54] creationix: Validatorian: what OS?
[18:54] Validatorian: ubuntu server
[18:54] creationix: apt-get install build-essential
[18:54] Validatorian: ty
[18:55] Validatorian: I wonder if that could be put in the error message for ./configure -- for newbs like me
[18:55] creationix: Validatorian: you're welcome to test my beta node distro too
[18:55] creationix: it has a pre-compiled linux binary
[18:55] creationix: http://github.com/creationix/ivy
[18:55] _frankie1 has joined the channel
[18:56] Validatorian: what are the differences between ivy and node?
[18:56] _announcer: Twitter: "@brianbickell I'm also looking at #nodejs. That and #couchdb work really well together." -- JR Liwag. http://twitter.com/JR_Liwag/status/18541128722
[18:57] creationix: Validatorian: it's like the difference between the linux kernel and Ubuntu
[18:57] creationix: node a bare-bones and distributed as source code
[18:57] creationix: ivy uses node, pre-compiles it and bundles some useful stuff
[18:57] rtomayko has joined the channel
[18:58] voodootikigod_ has joined the channel
[18:58] creationix: Validatorian: it's a fresh compile of node HEAD from about 20 minutes ago with about 6 libs pre-installed
[18:59] Validatorian: will it stay up to date with node, and how easy it it to update when node updates?
[18:59] creationix: Validatorian: not sure yet, if you're setting up a production box, you can manage it yourself for now
[18:59] Validatorian: what's the -dev package for ssl again?
[18:59] mscdex: libssl-dev
[18:59] Validatorian: ty
[19:00] creationix: Validatorian: I do plan on keeping ivy up to date, but it's an experiment for now
[19:00] Validatorian: k
[19:00] Validatorian: I'm going to just use node for now -- but I'll keep my eye on your progress, sounds very interesting
[19:00] javajunky has joined the channel
[19:01] creationix: Validatorian: thanks, let me know if you have any suggestions
[19:01] caolanm has joined the channel
[19:01] Astro: creationix: awesome
[19:01] creationix: :)
[19:02] caolanm: quick Connect question: is there an easy way to server a static html file for 404's when no provider matches a request?
[19:02] caolanm: *serve
[19:03] creationix: caolanm: Not sure, tjholowaychuk would know
[19:03] caolanm: tjholowaychuk: ^ ;)
[19:03] creationix: I know you can write a custom error handler, but you'd have to load the static file and serve it by hand
[19:03] caolanm: yeah, that's the bit I'd rather not have to do ;)
[19:03] aconbere: any reason not to just let a static file server handle that?
[19:04] creationix: caolanm: If you have a suggestion, feel free to file a ticket on github
[19:04] aconbere: (like... nginx, apache, etc.)
[19:04] tjholowaychuk: caolanm: this is something im implementing right now for express so ill let you know the best way in  bit
[19:04] creationix: aconbere: I try to keep the modules doing only their thing
[19:04] caolanm: tjholowaychuk: great thanks
[19:04] creationix: tjholowaychuk: I think just a config somewhere that says to use this template for 404 and 500 messages
[19:04] caolanm: that would be sweet
[19:05] caolanm: perhaps as part of the error handler?
[19:05] tjholowaychuk: I dont think it should be in connect unless we have to
[19:05] tjholowaychuk:  but it might be a little awkward ill try it out
[19:05] creationix: the default built-in error handler does almost nothing, the ErrorHandler middleware might support templates
[19:06] tjholowaychuk: in express I have app.error(function(){}) that can do its own arbitrary thing
[19:06] tjholowaychuk: serve some static, jade template, ejs template etc
[19:07] Astro: creationix: btw, did you do any performance tests with the old gzip middleware? I suspect forking to be very expensive :)
[19:07] aubergine has joined the channel
[19:07] tjholowaychuk has left the channel
[19:07] creationix: Astro: it's expensive in node terms (about 4 ms)
[19:07] tjholowaychuk has joined the channel
[19:08] creationix: but especially when behind the cache layer, it's not usually a problem on a real app
[19:08] mklappstuhl has joined the channel
[19:08] tjholowaychuk: caolanm: connect is not really meant to be high level, so im not convinced this should be done in connect at all, but l gotta take lunch then i will have an answer after
[19:08] creationix: tjholowaychuk: speaking of, I need to weed out stuff that's too high level for connect
[19:09] caolanm: fair enough
[19:12] _announcer: Twitter: "Decisions, decisions... To build an app in Codeigniter, CakePHP, Rails, or maybe something else. Maybe Node.js and Mongo." -- Clinton Montague. http://twitter.com/iblamefish/status/18542062944
[19:13] khug has joined the channel
[19:15] bradleymeck_: wonder if we could make a ringojs compat layer
[19:15] TobiasFar has joined the channel
[19:16] _announcer: Twitter: "Great node.js server framework: http://github.com/extjs/Connect" -- brain.exe. http://twitter.com/brain_exe/status/18542301657
[19:17] mitkok has joined the channel
[19:18] V1: Are the writes to net.Stream sync or async? 
[19:18] bradleymeck_: not sure i understand the question v1
[19:19] bradleymeck_: they are os buffered, wait for drains if you want assurance it gets sent
[19:20] agnat has joined the channel
[19:22] phiggins has joined the channel
[19:22] bradleymeck_: i guess from an atomic operation standpoint they are atomic, so sync is most appropriate term?
[19:23] felixge has joined the channel
[19:23] felixge has joined the channel
[19:23] V1: Hmz, okay thanks.
[19:23] creationix: V1: they are non-blocking if that's what you mean
[19:23] creationix: writes on fs streams always return false (Meaning it's buffered)
[19:24] ryah: creationix: you should have the hello world app on Connect's readme
[19:24] chandru_in has left the channel
[19:24] beelzabub1: so calling apply on a builtin function appears to fail with illegal access - is that expected behaviour?
[19:24] creationix: ryah: good idea
[19:24] beelzabub1: err- illegal invocation
[19:25] creationix: ryah: http://gist.github.com/475897 this is fun 
[19:25] creationix: from a fresh clone + submodule init/update of ivy
[19:26] ryah: creationix: good
[19:26] bradleymeck_: beelzabub1 is it JSON.parse?
[19:26] V1: I was basically wonder what would happen if someone would call allot of writes() on the netStream after each other. If they would get queued up and executed when the other calls finishes or executed right away
[19:26] ryah: creationix: looks nice
[19:26] V1: But thanks for the answers it gives a good idea of what is happening
[19:26] beelzabub1: bradleymeck_ : what do you mean?
[19:26] beelzabub1: i'm calling .apply(null, arguments) on a built-in function
[19:26] bradleymeck_: v1 they get sent out as fast as the OS lets them, beelzabub1 what builtin function?
[19:26] creationix: ryah: I think my plan is that people will clone it per environment, and then change the submodules to use different versions of node and various modules
[19:26] dgathright__ has joined the channel
[19:27] beelzabub1: getting illegal invocation
[19:27] beelzabub1: my own
[19:27] ryah: creationix: is nvm somehow in there?
[19:27] ryah: creationix: would be nice to somehow be able to get latest updates easily
[19:27] creationix: ryah: nope, this bypasses nvm completely
[19:27] ryah: or switch between versions
[19:27] bradleymeck_: then its not builtin. you most likely are using it from a different context than it was declared in
[19:27] creationix: ryah: people wanting latest release versions will just git pull and submodule update
[19:27] beelzabub1: bradleymeck_ - can you clarify?
[19:28] beelzabub1: here's the snippet: http://pastebin.com/kPr7qqjw
[19:28] ryah: creationix: also would be nice if it was bundled with your favorite modules :)
[19:28] creationix: I plan on write some utility scripts that make it easy to compile from head
[19:28] creationix: ryah: it is ;)
[19:28] ryah: oh yeah, i see
[19:28] beelzabub1: test.apply is a regular JS function - it works
[19:28] beelzabub1: _internal.fork doesn't
[19:28] ryah: creationix: would be great to have the "3 step connect hello world setup"
[19:29] creationix: ryah: it's heavily git based, I'll have to find a way to make it just work with only curl or get
[19:29] creationix: *wget
[19:29] ryah: creationix: curl http://github.com/creationix/ivy/raw/master/update.sh | sh
[19:29] bradleymeck_: mmmm
[19:29] beelzabub1: i think i figured it out
[19:30] beelzabub1: i think you were right
[19:30] beelzabub1: needed to pass this._internal as the first arg - not null
[19:30] creationix: ryah: something like that
[19:31] bradleymeck_: if it uses "this" yea
[19:31] ryah: remember, for every extra command you make people do: you lose 50% of your users
[19:31] pquerna: so, expresso the test framework thing, its not going to be abadoned right :) ?
[19:31] creationix: ryah: exactely, I'm just trying to figure out it git/curl/wget and friends are good pre-reqs
[19:32] creationix: osx comes with curl, and most linuxes come with wget
[19:32] creationix: most developers have git, but not all
[19:32] ryah: i think you can assume people have git and curl
[19:32] saikat has joined the channel
[19:32] creationix: ryah: for now at least
[19:32] creationix: till we want a wider audience
[19:32] beelzabub1: careful - git doesn't really work on windows
[19:32] beelzabub1: :)
[19:32] creationix: beelzabub1: that's ok, I don't ship windows binaries
[19:33] bradleymeck_: nor does wget or curl :/
[19:33] creationix: I'm only supporting osx 64 bit and linux 32 bit for now
[19:33] creationix: since that's my environment ;)
[19:34] creationix: pquerna: all software gets abandoned eventually, but tjholowaychuk uses expresso for work related stuff
[19:34] creationix: so it's pretty safe for now
[19:34] pquerna: k
[19:34] ryah: creationix: once you get people hooked
[19:34] ryah: we can put trojan horses in
[19:35] creationix: ryah: :D
[19:35] creationix: I think that's google's plan
[19:35] ryah: for our nodejs bot net
[19:35] creationix: android os now has auto updates
[19:35] pquerna: no comment on nodejs botnet.
[19:35] pquerna: but its a good reason to support eval and rsa signatures.
[19:35] ryah: :)
[19:36] creationix: It's probably no more dangerous than rubygems
[19:36] creationix: but maybe I'm missing something
[19:36] pquerna: yes, rubygems, maven... sigh.
[19:36] ryah: when we have the compiled scripts into node exe it's going to be great for botnets
[19:37] creationix: ryah: with great power comes great....
[19:37] creationix: power
[19:37] creationix: isn't that how it goes?
[19:37] spuz has joined the channel
[19:37] creationix: anyway, back to making ivy useful for more than 5 people
[19:37] creationix: and releasing connect 1.0
[19:38] micheil: tjholowaychuk: I didn't end up adding in partials to Jade
[19:39] aliem has joined the channel
[19:39] spuz: Hello, I remember seeing a while ago (on HN I think) an example node.js webapp that was simply a big text box for writing messages. The page would just display whatever anyone typed into the box. Can anyone point me back to that app...?
[19:41] _announcer: Twitter: "@aaronheckmann Uh, something on the node.js mailing list (It wasn't me patching, but someone else)." -- Micheil Smith. http://twitter.com/miksago/status/18543712345
[19:42] creationix: ryah: added hello world to the README
[19:43] bradleymeck_: spuz i can send you something that does that, but its not the one you saw
[19:44] spuz: bradleymeck_: ok, that would be nice, I also wanted to know whether this one I saw was using websockets or not
[19:44] _announcer: Twitter: "it's just a test form node.js...bye!!!" -- oshimin. http://twitter.com/oshimin/status/18543891200
[19:44] bradleymeck_: if its doing live updates yes, otherwise its falling back to longpolling
[19:45] spuz: bradleymeck_:  well many people from HN were using it in many browsers so either longpoll or websocket + flash I imagine...
[19:45] s1_ has joined the channel
[19:45] spuz: The only other thing I remember it was made by a female blogger... :D
[19:46] gb|work has joined the channel
[19:46] creationix: how would I make a bash script that called node-osx and passed through all arguments on osx, but did the same thing for node-linux on linux
[19:47] creationix: any bash gurus here
[19:47] creationix: ?
[19:47] bradleymeck_: &$
[19:47] mostlygeek has joined the channel
[19:48] bradleymeck_: woops node-osx $@ my bad
[19:48] voodootikigod_ has joined the channel
[19:49] bernd_ has joined the channel
[19:49] mjr_: ryah: have you contracted with the russians yet on some viagra spam customers for your nodejs botnet?
[19:51] bradleymeck_: spuz http://github.com/bmeck/ConcurrentEditor, sorry for lack of docs
[19:53] bradleymeck_: we got a pipe from a stream to a buffer yet?
[19:54] tjholowaychuk: pquerna: why would expresso be abandoned?
[19:54] tjholowaychuk: caolanm: k back from lunch :D give me a bit
[19:54] caolanm: tjholowaychuk: cool, thanks
[19:56] jc00ke has left the channel
[19:57] pquerna: tjholowaychuk: it still references kiwi ~fear~
[19:57] tjholowaychuk: pquerna: as an optional way to install it
[19:57] tjholowaychuk: npm has it too
[19:57] pquerna: k :)
[19:57] bvleur has joined the channel
[19:57] tjholowaychuk: i use expresso all over the place :p
[19:57] creationix: bradleymeck: is there a __dirname for bash scripts?
[19:58] bradleymeck_: not cwd but target dir?
[19:58] creationix: bradleymeck: I want to know the directory of the current script I'm running
[19:58] pgriess: creationix: $(dirname $0)
[19:58] bradleymeck_: cwd = `pwd`
[19:59] aconbere has joined the channel
[19:59] pgriess: pwd will tell you the current diretory of the process, not the dir where the script itself lives
[19:59] creationix: hmm, or is this the same as the process.execPath problem in node?
[19:59] tjholowaychuk: creationix: $0 is the script
[19:59] pgriess: not suce which you want
[19:59] creationix: I want the script
[19:59] creationix: $0 will work for most cases I guess
[19:59] pgriess: $(dirname $0) is equiavlent to the dir name of process.execPath
[19:59] bradleymeck_: creationix basically, im sure you could figure out a way to do it w/ some expansion and 'which' but ewwwwww
[19:59] creationix: pgriess: is $0 reliable for all bash scripts
[20:00] spuz: bradleymeck_: Well it looks like I don't have the right modules for your server. I'm not sure I can run npm either as I'm on cygwin
[20:00] pgriess: creationix: yes
[20:00] creationix: and does it resolve symlinks
[20:00] pgriess: creationix: i don't believe so.
[20:00] _announcer: Twitter: "Node.js and MongoDB together just.. clicks." -- Ludwig Pettersson. http://twitter.com/luddep/status/18544811306
[20:00] zomgbie has joined the channel
[20:00] bernd_: Sorry in advance for being a lame noob...
[20:00] bernd_: One function in our node app has to query mongo multiple times before calling the callback.  We added listeners to the process object and emitted events, so that we would know when the various queries finished.  Of course we discovered that we needed to remove the listeners after they had executed, otherwise we would get new listeners for the same events every time we made a request.  It was easy enough to do this with 
[20:00] bernd_: process.removeAllListeners, but we're thinking if we do this, when there are multiple users, one user could remove another user's listener.
[20:00] bernd_: So here are the questions: 
[20:00] bernd_: Is the problem that we're listening on process instead of some other object? Or, how can we uniquely identify the listeners that we're adding so that we can remove the correct listener? 
[20:00] bernd_: Thanks for any help.  Sorry for the dumb question.  :(
[20:00] bradleymeck_: then install node-websocket-server and connect, those 2 ought to fix it
[20:01] creationix: pgriess: this may be harder than expected
[20:01] benbinary has joined the channel
[20:01] spuz: you mean this? http://github.com/miksago/node-websocket-server
[20:01] pgriess: creationix: why do you require a path w/ symlinks removed?
[20:01] creationix: I just want a node.sh script that either calles node-osx or node-linux depending on the platform and they are relative to the script
[20:01] creationix: but node.sh might not be in the path and people might symlink it into their path
[20:01] tjholowaychuk: creationix: ${0%/*} faster :)
[20:02] creationix: I guess I could readlink from bash right?
[20:02] bradleymeck_: bernd_ you should be using addListener on an object for almost everything
[20:03] pgriess: creationix: yeah you can use readlink. not sure i'd bother, but ... yeah
[20:03] tjholowaychuk: creationix: yup, thats what i did with kiwi to see which env was active
[20:03] bradleymeck_: on process it would theoretically work but would cause havoc
[20:04] jherdman has joined the channel
[20:04] bernd_: bradley - any suggestions on a better object to use?
[20:04] pgriess: creationix: pwd -P resolves symlinks
[20:05] adinardi has joined the channel
[20:05] creationix: yes, but I don't want the process's working directory
[20:05] pgriess: creationix: you could dir=$(cd $(dirname $0); pwd -P)
[20:05] pgriess: i think $()s can nest
[20:05] creationix: pgriess: might work
[20:06] pgriess: if not, you can use pushd/popd
[20:06] bradleymeck_: whatever eventemitter your mongodb lib supplies, if you are just using a child process id recommend you move to a lib
[20:06] creationix: $(dirname $(readlink $0)) seems to work
[20:06] creationix: though that only works if it's a symlink
[20:06] pgriess: yeah, that should work
[20:07] bernd_: cool.  thanks for the help.  :)
[20:07] pgriess: sorry, meant to say that my $(cd $(dirname $0); pwd -P) should work
[20:07] creationix: does bash have a || like JS?
[20:07] pgriess: that will work regardless of symlink-ness
[20:07] creationix: $(readlink $0) || $o
[20:07] pgriess: creationix: yeah, but only for exit status, not value
[20:07] pgriess: creationix: only works if $0 is a symlink itself. not if its directory hierarchy contains one
[20:07] pgriess: afaict mine works in all cases
[20:07] creationix: ok, I guess I'm ok with changing the working directory, as long as I change it back
[20:07] creationix: pgriess: good point
[20:08] pgriess: $() spawns a sub-shell, so using "cd" in there will mean you doin't need to remember to change back
[20:08] rgl has joined the channel
[20:08] creationix: pgriess: hmm, it's not resolving the symlink
[20:09] pgriess: are you using pwd -P or just pwd?
[20:09] creationix: root=$(cd $(dirname $0); pwd -P) 
[20:09] pgriess: hm
[20:09] pgriess: is it spitting an error or just not returning the result you expect?
[20:09] creationix: it gives the directory of the symlink
[20:09] pgriess: you can run your script with "bash -x" to see debugging
[20:09] creationix: not the actual file
[20:09] creationix: wow, that's cool
[20:09] eyzn: bradleymeck_: invalid application. must export a , ex: `module.exports = http.createServer(...);'
[20:09] pgriess: creationix: yeah, you need to append the filename after
[20:10] pgriess: creationix: fullpath=$(cd $(dirname $0); pwd -P)/$(basename $0)
[20:10] bradleymeck_: eyzn where did you see that?
[20:10] creationix: pgriess: I don't need the basename, just the dirname
[20:10] creationix: I actually need the folder above the dirname, but that's easy
[20:11] eyzn: bradleymeck_: i tried to start your ConcurrentEditor :D
[20:11] bradleymeck_: node server.js failed? also that error is very odd, most likely from connect not being at latest
[20:11] eyzn: hm
[20:11] creationix: pgriess: https://gist.github.com/d5026c463542cf6429ac
[20:11] eyzn: installed it right now with npm
[20:12] bradleymeck_: odd
[20:12] eyzn: ye, but nvm
[20:12] pgriess: creationix: ah, ok. so that will resolve all symlinks in the dir hierarchy but not the file itself
[20:12] pgriess: creationix: interesting case
[20:12] eyzn: im running node 0.1.100
[20:12] creationix: I see, I need to readlink too
[20:13] bradleymeck_: i am too, just wondering wth caused the error
[20:13] aubergine has joined the channel
[20:13] pgriess: creationix: i think this will work
[20:14] pgriess: creationix: path=$(readlink $0 || echo $0)
[20:14] pgriess: creationix: so i think you need to resolve the symlink before doing the dirname stuff
[20:15] creationix: pgriess: yeah, I think I got it now
[20:16] creationix: pgriess: http://gist.github.com/475999
[20:20] rtomayko has joined the channel
[20:20] sh1mmer has joined the channel
[20:20] creationix: is there a realpath for bash (condenses ../.. and stuff
[20:20] creationix: )?
[20:21] creationix: pgriess: I got it down to /Users/tim/bin/../ivy/ivy-bin/node-osx
[20:21] pgriess: creationix: (sorry on the phone)
[20:23] creationix: tjholowaychuk: what is ${0%/*} ?
[20:23] tjholowaychuk: creationix: substitution, should be the same as dirname basically
[20:23] mscdex: creationix: $(readlink -f “$0″)
[20:24] mscdex: that resolves . and ..
[20:24] creationix: oh, I thought it was for passing arguments
[20:25] tjholowaychuk: you can do all kinds of crazy unreadable substitutions in bash
[20:28] zomgbie has joined the channel
[20:28] creationix: mscdex: sorry, doesn't work on osx
[20:28] bmizerany has joined the channel
[20:28] mscdex: :o
[20:28] creationix: readlink: illegal option -- f
[20:29] creationix: I've got it generating this /Users/tim/bin/../ivy/ivy-bin/node-osx
[20:29] creationix: which works, I just want to remove the bin/../ out
[20:29] bradleymeck_: who needs the ability to have readable naming when we can use single letter switches and the ~!@#$%^&* symbols
[20:30] mscdex: http://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac
[20:30] mscdex: heh
[20:31] creationix: mscdex: that looks like about what I've got
[20:32] creationix: I just need to pass arguments through now
[20:32] creationix: $@ right?
[20:33] tjholowaychuk: yup
[20:33] tjholowaychuk: what are you doing? just having a bash script proxy to the correct node binary?
[20:33] creationix: tjholowaychuk: yep
[20:33] tjholowaychuk: if you have curl github../install.sh | sh  anyways you could just uname and symlink it or something
[20:34] creationix: tjholowaychuk: I want it portable
[20:34] creationix: but maybe the proxy isn't a good idea
[20:34] creationix: I have other problems now
[20:34] tjholowaychuk: if there is any kind of install process id chuck it in there
[20:34] tjholowaychuk: if not then i dunno
[20:35] tjholowaychuk: i havent checked out the repo yet
[20:35] creationix: https://gist.github.com/6ba02d3c17b5252c7464
[20:35] creationix: tjholowaychuk: no install process yet, but I do require git submodule stuff
[20:35] xer0xM has joined the channel
[20:35] creationix: so might as well do a setup script
[20:36] tjholowaychuk: mkdir /tmp/connect \
[20:36] tjholowaychuk:   && cd /tmp/connect \
[20:36] tjholowaychuk:   && curl -# -L http://github.com/extjs/Connect/tarball/master \
[20:36] tjholowaychuk:   | tar xz --strip 1 \
[20:36] tjholowaychuk:   && make install \
[20:36] tjholowaychuk:   && echo "Installation complete"
[20:36] tjholowaychuk: there is the connect one for reference
[20:36] tjholowaychuk: you could do the node bin setup there I would imagine
[20:37] creationix: yeah, I think I'll do something like that
[20:37] creationix: here's my proxy if anyone wants some bash fu https://gist.github.com/07743371a7c56b6f34b8
[20:38] tjholowaychuk: you dont need the backticks there either, this will work
[20:38] tjholowaychuk: #!/usr/bin/env bash
[20:38] tjholowaychuk: name= uname
[20:38] tjholowaychuk: echo $uname
[20:40] tjholowaychuk: minus the typo
[20:40] tjholowaychuk: name=uname  is literal, name= uname is the command
[20:41] creationix: good to know
[20:41] creationix: I'm sure I'll have some bash somewhere since this thing needs to bootstrap itself
[20:41] tjholowaychuk: wait no nvm lol
[20:41] _announcer: Twitter: "@matthewsimo that's this week at least. ask me next week when i switch to node.js" -- Dave Rupert. http://twitter.com/davatron5000/status/18547121060
[20:41] tjholowaychuk: that wont shove it in the local
[20:41] tjholowaychuk: sorry, bash-fu has weakened since i stopped kiwi
[20:42] pgriess: creationix: back now
[20:42] creationix: pgriess: so, I eventually for the proxy working, but it caused other issues in node itself
[20:42] creationix: I think I'll just create a symlink to the proper node version after the user runs the setup script
[20:43] tjholowaychuk: but you can still do stuff like this
[20:43] tjholowaychuk: #!/usr/bin/env bash
[20:43] tjholowaychuk: name=${1-tj}
[20:43] tjholowaychuk: echo Your name is $name.
[20:43] creationix: download-unzip or git clone -> setup -> enjoy
[20:43] tjholowaychuk: or name=tj for lit etc
[20:43] tjholowaychuk: ya thats what i would do
[20:43] pgriess: ok
[20:43] foobarfighter has left the channel
[20:44] creationix: now if only I can take git submodules
[20:44] creationix: *tame
[20:44] tjholowaychuk: creationix: try this curl -# http://github.com/extjs/Connect/raw/master/install.sh
[20:44] tjholowaychuk: :)
[20:44] bradleymeck_: micheil, does addListener work on websocket-server SS if i use a ton of listeners (and on client side too)?
[20:44] kersny has joined the channel
[20:44] creationix: tjholowaychuk: good idea, make git clone part of the setup script
[20:45] tjholowaychuk: creationix: that doesnt clone
[20:45] tjholowaychuk: it just fetches the tarball
[20:45] creationix: no, but I'll need to
[20:45] tjholowaychuk: ah
[20:45] creationix: ivy depends on submodules for now
[20:45] tjholowaychuk: you could do the whole fake submodule thing
[20:45] creationix: tjholowaychuk: well, the submodules are a feature of the system as it goes
[20:46] creationix: it's part of the package version management
[20:46] creationix: so I need real ones
[20:46] tjholowaychuk: you can still update them independently 
[20:46] tjholowaychuk: or as you normally would
[20:46] tjholowaychuk: actually via tarball maybe not
[20:46] tjholowaychuk: i dont actually use them im not sure if github packs any dotfiles
[20:47] tjholowaychuk: nvm ill just shut up until i actually look at the distro lol
[20:47] sh1mmer has joined the channel
[20:50] bernd_: If I have an object that needs to keep track of its own events, should I have it inherit from EventEmitter, then add events to 'this'?
[20:50] aliem has joined the channel
[20:50] isaacs has joined the channel
[20:52] creationix: tjholowaychuk: well, there isn't much to look at yet
[20:52] ludde: I'm getting a python ImportError: No modle named Scripting when trying to run node-waf, where can i find this module?
[20:53] aliem_ has joined the channel
[20:54] tjholowaychuk: creationix: will be nice though, ialways forget how annoying it is to setup all these dependencies on a new computer
[20:54] tjholowaychuk: wanted to get node going on my friends laptop but he has nothinggggg
[20:54] creationix: tjholowaychuk: this will require git, but that's a lot easier than git + xcode + all sorts of other stuff
[20:55] tjholowaychuk: ya no doubt
[20:55] bradleymeck_: bernd_ generally, EventEmitter.call(obj); obj.addListener('myevent',function callback(...){...})
[20:57] _announcer: Twitter: "benchmark # nodejs is insane. no more. throw out their java and php." [pt] -- Ruf. http://twitter.com/mvrilo/status/18548011122
[20:58] tjholowaychuk: markdown inline comments for docs is the best thing everrrr
[20:58] tjholowaychuk: loves me some markdown
[20:59] ashb: http://github.com/evilstreak/markdown-js/ </obligatory-markdown-plug>
[20:59] bernd_: Hey Bradley, couldn't get it to work by passing our obj to event emitter, but, if we instantiate event emitter, we're able to add listeners to it and emit from it.  Anything wrong with that approach?
[20:59] bradleymeck_: blah websocket api only has hardset event emition, give me my addEventListener on streams already!
[21:00] _announcer: Twitter: "using a node.js server and cocos2d on the ipad to play with multi-device, networked, multiplayer communication." -- Matt Biddulph. http://twitter.com/mattb/status/18548143266
[21:00] bradleymeck_: bernd_ nope
[21:00] tjholowaychuk: ashb: thats what ive been using too
[21:00] ashb: tjholowaychuk: good-o
[21:00] tjholowaychuk: I have node-discount but im to lazy to fix the encoding crap
[21:01] ashb: its a fine piece of code event I do say so myself
[21:01] tjholowaychuk: it spits out weird chars sometimes
[21:01] tjholowaychuk: but its super fast
[21:01] ashb: node-discount does/is or markdown-js?
[21:01] tjholowaychuk: discount
[21:01] mattly has joined the channel
[21:01] ashb: good - means I dont have to fix bugs then
[21:02] bernd_: gracias bradley.  ;)
[21:02] bradleymeck_: more regexps!
[21:04] ryah: what's the proper way to test if something is instanceof Array ?
[21:04] isaacs: Array.isArray(arr)
[21:04] derferman has joined the channel
[21:04] creationix: https://gist.github.com/d2eaf0fe606b5ef02604
[21:04] creationix: two commands!
[21:04] isaacs: js> Array.isArray([1, 2, 3])
[21:04] gbot2: isaacs: Error: TypeError: Array.isArray is not a function 
[21:05] creationix: curl -# http://github.com/creationix/ivy/raw/master/utils/setup.sh | bash
[21:05] creationix: ./ivy/bin/node
[21:05] isaacs: grr, i always forget that gbot is so out of date
[21:05] benburkert has joined the channel
[21:06] isaacs: creationix: neat :)
[21:06] zapnap has joined the channel
[21:06] creationix: maybe I should rename my binary to be ivy and not node
[21:06] creationix: then it won't conflict developers (our) regular node installs
[21:07] isaacs: creationix: yeah, that'd be a good idea
[21:07] isaacs: creationix: also, you should throw npm in there :)
[21:07] creationix: isaacs: maybe, but ivy manages packages very different
[21:07] tjholowaychuk: i think that conflicts with the distro idea a bit
[21:07] creationix: not sure how to integrate npm
[21:07] creationix: I do want to include something though and it would be nice to use the registry
[21:08] isaacs: tjholowaychuk: why?  ubuntu comes with apt
[21:08] isaacs: creationix: it would be helpful if npm read from a config file other than .npmrc
[21:08] isaacs: other than ~/.npmrc, i mean
[21:08] creationix: isaacs: possibly
[21:08] isaacs: creationix: then you could just have it come equipped with a build of npm that works in ivy's lib folder
[21:08] creationix: if I could configure npm to work the way I needed
[21:08] isaacs: yeah
[21:08] bradleymeck_: isaacs only but i can find left for the ls is the --verbose ruins search, still not sure why
[21:10] isaacs: creationix: i'd started down the road of having shadow-able config file entries, so you could have one in the root, and one in /etc/npm/npmrc, etc.
[21:10] Blackguard has joined the channel
[21:10] isaacs: creationix: and then maybe read from either an env, or from node's location, or something
[21:10] isaacs: creationix: the implementation is not hard, it's just that i got to the point where i was like, "ok, so how do i know which files to parse?" and then stopped.
[21:10] isaacs: creationix: i'd <3 an issue explaining how you'd like it to work
[21:11] creationix: isaacs: sure thing, once I figure it out
[21:11] isaacs: :)
[21:11] creationix: I do like automatic dependency management
[21:11] isaacs: yeah
[21:11] creationix: but it's not so bad now that I can bundle stuff
[21:11] isaacs: it'd probably just be a matter of having it start out using a specific root, so npm should know to read the .npmrc from some specific location.
[21:11] x_or has joined the channel
[21:11] creationix: and people can fork ivy and create their own custom bundles pretty easily
[21:12] creationix: dang linux doesn't come with curl usually
[21:12] sechrist has joined the channel
[21:12] ashb: wget -O-
[21:12] tjholowaychuk: i think wget is more common
[21:12] tjholowaychuk: not sure 
[21:12] ashb: yeah it is
[21:13] ashb: but not even installed by default on most distros
[21:13] creationix: ashb: that worked wget -O- http://github.com/creationix/ivy/raw/master/utils/setup.sh | sh
[21:16] bmizerany has joined the channel
[21:16] _announcer: Twitter: "node.js is the new nosql is the new black." -- Grig Gheorghiu. http://twitter.com/griggheo/status/18549075255
[21:17] _announcer: Twitter: "Wow - Multi-node: Concurrent NodeJS HTTP Server http://bit.ly/9e3Ymt I've been playing with Node a lot and this looks *great*." -- Russell Beattie. http://twitter.com/RussB/status/18549076707
[21:17] envallp has joined the channel
[21:18] tjholowaychuk: and requests for features in Express 1.0 before I start bundling up the RC
[21:19] tjholowaychuk: isaacs: also whats the best way to handle RCs / betas blah blah with npm? or what would you suggest
[21:19] isaacs: tjholowaychuk: just publish it.  you can give it a version like 1.2.3alpha or 1.2.3rc-7.  according to semver, those are less-than 1.2.3
[21:20] tjholowaychuk: isaacs: k sweet
[21:20] isaacs: tjholowaychuk: so, 1.2.3alpha < 1.2.3beta < 1.2.3c < 1.2.3d ... < 1.2.3 < 1.2.3-1-buildtag < 1.2.3-2-buildtag 
[21:20] c4milo: hi guys 
[21:20] tjholowaychuk: awesome thanks man
[21:20] isaacs: tjholowaychuk: the typical way to do that would be alpha, beta, rc1, rc2, rc3, ...
[21:20] isaacs: then just strip the tag
[21:21] c4milo: where does nodejs look for modules ? 
[21:21] c4milo: what paths ? 
[21:21] c4milo: by default
[21:21] isaacs: c4milo: the NODE_PATH env var, and then ~/.node_libraries, and then {node prefix}/lib/node
[21:21] isaacs: c4milo: or whatever you set require.paths to
[21:21] isaacs: c4milo: type "require.paths" into the repl
[21:21] _announcer: Twitter: "I  actually disagree with @timbray on the need for Rails for Node.js.  I think Node.js is to SSJS, what Rails was for Ruby." -- Daniel Shaw. http://twitter.com/dshaw/status/18549352150
[21:22] isaacs: ^^ not sure if that's a huge compliment or a huge insult.
[21:22] isaacs: but it's definitely one or the other!
[21:22] skampler: :D
[21:23] c4milo: isaacs: thks
[21:24] sechrist_ has joined the channel
[21:25] pavan_ has joined the channel
[21:26] _announcer: Twitter: "The only real reason I can see to recreate Rails in Node.js is for the experience. In that, hopefully something new and emergent comes out." -- Daniel Shaw. http://twitter.com/dshaw/status/18549592169
[21:27] tjholowaychuk: -1 for rails
[21:27] bradleymeck_: so excited, almost have something that is decently workable w/ websocket-server and connect
[21:27] Tim_Smart has joined the channel
[21:29] creationix: anyone know why this works on OSX, but not Linux?
[21:29] creationix: ln -s ../modules/*/bin/* ./
[21:30] creationix: on OSX it puts a link to each of the matched files into ./
[21:31] khug has joined the channel
[21:31] creationix: but on Linux I just get a single symlink called "*"
[21:31] ironfroggy has joined the channel
[21:31] pquerna: creationix: that should work on linux...
[21:31] pquerna: creationix: what does ls ../modules/*/bin/*  show?
[21:31] creationix: plrwxrwxrwx 1 tim tim 18 Jul 14 14:29 * -> ../Modules/*/bin/*
[21:32] ironfroggy: I was reading Amix' presentation on node.js and comet, but its using WebSocket. is there any non-websocket comet implementation for node.js?
[21:32] creationix: oh, the ls
[21:32] pquerna: creationix: its like shell expansion isn't working
[21:32] amerine has joined the channel
[21:32] creationix: pquerna: ahh, I have a capital M when it should be lowercase
[21:32] creationix: I guess it does funky stuff when the file doesn't exist
[21:32] pquerna: yeah, osx is case insensitive
[21:33] everton has joined the channel
[21:33] c4milo: anonybody know how can I embed gists inside a README.md  ?
[21:34] creationix: c4milo: just link to them
[21:34] ludde: is there any make command to copy the c header files to /usr/local/include? Trying to compile node-geoip, and it fails with ../src/ceoip.cc:5:16: error: v8.h: No such file or directory
[21:34] mikeal has joined the channel
[21:35] creationix: pquerna: ok, it's ready for testing if you want to test it for me
[21:35] creationix: curl -# http://github.com/creationix/ivy/raw/master/utils/setup.sh | sh
[21:35] creationix: or
[21:35] creationix: wget -O- http://github.com/creationix/ivy/raw/master/utils/setup.sh | sh
[21:35] c4milo: creationix: do you have some readme with embeded gists  ?
[21:38] _announcer: Twitter: "I need some brave beta testers for my new #node.js distro called http://github.com/creationix/ivy" -- Tim Caswell. http://twitter.com/creationix/status/18550274990
[21:38] creationix: c4milo: no, what I mean is that it's not embedable, just hyperlink to the gist
[21:39] isaacs: !tweet @dshaw Re "nodejs is rails for ssjs" not sure if that's a huge compliment or a wicked burn.
[21:39] mscdex: node.js rules!
[21:40] ryah: ACTION smashes a beer can on his forehead
[21:40] tjholowaychuk: hahaha
[21:40] mscdex: :-D
[21:40] bradleymeck_: ludde did you make install?
[21:40] pquerna: 'nodejs is twisted for ssjs' is a similiar compliment or burn.
[21:41] creationix: pquerna: I'd say it's twisted me ;)
[21:41] creationix: everyone who has a free moment and is on osx or linux, try my installer.  It should work for most cases
[21:42] creationix: ACTION should probably eat lunch some time, having too much fun
[21:42] ludde: bradleymeck_: yes
[21:42] ludde: trying to see if i can do it through node-waf
[21:42] quirkey has joined the channel
[21:42] ludde: but its imports are all wrong
[21:42] _announcer: Twitter: "Ivy doesn't install globally on your system, it just creates a self-contained folder called "ivy" that contains an entire portable #node.js" -- Tim Caswell. http://twitter.com/creationix/status/18550538440
[21:43] jblanche has joined the channel
[21:43] ludde: it adds the wrong paths to the python path, so it feels like I'm doing something wrong, but I can't find any docs on this.
[21:44] bradleymeck_: node/deps/v8/include has all the files if you wanna manually copy... node-waf is for compiling modules that use c but the compilation is still done w/ a compiler, not sure i understand what you mean w/ python path being important
[21:44] mape: isaacs: ping
[21:45] isaacs: yo
[21:45] ludde: for example, the wscript in the root node directory tries to import js2c directly
[21:45] ludde: but that is in tools.
[21:45] _announcer: Twitter: "is There anyway to prevent the issue with a socket on node.js to NOT generate an uncaught Exception when the Stream is not writable ?" -- pothibo. http://twitter.com/pothibo/status/18550666854
[21:45] bradleymeck_: aww bad cpu type creationix
[21:45] creationix: bradleymeck_: 32 bit osx?
[21:45] _announcer: Twitter: "Pondering writing a node.js realtime stream server for OSM data. Anyone out there have experience with #nodejs?" -- Ian Dees. http://twitter.com/iandees/status/18550687322
[21:45] ludde: bradleymeck_: node-waf uses python
[21:45] ludde: it's basically 2 different problems.
[21:46] mape: isaacs: ideas/thoughs on the more info button? http://mape.me:1337/ ? And what to fill the area with besides what is in there? (early stage)
[21:46] bradleymeck_: i know it is using python but it sounded like you were associating missing c headers w/ the python path system
[21:46] ludde: well, no, right now i'm just trying to get node-waf to work.
[21:47] bradleymeck_: os 10.6.4 , on a core duo
[21:47] ludde: I had to patch the node-waf executable python script to add a few urls to the python path
[21:47] jesusabdullah: isaacs: I have another problematic npm package, and I'm like 95% sure that it's the package's fault and not npm's. Otoh, we (the creator and myself) have no idea why it's failing. Should I post it to npm issues anyway?
[21:47] ludde: for it to even run in the first place.
[21:47] ludde: which feels silly.
[21:47] bradleymeck_: shouldnt have to do that which is why it feels silly, wonder what went wrong
[21:47] isaacs: jesusabdullah: sure.  just include a link to your code (or the package.json or whatever)
[21:47] creationix: bradleymeck_: I wonder if I could compile a universal binary
[21:47] ludde: bradleymeck_: yeah.
[21:48] isaacs: mape: hm... any reason why it can't include all the data that's in the package.json?  like in a table or something?
[21:48] creationix: core duo (as opposed to core 2 duo) is 32 bit
[21:48] isaacs: mape: or at least, keywords, homepage, maintainers, author, etc.
[21:48] mape: isaacs: Guess it could. just figured it would be something more.. massaged?
[21:48] isaacs: mape: yeah, i dunno.
[21:48] isaacs: ACTION shrug
[21:49] isaacs: mape: honestly, i usually look at the json.  but people like stuff to be in lists with pretty shading.
[21:49] mape: Hehe yeah
[21:49] felixge has joined the channel
[21:50] creationix:  ryah: is there a way to compile node as 32 bit or universal binary on OSX?
[21:50] creationix: not sure which is better
[21:50] visnup has joined the channel
[21:50] hassox has joined the channel
[21:51] mscdex: -m32?
[21:52] mape: Team slots for the knockout are starting to get scarce
[21:53] ludde: bradleymeck_: ah, rebuilt everthing from scratched and it got fixed.
[21:53] ludde: very weird.
[21:53] ludde: I thought I was going crazy.
[21:53] jesusabdullah: isaacs: Okay.
[21:53] creationix: mscdex: where would I put that flad
[21:53] creationix: *flag
[21:53] mape: And the mongodb blog just pimped it so if anyone in here isn't signed up yet might be a good idea to do so rather soon
[21:53] mscdex: creationix: g++
[21:53] visnup: mape: yes, and no, haven't gotten to the ideas page :(
[21:54] mape: visnup: Curse you!
[21:54] visnup: though, I think we just signed up resig and eich as judges
[21:54] mape: Neat
[21:54] mjr_: oh, that's cool.
[21:55] mape: So that means we have to maker sure your projects work in obscure blackberry handsets for resig to like them?
[21:55] visnup: the more obscure the better
[21:55] _announcer: Twitter: "attempted to get nodejs to build on windows. It's not there, but it's closer. http://github.com/spraints/node" -- Matt. http://twitter.com/spraints/status/18551205714
[21:55] creationix: mscdex: so somewhere in the wscript file then?
[21:55] _announcer: Twitter: "node.js gets its own key-value store: nStore « myNoSQL http://j.mp/cuE556 What if it would use a memcached-like API?" -- Alex Popescu. http://twitter.com/al3xandru/status/18551255785
[21:55] mjr_: I think it'll also help if you use Firefox-only JS features that'll never make it to ES5.
[21:56] locks has joined the channel
[21:56] mscdex: creationix: yeah
[21:56] creationix: mscdex: yeah, I see all sorts of hacks in there trying to get all the parts to compile the same platform, not sure I can do it on my own
[21:56] creationix: especially if I want a universal binary
[21:57] npup has joined the channel
[21:58] mscdex: i thought universal binaries were for intel/ppc compatibility?
[21:58] bradleymeck_: just noticed on the knockout page doesnt specifically say we can pull down public repos
[21:58] visnup: bradleymeck_: pull down?
[21:58] npup: yeah?
[21:58] bradleymeck_: like using connect or node-websocket-server
[21:59] mape: ofcourse you can use stuff like that?
[21:59] visnup: bradleymeck_: you can
[21:59] mape: As long as you don't toute them as your own
[21:59] beelzabub1: hey - so i'm having a small problem with my fork enhancement.  the forked script isn't exiting properly when there's nothing left to do
[21:59] creationix: mscdex: they work for that too, usually they include ppc/i386/amd64
[21:59] visnup: on the pile of things I have not yet done is the rules clarifying all of that
[21:59] creationix: mscdex: but they can contain just i386/amd64
[21:59] bradleymeck_: cool
[21:59] mscdex: creationix: what is it that you're trying to compile with waf?
[21:59] jxson has joined the channel
[22:00] creationix: mscdex: node
[22:00] mscdex: oh
[22:00] visnup: bradleymeck_: in-draft rules: http://nodeknockout.com/rules
[22:00] beelzabub1: http://pastebin.com/WHxQJuZM is the js snippet I use to trampoline into the script to execute
[22:01] beelzabub1: if I remove process.loop() & put  ev_loop(EV_DEFAULT_UC_ 0); after, it kinda works
[22:01] beelzabub1: except it breaks if the user script starts a server & then terminates it later
[22:01] _announcer: Twitter: "Serverside #JavaScript with #MooTools and NodeJS http://dld.bz/mpYW" -- purplehayz. http://twitter.com/purplehayz/status/18551593602
[22:01] amerine has joined the channel
[22:02] beelzabub1: so the only difference between that & process.loop() is that process.loop does   p, li { white-space: pre-wrap; }     ev_idle_start(EV_DEFAULT_UC_ &eio_poller);
[22:03] mscdex: creationix: maybe try temporarily adding "-m32" to the CFLAGS and CXXFLAGS environment vars before running node-waf configure
[22:03] mjijackson has joined the channel
[22:03] ryah: beelzabub1: ? was that css?
[22:03] beelzabub1: sorry yeah
[22:04] beelzabub1: qtcreator apparently decides to place that in there when you copy code
[22:04] Dmitry2 has joined the channel
[22:04] ryah: beelzabub1: i wouldn't mind pulling process.loop() out 
[22:04] ryah: into c++ land
[22:04] beelzabub1: yeah - i'm trying that
[22:04] ryah: it's only there for historical reasons.
[22:04] beelzabub1: i must be missing something about how the event loop works
[22:05] _announcer: Twitter: "I ported minitest.js to run on Node and in your browser. Check it out. http://github.com/aconbere/minitest.js" -- Anders. http://twitter.com/aconbere/status/18551810807
[22:05] aconbere: man that thing is fast
[22:05] mscdex: ;-)
[22:05] beelzabub1: what does process.emit('exit') do?
[22:05] ryah: beelzabub1: just calls a callback
[22:06] mjr_: You can listen for exit, usually done in a test.
[22:07] beelzabub1: weird - now the thing is never exiting
[22:07] beelzabub1: my forked script just does a console.log
[22:07] creationix: mscdex: yeah, not working, I get the feeling it's not going to be that simple.  I remember this discussion about a year ago when osx support was added
[22:07] ryah: beelzabub1: but i think you don't want to do what you pasted
[22:08] ryah: just put notifyReady.notifyWhenConnected();
[22:08] beelzabub1: i already changed that
[22:08] ryah: into the main script
[22:08] beelzabub1: the forked wrapper simply creates a connection back to the fork server
[22:08] beelzabub1: once the user script finishes executing, i do the notify
[22:08] creationix: ryah: of the top of your head, do you know how to create a 32 bit node binary of 64 bit osx?
[22:08] mscdex: i dunno then, that should've done it. unless you have to explicity specify the architecture as ix86 or something :S
[22:08] beelzabub1: the C++ code simply does f->Call(args) & then jumps into the ev_loop
[22:08] ryah: creationix: no
[22:09] creationix: mscdex: it gave me link errors while running configure
[22:09] creationix: half 32 bit and hald 64 bit
[22:09] creationix: and I hadn't even run make yet
[22:09] ryah: creationix: DST_ARCH=x86 make
[22:09] beelzabub1: actually, the C++ code does   ev_default_fork(), f->Call(...), ev_loop
[22:10] creationix: ryah: nope, I see lots of -DV8_TARGET_ARCH_X64
[22:10] ryah: beelzabub1: why are you trying to avoid forking before the loop?
[22:11] beelzabub1: how do you mean?
[22:11] pquerna: http trailers keep sounding like a better idea.
[22:11] ryah: er
[22:11] ryah: opposite
[22:11] ryah: creationix: DST_ARCH=ia32
[22:11] ryah: oh
[22:11] pquerna: because of v8, it definately might be easier to use the lpio approach
[22:11] ryah: DST_CPU
[22:12] beelzabub1: when i fork, parent returns back to calling context so that the script keeps running as expected & the child is supposed to provide the same behaviour as if I launched the target script with node directly
[22:12] creationix: ryah: hmm, still seems 64 bit
[22:12] cloudhead has joined the channel
[22:12] ryah: beelzabub1: oh
[22:13] ryah: beelzabub1: you could just require() it
[22:13] creationix: pquerna: do you think it's better to have a universal binary or just include a 32 bit binary?
[22:13] creationix: or two separate binaries
[22:13] ryah: creationix: sorry DEST_CPU
[22:13] beelzabub1: not really since then that screws up the process args
[22:14] ryah: DEST_CPU=x86
[22:14] beelzabub1: & do you think that will solve the problem of the loop not exiting when there's nothing to do?
[22:14] creationix: ryah: sadly it ignores it
[22:15] pquerna: creationix: when you say universal, do you just mean 32bit and 64bit x86?
[22:15] creationix: pquerna: correct, no ppc
[22:15] huyhong has joined the channel
[22:15] ryah: beelzabub1: which doesn't exit, the child?
[22:15] creationix: I mean, if node supported ppc, then I'd want it, but that's never going to happen
[22:15] pquerna: right, so... for people just trying it out, everyone can run the 32bit binary right?
[22:16] beelzabub1: ryah: yeah
[22:16] pquerna: at least until apple does something more crazy in 10.7
[22:16] beelzabub1: ryah: i have a suspicion
[22:16] pquerna: so, I'd skip it :)
[22:16] beelzabub1: i think it's the fork request connection
[22:16] creationix: pquerna: correct, for even for a production system (on OSX?) I doubt the 32 bit version is slower if any
[22:16] beelzabub1: cause that still remains open within the context of the fork
[22:16] creationix: it will likely have a memory address limit, but that's pretty high
[22:17] pquerna: creationix: 64bit should be faster, but regardless, people don't often do production on osx, and if they did, 'recompile' isn't a bad thing
[22:17] creationix: I know v8's assembly is more mature on the i386 side (or at least used to be)
[22:18] felixge_ has joined the channel
[22:18] felixge_ has joined the channel
[22:18] creationix: pquerna: so I just have the slightly less difficult problem of getting my mac to build 32 bit node binaries
[22:18] beelzabub1: ryah: so i've got it almost working now
[22:18] ryah: beelzabub1: ok
[22:18] beelzabub1: ryah: it still not dying after i launch the server
[22:19] ryah: beelzabub1: it would be nice if you could do your forking thing without patching src/node.js
[22:19] bbn has joined the channel
[22:19] beelzabub1: i don't patch node.js
[22:19] ryah: oh
[22:19] beelzabub1: it's a separate module
[22:20] ryah: but to do the "wait for connection" thing?
[22:20] beelzabub1: it does require patching to child_process.js & node_child_process.cc to expose the functinoality
[22:20] beelzabub1: ryah: what wait for connection thing?
[22:20] ryah: "notifyReady.notifyWhenConnected();"
[22:20] beelzabub1: that was a snippet from the larger code
[22:21] beelzabub1: notifyReady is a stream
[22:21] beelzabub1: I add the notifyWhenConnected function to it
[22:21] ryah: oh okay - sorry - i thought this was supposed to be in src/node.js
[22:21] bbn: hi noders - trouble compiling on OS X 10.6.2. no sign of hints in the google group. error here: http://pastie.org/1044809
[22:21] beelzabub1: no no - there's no impact to the rest of node for using this feature
[22:22] beelzabub1: unless you explicitely use it
[22:22] aho has joined the channel
[22:22] beelzabub1: *no impact in terms of if you're not using it, it doesn't really change node behaviour (maybe a bit more overhead for importing the child_process module)
[22:23] creationix: bbn: what's your CPU type?
[22:23] bbn: intel
[22:23] ryah: :)
[22:24] creationix: bbn: 32 bit or 64 bit?
[22:24] creationix: (core duo or core 2 duo or I7)
[22:24] ben_alman has joined the channel
[22:24] charlesjolley- has joined the channel
[22:25] bbn: core 2 duo
[22:25] bbn: what is that? i don't pay attention to hardware specs since I started doing web dev!  :)
[22:25] creationix: bbn: well, if you just want a node that works, I made a pre-compiled distro today
[22:26] creationix: I'm trying to get it running on 32 bit macs, but it runs great of 64 bit (core 2 duo)
[22:26] bbn: that sounds nice
[22:26] creationix: http://github.com/creationix/ivy
[22:26] bbn: thanks.
[22:26] bbn: i wonder why it's not compiling? i cmopile 0.1.91 a few months ago
[22:27] bbn: or weeks maybe, whenever that was current
[22:27] creationix: bbn: maybe you just need to clean it
[22:27] bbn: with soap?
[22:27] creationix: make clean
[22:27] bbn: i'll try 
[22:27] creationix: maybe make distclean
[22:27] mjr_: use a mild abrasive
[22:27] creationix: yeah, soap leaves too much xml residue
[22:28] bbn: what is this "waf configure" business? waf?
[22:28] creationix: node uses waf (a python build tool) internally
[22:28] mjr_: bbn: some python build system thing
[22:28] bbn: gothca, thx
[22:28] creationix: mainly because V8 uses it
[22:28] bbn: understood
[22:28] bbn: building again...
[22:29] jesusabdullah: isaacs: Thanks for fixing that so quickly!
[22:29] bbn: nice to meet you all BTW - looking forward to getting into node
[22:29] isaacs: jesusabdullah: np
[22:29] bbn: I run some very busy apps currently using App Engine
[22:30] bbn: but want to move to JS
[22:30] beelzabub1: ryah: sweet - got a working implementation
[22:30] beelzabub1: now to clean it up
[22:30] ryah: beelzabub1: nice
[22:31] bbn: bummer, same error. i'll use your pre-compiled creationix. thz again
[22:31] creationix: bbn: sure thing, let me know how it goes
[22:31] _announcer: Twitter: "nice! "Multi-node: Concurrent NodeJS HTTP Server" http://bit.ly/ak51Hd #nodejs" -- Régis Gaidot. http://twitter.com/rgaidot/status/18553270326
[22:31] tjholowaychuk: creationix: anything else you want to remove from connect? I think redirect was the only one I wanted out
[22:31] tjholowaychuk: ill double check
[22:31] tjholowaychuk: maybe format
[22:31] creationix: tjholowaychuk: some of the examples
[22:31] creationix: the ones that require submodule for sure
[22:32] aliem has joined the channel
[22:32] creationix: tjholowaychuk: maybe errorHandler, that seems pretty high level
[22:32] _announcer: Twitter: "First draft of the API for my node.js memcached module ; http://is.gd/dsdh6" -- Arnout Kazemier. http://twitter.com/3rdEden/status/18553289657
[22:32] tjholowaychuk: hmm
[22:32] creationix: tjholowaychuk: move it to another repo
[22:33] creationix: flash?
[22:33] tjholowaychuk: thought i took flash out already wtf
[22:33] gregotri has joined the channel
[22:33] gregotri: hello
[22:33] creationix: let me pull then
[22:33] zapnap has joined the channel
[22:33] tjholowaychuk: i think i removed everything but the middleware for flash haha
[22:34] tjholowaychuk: just removed it
[22:34] tjholowaychuk: docs n shit should be gone though
[22:34] isaacs: jesusabdullah: i'm finding all kinds of bugs with dnode.  (bugs in npm, that is, not in dnode)
[22:34] bradleymeck_: can you get cookies off a websocket since it is technically an upgrade?
[22:34] mape: visnup: Btw will there be a cleanup of the teams? So if it fills up people who signed up but aren't participating give place for people who will?
[22:34] isaacs: jesusabdullah: it's great that people are actually doing interesting things with dependencies and such nowadays.  users find everything.
[22:35] creationix: bradleymeck_: I would think so, but only on the initial connection
[22:35] bradleymeck_: yea, that would be fine for most applications since it stays open
[22:36] bradleymeck_: michiel any idea how/if you can get cookies off a websocket in websocket-server (sorry for the multitude of questions)?
[22:36] creationix: tjholowaychuk: what are less and sass for?
[22:36] creationix: I know expresso is for the tests
[22:36] mape: creationix: css?
[22:36] gregotri: make test failed: http://pastebin.com/QN9HdVHE
[22:36] tjholowaychuk: creationix: the examples?
[22:36] creationix: not sure what koala is
[22:36] tjholowaychuk: where is that at
[22:37] creationix: tjholowaychuk: they are in the support folder
[22:37] gregotri: throw new assert.AssertionError and script.runInNewContext
[22:37] creationix: not sure what uses them
[22:37] tjholowaychuk: koala is my little syntax highlighter
[22:37] tjholowaychuk: for docs
[22:37] beelzabub1: so is there no documentation for Stream::open ?
[22:37] creationix: mape: we're trying to clean the cruft out of connect to get it ready for a 1.0 release
[22:37] tjholowaychuk: creationix: less / sass are dev dependencies for the compiler middleware
[22:37] tjholowaychuk: id keep compiler though
[22:37] gregotri: AssertionError: true == false and ReferenceError: foo is not defined
[22:37] creationix: tjholowaychuk: ahh, to run the tests
[22:37] mape: creationix: Ah nice
[22:37] creationix: that's fine then
[22:38] tjholowaychuk: creationix: wonder i we should wait to release express 1.0 until after connect, at the same time, before or what
[22:39] creationix: tjholowaychuk: not sure, but I want connect ready this week
[22:39] tjholowaychuk: creationix: im just about done
[22:39] creationix: tjholowaychuk: with express? 
[22:39] tjholowaychuk: but it would be sweet to have labs up and be like BAM connect / express / others bitches
[22:39] tjholowaychuk: yup
[22:39] bradleymeck_: !api Stream.open
[22:39] tjholowaychuk: creationix: its mostly just docs now that im working on
[22:40] creationix: nice
[22:40] creationix: tjholowaychuk: and you've tested all the examples and they still work?
[22:40] creationix: oh cool, I didn't even know about config.js
[22:40] creationix: neato
[22:40] tjholowaychuk: creationix: Its been maybe a week since i tested some of them
[22:41] tjholowaychuk: haha
[22:41] tjholowaychuk: yup you can change the path too or have multiple with --config
[22:41] tjholowaychuk: --config base.config.js --config my.config.js 
[22:41] tjholowaychuk: etc
[22:41] creationix: I like that it's a js file and not json
[22:42] creationix: ohh, the error handler is pretty
[22:42] creationix: still not sure it belongs in connect itself, but very nice
[22:42] tjholowaychuk: its kinda cool because when you have showStack: true you can -H "Accept: application/json" and you will { error: ... } back
[22:42] bradleymeck_: is it an executed js file so i can do oddities like pull in configs from other places?
[22:42] tjholowaychuk: or html / plain text etc
[22:43] creationix: bradleymeck_: yep
[22:44] visnup: mape: like pinging everyone to see if they're really still interested?
[22:44] creationix: tjholowaychuk: I guess leave it in for now
[22:45] tjholowaychuk: creationix: aight
[22:45] mape: visnup: Yeah, not really sure what is the best way, but it is quite a bit of time between registration and actual "contest". Some might have forgotten or just did it as a spurr of the moment
[22:45] tjholowaychuk: i agree though it belongs in something higher level like express, but its kinda nice to have these building blocks for other frameworks
[22:45] tjholowaychuk: even if it is higher level
[22:45] creationix: tjholowaychuk: how about making it always there? or is that overkill?
[22:45] visnup: mape: we'll likely have to go back and make sure people are all filled out and accounts are setup so we might have a chance to know if someone has flaked already
[22:46] mape: visnup: yeah
[22:46] tjholowaychuk: creationix: overkill I think. its tempting even with express to have tons of defaults
[22:46] rictic has joined the channel
[22:46] tjholowaychuk: but its just not the right way to go
[22:46] visnup: mape: at which point if we have a handful of open spots still I can see opening up a short registration window again
[22:46] tjholowaychuk: people just need to read docs lol
[22:46] satori has joined the channel
[22:46] mape: yup
[22:46] creationix: tjholowaychuk: I'm learning so much about connect from just reading your examples
[22:46] bbn: creationix: thx, node-osx works nicely
[22:46] creationix: bbn: super
[22:46] ajpiano has joined the channel
[22:46] tjholowaychuk: creationix: haha what do you mean
[22:47] creationix: bbn: it's HEAD from a couple of hours ago
[22:47] visnup: easier yet, we were thinking of gauging last minute interest and going ahead and allowing ~50 more teams register
[22:47] creationix: tjholowaychuk: I didn't know we had all these features in connect
[22:47] tjholowaychuk: haha :D
[22:47] creationix: you did a lot while I was away in Sweden without internet
[22:47] riottaba has joined the channel
[22:47] creationix: I never got caught up
[22:47] visnup: mape: and then just let the non-participants just not participate like normal and have ~200 again
[22:51] creationix: tjholowaychuk: so custom-config chooses the config based on the environment?
[22:51] tjholowaychuk: creationix: yup thats right. i remember when we started connect we were going to have the directory structure dependency
[22:51] mape: visnup: Sounds like a plan
[22:51] creationix: nice
[22:51] tjholowaychuk: so i wanted an example to show how to do that without actually forcing it upon people
[22:51] creationix: using the -E flag right?
[22:51] tjholowaychuk: plus its harder to test stuff that is structure specific
[22:52] tjholowaychuk: yup -E, --env i think
[22:52] tjholowaychuk: ya thats it
[22:52] creationix: tjholowaychuk: oh, one bug I noticed the other day, with changing the user, you should only do that AFTER binding to poty 80
[22:52] creationix: *port
[22:52] creationix: since only root can change the uid
[22:52] creationix: and you would only use root if binding to a privileged port
[22:53] tjholowaychuk: my bad, thats what i get for not using it in production
[22:53] mikeal has joined the channel
[22:53] creationix: yeah, howtonode is running as root right now
[22:53] creationix: hopefully nobody finds holes in node
[22:53] bradleymeck_: havent actually seen one so far
[22:53] bradleymeck_: unless you include in a bad juju module
[22:54] tjholowaychuk: you can pass arbitrary flags too. I think I have staticProvider checking --staticRoot and there is --logFormat etc
[22:54] tjholowaychuk: just because
[22:54] tjholowaychuk: lol
[22:54] creationix: nice
[22:54] creationix: tjholowaychuk: ok, the examples look great
[22:54] _announcer: Twitter: "This is hot: http://bit.ly/4VMDai #javascript #js #nodejs #coffeescript #coffeejs #dsl #with #too #much #hash #syndrome" -- Fred Wu. http://twitter.com/fredwu/status/18553800691
[22:54] creationix: they could use more documentation or be more visible somehow
[22:55] ajpiano has joined the channel
[22:55] tjholowaychuk: its tough, a lot of people are not resourceful they wont look at source docs, or examples even really
[22:55] tjholowaychuk: it sucks
[22:57] saikat has joined the channel
[22:59] tjholowaychuk: isaacs: express 1.0 is going to be npm only :)
[22:59] tjholowaychuk: bye bye kiwi
[23:00] isaacs: tjholowaychuk: that's SO true.
[23:00] huyhong: ACTION eats a kiwi in honor
[23:00] isaacs: tjholowaychuk: docs are just a token custom.
[23:01] creationix: tjholowaychuk: well, people read blog posts
[23:01] isaacs: you write docs to convince people you've thought it through
[23:01] isaacs: not to actually be useful.
[23:01] tjholowaychuk: what
[23:01] tjholowaychuk: lol what is this about docs
[23:01] isaacs: you could write "blar blar blar blar" in your docs, and no one would notice.
[23:01] tjholowaychuk: oh
[23:01] mjr_: I don't look at docs or examples either.  I usually don't even look at my text editor.
[23:01] tjholowaychuk: the earlier ranting
[23:01] tjholowaychuk: pretty sites === lots of github watchers lol
[23:01] mjr_: I just start typing things with the monitor off, and the complain if it doesn't work.
[23:01] tjholowaychuk: that is what i have deduced from vows etc
[23:02] creationix: tjholowaychuk: so true
[23:02] creationix: I should hire a graphic designer for Ivy
[23:02] creationix: then it will be a hit 
[23:02] tjholowaychuk: creationix: I will try it out some day, once expresso is done I will 1.0 it and make a pretty site I bet it will double easily
[23:02] tjholowaychuk: silly peopel
[23:02] mape: Could be more designy people in the node community
[23:02] creationix: tjholowaychuk: I'm working on the uid stuff btw
[23:03] tjholowaychuk: k sweet
[23:03] creationix: mape: want to make a site for Ivy?
[23:03] creationix: ;)
[23:03] isaacs: mjr_ is one of those monkeys who write shakespear
[23:03] mape: creationix: tjholowaychuk makes prettier websites then I do
[23:03] isaacs: tjholowaychuk: that's why discoverable/intuitive apis are SO important.
[23:03] isaacs: ACTION is not great at that, but tries hard
[23:03] mape: (Which isn't saying much :P)
[23:04] creationix: remember try ruby from _why?
[23:04] creationix: that was smart
[23:04] isaacs: exactly
[23:04] creationix: we could do that with node and websockets pretty easy
[23:04] visnup has joined the channel
[23:04] isaacs: wasn't there some kind of "try node" thing floating around once upon a time?
[23:04] creationix: isaacs: I had trycoffee.org
[23:04] creationix: but not the same thing
[23:04] isaacs: ahh
[23:05] lachlanhardy has joined the channel
[23:05] mape: http://www.chromeexperiments.com/ but for node projects?
[23:05] creationix: but it wasn't just the fact that you had irb in the browser, it looked nice and had humor too
[23:05] freshtonic has joined the channel
[23:06] creationix: hmm, can a single httpServer instance listen on two ports at once?
[23:06] creationix: probably not I'm guessing
[23:07] bradleymeck_: should be able to
[23:07] bradleymeck_: if it doesnt
[23:07] creationix: how about ssl on one port, but plain on another
[23:07] bradleymeck_: wait nope, was wrong
[23:08] bradleymeck_: thats unfortunate :/
[23:08] mjr_: what interesting things would a "try node" site let people do?
[23:08] mjr_: like, in what way would it be more than just "try javascript", which you can do in your web browser already.
[23:08] jesusabdullah: oh geez, I remember google gravity
[23:08] jesusabdullah: that was nuts
[23:08] mscdex: heh... that's kind of neat... brower pong
[23:08] creationix: mjr_: yeah, not sure
[23:08] mscdex: http://stewdio.org/pong/
[23:08] mscdex: only works in chrome :->
[23:09] bradleymeck_: have a) interactive tutorials b) let you make tutorials c) introduce you in some way to callback based programming
[23:09] mape: mscdex: god damit...
[23:09] mape: with the fucking sound >_<
[23:09] mscdex: you can disable sound :\
[23:10] cfq has joined the channel
[23:10] bradleymeck_: aaaah that thing scares me
[23:10] mape: not when it starts as you load the page, and your speakers are loud from earlier
[23:10] mscdex: why are they that loud in the first place? heh
[23:10] huyhong: mscdex: works in safari 5 also
[23:11] bradleymeck_: odd it fails in my chromium
[23:11] technoweenie has joined the channel
[23:12] mape: I had an idea earlier, how hard it would be to create a site spy using websockets and an iframe
[23:12] mape: The customer/site includes a script, the owner gets a list of all active users, click on one, you get a popup resized to the size the user has and iframes the content
[23:12] bmizeran_ has joined the channel
[23:12] mape: then move the cursor based on websockets
[23:12] mscdex: hax!
[23:13] mape: Only thing that would be an issue is scrolling?
[23:13] mscdex: why would that be an issue?
[23:13] dgathright: scrolling can be detected & adjusted via JS
[23:13] mape: Or I guess you could solve that as well by having the popup the size of the window and make the iframe very very tall
[23:14] mape: Well you can't move the iframes scroll since it is crossdomain
[23:14] bradleymeck_: mmm that actualy wouldnt be too unreasonable, bah scrolling
[23:14] mape: But yeah, could just just scroll on the popup and overflow hide the very tall iframe
[23:14] mape: same result
[23:14] mscdex: why iframe the content in the popup?
[23:14] mape: mscdex: to get a correct representation of the site?
[23:15] mape: And not have to deal with proxying stuff
[23:15] mape: if I have it on spyonyourcustomers.com and your site is babydolls.com I would either have to proxy every single page or just use an iframe
[23:16] mape: iframe seems easier, then the only data that moves is the mouseposition/scroll info over websockets
[23:16] mape: So it would be really minimal with some good functionality, allow you to get a feel for how your users are using the site
[23:16] c4milo has joined the channel
[23:16] mscdex: scrolling an iframe programmatically works
[23:17] franksalim: mape, what do you mean by proxying stuff?
[23:17] _announcer: Twitter: "finishing my last commit. node.js is really cool!" -- ben. http://twitter.com/beanieboi/status/18556064283
[23:17] mape: mscdex: guess its doable even if it isn't the same domain? Just can't touch the DOM?
[23:17] mape: franksalim: mirror it
[23:18] softdrink has joined the channel
[23:18] franksalim: mape, ah, the actual content and not the cross-origin websocket connection?
[23:18] creationix: that's strange
[23:18] mape: franksalim: yeah, websockets work cross domain
[23:18] creationix: when I change my uid, and then create a child process, the child has the new uid, but I get reverted to the original uid
[23:18] derferman: mape: thank god
[23:18] franksalim: mape, i know, that's why i didn't understand why you brought up proxying :-)
[23:18] creationix: is that normal?
[23:18] mape: hehe 
[23:19] derferman: mape: I think that is one of the reasons I am so excited about websockets
[23:20] hassox: lads a quick q about web sockets
[23:20] mscdex: xhr can work cross-domain in newer browsers too
[23:20] mscdex: :-)
[23:20] hassox: will they work from one domain to another?
[23:20] franksalim: btw, it's more correct to say cross-origin than cross-domain
[23:20] mjr_: xhr often does, yes.
[23:20] creationix: tjholowaychuk: ok, fixed uid for connect
[23:20] hassox: nm i see
[23:20] franksalim: hassox, yes. from anything to anything else
[23:21] mjr_: Cookies might not work as expected, custom headers not really, and auth not really well.
[23:21] tjholowaychuk: creationix: wahoo, gid too?
[23:21] mscdex: it's more correct, but cross-domain isn't wrong ;-)
[23:21] franksalim: receiver chooses to accept or reject
[23:21] mjr_: But other than that, cross-domain XHR does sort of work on new browsers.
[23:21] creationix: tjholowaychuk: I assume so , it's the same chunk of code
[23:21] mscdex: xhr cors allowes cookies and custom headers
[23:21] mscdex: *allows
[23:21] tjholowaychuk: k cool
[23:21] creationix: tjholowaychuk: it wasn't changing at all for child processes
[23:21] satori: mscdex: but only for named origins, not *
[23:21] mjr_: mscdex: have you tried it?  The spec sure allows it, but there are all sorts of issues with the implementation.
[23:22] tjholowaychuk: creationix: hm.. swear i tested that
[23:22] creationix: tjholowaychuk: funny thing, I had to set it twice when spawning child processes
[23:22] creationix: before and after
[23:22] creationix: it would get reset somehow
[23:22] creationix: I wonder if that's a bug in ChildProcess.spwan
[23:22] mscdex: satori: eh? i've never personally used *, as i always just return what the client's origin is if the client is accepted
[23:22] tjholowaychuk: weird it should inherit shouldnt it
[23:22] mjr_: mscdex: and the API in the browser makes it impossible to tell that you've hit a CORS issue or a network issue.  Trying to do cookies, auth, or custom headers makes it way more brittle.
[23:22] creationix: tjholowaychuk: yeah, the new one inherited it, but then the original went back to root
[23:23] satori: I couldn't get cookies to work unless the origin was explicit
[23:23] creationix: I had to set it twice in the root process
[23:23] satori: but i didn't do exhaustive tests
[23:23] tjholowaychuk: creationix: ooo i see
[23:23] mjr_: satori: that's one of the big issues.  Sometimes it works if you specify allow-origin * and sometimes you have to supply the named origin
[23:23] creationix: ryah: should ChildProcess.spawn revert the uid of the parent process or is that a bug?
[23:25] mjr_: Hopefully WebSocket will get a more consistent implementation of this cross-domain stuff than XHR.
[23:25] franksalim: mjr_, i expect so, since origin is part of the design from day 1
[23:26] _announcer: Twitter: "nStore - easy database written for node.js in node.js  http://bit.ly/biSTJF #nodejs" -- Régis Gaidot. http://twitter.com/rgaidot/status/18556608945
[23:27] creationix: ACTION goes to update howtonode.org to the latest connect so it's not running as root
[23:31] creationix: hmm, can't pull from github to mediatemple
[23:31] creationix: strange
[23:32] [[zz]] has joined the channel
[23:37] segaway has joined the channel
[23:38] bmizerany has joined the channel
[23:39] bmizerany has joined the channel
[23:39] _announcer: Twitter: "Node.js been right to me for tonight, I can not paste it patern that I want ... short goodnight to those who are still there" [fr] -- Thibaut LE LEVIER. http://twitter.com/tiboll/status/18557450343
[23:40] creationix: tjholowaychuk: pid failure
[23:41] tjholowaychuk: creationix: ?
[23:41] creationix: it creates the pid folder as root, then changes to my user, then tries to put stuff in it
[23:41] creationix: instant death
[23:41] creationix: I'll see if I can fix it
[23:42] tjholowaychuk: i think that is what i ran into
[23:42] tjholowaychuk: which was why i put it higher
[23:42] creationix: tjholowaychuk: why do we have pid files anyway?
[23:42] tjholowaychuk: BUT i did not try it on a port < 1024
[23:42] creationix: we can't daemonize
[23:42] tjholowaychuk: creationix: for the status command and there is restart / stop commands as well
[23:42] creationix: I guess it's useful for the child processes
[23:42] creationix: ok
[23:42] tjholowaychuk: yeah we could take out support for the parent pid file
[23:42] tjholowaychuk: since its kinda useless
[23:43] tjholowaychuk: but you should be able to say:
[23:43] tjholowaychuk: $ connect -v -n 4
[23:43] tjholowaychuk: then
[23:43] tjholowaychuk: well connect -v -n 4 &
[23:43] tjholowaychuk: $ connect -n 4 status
[23:43] tjholowaychuk: etc
[23:44] creationix: also, I don't want to use log files unless the user ask for it
[23:45] creationix: what's the -v?
[23:45] tjholowaychuk: verbose
[23:45] creationix: oh, just verbose
[23:45] creationix: so when I run "connect -n 4" It creates a single error log and stdout log
[23:45] creationix: I'd rather that be stdout and stderr of the parent process
[23:46] charlenopires has joined the channel
[23:46] tjholowaychuk: ya im fine with that
[23:46] tjholowaychuk: its just more annoying to redirect
[23:46] tjholowaychuk: if desired
[23:46] tjholowaychuk: but since connect wont be standalone anymore its less useful to have the log functionality
[23:46] creationix: tjholowaychuk: well, if they specify a log folder, then use it
[23:47] creationix: same with pids I think
[23:47] creationix: I don't like creating folders without the user asking for them
[23:47] tjholowaychuk: ya thats fine
[23:47] bradleymeck_: ah, good ole websocket example http://github.com/bmeck/ConcurrentEditor
[23:48] admc_ has joined the channel
[23:48] admc has joined the channel
[23:49] bradleymeck_: if only i could run it off github itself
[23:49] pquerna: tjholowaychuk: in expresso, any ideas on how to do multiple chained http requests, ie, PUT file A, GET file A?
[23:49] pquerna: (have to wait for the PUT to finish OK before doing the GET)
[23:49] bradleymeck_ has left the channel
[23:50] tjholowaychuk: creationix: we should probably trap some sigs too and kill the children
[23:51] creationix: tjholowaychuk: it already seems to kill them just fine
[23:51] tjholowaychuk: pquerna: you have to manually queue things, its kind of a PITA  but that is the price of super fast tests :D
[23:51] creationix: pquerna: use Step
[23:51] tjholowaychuk: pquerna: I should add a callback to assert.response() though
[23:51] pquerna: tjholowaychuk: yeah, I'll prolly try using the async tools then
[23:51] _announcer: Twitter: ".@luddep Eases some pain. But Step just treat symptoms. @ryah says coroutines suck but yet the entire community try to emulate them. #nodejs" -- Carl Byström. http://twitter.com/cgbystrom/status/18558173494
[23:52] pquerna: tjholowaychuk: yes, a 3rd cb param would be helpful
[23:52] tjholowaychuk: it accepts a callback right now but not both a callback and object i dont think
[23:52] tjholowaychuk: it can be the second param
[23:52] pquerna: oh
[23:52] pquerna: i see what you mean
[23:52] pquerna: support both
[23:52] tjholowaychuk: yup
[23:52] tjholowaychuk: creationix: I get zombies
[23:52] creationix: tjholowaychuk: really, what os?
[23:53] tjholowaychuk: osx
[23:53] creationix: oh, when you use restart and friends
[23:53] olegp_ has joined the channel
[23:53] creationix: I'm not sure those make much sense without daemon support
[23:53] creationix: dunno
[23:54] _announcer: Twitter: "Watching @mtodd at the ATLRUG meetup talking about event machine and node.js" -- Charles Brian Quinn. http://twitter.com/SeeBQ/status/18558309761
[23:54] tjholowaychuk: they would still be useful with initd i think
[23:54] tjholowaychuk: but no i mean
[23:54] tjholowaychuk: connect -n 2 &
[23:54] tjholowaychuk: kill -9 the parent
[23:54] tjholowaychuk: and you should still have the children
[23:56] creationix: tjholowaychuk: yeah, I can see that leaving zombies
[23:56] creationix: but can you catch a kill -9
[23:56] kersny has joined the channel
[23:56] mklappstuhl has joined the channel
[23:56] tjholowaychuk: i dont think so
[23:57] tjholowaychuk: noo
[23:57] tjholowaychuk: but we could still have int
[23:57] tjholowaychuk: n term
[23:58] monde has joined the channel
[23:58] creationix: tjholowaychuk: yeah
[23:58] creationix: I just moved creating the log and pid files to after changing user
[23:58] monde has left the channel
[23:58] creationix: I don't feel like changing everything else at the moment
[23:58] creationix: that should be enough to get howtonode working without living as root
