[00:03] tekky: jesusabdullah: and throw()
[00:03] benburkert has joined the channel
[00:03] tekky: kinda all go together if you ask me :P
[00:06] jesusabdullah: tekky, stride: Thx dawgs
[00:06] jesusabdullah: ;)
[00:06] maushu: When everything flops. uncaughtException is your friend.
[00:07] omarkj: SubStack: You're not a fan of getting the error message passed into the callback ?
[00:07] tekky: np
[00:08] stride: I prefer the other way around, passing an error callback and by that handling error control to the caller
[00:09] jesusabdullah: I need to use uncaughtException :/
[00:09] omarkj: That would be cool as well.
[00:09] jesusabdullah: maushu: Is the nodebot yours? Do you have code up somewhere?
[00:09] jesusabdullah: I'd be interested in borrowing the twitter code <_<
[00:10] maxsilver has joined the channel
[00:10] maushu: Why people keep trying to rape announcer?! HE NEVER HURT ANYONE!
[00:10] jesusabdullah: :(
[00:10] jesusabdullah: I think announcer is awesome!
[00:10] maushu: http://graphnode.com/stuff/ircbot.js
[00:10] jesusabdullah: maushu: Awesome! Thanks
[00:10] SubStack: omarkj: indeed I am not a fan
[00:11] maushu: What you want is in checkTweets();
[00:11] beelzabub: in the http module, how can i respond with >1 headers that have the same name?
[00:12] jesusabdullah: maushu: Do you have to deal with the ircbot timing out?
[00:12] jesusabdullah: Or has it just not been a problem?
[00:12] maushu: The bot itself? Nope.
[00:12] jesusabdullah: Hmm
[00:12] maushu: Twitter? All the time.
[00:12] jesusabdullah: Ah
[00:12] jesusabdullah: I meant the bot itself
[00:12] jesusabdullah: I have a bot that drops connection within a few hours
[00:13] maushu: Thats weird.
[00:13] jesusabdullah: Probably not too hard to fix, but
[00:13] jesusabdullah: Well, it could just be my internets aren't so good
[00:13] jesusabdullah: being in Alaska and all
[00:13] jesusabdullah: horrendous ping sometimes
[00:13] maushu: Yup. Thats it.
[00:13] jesusabdullah: Yeah
[00:13] maushu: Announcer is in a great server, in the UK.
[00:13] jesusabdullah: I think maybe I can catch the timeout error and make it reconnect
[00:14] jesusabdullah: but I don't have a good background in error handling, so it'd be new for me :)
[00:14] jesusabdullah: *shrug*
[00:14] jesusabdullah: Anyways! Thanks maushu!
[00:14] maushu: *Shameless plug*: Similar to those I'm going to use on the startup.
[00:14] omarkj: You got one of those maushu ?
[00:15] maushu: Hmm?
[00:15] omarkj: Startup.
[00:15] maushu: http://www.graphnode.com/
[00:16] matt_c has joined the channel
[00:16] omarkj: Oh I love the last point.
[00:16] stride: jesusabdullah: which irc library are you using? I have a small reporting bot that has the same issue and I was going to implement reconnect for that anyway
[00:16] omarkj: Interesting stuff.
[00:17] maushu: omarkj, the last point is for people that don't trust my infrastructure and are afraid I might close down sooner or later.
[00:17] jesusabdullah: stride: Right now? node-IRC I think
[00:17] jesusabdullah: stride: You?
[00:17] maushu: NOT THAT IT WILL EVER HAPPEN. <- Optimist.
[00:18] jesusabdullah: maushu: Your web page won't scroll :S My screen is really short and I can't see the top of it!
[00:18] JimBastard: hrmm so the new version of broodmother is kinda working lol
[00:18] maushu: jesusabdullah, get a bigger screen. Fixed. NEXT!
[00:18] JimBastard: json api ftw
[00:18] omarkj: maushu: Hehe. And it's good for people living on islands in the middle of the ocean. Latency you see..
[00:18] stride: jesusabdullah: me too, version 0.1.2
[00:18] jesusabdullah: stride: Sweet :D
[00:18] Marak: stfu JimBastard 
[00:18] JimBastard: no u
[00:18] JimBastard: get out of my house
[00:19] jesusabdullah: ACTION & driving
[00:19] jesusabdullah: Thanks guys!
[00:19] jesusabdullah: stride: Keep me posted, I'd definitely be interested
[00:19] jesusabdullah: stride: http://github.com/jesusabdullah/lulzbot
[00:19] stride: jesusabdullah: will do
[00:19] maushu: omarkj, still trying to find honest and transparent ways of keeping the users here with that last option.
[00:20] maushu: Maybe automatic updates to the framework  in their server or something similar.
[00:20] omarkj: Ah, yeah, I see your problem.
[00:20] siedrix: does node has sha-1?
[00:20] omarkj: That could be tricky.
[00:21] maushu: For now I'm just hoping my product is so awesome that they come back again and again and never unregister.
[00:21] maushu: jesusabdullah, what is the size of your screen?
[00:22] hassox has joined the channel
[00:23] brianmario has joined the channel
[00:24] dylang has joined the channel
[00:26] maushu: jesusabdullah, AhAH!
[00:26] maushu: I was wondering on how could you use Jerk and found out gf3 did add functions to the outside of the watch_for.
[00:27] maushu: (When I implemented announcer, there weren't any functions like "say" on the client.)
[00:27] maushu: That is why I went the high-road and used node-IRC instead.
[00:27] jakehow has joined the channel
[00:28] maushu: Yeah, it was this one: http://github.com/gf3/Jerk/commit/66f7cee82af69e276c5ba7e0d2f19ae6b3bc305f
[00:29] maushu: Maybe I should shift to the Jerk lib now.
[00:32] quirkey has joined the channel
[00:35] mscdex: beelzabub: you have to use an array instead of an object, like: ['Content-Type: text/html', 'Set-Cookie: foo=bar', 'Set-Cookie: nodejs=rules']
[00:35] stride: jesusabdullah: the irc library obviously has a retryCount parameter you can set in the options (see 3rd constructor param) doesn't react on the error event, if that doesn't help I guess the connections error event has to be evaluated, too
[00:35] beelzabub: thanks mscdex
[00:36] beelzabub: last minute fire came up because there's a 3rd party service that doesn't use standard http headers
[00:37] stride: jesusabdullah: I'm trying retryCount: 3 now, though that will only work if the end event is called, time will tell :)
[00:42] wilmoore has joined the channel
[00:43] ryan[WIN] has joined the channel
[00:46] EyePulp has joined the channel
[00:49] bmesh has joined the channel
[00:52] stride: jesusabdullah: so, I just checked with iptables, retryCount actually works in the ping timeout scenario as well. should help you, too
[00:55] beelzabub: mscdex: that didn't work
[00:57] _announcer: Twitter: "asynchronous chat was node.js + express. You can easily enjoy this event on the server side! How about ... DB is going Redis" [ja] -- ishikawan(21). http://twitter.com/scraperonce/status/20101019419
[01:02] dannycoates has joined the channel
[01:02] mscdex: beelzabub: my fault, it's an array of pairs instead: [['Content-Type', 'text/html'], ['Set-Cookie', 'foo=bar'], ['Set-Cookie', 'nodejs=rules']]
[01:03] derferman has joined the channel
[01:03] beelzabub: yup 
[01:03] beelzabub: thanks
[01:03] beelzabub: was just looking through the code
[01:08] ashleydev has joined the channel
[01:11] dnolen has joined the channel
[01:11] n3v3le has joined the channel
[01:13] dipser has joined the channel
[01:14] n3v3le has joined the channel
[01:16] ditesh|cassini has joined the channel
[01:22] dylang has joined the channel
[01:24] dannycoates has left the channel
[01:26] n3v3le has joined the channel
[01:30] n3v3le1 has joined the channel
[01:31] gwoo has joined the channel
[01:31] hassox: guys... 
[01:31] hassox: I've I'm writing an app using Mongoose
[01:32] hassox: would it be considered bad form to put Mongoose on the global object so I don't have to keep requireing it in every file?
[01:32] SubStack: yes
[01:34] softdrink has joined the channel
[01:37] hassox: SubStack: so I should be requireing everything in every file?
[01:37] hassox: and, why is it considered bad form?
[01:38] sudoer has joined the channel
[01:40] mscdex: hassox: there's no performance hit for multiple requires since require uses a cache
[01:40] hassox: sure, but I have this dirty big list of requires at the top of every file
[01:41] hassox: so, why is attaching things, which are cached (and therefore global)  to the global scope considered bad form?
[01:41] tmpvar has joined the channel
[01:41] dipser: what am i doing wrong :(  i tried to install the example chat from node.js but i cant connect to server..
[01:42] root__: check your firewall ports
[01:42] joshdulac: woops... didnt realize my nick was root
[01:42] SubStack: hassox: you can probably refactor your program to be pretty
[01:43] hassox: SubStack: but that still doesn't explain why it's a bad thing
[01:43] hassox: the require cache is global anyway, so why is it even considered a different thing?
[01:44] _announcer: Twitter: "Gettin insane fired up about @node_knockout... #nodejs rockin it." -- hij1nx. http://twitter.com/hij1nx/status/20104009682
[01:44] SubStack: hassox: http://en.wikipedia.org/wiki/Don't_repeat_yourself is why
[01:45] hassox: SubStack: ?
[01:45] hassox: aren't I repeating myself by requiring the files?
[01:45] hassox: i don't see how DRY is relevant in this question
[01:46] dipser: joshdulac: i have opened it for 8001: http://84.132.56.145/~dipser/Node/
[01:46] joshdulac: dipser: on both the client and the server?
[01:47] dipser: yes
[01:48] joshdulac: hmm
[01:48] joshdulac: are they on two different boxes?
[01:48] dipser: its on my mac
[01:48] dipser: both
[01:48] SubStack: hassox: perhaps http://www.eetimes.com/discussion/break-point/4025723/A-pox-on-globals is more appropriate
[01:49] joshdulac: oh true. hmmm, i havent played around with the example code
[01:49] joshdulac: it might not be updated for the latest release of node, if that's what your using
[01:49] hassox: SubStack: thanx
[01:49] hassox: ACTION reads
[01:49] dipser: yes im using the latest version
[01:49] dipser: from yesterday
[01:51] dipser: joshdulac do you know a fresh example with chat/broadcasting or something to start with?
[01:51] dipser: every script i found is out of date ^^
[01:52] joshdulac: hmm, i havent tried any chat applications yet
[01:52] joshdulac: one second
[01:52] SubStack: the point about interrupts and reentry seems especially relevant to node
[01:52] hassox: what do you mean/>?
[01:52] foobarfighter has left the channel
[01:53] foobarfighter has joined the channel
[01:53] jchris has joined the channel
[01:53] joshdulac: dipser: here are a ton of node modules, check out the node-chat one, it says its simple: http://wiki.github.com/ry/node/modules
[01:53] hassox: SubStack: I guess the 'globals' I'm talking about aren't values as such, but more like namespaces of other languages
[01:53] hassox: the top level namespaces, like modules or classes you might find in ruby / java
[01:53] joshdulac: dipser: node-chat repo is  here: http://github.com/scottgonzalez/node-chat
[01:53] hassox: 0nce declared, thses top level namespaces are available everywhere
[01:54] Byron has joined the channel
[01:54] dipser: joshdulac: thank you
[01:54] joshdulac: dipser: oh wait, im guessing thats the one your using?
[01:54] dipser: no
[01:54] joshdulac: dipser: oh no its different =)
[01:55] SubStack: hassox: still it makes your program more tightly coupled
[01:55] hassox: sure, kinda
[01:55] hassox: the fact that require is cached, has the same effect
[01:55] SubStack: not at all
[01:55] hassox: how sso
[01:56] SubStack: if somebody else looks at your code and sees YourGlobal in a source file
[01:56] SubStack: they won't have any idea where it came from
[01:56] SubStack: also you can't write unit tests that test just that lib without reintroducing YourGlobal
[01:56] bradleymeck2 has joined the channel
[01:57] hassox: well I'm only talking about library objects, like Mongoose
[01:57] hassox: what do you mean test can't be written for it?
[01:57] hassox: why not?
[01:57] SubStack: that's what I was talking about
[01:57] SubStack: hence the capital Y
[01:58] hassox: the only difference I can see is that when you open a file, you can see that Mongoose === require(
[01:58] SubStack: hassox: it's possible to write tests, it's just much harder when you need to recreate some global state
[01:58] hassox: require('mongoose').Mongoose
[01:58] SubStack: why do you need mongoose to be littered across a bunch of source files anyways
[01:59] hassox: my model definitions, my access to those models 
[01:59] hassox: everything requires mongoose for this app
[01:59] SubStack: seems like poor abstraction
[01:59] hassox: er..
[01:59] hassox: what would you suggest
[01:59] SubStack: I haven't used mongoose
[01:59] hassox: I could put everything in one file...
[01:59] hassox: but that has other issues then
[02:00] hassox: by seperating the logic out a bit, it makes each file grokable
[02:00] hassox: and the whole app organised
[02:00] pufuwozu has left the channel
[02:00] hassox: the fact that each file needs to use mongoose (it's a mongo backed app) shouldn't come as a surprise
[02:00] dipser_ has joined the channel
[02:02] hassox: brb
[02:04] dmcquay has joined the channel
[02:04] jwcooper has joined the channel
[02:06] meso_ has joined the channel
[02:07] mattly has joined the channel
[02:08] devinus has left the channel
[02:11] mscdex: hassox: well if you have an MVC design, then you should only need to really include it in one file
[02:12] SubStack: in your models: exports.model = { /* ... */ }, in your db driver: mongoose.model('User', User.model)
[02:12] SubStack: or some such
[02:13] _announcer: Twitter: "@robcthegeek Thought of also picking up Node.js? I've dabbled, but want to dig further into it." -- Rob Mason. http://twitter.com/iamcalledrob/status/20105825387
[02:13] _announcer: Twitter: "分享 Node.js: JavaScript on the Server http://tinyurl.com/27utc7j http://plurk.com/p/6otij1" -- Wing. http://twitter.com/darkwings/status/20105827613
[02:14] n3v3le has joined the channel
[02:15] isaacs has joined the channel
[02:17] joshbuddy has joined the channel
[02:19] Tim_Smart has joined the channel
[02:20] JimBastard: woot
[02:20] joshdulac: JimBastard: success?
[02:20] JimBastard: great success
[02:21] JimBastard: i can spin up node instances to serve requests in real time
[02:21] joshdulac: Apache's default great success! ?
[02:21] JimBastard: :-D
[02:21] joshdulac: instances - you mean over multiple cores?
[02:22] JimBastard: multiple cores on multiple machines
[02:22] joshdulac: delightful
[02:22] JimBastard: indubiously
[02:22] JimBastard: just gotta keep working on it
[02:22] joshdulac: who are you hosting the boxes with?
[02:22] JimBastard: gonna push the new version soon
[02:22] JimBastard: rackspace
[02:23] joshdulac: nice, same here
[02:23] Marak: this is all part of http://github.com/nodejitsu
[02:23] joshdulac: version? whats your gitrepo user
[02:23] Marak: and the broodmother
[02:23] kreyman has joined the channel
[02:23] JimBastard: http://github.com/Marak/broodmother
[02:23] JimBastard: but thats just an outdated read me
[02:23] JimBastard: more stuff coming
[02:24] mattly has joined the channel
[02:24] jlilly: is there a debugger for node?
[02:24] bradleymeck2: there a good way to make it so you cant set the properties of an Object that are currently there (including prototyped values)?
[02:24] jlilly: specifically, I want to breakpoint at a specific part of code and muck around in it.
[02:24] JimBastard: frankenbugger? 
[02:24] bradleymeck2: http://github.com/dannycoates/node-inspector is easy enought to set up
[02:24] joshdulac: JimBastard: sounds like a great idea
[02:25] bradleymeck2: requires chrome or a webkit browser though
[02:25] joshdulac: JimBastard: so its once instance per domain
[02:25] joshdulac: ?
[02:25] JimBastard: joshdulac: depends how much traffic that domain is getting :-)
[02:25] matt_c: ACTION hasn't looked at it but watched http://github.com/smtlaissezfaire/ndb the other day too.
[02:25] joshdulac: JimBastard: Ok, so its not limited?
[02:25] JimBastard: broodmother can spawn more instances 
[02:25] joshdulac: to one
[02:25] JimBastard: nope, but you need to have your application state maintained somewhere
[02:25] JimBastard: like the database
[02:26] joshdulac: true
[02:26] JimBastard: we are still actively developing a lot of stuff
[02:26] joshdulac: how do you handle the load balancing?
[02:26] JimBastard: with javascript
[02:26] joshdulac: lol
[02:26] JimBastard: :-)
[02:27] joshbuddy has joined the channel
[02:29] Byron has left the channel
[02:29] siedrix has joined the channel
[02:29] bradleymeck2: cant reveal all your secrets? :(
[02:30] admc has joined the channel
[02:33] tmpvar has joined the channel
[02:35] JimBastard: id like to but it would be epic frustrating to explain it over chat
[02:35] bradleymeck2: yo tmpvar
[02:35] JimBastard: gotta make more graffles
[02:36] kreyman has joined the channel
[02:36] bradleymeck2: i really wish we had a simple image gallery in node
[02:36] JimBastard: ? 
[02:36] JimBastard: like full app?
[02:36] bradleymeck2: yea full
[02:36] JimBastard: build it on connect with the assett manager
[02:36] JimBastard: and use yayquery ui
[02:36] JimBastard: bam
[02:37] bradleymeck2: uploads / zips up stuff together, havent used yayquery yet
[02:37] JimBastard: jQuery UI
[02:37] JimBastard: sorry
[02:37] JimBastard: there are other ones too
[02:37] bradleymeck2: im busy porting junk in c++ land
[02:38] bradleymeck2: cant figure out a few things in oniguruma, like how to make it so it wont do overlaps
[02:38] ezmobius has joined the channel
[02:39] powdahound has joined the channel
[02:39] JimBastard: "message":"EAFNOSUPPORT, Address family not supported by protocol family"
[02:39] JimBastard: hrmmmm
[02:39] joshdulac: just use processing.js
[02:39] bradleymeck2: trying to do multicasting?
[02:39] joshdulac: @Jim
[02:40] joshdulac: for your graphic remarks
[02:40] joshdulac: not your error
[02:40] JimBastard: imacomputer
[02:40] bradleymeck2: so that makes you... a gay robot
[02:44] mscdex: stop all the downloadin'!
[02:47] jamescarr: damn
[02:47] jamescarr: a day full of painting
[02:47] jamescarr: JimBastard, re: international payment gateways...
[02:48] jamescarr: did you find a solution? I tried to tell you after you left that paypal payflow pro works in the US, GB, AU, NZ, and one other place ;)
[02:48] mshadle has joined the channel
[02:49] _announcer: Twitter: "說 http://plurk.com/p/6otij1 ([ReP]) @darkwings: Node.js: JavaScript on the Server http://tinyurl.com/27utc7j #... http://plurk.com/p/6ou2ko" -- ericpi. http://twitter.com/ericpi/status/20108003248
[02:49] jamescarr: also got AIM payment method working with Authorize.net, but left off at some mad refactoring to combine some functionality 
[02:49] mshadle: anyone used node.js w/ nntp or usenet or anything? as a client?
[02:49] JimBastard: jamescarr: a lot of people were saying something here last night
[02:49] JimBastard: its in the logs
[02:50] JimBastard: mshadle: whats that
[02:50] JimBastard: http://en.wikipedia.org/wiki/Network_News_Transfer_Protocol ?
[02:50] mshadle: yes
[02:50] bmesh has joined the channel
[02:51] mshadle: i believe it's all plaintext protocol. so it wouldn't be -too- hard. but node was compared against python twisted and such, except it doesn't crap out under load like twisted does
[02:51] tilgovi has joined the channel
[02:52] joshdulac: mshadle: im sure its possible, but i havent seen any modules on github for it
[02:52] joshdulac: mshadle: someone made a bittorrent client in node, so a nntp wouldnt be hard
[02:52] jamescarr: JimBastard, I'll try to wrap up some of my recombination efforts and get an initial push to github 
[02:52] mshadle: i was looking at making it quickly on my own. no clue if i could get something really cool
[02:52] JimBastard: mshadle: it would probably be somewhat easy to build a module to work with that service 
[02:52] JimBastard: jamescarr: thats awesome man, you are the node payment master
[02:52] JimBastard: :-)
[02:53] mshadle: im having a probem with now just making a simple tcp connection to memcached and printing stats
[02:53] jamescarr: I'll take a look at the logs to see what I missed... for the most part I have a haphazard framework that is coming together that makes it easy to define new modules ;)
[02:53] JimBastard: api > code
[02:53] JimBastard: you can always refactor the code 
[02:55] bradleymeck2: refactor the  api! make the devs suffer!
[02:59] jchris has joined the channel
[03:00] Tobsn has joined the channel
[03:00] Tobsn: hu
[03:00] isaacs has joined the channel
[03:01] Tobsn: JimBastard, http://github.com/tobsn/flexihash.js
[03:03] JimBastard: Tobsn: cool
[03:03] Tobsn: :)
[03:03] JimBastard: whats the point of this again
[03:03] Tobsn: consistent hashing
[03:04] Tobsn: well not much of a reason behind it... just wanted to try out nodejs "code"
[03:04] mtodd has joined the channel
[03:04] Tobsn: so i chose that as first entry into coding for nodejs... because there was no flexihash implemention yet
[03:05] joshdulac: great work!
[03:05] joshdulac: good thing it was released under MIT license
[03:05] Tobsn: its a 1:1 port of the php version
[03:05] Tobsn: well i just copied the comments :P
[03:05] Tobsn: oooh
[03:05] Tobsn: yeah
[03:05] Tobsn: youre right
[03:05] Tobsn: :D
[03:05] Tobsn: well either way i guess nobody would give a damn
[03:06] joshdulac: well its free code - its permitted to be used in propreitary software
[03:06] mscdex: mshadle: there's an nntp module already
[03:06] joshdulac: so by refactoring it in JS is great - and you linked back to the author / license
[03:07] joshdulac: so your good
[03:07] Tobsn: :)
[03:07] mscdex: well, there's a couple... but they haven't been updated in awhile
[03:07] joshdulac: how long did it take you
[03:07] mscdex: mshadle: here's the most recent one: http://github.com/mikeal/node-nntp
[03:07] Tobsn: the flexihash thing?
[03:08] Tobsn: maybe 4 hours of actual work with testing (crc32 was a bit wacky and i didnt found the bug etc.) but like a week of reading about nodejs etc.
[03:08] Tobsn: to really grasp it
[03:08] mikejs has left the channel
[03:08] joshdulac: cool
[03:09] Tobsn: also i had to copy and paste and alter a couple tiny scripts for the functions that are implemented as standard in php... like in_array, array_unique, array_keys, array_values and ksort()
[03:09] Tobsn: but it works now 1:1 like the php version
[03:09] joshdulac: ya, that's what i figured would have to take the longest time
[03:09] joshdulac: PHP is such a massive language
[03:09] Tobsn: well not really
[03:09] Tobsn: phpjs.org is pretty helpful
[03:09] CIA-77: node: 03Danny Coates 07master * rdc8c079 10/ (lib/module.js src/node.cc): remove node::CheckBreak in favor of using the v8 debugger js object - http://bit.ly/aTzClw
[03:10] Tobsn: (see comments on the functions further down starting with flexihash.prototype.__* )
[03:10] joshdulac: oh. i totally forgot about phpjs
[03:10] Tobsn: yeah :)
[03:11] mscdex: it's too bad there isn't a phpjs function for parsing a PHP session
[03:11] mscdex: unserialize isn't compatible with sessions :\
[03:11] Tobsn: ;)
[03:11] Tobsn: wait
[03:11] Tobsn: what?
[03:12] joshdulac: i dont think that is possible
[03:12] Tobsn: why not?
[03:12] Tobsn: i think you can easy share sessions between nodejs and php
[03:12] mscdex: no
[03:12] Tobsn: no?
[03:12] Tobsn: do tell :)
[03:12] mscdex: unless you write your own PHP session parser
[03:12] mscdex: i've already looked into this
[03:13] Tobsn: but its just a serialized array?
[03:13] mscdex: it's not
[03:13] Tobsn: isnt it?
[03:13] Tobsn: hu?!
[03:13] mscdex: that's what i thought at first, it's just a serialize()'ed object
[03:13] mscdex: but it's different
[03:13] Tobsn: whats different?
[03:13] Tobsn: wait, im gonna try that out
[03:13] mscdex: take a look at some of your PHP session files
[03:14] Tobsn: first i gonna find out where the heck that thing stores them right now on one of my dev nodes
[03:14] Tobsn: oh and i gotta turn off memcache sessions for that node
[03:14] jamescarr: hmmm...
[03:14] mscdex: you can also scroll down to the comments section here: http://phpjs.org/functions/unserialize
[03:15] Tim_Smart has joined the channel
[03:15] _announcer: Twitter: "Navicat is finished on the pushdown. . . Continue to tinker with NodeJS" [zh-CN] -- Kristy Swan. http://twitter.com/LonelySwan/status/20109634988
[03:15] mscdex: either phpjs isn't an identical implementation of unserialize in php, or php unserializes sessions some other way than just a call to unserialize
[03:16] mscdex: ACTION shrugs
[03:16] Tobsn: well thats pretty easy to find out
[03:17] Tobsn: PHPAPI ps_module *_php_find_ps_module(char *name TSRMLS_DC);
[03:17] Tobsn: 227	PHPAPI const ps_serializer *_php_find_ps_serializer(char *name TSRMLS_DC);
[03:17] Tobsn: thats how the session.h implements it
[03:17] mscdex: is that what unserialize() uses?
[03:19] Tobsn: if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {
[03:19] Tobsn: 823	                                php_set_session_var(name, namelen, current, &var_hash  TSRMLS_CC);
[03:19] jamescarr: I'm in vows hell
[03:19] Tobsn: php_var_serialize(&buf, struc, &var_hash TSRMLS_CC);
[03:19] Tobsn: it looks like it
[03:19] mscdex: so then phpjs's implementation is sucking
[03:19] Tobsn: http://svn.php.net/viewvc/php/php-src/trunk/ext/session/session.c?view=markup
[03:20] Tobsn: probably
[03:20] Tobsn: lemme see if i find the php_var_un/serialize functions
[03:20] jamescarr: Error: EISDIR, Is a directory
[03:20] jamescarr: :(
[03:20] Tobsn: they should be in the standard ext
[03:20] jamescarr: vows can't handled nested directories????
[03:21] Tobsn: http://svn.php.net/viewvc/php/php-src/trunk/ext/standard/php_var.h?revision=301143&view=markup
[03:21] Tobsn: there it is
[03:21] CIA-77: node: 03isaacs 07master * r65037ee 10/ (lib/path.js test/simple/test-path.js): (log message trimmed)
[03:21] CIA-77: node: Don't let path.normalize get above the root.
[03:21] CIA-77: node: Any path.join or path.normalize that starts with a / will not go "above" that
[03:21] CIA-77: node: after normalization. This is important because /../foo is almost *always* some
[03:21] CIA-77: node: sort of error, and doesn't match the corollary in sh: `cd $p; pwd`
[03:21] CIA-77: node: At the worse, this can be a vector for exploits, since a static file server
[03:21] CIA-77: node: might do path.join(docroot, path.normalize("/"+req)) to get the file. If the
[03:21] Tobsn: well not really
[03:21] Tobsn: http://svn.php.net/viewvc/php/php-src/trunk/ext/standard/var_unserializer.c?view=log
[03:21] Tobsn: there it is
[03:22] Tobsn: holy crap.
[03:23] Tobsn: the person who wrote that must be braindead now
[03:23] CIA-77: node: 03Brian 07master * r71009ad 10/ src/node.js : Allow signals to be used with process.on in addition to process.addListener. - http://bit.ly/ddVyYw
[03:24] mscdex: \o/
[03:25] mscdex: go nodebuilder go!
[03:25] Tobsn: mscdex, http://php.net/manual/en/function.unserialize.php - just read the comments on the implemented function... looks like even the working php function is broken half way
[03:27] SubStack: "Someone strap down Jani and give him a sedative please."
[03:27] mscdex: ?
[03:27] SubStack: in that commit log for var_unserializer.c
[03:28] mscdex: oh heh
[03:28] powdahound: That's a crazy file...
[03:29] mscdex: i'm tempted to fix phpjs's unserialize...
[03:29] Tobsn: 5G1vxy2PKsdqHPehbz7m-PI0cBrBg2lsxOZwSLtk60g.
[03:29] mshadle: i love plaintext protocols
[03:29] Tobsn: what the hell is htat
[03:29] mscdex: mshadle: over SSL right? ;-)
[03:29] Tobsn: thats in my session file
[03:30] mscdex: Tobsn: how is it shown?
[03:30] mshadle: mscdex: talk about an oldschool name
[03:30] Tobsn: shown?
[03:30] mscdex: Tobsn: context?
[03:30] Tobsn: cat sessionfile
[03:30] mshadle: mscdex: ssl would be the next step :p i'm trying to see if i can make a node.js client for nntp
[03:30] mscdex: oh, you mean the filename?
[03:30] Tobsn: :/var/lib/php5# cat sess_9d7ddfa3f6851ca7eb8edd061692c5cc
[03:30] Tobsn: 5G1vxy2PKsdqHPehbz7m-PI0cBrBg2lsxOZwSLtk60g.
[03:30] mscdex: oh
[03:30] Tobsn: i stored "test":"test"
[03:31] mscdex: Tobsn: no idea... never seen that before
[03:31] mshadle: are you running suhosin
[03:31] mshadle: suhosin encrypts session files
[03:31] Tobsn: which encoding has a dot at the end and uses -
[03:31] Tobsn: ooh
[03:31] jamescarr: nl2br()
[03:31] jamescarr: fuck
[03:31] mscdex: mshadle: you saw the link for node-nntp?
[03:31] Tobsn: yeah
[03:31] Tobsn: its suhoshin
[03:31] mshadle: i wasn't sure it was by default
[03:31] jamescarr: I forgot all about some of the nonsense there
[03:31] mshadle: mscdex: ooh. no
[03:31] Tobsn: well how do i turn off suhoshin haha
[03:31] mscdex: mshadle: here's the most recent one: http://github.com/mikeal/node-nntp
[03:31] mshadle: got it
[03:32] mshadle: Tobsn: probably only from php.ini level
[03:32] mscdex: mshadle: mikeal frequents here so maybe you can bug him about it ;-)
[03:32] jamescarr: cloudhead, hey, is therea mailing list for vows?
[03:32] Tobsn: well... couldnt you just use the php CLI to access the data somehow
[03:32] Tobsn: mshadle, that was a joke - cause i think nobody actually ever wanted to deactivate it again :P
[03:32] mshadle: yah php cli should kick in suhosin
[03:32] bmesh has joined the channel
[03:33] Tobsn: im using lighttpd v2 on that box with fcgi php... maybe you could use php command line over nodejs to get session data
[03:33] Tobsn: hmm.
[03:33] Tobsn: gonna talk to stefan
[03:33] Tobsn: he coded suhoshin he probably knows if its possible
[03:33] mscdex: if you're going to do that, you may as well just conver it over to json while you're at it
[03:33] mscdex: heh
[03:33] Tobsn: ewll
[03:33] Tobsn: well
[03:33] mshadle: mscdex: this rocks. he probably knows a HELL of a lot more of node.js than me ;)
[03:33] mshadle: definitely more
[03:34] mshadle: ha. nntp to couch!
[03:34] Tobsn: if suhoshin encodes or crypts it youre probably at a dead end here if youre not going through the php binary
[03:34] mikeal: wow
[03:35] mikeal: sys.debug totally breaks code sometimes
[03:35] mscdex: there he is :p
[03:35] mshadle: correct you'd want to use the php binary
[03:35] mshadle: mikeal: ++ for nntp
[03:35] mikeal: if i use it I completely lose my closure in one place
[03:36] mshadle: mikeal: i was thinking it would be neat to use node's non-blocking nature and seemingly less bottlenecked architecture to make a better usenet client. i'm using sab right now and it chokes under too much load. possibly due to how it stores data
[03:38] mikeal: i have some code
[03:38] mikeal: i wrote it when I hadn't written a ton of node code yet
[03:38] mikeal: so it might suck
[03:38] mshadle: using mysql or sqlite or whatever would probably be a lot better, i am not sure the sab shit uses a decent datastore
[03:39] mikeal: http://github.com/mikeal/node-nntp
[03:39] mshadle: yeah
[03:39] mikeal: i have code that sticks it all in to CouchDB
[03:39] mshadle: i grabbed it. it's more indepth than the code i wrote :p
[03:39] mshadle: which was just -barely- getting into logging in, GROUP and BODY
[03:40] mshadle: ACTION would like to be able to define a chunk of RAM, stick all the stuff in there, and flush it to disk only so often
[03:42] mikeal: anyone know of a good i18n library for node
[03:42] mikeal: http://wiki.github.com/ry/node/modules
[03:42] mikeal: not seeing anything
[03:42] Tobsn: something completely different
[03:42] Tobsn: http://sphotos.ak.fbcdn.net/hphotos-ak-snc1/hs261.snc1/8819_1208209736369_1562479483_545306_3216847_n.jpg
[03:42] mikeal: mshadle
[03:42] Tobsn: ;)
[03:42] mikeal: should be easy
[03:44] mscdex: here's another unserialize() that might work better: http://www.phpguru.org/downloads/PHP_Unserialize/PHP_Unserialize.js
[03:44] Tobsn: im writing stefan right now if its possible to get the data through php in command line or if there is a way to read the crypted stuff
[03:44] mscdex: well, maybe not, nevermind
[03:44] bradleymeck2: mshadle, buffers?
[03:45] mscdex: Tobsn: just start the session, set the session key, then convert $_SESSION to json and echo it to stdout
[03:45] mshadle: mikeal: yah. i'm sure
[03:45] Tobsn: well you want to read already existing ones
[03:45] bradleymeck2: mikeal, i know grasshopper has support for it, dont know if it can be extracted ez
[03:45] Tobsn: if i want my own session system i could just build it
[03:46] mshadle: i just don't know node much. i could do the shit out of it in php :)
[03:46] Tobsn: i thought its about passing session data back and forth
[03:46] elliottcable: Is anybody using node-inspector?
[03:46] bradleymeck2: new Buffer(bytesize)
[03:46] elliottcable: I can’t find the “Load Unpacked Extension” control in Chrome
[03:46] mshadle: i was thinking of writing it in php, but i don't think it would be extremely performant
[03:46] bradleymeck2: elliottcable, i just installed it last night, i didnt need any extension?
[03:47] _announcer: Twitter: ":O A Chrome extension for debugging Node.js stuff? WAY TOO NEAT! http://drp.ly/1sQb9a" -- ell.io. http://twitter.com/elliottcable/status/20111633651
[03:48] mscdex: elliottcable: you have to click the developer mode link
[03:48] mscdex: to see that option
[03:48] Tobsn: hehe... i know stefan kinda well cause we both got almost sued for hacking from the same guy because we accessed it at the same time messing around with his server - the guy was kinda a "security specilist" who was on TV shows all the time... we messed around with his php file only over http and retrieved all his customer data including addresses, bank accounts etc. etc. and sent it to the biggest online news sites - our two ips where the fi
[03:49] elliottcable: bradleymeck2 3» it’s in the Extensions panel, I missed it. Hah.
[03:49] elliottcable: mscdex 3» ^^
[03:49] mshadle: i would like to see most of suhosin/etc. ot push into php core
[03:49] Tobsn: i just saw they included php-fpm into the core
[03:49] Tobsn: core release
[03:49] mikeal: mshadle: check out the usernetToCouch.js in test/
[03:49] mshadle: yeah i'm peakin
[03:49] mshadle: tobsn: i run php-fpm.org ;)
[03:49] elliottcable: alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --enable-experimental-extension-apis'
[03:50] Tobsn: oh
[03:50] Tobsn: i just wrote an email to antony yesterday
[03:50] mshadle: well, php-fpm.org is slowly becoming irrelevant
[03:51] mshadle: as it's in core...
[03:51] Tobsn: what i want is a node-fpm
[03:51] mikeal: mshadle: unfortunately you have to convert damn near every buffer chunk to a string
[03:51] mshadle: isn't that just launching node foo.js where foo.js creates a threaded instance
[03:51] mikeal: because almost all of the usernet wire protocol is variable length
[03:51] Tobsn: yeah there is multinode or something
[03:51] elliottcable: usernet?
[03:51] elliottcable: hahaha
[03:51] Tobsn: that basically does that
[03:51] mikeal: so you have to part out the special characters from each one
[03:51] Tobsn: also spark
[03:51] bradleymeck2: im not sure node fits the cgi model
[03:51] mikeal: haha
[03:51] mikeal: man, i can't type
[03:51] Tobsn: but it all is sorta... well... written in javascript
[03:51] Tobsn: ;)
[03:52] mshadle: http://www.sitepen.com/blog/2010/07/14/multi-node-concurrent-nodejs-http-server/
[03:52] mshadle: i found that
[03:52] Tobsn: yeah but something more stable would be interesting
[03:52] mshadle: yeh.
[03:52] Tobsn: like php-fpm
[03:52] mshadle: i think a node-based binary downloader would only benefit if it could be multiple children
[03:52] Tobsn: its like monitoring node.js instances with a node.js instance of monit.js
[03:53] Tobsn: makes no sense
[03:53] siedrix: hi, im getting a "fs:189
[03:53] siedrix:   var r = binding.read(fd, buffer, offset, length, position);
[03:53] siedrix: " error, any idea what is the problem?
[03:53] Tobsn: i mean if it is the same project - why not
[03:53] joshdulac: what is fd
[03:53] bradleymeck2: file descriptor
[03:53] joshdulac: oh duh
[03:53] Tobsn: file descirptor
[03:53] Tobsn: FD
[03:53] mshadle: lots of typos
[03:54] Tobsn: ;)
[03:54] Tobsn: anyway, im gonna ask antony... maybe hes bored - he wrote hes on vacation so.. maybe haha
[03:54] bradleymeck2: siedrix, you are probably sending bad arguments somehow, (perhaps trying to read a non-existant file?)
[03:55] Tobsn: joshdulac, got a msg on github back from the flexihash guy "Nice! :)"
[03:55] Tobsn: hehe
[03:56] joshdulac: excellence!
[03:56] siedrix: ok, let me check...
[03:56] joshdulac: watch him convert to node now
[03:56] joshdulac: well im off work now
[03:56] joshdulac: peace out
[03:57] Tobsn: bye
[03:57] kriszyp_ has joined the channel
[03:58] mshadle: WOW. nntp and node are both 4 characters.
[03:58] jlilly: cloudhead: ping? Is it possible to pass vows a custom reporter? http://dpaste.com/224105/ -- that's my attempt which uses dot-matrix.
[03:58] Tobsn: btw. does anyone know a good client side template engine? kinda jsonML stuff
[03:58] mshadle: so i was typing the wrong one.
[03:59] isaacs: hassox: dude, awesome package name: http://registry.npmjs.org/N
[03:59] isaacs: hassox: you might want to consider putting a "description" in your package.json though ;P
[03:59] bradleymeck2: tobsn, JUP works, and there is json template
[03:59] Tobsn: yeah but JUP... idk
[03:59] Tobsn: i mean it looks good
[04:00] mshadle: odd. i put nntp.js in lib/ and it says it 'nntp' is not found still
[04:00] Tobsn: but i want something more compact
[04:00] aniero: is there a way i can put javascript in an ejs template? i want to do jquery $(...) onload stuff, but it causes some kind of parse error in ejs
[04:00] Tobsn: JUP is just shittons of data if you would actually use it
[04:00] Tobsn: bradleymeck2, you mean http://code.google.com/p/json-template/?
[04:01] bradleymeck2: are you looking for some kinda binary templates? jup is pretty compact and only a 100~ line file
[04:02] bradleymeck2: yea, someone was using that one earlier
[04:02] Tobsn: i mean compact in terms of data from server to client
[04:03] mikeal: dammit
[04:03] mikeal: i totally fucked up my git repo
[04:03] Tim_Smart_ has joined the channel
[04:04] mshadle: yeah and my creds file can't be parsed.
[04:04] bradleymeck2: revert hard!
[04:04] bradleymeck2: so, compressed somehow tobsn, like smaller than json?
[04:04] Aria has joined the channel
[04:04] mikeal: no, like it commited and pushed things wrong
[04:05] mikeal: fuck it
[04:05] mikeal: i need a clean slate
[04:05] mikeal: this attempt at keep-alive is a failure
[04:05] bradleymeck2: havent seen any, the decompress would destroy ie6 + reinterpret
[04:05] mikeal: i need to start over
[04:05] mikeal: i should have done this when ryan originally had me change the API
[04:05] Tim_Smart_ has joined the channel
[04:06] isaacs: mikeal: that make me sad
[04:06] mikeal: something was deeply fucked
[04:07] SamuraiJack has joined the channel
[04:08] mikeal: isaacs: agreed about tagging stable
[04:08] mikeal: although, if there was a web interface where I could just click "stable" on the latest package I wouldn't care so much
[04:08] isaacs: mikeal: at this point, npm is the only package that uses that for the curl installer, and i manage to forget that EVERY DAMN TIME.
[04:08] Tobsn: hmm yeah like really really small json
[04:08] isaacs: it's been convenient like one time, and other than that, it's a huge pita
[04:09] Tobsn: btw. can someone implement in some specs or something that *.njs requests are nodejs files? ;)
[04:09] ryah: Aria: any thoughts on the zmq thing?
[04:09] bradleymeck2: node js files are just javascript
[04:09] Tobsn: kinda like *.php is for php... so i can run php and nodejs over nginx/lighttpd
[04:09] Tobsn: i know
[04:09] ryah: Aria: interested in trying to do a binding?
[04:09] Tobsn: well over the web .js is javascript
[04:10] Aria: ryah: Looks like you came to the same conclusion I did; I'd love to give it a shot, but my time's gonna be shot for another week or a bit more.
[04:10] Tobsn: .njs is available... and would make sense :P
[04:10] Aria: ryah: But certainly worth a look -- shouldn't be TOO hard.
[04:10] isaacs: Tobsn: but node files ARE javascript ;P
[04:10] bradleymeck2: id be reluctant to give it a file name since node isnt just a cgi app
[04:10] ryah: Aria: i think it'll be fun
[04:10] Tobsn: i KNOW :P
[04:10] Aria: Indeed!
[04:10] Tobsn: but as file description
[04:10] Tobsn: well hmm
[04:10] Tobsn: well youre right, i make no sense
[04:10] isaacs: Tobsn: ;)
[04:11] Tobsn: it would be still nice to have both... somehow
[04:11] bradleymeck2: as per the smaller than json, you are probably going to have to just compress it into a binary file somehow
[04:11] Tobsn: http://domain.com/test.php and domain.com/test.njs
[04:11] Tobsn: bradleymeck2 hmm
[04:11] Tobsn: i could compress it
[04:12] Tobsn: there are client side browser javascript decompressors for gzip etc. right?
[04:12] bradleymeck2: yea, but decompressing is an expensive op
[04:12] Tobsn: question is what takes longer... transfering 40kb data plain or 4kb compressed and have to decompress it client side
[04:13] ryah: Aria: you should definitely submit patches back to zmq for something like   int zmq_socket_fd(zmq_socket*)
[04:13] ryah: instead of hacking it
[04:13] Aria: Yeah. Your email inspired me to actually pursue that.
[04:13] bradleymeck2: browser to browser, ie it prolly takes signif longer, in others prolly about same w/o hw/c support,but it should open up network at the prices of the cpu
[04:13] Tobsn: maybe someone can write a jsonML client lib that creates html based on the pure data and not on templates
[04:13] bradleymeck2: pure data?
[04:14] Aria: Tobsn: The plain transfer. Go look at ryah's chart about how much slower networks are than say, a CPU.
[04:14] smtlaissezfaire has joined the channel
[04:14] smtlaissezfaire has left the channel
[04:14] Tobsn: well as i understand JUP you have a template ['div',{'class':'foo'},{{content}}] and than you have the data {content:'osomething goes in here'}
[04:14] Tobsn: wouldnt it be smarter to just build the template basedon the data?
[04:15] bradleymeck2: not sure i understand still tobsn, example?
[04:15] ryah: Aria: you should experiement with including the zmq source code in your binding distribution and statically building it
[04:15] jamescarr: anyone here been using JSGI?
[04:15] ryah: that way you can float patches for the fixes before they get into release
[04:15] bradleymeck2: you mean something akin to toString? but like toHtml?
[04:15] Tobsn: {content:{'type':div','class':foo','data':'something goes in here'}}
[04:15] Aria: Mmm, yeah.
[04:16] Tobsn: {'type':div','class':foo','data':'something goes in here'}
[04:16] Aria: Man, I hate static linking and included deps. But it's wise in that case.
[04:16] _announcer: Twitter: "node.js + express the comet test. I made really easy to make chat" [ja] -- ishikawan(21). http://twitter.com/scraperonce/status/20113314482
[04:16] adrienf: Tobsn: isn't the whole idea of a template to decouple data and template ?
[04:16] Tobsn: sortof
[04:16] bradleyprice has joined the channel
[04:16] Tobsn: but youre already doing it
[04:16] Tobsn: well hmm
[04:17] adrienf: in that case, why not just send the rendering ?
[04:17] Tobsn: i mean you can still deliver a base structure <html><head><script ></head><body><div id="content"></body></html>
[04:17] Tobsn: {content:{'type':div','class':foo','data':'something goes in here'}} <-
[04:18] Tobsn: tha tway the pure html would be the template and the data would have instructions for the strucutre
[04:18] Tobsn: guess im just reinventing the wheel
[04:18] bradleymeck2: but then how would you see what is populating the template at all?
[04:19] bradleymeck2: usually the variable lets me debug templates by being in both
[04:19] adrienf: Tobsn: reinventing the wheel in some kind of clunky square way, I'd even say
[04:19] Tobsn: maybe ids bradleymeck2?
[04:19] Tobsn: <div id="tpl.content">
[04:19] adrienf: Tobsn: this would be really inefficient: you can't streamline the rendering
[04:20] Tobsn: but wouldnt it be the exact same as using JUP (jsonML) ?
[04:20] bradleymeck2: adrienf, if its client side templating it wouldnt really hurt
[04:20] jamescarr: back in 2006 I used to something more obscene... I'd use the title attribute to stash away some json ;)
[04:20] Tobsn: lol
[04:20] Tobsn: jamescarr is out
[04:20] jamescarr: lol
[04:21] JimBastard has joined the channel
[04:21] jamescarr: hey, I don't anymore ;)
[04:21] JimBastard: hey does anyone wanna check out the new http-proxy api?
[04:21] JimBastard: http://github.com/nodejitsu/node-http-proxy/tree/0.1.4
[04:21] Tobsn: doesnt matter - youre excluded from this discussion
[04:21] Tobsn: :P
[04:21] jamescarr: good god... how many judges will Node knockout have??
[04:21] JimBastard: httpProxy.createServer('localhost', '9000').listen(8000);
[04:21] bradleymeck2: james 1 per 10 i think
[04:21] JimBastard: ryah: you like that ^^
[04:21] bradleymeck2: so 20~?
[04:21] Tobsn: can i participate remotely? :P
[04:22] JimBastard: bradleymeck2: ?
[04:22] bradleymeck2: mm jim?
[04:22] JimBastard: ohh im not james
[04:22] JimBastard: lulz
[04:22] Tobsn: .com
[04:22] bradleymeck2: is that me finally getting a server on multiple ports?
[04:22] JimBastard: i think port goes first for client requests
[04:23] JimBastard: hrmm
[04:23] jamescarr: JimBastard, you use vows right?
[04:24] JimBastard: yeah ill switch
[04:24] JimBastard: jamescarr: for sure
[04:24] JimBastard: mostly indexzero, i dont really believe in tests
[04:24] jamescarr: do you know why I'd get this error when running vows from a top level dir?
[04:24] JimBastard: the only thing i like asserting is that my code is awesome
[04:24] jamescarr: Error: EISDIR, Is a directory
[04:24] jamescarr: I have a nested dir inside my spec dir, remove it and thigns work
[04:25] JimBastard: jamescarr: maybe like vows foo/*
[04:25] JimBastard: or something
[04:25] JimBastard: i think there is glob support
[04:25] jamescarr: yeah
[04:25] jamescarr: thats what I have been doing
[04:25] JimBastard: ohhh i see
[04:25] JimBastard: yo cloudhead 
[04:26] JimBastard: does vows support nested folders with the globs stuff?
[04:26] JimBastard: or will it try to run the test on the folder?
[04:26] jamescarr: vows spec/unit/*
[04:26] JimBastard: he might be around
[04:26] isaacs: jamescarr: that's supported by bash, isn't it?
[04:26] Tobsn: i dont understand vows... lol.
[04:27] Tobsn: wtf is it doing?
[04:27] jamescarr: yep
[04:27] isaacs: jamescarr: i mean, you don't need vows to support it, vows won't even know.
[04:27] isaacs: jamescarr: try it.  type "node-repl *" and then sniff process.argv
[04:27] isaacs: have to use "node-repl" explicitly,because "node *" will try to execute files as js
[04:27] jamescarr: hmmmm
[04:27] bradleymeck2: tobsn, async testing, helps you build stuff by knowing how it is behaving at the time, when it is acting wrong
[04:28] isaacs: vows will just get a bunch of arg
[04:28] isaacs: s
[04:28] Tobsn: but hmm
[04:28] bradleymeck2: kinda need async tests to test async systems i think
[04:28] mikeal: ok
[04:29] mikeal: i'm putting Kick Ass on
[04:29] jamescarr: isaacs, bingo
[04:29] mikeal: and hopefully by the end of the movie, i'll have keep-alive working
[04:29] jamescarr: it doesn't recurse under the subdir 
[04:29] Tobsn: well i guess i dont have to understand that right now
[04:30] isaacs: jamescarr: yeah.  in bash globs, "*" is exactly 1 pathpart
[04:30] isaacs: jamescarr: echo *
[04:30] isaacs: jamescarr: echo * is like "ls", not "tree"
[04:30] jamescarr: isaacs, http://gist.github.com/504103
[04:31] jamescarr: unless that's what you've been saying :)
[04:31] isaacs: jamescarr: yep
[04:31] jamescarr: the files under spec/unit/authorizenet dont show up :(
[04:31] isaacs: the * is getting filled in with the things in that dir
[04:31] isaacs: right
[04:31] jamescarr: I see
[04:31] isaacs: that'd be spec/unit/* spec/unit/*/*
[04:31] jamescarr: sneaky :(
[04:31] jamescarr: so I need to do both??
[04:31] jamescarr: :(
[04:31] isaacs: or, perhaps find spec/unit | xargs vows
[04:32] isaacs: or even: find spec/unit -name '*.js' | xargs vows
[04:32] isaacs: ACTION <3 bash
[04:32] jamescarr: ditto
[04:33] Tobsn: well okay - that .njs thing kinda makes sense... lets say there would be a process manager for node ... you could call /blah/blah.njs and that would relate to a node instance that is running configed_base_dir/{directory}/blah/app.js
[04:33] Tobsn: and if its not running yet it will start it
[04:33] jamescarr: isaacs, thanks
[04:35] _announcer: Twitter: "Look forward to similar picloud (www.picloud.com) of ssjs (server-side-javascript) services (the election nodejs it). Although the actual use do not seem large (Some people think the market right now picloud great), but the future can be expected." [zh-CN] -- finscn. http://twitter.com/finscn/status/20114343270
[04:36] jamescarr: damn!
[04:36] jamescarr: going to have to run my specs one by one!
[04:36] JimBastard: !tweet @finscn http://github.com/nodejitsu
[04:36] jamescarr: http://gist.github.com/504108 doesn't give me much info on which one failed :S
[04:37] Bren2010 has joined the channel
[04:38] jamescarr: whew, found the offender
[04:40] benburkert has joined the channel
[04:40] SubStack: sure are a lot of cloudy javascript things right now
[04:41] SubStack: mine is the best of course!
[04:41] SubStack: :p
[04:42] _announcer: Twitter: "Intends to use the company&#39;s daily node.js system rewrite. The most troublesome is the permission system should be rewritten. This is my first N views are: &quot;Using xxx xxx system technology to rewrite the company&#39;s&quot; idea of the I also do hands-done, but later tend to let the matter rest for a variety of reasons ... Well: &#39;(" [zh-CN] -- finscn. http://twitter.com/finscn/status/20114715973
[04:43] isaacs: Tobsn: you could just put "#!/usr/bin/env node" at the top of the file, though
[04:43] mikeal: awe hells yeahs
[04:43] mikeal: i got keep-alive working
[04:43] mikeal: all tests pass :)
[04:43] isaacs: just got shadowed configs in npm working
[04:43] isaacs: this is sweet.
[04:43] isaacs: cli, env, user, global, defaults
[04:44] isaacs: mikeal: (your thing is more awesome)
[04:44] bradleymeck2: mmm cloudy things, substack would you like to upgrade to my new "lousy" version, it spreads faster than cloud computing, just like lice
[04:44] mikeal: god dammit
[04:44] mikeal: after you check something in to your master
[04:44] mikeal: how do you remove it from the revision history and stick it in a branch instead
[04:45] isaacs: mikeal: git checkout master ; git branch -M master-foo ; git checkout <commit> -b master
[04:45] mikeal: werd, i'm on this page now :) http://nodeknockout.com/judging#mikeal_rogers
[04:45] bradleymeck2: reset hard should work mikeal
[04:45] isaacs: mikeal: ie, rename master to a new name, then checkout a new thing and call it "master".  you'll have to use the force when you push
[04:45] bradleymeck2: wait
[04:46] bradleymeck2: then you have to branch yea
[04:46] isaacs: lolz "especially when there are no riots"
[04:46] bradleymeck2: ignore me
[04:49] jamescarr: dammit
[04:49] bradleymeck2: this hurt anyone's eyes but me? http://nodeknockout.posterous.com/
[04:49] jamescarr: got the rework pushed to github, but looks like my npm package is broken 
[04:49] isaacs: jamescarr: which package?
[04:49] mjr_: bradleymeck2: ouch, css fail.
[04:49] isaacs: bradleymeck: yeah, looks like css is failing
[04:50] jamescarr: isaacs, it's not published yet, so its all good ;)
[04:50] isaacs: jamescarr: oh, ok, thought i had to fix something :)
[04:50] jamescarr: bradleymeck, the black text on dark background
[04:50] jamescarr: it's readable ;)
[04:50] isaacs: the next version of npm is gonna make ivy and nvm and them have a MUCH easier time.  this is awesome.
[04:51] jamescarr: nvm?
[04:51] jamescarr: like rvm?
[04:52] bradleymeck2: idk what rvm is, but nvm manages different node versions/installs
[04:52] jesusabdullah: orite, I remember that now
[04:53] _announcer: Twitter: "Node.js now has a node version manager just like rvm http://github.com/creationix/nvm :)" -- jamescarr. http://twitter.com/jamescarr/status/20115266386
[04:53] Tobsn: isaacs, see thats the idea ;)
[04:53] isaacs: jamescarr: there's also http://github.com/isaacs/nave
[04:53] Tobsn: .njs ;)
[04:53] isaacs: Tobsn: relying on file extensions for executability is a windows antipattern
[04:53] jamescarr: nice
[04:54] isaacs: jamescarr: nave is more like python's virtualenv than like rvm
[04:54] jamescarr: cool
[04:55] mikeal: and, sent to the list
[04:55] DraX: aurynn: you did postgres.js?
[04:55] aurynn: DraX, no, creationix did. I forked it, and I'm upgrading it
[04:56] DraX: ahh
[04:56] aurynn: Adding parameterized queried and prepared statements and stuff.
[04:56] _announcer: Twitter: "@ Scraperonce immediate adoption. RT: node.js + express the comet test. I made really easy to make chat" [ja] -- Hiroshi Suda. http://twitter.com/suda_hiroshi/status/20115430904
[04:56] DraX: i'm wondering, in retrospect, if you would have bound a library for the binary IPC or done the buffer extensions
[04:56] _announcer: Twitter: "Version manager with node.js? Oh yes, very nice. Nvm - http://northpole.sg/3Y" -- Kenny Shen. http://twitter.com/kenny_shen/status/20115458499
[04:56] aurynn: I probably would've dropped to C++ for the direct messages
[04:57] aurynn: as opposed to the buffer extensions
[04:57] DraX: I'm toying with writing XMMS2 bindings once I get my imap implementation more complete, and am not sure whether i want to bind xmmsipc or implement it by hand
[04:57] mikeal: isaacs: have you looking through http.js in depth?
[04:58] isaacs: mikeal: not in a while
[04:58] isaacs: mikeal: why, what's up?
[04:58] mikeal: it's insane
[04:58] mikeal: like
[04:58] mikeal: the Outgoing and Incoming message thing
[04:58] DraX: imap is terrifying :/
[04:58] mikeal: the objects that are used by the server and the client 
[04:58] qFox has joined the channel
[04:58] isaacs: jezus, 1103 lines?
[04:58] mikeal: for request response but flipped
[04:59] mikeal: it's insane
[04:59] isaacs: http is hard
[04:59] mikeal: i think my problem, that i spent like 2 days tracking
[05:00] mikeal: was the i removed some code the seemed unnecessary from outgoing message
[05:00] mikeal: and it totally breaks readyState in this weird way on the server
[05:00] lachlanhardy has joined the channel
[05:01] mjr_: oh man, it's surprising how much of that http/net code seems unnecessary or strange until you try removing it.
[05:03] mikeal: totally
[05:03] ryah: sharing the code between client and server is hard
[05:03] ryah: but it seems to have been accomplished to some degree
[05:04] ryah: s/between/for the/
[05:04] JimBastard: how do you force a module to reload again?
[05:04] JimBastard: and not load from cache?
[05:04] mikeal: the file is already like 1100 lines, if it was different for both it would be even larger, and lots of duplicate code
[05:04] mikeal: but i do wonder if it would be clearer
[05:04] mikeal: require.uncached?
[05:04] mikeal: maybe
[05:04] mikeal: or maybe require.nocache?
[05:05] isaacs: JimBastard: check out the module.cache object
[05:05] isaacs: JimBastard: also, dont' ever do that, om
[05:05] isaacs: g
[05:05] JimBastard: thanks
[05:05] mikeal: haha
[05:05] JimBastard: have to here, trust
[05:05] JimBastard: me
[05:05] isaacs: JimBastard: that is, module.moduleCache
[05:06] mikeal: ryah: if i write a client pool is that something that you want in node-core or should i just build it as a third party module?
[05:09] ryah: mikeal: it's something i want in core
[05:09] mikeal: ok
[05:10] ryah: mikeal: i'm picky though - it should be rather minimal
[05:10] mikeal: it will be
[05:10] ryah: there should be some sort of setting for max concurrent connections per host
[05:10] mikeal: var pool = http.createPool(maxHosts, minHosts, idleTimeout)
[05:10] mikeal: pool.createClient(
[05:11] ryah: it should be pool.request()
[05:11] mikeal: this way people who use client can easily swap in the pool
[05:11] ryah: it'll handle doing the client stuff
[05:11] mikeal: you want the pool object to be scoped to a single domain?
[05:11] ryah: or - what do you think?
[05:11] ryah: yeah
[05:12] mikeal: that's easier 
[05:12] ryah: pool = http.createPool('google.com');
[05:12] mikeal: to implement
[05:12] ryah: pool.get('/', function (res) {})
[05:12] ryah: ^-- would be nice
[05:12] ryah: or some sort of sugar
[05:13] mjr_: oh wow, would it auto-send the Host: header too?
[05:13] mikeal: i'm scared of sugar, it's going to interfere with other higher level libraries using it
[05:13] ryah: this should be the user friendly version
[05:13] mikeal: ryah: how do they get at the client for their request object to listen for errors?
[05:13] jamescarr: hmmm...
[05:13] ryah: mikeal: pool.clients
[05:13] ryah: *shrug*
[05:13] mikeal: they just want errors for their request
[05:14] ryah: maybe you should add the error handlers
[05:14] mikeal: well
[05:14] jamescarr: "promise chain" <-- is this some fp pattern or just some made up term?
[05:14] ryah: and forward the message to the pool
[05:14] mikeal: if this is the higher level version
[05:14] ryah: or something
[05:14] mjr_: This may be an opportunity to make it easier to detect errors on http requests.
[05:14] mikeal: we could emit "error" on the request obejct
[05:14] ryah: jamescarr: made up temr
[05:14] mikeal: and add and remove the listener from the client for them
[05:16] jamescarr: ryah, well, it looks like the term does exist elsewhere
[05:16] jamescarr: "The DelayedRedirector uses this argument to shorten Xb to be equivalent to Yb, cutting VatA out of the promise chain. If nothing else is retaining the portion of this promise chain in VatA, it can will be gc'ed. " :)
[05:17] ryah: whatever - mark miller
[05:18] Neil_ has joined the channel
[05:21] ryah: mikeal: your patch looks good
[05:21] ryah: thanks
[05:21] mikeal: np
[05:21] mikeal: working on this pool now
[05:23] JimBastard: ohh yeah module cache fail i stupid
[05:23] JimBastard: lol
[05:23] JimBastard: just make a copy
[05:23] JimBastard: no require required
[05:26] mikeal: crap
[05:26] mikeal: ryah: so, request has to return the request object, which makes it really hard to do max/min clients stuff
[05:27] mikeal: because I can't attach a callback to fire after one of the clients free
[05:27] ryah: mikeal: why?
[05:27] mikeal: because i MUST return something for the request
[05:27] zomgbie has joined the channel
[05:28] mikeal: i can just not implement max/min
[05:28] ryah: no, it needs a max
[05:28] ryah: you can make your own req object
[05:29] ryah: that wraps up http.Client's
[05:29] ryah: ?
[05:29] amerine has joined the channel
[05:32] bradleymeck2 has joined the channel
[05:32] mikeal: ryah: http://gist.github.com/504156
[05:33] hassox: allo ppl
[05:33] bradleymeck2: allo motto
[05:33] mikeal: whoops
[05:34] shreekavi has joined the channel
[05:34] mikeal: forgot to add the newly created client to the pool
[05:34] mattly has joined the channel
[05:35] CIA-77: node: 03Mikeal Rogers 07master * r3214116 10/ (3 files in 3 dirs): 
[05:35] CIA-77: node: Implement keep-alive for http.Client
[05:35] CIA-77: node: Send the 'Connection: keep-alive' header in your request to enable. - http://bit.ly/dzmfjB
[05:35] mikeal: sweet
[05:35] ryah: yes, sweet :)
[05:35] ryah: awesome test btw
[05:35] mikeal: thanks
[05:36] mikeal: i copied the HEAD test
[05:36] mikeal: and modified it a bit
[05:36] mikeal: i love the node unittests
[05:36] mikeal: and i really hate people who insist on more "framework"
[05:37] beanie___ has joined the channel
[05:37] _announcer: Twitter: "Things that I found that are awesome this weekend: Node.JS, Magic Trackpad, Magic Mouse, Katana-Ya, Having a Couch, Trumer Pilsner." -- Can `John` Duruk. http://twitter.com/cduruk/status/20117448812
[05:37] _announcer: Twitter: "@mikeal adds keep-alive support to #nodejs's http client! http://github.com/ry/node/commit/3214116be6bd088a02d0447f57b0ba15038adce0" -- Ryan Dahl. http://twitter.com/ryah/status/20117450861
[05:38] DraX: katana-ya is _not_ awesme
[05:38] DraX: indeed it kind of sucks
[05:39] DraX: though the quality of Ramen in the city itself is pretty miserable to begin with
[05:45] mshadle has left the channel
[05:45] mikeal: oh man
[05:45] mikeal: git stash is awesome
[05:46] DraX: not if you have to use it because of the linerization requirement of git-svn
[05:47] mikeal: haha
[05:47] mikeal: i don't have to mess with svn much
[05:48] DraX: i used to use it for work
[05:48] DraX: now i have to figure out what the git<->perforce options are
[05:52] mikeal: ok
[05:52] mikeal: all updated
[05:52] mikeal: http://gist.github.com/504156
[05:52] mikeal: ryah: does that look good?
[05:52] mikeal: it's a rough sketch of the API
[05:53] mikeal: i don't thin min and max can work well without using a callback for request
[05:54] _announcer: Twitter: "Wrote node-image node.js module - http://bit.ly/aN78np - that unifies node-png, node-gif and node-png. Using it at StackVM already!" -- Peteris Krumins. http://twitter.com/pkrumins/status/20118217398
[05:54] mikeal: pool.request(method, url, headers, function (request) {…..})
[05:55] _CrabDude has joined the channel
[05:56] mikeal: i mean, when trying to hold all the attributes and methods assigned to an object until another one becomes available sounds like a really error prone and leaky way to try and accomplish it
[05:58] CrabDude has joined the channel
[06:03] lhardy has joined the channel
[06:05] _announcer: Twitter: "@ Aki_xavier Hello. Would like to ask about your problem on node.js. Now node.js the web framework, what do you think best? Expressjs? Geddyjs? Or other?" [zh-CN] -- finscn. http://twitter.com/finscn/status/20118749668
[06:07] tilgovi has joined the channel
[06:09] zomgbie has joined the channel
[06:10] ph^ has joined the channel
[06:13] _announcer: Twitter: "@ Aki_xavier can not simply talk about the reason? Because you prefer sinatra style, do not like rails style? Or other reasons? (Eg, ease of use the performance framework of rapid development capabilities, etc.) I nodejs novice, you compare contacts nodejs Early hopes to be your guide and help. Thank you, the" [zh-CN] -- finscn. http://twitter.com/finscn/status/20119102605
[06:16] visnup has joined the channel
[06:19] ryah: mikeal: not sure what the best way is...
[06:19] ryah: i guess this looks fine..
[06:20] mikeal: i sent it to the list
[06:20] mikeal: i'm wondering if using a callback actually breaks something sync that people are doing with the request call
[06:21] _announcer: Twitter: "v8 engine on the language features in the js or too conservative (and mozilla compared to), I hope node.js in v8 engine based on the courage to try something, &quot;the future may be v8 support&quot; js new features, such as yield, lambda (generator expressions). While some may simply be syntactic sugar, but there will always be sweeter sugar ah" [zh-CN] -- finscn. http://twitter.com/finscn/status/20119461314
[06:22] _announcer: Twitter: "@ Finscn node.js out what color is the framework of the place from time to explore it ... more to explore" [zh-CN] -- aki. http://twitter.com/aki_xavier/status/20119490334
[06:25] _announcer: Twitter: "@ Aki_xavier Thanks!!! Want to raise another few, you have to use in actual projects node.js it? Lessons learned and experience-what? Do you think node.js now to be used in the commercial phase of the ? If you think it not to a lack of what? thank the" [zh-CN] -- finscn. http://twitter.com/finscn/status/20119614555
[06:29] mikeal: yield and generator expressions aren't that necesssary
[06:29] bvleur has joined the channel
[06:29] mikeal: you can accomplish the same shit functionally and it's clearer
[06:30] SubStack: fact
[06:31] _announcer: Twitter: "node-inspector - Debug node.js using the WebKit Web Inspector. http://ow.ly/18oePM" -- Javascript News. http://twitter.com/del_javascript/status/20119879186
[06:31] mikeal: i've used yield in the mozilla platform
[06:31] mikeal: and it's mostly just confusing to look at
[06:32] mikeal: you have functions that aren't really functions they are this other thing
[06:32] SubStack: i've used them in python mostly
[06:32] mikeal: they are more necessary in python because function execution overhead is huge
[06:33] SubStack: also python's lambdas suck
[06:33] mikeal: if you can reduce 20 function calls to one generator, it's a big win
[06:33] mikeal: but functions are super cheap in v8
[06:35] mikeal: sleepy time
[06:48] _announcer: Twitter: "wonder what it would be like if internet discussions were more like this.. http://higgr.com/bubbles/ . in realtime? *secret node.js project*" -- Bill Casarin. http://twitter.com/jb55/status/20120585755
[06:57] bradleymeck2 has joined the channel
[07:00] Dmitry2 has joined the channel
[07:02] indexzero has joined the channel
[07:02] Gruni has joined the channel
[07:02] dbloete has joined the channel
[07:04] _announcer: Twitter: "May be openappmkt.com should try node.js on Heroku. "The application currently has too many requests in its backlog."" -- Matthias Luebken. http://twitter.com/luebken/status/20121274587
[07:04] _announcer: Twitter: "说 http://www.plurk.com/p/6nz0zx (转 噗) Ryan Dahl 在 讲 Google node.js http://tinyurl.com/27utc7j http://plurk.com/p/6oyg3n" [no] -- sleepnova. http://twitter.com/sleepnova/status/20121283220
[07:04] dbloete has left the channel
[07:06] omarkj has joined the channel
[07:06] femto has joined the channel
[07:13] bmizerany has joined the channel
[07:25] slaskis has joined the channel
[07:28] _announcer: Twitter: "NodeJS of that actually is asynchronous. . . &lt;96.10&gt;" [zh-CN] -- Kristy Swan. http://twitter.com/LonelySwan/status/20122256830
[07:29] slaskis has joined the channel
[07:33] pdelgallego has joined the channel
[07:38] sooli has joined the channel
[07:38] sooli: Hi All, for people interested : http://chat.solisoft.net/ (now it's opensource)
[07:41] micheil has joined the channel
[07:41] teemow has joined the channel
[07:45] virtuo has joined the channel
[07:46] slaskis_ has joined the channel
[07:46] CIA-77: node: 03Ryan Dahl 07master * rd9fbb8a 10/ (4 files in 3 dirs): 
[07:46] CIA-77: node: Expose the V8 debug object process.debug
[07:46] CIA-77: node: Add one duplicate test from V8, just to make sure it works. - http://bit.ly/da7SJ6
[07:47] shockie has joined the channel
[07:49] tisba has joined the channel
[07:50] Tobsn: sooli, socket.io is already open source :P
[07:50] sooli: sure
[07:50] sooli: but some people asked me to open source my multi rooms chat cpde
[07:51] sooli: I just want to share my first experience using node.js to all newbies (just like me)
[07:53] TobiasFar has joined the channel
[07:55] geeks_bot has joined the channel
[07:57] freshtonic has joined the channel
[07:59] TomY has joined the channel
[08:01] b_erb has joined the channel
[08:01] voxpelli has joined the channel
[08:01] rwaldron has joined the channel
[08:04] sechrist has joined the channel
[08:05] sechrist has joined the channel
[08:09] micheil: sechrist: do I know you from somewhere?
[08:11] sechrist: you might
[08:11] sechrist: I've been asked this before in here though
[08:11] micheil: deviantart perhaps?
[08:12] sechrist: errrrr probably not
[08:12] micheil: okay
[08:18] _announcer: Twitter: "@NeilCauldwell Yeah, I can be found in #node.js" -- Micheil Smith. http://twitter.com/miksago/status/20124214237
[08:19] mpoz2 has joined the channel
[08:19] romainhuet has joined the channel
[08:20] sechrist has joined the channel
[08:27] markwubben has joined the channel
[08:28] N` has joined the channel
[08:28] tisba has left the channel
[08:29] Blink7 has joined the channel
[08:32] Tim_Smart has joined the channel
[08:32] Tim_Smart_ has joined the channel
[08:43] caolanm has joined the channel
[08:43] astrolin has joined the channel
[08:45] micheil_mbp has joined the channel
[08:48] blaze-x has joined the channel
[08:50] Neil_ has joined the channel
[08:52] ewdafa has joined the channel
[08:53] zomgbie has joined the channel
[08:55] blaze-x has joined the channel
[08:58] _announcer: Twitter: "Big up to my main man @felixge, trying to add MySQL support to node.js: http://github.com/felixge/node-mysql" -- Kevin van Zonneveld. http://twitter.com/kvz/status/20125788506
[09:01] blaze-x has joined the channel
[09:02] sechrist has joined the channel
[09:02] rsms has joined the channel
[09:04] mAritz has joined the channel
[09:13] jetienne has joined the channel
[09:14] robinduckett has joined the channel
[09:20] blaze-x has joined the channel
[09:22] karboh has joined the channel
[09:22] _announcer: Twitter: "express, connect, (fab) - which @nodejs web framework would you suggest?" -- Fabian Jakobs. http://twitter.com/fjakobs/status/20126769747
[09:25] maushu has joined the channel
[09:32] _announcer: Twitter: "node.js bad. I&#39;m the Future" [ja] -- ishikawan(21). http://twitter.com/scraperonce/status/20127155753
[09:35] _announcer: Twitter: "NodeJS 0.1.102 turned on to something else, API ppiksalyi M;; replace what time? ㅠ. ㅠ" [ko] -- A.J. http://twitter.com/andrwj/status/20127272134
[09:54] maushu: ryah: It seems they are trying to find what you changed this time.
[09:54] maushu: :p
[10:05] chapel has joined the channel
[10:08] javajunky has joined the channel
[10:13] MattJ has joined the channel
[10:30] fermion has joined the channel
[10:35] d0k has joined the channel
[10:53] ecito has joined the channel
[10:55] omarkj has joined the channel
[11:02] b_erb has joined the channel
[11:03] pufuwozu has joined the channel
[11:07] _announcer: Twitter: "@ciaran_j Oh, I missed it, will check it out.. Thank you! :) [cygwin binaries available for node.js]" -- thiyagaraj. http://twitter.com/thiyagaraj/status/20131271410
[11:08] BryanWB has joined the channel
[11:14] zapnap has joined the channel
[11:21] jetienne: about using cygwin nodejs (aka gpl), does this imply my code run in node has to be gpl ?
[11:26] rsms has joined the channel
[11:28] stride: not a lawyer & not too much into american license rights but since you're not "incorporating" the scripts that you run into GPL'd code I'd say no
[11:29] benburkert has joined the channel
[11:32] jetienne: ok good enouth :)
[11:38] dbloete has joined the channel
[11:39] satori_ has joined the channel
[11:40] chapel has joined the channel
[11:40] dnyy has joined the channel
[11:40] adamholt has joined the channel
[11:41] keeto has joined the channel
[11:41] Dmitry1 has joined the channel
[11:41] Epeli has joined the channel
[11:42] bradleymeck2 has joined the channel
[11:43] termie has joined the channel
[11:46] jetienne: man to get a package of nodejs on current ubuntu is not simple
[11:47] mscdex: why?
[11:48] mscdex: i generate .deb packages every time there is a new stable version and new commit
[11:48] mscdex: :>
[11:48] mape: jetienne: just compile it?
[11:48] mscdex: automatically!
[11:48] jetienne: mscdex: care to share the script
[11:48] jetienne: ?
[11:48] mscdex: well if you just need the packages, they're here: mscdex.net/node
[11:48] jetienne: mape: this doesnt give the apt-get support
[11:48] mape: ./configure && amke && make install
[11:48] mape: *make
[11:48] jetienne: mscdex: i would like the script
[11:49] mscdex: i need to clean up the script before i make it public heh
[11:49] jetienne: email it to me ? jerome.etienne@gmail.com
[11:49] _announcer: Twitter: "http://net.tutsplus.com/tutorials/javascript-ajax/learning-serverside-javascript-with-node-js/ yummy" -- Stanislaw Magierski. http://twitter.com/stanisl/status/20133315338
[11:49] mscdex: some things could be done better
[11:49] jetienne: i wont publish
[11:52] mscdex: jetienne: it requires fakeroot and checkinstall
[11:53] jetienne: mscdex: ok
[11:53] mpoz2 has joined the channel
[11:55] mscdex: jetienne: you on amd64?
[11:55] jetienne: mscdex: nope i386
[11:55] mscdex: ok
[11:55] dbloete has left the channel
[11:57] olegp has joined the channel
[11:58] mscdex: well in that case all you really need to do is: ./configure && make && sudo checkinstall
[11:59] mscdex: that generates the package
[11:59] jetienne: this wont produce the source package
[11:59] mscdex: oh, i haven't created source packages
[12:00] jetienne: mscdex: :( back to square one
[12:00] mscdex: why do you necessarily need a source .deb instead of a tarball?
[12:00] omarkj: You need deb packages ?
[12:01] omarkj: Have you tried git-buildpackage?
[12:01] jetienne: omarkj: nope, looking
[12:01] hassox has joined the channel
[12:02] omarkj: Ok. I haven't used it. Not sure how it works with upstream.
[12:02] mscdex: you can also use "git archive" i think
[12:02] mscdex: http://www.kernel.org/pub/software/scm/git/docs/git-archive.html
[12:03] mscdex: er nevermind
[12:03] mscdex: forgot you want .deb
[12:03] mscdex: need more coffee
[12:03] Blink7 has joined the channel
[12:03] omarkj: Don't do drugs.
[12:05] jetienne: ok node doesnt install c-ares and v8 as lib
[12:05] jetienne: good thing :)
[12:05] _announcer: Twitter: "The writing speed slightly from mackerel Eventmachine proxy for testing, but I was making, and Copy and paste this done to find Chatta node.js implementation. It&#39;s the speed I think I&#39;m simple node.js. http://bit.ly/brlWJM" [ja] -- koko1000ban. http://twitter.com/koko1000ban/status/20134171468
[12:05] voxpelli has joined the channel
[12:05] omarkj: Btw, what do you guys use 'in front' of node.js on production ?
[12:05] omarkj: If anything ?
[12:06] mscdex: haproxy, as long as it doesn't involve websockets draft 76
[12:07] omarkj: That was my followup question, what if it's websockets?
[12:07] omarkj: :)
[12:07] mscdex: draft 75 works though, but that's obviously been superceded
[12:07] omarkj: I'm using haproxy as well, it's an excellent project. Been looking at using mongrel2 in the future (it looks promising)
[12:08] mAritz: maushu: what the fuck is that last tweet even supposed to mean? has anyone gone far even in between?
[12:09] fermion has joined the channel
[12:09] mscdex: heh
[12:09] N` has joined the channel
[12:09] mscdex: something about how fast fish can write
[12:10] mscdex: it's google translate's doing
[12:11] mAritz: oh man... i just understood that southpark joke about fish sticks... i saw it the other night and didn't get it, because it was translated to german and just doesn't make as much sense that way. thanks twitter poster!
[12:12] mscdex: heh
[12:22] maushu: mAritz: I don't speak moonspeak.
[12:23] SamuraiJack has joined the channel
[12:24] jetienne: Error: V8 doesn't like cache. Please set your CC env var to 'gcc' <- :)
[12:24] dnolen has joined the channel
[12:30] Gruni has joined the channel
[12:31] Blink7 has joined the channel
[12:32] _announcer: Twitter: "A collaborative sketching app I just wrote using html5 canvas, websocket + node.js: http://portfoli.no/cosketch/. Requires Chrome or Safari." -- Einar Otto Stangvik. http://twitter.com/einaros/status/20135731464
[12:40] dbloete has joined the channel
[12:40] dbloete has left the channel
[12:40] _announcer: Twitter: "Learning Server-Side JavaScript with Node.js | Nettuts+ http://ow.ly/18orKH" -- Javascript News. http://twitter.com/del_javascript/status/20136196407
[12:41] _announcer: Twitter: "#nodeKnockout updates: http://zemanel.posterous.com/nodejs-knockout-knockoutandback-updates" -- zemanel. http://twitter.com/zemanel/status/20136283030
[12:42] josemoreira has joined the channel
[12:42] jlilly: cloudhead: ping? Is it possible to pass vows a custom reporter? http://dpaste.com/224105/ -- that's my attempt which continues to use dot-matrix.
[12:43] _announcer: Twitter: "The more we discover Kureijipurojekuto. - Pure Ruby implementation of Node.js&#39; native libraries. Runs on V8/therubyracer. Http://bit.ly/aUlotr" [ja] -- 西山 雄也/Nishiyama Yuya. http://twitter.com/nsyee/status/20136359662
[12:45] zemanel has joined the channel
[12:50] _announcer: Twitter: "Doing some research on #nodejs adoption in the #enterprise: anyone has a story to share with me?" -- Nicola Orritos. http://twitter.com/nicola_orritos/status/20136767078
[12:51] zemanel: how to trap [connect] exceptions on httlclient event handlers?
[12:54] Dmitry1 has joined the channel
[12:54] knuckolls has joined the channel
[12:55] TomY has joined the channel
[12:58] zapnap has joined the channel
[12:59] sixtus42 has joined the channel
[12:59] sechrist has joined the channel
[13:02] mAritz: what? they rebuild node.js in ruby? crazy japanese...
[13:02] mape: the wheel is never round enough
[13:02] TomY has joined the channel
[13:03] jetienne: mAritz: hehe :) nope. they got v8 callable from ruby
[13:03] _announcer: Twitter: "Only a few days till Fab.js presented by Chris Strom - get your Node on! - http://bit.ly/bnTiEh" -- Balto/DC JavaScript. http://twitter.com/baltodcjs/status/20137607595
[13:03] mAritz: so they call v8 with node.js scripts in ruby?
[13:04] jetienne: mAritz: ultra gessing here. but i bet they use nodejs instead of plainv8
[13:05] jetienne: http://github.com/cowboyd/therubyracer for v8 in ruby
[13:06] zemanel: any tips on how to trap [connect] exceptions on httpclient event handlers?
[13:06] jetienne: client.on("error", function(){}); <- from memory
[13:06] bradleymeck has joined the channel
[13:07] zemanel: ah, didnt spot that on the docs
[13:07] Blink7 has joined the channel
[13:08] smtlaissezfaire has joined the channel
[13:08] davidsklar has joined the channel
[13:09] smtlaissezfaire has left the channel
[13:10] rsms has joined the channel
[13:11] siculars has joined the channel
[13:12] joshbuddy has joined the channel
[13:13] pgriess has joined the channel
[13:15] ceej has joined the channel
[13:18] ben_alman has joined the channel
[13:18] ceej has joined the channel
[13:22] kriszyp has joined the channel
[13:24] jtsnow has joined the channel
[13:24] jetienne: nodejs is working ok on amd64?
[13:25] MattJ100 has joined the channel
[13:25] ashleydev has joined the channel
[13:25] sixtus42: jetienne: node.js runs fine on 64bit, yes
[13:32] Gruni has joined the channel
[13:32] Blink7 has joined the channel
[13:34] scoates has joined the channel
[13:36] jashkenas has joined the channel
[13:37] jashkenas has left the channel
[13:38] omarkj has joined the channel
[13:39] joshbuddy_ has joined the channel
[13:40] _announcer: Twitter: "Really can not even POST properly httpClient node.js of the (ry" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/20140011794
[13:45] omarkj: Shouldn't the announcer just disregard tweets that are not in English ?
[13:45] omarkj: Well, the translations are a bit funny.
[13:46] mAritz: i tried terrorizing mauschu into removing japanese jabberwooky but he won't listen to me. :(
[13:46] omarkj: Haha, oh well.
[13:47] mAritz: (i don't even know whether he was in the channel when i did that... i just like to yell at him for no reason)
[13:48] chrischris has joined the channel
[13:48] _announcer: Twitter: "@michaelvillar I saw that your running on heroku. I’m curious, is the backend in Rails or Node.js?" -- Philipe. http://twitter.com/fphilipe/status/20140558437
[13:49] mAritz: see... who's supposed to understand a language like that? google translate can't work magic and then things like "your running" happen.
[13:51] caolanm: heh
[13:51] omarkj: So, wait, if I tweet something funny in my language it'll pop up in here?
[13:51] omarkj: As long as it contains node?
[13:51] davidwalsh has joined the channel
[13:51] caolanm: it seems to pick up node.js and #nodejs
[13:51] caolanm: not sure what else it searches for
[13:52] omarkj: Be pasted the code in here the other day, I think you're right.
[13:52] _announcer: Twitter: "Is playing with new technology, and # nodejs busy at work. Is mainly to try Botta This twitti." [is] -- Ómar Kjartan Yasin. http://twitter.com/omarkj/status/20140820460
[13:53] omarkj: Oh, it tries to translate it.
[13:53] scoates has left the channel
[13:54] ajpiano has joined the channel
[13:55] daniellindsley has joined the channel
[13:56] dnolen has joined the channel
[13:56] zomgbie has joined the channel
[13:57] _announcer: Twitter: "node.js - scaling in the large/small - http://al3x.net/2010/07/27/node.html" -- Mark Needham. http://twitter.com/markhneedham/status/20141156385
[13:58] _announcer: Twitter: "Oh, node.js library found in POST can be flown - and watching U: technoweenie&#39;s node-scoped-http-client at master - GitHub - http://j.mp/c0iVzy" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/20141214663
[13:59] dylang has joined the channel
[14:04] EyePulp has joined the channel
[14:06] _announcer: Twitter: "Yep... definitely just wrote sys.puts('...') in the firebug console. I guess that's one context switching problem that #nodejs can't fix. :p" -- Jeremy Martin. http://twitter.com/jmar777/status/20141706952
[14:06] jmar777 has joined the channel
[14:07] matt_c has joined the channel
[14:07] javajunky: ^--^ apart from the fact node now uses console.log :P
[14:07] royi has joined the channel
[14:08] royi has left the channel
[14:08] omarkj: I'm still trying to get used to writing that.
[14:09] mAritz: and you don't need console.log(expression) in firebug because you can just enter the expression and it gives you the result on it's own?!
[14:09] jmar777: i guess node _does_ fix that problem then lol... i guess i missed that in the api changes
[14:09] femto: DISCO POGO
[14:11] mw_ has joined the channel
[14:11] dcolish has left the channel
[14:11] mw_ has joined the channel
[14:13] jwcooper has joined the channel
[14:13] omarkj: jmar777: It's changing pretty fast so it's a bit hard to keep up with it!
[14:14] jmar777: omarkj: no kidding. i say that's 100% a good thing though, at least until it's officially labeled as a stable API
[14:14] omarkj: It is.
[14:15] ph^ has joined the channel
[14:15] mAritz: omarkj & jmar777: http://github.com/ry/node/blob/master/ChangeLog ;)
[14:15] jmar777: omarkj: the rate of progress is astounding, and it definitely makes sense to embrace a flexible API at this stage, rather than cement in inconsistencies or less-than-optimal API decisions
[14:16] omarkj: jmar777: I agree.
[14:16] omarkj: mAritz: Thanks!
[14:16] zapnap has joined the channel
[14:17] jmar777: is there any sort of a guestimate for a "stable" release yet?
[14:18] zaach has joined the channel
[14:19] mAritz: jmar777: when it's done, but before due nukem forever.
[14:20] omarkj: lol
[14:20] ThePub has joined the channel
[14:20] qschzt has joined the channel
[14:20] AAA_awright has joined the channel
[14:21] stepheneb has joined the channel
[14:22] ryan_gahl has joined the channel
[14:22] jmar777: mAritz: ha... aight. been enjoying playing around with it for some personal projects. would be cool to be able to advocate it for work stuff too though
[14:22] smtlaissezfaire has joined the channel
[14:22] mAritz: there are quite a few companies using it already and even some folks at yahoo are considering it.
[14:22] jmar777: although I guess some early adopters have had success with it, despite production use warnings. maybe i can squeeze it in for some non-mission critical messaging systems :)
[14:22] zomgbie has joined the channel
[14:23] knuckolls has joined the channel
[14:23] omarkj: We're using it for a pretty widely used OMS.
[14:23] jmar777: omarkj: is there more info on that somewhere?
[14:23] omarkj: Nah, I should blog about it.
[14:24] omarkj: The product is called Kodiak (http://www.kodiak.is/). The client itself is written for Windows in .NET, but the servers run erlang, node and C# (for different parts).
[14:24] Yuffster has joined the channel
[14:25] omarkj: We're using it with Nasdaq OMX Nordic.
[14:25] omarkj: Not US traffic levels, but still quite hefty.
[14:26] jmar777: omarkj: I would definitely enjoy reading a post about that... specifically any steps you had to do with regards to high availability. that's a very interesting blend of technologies too, btw
[14:26] _announcer: Twitter: "Yet another collaborative sketching application (HTML5 Canvas, Websocket, Node.js) - http://portfoli.no/cosketch/" -- Juho Vepsäläinen. http://twitter.com/bebraw/status/20143128384
[14:26] _announcer: Twitter: "@jmar777 You can use console.log in #nodejs as well ;)" -- Arnout Kazemier. http://twitter.com/3rdEden/status/20143132536
[14:27] omarkj: jmar777: This is what happens when a staffer wrote his PhD on programming languages. :)
[14:29] jmar777: omarkj: lol... i guess we know where he falls on the mono/polyglotism debates...
[14:29] omarkj: Yup.
[14:29] Gruni has joined the channel
[14:29] omarkj: It's fun. I've been trying to wrap my head around Haskell, which is used to do some parsing.
[14:30] omarkj: jmar777: I'll find time to write something soon.
[14:31] omarkj: But today I'm just going to enjoy my day off. :)
[14:31] jmar777: omarkj: Haskell and Erlang are on my shortlist to learn right now. Been doing mostly Java/C#/JavaScript/PHP... think it's time for me to step out of the mainstream c-style languages
[14:32] AAA_awright: Does anyone have any clue, better than mine, what kind of effort it would take to port Node.js to SpiderMonkey?
[14:32] mape: Why port it?
[14:33] jmar777: omarkj: where is your blog?
[14:34] dbloete has joined the channel
[14:34] jmar777: AAA_awright: i would say pretty substantial. the #node API would be fairly straight forward to mock up.... but to provide the non blocking wrappers for all the IO would be quite the chore
[14:35] dbloete has left the channel
[14:37] gfodor has joined the channel
[14:39] Blink7 has joined the channel
[14:39] steadicat has joined the channel
[14:42] mscdex: node.js rules!
[14:42] stepheneb has joined the channel
[14:43] n3v3le1 has joined the channel
[14:44] Viriix: is github failing for anyone else atm?
[14:45] _announcer: Twitter: "partnered with Environmental TwitterBot node.js move (server) want! What is more, ※ Ripu might move me to fly with PHP refuse" [ja] -- KOBA789(こば). http://twitter.com/KOBA789/status/20144405818
[14:45] loincloth has joined the channel
[14:46] mscdex: failing how? seems to work fine for me
[14:46] maushu: ません ※PHPお断り!!!
[14:47] Viriix: git clone http://github.com/ry/node.git // fails with "error: RPC failed; result=22 HTTP code = 417"
[14:47] quirkey has joined the channel
[14:47] AAA_awright has joined the channel
[14:47] loincloth has joined the channel
[14:48] n3v3le has joined the channel
[14:48] maushu: Expectation failed?
[14:50] AAA_awright: mape: Because that's the Javascript interpreter I use for other projects it would be nice to keep things consistent, that's all
[14:50] mape: k
[14:50] podman has joined the channel
[14:50] podman: morning
[14:51] _announcer: Twitter: "Interesting presentation about Node.js Uhm http://www.youtube.com/watch?v=F6k8lTrAE2g but too many sites that I can listen carefully" [ro] -- adormitu. http://twitter.com/adormitu/status/20144848542
[14:52] podman: so my site is launched
[14:52] paul_irish_ has joined the channel
[14:52] stride: Viriix: just git clone'd it on one of my machines, worked fine (git version 1.5.5.6)
[14:53] stride: podman: congratulations
[14:53] Viriix: << git 1.7.2  .. hmmm
[14:53] AAA_awright: And changing the build system... I mean, that's necessitating shipping several dozen python libraries for the sole purpose of building the program, And it's the last thing necessitating keeping the language on my web server (for web development, at least)
[14:53] podman: http://www.sproutvideo.com if anyone is interested
[14:54] dylang has joined the channel
[14:54] _announcer: Twitter: "just released #nodejs library for easy loading from #redis http://github.com/igo/redis2json" -- igo. http://twitter.com/i_g_o/status/20145051894
[14:54] Viriix: squid probably just isn't playing nice >_<
[14:55] stride: AAA_awright: I think mscdex packages releases as deb files if you'd rather use something precompiled
[14:55] _announcer: Twitter: "@nonken Also, you could use the node.js shell to show off the language ;P" -- Micheil Smith. http://twitter.com/miksago/status/20145126870
[14:56] mscdex: yep :-D
[14:56] mscdex: completely automated building
[14:56] mscdex: http://mscdex.net/node
[14:57] AAA_awright: Ah cool... I like Git too much to give it up though, I think :)
[14:57] maushu: between 100 and 200 bytes -> 40 bytes per http connection? Awesome.
[14:57] mscdex: yes, ftw.
[14:58] TheHippo has joined the channel
[14:58] mscdex: he definitely took a big byte out of the size
[14:58] mscdex: ACTION snickers
[14:58] maushu: You are going to pun hell.
[14:58] mscdex: i'm already there brutha :-D
[14:59] maushu: PUN HELL!
[15:00] Blink7 has joined the channel
[15:00] mikeal has joined the channel
[15:05] sveimac has joined the channel
[15:05] ryan_gahl: AAA_awright: node-spidermonkey (tracemonkey/jaegermonkey?) would be neat (back to my love of E4X for templating), but probably not going to happen in a viable time-frame and/or with true parity
[15:06] mscdex: i thought there was something for tracemonkey already....
[15:06] AAA_awright: ryan_gahl: Actually that was some of my reason, embedded XML in a programming language, I love the concept of it
[15:06] mscdex: maybe not quite as complete as node though
[15:07] aheckmann has joined the channel
[15:07] dylang has joined the channel
[15:08] ryan_gahl: mscdex: IMHO the closest thing might be Aptana's Jaxer, which is definitely nice, but is no node
[15:08] mscdex: oh, i meant like SpiderApe and Flusspferd
[15:08] mscdex: both by the same author
[15:09] mscdex: not sure if there's any others for mozilla js engines
[15:09] ryan_gahl: narwhal
[15:09] ryan_gahl: (which is now ringo)
[15:10] mscdex: also: http://code.google.com/p/jslibs/
[15:11] mscdex: and APE-Project uses spidermonkey
[15:15] tmpvar has joined the channel
[15:16] tmpvar: morning
[15:16] ashleydev has joined the channel
[15:17] daniellindsley has joined the channel
[15:18] [[zz]] has joined the channel
[15:19] mscdex: morning
[15:21] mizerydearia has joined the channel
[15:22] voxpelli has joined the channel
[15:23] ben_alman: anyone on os x testing in multiple versions of firefox concurrently?
[15:25] ryan_gahl: AAA_awright: FYI... http://code.google.com/p/v8/issues/detail?id=235#c19 (I forgot I had chimed in there as well on this subject)
[15:25] AAA_awright: "The issue here is that e4x isn't in a standard" It's a draft standard by ECMA International
[15:26] AAA_awright: Ah I see
[15:26] Blink7 has joined the channel
[15:26] ryan_gahl: I had toyed with a node.js + jaxer architecture - but for now am focusing more on a pure node framework
[15:26] _announcer: Twitter: "A nice article about node.js and scaling: http://u.nu/36i9e (by @al3x)" -- Antti Sykäri. http://twitter.com/anttisykari/status/20147274044
[15:27] ryan_gahl: oh cool, looks like there's a $200 bounty on adding e4x to v8 too :)
[15:27] bradleymeck: ACTION flops about *goes to look at wtf jaxer is*
[15:27] AAA_awright: It would be hard to do because E4X isn't valid XML
[15:27] ryan_gahl: www.jaxer.org
[15:27] ryan_gahl: ?
[15:28] ryan_gahl: sure it is
[15:28] AAA_awright: It allows things like <{expression}>
[15:28] AAA_awright: iirc
[15:28] bradleymeck: e4x  makes my eyes bleed
[15:28] ryan_gahl: it's sooo nice
[15:29] mscdex: xmlol
[15:29] AAA_awright: "XML is like violence, if it doesn't work use more"
[15:30] adrienf: i've just updated (rewritten) my template engine, anyone interested in taking a look ? http://github.com/afriggeri/node-swift
[15:30] AAA_awright: Node.js would also need a DOM implementation to do anything meaningful with E4X
[15:30] bradleymeck: im just going to ask, what it gives me over JS dom wrappers that makes the cost of the language grammar worth it
[15:30] bradleymeck: we do have dome AAA
[15:30] bradleymeck: dom*
[15:30] TheHippo has left the channel
[15:30] tmpvar: not the jaxer conversation, PLEASE
[15:30] bradleymeck: e4x right now
[15:31] ryan_gahl: AAA_awright: http://github.com/tmpvar/jsdom
[15:31] tmpvar: equally as bad IMO
[15:31] bradleymeck: agree
[15:31] ryan_gahl: tmpvar: just don't participate :)
[15:31] tmpvar: you must know my opinion!
[15:31] AAA_awright: I was thinking in C/C++ but that doesn't look bad
[15:31] bradleymeck: if there was something to be gained other than the syntax id be up for it, that syntax bleeds ll(*)
[15:31] ryan_gahl: jaxer != bad, just != node
[15:32] tmpvar: ryan_gahl, fair enough, why did they stop working on it then?
[15:32] JustinCampbell has joined the channel
[15:32] ryan_gahl: also != $$
[15:32] JimBastard has joined the channel
[15:32] ryan_gahl: they moved to RoR crap because it paid the bills
[15:33] JimBastard: Rooooarrrrr
[15:33] tmpvar: no comment
[15:33] JimBastard: yo dawg i heard you liked serving 5 requests per second
[15:33] JimBastard: lets spin up 10 more mongrels!
[15:34] devinus has joined the channel
[15:35] zedas: JimBastard: 10's not enough.
[15:35] ryan_gahl: look, E4X can be _very_ useful, whether or not you can see that, doesn't make it less useful for others - I for one love it and would make use of it for super-fast super powerful templating if it was available 
[15:35] sechrist: http://www.reddit.com/r/funny/comments/cwau9/fuck_my_life/
[15:35] JimBastard: whats e4x again
[15:35] tmpvar: embedded xml in js
[15:35] JimBastard: isnt that what actionscript uses?
[15:35] ryan_gahl: but it's not, and won't be for a while
[15:35] AAA_awright: ECMAScript for XML or something
[15:35] sechrist: I miss #bastardfacts
[15:35] adrienf: no one ? i could really use some feedback :)
[15:36] bradleymeck: my only real problem w/ e4x is that whoever wrote the language grammar shot himself in the foot and kept shooting, .. is now ambiguous, <x until end of string is ambiguous. @ is kinda nice, but still somewhat ambiguous w/o reffering to previous statement. it can never beat a sax parse+raw script
[15:36] JimBastard: sechrist: they are there, just gotta parse them
[15:36] JustinCampbell_ has joined the channel
[15:36] JimBastard: is e4x like mxml
[15:36] bradleymeck: http://en.wikipedia.org/wiki/ECMAScript_for_XML
[15:36] JimBastard: i see
[15:36] borior: Hi all, what could be causing hanging open files in node? I have an Express app that's after running for some time, will die with "EMFILE: Too many open files"
[15:36] JimBastard: looks like the retarded cousin of JSON
[15:36] AAA_awright: I can imagine that, it has odd problems, but otherwise seems cool
[15:37] JimBastard: borior: not closing the file?
[15:37] AAA_awright: That's not politically correct! :p
[15:37] peutetre has joined the channel
[15:37] javajunky: borior: you closing all your connections ? (I think from memory that gives an error like that too...)
[15:37] JimBastard: you should be happy im wearing pants
[15:37] borior: JimBastard: if I'm only using readFile{,sync} that shouldn't be an issue, right?
[15:38] borior: javajunky: hmm, interesting. I think so.
[15:38] JimBastard: ohh that you dont have to close files
[15:38] bradleymeck: does e4x allow subfragments (blocks/subtemplates/ whatev you call em)
[15:38] JustinCampbell_ has left the channel
[15:39] ryan_gahl: bradleymeck: yes
[15:39] bradleymeck: cant find any ref
[15:39] JustinCampbell has joined the channel
[15:39] JimBastard: sup JustinCampbell 
[15:39] JustinCampbell: sup JimBastard 
[15:39] JimBastard: <3 rainbow patch
[15:39] ryan_gahl: http://jaxer.org/tutorials/server_side_jquery -- a contrived example from the jaxer site
[15:39] JimBastard: :-D
[15:39] JustinCampbell: haha
[15:39] JimBastard: << marak 
[15:39] JimBastard: if i didnt say so
[15:40] JustinCampbell: i was thinking to expand on it to highlight json and xml output
[15:40] JustinCampbell: make sys.inspect pretty
[15:40] JimBastard: there is stuff like eyes
[15:40] JimBastard: http://github.com/nodejitsu/node-http-proxy <--- rainbow readme
[15:40] JimBastard: http://github.com/cloudhead/eyes.js
[15:41] mattly has joined the channel
[15:42] ryan_gahl: bradleymeck: within the {expression} sections, any js is valid, including a function call that outputs another fragment
[15:42] JustinCampbell: JimBastard: thats pretty awesome
[15:42] JimBastard: which one? >.<
[15:42] JustinCampbell: eyes
[15:42] mscdex: is that like xeyes but for node?
[15:42] JimBastard: yaya eyes will help
[15:42] maushu: Instead of making "rainbow readmes"...
[15:42] JimBastard: i think thats what you were talking about
[15:42] maushu: ACTION makes the gesture with the fingers.
[15:43] softdrink has joined the channel
[15:43] maushu: ...you could be coding moar code!
[15:43] JimBastard: maushu: go release some code
[15:43] bradleymeck: ryan_gahl: but then what if i use {x:y} ? could mean js label x:,var y or an obj map
[15:43] robinduckett: You bastard
[15:43] robinduckett: <3
[15:43] maushu: Besides, rainbow readmes? You freak.
[15:43] mscdex: rainbow readme? what does it mean?
[15:43] jwcooper: How can I add a path to the node 'require.paths'?
[15:43] adrienf: ryan_gahl: any js or any js _expression_ ?
[15:44] mscdex: jwcooper: require.paths.unshift('/path/here');
[15:44] ryan_gahl: bradleymeck: you have to escape curlies
[15:44] maushu: mscdex: See for yourself: http://i.imgur.com/dSSUX.png
[15:44] JustinCampbell: a little off topic, but does anyone here play starcraft 2?
[15:44] jwcooper: mscdex: will that stick between repl sessions?
[15:44] JimBastard: the man trying should never be talked down to the man saying hes going to try
[15:44] JustinCampbell: i just got it last night
[15:44] maushu: It's an attempt against programmers everywhere.
[15:44] mscdex: jwcooper: i would think so
[15:44] mscdex: jwcooper: oh wait, between them i dunno
[15:45] maushu: JustinCampbell: Does it run on my 3 year old laptop? xD
[15:45] mscdex: jwcooper: i doubt it
[15:45] JustinCampbell: maushu: probably not :(
[15:45] jwcooper: mscdex: yea, I'm trying to add a global path for my npm libraries.  The default isn't working.
[15:45] bradleymeck: escape them? its valid in both w/o any change, {{k:v}} would then be the object map literal in e4x?
[15:45] JustinCampbell: it barely runs on my 1 year old macbook
[15:45] javajunky: JustinCampbell: yeah same
[15:45] javajunky: JustinCampbell: but I was reading earlier it could be to do with the static cut scenes not being frame-capped (Weirdly)
[15:45] mscdex: jwcooper: i think there may be an environment variable... but i'm not 100% what it's called
[15:46] Blink7 has joined the channel
[15:46] JustinCampbell: yeah i had problems with cutscenes in windowed mode
[15:46] bradleymeck: i love the query syntax e4x brings, but the data injection seems brutal
[15:46] jwcooper: mscdex: thanks, that may be enough to help me find it
[15:46] JustinCampbell: no problems in fullscreen or multiplayer (no cutscenes)
[15:46] zapnap has joined the channel
[15:46] ryan_gahl: bradleymeck: not quite... {'{'} == open curly 
[15:46] mscdex: open moe!
[15:47] mscdex: nyuk nyuk nyuk
[15:47] ryan_gahl: bradleymeck: but you wouldn't really be doing that all over the place, at least not normally
[15:47] bradleymeck: but i use object literals a lot :(
[15:48] mscdex: jwcooper: NODE_PATH
[15:48] jwcooper: mscdex: Cool, thanks!
[15:48] samdk has joined the channel
[15:48] FransWillem has joined the channel
[15:49] ryan_gahl: bradleymeck: yeah, but what's you're desired use case in regards to E4X templating and literals? 
[15:49] ryan_gahl: your*
[15:49] bradleymeck: same as most of my templating wants, send in some html that holds up the JS events / data im passing about
[15:50] powdahound has joined the channel
[15:50] ryan_gahl: well, without something concrete I can't really tell you how it might look in E4X
[15:50] maushu: JustinCampbell: The performance on the macbook is much worse.
[15:51] JustinCampbell: maushu: i heard running it in bootcamp helps
[15:51] JustinCampbell: but id rather not
[15:51] ryan_gahl: bradleymeck: and of course this all moot in node-land anyway 
[15:52] bradleymeck: well, not really, it seems to be just a dom manipulation convenience syntax which is nice, but somewhat ambiguous. I can think of a ton of use cases for that, so nothing really comes out as a good example case
[15:52] claudiu__ has joined the channel
[15:53] jakehow has joined the channel
[15:55] bradleymeck: i think the selling point to get one of us to impl it would be to show a good use case where it shines above just using a  jsonml converter
[15:55] ryan_gahl: "just a dom manipulation convenience syntax" is "just a tad incomplete" - it also gives a full integrated query capability
[15:56] ryan_gahl: https://developer.mozilla.org/en/E4X_for_templating#Inline_functions 
[15:57] ryan_gahl: https://developer.mozilla.org/en/E4X_Tutorial:Accessing_XML_children
[15:57] ryan_gahl: https://developer.mozilla.org/en/E4X_Tutorial:Descendants_and_Filters
[15:57] ryan_gahl: templating is just 1 use case
[15:57] JimBastard: http://www.youtube.com/watch?v=PI3mK1X1vY0
[15:58] ryan_gahl: but i digress... all moot
[15:58] Gruni has joined the channel
[15:59] paul_irish_ has joined the channel
[15:59] bradleymeck: thats still just dom manip, with inline functions having returns populate things
[15:59] bradleymeck: basically, you gotta make a case against sizzle and jsonml
[16:00] bradleymeck: well not even sizzle really, but just filtering objects in json
[16:00] adrienf: isn't dom manipulation really expensive vs. pure text manipulation, in a templating use case ?
[16:01] MrNibbles: hey anyone remember the guy who set up http://www.sproutvideo.com/ ?
[16:01] mape: Hmm, node-profile is trending on github..
[16:01] mscdex: yay liveedit!
[16:01] mape: JimBastard: Any idea what makes things trend? Doesn't make much sence with so few watchers
[16:01] bradleymeck: adrienf yes, but w/ jsonml and e4x is you are really just passing around encapsulations of strings rather than full dom
[16:01] mscdex: mape: doesn't it have to do with frequency of commits?
[16:01] mscdex: er
[16:01] mscdex: pushes i mean
[16:02] mape: Can't just be that? I mean I could do a shitty project and do hundreds of pushes?
[16:02] mscdex: i dunno, someone was saying that the other night
[16:02] podman: you know what sucks? the iPad.
[16:02] romainhuet has joined the channel
[16:03] mscdex: iPadawan
[16:03] ryan_gahl: bradleymeck: well, since it's moot and I need to move on anyway, I'll leave you to believe E4X is in the box you've put it in... perhaps some other time I'll put together something along the lines of a "here's where E4X shines vs. XYZ" gist/article
[16:03] podman: i'm trying to build a slideshow for it and mobile safari just keeps crashing
[16:03] podman: works fine on the iPhone though
[16:03] bradleymeck: i would like that
[16:04] bradleymeck: if it has a use case where it shines, i would like to see it, i just dont w/o a good example vs dom/jsonml
[16:04] adrienf: bradleymeck: I still can't see the pros of jsonml/e4x vs. pure text templates
[16:04] sveisvei has joined the channel
[16:05] bradleymeck: jsonml and e4x allow relativity of values(based upon parents etc)/ and subtemplates
[16:05] bradleymeck: you can do those in text templates as well, but it requires more manual setup
[16:05] adrienf: relativity of values ?
[16:06] caolanm: I hadn't heard of E4X before
[16:06] caolanm: interesting
[16:06] bradleymeck: caolanm, it seems like a nice alternative to DOM hell, hopefully an article will make it more clear on when to use it over other things
[16:07] ehaas has joined the channel
[16:07] JustinCampbell: mape: also looks at tweets
[16:08] JustinCampbell: mape: http://repopular.com/
[16:08] mape: Oh k, hmm nodejs.se didn't pick mine up.. 
[16:08] _announcer: Twitter: "@wavded funny you should mention it, because i had been thinking building such a service (based on node.js of course!) would be awesome." -- Kyle Simpson. http://twitter.com/getify/status/20150062432
[16:09] mape: Or hmm it did, but not the retweets
[16:09] bradleymeck: adrienf, say you have some context set up, and you need to set the contents of xml based upon not just a variable, but a variety of variables at once, it gets a lil hairy w/ plaintext, but w/ jsonml / e4x it can just be an expression rather than doing odd things like ternary ops that return empty strings a lot
[16:09] _announcer: Twitter: "CouchDB 1.0 Installar there Node.js in Ubuntu | Siedrix http://ow.ly/2jPSE" [fr] -- Loki Zavala. http://twitter.com/Siedrix/status/20150123210
[16:10] marshall_law has joined the channel
[16:11] mattly has joined the channel
[16:12] adrienf: hmm… this means putting some logic in the template, where it could be extracted to the context, I guess
[16:13] jetienne has joined the channel
[16:14] patcoll has joined the channel
[16:14] loinclot_ has joined the channel
[16:15] technoweenie has joined the channel
[16:16] saikat has joined the channel
[16:17] bradleymeck: the logic would handle the template transform based upon the context, yes
[16:17] tjholowaychuk has joined the channel
[16:18] ryan_gahl: the next level up (which e4x makes easy) is declarative programming, which I'm a huge fan of (WHEN DONE RIGHT)
[16:19] loinclot_: hey all
[16:19] adrienf: but you'd embed the logic inside the template, right ?
[16:19] loinclot_: are there any timeout libraries available?
[16:20] shockie has joined the channel
[16:20] ryan_gahl: adrienf: "the" logic is not quite correct... because you can get into spaghetti-code if you're not careful... it's more like "the template expansion logic"
[16:20] gfodor has joined the channel
[16:21] bradleymeck: loinclot_ what do you need exactly??
[16:21] jchris has joined the channel
[16:21] ryan_gahl: the actual underlying program logic should/would still be in a code-behind file to maintain a good separation of concerns
[16:22] steadicat has joined the channel
[16:22] adrienf: ryan_gahl: my point is that a template should not do data manipulation (even basic stuff), but maybe I'm just being too anal about that
[16:22] ryan_gahl: but you can do things like declare/express intent at the top level, and then modify underlying implementations easier without having to change the declaration level
[16:23] ryan_gahl: well, a template in terms of presentation, yes
[16:23] bradleymeck: adrienf, no data manip why?
[16:23] bradleymeck: i mean that would mean loops are out
[16:23] tjholowaychuk has joined the channel
[16:23] ryan_gahl: (assuming you mean, it shouldn't modify the source objects)
[16:26] tyfighter has joined the channel
[16:26] mizerydearia has joined the channel
[16:26] bradleymeck: if i got prolog style declarative programming in js i would die w/ joy thinking about that
[16:26] bpot has joined the channel
[16:26] adrienf: ok, a simple example then
[16:27] loincloth: bradleymeck: i'm interested in something for wrapping an arbitrary block of code in a timeout
[16:27] adrienf: let's say you have a list of users, and you want to display their name, and then their name in lowercase
[16:27] bradleymeck: setTimeout?
[16:27] ryan_gahl: bradleymeck: e4x makes implementing this type of engine easier (have a working framework in jaxer for this stuff)
[16:27] loincloth: bradleymeck: it should raise if the block doesn't finish execution in the specified time
[16:27] ryan_gahl: (just as an example)
[16:28] loincloth: not a delayed execution thing
[16:28] loincloth: a timeout
[16:28] adrienf: pretty dumb, but anyway, you have several ways of doing that
[16:28] _announcer: Twitter: ""Be careful making abstractions. You might have to use them." - @ryah (http://bit.ly/ap0KOi) #nodejs" -- Jeremy Martin. http://twitter.com/jmar777/status/20151359621
[16:28] bradleymeck: loincloth, look at jefe on github
[16:28] bradleymeck: which thing ryan_gahl?
[16:29] ryan_gahl: adrienf: in e4x... "var template = <user>{user.name} - lower: {user.name.toLower()}</user>;
[16:29] ryan_gahl: bradleymeck: declarative programming
[16:29] JimBastard: mape: twitter + watchers rate
[16:29] JimBastard: twitter mentions do it
[16:29] mape: k
[16:29] bradleymeck: mmm not sure how, still seems functional?
[16:29] adrienf: ryan_gahl: what bothers me in there is that you have an explicit call to toLowerCase…
[16:29] JimBastard: with your amount of watchers, its gonna untrend fast
[16:30] mape: Yeah, just did
[16:30] adrienf: compare to: http://gist.github.com/504889
[16:30] _announcer: Twitter: "Need to revisit Mu, set it up for NPM and see what it takes to setup a new template handler in Express. http://github.com/dshaw/Mu #nodejs" -- Daniel Shaw. http://twitter.com/dshaw/status/20151511429
[16:31] benburkert has joined the channel
[16:31] ryan_gahl: adrienf: yeah, you're just being anal... in your model you still call out, but you have an extra level of parse logic to accomplish the same thing
[16:31] bradleymeck: also sorry if i seem slow, i just learn through coding myself/real world examples, so theory gets me a bit off
[16:32] sudoer has joined the channel
[16:32] adrienf: ryan_gahl: actually, compared to parsing xml and JS, parsing such a basic template language is really fast
[16:33] ryan_gahl: bradleymeck: i hear ya... give me time - porting my framework to node and de-E4X-ing it... will write up usages/samples once I get it there - you know how these side projects go though
[16:33] ryan_gahl: (slow)
[16:33] adrienf: of course, it's not native, but then again, there's no native e4x in v8
[16:33] bradleymeck: i got plenty of time
[16:34] ryan_gahl: adrienf: right, which is why i keep citing the mootness of this discussion (other than the possible learning)
[16:34] ryan_gahl: adrienf: on the parsing... there's no way your going to beat a natice e4x impl
[16:34] ryan_gahl: native*
[16:35] adrienf: but my argument was more focused on non native template languages (ala ejs)
[16:36] _announcer: Twitter: "@dshaw NodeJs for work or pleasure?" -- Matthew Taylor. http://twitter.com/rhyolight/status/20151880770
[16:36] ryan_gahl: adrienf: I have your project watched, will try to see about using it when i have some time and will give you feedback for sure
[16:37] _announcer: Twitter: "http://tinyurl.com/27utc7j  YouTube - Node.js: JavaScript on the Server" -- onion_soup. http://twitter.com/onion_soup/status/20151924359
[16:37] adrienf: ryan_gahl: nice, i'll try to do a writeup of the fancy (and time saving) features
[16:43] _announcer: Twitter: "Got my upgrades for postgres-pure.js to actually compile. Now to make it do what I expect. :) #nodejs" -- ʍɐɥs uuʎɹnɐ. http://twitter.com/aurynn/status/20152330764
[16:43] c4milo has joined the channel
[16:43] mikeal has joined the channel
[16:44] aurynn: that bot is quite responsive.
[16:44] stepheneb has joined the channel
[16:45] c4milo: isaac ? 
[16:47] bradleymeck: s
[16:47] rauchg_ has joined the channel
[16:48] _announcer: Twitter: "@firdaus_halim http-parser, libev, libeio, libgc, glib, json-c, llvm.  Sure if only we can put all those & more together. nodejs.org?" -- Yesudeep. http://twitter.com/yesudeep/status/20152630341
[16:50] astrolin_ has joined the channel
[16:50] JimBastard: !tweet @firdaus_halim node.js node.js node.js!
[16:51] mjr_ has joined the channel
[16:53] rsms has joined the channel
[16:55] V1 has joined the channel
[16:57] kevwil has joined the channel
[16:57] bradleymeck: anyone got a use case for liveedit?
[16:58] zapnap has joined the channel
[16:58] V1: quick bugfixes ;?
[16:58] mape: teaching people
[16:59] V1: could be usefull if you created a admin panel in node.js and need to hot fix something.
[16:59] bradleymeck: ah, tis true, rather than redeploy, a remote hotfix
[17:01] daniel has joined the channel
[17:01] maushu: Hmm, the file would need to be changed too.
[17:01] maushu: But yeah, liveedit would be awesome.
[17:02] V1: maushu you can just write the changes to the file once you have done the edit
[17:02] daniel: hi, have anybody had any problem with resolving dependencies when using npm?
[17:03] daniel: I have a problem with expat not found when using node-xmpp
[17:03] maushu: Actually, liveedit would be more than awesome.
[17:03] icebox has joined the channel
[17:04] JimBastard: bradleymeck: job interviews
[17:04] V1: You could also use liveedit for hot reloading :)
[17:04] bradleymeck: its in maushu, give me my test cases!
[17:04] bradleymeck: ooh, fizzbuzz
[17:04] c4milo: I'm having troubles with npm as well. I'm trying to publish a new version of my module and it doesn't work :S 
[17:04] maushu: bradleymeck: Test cases?
[17:04] maushu: For liveedit?
[17:05] bradleymeck: well, cases where ppl use it not unit tests
[17:05] maushu: Wait, are we talking about the same thing here?
[17:05] maushu: I'm talking about v8 liveedit.
[17:06] fermion has joined the channel
[17:06] ehaas has left the channel
[17:06] daniel: c4milo,: do you have to load these modules in any special ways, when you use npm?
[17:07] JimBastard: can anyone explain to me clearly the use case for process.nextTick()? indexzero added this last night and it just doesnt seem kosher to me
[17:07] JimBastard: http://github.com/indexzero/resourcer/blob/f148ad90c9dd87a95c56cfbd4dde306d27080eaa/lib/resourcer/core.js#L115
[17:07] JimBastard: couldnt you achieve the same thing with some closure magic?
[17:07] dylang has joined the channel
[17:08] V1: As far I'm aware of you should use process.nextTick when you expect the given function to block. 
[17:08] c4milo: daniel: nop, just require('inotify') 
[17:08] Gruni has joined the channel
[17:08] JimBastard: i dont think thats it V1 
[17:09] maushu: JimBastard: Closure magic? Last time I checked closures are still sync.
[17:09] JimBastard: so do you have an answer?
[17:10] maushu: bradleymeck: With liveedit I could actually change what announcer does while it is running.
[17:10] bradleymeck: jim, he needs to wait for listeners to be added
[17:10] creationix has joined the channel
[17:10] maushu: I wouldn't need to split the connection and logic among multiple processes (or sandboxes).
[17:10] daniel: c4milo: hmm, ok - somehow it doesnt load dependencies...
[17:11] maushu: brb, home
[17:11] JimBastard: bradleymeck: do you mean   resourcer.register(name, F); ?
[17:11] JimBastard: i feel like i have a fundamental gap in knowledge here for the next of nextTick
[17:12] ryan_gahl: JimBastard: his comments and usage seem pretty valid to me. The alternative is to make the calling code explicitly call init I guess.
[17:12] JimBastard: ohh, does this allow you to not have to call init?
[17:12] JimBastard: sugar syntax?
[17:12] ryan_gahl: JimBastard: right, he's calling init automatically on the next tick while still letting calling code wire stuff up before init is called
[17:13] steadicat has joined the channel
[17:13] WALoeIII has joined the channel
[17:13] _announcer: Twitter: "I LOVE NODE.JS! It is so suited to develop web applications with emphasis on I/O." -- Kelvin. http://twitter.com/kelvw/status/20154221250
[17:13] JimBastard: and what is a tick? one cycle of the event loop?
[17:13] JimBastard: !tweet @kelvw go go node.js!
[17:14] DTrejo__ has joined the channel
[17:14] DTrejo__: hello
[17:14] bradleymeck: yes its a single call in the event loop
[17:14] ryan_gahl: yeah, nextTick is synonmous with setTimeout(func, milliseconds).. but faster 
[17:14] DTrejo__: I'm updating an install guide for node.js, and I'm wondering whether this is the cutting edge of node: git clone git://github.com/ry/node.git
[17:14] JimBastard: bradleymeck: so since its all sync code here, next tick will always work? 
[17:14] JimBastard: if it was something async nextTick wouldnt work?
[17:14] DTrejo__: If so, maybe that's not the best to recommend in the install guide?
[17:14] bradleymeck: it should always be queued
[17:15] JimBastard: DTrejo__: thats where HEAD lives
[17:15] DTrejo__: JimBastard: head is stable / latest release version?
[17:15] DTrejo__: I'm not so familiar with git
[17:16] isaacs has joined the channel
[17:16] bradleymeck: no that is last revision
[17:17] creationix has joined the channel
[17:17] DTrejo__: bradleymeck: hmm, so is there a good way for people to download the source using git and it will always be the latest release? something like /ry/node-latest.git or something like that?
[17:17] knuckolls has joined the channel
[17:18] isaacs: creationix: hey, i landed your pet feature in npm last night.  (not in master yet, still cleaning up all the bugs and polishing edges)
[17:19] JimBastard: http://github.com/ry/node/tree/stable
[17:19] inimino: DTrejo__ ⋱ people who don't want the bleeding edge should just use the published tarball
[17:19] JimBastard: LOL
[17:19] isaacs: creationix: npm_config_root=/some/folder npm ls
[17:19] JimBastard: i wouldnt go for that
[17:19] technoweenie: DTrejo__: not really.  you can get master with http://github.com/ry/node/zipball/master (or tarball)
[17:19] isaacs: creationix: so you can set confs on the env or cli, or a user config, or a global config
[17:19] ctp has joined the channel
[17:21] mAritz has joined the channel
[17:21] DTrejo__: technoweenie: master means the latest release like 0.1.102? it seems like it was changed just last night
[17:21] technoweenie: last night
[17:21] technoweenie: there's no "latest tag" shortcut
[17:22] technoweenie: well, it could work if someone maintained some tag in node like 'stable'
[17:23] tjholowaychuk: creationix: do you have that demo up in a repo?
[17:24] DTrejo__: technoweenie: hmm, well I hope people don't run into problems installing from git://github.com/ry/node.git
[17:24] isaacs: technoweenie: curl -s "http://nodejs.org/" | egrep -o 'http://[^"]+tar.gz'
[17:24] DTrejo__: thanks gu7ys
[17:25] isaacs: it'd be nice if there was a "latest" symlink in http://nodejs.org/dist/
[17:25] isaacs: ryah: ^
[17:25] ag90 has joined the channel
[17:26] daniel: isaacs: I found a problem when using npm with node-expat, this is probably because it's a compiled module - where should I report it (with a solution) to you or to the pkg manager?
[17:26] slaskis_ has joined the channel
[17:26] isaacs: daniel: either or, really.  if you report the bug to one of us, and it should go to the other, we'll happily close it with a comment saying so, i'm sure :)
[17:26] ag90 has left the channel
[17:27] daniel: isaacs: it's in the main.js file generated by npm
[17:27] daniel: isaacs, I'll add it to npm
[17:27] benburkert has joined the channel
[17:27] sh1mmer has joined the channel
[17:28] isaacs: daniel: ok, kewl
[17:28] cloudhead has joined the channel
[17:29] _announcer: Twitter: ""We can do better than node.js" by @igrigorik at OSCON 2010 http://bit.ly/9AeRp0 (almost same content at railsconf 2010)" -- Jai-Gouk Kim. http://twitter.com/jaigouk/status/20155162044
[17:29] mAritz has joined the channel
[17:31] admc has joined the channel
[17:32] daniel: isaacs, ok, here you go
[17:32] c4milo: isaacs: I have another problem with npm, trying to publish a new version of my module 
[17:33] isaacs: c4milo: what happens?  times out and says "not ok"?
[17:33] c4milo: it ends with "not ok" 
[17:33] DTrejo__: the node wiki is a mess http://wiki.github.com/ry/node/
[17:33] dylang: isaacs or creationix: i'm getting a not_found with npm install nstore
[17:33] isaacs: c4milo: try this: npm config set registry http://registry.npmjs.org/
[17:33] DTrejo__: there's tonsa pages and not super well organized
[17:33] DTrejo__: I'm going to see if I can make that better
[17:33] isaacs: dylang: it's "nStore"
[17:33] isaacs: dylang: capital S
[17:33] isaacs: dylang: i'm going to make it case insensitive soon
[17:34] c4milo: isaacs: thank you it works now :)
[17:35] dylang: isaacs: ah, thanks!  that worked.
[17:35] eck has joined the channel
[17:35] eck has joined the channel
[17:35] creationix has joined the channel
[17:36] _announcer: Twitter: ""We can do better than node.js" by @igrigorik at OSCON 2010 http://bit.ly/9AeRp0" -- Jai-Gouk Kim. http://twitter.com/jaigouk/status/20155572956
[17:37] programble has joined the channel
[17:38] creationix has joined the channel
[17:38] eck has left the channel
[17:40] joshbuddy_ has joined the channel
[17:41] JimBastard: !tweet @jaigouk node > eventmachine 
[17:41] isaacs: daniel: looks like an issue with expat's package.json.  it should have "mail":"./build/default/expat", but it says "main":"./build/default" instead
[17:42] isaacs: daniel: see for yourself: http://registry.npmjs.org/node-expat/latest
[17:42] daniel: isaacs, ok - I will report it there, then
[17:42] daniel: isaacs, thx!
[17:42] isaacs: np
[17:45] deepthawtz has joined the channel
[17:46] bradleymeck: jim, stop firing at unsuspecting targets lol
[17:47] isaacs: hehe
[17:47] isaacs: i'm interested in how they plan to make fibers cheaper and easier than an event loop.
[17:47] AAA_awright: Would asynchronous programming be better implementing dataflow programming?
[17:47] AAA_awright: http://en.wikipedia.org/wiki/Dataflow_programming
[17:48] isaacs: AAA_awright: check out sys.pump
[17:48] isaacs: AAA_awright: sys.pump( readableStream, writableStream, doneCallback )
[17:48] AAA_awright: re http://twitter.com/jaigouk/status/20155572956, http://www.oscon.com/oscon2010/public/schedule/detail/13709 looks quite interesting at doing instruction switching or however it works, whenever it reaches a blocking function
[17:48] isaacs: AAA_awright: with a consistent stream API, nodejs IS a dataflow programming environment
[17:49] isaacs: AAA_awright: that's just coroutines, right?
[17:50] AAA_awright: Interesting
[17:50] bradleymeck: coroutines are the min it would be :/ saved stack + caches
[17:50] AAA_awright: coroutines?
[17:50] bradleymeck: coroutines, just throw the current execution stack in memory along w/ registers etc to be returned to later
[17:51] AAA_awright: Right
[17:51] AAA_awright: I'm not exactly sure
[17:51] isaacs: but that's not free, and doesn't solve the "human brains are single threaded" problem.
[17:52] AAA_awright: So are CPU threads, we just switch back and forth really fast :p
[17:52] isaacs: right
[17:52] isaacs: but you have more htan one cpu :)
[17:52] isaacs: you only have one brain
[17:52] linkwright has joined the channel
[17:53] bradleymeck: continuation style is pretty, but hard to justify in my book since you lose a few things unless you do multiple return values which is bloat generally.
[17:53] isaacs: that's why the two hard things in computer engineering are: 1) shared-state concurrency and 2) naming shit
[17:53] AAA_awright: haha
[17:53] bradleymeck: i dub that variable iv! for it is the fourth nested loop!
[17:54] AAA_awright: Would it make any sense to take a synchronous, blocking program, and for each blocking call, say "everything after this blocking call is the async callback of the call"
[17:54] isaacs: AAA_awright: #1 includes cache management, threads, coroutines, and the like.  the beauty of a single-threaded event loop is that only one thing is ever happening at once.  by using processes for multiprocessing, you have shared-nothing environments that pass messages, so you don't break that consistency
[17:54] isaacs: AAA_awright: that's an awful lot of magic, imo.
[17:55] isaacs: AAA_awright: i'd prefer to have some language feature to make that explicit.
[17:55] isaacs: the ruby community is very trusting in magic.
[17:55] AAA_awright: That's what that ruby implementation appears to do
[17:55] bradleymeck: hoodoo
[17:55] AAA_awright: It's not a half bad language though, perhaps my favorite scripting language after Javascript
[17:55] isaacs: the narrative to-js language seemed interesting.  it was basically JS with a -> operator for async callback stuff.
[17:56] isaacs: no, ruby is very cute.  i dig it.
[17:56] ryan_gahl: ACTION digs isaacs for the same reason ^^
[17:56] deepthawtz: aw, look how they indent only two spaces. so cute..
[17:57] isaacs: ACTION *^_^‘*
[17:57] AAA_awright: I manage to go without whitespace or syntax coloring and newlines
[17:57] AAA_awright: hmmm
[17:57] ryan_gahl: w/o whitespace??? whoa
[17:57] isaacs: and blocks are neat.  i sometimes wish js had them.
[17:58] AAA_awright: Isn't that functionally the same as closures?
[17:58] bradleymeck: *ramble mode* for example streaming data decryption w/ continuation style, you have to include callbacks to do that, basically anything beyond unchanged dataflow (could be changing it behind scenes i guess, but still needs callbacks if you need to work w/ chunks) is same as async callbacks, and you lose a return value that could be used as a precursor check for error, a number of resources used, etc 
[17:58] isaacs: it'd be nice to be able to write an abortable forEach, or a filtering map, or other kinds of things.
[17:58] isaacs: AAA_awright: not quite.
[17:58] technoweenie: 'self' doesnt change inside a ruby block
[17:58] isaacs: AAA_awright: because a "return" in a closure just returns from that closure.  a "return" in a block returns from the *caller*
[17:58] technoweenie: well, it can i guess if you do instance_eval 
[17:59] ryan_gahl: isaacs: i actually liked the old prototype.js way to do abortable iterations
[17:59] ryan_gahl: throw $continue;   or   throw $break;
[17:59] isaacs: AAA_awright: ie, something like this:  for (var i in obj) { if (i === "foo") return; }
[17:59] isaacs: AAA_awright: you can't do that in a forEach without doing a throw or something else awful
[17:59] ryan_gahl: lol
[17:59] bradleymeck: isaacs so you really just want an iterator rather than a loop?
[17:59] isaacs: bradleymeck: i want custom sorts of loops.
[18:00] isaacs: bradleymeck: you can do that with ruby
[18:00] robinduckett has joined the channel
[18:00] AAA_awright: That's just semantics though, continue/break/return, all different ways of spelling goto
[18:00] isaacs: but otoh, it's an invitation to write crazy awful magical DSLs, and you can see, ruby is full of that shit.
[18:00] bradleymeck: goto is love! i want that back for my switch statement, idc about it otherwise
[18:01] mattly has joined the channel
[18:01] Validatorian has joined the channel
[18:01] isaacs: i'd rather have a smaller language, even at the expense of the convenience of blocks.
[18:01] deepthawtz: isaacs: array comprehensions
[18:01] deepthawtz: ?
[18:01] _announcer: Twitter: "How to Stay Up-to-date with Node.js http://post.ly/ptTH" -- David Trejo. http://twitter.com/ddtrejo/status/20157084826
[18:02] isaacs: deepthawtz: yeah, they're kinda neat.
[18:02] femto has joined the channel
[18:02] bradleymeck: multiple return values would be nice, array copy on write slices too, and named arguments... /cries
[18:02] deepthawtz: agreed (*cough* python)
[18:02] tmpvar has joined the channel
[18:03] isaacs: and splats, splats would be loverly
[18:03] deepthawtz: i thought i saw some list comprehension stuff in coffee script. what is that all about?
[18:03] AAA_awright: http://en.wikipedia.org/wiki/Coroutines#cite_ref-6
[18:03] isaacs: function foo (a, b..., cb)
[18:03] bradleymeck: python has no love in my heart, it uses voodoo too often for my tastes and overriding function calls /shiver
[18:04] deepthawtz: well how about: def +() end in ruby? bradleymeck
[18:04] bradleymeck: isaacs the one question is foo(a...,z...)
[18:04] isaacs: bradleymeck: that'd be a syntax error.
[18:04] bradleymeck: i dont know anything about ruby nor do i wish to
[18:04] AAA_awright: And it breaks the assignment operator in favor of named arguments... Javascript has it correct: use a colon: {key: value}
[18:04] isaacs: bradleymeck: but you could do it something like this: http://github.com/isaacs/_ify
[18:04] astrolin_ has joined the channel
[18:04] AAA_awright: I've wanted to make something like this, especially considering the patents are expiring http://en.wikipedia.org/wiki/LabVIEW
[18:05] AAA_awright: Plus LabView is horribly bloated :/
[18:05] bradleymeck: my brain just blew up at those examples
[18:05] rwaldron has joined the channel
[18:05] isaacs: DTrejo__: haha, that blog post is basically "use isaac's stuff"
[18:06] DTrejo__: isaacs: :)
[18:06] DTrejo__: I was about to show it to you 
[18:06] DTrejo__: and see what you think
[18:06] DTrejo__: the formatting was really nasty a moment ago heh
[18:06] isaacs: you should remove the <pre> tags
[18:06] DTrejo__: just fixed it
[18:06] isaacs: oh, kewl
[18:08] DTrejo__: isaacs: is that how you stay up to date?
[18:09] isaacs: DTrejo__: well, i use nave for release versions, and i keep the git repo up to date and installed in my "main" shell
[18:09] bradleymeck: ugg cant describe problem to ask question... lunch time it is then...
[18:10] isaacs: bradleymeck: _ify is less "useful" than it is "interesting"
[18:10] bradleymeck: yea, it would be good to teach ppl about currying though
[18:10] DTrejo__: isaacs: ahh, ok
[18:10] isaacs: bradleymeck: what's interesting is how small the code actually is.
[18:11] isaacs: bradleymeck: the actual functionality is about 60 lines or so
[18:13] V1: When you do a request to node, does node has to re-read the requires from disk? Or does it serve them out of memory?
[18:13] DTrejo__: if anyone has any feedback on my post on how to stay up to date with node.js release versions, let me know (http://blog.dtrejo.com/how-to-stay-up-to-date-with-nodejs)
[18:13] bradleymeck: isaacs you going to be around tonight, i need to bother about a generic resource get/handle api w/ someone
[18:13] isaacs: V1: memory
[18:13] V1: isaacs: Thanks.
[18:13] V1: saves me from running a benchmark on that
[18:13] isaacs: V1: assuming it's been require()-ed already.  put your require() statements at the top of every module in order to avoid surprises.
[18:14] creationix: rauchg_: socket.io works on iPad right?
[18:14] DTrejo__: isaacs: I really like what you've made, makes life easier :)
[18:14] V1: Yeh. Of course :p
[18:14] JimBastard_ has joined the channel
[18:14] isaacs: DTrejo__: that's wonderful to hear :)
[18:14] JimBastard_: check out my friends website, hes an idiot
[18:14] JimBastard_: http://ego.fm/
[18:14] JimBastard_: just a really smart one
[18:14] isaacs: DTrejo__: i'm still listening to mixest :)
[18:14] bradleymeck: is it ever gonna finish loading?
[18:15] jmar777: it's the #nodejs effect
[18:15] rauchg_: creationix: yup
[18:15] creationix: hmm
[18:15] creationix: debugging on mobile devices is hard
[18:15] rauchg_: yup indeed
[18:15] DTrejo__: isaacs: hehe cool :) things have a bit slow lately, but we're still working on it
[18:16] rauchg_: i think i'm gonna submit tests to testswarm 
[18:16] sudoer has joined the channel
[18:16] rauchg_: but i can only submit lightweight unit tests 
[18:16] rauchg_: i think 
[18:16] tjholowaychuk: creationix: the mobile webkit has some kind of console doesnt it?
[18:16] isaacs: DTrejo__: you guys did a good job of getting out a minimum viable product.   there's not much to it, but it's just enough to be addictive and useful.
[18:16] rauchg_: i'm working on selenium tests for socket.io
[18:16] DTrejo__: JimBastard_: interesting, too bad the formatting is a bit strange in chrome
[18:16] isaacs: DTrejo__: if you didn't touch it ever again, i'd probably keep using it, at least until someone did something better.
[18:17] DTrejo__: isaacs: oh wow
[18:17] creationix: tjholowaychuk: yeah, but that's about it, nothing interactive
[18:17] tjholowaychuk: creationix: ah lame :(
[18:17] DTrejo__: isaacs: we need to keep working on the song engine or whatever you want to call it
[18:18] creationix: rauchg_: ok, socket.io is complaining that "Flash Player is not installed"
[18:18] rauchg_: creationix: in ipad ?
[18:18] robotarmy has joined the channel
[18:18] rauchg_: btw
[18:18] creationix: socket.io.js line #1294
[18:18] rauchg_: web-socket-js
[18:18] rauchg_: always complains 
[18:18] creationix: rauchg_: yep
[18:18] rauchg_: that flash player is not installed
[18:18] rauchg_: even if not used
[18:18] rauchg_: :D
[18:18] rauchg_: if console.error is there
[18:18] creationix: hmm
[18:18] rauchg_: unfortunately i can't inject the depedency dynamically 
[18:18] rauchg_: because of FABridge 
[18:19] rauchg_: and adobe not knowing how to write proper js
[18:19] isaacs: DTrejo__: WHOA! i just noticed the tweet button, when did you guys add that?
[18:19] isaacs: ACTION doesn't actually look at mixest, just opens the tab and puts on headphones...
[18:20] knuckolls has joined the channel
[18:20] DTrejo__: isaacs: :) that is the goal, but yes we did just add that, I think we need to make it more discoverable
[18:20] isaacs: DTrejo__: well, i mean, i seriously almost *never* look at teh site.  i just middle-click on teh bookmark, and go to work.
[18:21] DTrejo__: hehe
[18:21] isaacs: ocasionally  i check if there's a song i really like to see what it was
[18:21] DTrejo__: you can replay songs too
[18:21] DTrejo__: by clicking on the link in your favorites list
[18:21] isaacs: oh, sweet, i was wanting that
[18:21] isaacs: that's rad!
[18:21] DTrejo__: :)
[18:22] DTrejo__: hotkeys too
[18:22] maushu has joined the channel
[18:22] isaacs: WUT!
[18:22] maushu: Wat.
[18:23] isaacs: DTrejo__: what are the hotkeys?
[18:24] JimBastard_: u u d d l r l r b a select start
[18:24] DTrejo__: pressing shift+slash might bring them up, but it's broken on some keyboards. In any case: up/down arrow for volume, right arrow for next song, space for pause, that's all so far
[18:25] hij1nx has joined the channel
[18:25] isaacs: that's cool
[18:25] cloudhead: I'm trying to write a buffer to another buffer, it's telling me it has to be a string, any way around that?
[18:25] maushu: Konami code?
[18:26] cloudhead: I don't see why I would have to convert a buffer to a string just to write it back to a buffer
[18:26] maushu: I'm such a geek for recognizing that.
[18:26] isaacs: cloudhead: buffer.copy(targetBuffer, targetStart, sourceStart, sourceEnd=buffer.length)
[18:26] DTrejo__: JimBastard_, maushu there is a secret code, but it's not konami, didn't want to make it that ez hehe
[18:27] cloudhead: ahhhhh
[18:27] daniellindsley: cloudhead: I think that's the purpose of ``pump``?
[18:27] isaacs: cloudhead: it'd be cool if buffer.write(otherBuffer) worked too, though
[18:27] cloudhead: isaacs: will try that, thanks
[18:27] cloudhead: yea
[18:27] JimBastard_: DTrejo__: dont make me view source
[18:27] loincloth has joined the channel
[18:27] jkreeftmeijer has joined the channel
[18:27] DTrejo__: go ahead and try lol, it's not as hard to find as I thought
[18:28] isaacs: cloudhead: there's also a buffer.binaryWrite, but it's not in the docs..
[18:28] cloudhead: ok
[18:28] jkreeftmeijer: Is there anyone with http://socket.io/ experience in here? :)
[18:28] DTrejo__: JimBastard_: actually it is hard, nvm
[18:28] isaacs: DTrejo__: yeah... packer?
[18:28] V1: seems like allot people are buffering buffers.. 
[18:29] JimBastard_: lol
[18:29] JimBastard_: sup jkreeftmeijer 
[18:29] JimBastard_: i think rauchg_ might have tried is once or twice
[18:29] jkreeftmeijer: JimBastard_: I can't seem to get the flash fallback working 
[18:29] rauchg_: jkreeftmeijer: 
[18:29] DTrejo__: isaacs: yep, and gclosure
[18:29] rauchg_: check out 0.5.3 
[18:29] rauchg_: recursively 
[18:29] rauchg_: go to examples/chat.html and make sure the initialization is 
[18:29] JimBastard_: yeah i think there is a known issue on this right now
[18:30] rauchg_: new io.socket(..., { ..., transports: ['flashsocket'] ... }
[18:30] rauchg_: then start up any flash-powered website and tell me how it goes 
[18:30] rauchg_: s/website/browser
[18:30] JimBastard_: im just glad that Marak guy doesnt idle in here, i need to yell at him about a few projects
[18:30] jkreeftmeijer: Yeah, tried that
[18:30] rauchg_: what was the problem ?
[18:30] rauchg_: did you start the server with `sudo` ?
[18:30] jkreeftmeijer: Then it works in Safari and Chrome, but not in firefox.
[18:30] jkreeftmeijer: eh, no.
[18:30] isaacs: JimBastard: isn't that guy in NYC? you should track him down and kick his ass.
[18:30] jkreeftmeijer: wait :P
[18:31] rauchg_: we need to serve the policy in port 845
[18:31] rauchg_: or sth
[18:31] rauchg_: so, privileged port 
[18:31] joshbuddy has joined the channel
[18:31] jkreeftmeijer: ok, starting the server with sudo didn't work either
[18:32] rauchg_: any debug info ?
[18:32] JimBastard_: isaacs: yeah, i heard today was his birthday to, i should go shove some cake in his face
[18:32] jkreeftmeijer: I simply cloned Socket.IO-node, got the submodules and started the server
[18:32] isaacs: JimBastard: lol
[18:32] isaacs: JimBastard: happy birthday!
[18:32] rauchg_: yeah but i mean any debug info in the browser/server stdout 
[18:32] jkreeftmeijer: (the chatbox example server)
[18:33] JimBastard_: ahaha thanks isaacs 
[18:33] astrolin_ has joined the channel
[18:34] huyhong has joined the channel
[18:34] rauchg_: i just cloned recursively, started server, firefox > 
[18:34] rauchg_: guillermo:example rauchg$ sudo node server.js 
[18:34] rauchg_: 2 Aug 11:33:33 - socket.io ready - accepting connections
[18:34] rauchg_: 2 Aug 11:33:46 - Initializing client with transport "flashsocket"
[18:34] rauchg_: 2 Aug 11:33:46 - Client 2892554539721459 connected
[18:34] rauchg_: that's what you should see
[18:34] huyhong has left the channel
[18:34] jkreeftmeijer: rauchg_: that's what I see in chrome and safari
[18:34] rauchg_: `flashsocket` ?
[18:35] rauchg_: in chrome and safari you should see websocket 
[18:35] rauchg_: unless it's safari 4 
[18:35] jkreeftmeijer: It's websocket
[18:35] rauchg_: does firebug tell you anything on firefox ?
[18:36] JimBastard_: lol 
[18:36] JimBastard_: @ reddit http://www.reddit.com/r/programming/comments/cv33g/more_drama_from_the_rails_teamthis_is_like/c0vi69p
[18:36] rauchg_: -7 haha
[18:36] jkreeftmeijer: wtf
[18:36] jkreeftmeijer: rauchg_: It started working
[18:36] jkreeftmeijer: I cloned again and started with sudo
[18:36] rauchg_: jkreeftmeijer: maybe it's related to starting it with `sudo` ?
[18:37] jkreeftmeijer: thank you so much :)
[18:37] jkreeftmeijer: probably
[18:37] rauchg_: np
[18:37] rauchg_: jkreeftmeijer: 
[18:37] rauchg_: notice
[18:37] rauchg_: we both have `open source enthusiast` in the twitter bio 
[18:38] jkreeftmeijer: :)
[18:39] Yuffster has joined the channel
[18:39] jkreeftmeijer: rauchg_:  hey, didn't know it was you! :)
[18:39] dcolish has joined the channel
[18:39] jkreeftmeijer: Awesome work, thanks !:D
[18:40] _announcer: Twitter: "Playing with node.js, "evented I/O for V8 JavaScript" http://nodejs.org" -- Chris Garaffa. http://twitter.com/TheCMGeek/status/20159354580
[18:42] JimBastard_: !tweet @TheCMGeek go go node.js
[18:43] Tobsn has joined the channel
[18:44] steadicat has joined the channel
[18:44] nefD: haha JimBastard re: reddit comment
[18:45] _announcer: Twitter: "Node.js to Secure CouchDB on Ubuntu 1.0 - This tutorial explains how to pass a Ubuntu from scratch to have Couce ... http://ow.ly/18oKB1" [es] -- Loki Zavala. http://twitter.com/Siedrix/status/20159664738
[18:45] zemanel has joined the channel
[18:45] isaacs: well that's odd... i just got an email addressed to ryah, about some open source survey
[18:46] maushu: isaacs, mismailed? lol
[18:46] JimBastard_: lulz spam
[18:47] isaacs: maushu: no, i was on the bcc, apparently
[18:47] JimBastard_: ive been responding to unsolicited recruiters with 8======D lately
[18:47] isaacs: maushu: it was probably sent to all the nodejs contributors or something
[18:47] isaacs: it's some academic survey
[18:47] maushu: It's probably my fault.
[18:47] sr: isaacs, from copenhagen uni?
[18:48] isaacs: sr: yeah
[18:48] maushu: I linked to the contributors list on the wikipedia.
[18:48] isaacs: hehe
[18:49] DTrejo__: isaacs: you're in the bay right? do you have any details on the meetup on the 10th?
[18:49] _announcer: Twitter: "A Gentle Introduction to Node.js - MrJaba's Adventures http://ow.ly/18oJDs" -- Javascript News. http://twitter.com/del_javascript/status/20159910845
[18:49] tekky: ugh so I wont be starting my job this week it seems... thats not good :(
[18:49] isaacs: DTrejo__: i am.  and, uh, it's on the 10th, at sencha, last i heard.  that's all i know.
[18:50] _announcer: Twitter: "The best thing about the jsperf.com tests are you can now easily see which works best on #node.js if you test them in Chromium :)" -- Arnout Kazemier. http://twitter.com/3rdEden/status/20159956156
[18:51] karboh has joined the channel
[18:57] DTrejo__: do people still hack on node.js raw without any frameworks or anything? I have an auto-restart script that some might like better than the one that exists, but I don't want to put it out there if it's just going to confuse / pollute things
[18:58] mjr_: I still hack on things in raw node, but if I were doing a purely web app, I probably wouldn't.
[18:59] DTrejo__: mjr_: would it be helpful for you to have a script that reruns a given .js file whenever you change one of the includes or the file itself?
[18:59] creationix: DTrejo__: I use raw connect for most stuff
[18:59] DTrejo__: usage sorta like this: node run.js mycode.js
[18:59] creationix: DTrejo__: I use the spark launcher for most servers
[19:00] creationix: DTrejo__: isaacs made an auto-restart wrapper like that
[19:00] mjr_: DTrejo__: not for what I do at the moment, but maybe it would eventually.
[19:01] hippondog has joined the channel
[19:02] DTrejo__: here's a gist of it in case either of you are interested: http://gist.github.com/505133
[19:03] _announcer: Twitter: "MMA = jQuery JS + Node-Fu-jitsu" [es] -- sergio pereira. http://twitter.com/sergiopereira/status/20160727237
[19:04] rauchg_: creationix: 
[19:04] rauchg_: this is socket.io on iphone 
[19:04] rauchg_: http://cl.ly/1rGV
[19:04] rauchg_: notice the loading bar should always look incomplete
[19:05] creationix: yeah, that's fine
[19:05] _announcer: Twitter: "I implemented in-memory file caching for node-static. Performance increase? 100% | http://github.com/cloudhead/node-static #nodejs" -- Alexis Sellier. http://twitter.com/cloudhead/status/20160853135
[19:06] aheckmann: rauchg_: which implementation is running on the iphone? flash, websocket??
[19:06] rauchg_: long polling 
[19:07] creationix: I wish they had websocket
[19:07] aheckmann: rauchg_: what if you wait a sec or two before startign the poll. Does the loading indicator go away?
[19:07] creationix: mobile devices really need it
[19:07] rauchg_: they will soon 
[19:07] rauchg_: aheckmann: i've been told firing it `onload` makes it go away
[19:07] aheckmann: usability wise - the loading indicator sucks
[19:07] rauchg_: im gonna try that soon
[19:07] aheckmann: cool
[19:07] creationix: no, still spins
[19:08] creationix: I just tried with a timeout
[19:08] aheckmann: what about load?
[19:09] creationix: aheckmann: I have a timeout inside my onload handler
[19:09] aheckmann: gotcha
[19:09] creationix: it keeps the page more render faster if the socket is after the onload tick
[19:09] creationix: but doesn't affect the spinner
[19:09] creationix: it will go away, and then come back after my timout
[19:09] aheckmann: weird
[19:09] creationix: "keeps the page more render faster" what language is that?
[19:09] aheckmann: haha
[19:10] Tobsn: got the notice creationix?
[19:10] aheckmann: you've been hanging out with my 5 yr old
[19:10] JimBastard_: hey mikeal can i ask you a stupid connection pool question? is this if you are going to be sending multiple requests to the same place? you can use just one connection? saving resoucers?
[19:10] creationix: in my defense I had a brain damage inducing migraine this morning
[19:10] creationix: Tobsn: yeah, what was that?
[19:10] Tobsn: the thing i was coding on
[19:10] creationix: Tobsn: it appeared as a growl-like notification and then went away
[19:11] Tobsn: it should be probably in your status window
[19:11] Tobsn: its a notification
[19:11] Tobsn: - /notice nick/channel msg
[19:11] creationix: Tobsn: I'm using Colloquy
[19:11] Tobsn: they still have some sort of server window
[19:11] Tobsn: tab
[19:11] Tobsn: whatever
[19:12] sudoer has joined the channel
[19:12] mikeal: JimBastard: yes
[19:12] mikeal: it'll keep the client around using keep-alive
[19:12] mikeal: and keep track of when a client is busy or not
[19:12] mikeal: so it'll only give you a client once it's not doing a request and create a new one if you need it
[19:12] mjr_: creationix: My guess is that the next version of iOS will have WebSocket.  The developer preview did, but then they pulled it out for the general release.
[19:13] creationix: mjr_: that would be great, mobile devices especially need the lower-overhead transport
[19:13] mikeal: it's in webkit
[19:13] creationix: xhr is cpu heavy on mobile
[19:13] mikeal: but it talks to really low level socket stuff
[19:13] mikeal: so it's not trivial to port to new systems like iOS
[19:14] mikeal: the developer preview was probably a direct port of the latest webkit and when they hit bugs in the websocket port they likely back burnered it
[19:14] BryanWB has joined the channel
[19:16] jtoy has joined the channel
[19:18] DTrejo__: can someone help me figure out why this double-nested callback will not let me reach out and change a variable? I've never had this problem with callbacks before. http://gist.github.com/505159
[19:19] mikeal: that should work
[19:19] creationix: DTrejo__: it's set, but not till after the call back fires
[19:19] derferman has joined the channel
[19:19] creationix: I'm assuming db.save is async
[19:19] DTrejo__: creationix: oh so the function sends off that response before the callback is done, oops
[19:20] DTrejo__: (this uses nStore, so I think it is async)
[19:20] creationix: yep
[19:20] DTrejo__: thanks!
[19:20] rauchg_: booyah!
[19:20] rauchg_: i have a fix for the scrollbar
[19:20] rauchg_: i mean the loading bar
[19:20] JimBastard_: DTrejo__: http://gist.github.com/505164
[19:20] mikeal: oh i see
[19:20] mikeal: the debug message is in the right place
[19:20] egorFiNE has joined the channel
[19:20] creationix: rauchg_: really?
[19:20] rauchg_: creationix: yup
[19:20] JimBastard_: DTrejo__: thats async 101
[19:21] _announcer: Twitter: "Painful tar -&gt; gtar for this. +1 to gawk for making it possible. npm install on solaris. #node.js" -- Kenny Shen. http://twitter.com/kenny_shen/status/20161746218
[19:21] creationix: DTrejo__: if you don't like nesting use Step or some other library
[19:21] creationix: plus with step you get proper exception catching too
[19:21] mikeal: or if you don't like nesting you can just name the function and break it out a little :)
[19:21] creationix: that works too
[19:21] mikeal: you don't need a library to abstract it, it's pretty simple
[19:21] egorFiNE: Hello ppl! What is the right way to specify a callback function? I am creating a class that listens to network events, and instead of coding handler in place ("function(xxx) { ... }")  I want to move it to a method of this class. What is the best way to specify this method as a callback  then?
[19:21] rauchg_: actually maybe not, it's pretty inconsistent
[19:22] JimBastard_: mikeal: do you think this connection pooling stuff will increase performance for our http-proxy?
[19:22] mikeal: step is good for giant lists of stuff
[19:22] mikeal: umn…. yes!
[19:22] JimBastard_: like crazy right
[19:22] mikeal: that's what it's for
[19:22] DTrejo__: thanks for the help and advice guys :)
[19:22] mikeal: so
[19:22] JimBastard_: since most of it goes to the same host
[19:22] mikeal: in Python
[19:22] mikeal: i worked on a single piece of proxy code for 2 or 3 years
[19:22] JimBastard_: hee hee
[19:22] JimBastard_: pwnt
[19:22] mikeal: and moving to a keep-alive pool was a 3x increase in overall performance
[19:22] JimBastard_: nice, im excited
[19:22] mikeal: but Python is also terrible
[19:22] _announcer: Twitter: "@kenny_shen How do you like #NodeJS?" -- Shane Reustle. http://twitter.com/Reustle/status/20161847965
[19:22] JimBastard_: our throughput right now is capping near 2k
[19:23] creationix: ACTION goes to update ivy's binaries to get keepalive clients
[19:23] mikeal: when i wrote my first node.js http proxy it was faster than the Python one even tho it had keepalive and node didnt'
[19:23] JimBastard_: pwnt
[19:23] mikeal: so there are lots of considerations
[19:23] mikeal: creationix: doing keepalive by hand can be tricky
[19:23] mikeal: you've gotta call client.end()
[19:23] mikeal: or else node will never exit and the client will never get cleaned up
[19:24] mikeal: that's why pool has a single end() call that ends all the clients in it's pool
[19:27] JimBastard_: !tweet @Reustle node.js is awesome
[19:28] Tobsn: mikeal, thats what the doctor said
[19:28] Tobsn: "doing keepalive by hand can be tricky"
[19:28] _announcer: Twitter: "i think i will never get what node.js even is about" -- Benny. http://twitter.com/hereticalself/status/20162173033
[19:28] mikeal: pquerna: areyou watching this apache thread on git?
[19:29] Tobsn: someone please post "BECAUSE ITS BETTER THAN YOUR FUCKING LIFE WILL EVER BE!" @hereticalself
[19:29] Tobsn: :P
[19:29] brianmario has joined the channel
[19:31] pquerna: mikeal: where?
[19:31] SubStack: Never get that it's async all the way down?
[19:31] SubStack: seems a very simple concept to grasp
[19:31] creationix: Tobsn: he just not be technical, my mom doesn't understand node
[19:32] SubStack: I could probably teach my little brother and sisters to write node
[19:32] nefD: hrm.. nodules vs. node-dj's for simple reloading of local scripts being used in a connect/spark setup.. any thoughts/experiences?
[19:33] joemccann has joined the channel
[19:33] joemccann: npm question
[19:33] joemccann: how do i force it to update to latest version of connect
[19:33] rauchg__ has joined the channel
[19:33] joemccann: on my mac
[19:33] joemccann: i run
[19:33] joemccann: npm install connect
[19:33] joemccann: and it has version 0.1.20 installed
[19:33] joemccann: on my servrer
[19:34] joemccann: it has 0.1.19
[19:34] joemccann: but says it has nothing to install?
[19:34] jwcooper: npm install connect@latest usually works
[19:34] creationix: woah, firefox hates my app
[19:34] jwcooper: or 'npm install connect@stable'
[19:34] creationix: I always forget about that browser
[19:34] DTrejo__: hehe
[19:34] tjholowaychuk: booo firefox lol
[19:34] joemccann: jwcooper:  thx
[19:35] creationix: Error: uncaught exception: [Exception... "Not enough arguments"  nsresult: "0x80570001 (NS_ERROR_XPC_NOT_ENOUGH_ARGS)"  location: "JS frame :: http://creationix.com:1234/app.js :: anonymous :: line 180"  data: no]
[19:35] JimBastard_: joemccann: update npm
[19:35] JimBastard_: joemccann: sudo npm install npm
[19:35] JimBastard_: ?
[19:35] joemccann: JimBastard_ says nothing to install
[19:36] joemccann: npm install connect@stable works tho
[19:36] bradleymeck: someone been playing w/ firefox?
[19:36] Tobsn: creationix, well that is also sortof a joke msg
[19:36] joshbuddy has joined the channel
[19:36] _announcer: Twitter: "Comment from inside Yahoo, "if you want a plugable DNS server why not use PowerDNS?" because I don't want to write C. Go Node.js :)" -- Tom. http://twitter.com/sh1mmer/status/20162613537
[19:36] creationix: Tobsn: ?
[19:36] Tobsn: the better than you life will ever be
[19:37] creationix: oh
[19:37] creationix: sorry, I really am only half here today
[19:37] Tobsn: ;)
[19:37] _announcer: Twitter: "Readin about nodejs and expressjs. Wondering if the express-auth plugin is still the way to go. Sure I read about plugins being deprecated!" -- Richard Sage. http://twitter.com/richardsage/status/20162672623
[19:38] tjholowaychuk: wtf
[19:38] creationix: tjholowaychuk: go get 'em
[19:38] Tobsn: click it
[19:38] Tobsn: look at his picture
[19:38] bradleymeck: that firefox error message confuses me
[19:38] joemccann: JimBastard_ BTW, using your translate.js lib for my talk at JSConf.EU
[19:38] tjholowaychuk: hahaha
[19:38] isaacs: joemccann: what version of npm do you have? 0.1.19, you said?
[19:38] creationix: bradleymeck: me too
[19:38] bradleymeck: jim did you add language detection yet?
[19:39] Tobsn: dangugage letection
[19:39] Tobsn: brb
[19:39] JimBastard_: cool joemccann 
[19:39] isaacs: joemccann: if so, that's a bug.  please update.  "npm install npm@latest" should do it
[19:39] joemccann: isaacs: 0.1.19
[19:39] joemccann: isaacs: ok will do
[19:39] joemccann: thx
[19:39] isaacs: yeah, update
[19:39] isaacs: 0.1.19 is like stone age stuff.
[19:39] Tobsn: is npm in the debian packages?
[19:39] JimBastard_: bradleymeck: it does detect languages, i still dont get why that patch is needed
[19:39] JimBastard_: from what i remembered, the patch made things worse and not better
[19:39] isaacs: Tobsn: not sure.  the dpkg is kindof borked anyway, since it calls node "nodejs" instead of "node"
[19:40] x_or has joined the channel
[19:40] isaacs: Tobsn: so "#!/usr/bin/env node" will fail
[19:40] Tobsn: I KNOW! why is that?!
[19:40] Tobsn: confused the shit out of
[19:40] JimBastard_: i can take another look at some point
[19:40] Tobsn: me
[19:40] isaacs: Tobsn: apparently "node" is something else
[19:40] joemccann: isaacs: oh wow, 3 point releases behind
[19:40] Tobsn: ha
[19:40] joemccann: that's bad
[19:40] joemccann: ;)
[19:40] mjr_: So there's no workaround for that nodejs executable thing like /etc/alternatives or something?
[19:40] bradleymeck: it doesnt grab pairs for the restful interface, i forget exact details but translating something like bonjour -> english w/o anything didnt work when i tested or somesuch
[19:40] x_or: creationix:  Do you see any reason why you could not use connect which occasionally proxies to a rails application?
[19:40] Tobsn: btw. cant you offer precompiled binaries?
[19:40] isaacs: joemccann: expect some turbulence.  i apologize in advance.
[19:40] joemccann: isaacs:  no worries
[19:40] Tobsn: kinda like mongodb offers it so nicely
[19:40] creationix: x_or: go for it
[19:40] Tobsn: :P
[19:41] creationix: node makes a pretty good http client
[19:41] Tobsn: or just set up your own deb-src
[19:41] JimBastard_: bradleymeck: you can just set the language pairs to whatever you want, it still detects
[19:41] JimBastard_: for the most part
[19:41] bradleymeck: not always, there was something that came up when testing frankie
[19:41] joemccann: isaacs: is there a "npm update" method or one in the pipeline?
[19:41] creationix: x_or: someone should make a proxy middleware that allows you to "embed" rails apps in a connect stack
[19:41] isaacs: joemccann: http://github.com/isaacs/npm/issues/issue/7
[19:42] JimBastard_: yeah i dunno, when i was doing my testing i saw auto detect fail
[19:42] JimBastard_: picked not the most correct language
[19:42] joemccann: isaacs: thx man
[19:42] JimBastard_: ill play around with it more, it could use a new version
[19:43] admc has joined the channel
[19:43] MrTopf has joined the channel
[19:45] x_or: creationix:  Hmm, after building the RPX middleware for connect, maybe I should do that, eh?  You are a master of mind control…  :)
[19:45] tmpvar has joined the channel
[19:45] creationix: :)
[19:45] creationix: x_or: use the new keepalive in htp.client if you understand enough of how to use it properly
[19:46] creationix: x_or: mikeal says it hard
[19:46] hansek has joined the channel
[19:46] bradleymeck: only get 1 back from autodetect, so heh
[19:46] creationix: x_or: though that's something I think I would want in connect's core, if you do build one, sign the senchalabs cla so you can submit it
[19:48] x_or: I have a project which I need to use something like this, and have a week to build it, so I have a feeling this will be a "throw the first one away" bit of code.  We'll see.  
[19:48] x_or: I wish I was able to understand how to get HAML working a little more like rails, I struggled trying to implement partials in a way that was intuitive to me.  If I had that, I would just do pure node.js and connect.
[19:48] creationix: x_or: have you seen geddy?
[19:48] creationix: it's the closest thing to rails for node
[19:48] creationix: connect and express are more like sinatra
[19:49] benburkert has joined the channel
[19:49] BryanWB has joined the channel
[19:49] creationix: and tj's jade language is much cleaner code than mine or his haml implementations
[19:50] DTrejo__: creationix: what do you think of using jquery on the server side to do your templating?
[19:50] bradleymeck: yea, default args on "le petit chou chou"
[19:50] creationix: I think it's an odd way to go about it
[19:50] bradleymeck: http://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q=le%20petit%20chou%20chou&langpair=en|es
[19:50] saikat: if i have a single server from which i want to serve static files over Nginx, push notifications via websockets via socket.io via node, and django apps via fastcgi, is HAProxy the thing i would set up in front of all of this to proxy requests to the right app (nginx, fastcgi, node) based on the URL?
[19:51] creationix: but it's possible with jsdom
[19:51] tmpvar: creationix, how far'd you get with that event stuff?
[19:51] creationix: tmpvar: which?
[19:51] DTrejo__: :)
[19:51] tmpvar: the thing we were talking about on saturday :)
[19:51] saikat: i currently use nginx directly to serve static files or to send requests to django, but i've heard that it won't play well with websockets
[19:51] tmpvar: ipad events
[19:51] creationix: tmpvar: hmm, don't remember, I made a game engine since then ;)
[19:52] tmpvar: haha, thats what I'm refering to, you were talking about how to make it work on the ipad
[19:52] tmpvar: and you were going to talk to your work-pals about the best way to handle events and such
[19:52] x_or: creationix:  No, I have not seen geddy.  I'll look at it.
[19:52] creationix: tmpvar: oh, right, not yet
[19:53] creationix: I'm trying to get socket.io to work on it first
[19:53] tmpvar: got ya
[19:53] creationix: and it's busted on firefox too
[19:53] creationix: which is lame
[19:53] creationix: I'm afraid to test IE
[19:53] creationix: I've been doing server-side JS for so long I had forgotten how nasty browsers were
[19:54] tjholowaychuk: if  you ignore IE its pretty nice lol
[19:56] bradleymeck: jimbastard, the trouble is providing text.translate({output:"en"},"le petit chou chou",cb)  goes to => http://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q=le%20petit%20chou%20chou&langpair=en|en , instead of &langpair=fr|en when using the restful interface (on browser untested)
[19:57] creationix: heh, I get mad when a browser doesn't have Object.keys
[19:57] creationix: node has spoiled me
[19:57] tjholowaychuk: hahaha ya i know, sucks not having the same stuff
[19:58] tjholowaychuk: addEventListener too mmm nice and verbose
[19:58] bradleymeck: tmpvar i got the resource queue stuff done but i hate the api it has right now, cant figure out how to let resources know where there parents are nicely (and allowing handlers to change based on that...)
[19:58] bradleymeck: i like verbosity
[19:58] tmpvar: bradleymeck, ah
[19:59] bradleymeck: cause for example in css the handlers change relative to the css url :/
[19:59] zomgbie has joined the channel
[19:59] bradleymeck: then frames ... ugg
[20:01] cardona507 has joined the channel
[20:02] tmpvar: yeah, the fun world of frames
[20:03] bradleymeck: at least sandbox is easy in node!
[20:03] Rixius has joined the channel
[20:03] Viriix: exports.someObj = function () {blah;} exports.someObj.prototype.someFunc = function() {blah;}
[20:03] Viriix: is that right for OOP in modules?
[20:05] bradleymeck: viriix just do prototyping the same as in js, so thats fine, i tend to keep my variables off exports/module til the end of file though
[20:06] isaacs: Viriix: that's fine, yeah
[20:06] isaacs: Viriix: i tend to do this, though:  module.exports = SomeClass;  function SomeClass(){};  SomeClass.prototype = { ... }
[20:06] isaacs: Viriix: it's a matter of personal preference.
[20:07] ashleydev has joined the channel
[20:07] Viriix: ooo, i do like that better
[20:08] ashleydev has joined the channel
[20:08] Viriix: is 'exports' a context or is it some JS magic
[20:08] shockie has joined the channel
[20:08] shockie_ has joined the channel
[20:08] isaacs: Viriix: it's just a free var
[20:09] isaacs: Viriix: node does something like this: (function (module, exports, __filename, __dirname, require) { your code })(...)
[20:11] bradleymeck: isaacs while you are here, does npm have any globbing inside for filenames?
[20:11] isaacs: bradleymeck: how do you mean?  (that is, no, i don't think so)
[20:11] isaacs: bradleymeck: there's the .npmignore and .npminclude files, which are just tar arguments
[20:12] bmizerany has joined the channel
[20:12] bradleymeck: k
[20:14] bradleymeck: mmm need to find way to dynamically include a .node from a string...
[20:15] isaacs: bradleymeck: what's your use case?
[20:15] x_or: tjholowaychuk:  Do you know if anyone is using jade with partials?  I really like to break my templates up into small pieces and I cannot find anything in the docs to indicate support.  It looks like you have an issue tracked, but perhaps there is a workaround I could do in userspace?
[20:16] bradleymeck: bundling modules into single files to be included in node binaries
[20:17] tjholowaychuk: x_or: the module itself doesn't provide partials, but Express does
[20:17] bradleymeck: i have the faux_require and if i make a dict of relative paths to string sources, but cant just eval a .node
[20:17] siculars has joined the channel
[20:17] isaacs: bradleymeck: interesting.
[20:17] isaacs: bradleymeck: you can process.dlopen() it, though
[20:17] bradleymeck: but its in a js land string :/
[20:17] tmpvar: woah, there is a process.dlopen?
[20:18] isaacs: tmpvar: yeah.  check out lib/module.js.  very interesting reading :)
[20:18] blaines_ has joined the channel
[20:18] tmpvar: will do
[20:18] isaacs: bradleymeck: ahh... ok, i grok now.
[20:18] isaacs: bradleymeck:  you're making the module a string, bundling it into the binary, and then opening it instead of the arg?
[20:18] bradleymeck: maybe i can use a buffer somehow as a memmap?
[20:19] bradleymeck: yes, it should be built statically in at the end
[20:19] blaines_ has joined the channel
[20:19] bradleymeck: its not pretty, but hey, statically compiling bundlers are nice
[20:21] bradleymeck: maybe just write a temp file?
[20:22] isaacs: bradleymeck: that'd be one way to do it.
[20:23] aniero: tjholowaychuk: hey, you get a chance to look at my ejs patch?
[20:23] bradleymeck: yea, but fs polution from premature kills :/
[20:23] tjholowaychuk: aniero: merged :p
[20:23] aniero: tjholowaychuk: woo! thanks!
[20:24] isaacs: bradleymeck: you can just write the temp file when you require() that module
[20:24] tjholowaychuk: aniero: np, appreciate it, I dont use ejs at all but i know others do
[20:24] aniero: tjholowaychuk: were you able to use it with any extensive complicated templates? i just started using it because hey, it's there and easy with express
[20:24] bradleymeck: yea, still could be killed during the c++ init though, just trying to find if dlopen has a memory mapped counterpart
[20:24] tjholowaychuk: aniero: not personally no
[20:24] tjholowaychuk: aniero: we could probably use some better test cases
[20:25] aniero: tjholowaychuk: np. guess we'll see if anyone complains
[20:25] _announcer: Twitter: "@rem what do you mean by this? "wishing PHP were more like JavaScript...wishing I was able to use Node.js they way I had wanted..." (jsbin)" -- Sean Coates. http://twitter.com/coates/status/20165365951
[20:26] creationix has joined the channel
[20:27] bradleymeck: !tweet @coates, probably wanting a cgi-like dev environment
[20:27] creationix_ has joined the channel
[20:30] jakehow has joined the channel
[20:31] d4yo has joined the channel
[20:38] isaacs: if you wanted to convert all the php users, it'd be good to release a very simple server that used multiple processes, and mapped requests to ejs files in a docroot.
[20:38] isaacs: creationix, tjholowaychuk ^
[20:38] aniero: used multiple processes?
[20:39] isaacs: aniero: yeah, did the child_process shared FD fork trick, like multi-node
[20:39] creationix: isaacs: who not a single process?
[20:39] bradleymeck: isaacs the one problem is async behaviour on ejs files will scare the hell outta ppl
[20:39] creationix: *why
[20:39] isaacs: creationix: to leverage multiple cores
[20:39] creationix: oh, just to make it faster then
[20:40] isaacs: creationix: maybe even try to get the OS to tell you how many CPUs it has, just so they don't even have to think about that.
[20:40] creationix: isaacs: not a bad idea actually
[20:40] creationix: php style code shouldn't be too hard
[20:40] mjr_: even if people don't/shouldn't need multiple cores, those that already use PHP would expect something they'd switch to to use multiple cores.
[20:40] isaacs: creationix: that's what you think!
[20:40] isaacs: hehe
[20:40] creationix: and since you can't share state between requests it should be easy to scale
[20:40] isaacs: creationix: there's already a few ejs parsers out there, but most of them are *terrible*
[20:40] aniero: and what do you mean by "attract php users"
[20:40] aniero: node is ... different from php
[20:41] isaacs: aniero: yeah, because node is the server, and php sits on top of the server.
[20:41] creationix: many php shops only allow php and js to be used by developers
[20:41] creationix: and many of the devs don't like php
[20:41] isaacs: aniero: as a php veteran, i can tell you that having to think about the server is a frightening turnoff
[20:41] DTrejo__: creationix, isaacs my friend would love php style node.js :) makes the learning curve smaller until you want to start doing things better
[20:41] bradleymeck: spawnNumChildren(sysctl (hw.ncpu) - 1)
[20:42] isaacs: i originally set out to build something that worked just like php, but used js as the language, and that exploration is what eventually led me to node.
[20:42] mjr_: I used to write a ton of PHP, but only because all hosting providers included it by default.
[20:42] isaacs: php IS a great language for all the things that bash is good for.  if i can use it to write CLI scripts, i usually do
[20:42] aniero: isaacs: ahh, very interesting
[20:42] isaacs: it's a friendlier perl :)
[20:42] creationix: isaacs: the async IO will be a little frightening, but since it's js that shouldn't be too bad
[20:42] isaacs: it's just a REALLY shitty language for web apps
[20:42] creationix: people are used to callbacks and events in js
[20:43] isaacs: creationix: exactly;
[20:43] _announcer: Twitter: "@beq00000 nothing is wrong with C. However, nothing is wrong with JavaScript either and it's faster to develop w/ Node.js JS wrappers for C." -- Tom. http://twitter.com/sh1mmer/status/20166318140
[20:43] isaacs: creationix: just, use a proper parser for ejs, not resig's awful awful broken brittle "microtemplate" thing
[20:43] creationix: yeah
[20:43] mjr_: PHP is a template language that gets used for programming.  JS is the reverse.
[20:43] creationix: lol
[20:44] tjholowaychuk: php's namespace syntax makes me cringe 
[20:44] bradleymeck: i/love/you/php
[20:44] isaacs: tjholowaychuk: yeah, it's pretty bad
[20:44] DTrejo__: who here is excited to $_GET['param']
[20:44] teemow has joined the channel
[20:44] creationix: isaacs: it's on my todo list, got to get my websocket demo working on all browsers first
[20:44] isaacs: bradleymeck: it's worse than that!!  i\love\you\php
[20:44] tmpvar: lol
[20:45] tmpvar: f-ing idiots
[20:45] mjr_: Wow, that's awful.
[20:45] isaacs: backslashes! why!?
[20:45] tjholowaychuk: haha
[20:45] tjholowaychuk: faillll
[20:45] isaacs: ACTION thought php couldn't get any uglier, and then they came out with that...
[20:45] tjholowaychuk: first time i saw it waas like wtf.. escaping what now?
[20:45] DTrejo__: windows rocks man, it obviously inspired php with it's beauty
[20:45] isaacs: yeah, my brain doesn't even see the \ as a character, i just see it lumped into the thing that comes later.
[20:45] isaacs: \l seems like one char to me, not two
[20:46] tjholowaychuk: yeah exactly, confused me until I knew what it was
[20:46] tjholowaychuk: and then laughed
[20:46] mjr_: I see it as if l were a character that had special meaning for some reason.
[20:46] bradleymeck: DTrejo, id rather have $_PARAM['param'], $_QUERY['inUrlParam'], the whole separation of post/get is odd to me
[20:46] pengwynn has joined the channel
[20:46] DTrejo__: yeah, I like the way node does it way better, coincidentally
[20:47] isaacs: i like how node lets you program against the actual http conversation
[20:47] DTrejo__: node has really helped me understand how http works on a lower level
[20:47] mjr_: For simple stuff, PHP is more like what most people expect.  As soon as things get more sophisticated, you enter a world of madness.
[20:47] DTrejo__: and how servers talk and all that
[20:48] bradleymeck: how would you do stream talking w/ ejs anywho, i mean thats kinda where node excels
[20:48] tmpvar: mjr_, harly anything in php is guessable
[20:48] tmpvar: s/harly/hardly
[20:48] isaacs: DTrejo__: i've actually had to read stdin in php, and it's super odd.  file_get_contents("php://input") for the post body or file_get_contents("php://stdin") for stdin
[20:49] DTrejo__: woah, didn't know that existed (ofc I don't know php at all really)
[20:49] sudoer has joined the channel
[20:49] mjr_: tmpvar: exactly, except for super simple stuff.  Put this variable inside of this <div> and then keep being HTML.
[20:49] isaacs: i used to write yicf files in php.  now THAT is a feature of yinst that is super badass.
[20:49] isaacs: any yahoos in the house?  you know you can do that?
[20:49] isaacs: put a shebang at the top of your yicf, and then it'll parse it before building your package.
[20:50] tmpvar: echo $mjr_  . ": fair enough"
[20:50] tmedema has joined the channel
[20:50] DTrejo__: the dot concatenation was so unintuitive for me
[20:51] isaacs: i'd like to eventually have something like that for npm.  maybe a package.json.js that dynamically creates the package.json file contents.
[20:51] mjr_: <?php else ?>
[20:51] tmedema: Hi folks, for some reason when I addEventListener to the stdIn ReadStream and later on removeEventListener it, I'm still getting the data in my earlier set event callback.. any idea what could be causing this?
[20:51] mjr_: I should stop thinking about PHP now.
[20:51] mjr_: too many painful memories.
[20:51] isaacs: then you could have stuff like putting the git describe --tags output in the version field.
[20:52] creationix: isaacs: I think I'll make a connect middleware that lets you point to a folder of html and js files and serve them php style
[20:52] eisd has joined the channel
[20:52] isaacs: creationix: sure, but having *.ejs get parsed with "this is html <% this is js %>" would be rad
[20:52] SubStack: tmedema: you've got to pass the same function along as the second argument for both calls
[20:52] bradleymeck: tmedema, is the function being removed the exact same instance of that function on the same event type (plus add/removeListener not EventListener right?)?
[20:52] mjr_: tmedema: I'd guess that the remove isn't working, most likely because the function you are passing doesn't match the one you added.
[20:52] CrabDude has joined the channel
[20:53] creationix: isaacs: exactely
[20:53] isaacs: one question forked to 3 answers!  this community wins!
[20:53] mjr_: tmedema: or listen to bradleymeck because his answer is the best.
[20:53] tmedema: Yea SubStack, I'm passing the same function. 
[20:53] tmedema: Well, I tripple checked
[20:53] tmedema: I must be missing something
[20:53] isaacs: tmedema: gist the code?
[20:54] rauchg_ has joined the channel
[20:55] tmedema: isaacs: http://gist.github.com/505289
[20:56] DTrejo__: what is it that adds the void and private stuff?
[20:56] SubStack: tmedema: what language is THAT?
[20:56] mikeal: someone pinged me
[20:56] mikeal: can't scroll up far enough
[20:56] mikeal: i'm here now :)
[20:56] tmedema: SubStack: It's haXe
[20:58] isaacs: tmedema: can you gist the js?  haXe breaks my brain a little bit
[20:58] bradleymeck: onCSVInput vs me.onCSVInput, bet its a function instance difference
[20:59] tmedema: It should be the same one
[20:59] tmedema: This is standard code, used it for many projects in Node, I am probably doing something wrong elsewhere
[20:59] bradleymeck: then why do you need me for one and not the other
[21:00] tmedema: bradleymeck: because anonymous functions are static in haXe
[21:00] tmedema: I shall try and use a non anonymous function though, just to be sure
[21:00] bradleymeck: c++ static, or java static
[21:01] _announcer: Twitter: "Node.js and Scaling in the Small vs in the Large: http://j.mp/ardcYp - some interesting thoughts on node.js and event-based concurrency." -- Andre Luckow. http://twitter.com/drelu/status/20167325792
[21:01] SubStack: anonymous functions <3
[21:02] sh1mmer: does anyone know where the IP part of the stack happens in dgram?
[21:03] bradleymeck: !tweet @drelu yup, always good to come at big problems from all directions
[21:05] aheckmann has left the channel
[21:06] bradleymeck: well that sucks no void* alternative to dlopen
[21:06] tmedema: I'm thinking it's a bug in haXe, I'll talk with those guys
[21:06] astrolin has joined the channel
[21:08] bradleymeck: could they be rebinding the function by prehooking it w/ a .call?
[21:08] bradleymeck: that would f it up
[21:08] bradleymeck: but would ensure me is the this var
[21:08] justinlilly has joined the channel
[21:10] creationix: rauchg_: how do I serve WebSocketMain.swf?
[21:10] justinlilly: cloudhead: I pinged you earlier, but hoping now might be a better time. Is it possible to use custom reporters with vows? vows.options['reporter'] = my_reporter; doesn't seem work and just uses dot-matrix.
[21:10] creationix: rauchg_: nevermind, I found it
[21:11] rauchg_: make sure to submodule update init recursively that shit,
[21:14] DTrejo__ has joined the channel
[21:14] DTrejo__ has joined the channel
[21:14] slaskis has joined the channel
[21:15] bradleymeck: ugg isaacs realized i cant sync write file to do a dlopen /headdesk
[21:16] topfunky has joined the channel
[21:17] _announcer: Twitter: "node.js OH MY GOD I must learn to control this kind of stuff! 3" [fr] -- Randi (Paul Joannon). http://twitter.com/paulloz/status/20168185280
[21:18] isaacs[away]: bradleymeck: wait, why not?
[21:18] bradleymeck: wait is there a sync writefile?
[21:18] bradleymeck: im losing it
[21:19] bradleymeck: why _api why did yo abandon me
[21:19] isaacs[away]: bradleymeck: fs.writeFileSync
[21:19] topfunky: I have an app where I'm starting three kinds of servers or three different ports. Is this the right way to do it?
[21:20] topfunky: example: Handle API posts from an external service with an HTTP server on one, websocket for the browser on another, and static files (node-static) for easier development on a third.
[21:20] isaacs[away]: bradleymeck: or you can use the process.binding("fs") directly
[21:20] bradleymeck: i try to avoid process.binding
[21:20] isaacs[away]: topfunky: nothing wrong with that.  why not also fire up an irc server and a tcp repl?
[21:20] topfunky: :D
[21:20] isaacs[away]: topfunky: that's what node is *for* :D
[21:20] hellp has joined the channel
[21:20] bradleymeck: pfff
[21:21] topfunky: sounds good. In other environments I would put together some kind of router, but ports are easy here
[21:21] isaacs[away]: totally
[21:21] isaacs[away]: if you want them all on port 80, then you'll need a router
[21:21] topfunky: ok
[21:21] mjr_: or if you want to restart just part of the system
[21:22] topfunky: thx
[21:23] tjholowaychuk: topfunky: screencast?
[21:24] topfunky: tjholowaychuk: definitely. Maybe later this month, even
[21:24] topfunky: you're in vancouver, right?
[21:24] tjholowaychuk: cool cool
[21:24] tjholowaychuk: victoria
[21:24] topfunky: ok
[21:24] tjholowaychuk: might be moving to van soon-ish though actually
[21:24] topfunky: as in weeks or months?
[21:25] tjholowaychuk: months probably
[21:25] topfunky: ok
[21:25] kodisha has joined the channel
[21:26] b_erb has joined the channel
[21:27] tilgovi has joined the channel
[21:31] joemccann has joined the channel
[21:31] joemccann: weird shit in Firefox..my Express app only serves up static HTML files, but won't serve up the JS files
[21:32] james2037 has joined the channel
[21:32] joemccann: if you ping the JS file directly it is there
[21:32] joemccann: just not served when the you hit index.html
[21:32] tjholowaychuk: joemccann: really? that might be a Connect bug then
[21:32] joemccann: only in Firefox too
[21:32] tjholowaychuk: I dont use FF ever really so something may have slipped by
[21:32] joemccann: tjholowaychuk: yeah that's what i was thinking
[21:32] joemccann: i don't either, but decided to open it to check it out and it fails
[21:32] joemccann: only JS files tho
[21:33] joemccann: css and html are fine
[21:33] mattly has joined the channel
[21:33] tjholowaychuk: Content-Type issue maybe? FF shouldnt choke on charset though i dunno
[21:35] FransWillem has joined the channel
[21:35] _announcer: Twitter: "@heroku any possibility of a accepting new users to the @nodejs beta before or around #nodeknockout ?" -- Stephen Middleton. http://twitter.com/Rixius/status/20169199582
[21:35] ehaas has joined the channel
[21:35] caolanm has joined the channel
[21:38] joshbuddy has joined the channel
[21:39] satori_ has joined the channel
[21:39] caolanm: can anyone remember the magic to get packages to publish with npm?
[21:39] isaacs[away]: caolanm: npm config set registry http://registry.npmjs.org/
[21:39] isaacs[away]: caolanm: or fix node's ssl client
[21:40] caolanm: that's the line I wanted
[21:40] caolanm: thanks
[21:40] isaacs[away]: ACTION off to add that to the default failure message...
[21:40] caolanm: good idea!
[21:40] caolanm: :)
[21:40] rauchg_: ryah: any interest in making the node-repl keyboard history persistent ?
[21:40] aniero: that would be nice!
[21:40] isaacs[away]: rauchg_: jsut use rlwrap.
[21:40] BryanWB has joined the channel
[21:40] isaacs[away]: alias js='NODE_NO_READLINE=1 rlwrap node'
[21:40] aniero: oh nice
[21:41] aniero: thanks
[21:41] rauchg_: oh nice
[21:41] rauchg_: thakns
[21:41] caolanm: isaacs[away]: npm ! Error: conflict Document update conflict.
[21:41] isaacs[away]: then it'll use the ~/.node_history file
[21:41] rauchg_: yep
[21:41] ehaas has joined the channel
[21:41] isaacs[away]: caolanm: npm unpublish whatever@version then try again
[21:41] caolanm: ok
[21:41] ehaas has left the channel
[21:41] isaacs[away]: caolanm: i could just make that the default registry config, and to hell with security.
[21:41] caolanm: isaacs[away]: looks good
[21:41] isaacs[away]: or shell to curl or something
[21:41] caolanm: thanks again
[21:41] _announcer: Twitter: "Node.js.debugger with chromeagent  http://groups.google.com/group/nodejs/browse_thread/thread/e571350102fd19f6" -- Hernan Garcia. http://twitter.com/theprogrammer/status/20169581564
[21:41] rauchg_: isaacs[away]: rlwrap seems not to be in OS X by default
[21:41] _announcer: Twitter: "@beq00000 Coding errorfree, concurrent, thread-safe w/ low overhead in C isn't as easy as in JS using node.js with a single thread /@sh1mmer" -- Artur Ortega. http://twitter.com/DesignedByBlind/status/20169592136
[21:42] rauchg_: that sucks
[21:42] isaacs[away]: rauchg_: nope, you have to install it with brew or ports or make
[21:42] rauchg_: yeah i just port`d it
[21:42] tjholowaychuk: rlwrap is the shit
[21:42] isaacs[away]: ACTION <3 rlwrap and my .inputrc
[21:42] isaacs: ACTION can't type his own name...
[21:43] DTrejo__: isacs, ipad for men
[21:43] bradleymeck: isaacs, a main should always be inside of a module right? no cross module mains?
[21:43] isaacs: bradleymeck: yes, that is correct.
[21:43] isaacs: bradleymeck: main is YOUR package's main module
[21:44] bradleymeck: just checking, almost done here i think
[21:44] bradleymeck: besides the .node problem, not sure how to handle that cause of some other issues
[21:47] _announcer: Twitter: "Jake node.js make/rake by @mde. http://github.com/mde/node-jake" -- Hernan Garcia. http://twitter.com/theprogrammer/status/20169893021
[21:49] FSX has joined the channel
[21:51] FSX: Hi, is there a JavaScript implementation of Markdown (of something else)? I know there's discount, but I would like to modify the parser.
[21:51] tjholowaychuk: markdown-js
[21:52] BrianTheCoder has joined the channel
[21:52] tjholowaychuk: forget the user
[21:52] FSX: I'll look for it, thanks.
[21:53] technoweenie: basically google for markdown javascript
[21:54] FSX: I already got it.
[21:55] Blackguard has joined the channel
[21:57] ryah: rauchg_: ping
[21:57] feroz_ has joined the channel
[21:57] feroz_: Hello
[21:58] rauchg_: ryah: 
[21:58] _announcer: Twitter: "async-friendly console.log and console.dir: http://bit.ly/b4HpCT ...can't believe I've managed this long without these! #nodejs" -- Caolan McMahon. http://twitter.com/caolan/status/20170532457
[21:59] ryah: rauchg_: socketio doesn't serialize json automatically anymore?
[21:59] rauchg_: nop
[21:59] rauchg_: too heavy 
[21:59] rauchg_: you just send and receive strings 
[21:59] rauchg_: which you can encode/decode yourself 
[21:59] rauchg_: in whatever encoding you pleasure 
[21:59] ryah: in general im in agreement - but i think you should have a built in method for doing json
[21:59] rauchg_: yes
[22:00] ryah: sendJSON() or something
[22:00] rauchg_: i tend to agree
[22:00] feroz_: I'm playing with some basic server. But it seems to die for some unknown reason. I added a callback on the exit event and uncaughtexception event. But the logs are empty. How could i find out whats wrong ? 
[22:00] ryah: because basically 99% of people will be doing that
[22:00] rauchg_: the problem is 
[22:00] _CrabDude has joined the channel
[22:00] Tobsn: client.send( gzip.encode( str ) );
[22:00] rauchg_: i have to ship json.js 
[22:00] Tobsn: :)
[22:00] rauchg_: with the client 
[22:00] rauchg_: and many people 
[22:00] rauchg_: already have json loaded 
[22:00] bradleymeck: ryah, is there any decent way you can think of to emulate loading in a .node file, but from a string rather than file
[22:00] rauchg_: or they have it from some framework 
[22:00] mjr_: Sadly a lot of people are still using browsers without native JSON.
[22:00] Tobsn: bradleymeck, eval?
[22:01] bradleymeck: .node is c++ junk
[22:01] Dmitry1 has joined the channel
[22:01] ryah: rauchg_: just don't ship with json - throw a nice error message that says the next to install it
[22:01] Tobsn: oh
[22:01] tjholowaychuk: I have an EventEmitter that works seamlessly between client/server via ws
[22:01] tjholowaychuk: sexay
[22:01] Tobsn: supereval?
[22:01] ryah: bradleymeck: .node is an addon
[22:01] rauchg_: yeah i might do that, the problem is that if you test with a browser that has JSON.parse/serialize then you'll believe it works fine 
[22:01] rauchg_: no error 
[22:01] mjr_: feroz_: Those are the right things to try.  Can you post a gist of the code?
[22:01] rauchg_: i might alert() if it's not there
[22:01] rauchg_: :D
[22:01] rauchg_: i'm gonna do this 
[22:02] rauchg_: .send({}) > gets JSONified 
[22:02] feroz_: mjr_, sure, sec
[22:02] ryah: rauchg_: +!
[22:02] ryah: (which is better than +1)
[22:02] rauchg_: hahaha
[22:03] x_or has joined the channel
[22:03] bradleymeck: ryah, i know its an addon, but some kinda dlopen that can be applied to a buffer?
[22:04] feroz_: mjr_: http://gist.github.com/505403
[22:04] ryah: bradleymeck: um - no
[22:04] bradleymeck: k
[22:05] ryah: but there's probably magic to do that
[22:05] mjr_: feroz_: how do you make it crash?  Does it log anything?
[22:05] camilo_ has joined the channel
[22:05] camilo_: ryan_gahl: A
[22:06] ryah: bradleymeck: maybe not.
[22:06] camilo_: ?
[22:06] feroz_: mjr_:  no in the logs i only have "server running at.."
[22:06] mjr_: I get:  Caught exception: ReferenceError: out is not defined
[22:06] feroz_: but when i checked, the process was not running anymore
[22:07] camilo_: ryah: we need to change something in our addons in order to support the new extension model ?
[22:07] feroz_: oh, sorry that line was not supposed to be there, i was trying sth
[22:07] felixge has joined the channel
[22:09] camilo_: i g2g 
[22:11] mjr_: feroz_: this works for me:  https://gist.github.com/ac176fb404c54fd8fc7a
[22:11] mjr_: I just added some logging to see what was happening, and as long as I POST a body, it writes out the log file.
[22:12] mjr_: I'd suggest that instead of opening and closing the file every time that you open it once when the server starts, append to it in each "end" handler, and then close it on exit.
[22:13] DTrejo__: anyone have an idea for a fun toy node.js project?
[22:13] mjr_: or flush/close it on some sort of interval, like some number of seconds.
[22:13] DTrejo__: something that will expose me to a buncha cool node.js stuff?
[22:13] DTrejo__: something that you've been wanting to make for yourself but have been to lazy to do?
[22:13] DTrejo__: *busy
[22:13] DTrejo__: :)
[22:13] feroz_: mjr_: thanks, i'll try running this. And do the changes you suggest. For now im just getting to know node :)
[22:14] DoNaLd` has joined the channel
[22:14] Tobsn: http://i.imgur.com/Iyu7I.jpg
[22:14] mjr_: DTrejo__: I'm still hoping someone will take my packet capture thing and make some sort of eye candy / semi-useful thing out of it.
[22:15] DTrejo__: mjr_: link? / explanation?
[22:15] mjr_: DTrejo__: http://db.ranney.com:81/
[22:15] DTrejo__: mjr_: maybe use some raphaeljs and stuff to do some fancy visualization you mean?
[22:16] mjr_: DTrejo__: that watches all TCP traffic to db.ranney.com and sends back WS messages to all clients.
[22:16] mjr_: You can watch individual packets arrive at a web server, pick out the URLs or individual headers from the HTTP requets
[22:16] mjr_: Yeah, I was thinking some kind of SVG thing, but I wasn't sure how to render the data in a useful way.
[22:16] _announcer: Twitter: "@javar_ only in spirit. I wrote a WebObjects clone in node.js that I’m using nowadays." -- rentzsch. http://twitter.com/rentzsch/status/20171656828
[22:17] DTrejo__: I wasn't really thinking about useful
[22:17] mjr_: ha
[22:17] DTrejo__: are there useful uses for that information?
[22:17] maxsilver has joined the channel
[22:17] mjr_: Oh sure, you could make some sort of multi-site realtime analytics with it.
[22:17] mjr_: You can graph in realtime which users are asking for which pages, what browsers they are using, etc.
[22:17] ryah: Q: can you attach arbitrary js objects to jquery objects?
[22:18] ryah: jquery dom objects?
[22:18] mjr_: DTrejo__: the source for that server is here:  http://github.com/mranney/traffic_graph
[22:18] Dmitry1: ryh: Yes
[22:18] ryah: how does that work?
[22:18] Dmitry1: ryah: There no jQuery DOM objects. Just jQuery objects
[22:18] joshbuddy has joined the channel
[22:18] joshbuddy has joined the channel
[22:18] ryah: $('#mything').something = true;
[22:18] ryah: ?
[22:18] Dmitry1: Exactly
[22:19] ryah: assert($('#mything').something) ?
[22:19] Dmitry1: As long as you not shadowing some jQuery properties you will be fine
[22:19] DTrejo__: mjr_: if not every browser has support for sockets, is the a problem?
[22:19] ryah: ok
[22:19] Dmitry1: No
[22:19] mjr_: DTrejo__: you could use socket.io
[22:19] maqr has joined the channel
[22:19] Dmitry1: Everytime you are calling $("") you create new instance of a wrapper for given DOM element
[22:20] mjr_: DTrejo__: I wanted to do something with WebSocket though, which is partly why I did that.  I was hoping it would be funner to look at, but it isn't.
[22:20] hober: var mything = $('#mything'); mything.something = true; assert(mything.something)
[22:20] Dmitry1: ryah: SO, to stick to some DOM element you need to use .data. $("blah").data(key, value)
[22:20] Dmitry1: $("blah").data(key)
[22:20] DTrejo__: maybe if it compared latency with other people, and browser makeup, or something like that
[22:21] DTrejo__: in a bar chart
[22:21] DTrejo__: I dunno
[22:21] DTrejo__: have you been thinking of making anything else mjr_ ?
[22:21] hober: And don't forget to removeData when you're done with it
[22:21] DTrejo__: (I was playing around with jquery last week and had fun making this: datrej.appspot.com/qlock/qlock.html)
[22:21] ryah: Dmitry1: okay, so that assert doesn't work, actually
[22:22] Dmitry1: ryah: Use data
[22:22] mjr_: DTrejo__: yeah, you could do all sorts of things when multiple people are connected.  The real magic that I'm adding is the server can sniff and understand packets on the network.
[22:22] Dmitry1: it will work only if you will do it over the same variable, like hober wrote
[22:27] ben_alman has joined the channel
[22:32] gwoo has joined the channel
[22:33] mape: isaacs: Jim had some issues last night installing node-profile, the command didn't get linked to nodeprofile on OSX. Any idea what might cause that?
[22:34] WALoeIII has joined the channel
[22:35] hassox has joined the channel
[22:40] isaacs: mape: did it actually find the linux-tick-processor?
[22:41] mape: I think he got it working by runninge bin/nodeprofile
[22:41] maushu: ryah, actually, I don't think that will work.
[22:41] maushu: Yeah, use the data thingy.
[22:41] mape: *-e
[22:41] maushu: mape, bin/nodeprofil?
[22:41] maushu: :3
[22:41] mape: maushu: Yes?
[22:42] maushu: You removed "e" from nodeprofile! You bastard!
[22:42] maushu: Crap, now I miss south park.
[22:42] mape: Oh, no, just misspelled it
[22:44] ajpiano has joined the channel
[22:44] Validatorian has joined the channel
[22:44] freshtonic has joined the channel
[22:45] devinus: man, there's so many JS parser libraries now, but none of them can parse JS itself
[22:45] devinus: grr
[22:45] bradleymeck: pegjs
[22:45] tjholowaychuk: they usually have brutal output but pegjs looked pretty good
[22:46] tjholowaychuk: from what i saw
[22:46] bradleymeck: whats the prefered method to write binary data to a string
[22:46] bradleymeck: and then to a file
[22:46] isaacs: bradleymeck: myBuffer.toString("utf8")
[22:46] isaacs: bradleymeck: fs.writeFile(file, myBuffer, cb)
[22:46] ryan_gahl has joined the channel
[22:47] bradleymeck: seems to munge some of the binary chars
[22:47] ryah: i think we need a "--dev" mod
[22:47] ryah: mode
[22:47] devinus: bradleymeck: tjholowaychuk, i tried testing pegjs on jquery, it failed
[22:47] ryah: which does liveeditting automatically
[22:48] bradleymeck: someone in here had it working fine
[22:48] bradleymeck: ceej was it you?
[22:48] tjholowaychuk: I didnt know it was ready to use
[22:49] javar has joined the channel
[22:49] gfodor has joined the channel
[22:49] mikeal: ryah: i thought dev was going to be the default mode
[22:49] devinus: i'm trying to replace YUI compressor with a JS version
[22:49] mikeal: and production mode would have a flag
[22:49] ceej: bradleymeck: what we talkin about? :)
[22:49] mikeal: turn off EventSource, crash on exception, etc
[22:49] bradleymeck: was it you that had pegjs a coupleweeks back?
[22:50] ryah: mikeal: nah
[22:50] ryah: other way
[22:50] x_or has joined the channel
[22:50] mikeal: ok, that's kinda nuts to me
[22:50] ryah: otherwise people will think our benchmarks suck
[22:50] ceej: bradleymeck: nope
[22:50] mikeal: nobody else does it that way
[22:50] mikeal: instead they'll think exceptions don't happen?
[22:50] ryah: stacktraces will be printed to stderr
[22:50] mikeal: that's kind of a worse OOTB experience for new developers than benchmarks that are only 4x faster than Ruby
[22:51] isaacs: ryah: +1
[22:51] isaacs: node should be fast by default
[22:51] isaacs: but maybe the --dev could default to true if it's ./configured with --debug
[22:51] mikeal: EventSource takes you from 8K requests per second to like 7K
[22:51] ryah: right
[22:51] mikeal: that's not large drop
[22:51] ryah: what.. it's like 10%
[22:51] isaacs: 8->7 is a lot
[22:52] ryah: i hope we can speed up the eventsource stuff
[22:52] mikeal: like i said, it's only 4x faster than ruby now
[22:52] ryah: talking to brian cantrill about it today :D
[22:52] mikeal: the thing is
[22:52] isaacs: mikeal: i know!  we should be 40x faster than ruby!
[22:52] mikeal: most people will run it in default
[22:52] mikeal: and they'll be trying to do development
[22:52] mikeal: anyone running in production who thinks 7K per second isn't enough is going to find out about production mode
[22:52] devinus has left the channel
[22:52] devinus has joined the channel
[22:52] mikeal: most new developers won't know that they are running in the wrong mode
[22:53] mikeal: for what they need to do
[22:53] mikeal: i belive mjr_, pquerna and creationix felt the same way the last time we talked about it
[22:53] mikeal: and isaacs but he's a turncoat :P
[22:53] isaacs: hehe
[22:53] ryah: eh, js philosophy is to keep on truckin
[22:54] javar has left the channel
[22:54] ryah: that's what we should give them
[22:54] isaacs: ACTION will probably run ./configure --debug --devmode stuff in production
[22:54] mikeal: which is why people don't like the idea of it for server side :)
[22:54] mikeal: haha
[22:54] mikeal: isaacs basically wants it in a default mode he'll never use even for the intended use case
[22:54] isaacs: hahah
[22:54] mikeal: whatever
[22:55] isaacs: ACTION should'nt be consulted.
[22:55] mikeal: the first thing we're going to tell everyone who sends something to the mailing list or IRC we're going to have to tell them over and over again "run in this other mode"
[22:55] zapnap has joined the channel
[22:55] isaacs: yeah, that's a pretty good point
[22:56] isaacs: "why is this not working? there's no errors!" 
[22:56] icy has joined the channel
[22:56] mikeal: well, there are some errors, just not the good ones
[22:56] mjr_: I think we should be very explicit in the documentation that to get max performance and to keep on truckin', you should run in "production mode"
[22:56] isaacs: but even in prod mode, it'll still output errors to stderr
[22:56] mikeal: maybe the default ./configure should be --debug
[22:56] mjr_: But I like dev mode by default.
[22:56] mikeal: that would solve it
[22:58] mikeal: "slide to jailbreak"
[22:58] mikeal: awesome
[22:58] isaacs: inorite!?
[22:58] bradleymeck: i JSON.stringify(fs.readFileSync(file).toString('utf8')) -> 
[22:58] bradleymeck: 			fs.writeFileSync(tmpfd,static_scripts[file],'utf8'), and some of the chars have been changed it seems?
[22:58] isaacs: how lon do you think it'll work for?
[22:58] mikeal: till the next update
[22:58] mjr_: I guess Apple forgot to ship iOS in production mode.
[22:59] mikeal: now that they lost the case they actually don't have to legally satisfy those requirements of the carrier contract
[22:59] bradleymeck: any idea?
[22:59] mikeal: so they won't try to retroactively go after jailbreaks, they'll just fix valid security holes in new releases and their contract is satisfied 
[22:59] DTrejo__: forgive my most horrible question: is it possible to call the windows API with node.js through cygwin?
[22:59] DTrejo__: please don't kill me
[22:59] SubStack: modes are pesky
[23:00] mikeal: DTrejo__: you would have to build a new C++ binding to it
[23:00] mikeal: there isn't a "ctypes" library for node yet that does that
[23:00] mikeal: so it's not simple
[23:00] james2037 has left the channel
[23:00] mikeal: more important than that is probably moving off of cygwin entirely and compiling with mingw
[23:00] mjr_: mikeal: does python have this dev mode/ production mode concept?
[23:01] mikeal: yes
[23:01] mjr_: how do you activate it and what does it do?
[23:01] mjr_: Does it go faster?
[23:01] DTrejo__: mikeal: thanks for the information, I appreciate it
[23:01] mikeal: a little faster, it ignores most exceptions
[23:01] mikeal: there is some other stuff it does that will actually break some code
[23:02] mjr_: oh, awesome.
[23:02] mjr_: I can't find it in the docs, what is it called?
[23:02] bradleymeck: isaacs, tried using those, not sure whats going wrong but seems something is changing, like its adding a BOM or something
[23:02] zomgbie has joined the channel
[23:02] JimBastard has joined the channel
[23:02] isaacs: bradleymeck: not sure, sorry, in the middle of some other stuff atm.  post a gist to the list, maybe?
[23:02] mikeal: i haven't used it since i was at OSAF
[23:03] bradleymeck: kk sory
[23:03] FransWillem has joined the channel
[23:03] mjr_: I must believe that it doesn't do very much if it is so poorly documented.
[23:04] mikeal: mjr_: python -OO
[23:04] mjr_: Otherwise, everybody would be going on and on about how you should activate it if you want to go fast.
[23:04] mikeal: there is another one too
[23:05] mikeal: that one supresses asserts and removes docstrings
[23:05] mjr_: I've already suppressed docstrings by not using them.
[23:05] mikeal: it also causes the interpreter to load .pyo files, not .pyc files
[23:05] mikeal: and causes the byte code generator to save .pyo files, not .pyc
[23:06] mikeal: i'm just guessing, but i bet the .pyo files save space by not supporting decent traceback that can map the symbols in the stack to the file
[23:06] mjr_: I think node should have the best possible error reporting and handling by default, and then some sort of very obvious switch that disables that error reporting/handling if you want to go fast.
[23:06] mikeal: node -p —production
[23:06] bradleymeck: oh, the encoding is padding 0 valued bytes... wtf
[23:07] isaacs: how about, rather than worry about which one shoudl be default, we flip a coin, and if it's a problem, change it.
[23:07] isaacs: it's not like anyone's getting married to the command line interface defaults.
[23:07] isaacs: there are no custody battles.
[23:07] mikeal: so
[23:07] lachlanhardy has joined the channel
[23:07] mjr_: isaacs: might as well ship it and then see which way is better.
[23:07] isaacs: exactly
[23:07] mikeal: crappy errors are actually a barrier to adoption right now
[23:08] isaacs: mikeal: ok, so, it won't be any *worse* than it is right now if --dev isn't default.
[23:08] mikeal: everyone i know that has done twisted or eventmachine programming doensn't want to touch node because they've been bit by it
[23:08] isaacs: and having --dev as an option would make it a little better.
[23:08] mikeal: well, this is a pretty remarkable innovation, i think it should be highlighted
[23:08] isaacs: mikeal: then they have unrealistic expectation.
[23:08] isaacs: ruby is WAY older than node.  expecting it to be as stable is ludicrous.
[23:08] mikeal: and crashing on error is quite nice for debugging
[23:09] mikeal: and i doubt this is the last thing we figure out how to do that improves development but sacrifices performance and we need to turn off
[23:09] mjr_: It sounds like ryah's concern is that he wants it fast by default so people won't get the wrong idea about performance.
[23:10] mikeal: i don't see how they would
[23:10] mikeal: even with this on it's so much more awesome than what they are currently using :)
[23:10] mjr_: Maybe we can fix that issue by just doing some benchmarks where node crushes it.
[23:10] mikeal: and if they post the benchmark anywhere public we'll all scream "you didn't run it with -p"
[23:10] mjr_: Publish those benchmarks widely, problem solved.
[23:11] isaacs: true, it is pretty badass to have benchmarks where node crushes, and then be like "Oh, BY THE WAY, this was running in SLOW mode.  Now let's take the brakes off..."
[23:11] ryah: i think not crashing by default is good
[23:11] DTrejo__: mikeal: you know how in politics the person who says "She is a traitor!" wins, even if she isn't?
[23:11] mikeal: i think you want to enable all of these individually via command line flags
[23:11] DTrejo__: and even if there is a response with clear facts saying she isn't
[23:11] mikeal: DTrejo__: not in the last election :)
[23:12] isaacs: DTrejo__: TRAITOR!
[23:12] mikeal: i'm pretty sure Obama is president even tho he's a muslim
[23:12] mikeal: :P
[23:12] mjr_: ryah: I could get behind not crashing by default.  I think it's pretty important to have really good error reporting by default though.
[23:12] ryah: mjr_: yes
[23:12] isaacs: mjr_: +1
[23:12] DTrejo__: I'm just saying the goal is to not have to respond, however it is we achieve that, if that made any sense
[23:12] isaacs: the EventSource stuff should be there by default
[23:12] mikeal: i actually want to run in production with crashing by default
[23:12] mikeal: and all the other stuff turned off
[23:12] ryah: isaacs: it can't - it's too slow
[23:12] isaacs: ryah: that's sad.
[23:13] isaacs: mikeal: process.on("unhandledException", function (er) { console.log(er); process.exit(1) })
[23:13] ryah: at least the recorded stack traces
[23:13] isaacs: ryah: they're SO nice, though
[23:13] mikeal: ryah: can we get command line switches per feature instead of generic "modes"
[23:13] ryah: mikeal: maybe
[23:13] isaacs: ryah: i can't tell you how often i've longed for those in npm.
[23:13] mikeal: or rather, in addition to generic modes
[23:13] _announcer: Twitter: "looking for #javascript #flash #nodejs #django freelancers - dm me if you're interested. I have a sick project for you ;-P" -- Anthony Cintron. http://twitter.com/supdun/status/20175183329
[23:14] mikeal: i don't want to have to recompile to swtich something on or off
[23:14] mjr_: I think it'd be worth the performance hit for nearly everybody to get expensive stack traces by default.
[23:14] ryah: no
[23:15] mikeal: someone is going to have to automate the script that looks at exceptions sent to the list and auto-replies to run with -dev
[23:15] isaacs: hahah
[23:15] isaacs: mikeal: that sounds like a great compromise.
[23:15] mikeal: no it doesn't :)
[23:15] mjr_: I guess if that happens, then we can have this discussion again.
[23:15] isaacs: mikeal: or how about something that says "Try running with -dev to debug" in teh log message?
[23:15] mikeal: yeah, nothing is set in stone
[23:16] mjr_: Just getting them in there at all makes node better, so we should just put 'em in.
[23:16] isaacs: messaging is cheap.
[23:16] mikeal: i just think this is going to be the best debugging feature in node that nobody uses
[23:16] mikeal: which is why virtually every other similar platform does it the opposite way
[23:16] isaacs: node isn't every other platform
[23:16] mikeal: i know
[23:16] isaacs: but yeah, messaging would be a good compromise.
[23:16] mikeal: but it's also not Java, which is the only other one that does this :)
[23:17] JimBastard: debugging and testing is for code that doesnt work, pft
[23:17] JimBastard: real coders can debug by feel
[23:17] isaacs: er.message += (devMode ? "Try running in --dev mode for better stack traces" : "")
[23:17] JimBastard: you know, touching the computer
[23:17] ryah: i don't want to have a million command line flags
[23:17] mikeal: have you met Marak, he also goes by "Mr. Perfect"
[23:17] JimBastard: i fail soo hard all the time
[23:17] ryah: i think we can enable the "long stacks" dynamically
[23:17] mikeal: JimBastard: when i debug i break out the stethoscope and put it to the iMac
[23:17] ryah: perhaps by REPLing into the process
[23:17] JimBastard: :p
[23:18] ryah: setting a flag on a server object, or whatever
[23:18] ryah: or perhaps with some signals
[23:18] isaacs: yeah, like process.longStacks = true/false
[23:18] mikeal: wait a second, i just realized that this doesn't matter
[23:18] _announcer: Twitter: "All personal hosting switched to nginx. Quite impressed so far, found more docs on site. Ready to play with node.js deployment soon :D" -- Andrew Naylor. http://twitter.com/argon/status/20175465204
[23:18] mikeal: :)
[23:18] isaacs: mikeal: haha
[23:18] isaacs: yeah
[23:18] mikeal: because at some point people doing development won't even install node like this
[23:18] mikeal: they'll install a distribution 
[23:19] isaacs: if a conversation goes on after all the issues have been exposed, it might be a bikeshed.
[23:19] mikeal: and people running production will probably do the same but with different constraints 
[23:19] mikeal: this can just be handled by distros
[23:20] mjr_: I like having the option settable at runtime, particularly on a per-request basis.  That way you can debug something without taking the whole server down to reset the flag.
[23:20] ctp has joined the channel
[23:20] mikeal: how would you do it per request?
[23:20] mjr_: it could be a property of the clientRequest
[23:20] mjr_: or wahtever
[23:20] mikeal: you could only enable it for the *next* event, it would exclude the current one
[23:20] mikeal: or am I wrong?
[23:21] mikeal: cause the object gets created before it calls in to javascript right
[23:21] mikeal: or maybe it's after
[23:21] mjr_: I dunno.
[23:21] mikeal: if it's after that would be easy
[23:21] mikeal: sys.eventSource()
[23:21] mikeal: and now that stack and all the child stacks will have it enabled
[23:22] mikeal: that's kinda awesome
[23:22] mjr_: Being able to either REPL it on for everybody, or have the server pick which things would record stack traces would be awesome.
[23:22] mikeal: this does sound kinda brittle tho
[23:22] mjr_: Doesn't really address the beginner issues, but oh well.
[23:22] mikeal: like how sys.debug() can break my closure sometimes
[23:23] mjr_: We'll get an email auto-responder for that, and document it copiously.
[23:23] mikeal: blocking calls back in to the event system do terrible things
[23:23] aho has joined the channel
[23:24] mjr_: ryah has shared with me the dtrace religion.  
[23:24] isaacs: i'm telling you, putting a message in the short stack traces would do wonders.
[23:25] mjr_: isaacs: when you guys share an office, you can duke it out in person.
[23:25] mikeal: in the official Joyent boxing ring :)
[23:25] isaacs: haha
[23:25] isaacs: joyent needs one of those.
[23:25] isaacs: or a ping pong table.
[23:25] mjr_: 2 ideas enter, only one will leave.
[23:25] isaacs: ACTION has a black belt
[23:26] mikeal: in ping pong
[23:26] SubStack: the nice thing about dvcs is that you can both be right!
[23:26] isaacs: mikeal: no, in taekwondo
[23:26] isaacs: in pingpong i'm mediocre at best.
[23:26] mikeal: it's funnier if it's in ping pong
[23:26] isaacs: true that :)
[23:26] SubStack: canonical repositories are silly
[23:26] mikeal: my old roomate was a ranked pro foosball player
[23:27] mikeal: ok, heading home to write code
[23:28] charlesjolley- has joined the channel
[23:28] bradleymeck: mmm
[23:29] bradleymeck: ryah, does utf8 pad 0s on characters?
[23:30] charlesjolley- has joined the channel
[23:31] charlesjolley- has joined the channel
[23:32] olegp_ has joined the channel
[23:32] charlesjolley- has joined the channel
[23:33] ryah: bradleymeck: no?
[23:33] ryah: bradleymeck: what do you mean?
[23:33] charlesjolley- has joined the channel
[23:34] bradleymeck: not sure whats going on might be in js strings, reading in a binary file in utf8, adding some strings to it, spewing it back to fs in utf8 and it has changed
[23:35] charlesjolley- has joined the channel
[23:35] bradleymeck: the binary data has*
[23:36] ryah: bradleymeck: how are you writing it back?
[23:36] TS_ has joined the channel
[23:36] charlesjolley- has joined the channel
[23:36] bradleymeck: fs.writeFileSync("output.js",output,"utf8")
[23:37] Gruni has joined the channel
[23:38] bradleymeck: i can throw up a gist
[23:40] bradleymeck: http://gist.github.com/505525
[23:40] isaacs: bradleymeck: don't you not need the "utf8" if it's a buffer?
[23:40] bradleymeck: its a string at that point
[23:41] isaacs: oh... ok...
[23:41] bradleymeck: unfortunately it needs to be a string since its being embedded into a js file :/
[23:42] isaacs: bradleymeck: are you modifying the string at all?
[23:42] isaacs: bradleymeck: you can write buffers full of text.  i do it all the time in npm.
[23:42] bradleymeck: yes, adding to both sides of the buffer
[23:42] _announcer: Twitter: "Yay! Flash fallback for the node.js experiment (so it works on web-socketless browsers too) http://bit.ly/9vkyBx :)" -- Jeff Kreeftmeijer. http://twitter.com/jkreeftmeijer/status/20177049908
[23:42] isaacs: oh, ok
[23:42] isaacs: nvm, then
[23:43] isaacs: well, can't you just do it with 3 write calls?
[23:43] isaacs: rather than writeFile?
[23:43] isaacs: like, write the prefix as a string, then write the buffer, then write the ending
[23:43] bradleymeck: could, same effect im seeing
[23:43] isaacs: using fs.open and fs.write
[23:43] isaacs: oh, ok
[23:46] kodisha has joined the channel
[23:48] Gruni has joined the channel
[23:49] dannycoates has joined the channel
[23:50] markwubben has joined the channel
[23:51] jkreeftmeijer has joined the channel
[23:51] DTrejo__: cheers everyone, thanks for all the help and information
[23:52] jkreeftmeijer: hey everyone :)
[23:52] jkreeftmeijer: I just happened to spot somebody clicking a link to my article from here.
[23:52] jkreeftmeijer: What do you think? :)
[23:53] isaacs: jkreeftmeijer: OMG someone else just did, too!
[23:54] isaacs: hehe
[23:54] Gruni has joined the channel
[23:54] jkreeftmeijer: You're probably not using a web based IRC client :P
[23:54] isaacs: ACTION uses colloquy
[23:54] mape: :/
[23:55] sudoer has joined the channel
[23:58] streblo has joined the channel
