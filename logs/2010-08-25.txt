[00:00] brianleroux has joined the channel
[00:00] malkomalko: I mean, all you need is some syntax for a || b
[00:00] malkomalko: with all the undefined and type checks right in there
[00:00] tjholowaychuk: yeah, i just dont want to get into parsing a whole weird language
[00:00] tjholowaychuk: but ya that is a possibility
[00:00] malkomalko: generally, if something is either undefined or empty, you'd want a default
[00:00] tjholowaychuk: if needed
[00:00] malkomalko: most cases anyway
[00:01] malkomalko: right now, if you aren't careful, you run the risk of some ugly errors
[00:01] malkomalko: by the way, thank you
[00:01] tjholowaychuk: totally agree though, that is my annoyance as well
[00:01] tjholowaychuk: np! glad you like it
[00:02] malkomalko: I got my partner to buy in to move our app over to node
[00:02] malkomalko: using a lot of your tools
[00:02] tjholowaychuk: ah nice good to hear! node is a lot of fun
[00:02] malkomalko: yah! been doing it for a while now
[00:02] malkomalko: trying to find my way into testing, haven't felt anything that feels super awesome yet
[00:02] sh1mmer: tjholowaychuk: it's a "pattern" to force the last "argument" to be a callback
[00:03] malkomalko: I'm a rspec snob
[00:03] Alex-SF has joined the channel
[00:03] sh1mmer: personally I don't like it
[00:03] v8bot has joined the channel
[00:03] pengwynn has joined the channel
[00:03] bronson has joined the channel
[00:03] tjholowaychuk: sh1mmer: huh?
[00:03] isaacs: ok, i'm totally caving on this whole "directories" thing
[00:03] sh1mmer: "tjholowaychuk: whats up with this new(Foobar)('baz') cra["
[00:03] isaacs: fuck it.
[00:03] markwubben has joined the channel
[00:04] malkomalko: nvm?
[00:04] tjholowaychuk: sh1mmer: ohhh sorry forgot about that :) haha
[00:04] isaacs: "directories" : { "bin" : "./bins-are-in-here", "lib" : "./modules-are-in-here", "man" : "./man-pages-in-here"}
[00:04] sh1mmer: tjholowaychuk: np
[00:04] isaacs: and npm will just do the right thing, and make sure everything works.
[00:04] malkomalko: isaacs, do you find it annoying that when you rvm list, you see every single version?
[00:04] malkomalko: err
[00:04] malkomalko: npm
[00:04] malkomalko: lol
[00:04] danielzilla has joined the channel
[00:04] isaacs: hehe
[00:05] isaacs: malkomalko: there is an nvm, so i was confused :)
[00:05] creationix: nvm
[00:05] isaacs: malkomalko: it's actually kinda nice in a way.
[00:05] malkomalko: I know I know
[00:05] malkomalko: haha
[00:05] isaacs: malkomalko: you can always do npm ls latest
[00:05] swaj has joined the channel
[00:05] isaacs: malkomalko: or npm ls installed
[00:05] malkomalko: there are too many similar names in the node world
[00:05] tjholowaychuk: kiwi isnt broken yet
[00:05] tjholowaychuk: wtf
[00:05] tjholowaychuk: lol
[00:05] isaacs: malkomalko: it'd be not as bad if they didn't all start with n
[00:06] tjholowaychuk: few more days until its goneeee
[00:06] isaacs: tjholowaychuk: kiwi still works?  neat
[00:06] malkomalko: I kind've feel by default when you list, you should just see the last version of every package
[00:06] tjholowaychuk: isaacs: apparently
[00:06] malkomalko: and then do npm ls all
[00:06] faure has joined the channel
[00:06] isaacs: tjholowaychuk: npm install kiwi never did quite work properly
[00:06] _announcer: Twitter: "Coffeescript grabs my heart with #nodejs & #underscore goodness: http://bit.ly/9rhcE0" -- SÃ©bastien. http://twitter.com/arnaudsj/status/22043193185
[00:06] tjholowaychuk: isaacs: didnt know it was on there lol
[00:06] isaacs: tjholowaychuk: it's not published
[00:06] isaacs: tjholowaychuk: but i had a fork of kiwi that could kinda sorta be installed by npm
[00:07] tjholowaychuk: ah gotcha
[00:07] _announcer: Twitter: "nice! node-notifo: "Send push notifications to your iPhone for free using node.js & notifo.com"  http://bit.ly/a2ZS6a#nodejs #notifo #iphone" -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22043238686
[00:07] tjholowaychuk: will be nice to use that server for some other stuff
[00:07] _announcer: Twitter: "Small option parser for node.js/CommonJS http://github.com/harthur/argparse" -- Heather Arthur. http://twitter.com/harthvader/status/22043253912
[00:13] Lerchmo has joined the channel
[00:13] pengwynn has joined the channel
[00:15] cheapRoc has joined the channel
[00:16] v8bot has joined the channel
[00:16] therealkerni has joined the channel
[00:19] MizardX has left the channel
[00:19] victorstan has joined the channel
[00:19] softdrink has joined the channel
[00:21] malkomalko: also, TJ, is the _ assigned to anything in jade?
[00:21] tjholowaychuk: malkomalko: nope shouldnt be
[00:21] tjholowaychuk: as a local?
[00:21] malkomalko: yah, I had some problems using underscore.js
[00:21] malkomalko: I had to actually reference as __
[00:22] tjholowaychuk: haha shit, my bad ... i use it in the parser
[00:22] tjholowaychuk: i can change that though
[00:22] tjholowaychuk: one sec
[00:22] v8bot has joined the channel
[00:22] tjholowaychuk: malkomalko: seems a little strange though, you should still need to this._
[00:23] malkomalko: hmm
[00:23] malkomalko: I'll just keep it aliased to the double underscore
[00:23] malkomalko: it has a mystical vibe
[00:24] tjholowaychuk: haha fixed in df42217
[00:24] tjholowaychuk: no reason for me to call it _ anyways
[00:24] tjholowaychuk: just lazy
[00:24] Tim_Smart has joined the channel
[00:24] malkomalko: bamn
[00:24] _announcer: Twitter: "Idea: Push your development and ideas with new tech - checkout node.js for more possibilities - http://nodejs.org/ #ws #ajax" -- Consulting by HiTCHO. http://twitter.com/HiTCHO/status/22044380015
[00:25] Tim_Smart: ryah: Did freeall get in touch with you?
[00:26] mjr_ has joined the channel
[00:26] sechrist: mystical yum
[00:26] ryah: Tim_Smart: no
[00:27] Tim_Smart: ryah: Hmm well, he was wondering about file uploads and CPU usages
[00:28] Tim_Smart: His node.js application was using around 7% CPU for a single file upload at 10mbit, while his Java app was using <1%
[00:28] Tim_Smart: And the Java app was doig some processing also.
[00:28] Tim_Smart: doing*
[00:31] TooTallNate: Hey what's the best way to combine Buffers?
[00:32] TooTallNate: Or continually append Buffers onto a base Buffer?
[00:33] _announcer: Twitter: "I can't recommend this enough: http://bit.ly/bHOqHK Peepcoode's Node.js screencast is pissing me off it's so good. @topfunky sets the bar." -- Rob Conery. http://twitter.com/robconery/status/22044943728
[00:35] lachlanhardy has joined the channel
[00:36] mattly has joined the channel
[00:36] mikeal has joined the channel
[00:36] Tim_Smart: TooTallNate: buffer.copy into the base buffer.
[00:37] nerdEd has joined the channel
[00:37] TooTallNate: yes, but the base buffer needs to be bigger every time.
[00:37] TooTallNate: So do I have to create a new Buffer each time with enough space for both?
[00:38] satori_: If you are copying buffer alot, you should maybe look at using larger buffers and managing slices of it yourself.
[00:39] TooTallNate: Ok, good idea. I'm only concating Buffers enough to collect an entire HTTP header
[00:39] overra has joined the channel
[00:41] digitalspaghetti has joined the channel
[00:41] ryah: Tim_Smart: hm
[00:41] TooTallNate: Is that *a lot* of copying?
[00:41] ryah: Tim_Smart: that's not good
[00:41] Tim_Smart: ryah: Yeah. I took a profile if you want to take a quick look.
[00:41] Tim_Smart: https://gist.github.com/c2a2b5a22f726d01cc5c
[00:41] satori_: TooTallNate: see how node does it internally: http://github.com/ry/node/blob/master/lib/dgram.js#L17-29
[00:43] Tim_Smart: ryah: I was wondering why printf is in the top 2.
[00:43] Tim_Smart: I don't think the profiler would use it...
[00:43] sechrist: Is there any lib that abstracts http into something even easier than it is for like bashing on apis and stuff?
[00:43] Tim_Smart: sechrist: http.client, or?
[00:43] sechrist: sure
[00:43] Tim_Smart: npm install request
[00:44] sechrist: think one layer up
[00:44] sechrist: ah k
[00:44] mjr_: ryah: check out the end of that profile.  FastBuffers FTW?
[00:44] ryah: Tim_Smart: i kind of think this is something fast buffers will help
[00:44] ryah: mjr_: yeah
[00:44] ryah: maybe
[00:45] sechrist: there's something called FastBuffers now? As is Node buffers weren't fast enough?
[00:45] Aria: Yep.
[00:45] Aria: Lots of malloc overhead in common uses.
[00:45] mjr_: I wish I knew how to read those profiles
[00:45] sechrist: ACTION does his o-face
[00:45] trotter has joined the channel
[00:45] mjr_: It just seems like there's something missing from the V8 profile, like, they didn't account for all of the time somehow.
[00:45] ehaas has left the channel
[00:45] ryah: i think the fast buffers lead to less gc
[00:45] mjr_: I wonder if that is what the oprofile helper thing does.
[00:45] ryah: or faster gc
[00:45] Tim_Smart: ryah: Yeah definitely. They will help, but something else is weird, Buffer::New was only 2% or something.
[00:45] ryah: that's my theory at least
[00:46] mjr_: Oh yeah, 107 ticks in GC.
[00:46] pengwynn has joined the channel
[00:46] ryah: Tim_Smart: 7% sounds like a lot
[00:46] joshbuddy has joined the channel
[00:46] mjr_: 225 ticks in node::Read, which is sort of what you'd expect I guess.
[00:46] ryah: so we've got the huge gapping performance fix
[00:46] junkee[]: is there a reference for v8?
[00:46] ryah: and until that's fix, i refuse to consider anything else :)
[00:46] Tim_Smart: Yeah, I does, it was around 15% on my macbook pro (I was serving from USB disk though)
[00:47] jelveh has joined the channel
[00:47] _announcer: Twitter: "jQuery and narwhal in common with black node.js" [ja] -- umi. http://twitter.com/umihara666/status/22045865119
[00:47] ryah: we know disk i/o sucks
[00:47] ryah: pquerna showed that
[00:47] charlenopires has joined the channel
[00:47] ryah: so pulling shit off the "completed" queue from the thread pool is slow
[00:47] ryah: (i think)
[00:47] ryah: that's going to be the next big gapping fix
[00:48] mjr_: We take more GC than it seems like we should, which hopefully fastbuffers will fix.
[00:48] Tim_Smart: ryah: Well I did this one night ago http://github.com/Tim-Smart/node/compare/fast-buffer
[00:48] mjr_: And lots of small reads/writes end up pushing that bit extra hard.
[00:48] Tim_Smart: It is pretty half baked and I really didn't know what I was doing.
[00:48] mjr_: Not to mention not coalescing writes at the end of the tick.
[00:49] huyhong has joined the channel
[00:49] trotter has left the channel
[00:49] ryah: but all this has to wait until after nodeo
[00:49] ryah: ko
[00:49] ryah: so goodbye
[00:49] mjr_: yeah, for sure
[00:49] ryah: :)
[00:50] mjr_: I just sent my node ko blog post to gerad.
[00:50] _announcer: Twitter: "Having problems running Node.js in an inferior emacs process. Color control characters coming out wrong. Help?" -- Shrutarshi Basu. http://twitter.com/basus/status/22046068049
[00:50] huyhong has left the channel
[00:51] mjr_: I wish it was easier to track down memory leaks on the JS side.
[00:51] Tim_Smart: mjr_: node-inspector allows heap snapshots.
[00:51] mjr_: I have one in this pcap demo server, and it's just so primitive.  Binary search of commenting out different parts of the program.
[00:51] mjr_: oh?
[00:51] Tim_Smart: I need to get it working though.
[00:51] Tim_Smart: I haven't played with it yet.
[00:52] mjr_: Even the heap snapshot that Chrome comes up with is kind of not helpful.
[00:52] MikhX has joined the channel
[00:52] Tim_Smart: I keep getting segfaults whenever I run a debugger on node.
[00:52] tmpvar has joined the channel
[00:54] admc has joined the channel
[00:55] mjr_: The Chrome heap snapshots don't include the names of anything, do they?  Just the underlying types I thought.
[00:55] mjr_: I assume that what shows up in Chrome is as good as it can get from V8.
[00:56] vnguyen has joined the channel
[00:57] pquerna: submit a change request ticket to chrome and then magically one day it wil show up in v8 :D ?
[00:57] zemanel_ has joined the channel
[00:58] Tim_Smart: mjr_: Let me dig up the demo video...
[00:58] Tim_Smart: http://www.youtube.com/watch?v=AOnK3NVnxL8
[00:59] gerad has joined the channel
[00:59] mjr_: Oh yeah, I've been meaning to watch that.
[01:00] eisd has left the channel
[01:00] zemanel has joined the channel
[01:02] dan_manges has joined the channel
[01:03] junkee[] has left the channel
[01:03] zemanel has joined the channel
[01:03] ryah: anyone want to try a Node Joyent machine?
[01:03] benburkert has joined the channel
[01:03] mjr_: yes
[01:04] Tim_Smart: Sure.
[01:05] gerad has joined the channel
[01:05] tjgillies has joined the channel
[01:06] pquerna: ACTION wants to make a heatmap of crc/md5/fnv
[01:06] faure has left the channel
[01:10] mjr_: Man, this leak detection is hilariously primitive.
[01:10] mjr_: Will have to be fixed tomorrow.
[01:11] _announcer: Twitter: "gotta put together a presentation on RabbitMQ, finish up a node.js app, give Than a phone call and start an article. Gonna be a busy night!" -- jamescarr. http://twitter.com/jamescarr/status/22047623455
[01:12] trotter has joined the channel
[01:15] c4milo has joined the channel
[01:18] sechrist: is there a lib for creating url objects out of arrays of params etc that handles escaping automatically?
[01:18] sechrist: I could write one but probably one exists
[01:18] sechrist: URL seems to only do parse?
[01:19] Tim_Smart: sechrist: http://nodejs.org/api.html#url-format-303
[01:19] badaxx has joined the channel
[01:20] badaxx has joined the channel
[01:21] brianleroux has joined the channel
[01:23] sechrist: yup, ty
[01:24] gartenstuhl has joined the channel
[01:26] _announcer: Twitter: "ok, time to watch 70 mins of node.js as explained by Peep ... Code ... i think i'm not much longer than that for the world tonight #wuss" -- grantmichaels. http://twitter.com/grantmichaels/status/22048688134
[01:32] junkee[] has joined the channel
[01:32] Alex-SF has joined the channel
[01:34] junkee[]: someone from germany here?
[01:35] konobi: nein
[01:35] konobi: *doh*
[01:35] junkee[]: :D
[01:35] mjr_ has joined the channel
[01:36] konobi: ryah: who's the KO organizers here again?
[01:37] Yuffster has joined the channel
[01:37] visnup: http://knockout.no.de !
[01:37] visnup: konobi: me
[01:37] gerad: wooo!
[01:37] gerad: konobi
[01:37] visnup: konobi: gerad
[01:37] gerad: konobi: visnu
[01:37] micheil: konobi: I'm not an organiser, but I will be judging
[01:37] konobi: visnup: noticed that the list of sponsors on the prizes page isn't showing up
[01:37] tg: ryah: yeah sure
[01:38] konobi: (on chrome at least)
[01:38] mjr_ has joined the channel
[01:38] gerad: konobi: adblock?
[01:38] visnup: konobi: do you have ad block 
[01:38] mjr_: no.de!
[01:38] tg: :)
[01:39] ryah: :)
[01:39] konobi: indeed
[01:39] konobi: should i have adblock in safari too, and it shows up there
[01:40] mjr_: I wish I had time to push something there right now
[01:41] Alex-SF_ has joined the channel
[01:42] dylang has joined the channel
[01:42] konobi: visnup: yup... it's adblock doing it
[01:42] visnup: konobi: ah, yeah
[01:42] visnup: konobi: I was always torn since that's a smart adblock so ok good job adblock!
[01:42] visnup: konobi: vs. trying to get around it
[01:45] tg: btw, is this joyent smart platform has to do anything with node?
[01:46] konobi: yes/no/sorta/maybe
[01:46] konobi: ask me at the knockout event =0)
[01:47] Tim_Smart: ryah: npm refuses to install.
[01:47] isaacs: Tim_Smart: oh?
[01:47] isaacs: Tim_Smart: what's up?
[01:47] pengwynn has joined the channel
[01:48] isaacs: (it usually accompanies its refusals with a noisy error message)
[01:48] Tim_Smart: isaacs: I'm testing a joyent box.
[01:48] isaacs: Tim_Smart: aha.  yes.
[01:48] Tim_Smart: "npm ERROR Error: `tar` failed with 1"
[01:48] Tim_Smart: tar is installed though
[01:48] isaacs: Tim_Smart: you have to link the /gnu/bin or whatever into your path first.
[01:48] ryah: it needs to use gtar
[01:48] konobi: it's solaris tar rather than gtar
[01:48] isaacs: Tim_Smart: so that it runs gtar instead of just tar.
[01:48] tg: konobi: that's in sf right? i'm in europe ;]
[01:48] isaacs: Tim_Smart: npm assumes that tar can do gzip
[01:48] Tim_Smart: ah ok
[01:48] konobi: tg, ah... indeed
[01:49] konobi: you could always use gzip, then tar though
[01:49] isaacs: hm... you know, i could just have it just pipe gunzip in there
[01:49] isaacs: konobi: right ^
[01:49] konobi: isaacs: i'm sure we could set you up with a smart machine for testing purposes
[01:51] isaacs: konobi: i think ryah already gave me access to a machine he's got
[01:51] mjr_: oh man, this no.de machine is actually in Oakland.  No wonder it's so fast.
[01:52] ryah: yeah, i get 5ms to it
[01:52] lachlanhardy has joined the channel
[01:52] pquerna: solaris <3
[01:53] ryah: http://knockout.no.de/ :)
[01:53] deadlyicon has joined the channel
[01:53] visnup: ryah: just switched the main dns
[01:53] gerad: next year we have to move knockout hq to denmark
[01:53] visnup: we'll see if TTLs are honored
[01:53] gerad: :-)
[01:53] pquerna: getting no.de is nice.
[01:53] visnup: .de isn't germany?
[01:54] gerad: oh
[01:54] gerad: duh
[01:54] ryah: close
[01:54] gerad: even better
[01:54] gerad: berlin!
[01:54] ryah: i was thinking "so we can be closer to the v8 team?..."
[01:54] micheil: aww... no redirect on http://no.de ?
[01:55] visnup: no.de should redir to nodejs.org
[01:55] visnup: :)
[01:55] ryah: we're still setting up stuff
[01:55] visnup: my opinion
[01:55] konobi: k/// time for cirque
[01:55] micheil: ryah: doing that through a domain name holder or something like pointhq?
[01:56] ryah: yeah, something like that
[01:57] micheil: ryah: might want to block the email address: clipube team <clipube@gmail.com> on the mailing list; looks like their sending spam
[01:57] micheil: something about a folder lock program
[01:57] ryah: oh thanks
[01:58] ryah: fucking groups
[01:58] pquerna: suggest a new node.js project
[01:58] pquerna: ezmlm written in node
[01:59] dannycoates has joined the channel
[01:59] _announcer: Twitter: "Nice! Not a single issue getting Node.js up and running and running my first hello world app!" -- Oscar Godson. http://twitter.com/oscargodson/status/22051183877
[02:00] pquerna: http://mlmmj.org/
[02:00] micheil: ryah: same with: egysat 2 <egysat3@gmail.com>
[02:00] ryah: micheil: wnat to be a moderator?
[02:01] micheil: sure
[02:01] malkomalko has joined the channel
[02:01] ryah: micheil: cool thanks
[02:02] stalled has joined the channel
[02:02] jacobolus has joined the channel
[02:02] micheil: wow. that egysat one went to about 3 lists I subscribe to.
[02:02] ryah: egysat is already banned.
[02:02] pgriess has joined the channel
[02:04] davidwalsh has joined the channel
[02:05] micheil: isaacs: on option parsers, write it with a one-line regex :P
[02:05] isaacs: micheil: it's the perl way
[02:05] micheil: isaacs: did it in ruby.
[02:05] aurynn: it IS the Perl way~!
[02:05] micheil: :P
[02:06] aurynn: The perl way is also a million ways to do it, each of them equally confusing.
[02:08] micheil: something like that. http://gist.github.com/325154
[02:09] trotter has joined the channel
[02:09] ehaas has joined the channel
[02:11] Tim_Smart: ryah: Do these installs have a package manager of choice?
[02:11] Tim_Smart: Or do I have to build everything from source...
[02:11] ryah: Tim_Smart: pkgin update; pkgin install vim
[02:11] Tim_Smart: Ah thanks.
[02:11] rpmcb has joined the channel
[02:11] ryah: docs forthcoming
[02:11] victorstan has joined the channel
[02:11] micheil: ryah: converting people to solaris?
[02:12] micheil: or something else?
[02:12] SubStack: I like option parsers that give me a hash and a list
[02:12] micheil: ryah: also, I'm still thinking about how to rewrite / rework the documentation
[02:13] micheil: ryah: I'm thinking possibly using a template + markdown.js or similar to convert the pages across to static pages
[02:14] micheil: but the main change being in a style / design sense, so, better typography & colouring (for readability, while maintaining project branding)
[02:15] dannycoates: Tim_Smart: still have problems with debugging?
[02:15] Tim_Smart: dannycoates: Yeah.
[02:16] Tim_Smart: I moved on, but it was still segfaulting.
[02:16] dannycoates: what os?
[02:16] Tim_Smart: ubuntu
[02:16] _announcer: Twitter: "Let's see if @oscargodson is as good with JavaScript on the server side as he is on the front-end ;) #nodejs" -- Daniel Erickson. http://twitter.com/TechWraith/status/22052427068
[02:17] Tim_Smart: Hmm seems pkgin doesn't have libz-dev
[02:17] dannycoates: with gcc 4.4 im guessing... try export GCC_VERSION=44 then rebuild node
[02:18] Tim_Smart: 4.4.3
[02:18] dannycoates: the next version of v8 has a fix for that segfault 2.3.10(?)
[02:18] c4milo: is there something in nodejs that depends on boost ? the c++ horrible library ? 
[02:19] Tim_Smart: dannycoates: Yeah I saw the commit.
[02:19] _announcer: Twitter: "brainstorming ideas for the september nodejs meetup :)" -- jamescarr. http://twitter.com/jamescarr/status/22052656894
[02:20] bpot has joined the channel
[02:21] pquerna: c4milo: node.js doesn't use boost
[02:22] dannycoates: ACTION wishes he had more time for node projects
[02:23] ajpiano has joined the channel
[02:24] ryah: c4milo: god no
[02:24] Tim_Smart: dannycoates: Still getting it. I think I'll just wait for the next v8 version to roll out.
[02:24] Tim_Smart: ryah: Is libz-dev on pkgin?
[02:24] ryah: Tim_Smart: should be installed already
[02:25] ryah: /usr/lib/libz.so
[02:25] jashkenas has joined the channel
[02:25] dannycoates: Tim_Smart: sorry dude
[02:25] ryah: /usr/include/zlib.h 
[02:26] Tim_Smart: ryah: Yeah my bad. I didn't read the npm output carefully :)
[02:26] c4milo: ryah: I was hoping that :) thanks god :P
[02:27] rpmcb has joined the channel
[02:29] Dmitry1 has joined the channel
[02:29] _announcer: Twitter: "@jtimberman man oh man... it's been too long since I've worked with chef. Is there any nodejs related recipes yet?" -- jamescarr. http://twitter.com/jamescarr/status/22053396366
[02:29] c4milo: what is the stable version of node-jake ? 
[02:29] c4milo: anybody knows ? 
[02:30] jashkenas: ryah: as seen on the mailing list, would you be willing to bless one of the option parsing modules, and pull it into core?
[02:30] jashkenas: I'd love to throw my homebrew one away.
[02:32] ryah: jashkenas: hm
[02:32] ryah: jashkenas: yeah perhaps
[02:32] ryah: but i want to punt the discussion until next week, if that's okay
[02:32] jashkenas: needn't be anything fancy, just something we can all use without having to go dependency-hunting. Thanks for considering it.
[02:34] creationix: mikeal: you there?
[02:34] ryah: jashkenas: yeah, i agree
[02:34] ryah: jashkenas: pretty useful thing for everyone
[02:34] ryah: including node itself, possibly
[02:35] jashkenas: (and for consistency in option style across node programs) ... allowed after args, or not, --option arg  or --option=arg, or both, etc.
[02:35] cloudhead: are event listeners always called in the order they were added?
[02:36] jashkenas: cloudhead: i've asked that question before, and heard "yes"... but can't testify to it.
[02:36] cloudhead: hmmm ok
[02:36] cloudhead: that would simplify my life
[02:38] pquerna: i'd consider it an implementation detail, rather than a hard guarantee
[02:38] ryah: cloudhead: yes
[02:38] ryah: but i agree with pquerna, that relying on it is a mistake
[02:38] cloudhead: ok
[02:38] cloudhead: hmm
[02:39] jashkenas: pquerna: If we're valuing events over threads because of their predictability, then having the order of events be deterministic seems like a feature, no? 
[02:39] ryah: dom events are specified to have order
[02:39] pquerna: jashkenas: well, right now they are predictable because they are stored in an array or list
[02:39] jashkenas: If the events are causing side effects, the order could be critical, and for good reason.
[02:40] wilmoore has joined the channel
[02:40] pquerna: jashkenas: but if the storage of the callbacks was in a hash table to make removal more efficeint for example
[02:40] pquerna: the order would be more random
[02:40] pquerna: plus, if order is important, you could build it on top of event emitter
[02:40] jashkenas: pquerna: understood. I'm just trying to argue that keeping 'em in-order is a feature that we should appreciate.
[02:41] cloudhead: yea, it would be nice to be able to rely on it
[02:41] jashkenas: I'm sure there's plenty of Node code out there that already does ;)
[02:42] Validatorian has joined the channel
[02:42] matt_c has joined the channel
[02:44] eisd has joined the channel
[02:44] _announcer: Twitter: "LOL 3 days to go for @node_knockout and I haven't thought of what I'm going to try and make! Worse I haven't yet tried out node.js enough!" -- Rohit Arondekar. http://twitter.com/rohitarondekar/status/22054517201
[02:44] eisd: what's the node.js equivalent of window.onerror = function(){ return false }; ?
[02:44] eisd: s/return false/return true
[02:45] danielzilla: eisd: http://nodejs.org/api.html#event-uncaughtexception-54 maybe?
[02:46] eisd: ACTION checks
[02:47] eisd: danielzilla: works like a charm, thanks
[02:48] danielzilla: eisd: I saw a warning about that the other day, like you need to be careful as it might leave you in a weird state. Trying to find the mention in the logs...
[02:48] rauchg_ has joined the channel
[02:49] danielzilla: eisd - Found it: http://nodejs.debuggable.com/2010-08-23.txt at ~18:26ish.
[02:49] danielzilla: Maybe useful information.
[02:49] Tim_Smart: rauchg_: Hey.
[02:49] eisd: danielzilla: thanks, just needed it to keep my server up and running
[02:50] danielzilla: ACTION nods.
[02:50] zapnap has joined the channel
[02:52] micheil: ryah: an option parser would go hand in hand with that NODE_ENV / --env flag
[02:52] phound: What's the proper way to start a bunch of async operations at once and be notified when they've all completed?
[02:53] jashkenas: phound: keep count of how many you have left, and have each decrement the counter by one. fire a callback when it hits zero.
[02:53] phound: No common function to do that already though?
[02:53] phound: Seems like it'd be common enough
[02:53] micheil: phound: or use something like Step
[02:53] micheil: (module)
[02:54] jashkenas: phound: there are libraries for it, if you like. but not a built-in function.
[02:54] phound: k, thanks
[02:54] phound: Step looks like it'll work
[02:54] rpmcb has left the channel
[02:58] visnup has joined the channel
[03:00] mr_daniel has joined the channel
[03:04] russell_h: will http.SererRequest or http.ServerResponse ever emit an 'error'?
[03:04] russell_h: Server, even
[03:05] hammerdr has joined the channel
[03:06] lachlanhardy has joined the channel
[03:07] _announcer: Twitter: "Building with #nodejs along with the latest @peepcode screencast" -- Stephen Wyatt Bush. http://twitter.com/wyattdanger/status/22056082440
[03:08] Tim_Smart: ryah: Can't get node-compress to build :/
[03:09] Tim_Smart: https://gist.github.com/45be4bcbdea9c32457c0
[03:09] jamescarr has joined the channel
[03:09] ajpiano has joined the channel
[03:09] Tim_Smart: Builds fine with no warnings or anything on Ubuntu (except for one in eio, with -ansi and -pedantic)
[03:11] benburkert has joined the channel
[03:11] rauchg_ has joined the channel
[03:11] jamescarr: I've been thinking... it's totally possible to create an xmpp server written in node.js isn't it?
[03:11] jamescarr: not a client, but an actual server
[03:11] Tim_Smart: jamescarr: Why wouldn't it be?
[03:11] russell_h: yeah, if you felt like doing that...
[03:11] matt_c: jamescarr: yeah it's a lot of XML stuff but node would be a good fit.
[03:12] _announcer: Twitter: "Interesting lecture by the @ # nodejs emerleite mandatory for anyone who wants to climb a web app. http://bit.ly/9AZHme" [pt] -- Marcos Sousa. http://twitter.com/marcos_sousa/status/22056433468
[03:12] Tim_Smart: jsdom probably isn't per-formant enough for heavy XML work.
[03:13] jamescarr: Tim_Smart, surely there must be some quick way to parse the xml...
[03:13] Tim_Smart: libxmljs or whatever should be fine.
[03:13] ryah: Tim_Smart: bbl - figure it out hten
[03:13] jakehow has joined the channel
[03:13] matt_c: Just using ejabberd would probably be a better option :)
[03:13] Tim_Smart: ryah: No problems :)
[03:13] ncb000gt has joined the channel
[03:13] jamescarr: matt_c, then it wouldn't be a pure node.js server ;)
[03:14] matt_c: jamescarr: Indeed, but I believe there's lots of "not fun to implement" in putting together an XMPP server.
[03:14] Tim_Smart: jamescarr: http://github.com/polotek/libxmljs
[03:14] matt_c: the core spec is an RFC + a bunch of XEPs that servers are expected to implement these days
[03:15] ncb000gt: anyone using websocket-server, the latest in npm, 1.3.03?
[03:17] ncb000gt: matt_c: there are a few xmpp projects out there but most of them only half implement parts of features and likely haven't been checked with specs :)
[03:17] ncb000gt: although I'd be happy to see otherwise
[03:17] matt_c: ncb000gt: Yeah.  It'd be awesome to see a node-powered XMPP server but it's a ton of work to do right.
[03:20] micheil: why on either would you use XML to represent messages?
[03:20] ncb000gt: matt_c: it looks like http://github.com/astro/node-xmpp might be on it's way there though
[03:20] micheil: it's so.. ugh to parse xml at times.
[03:20] micheil: (json ftw.)
[03:20] ncb000gt: micheil: because adding bloat to the tubes is what makes the cable companies happy
[03:24] aurynn: Is there a concise way to replace all /pattern/ in a string with an incrementing value, short of using a for loop?
[03:25] zomgbie has joined the channel
[03:26] jashkenas: aurynn: use string.replace with a function argument.
[03:26] aurynn: for the "replace" value?
[03:26] aurynn: I can do that?
[03:27] aurynn: oh my god I can
[03:27] aurynn: Win.
[03:27] aurynn: Thank you :)
[03:28] matt_c has joined the channel
[03:28] jashkenas: no problem. the function is invoked for each match to be replaced if it's a global regex...
[03:28] jashkenas: you get all of the parenthesized groups as parameters.
[03:28] aurynn: That's quite lovely
[03:28] jashkenas: As well as the offset into the string where the match occurred.
[03:28] jashkenas: yeah, it's great.
[03:28] _announcer: Twitter: "Tonight I think will be #coffeescript flavored #express #nodejs for work-desert" -- Tim Dysinger. http://twitter.com/dysinger/status/22057529040
[03:29] jashkenas: I'd link you to MDC, but it's down right now.
[03:30] jamescarr: man... I wonder if crowdvine has some kind of api
[03:30] v8bot has joined the channel
[03:30] aurynn: I'll check my copy of JS: The Good PArts for that
[03:30] aurynn: since that's a gorgeous bit of API
[03:32] keeto has joined the channel
[03:35] v8bot has joined the channel
[03:35] joshbuddy has joined the channel
[03:36] joshbuddy has joined the channel
[03:39] polotek has joined the channel
[03:41] siculars has joined the channel
[03:42] Tim_Smart: Who does v8bot belong to?
[03:42] jamescarr: heh... I always accidentally go to node.js instead of nodejs.org
[03:45] polotek: jamescarr: unfortunately there is no country or other sovereign entity that starts with a J and includes an s somewhere
[03:45] eisd: Tim_Smart: me, and I used your irc library :P
[03:45] eisd: Tim_Smart: you're in the credits
[03:45] eisd: `v about @ Tim_Smart
[03:45] v8bot: Tim_Smart: v8bot is an IRC bot written entirely in Javascript by eisd using Google's v8 Javascript engine and Node.js.  Credits: Tim_Smart, gf3, MizardX
[03:45] Tim_Smart: Oh right.
[03:45] Tim_Smart: What does it fo?
[03:46] Tim_Smart: *do
[03:46] eisd: Well, a lot
[03:46] eisd: v8: var x = 10; x + 20
[03:46] v8bot: eisd: 30
[03:46] eisd: `v google test @ Tim_Smart
[03:46] v8bot: Tim_Smart: Test.com Web Based Testing and Certification Software v2.0 - http://www.test.com/
[03:46] eisd: `v macro test = (function(){ return "Custom macros with full JS execution support" })()
[03:46] v8bot: eisd: Saved macro "test."  Type `v test to execute.
[03:46] eisd: `v test
[03:46] v8bot: eisd: Custom macros with full JS execution support
[03:47] mattikus has joined the channel
[03:47] eisd: v8: while(true); //Sandboxed code
[03:47] v8bot: eisd: Error: Timeout
[03:48] Tim_Smart: v8: arguments
[03:48] v8bot: Tim_Smart: ReferenceError: arguments is not defined
[03:48] Tim_Smart: :p
[03:48] eisd: v8: (function(){ return arguments })(1,2,3) //Tim_Smart
[03:48] v8bot: eisd: {"0": 1, "1": 2, "2": 3}
[03:48] jamescarr: shit
[03:49] Tim_Smart: eisd: Was seeing if I could escalate privileges.
[03:49] jamescarr: is there someway to follow redirects with http client?
[03:49] eisd: Tim_Smart: Ah
[03:50] jashkenas has left the channel
[03:51] jamescarr: I'm trying to pass user creds to a login form on an external site that redirects users to the home page :(
[03:52] jamescarr: I'd like to scrape that home page to see if they're logged in... the cookie set by the server is no help :(
[03:52] _announcer: Twitter: "Announcing a simple, fun CouchDB client for #nodejs http://github.com/creationix/couch-client" -- Tim Caswell. http://twitter.com/creationix/status/22059057582
[03:52] polotek: jamescarr: mikeals request module follows redirects
[03:52] polotek: the http module isn't that high level
[03:52] polotek: you have to do it yourself
[03:53] creationix: speaking of http, I have a simple requester in the couchdb lib I just posted
[03:53] creationix: no redirects though
[03:53] jamescarr: thanks I'll take a look... is it on github?
[03:53] eisd: Tim_Smart++
[03:53] v8bot:  eisd has given a beer to Tim_Smart. 							Tim_Smart now has 1 beers.
[03:53] creationix: http://github.com/creationix/couch-client
[03:53] polotek: jamescarr: npm install request
[03:53] eisd: Tim_Smart: and that too :P
[03:53] micheil: creationix: do you have anything that uses the http origin header at all?
[03:53] creationix: micheil: not that I know of
[03:53] jamescarr: creationix, do'h! ANOTHER couchdb client? :)
[03:53] creationix: hehe
[03:54] polotek: creationix: I like the Pattern proto stuff much better than the previous experiments
[03:54] micheil: creationix: k. Just about to fix up the one in node-websocket-server
[03:54] jamescarr: there's only like 80 of those
[03:54] creationix: jamescarr: mine does automatic batching with 0 latency
[03:54] creationix: but not much more than that
[03:54] creationix: it's pretty minimal
[03:54] creationix: polotek: thanks
[03:54] micheil: creationix: hmm.. you posted much to the TCL blog?
[03:55] creationix: micheil: I should post more
[03:55] micheil: I'm just working through my list of repo's and projects to post about.
[03:55] blogometer has joined the channel
[03:56] jamescarr: micheil, will I still need to querystring.stringify my post object with request?
[03:57] micheil: jamescarr: ?
[03:57] polotek: jamescarr: no, I think it does it for you
[03:57] jamescarr: I think I have you mixed up with mikeal
[03:57] micheil: probably.
[03:57] jamescarr: polotek, ah... at least I dont have to set the Content-Length header
[03:58] jamescarr: that part is always a bother
[03:59] ncb000gt: polotek: that's nice to know. I'm going to have to look at that request module then. :)
[03:59] jamescarr: polotek, thanks!
[04:00] jamescarr: I just did what I needed to do
[04:00] polotek: eventually there will be more high level http functions in the http module
[04:00] polotek: but they're still being hashed out
[04:03] jamescarr: is there someway to capture cookies that are set???
[04:03] jamescarr: looks like following the redirect doesnt work cuz the cookie is lost
[04:04] Blink7 has joined the channel
[04:04] emilio has joined the channel
[04:05] jamescarr: hmmm
[04:05] jamescarr: in that case, is there anyway to get the cookie that is set?
[04:06] jamescarr: using the http client
[04:06] polotek: jamescarr: if request doesn't handle it you might have to capture it yourself on the first request
[04:06] polotek: before it redirects
[04:06] polotek: jamescarr: I believe there are some cookie modules, never used any
[04:07] jamescarr: yeah
[04:07] jamescarr: I didnt see much in the headers for that... just a set cookie field but no cookie data
[04:07] mjr_: This Node Knockout business is really getting some great content published on working with node.
[04:08] polotek: mjr_: agreed
[04:08] mjr_: The blog post content ratio is incredibly high.
[04:08] Tim_Smart: There are some pretty awesome prizes.
[04:08] polotek: still not enough on the basics of streams and http though
[04:08] raymorgan has joined the channel
[04:08] polotek: I was going to do that
[04:08] polotek: but never got around to it
[04:08] mjr_: I know, I keep meaning to do that as well.
[04:08] mjr_: I have all of these ideas about doing a node documentation project
[04:09] mjr_: But I don't have time for that sort of craziness.
[04:09] mjr_: I think it'd really help newcomers get up to speed though.  The current docs are pretty difficult to approach.
[04:09] mscdex: node.js rules!
[04:10] polotek: mjr_: I keep getting distracted with my couple of other libs
[04:10] polotek: and now node KO
[04:10] mjr_: Are you on a team for KO?
[04:10] tango3 has joined the channel
[04:11] mscdex: i wish there was a fancy gui app to let me do site-to-site sftp/scp stuff, especially directory diffs
[04:11] mscdex: :S
[04:11] mjr_: mscdex: that sounds like a wonderful KO project
[04:11] mjr_: Maybe using a fuse binding or something awesome like that.
[04:12] mjr_: Sprinkle in some ncurses
[04:12] mjr_: Add some twitter
[04:12] mjr_: Boom!
[04:12] jamescarr: thanks
[04:12] jamescarr: now I have a good idea for Node KO
[04:12] jamescarr: :)
[04:12] jamescarr: jk
[04:12] overra has joined the channel
[04:13] jamescarr: the idea I came up with for my team to do is super duper lame
[04:13] ncb000gt: ncurses makes the baby jesus cry
[04:14] JimRoepcke has joined the channel
[04:15] mscdex: why does it make him cry?
[04:16] gerad has joined the channel
[04:17] polotek: mjr_: yeah I'm on a KO team
[04:17] polotek: with ncb000gt 
[04:17] polotek: and this other loser who never show sup in the channel
[04:18] ncb000gt: yep.
[04:18] steadicat has joined the channel
[04:19] ncb000gt: in terms of ui, ncurses doesn't do much for me. don't fake being a gui lib, give me real windows and such.
[04:20] mscdex: how is faking it?
[04:20] mscdex: s/is/is it/
[04:21] ncb000gt: It's not exactly faking it, but I have to open a terminal to use the apps.
[04:21] mscdex: correct, it's a graphical interface for the terminal.
[04:21] mscdex: :S
[04:22] ncb000gt: That's fine if I don't have something like X, but when I do, and when I have a WM (most of the time), I'd prefer to use the WM's layout
[04:22] ncb000gt: mscdex: aye, I know that.
[04:22] ncb000gt: It certainly has it's place
[04:22] ncb000gt: And, I was being way over-dramatic about ncurses
[04:23] mjr_: curses is great because everybody can use it pretty much
[04:23] mjr_: It's like the lowest common demoninator
[04:23] polotek: at this point I don't know why anyone would prefer to use any moderately complex UI from a terminal
[04:23] polotek: mjr_: I think we can raise the lcd a bit
[04:23] sh1mmer has joined the channel
[04:23] mscdex: i know there's at least several people in here that use irssi and the like
[04:24] ncb000gt: mjr_: I doubt that "anyone" can use a terminal based ui.
[04:24] polotek: mscdex: yes, and I fear for their sanity
[04:24] mjr_: polotek: one reason is access control.  You might only be able to ssh into some computer, and terminal stuff just works.
[04:24] mjr_: And there's also screen/tmux
[04:24] ncb000gt: mscdex: I use irssi... /duck
[04:24] mscdex: !
[04:24] ncb000gt: hahaha
[04:24] polotek: mjr_: you shouldn't need to use any complex ui on a server that only let's you ssh
[04:24] tpryme has joined the channel
[04:24] _announcer: Twitter: "@RickStrahl it will all be there in JS too with the node.js ecosystem." -- James Avery. http://twitter.com/averyj/status/22061037356
[04:25] mjr_: I use mtr from the command line all the time.
[04:25] mjr_: It's a curses program.
[04:25] polotek: the real problem I have ncurses ui is it's usually design awfully
[04:25] polotek: impossible to figure out how to get around in it
[04:25] mjr_: But I take the point that most things like this are moving or have moved to some sort of web-based UI.
[04:25] mscdex: polotek: that's not the fault of ncurses, but of the application using it
[04:25] mjr_: I guess mtr, top, and tmux are all I use.
[04:25] polotek: and depending on your terminal, half the keyboard commands dont wrk
[04:26] polotek: mscdex: agreed, that doesn't make me less irritated
[04:26] polotek: it's a tool that's difficult to use effectively
[04:26] jamescarr: okay... I'm trying to make a get request to a uri that I can download a csv file from and keep getting this error...
[04:26] polotek: I would rather people skip it
[04:26] _announcer: Twitter: "@averyj Although I'd love to see a port of node.js to Windows. Sadly, I'm not nearly a good enough C++ programmer to do it or help" -- Scott Koon. http://twitter.com/lazycoder/status/22061124115
[04:26] mscdex: links uses ncurses pretty well
[04:26] jamescarr: http://gist.github.com/548854
[04:26] jamescarr: any ideas whats up?
[04:27] wang_: james: module pathing issue?
[04:27] jamescarr: just doing a request({uri:'someuri'}, fn(){})
[04:27] jamescarr: hmmm dont see why... tried it with the plain http module, same issue
[04:27] jamescarr: works for everything else
[04:28] ncb000gt: jamescarr: how are you doing your require?
[04:28] mjr_: jamescarr: that's an error during require
[04:28] ncb000gt: var request = require(<what is in here>);
[04:29] ncb000gt: var request = require("/path/to/lib"); or just require("lib"); if you're using something like npm
[04:29] _announcer: Twitter: "My article on Socket.IO for the node knockout competition  http://j.mp/c6797W #websocket #realtime #node.js" -- Guillermo Rauch. http://twitter.com/rauchg/status/22061289506
[04:29] jamescarr: just require('request') ... it works for other things
[04:29] polotek: jamescarr: when was the last time you updated your npm?
[04:29] jamescarr: the require isnt where the exception gets thrown
[04:29] polotek: might be a problem with the paths
[04:29] jamescarr: the line where the request is made gets thrown
[04:30] jamescarr: this also happens with just using the http module too
[04:30] jamescarr: but only for this url! :(
[04:30] ncb000gt: hmm
[04:30] polotek: jamescarr: ah
[04:30] polotek: no idea about that :)
[04:30] polotek: jamescarr: gist some code
[04:31] ncb000gt: i'm out, later
[04:31] jamescarr: oh I am dumb
[04:31] Tim_Smart: Wow. Mozilla are really hammering away at Jagermonkey http://arewefastyet.com/
[04:32] junkee[] has joined the channel
[04:32] jamescarr: nvm
[04:32] jamescarr: I screwed up on a require :S
[04:34] mjr_: Tim_Smart: neat link
[04:34] mjr_: I love the arms race for JavaScript supremacy.
[04:34] jamescarr: http://github.com/koles/ya-csv is whats causing me grief on the require
[04:34] jamescarr: hmmm
[04:36] jamescarr: is there something wrong with his package.json?
[04:36] jamescarr: http://github.com/koles/ya-csv/blob/master/package.json
[04:36] lachlanhardy has joined the channel
[04:36] jamescarr: have to do require('ya-csv/ya-csv') for it to work
[04:36] jamescarr: I think he's missing his main script declaration
[04:36] Tim_Smart: Yeah,
[04:37] joshbuddy_ has joined the channel
[04:37] jamescarr: hmmm... I'll fork and fix that
[04:42] icozzo has joined the channel
[04:42] joshbuddy_ has joined the channel
[04:43] polotek: okay, I'm out
[04:43] jamescarr: wait
[04:43] jamescarr: one sec... 
[04:43] polotek: me?
[04:44] jamescarr: what is passed as part of the responseBodyStream arg in request? :)
[04:44] jamescarr: sorry, I mean
[04:44] jamescarr: responseBodyStream
[04:44] v8bot has joined the channel
[04:44] polotek: jamescarr: it's a writable stream.  request will pump the response into it
[04:44] polotek: so for instance you could pass an open file stream
[04:45] polotek: and it would write the response to a file
[04:45] jamescarr: thanks
[04:47] EyePulp has joined the channel
[04:47] polotek: cheers
[04:47] polotek has left the channel
[04:49] austinfromboston has joined the channel
[04:50] _announcer: Twitter: "Grandma node.js. You&#39;ll see a little bit. http://nodejs.org/" [ja] -- soushi. http://twitter.com/_so4/status/22062504308
[04:51] sudoer has joined the channel
[04:52] blogometer has left the channel
[04:54] mscdex: now that's not fair, node.js isn't old enough yet to be calling it grandma!
[04:54] ryan[WIN] has joined the channel
[04:54] danielzilla: mscdex: You misunderstand. It's a shout-out to all the old biddies to get their async on.
[04:59] benburkert has joined the channel
[05:00] mjr_: Hey, creationix made a couchdb client.  Are there like 4 couchdb clients now?
[05:00] mscdex: probably 4 times that
[05:01] mscdex: same with frameworks :P
[05:02] mscdex: couchdb potatoes!
[05:03] Apage43 has joined the channel
[05:03] isaacs has joined the channel
[05:04] teemow has joined the channel
[05:10] creationix has joined the channel
[05:15] hassox has joined the channel
[05:20] meso has joined the channel
[05:24] jspiros has joined the channel
[05:25] _announcer: Twitter: "@ryah Could node.js really handle 500k simul clients?" -- Chuck Vose. http://twitter.com/vosechu/status/22064361368
[05:27] isaacs: jamescarr: yeah, that irks me.  i should make that be better about that
[05:27] isaacs: er, was scrolled back..
[05:27] isaacs: that ya-csv/ya-csv
[05:27] isaacs: npm should sniff that out and turn name/name into a main script, if one exidsts
[05:28] jamescarr: isaacs, yeah, I was thinking that too
[05:28] isaacs: jamescarr: it's actually not hard to do in the next version.
[05:28] isaacs: ACTION back to hacking
[05:30] tango3 has joined the channel
[05:30] _announcer: Twitter: "@robconery ok, interesting, but why do you need JS for that? I mean other than Node.js does it. :)" -- Bertrand Le Roy. http://twitter.com/bleroy/status/22064604960
[05:32] hassox: allo folks
[05:32] confoocious has joined the channel
[05:35] dnolen has joined the channel
[05:36] _announcer: Twitter: "@vosechu one node.js process can hold on to about 120k connections. You can run 1 process per core, but your kernel will soon become sad." -- Matt Ranney. http://twitter.com/mranney/status/22064873311
[05:37] austinfromboston has joined the channel
[05:40] confoocious has joined the channel
[05:41] ryah: Tim_Smart: ping
[05:43] SamuraiJack has joined the channel
[05:45] junkee[]: pong
[05:45] isaacs: jamescarr: http://github.com/isaacs/npm/commit/3447a3f7f80ea7245e753f36395759e5aabb54eb
[05:46] stagas__ has joined the channel
[05:52] _announcer: Twitter: "Web Playing with bleeding edge web technologies â node.js & MongoDB ... http://bit.ly/an3fGQ" -- Dhaneesh. http://twitter.com/dhanu88/status/22065650269
[05:53] v8bot has joined the channel
[05:53] jbr_ has joined the channel
[05:54] joshbuddy has joined the channel
[05:55] amerine has joined the channel
[05:56] ph^ has joined the channel
[06:03] _announcer: Twitter: "anyone wanna help me test my node.js backgammon? http://backgammon.stagas.com" -- George Stagas. http://twitter.com/stagas/status/22066163691
[06:08] [[zz]] has joined the channel
[06:10] mjr_: I thought I had some kind of memory leak, but after giving V8 a good long while to think about it, GC seems to have reclaimed almost everything again.
[06:10] mjr_: There is some serious magic going on in there.
[06:14] hassox has joined the channel
[06:17] _announcer: Twitter: "@mdempsky @dreid IMO node.js has advanced so much in the overzealous fanboy club at this point that Erlang pales in comparison" -- Eric Florenzano. http://twitter.com/ericflo/status/22066811608
[06:17] _announcer: Twitter: "couldn't sleep therefore been hacking up a reverse SSL proxy in nodejs; it even supports client certificate verification! Tea required! #fb" -- Daniel B. http://twitter.com/DanBUK/status/22066836845
[06:21] wilmoore has joined the channel
[06:23] sveimac has joined the channel
[06:29] mikedeboer has joined the channel
[06:30] jamescarr: what a long night
[06:30] jamescarr: sheesh
[06:32] eisd has left the channel
[06:33] Throlkim has joined the channel
[06:41] gerad has joined the channel
[06:42] micheil: gerad: ping
[06:43] gerad: yo
[06:43] _announcer: Twitter: "@stilkov re: node.js db driver: This seems to be considerable option for MySQL. http://bit.ly/aoEYr5" -- Hermanni HyytiÃ¤lÃ¤. http://twitter.com/hemppah/status/22067966161
[06:43] micheil: hey
[06:43] micheil: gerad: as in KO?
[06:43] gerad: micheil: yep
[06:43] micheil: sweet.
[06:43] creationix has joined the channel
[06:43] gerad: micheil: what's up?
[06:44] crohr has joined the channel
[06:44] micheil: gerad: pm'd
[06:54] zomgbie has joined the channel
[06:54] freeall has joined the channel
[06:58] _announcer: Twitter: "Ryan Dahl: âIntroduction to NodeJSâ (58 min Video.) http://bit.ly/intronodejs" -- Francisco Reyes. http://twitter.com/pacorro2000/status/22068612689
[07:01] _announcer: Twitter: "Video: Node.js by Ryan Dahl - JSConf.eu - 2009 http://bit.ly/9kRBBr" -- Francisco Reyes. http://twitter.com/pacorro2000/status/22068755675
[07:03] JimRoepcke has joined the channel
[07:04] _announcer: Twitter: "With node.js all you need is an idea: 2 web apps and a node util in 2 weeks http://bit.ly/a9snVR http://bit.ly/cV8Wz1 http://bit.ly/b3CZwB" -- George Stagas. http://twitter.com/stagas/status/22068867833
[07:07] alecmuffett has joined the channel
[07:15] paulwe has joined the channel
[07:16] paulwe_ has joined the channel
[07:17] mape: stagas: really neat :)
[07:17] stagas__: mape: thanx :)
[07:19] mape: stagas__: some issue with the textarea overlaying and blocking movement
[07:19] mape: but other then that really nice
[07:20] mape: stagas__: Doing something similar for the knockout? :)
[07:20] stagas__: mape: maybe because I have an interval doing .focus() on the textarea
[07:20] crohr has joined the channel
[07:20] mape: oh k
[07:20] mape: why interval? you press return to enter that mode?
[07:21] stagas__: mape: I have a few ideas but I haven't decided yet
[07:21] stagas__: for the KO
[07:21] mape: yeah wondering what kinda stuff will come out of the knockout
[07:21] mape: Haven't really followed any other contest with the same premise, not sure of what the quality is like
[07:22] stagas__: is it bad if I reuse some existing code for the knockout?
[07:22] mape: Not sure, I have a boilerplate setup I use for all my projects that I plan on putting on github today
[07:22] mape: Using libs is ok so I assume it is ok as long as it isn't the final solution
[07:23] stagas__: hehe I thought of that too, make the code a module so it'll be ok
[07:23] stagas__: :P
[07:24] mape: Mine is just basicly express with my asset manager and some good to have copy paste code
[07:24] mape: So don't think people will mind
[07:24] mape: And if they do I won't mind much if I get disqualified, fun to code no the less
[07:27] stagas__: yeah I plan on reusing some stuff so it'll be almost copy paste but JS is about all that, reusing code I mean
[07:27] zemanel has joined the channel
[07:30] stagas__: I just have no idea how to use joyent and heroku and all that
[07:32] mape: Will be articles
[07:33] zomgbie has joined the channel
[07:34] Tim_Smart has joined the channel
[07:34] tableton has joined the channel
[07:34] stagas__: they should have had a tool like npm and just do something like 'ko publish .' and upload your app with its dependencies
[07:35] stagas__: the bad thing is I'll be spending time to figure out that stuff instead of working on my project which sucks
[07:35] rnewson has joined the channel
[07:35] rnewson has joined the channel
[07:35] isaacs: stagas__: i had hoped to get that done in npm before knockout but other things got in the way
[07:36] _announcer: Twitter: "http://nodejs.facing-dtrydays," -- mahatabot. http://twitter.com/mahatabot/status/22070242289
[07:37] stagas__: isaacs: yeah I saw an article somewhere about npm and knockout and thought that was that before reading it
[07:37] stagas__: isaacs: I was counting on you :P
[07:37] _announcer: Twitter: "Would like to write a dedicated #xmpp server based on node.js. Interested? #node #nodejs" -- stefan strigler. http://twitter.com/zeank/status/22070283017
[07:38] isaacs: yeah, i have this thing about deadlines.  i try to use them only as much as they're useful, and otherwise, focus on having fun making something good.
[07:38] fliebel has joined the channel
[07:38] _announcer: Twitter: "Node.js on Heroku ã®å¶éãã¤ãããªã¼ã NodeKnockout ã©ãããã http://nodeknockout.posterous.com/countdown-to-knockout-post-8-deploying-to-her" -- Toshihiro Shimizu. http://twitter.com/meso/status/22070323622
[07:38] isaacs: the best successes aren't something you push yourself into, they're something that pulls you in.
[07:39] virtuo has joined the channel
[07:40] jelveh has joined the channel
[07:40] SvenDowideit has joined the channel
[07:41] devinus has left the channel
[07:44] codetonowhere has joined the channel
[07:44] creationix: how do I use http.Client's keepalive?
[07:46] joshbuddy has joined the channel
[07:47] javajunky has joined the channel
[07:48] creationix_ has joined the channel
[07:50] tobiassjosten has joined the channel
[07:50] mikedeboer has joined the channel
[07:54] aubergine_ has joined the channel
[07:55] pdelgallego has joined the channel
[07:56] Tim_Smart: creationix_: Look at the list of special headers http://nodejs.org/api.html#http-client-184
[07:57] creationix_: thanks
[07:59] solidsnack has joined the channel
[07:59] ph^ has joined the channel
[08:02] proppy has joined the channel
[08:02] jbr_ has joined the channel
[08:02] proppy: hop
[08:03] proppy: is there a way to run a single test-file.js in node test suite ?
[08:05] _announcer: Twitter: "I just added connection pooling and an interface to the _changes feed in http://github.com/creationix/couch-client #nodejs #couchdb #live" -- Tim Caswell. http://twitter.com/creationix/status/22071402947
[08:05] creationix_: proppy: just run the js file directly
[08:05] proppy: creationix_: it will run the test against installed node
[08:05] proppy: not the working directory one
[08:05] proppy: (IIRC)
[08:05] creationix_: using the node in build/default
[08:06] creationix_: just specify the path to the just compiled node
[08:06] proppy: oh ok :)
[08:06] Tim_Smart: ./node test/simple/...
[08:06] proppy: creationix_: nice and obvious thanks :)
[08:06] proppy: Tim_Smart: thanks too
[08:06] proppy: creationix_: does ./node will use stuff from ./lib too ?
[08:07] Tim_Smart: proppy: Everything is statically compiled into the binary.
[08:07] creationix_: proppy: node looks for libraries relative to itself
[08:07] proppy: oh ok
[08:07] creationix_: though the stuff in node's source is embedded in the binary itself
[08:07] proppy: so ./lib/readline.js will be used
[08:08] proppy: I didn't know that thanks
[08:08] creationix_: so you need to rebuild every time you change lib/readline.js
[08:08] Tim_Smart: Yup.
[08:08] mikedeboer has left the channel
[08:08] proppy: \looking forward adding meta-d support to readline
[08:09] Tim_Smart: creationix_: Was just thinking, it would be nice to separate middleware from connect into some sort of repository.
[08:09] Tim_Smart: Then users can pick a DSL seperate from the middleware.
[08:09] creationix_: Tim_Smart: not a bad idea
[08:09] creationix_: that would encourage reuse I think
[08:10] Frans-Willem has joined the channel
[08:11] Tim_Smart: creationix_: I'm pretty sure the majority of connect middleware I can use with biggie-router, which is cool.
[08:11] creationix_: nice
[08:12] Tim_Smart: I haven't played with it yet though, something for the weekend me thinks.
[08:14] satori_ has joined the channel
[08:19] confoocious has joined the channel
[08:19] confoocious has joined the channel
[08:19] aubergine has joined the channel
[08:20] Tim_Smart: creationix_: You starting another couchdb client?
[08:20] creationix_: yep, for an internal project
[08:20] creationix_: nStore is taking too long to get stable
[08:21] Tim_Smart: Oh cool. Couchdb clients are one thing node isn't short of ;)
[08:22] creationix_: yeah, I figure it's a good way to learn couch
[08:22] _announcer: Twitter: "ã¡ã¢: node.js Jakarta Commons Cookbook Scala slim3 ChromeOS" [af] -- sasa+1. http://twitter.com/sasaplus1/status/22072098256
[08:22] creationix_: and test more of node's http client
[08:22] proppy: it would be nice if bot announce mailing list post :)
[08:22] Tim_Smart: proppy: It already sends enough messages :p
[08:22] _announcer: Twitter: "adding support for meta-d in #nodejs repl http://github.com/proppy/node/commit/b7b8bec91cc31254471d625f8caa47ab8437399b" -- proppy. http://twitter.com/proppy/status/22072128602
[08:23] proppy: creationix_: thanks for the run a single test trick :)
[08:23] creationix_: proppy: you're welcome
[08:24] Tim_Smart: I would love to give riak a test sping.
[08:24] Tim_Smart: s/sping/spin/
[08:25] rnewson has joined the channel
[08:26] confoocious has joined the channel
[08:27] felixge has joined the channel
[08:27] felixge has joined the channel
[08:27] pufuwozu has joined the channel
[08:27] Tim_Smart: freeall: Did you get in touch with felixge?
[08:28] felixge: Tim_Smart: haven't heard from him
[08:28] Tim_Smart: felixge: He had a question about file upload performance.
[08:31] felixge: Tim_Smart: performance?
[08:31] Tim_Smart: felixge: Mainly CPU usage.
[08:32] felixge: Tim_Smart: oh right. Well, it's a non-issue unless you have a network that does 500 megabyte / sec upstream
[08:32] felixge: Tim_Smart: in that case you'd max out 1 core on my macbook pro ;)
[08:32] Tim_Smart: Node was using 7% CPU for a single file upload, compared to a Java app using <1% CPU over a 10mbit connection.
[08:33] Frans-Willem: Hmm, how do you profile node again? there used to be some command line to have it dump something, then another to turn that into a profile output
[08:33] Tim_Smart: Frans-Willem: node --prof app.js
[08:33] Tim_Smart: http://code.google.com/p/v8/wiki/V8Profiler
[08:34] felixge: Tim_Smart: shrug. Java might be buffering the whole upload to disk and only parse it at the end.
[08:34] tango3 has joined the channel
[08:34] felixge: Tim_Smart: anyway, I'll be around in case freeall  shows up ;)
[08:34] Tim_Smart: felixge: I think it is a combination of the current Buffer implementation, and the thread pool, which ryah pointed out as well.
[08:35] felixge: Tim_Smart: you mean the thread pool for writing files?
[08:35] Tim_Smart: felixge: That listens to the socket.
[08:35] felixge: Tim_Smart: there is no thread pool for listening to a socket afaik
[08:35] felixge: Tim_Smart: only disk stuff is done via threads
[08:35] Tim_Smart: Yeah, sorry, I'm mixed up atm.
[08:36] felixge: Tim_Smart: what's going on with buffer implementation, what does ryah not like about it?
[08:36] felixge: I would *love* faster buffers :)
[08:36] xla has joined the channel
[08:37] Tim_Smart: felixge: ObjectWrap and creating external objects turns out to be quite expensive, so the idea was to create a memory pool to avoid creating many small allocations.
[08:37] Tim_Smart: It turns out to be 30x faster for small buffers.
[08:37] Tim_Smart: Not sure if that will affect file uploads however.
[08:37] felixge: Tim_Smart: so buffers suck in the real world where you have tons of small buffers?
[08:37] felixge: Tim_Smart: it would effect pretty much all network parsing :)
[08:38] felixge: Tim_Smart: so that'd be great news for node-mysql as well
[08:38] satori_: Node uses large buffers as pools for smaller buffers internally anyway doesn't it?
[08:38] Tim_Smart: satori_: Not yet.
[08:38] felixge: Tim_Smart: But re-using buffers is tricky, ideally you would only re-use a buffer that has no more references to it
[08:38] satori_: I remember seeing node js code in dgram that uses some sort of buffer pooling
[08:39] Tim_Smart: felixge: I was working on getting a working version here http://github.com/Tim-Smart/node/compare/fast-buffer#diff-0
[08:39] Tim_Smart: Atm it breaks the http parser for some reason.
[08:39] Tim_Smart: Probably a bit over my head for now.
[08:39] joshbuddy has joined the channel
[08:41] caolanm has joined the channel
[08:41] Frans-Willem: ffs linux-tick-processor takes *aageees* to run :/
[08:42] felixge: Tim_Smart: that's a lota code ;)
[08:43] codetonowhere has joined the channel
[08:43] Tim_Smart: felixge: FYI, a profile of a file upload: https://gist.github.com/c2a2b5a22f726d01cc5c
[08:43] Tim_Smart: At the most basic level.
[08:43] felixge: Tim_Smart: how was that created?
[08:44] Tim_Smart: felixge: V8 comes with a profiler.
[08:45] felixge: Tim_Smart: anyway, that looks like my parser is not responsible for pretty almost any CPU usage :)
[08:45] creationix has joined the channel
[08:46] Tim_Smart: felixge: I gave formidable a spin, and it add some overhead, but not much.
[08:46] Tim_Smart: s/add/adds/
[08:46] felixge: Tim_Smart: overhead to what?
[08:46] Gruni has joined the channel
[08:46] Tim_Smart: I didn't profile it, but noticed CPU was a little higher.
[08:47] felixge: Tim_Smart: compared to what?
[08:47] Tim_Smart: Not doing anything with that data.
[08:47] Tim_Smart: *the
[08:47] felixge: Tim_Smart: not even writing it do disk?
[08:48] Tim_Smart: Ya, a empty callback.
[08:48] felixge: Tim_Smart: ok, well that's to be expected :)
[08:49] Tim_Smart: felixge: The Garbage Collector is responsible for a lot of the CPU usage.
[08:49] Tim_Smart: The new buffer implementation should help there.
[08:49] felixge: Tim_Smart: yeah
[08:50] fliebel has left the channel
[08:50] Tim_Smart: Anyway, back to work.
[08:50] felixge: m2
[08:51] freeall: Tim_Smart, felixge, hi. We looked into the whole "node using too much cpu doing uploads". Wrote simple servers in python, java and c. Found out that all of them used around 7% cpu. So what was it what was different with the server (java) we currently have online? Well, because it transferred the upload to another persons get request (sort of like peer-to-peer over the browser using our server). So the reason it only 0-2% cpu was that it blocked while tr
[08:51] freeall: ansferring the data to the other person.
[08:52] freeall: What we are doing now is that we a person A is uploading a file, we are saving that file to disc, and then another person are able to read it while writing it.
[08:53] freeall: If we just write it out to file it takes a lot of cpu. So what we do now is to create a buffer (around 60kb) and then saving it to disc once the buffer is full.
[08:54] freeall: This ended up being: 7% cpu for upload of a file (around 10-15mbit) and then 3% cpu for storing it on the disc.
[08:54] Arc^^ has joined the channel
[08:54] felixge: freeall: so you're saying writing everything to disk as it comes in is slow?
[08:54] Tim_Smart: freeall: So the Java app wasn't really doing the same thing
[08:54] felixge: freeall: an formidable should be buffering more data?
[08:54] felixge: * and
[08:54] Arc^^: Hi guys, would it be possible to continue callback chain execution after a global exception?
[08:55] Arc^^: anyone know if v8 is capable of this?
[08:55] felixge: freeall: s/slow/cpu inefficient/
[08:55] felixge: Arc^^: no, it is not possible
[08:55] Arc^^: felixge: why? 
[08:55] felixge: Arc^^: because JS does not support it
[08:55] freeall: Tim_Smart, no, we just thought it was doing the same thing. Didn't think our difference changed that much. It took an 8 hour debugging session to really dig down into the problem.
[08:55] freeall: felixge, we're not using formidable actually. Should we try it?
[08:56] Arc^^: felixge: well if you debug a JS engine you would expect to be able to continue after the point of failure
[08:56] Arc^^: felixge: it depends a bit if v8 has unwound its callstack already or not
[08:56] felixge: Arc^^: I remember one thing on the mailing list that did some crazy things with exceptions, I think it was a redis parser
[08:57] freeall: felixge, yes, it was very slow if we wrote the data to disc as it came in. We figured it's because node uses a small buffer. Writing 200.000 chunks of 1kb takes longer than writing 3333 chunks of 60kb.
[08:57] felixge: Arc^^: http://mihai.bazon.net/blog/redis-client-library-javascript-node
[08:57] freeall: or at least we think it takes longer
[08:57] Tim_Smart: Arc^^: If done right, you can catch the exception and deal with it accordingly.
[08:57] felixge: freeall: if you are going to do file uploads with node, yes - you should use formidable.
[08:57] Frans-Willem: Could anyone help me interpret this profiling output: http://pastebin.com/Rrdk8xQM
[08:58] Frans-Willem: I can't make any sense from it :/
[08:58] Frans-Willem: Also, my program is handling about 2000 SQL queries, yet the profiler tells me there's only 202 "ticks", doesn't seem right :/
[08:58] felixge: freeall: I wrote a little bit about it here: http://debuggable.com/posts/parsing-file-uploads-at-500-mb-s-with-node-js:4c03862e-351c-4faa-bb67-4365cbdd56cb
[08:58] Tim_Smart: Frans-Willem: Hmm.. That memove doesn't look good.
[08:59] Frans-Willem: Tim_Smart: ?
[08:59] felixge: freeall: I'm using it for a startup that is pretty much all about file uploads, so we're very interested in improving it if people see problems :)
[08:59] Tim_Smart: Frans-Willem: Line 39
[09:00] Frans-Willem: Tim_Smart: Well, it is moving a shitload of data, it's mainly fetching stuff from one connection, moving it over to another
[09:01] Tim_Smart: Frans-Willem: Right. For some reason it says 319 ticks excluded.
[09:01] Tim_Smart: Also I don't get the [Call Profile] section in my reports :/
[09:01] Frans-Willem: Tim_Smart: But I'd rather be able to make some sense from the JavaScript part, you know, the part I have control over, and the JS thing seems rather random, it outputs different things all the time :/
[09:02] _announcer: Twitter: "Finally managed to spend an hour with Node.js. Mind blowing piece of technology, server side JavaScript finally done right. Will be huge." -- Jeff Gilfelt. http://twitter.com/readyState/status/22073752857
[09:02] Tim_Smart: Frans-Willem: Well usually what you invoke from the JS, has a direct relationship to what gets called in the C++
[09:02] v8bot:  Tim_Smart has given a beer to Willem: Well usually what you invoke from the JS, has a direct relationship to what gets called in the C. 							Willem: Well usually what you invoke from the JS, has a direct relationship to what gets called in the C now has 1 beers.
[09:03] Frans-Willem: v8bot: wtf ?
[09:03] Frans-Willem: ++
[09:03] Frans-Willem: Blah: ++
[09:03] v8bot:  Frans-Willem has given a beer to Blah: . 							Blah:  now has 1 beers.
[09:03] felixge: ACTION g2g
[09:03] Frans-Willem: Blah: Test++
[09:03] v8bot:  Frans-Willem has given a beer to Blah: Test. 							Blah: Test now has 1 beers.
[09:03] Frans-Willem: Tim_Smart++
[09:04] felixge: freeall: feel free to email me (felix@debuggbale.com) or post an issue for formidable
[09:04] jacobolus has joined the channel
[09:05] aubergine has joined the channel
[09:10] Frans-Willem: Tim_Smart: Does (new Buffer).slice do a memmove? or just (new Buffer).copy ?
[09:11] _announcer: Twitter: "@readyState node.js + MongoDB is v.cool. I've been playing around w/it. Minus is that there is no mature/featureful std lib (yet)" -- Nicholas Tollervey. http://twitter.com/ntoll/status/22074135890
[09:11] pdelgallego has joined the channel
[09:17] Tim_Smart: Frans-Willem: copy does a memmove
[09:17] Tim_Smart: slice does not.
[09:17] Frans-Willem: Hmmm
[09:17] Frans-Willem: I'm hijacking Buffer.copy for now
[09:18] Frans-Willem: Only gets about 268 calls in total, could that really be the culprit?
[09:18] christophsturm has joined the channel
[09:19] MattJ has joined the channel
[09:22] Frans-Willem: In total only about 60kb is being (new Buffer).copied :/
[09:22] Frans-Willem: Tim_Smart: That shouldn't be causing that memmove spike, should it ?
[09:23] Tim_Smart: Not sure.
[09:23] Frans-Willem: nah, memmoving 60kb of data over several seconds should be keeping memmove active for 20-ish% of the time
[09:27] aubergine has joined the channel
[09:27] confoocious has joined the channel
[09:35] breccan has joined the channel
[09:38] maushu has joined the channel
[09:38] ryah: Frans-Willem: slow?
[09:38] maushu: Happy birthafterday for me.
[09:39] _announcer: Twitter: "wow found this awesome node.js project that has all kindsa niftyness http://github.com/pquerna/ndislocate" -- Levi DeHaan. http://twitter.com/levidehaan/status/22075396844
[09:40] sideshowcoder has joined the channel
[09:41] Egbert9e9 has joined the channel
[09:42] _announcer: Twitter: "PREDICTION! Microsoft will have a Node.js clone out by the middle of next year." -- John McDowall. http://twitter.com/MrMcDowall/status/22075527510
[09:44] stride has joined the channel
[09:45] maushu: Microsoft is onto us.
[09:46] ryah: maushu: happy birhtday after
[09:46] maushu: Thanks ryah!
[09:46] Tim_Smart: ryah: If you haven't read the backlog already, that file upload situation where Java seemed to use more CPU than node was a misconception.
[09:47] Tim_Smart: s/more/less/
[09:47] maushu: Tim_Smart: For a second there you scared me.
[09:47] Tim_Smart: We were all scare, maushu. Java shall not take our cake.
[09:47] Tim_Smart: scared*
[09:47] maushu: Just tell it the cake is a lie.
[09:48] Tim_Smart: Java is bloated enough as it is, it does not need the cake.
[09:48] Frans-Willem: ryah: Not slow, just some Node script (usenet indexer) using more CPU than I expected, tried to profile it, but it tells me most of the time is spent in memmove, even though I only call buffer.copy about 300 times, with 60kb in total, over the course of a few seconds :/
[09:48] mape: double toppings
[09:48] Frans-Willem: Tim_Smart: What exactly was the misconception?
[09:49] Tim_Smart: Frans-Willem: The Java version wasn't doing what he expected.
[09:49] Frans-Willem: Ah, lol :p
[09:49] Tim_Smart: But you should probably ask freeall there ;)
[09:50] Tim_Smart: He was the one spending hours debugging it.
[09:51] ryah: Tim_Smart: oh, good to know
[09:53] mAritz has joined the channel
[09:54] maushu: Tim_Smart: Let me guess, problem between keyboard and chair regarding async or something related.
[09:54] micheil: ryah: do you want me to create a branch of node's code to work on the documentation in?
[09:55] Tim_Smart: Oh why do I have to return to PHP development :(
[09:55] mape: micheil: What will be the first thing you tackle on the docs? :)
[09:55] micheil: not sure
[09:55] micheil: probably the CSS / styling
[09:55] maushu: Tim_Smart: I wish I could use PHP, I have to use asp.net for some reason.
[09:56] micheil: (eg, setting type to a baseline grid, working on colours to make it more readable, typefaces, etc.
[09:56] mape: micheil: so not so much the structure?
[09:56] maushu: That reminds me, any drivers for sql server in node.js? Or at least some website with the protocol or something so I can implement it.
[09:56] mape: http://geckoboard.com/ neat
[09:56] micheil: well, the other part of it is splitting the documentation into individual files
[09:56] mape: Love the style
[09:57] Tim_Smart: maushu: I have never done c# or asp.net, so I can't say I know your pain/
[09:57] maushu: micheil: I don't know, I like the man style.
[09:57] micheil: maushu: it's getting unwieldy to manage though
[09:58] maushu: Tim_Smart: Avoid it at all costs. If you don't believe me read about the asp.net viewstate. Horrible.
[09:58] mape: I have some ideas on how to structure the docs but need to fiddle with it to get an idea if it is good or bad
[09:58] badaxx has joined the channel
[10:00] badaxx: http://pastebin.com/RwQgFrmL shouldn't this code exec "sleep 10" in the background and immediatly log "download started"?
[10:00] mape: why would you use sleep?
[10:00] badaxx: that is just en example
[10:00] digitalspaghetti has joined the channel
[10:00] badaxx: *an
[10:01] mape: Ah k
[10:01] badaxx: usually I'm executing a python script there which is downloading a file to the server
[10:01] badaxx: which takes about a minute so the http request to the node server also takes about a minute which is wrong
[10:02] Tim_Smart: badaxx: the callback is invoked when the command finishes executing.
[10:02] badaxx: Tim_Smart: but in the command line it launches the process and leave it running in the background if you add a "&" after it
[10:05] Tim_Smart: badaxx: Why would you want this behaviour?
[10:05] micheil: mape: like?
[10:05] Blink7 has joined the channel
[10:05] badaxx: Tim_Smart: starting a download process in the background and letting the user fetch the download status every 2 seconds via ajax / jsonp
[10:06] mape: micheil: Things swiping and moving and expanding, probly easier I just make it and have people say it is shit when to explain it, nothing complete
[10:06] micheil: mape: I'm not inclined to add more animation just for the sake of it
[10:06] Frans-Willem: creationix: Did you ever consider re-writing postgres-js ?
[10:06] micheil: I'm wanting to read documentation so that I can get from problem to a solution, not to wait for eye candy to load and do it's little show
[10:07] mape: micheil: I'm not saying wrapping body in <blink> but yeah, you'll see
[10:07] mape: Looking good !== slow
[10:07] micheil: mape: something like that rich demo of colourblindness to you.
[10:07] Tim_Smart: badaxx: Take a look here http://nodejs.org/api.html#child-processes-89
[10:07] mape: colourblindness?
[10:08] Tim_Smart: badaxx: The & operator won't work as node listens directly to the process (or something).
[10:08] Gruni has joined the channel
[10:08] badaxx: okay
[10:08] badaxx: so what's the solution? *g
[10:09] badaxx: listening to stdout asynchronously while sending a response like "download started" to the client? will the download keep running then?
[10:10] micheil: mape: that one with the graphs, black and yellow it was
[10:10] Tim_Smart: badaxx: Child processes don't block in node.
[10:10] micheil: (I joke on colour blindness, it actually looked pretty awesome)
[10:10] badaxx: Tim_Smart: okay, I'll try that. thanks so far!
[10:10] _announcer: Twitter: "#nodejs module authors. please update: http://github.com/ry/node/wiki/library-compatibility" -- Ryan Dahl. http://twitter.com/ryah/status/22076826563
[10:11] mape: micheil: oh yeah, that is really bloated. Fun to poke around with though. Different solutions for different problems, as always :)
[10:11] therealkerni has joined the channel
[10:11] micheil: mape: but you know what I mean.
[10:11] mape: For sure
[10:11] isaacs has joined the channel
[10:11] micheil: moin isaacs 
[10:12] mape: The django docs look great though, and are handy. So it is a spectrum
[10:12] _announcer: Twitter: "why am I up at 3am playing with node.js? cause it's awesome.. that and I can't sleep  ^_^" -- Arianna Winters. http://twitter.com/ariannawinters/status/22076885090
[10:13] micheil: mape: I'm liking the django docs for the style overall, really well written, good typography
[10:13] micheil: but I'm thinking I'll mix it with the jQuery/rails API browser style as well
[10:13] mape: Jup
[10:13] badaxx: Tim_Smart: and how do I create piping like "> myfile 2>&1" ?
[10:13] Tim_Smart: sys.pump
[10:14] mape: Seems like a API browser / tutorial, get started, broader stuff split would be nice
[10:14] micheil: mape: sort of like: http://railsapi.com/doc/rails-v3.0.0RC/
[10:15] proppy: micheil: I remember missing a index in django docs
[10:15] badaxx: Tim_Smart: in the callback? because you said node will just execute the callback as soon as the download is finished
[10:15] proppy: micheil: but maybe I just didn't find it :)
[10:15] malkomalko has joined the channel
[10:15] Tim_Smart: badaxx: The callback is invoked when the process exits.
[10:16] micheil: proppy: django docs purely for their awesome focus on awesome documentation
[10:16] Tim_Smart: Same as var download = child_process.exec(command); download.on('exit', ...);
[10:16] badaxx: Tim_Smart: yeah, so after the whole download. but I want the download to be started and immediately send a response to the client - while the download is running on the server
[10:16] proppy: yes, but sometime you just need to grep inside an api
[10:16] proppy: yes, but for that a source tree does the job too :)
[10:17] mape: Guess node needs a docs person
[10:17] mape: That doesn't just build the tech side of it but actually improves the docs
[10:17] sveimac has joined the channel
[10:18] badaxx: Tim_Smart: oh, okay. still have to learn that async thing. Now I see *g
[10:18] Tim_Smart: badaxx: https://gist.github.com/aa93cba0e0391a827949
[10:19] Gruni has joined the channel
[10:19] micheil: mape: I've been a past documentation admin for a few projects, so I'm happy to step up to that sort of job
[10:19] mravaux has joined the channel
[10:19] micheil: but first on my agenda is to make it a better reading experience
[10:19] micheil: as you want to be able to find information super easily and quickly
[10:19] mape: You should go for it, great docs are really good for a healthy project
[10:20] micheil: anyway, bbl.
[10:20] Tim_Smart: Node contributors need to also put more annotations with their patches, but that is just me.
[10:20] proppy: micheil: recently I discovered ruby and its gem documentation (I know I'm late :), I kinda like that 'show source' link below fonction definition
[10:20] proppy: I don't know if this would apply to node though
[10:20] micheil: proppy: that is also a good feature
[10:21] micheil: proppy: it's a little bit difficult to implement atm though
[10:21] micheil: bbl.
[10:21] proppy: ++ :)
[10:22] nsm has joined the channel
[10:27] Ori_P has joined the channel
[10:36] mAritz: proppy: have you seen the connect documentation?
[10:36] mAritz: it has the source code right next to the description. but it's a horrible format
[10:36] mAritz: :D
[10:36] maushu: Dun dun.
[10:37] maushu: That reminds me.
[10:37] maushu: I should make a search engine for the irc logs.
[10:37] proppy: http://senchalabs.github.com/connect/api.html
[10:37] maushu: How many times have I had this thought?
[10:37] proppy: ?
[10:38] proppy: this look pretty new :), but I don't know yet if it is horrible since I haven't use it :)
[10:39] shimondoodkin has joined the channel
[10:40] confoocious has joined the channel
[10:41] Gruni has joined the channel
[10:44] maushu: Does connect use any c++ code?
[10:44] maushu: Or it is pure javascript.
[10:45] _announcer: Twitter: "use http://nodejs.org/ V8 based JavaScript engine for real time web #adobesummit" -- Pranay Airan. http://twitter.com/parryiiitb/status/22078474041
[10:45] Frans-Willem: maushu: Pure JS
[10:47] maushu: Frans-Willem: Thanks.
[10:48] _announcer: Twitter: "#adobesummit shinchi session completed learned new about node.js & V8 virtual machine" -- Arun Kumar. http://twitter.com/arunbluebrain/status/22078619053
[10:48] maushu: The problem I'm currently having with my startup is the addons, the sandbox for each user is too weak to sandbox c++ code.
[10:48] ryah: startup?
[10:49] c4milo has joined the channel
[10:49] codetonowhere has left the channel
[10:50] Frans-Willem: ryah: Did you get my statvfs/fstatvfs patch, btw ?
[10:51] ker2x has joined the channel
[10:51] ker2x: meep
[10:52] SamuraiJack_ has joined the channel
[10:52] ryah: Frans-Willem: yes
[10:53] saikat has joined the channel
[10:53] ryah: Frans-Willem: v busy these days
[10:53] ryah: get back to you soon though
[10:53] maushu: ryah: http://www.graphnode.com/
[10:54] Frans-Willem: k, tried to keep it as close to your style as I could, just couldn't figure out that StatWatcher thing and why that was even in there :/
[10:54] ker2x: wink_: i'm pretty sure that there is a memory leak in node-mongodb. when i don't use, the memory usage stay around 3MB, when i use it to grow to hundreds of MB
[10:55] ker2x: maushu: look interesting :)
[10:55] maushu: ryah: My goal is to use node.js for basically everything. Load balancing, http server, sandboxing... It will be completely crazy.
[10:55] temp01 has joined the channel
[10:55] _announcer: Twitter: "Very excited about the possibilities of node.js coupled with redis for future projects. http://nodejs.org/ http://code.google.com/p/redis/" -- Dave Hall. http://twitter.com/etianen/status/22079009032
[10:55] maushu: This will allow great customization for the users.
[10:56] maushu: ker2x: Thanks. :3
[10:56] maushu: Jim is doing something similar if you want to check it out.
[10:57] overra: maushu: sounds similar to an idea for a project i had
[10:57] ker2x: talking about node... anyone know (or planned) a nodejs driver for neo4j ? (*the* graphdb)
[10:57] maushu: overra: Everyone has had this idea. :p
[10:57] shimondoodkin: how iphone gui work? is there a gtk?
[10:57] codetonowhere has joined the channel
[10:57] shimondoodkin: (to bind to node)
[10:58] ker2x: brb
[10:58] maushu: shimondoodkin: Hmm, I think using a webapp would be better.
[10:58] ker2x: maushu: i subscribed for a private beta :p
[10:58] maushu: ker2x: You have to give me your soul and first born first.
[10:58] Tim_Smart: shimondoodkin: Either make a HTML5 app, or use Objective-C and the iPhone SDK.
[10:59] maushu: Kidding.
[10:59] ker2x: maushu: sorry, i'm running out of soul. i sold them all
[10:59] maushu: I vote for the html5 app, specially with the offline and home shortcut thingy.
[10:59] codetonowhere has left the channel
[10:59] overra: subscribed as well
[10:59] ker2x: but ok for the first born :)
[10:59] rnewson has joined the channel
[11:00] ker2x: well... bbl
[11:00] maushu: I feel like progra-procrastinate.
[11:01] maushu: (I will implement something completely unrelated to the project I should be doing at work.)
[11:04] matt_c_ has joined the channel
[11:04] jacobolus has joined the channel
[11:05] ker2x: i know the feeling :)
[11:06] ker2x: but i managed to combine both my work and nodejs. i write some of my sysadmin tools in nodejs now. it's not always the best solution, but it's fun :)
[11:06] _announcer: Twitter: "Learning Photoshop and Node.js http://post.ly/tf7p" -- Oscar Del Ben. http://twitter.com/oscardelben/status/22079561879
[11:07] ker2x: Mmm, i need to learn event.... my if if if if if loop is growing a bit too large
[11:08] ker2x: i should try something like if(bleh) { raise event "bleh" }
[11:10] victorstan has joined the channel
[11:11] _announcer: Twitter: "As great as #Node.js is, it's pretty sad that almost all code that older than 1 month breaks :/" -- superfeedr. http://twitter.com/superfeedr/status/22079791475
[11:14] _announcer: Twitter: "NPM repository site is a good idea http://npm.mape.me/ # nodejs" [id] -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22079955152
[11:14] aubergine has joined the channel
[11:16] _announcer: Twitter: "watching "nDistro  for nodejs" screencast http://screenr.com/sV0 #nodejs #ndistro" -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22080067644
[11:18] aubergine has joined the channel
[11:19] micheil: ryah: you about?
[11:20] jimt has joined the channel
[11:20] blaines has joined the channel
[11:20] shimondoodkin: maushu: thanks
[11:21] shimondoodkin: Tim_Smart:thanks too
[11:24] a4k7 has joined the channel
[11:24] a4k7: hiho guys
[11:24] a4k7: does buffer.copy return the number of bytes copied?
[11:25] _announcer: Twitter: "discovered two webapps http://radioplz.com/ http://backgammon.stagas.com nice! #nodejs" -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22080496267
[11:25] a4k7: or: whats the length of chunk in the data event callback?
[11:26] a4k7: is it the lengths of the chunk, or some default value?
[11:26] aubergine has joined the channel
[11:28] _announcer: Twitter: "Always a pleasure ranting about databases, infrastructure and Node.js with @lstoll over a couple of flat whites." -- Mathias Meyer. http://twitter.com/roidrage/status/22080653753
[11:28] _announcer: Twitter: "UglifyJS: A Fast New JavaScript Compressor For Node.js That's On Par With Closure http://t.co/i07eFOD" -- Britt Selvitelle. http://twitter.com/bs/status/22080679236
[11:29] daleharvey has joined the channel
[11:30] dnolen has joined the channel
[11:31] jetienne has joined the channel
[11:32] confoocious has joined the channel
[11:35] codetonowhere has joined the channel
[11:37] _announcer: Twitter: "@superfeedr When I need an event based server, I'm using Tornado these days, it's probably as efficient as Node.js." -- Sylvain Hellegouarch. http://twitter.com/lawouach/status/22081136883
[11:37] mape: Probly
[11:38] _announcer: Twitter: "Published #nodejs mysql module v0.3.0: http://bit.ly/aGdaYZ" -- Felix GeisendÃ¶rfer. http://twitter.com/felixge/status/22081176886
[11:38] a4k7 has left the channel
[11:39] aubergine has joined the channel
[11:39] _announcer: Twitter: "@lawouach That's right... I should give it a try too. But Tornado is only web, right? Node.JS can do XMPP pretty well too :)" -- superfeedr. http://twitter.com/superfeedr/status/22081278395
[11:41] mape: micheil: textmate
[11:41] p6 has joined the channel
[11:42] _announcer: Twitter: "#adobesummit : Node.js âevent driven java script engine" -- jaya sharma. http://twitter.com/jayasharmaj/status/22081426624
[11:43] maushu: I need mixin.
[11:43] _announcer: Twitter: "just coded the thin+event_machine server in node.js. I hope this time I won't have performance problems like the ones with ruby 1.8.7" -- Valentin Mihov. http://twitter.com/valentinmihov/status/22081487224
[11:45] _announcer: Twitter: "@lawouach very interesting.  the question IMO is can JS developers migrate to the server side?  node.js is making them want to do so.." -- alexis richardson. http://twitter.com/monadic/status/22081605046
[11:46] d0k has joined the channel
[11:47] micheil: mape: yeah, what themes / libraries though
[11:52] crohr has joined the channel
[11:58] hellp has joined the channel
[11:58] _announcer: Twitter: "Just favorited &#39;Nodejs - The performance that I&#39;ve always wanted&#39; on SlideShare. http://slidesha.re/aodi9E" [pt] -- Francisco Souza. http://twitter.com/franciscosouza/status/22082302848
[11:59] _announcer: Twitter: "deploying your node.js app to Heroku http://bit.ly/dsDL7U #nodejs #heroku" -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22082347564
[11:59] aubergine has joined the channel
[12:01] a4k7 has joined the channel
[12:01] MrTopf has joined the channel
[12:01] Blink7 has joined the channel
[12:02] sveimac has joined the channel
[12:04] dan_manges has joined the channel
[12:04] nerdEd has joined the channel
[12:06] johndahlstrom has joined the channel
[12:09] a4k7: how do I create a new event emitter?
[12:11] Gruni has joined the channel
[12:12] cha0s has joined the channel
[12:12] cha0s has joined the channel
[12:13] Tim_Smart: a4k7: var EventEmitter = require('events').EventEmitter; new EventEmitter()
[12:13] a4k7: thx
[12:13] a4k7: I feel confirmed^^
[12:13] _announcer: Twitter: "[Wanted] node.js be hosted by VPS, but I want to create something like We&#39;d have, I&#39;ll Ne Sabah Fri Len Heck rent. Teens looking for a Nau" [ja] -- ãã°@å¤æçå¾ä¼é·. http://twitter.com/KOBA789/status/22083221647
[12:13] Tim_Smart: It is also attached to process.EventEmitter, but I'm not sure if that will be ever made redundant
[12:15] aheckmann has joined the channel
[12:16] _announcer: Twitter: "that i fell asleep in the 1st 5 mins of the node.js @peepcode last night is not a reflection on the product, but rather, that i needed sleep" -- grantmichaels. http://twitter.com/grantmichaels/status/22083402618
[12:16] aubergine has joined the channel
[12:18] _announcer: Twitter: "Before I was just thinking now I do not care or affiliate. I like node.js" [ja] -- ãã°@å¤æçå¾ä¼é·. http://twitter.com/KOBA789/status/22083492656
[12:20] _announcer: Twitter: "Someone should port the Heroku gem to node.js as an NPM package." -- Micheil Smith. http://twitter.com/miksago/status/22083637127
[12:20] Gruni has joined the channel
[12:21] ivan has joined the channel
[12:21] stagas has joined the channel
[12:21] stagas_ has joined the channel
[12:22] danielzzz has joined the channel
[12:23] jetienne: anybody using heroku hosting? is it working well for node.js ?
[12:23] danielzzz: hi
[12:24] micheil: ACTION is not.
[12:24] danielzzz: anybody using mongoose?
[12:25] drudge: i have
[12:25] danielzzz: drudge, do you ever created models with hydrate option?
[12:25] danielzzz: I have this code
[12:26] danielzzz: http://gist.github.com/549393
[12:26] danielzzz: but nothing gets saved to the db :/ it drives me crazy
[12:27] danielzzz: when I remove hydrate option it saves just the ID
[12:28] danielzzz: I know I could define model (and this works fine) but I would like to save random objects
[12:28] drostie has joined the channel
[12:32] stagas has joined the channel
[12:35] inimino has joined the channel
[12:35] Sembiance: morning folks :)
[12:37] danielzzz: hi
[12:37] _announcer: Twitter: "working on learning me some node.js - Anyone know of any editor that has intellisense for it?  espresso doesn't have a node sugar #sadface" -- Gustavo Tandeciarz. http://twitter.com/dcinzona/status/22084688115
[12:37] danielzzz: drudge: any idea?
[12:41] zapnap has joined the channel
[12:44] matt_c has joined the channel
[12:45] ivan has joined the channel
[12:45] kriszyp has joined the channel
[12:46] mravaux has joined the channel
[12:47] drudge: danielzzz: i haven't used hydrate
[12:47] danielzzz: drugde: ok - I checked the code and figured that out. it seems you must explicitely set isNew to true
[12:47] micheil: ryah: any reason why I shouldn't be able to sys.pump() a dgram stream?
[12:48] danielzzz: nothing was saved because it tried to update and inexistent object
[12:48] danielzzz: thanks anywa
[12:49] ker2x: mmmm, a nodejs editor with intellisense could be nice, yes :)
[12:49] drudge: i started working on codesense and snippets for espresso
[12:49] pgriess has joined the channel
[12:50] ker2x: what's espresso ?
[12:51] ker2x: (other than a concentrated coffee beverage)
[12:51] micheil: it's a test framework
[12:51] ker2x: http://macrabbit.com/espresso/features/edit/  ?
[12:52] _announcer: Twitter: "@ Sn0wNight JavaApplet like you are using internally. In the future, so HTML5&#39;s API will also allow voice input. Rather than whether the C + + library for node.js k (ry" [ja] -- ãã°@å¤æçå¾ä¼é·. http://twitter.com/KOBA789/status/22085640554
[12:52] adinardi has joined the channel
[12:52] MrTopf: http://github.com/visionmedia/expresso
[12:52] _announcer: Twitter: "... fs.readdir? what about CamelCase? # # Fail nodejs" [fil] -- Sascha Depold. http://twitter.com/sdepold/status/22085684600
[12:53] ker2x: watched in my github, thx :)
[12:53] aubergine has joined the channel
[12:55] _announcer: Twitter: "Now Browsing: JavaScript framework that enables Sabasaidopuroguramingu by &quot;node.js 0.2.0&quot; release - SourceForge.JP Magazine: full open source topic - http://bit.ly/bnCEWR" [ja] -- Julius/HP. http://twitter.com/ast_j/status/22085844602
[12:55] _announcer: Twitter: "@markgandolfo Node.js is gay, i mean that as a derogatory term for homosexuals." -- Seivan Heidari. http://twitter.com/Seivanheidari/status/22085853188
[12:55] maushu: Wat.
[12:55] _announcer: Twitter: "http://github.com/bmeck/npm-github-service we need a #nodejs sponsor company to run something like this..  joyent ? heroku ? other ?" -- Jerome Etienne. http://twitter.com/jerome_etienne/status/22085872132
[12:56] maushu: Sabasaidopuroguramingu?
[12:57] danielzzz: sounds japanese, doesn't it ;)
[12:57] swaj has joined the channel
[12:58] ajpiano has joined the channel
[12:58] danielzzz: probably it's event driven programming
[12:59] Sutto has joined the channel
[13:00] Blackguard has joined the channel
[13:01] trotter has joined the channel
[13:03] aubergine has joined the channel
[13:04] micheil: hmm.. anyone know much about implementing a readable/writable stream and if there's any good standards I should adhear to?
[13:05] _announcer: Twitter: "node.js + MongoDB: What fun for qqs days! Yippee" [fr] -- Thomas Moyse. http://twitter.com/t8g/status/22086538112
[13:07] Frans-Willem: micheil: I've done it, it's a bitch :p
[13:07] micheil: code?
[13:07] jherdman has joined the channel
[13:08] Frans-Willem: Lemme check for you :)
[13:08] Frans-Willem: http://github.com/Frans-Willem/node-WebSocketFallback/blob/master/server/transports/xhrgeneral/XhrGeneralSocketResponse.js
[13:09] Frans-Willem: that one should implement quite a bit
[13:09] Frans-Willem: Hmm, actually
[13:09] Frans-Willem: I think I didn't flesh those out as much as I thought
[13:10] Frans-Willem: Think I'll have to disappoint you
[13:10] stepheneb has joined the channel
[13:10] micheil: interesting.. this is actually for node-websocket-server
[13:11] micheil: a readable/writable stream for parsing websocket packets / frames
[13:11] Sembiance: micheil: I myself love Socket.IO and Socket.IO-node
[13:11] Arc^^ has joined the channel
[13:11] micheil: Sembiance: I'm obviously going to love what I wrote myself.
[13:11] _announcer: Twitter: "@nettuts looking at your node.js tut.  ?: why use node for tweets when the api call is intervalled at 5 seconds?  benefit of node vs ajax?" -- Gustavo Tandeciarz. http://twitter.com/dcinzona/status/22086992598
[13:11] Sembiance: micheil: hehe :)
[13:11] Frans-Willem: micheil: Yeah, I started it as a replacement for Socket.IO, didn't finish it though, but the websocket part should be pretty stable
[13:12] micheil: Sembiance: that said.. stuff may be happening with Sockets.io, I've been talking with the author.
[13:12] _announcer: Twitter: "JavaScript: What is 'this'? http://bit.ly/aPJYz2 #nodejs" -- Brian Celenza. http://twitter.com/bcelenza/status/22087036498
[13:12] micheil: I'm designing node-websocket-server to be highly similar in design to http.Server
[13:12] Sembiance: micheil: oooh. Do you have a blog or twitter or something that I can follow for more info if/when something happens? :)
[13:12] micheil: @miksago
[13:12] micheil: (anywhere on the internet)
[13:13] stepheneb has joined the channel
[13:13] micheil: and also "micheil smith"
[13:13] micheil: about 99.99% of the results will also be me.
[13:13] micheil: (that was on google)
[13:13] Frans-Willem: micheil: In that case, you should really check out the websocket part of the repository I sent you earlier, that too was supposed to be as close to http.server as possible.
[13:14] micheil: Frans-Willem: the difference is that mine has been and continues to work, I'm just making the parser better, before another release on either tomorrow afternoon or saturday
[13:14] dilvie has joined the channel
[13:15] Frans-Willem: micheil: What do you mean? mine works fine too, it's just the drop-in XML replacements that still need work.
[13:15] micheil: k
[13:15] micheil: :P
[13:15] Frans-Willem: Seriously, I'm not saying you should switch or anything
[13:16] Frans-Willem: just saying that if we both had the same goal (e.g. stay close to http.Server), we should check out eachothers solutions, see how we did things differently
[13:17] micheil: Frans-Willem: no intention of switching, I didn't know yours existed though.
[13:17] micheil: because I'm also aiming to be spec compliant, which most servers aren't
[13:17] Sembiance: are we talking about some 'third' node websocket?
[13:17] Frans-Willem: Sembiance: What do you mean? a third websocket server for Node.js ?
[13:18] Deputaats: Anyone using Socket.IO? How to send msg to one user?
[13:19] Sembiance: Frans-Willem: I'm aware of micheil's node websocket server, and also Socket.IO-node. It sounds thought that you have another one? :)
[13:19] micheil: Sembiance: I'm taking websocket's to LOTR's style thing though
[13:19] micheil: one ring to rule them all
[13:20] Frans-Willem: Sembiance: Yes, http://github.com/Frans-Willem/node-WebSocketFallback/, not done yet though, was supposed to be a WebSocket & fallback methods server, with the goal of being as close to Node's API on the server side, and for the fallback methods being as close to the WebSocket API on the client.
[13:21] Sembiance: micheil: the main two reasons I use Socket.IO is: 1. It has various comet implementations for browsers that don't have flash and don't natively support WebSocket    and   2. I can serve my index.html and Socket communication both from the same port 80, allowing me to not worry about firewalls or other cross-domain/port security concerns
[13:22] micheil: Sembiance: node-websocket-server can hijack a http server
[13:22] Sembiance: micheil: sounds like you've got #2 taken care of from my list then :)
[13:22] micheil: in the new version, you have your http.Server, then you can do: var wsServer = ws.createServer({server: httpServerInstance});
[13:25] Sembiance: micheil: any plans to support built-in comet fallback emulation support for non-websocket no-flash browsers? Or do you view your project as a PURE websocket server and suggest using some other comet server (orbited, aped, etc) to support older browsers and proxy those requests to the websocket server?
[13:25] micheil: Sembiance: will not provide fallbacks.
[13:25] micheil: if you want a fallback, wrap it, it's not too hard
[13:25] micheil: listen for ws events, buffer and emit on http.
[13:26] Sembiance: micheil: so your goal is the best, pure websocket node server. Gotcha :)
[13:26] micheil: yes
[13:27] micheil: just like http.Server doesn't do routing.
[13:28] _announcer: Twitter: "Reminder #SFWebPerf Meetup tonight @ 7PM.  Hear guest @sh1mmer http://meetup.com/u/fq7 present node.js and his recent work with DNS." -- SF Web Perf. http://twitter.com/sfwebperf/status/22088161831
[13:28] Sembiance: micheil: are you using your node-websocket-server in any production websites? or do you know of any websites using it yet? just curious
[13:28] maushu: Where is the Error object?
[13:28] micheil: Sembiance: no, but I know others are
[13:28] micheil: it's been used by Firefox for demos, and a few other companies
[13:28] micheil: Sembiance: and I'm fairly active in #whatwg on the protocol and such
[13:29] micheil: hence tweet's like this: http://twitter.com/dshaw/status/22021440330
[13:29] Sembiance: micheil: cool :)
[13:30] gerad has joined the channel
[13:31] maushu: How can I customize my error messages? I'm coding a binding for a webservice and throwing a error shows the internals of the binding (even if it has a message). I want to point to the line where the binding invoke was called...
[13:31] pgriess has joined the channel
[13:34] drudge: mape: you should do a package.json in your boilerplate with the dependencies
[13:34] mape: drudge: Hmm yeah, true
[13:37] sonnym has joined the channel
[13:38] mape: drudge: There :)
[13:39] drudge: you win :)
[13:40] mu-hannibal has joined the channel
[13:41] _announcer: Twitter: "Released http://github.com/mape/node-express-boilerplate which I've used for my recent projects, easy to use and has asset manager. #nodejs" -- Mathias Pettersson. http://twitter.com/mape/status/22089176541
[13:44] davidsklar has joined the channel
[13:45] EyePulp has joined the channel
[13:46] matt_c: Oh man, Socket.IO + twitter-node makes me happy: http://gist.github.com/549532
[13:46] deltasquare4 has joined the channel
[13:46] mattikus has joined the channel
[13:47] _announcer: Twitter: "Countdown to Knockout: Post 10 - Intro to Jake - JavaScript build tool for Node.js http://post.ly/tgXg" -- node knockout. http://twitter.com/node_knockout/status/22089612976
[13:48] softdrink has joined the channel
[13:48] ben_alman has joined the channel
[13:49] micheil: ryah: hmm.. I think there's a bit of a typo in fs.createWriteStream
[13:49] micheil: forceClose has been renamed to end(), yet there's two of forceClose
[13:50] _announcer: Twitter: "A motivational #nodejs wallpaper just to get the creative juices flowing for #nodeknockout. Slightly nsfw http://bit.ly/cit68r" -- Dionysios Synodinos. http://twitter.com/synodinos/status/22089823759
[13:51] dan_manges has joined the channel
[13:51] nerdEd has joined the channel
[13:52] femtoo has joined the channel
[13:53] softdrink has joined the channel
[13:54] Egbert9e9 has joined the channel
[13:54] drudge: has anyone seen a node imap library floating around?
[13:55] ceej has joined the channel
[13:57] micheil: I had an smtp library
[13:57] micheil: (which is in disrepair atm)
[13:57] micheil: and won't work
[13:57] micheil: it was built for v0.1.25~
[13:58] gf3 has joined the channel
[13:58] _announcer: Twitter: "Nodejs -&#39;s performance that I always wanted http://bit.ly/989skR (slides and talk on video)" [pt] -- Vinicius Assef. http://twitter.com/viniciusban/status/22090402242
[13:59] micheil: mjr_: ping
[13:59] bradleymeck has joined the channel
[13:59] eazyigz has joined the channel
[14:00] eazyigz: has anybody successfully used env.js in node?
[14:00] mape: eazyigz: What are you going to use it for?
[14:01] eazyigz: I need to execute javascript that works on the dom
[14:02] charlenopires has joined the channel
[14:02] eazyigz: and I need to get the results of that js execution
[14:02] mape: Ah k
[14:02] eazyigz: there is nothing in node to accommodate this
[14:02] eazyigz: so env.js is the only hope
[14:03] eazyigz: but there are no working examples on github for env.js as to how to call their apis from node
[14:03] davidwalsh has joined the channel
[14:04] bradleymeck: env.js wasnt built for node
[14:04] bradleymeck: jsdom was
[14:05] eazyigz: ok, I'm looking at jsdom...
[14:05] dylang has joined the channel
[14:06] a4k7 has left the channel
[14:10] micheil: mape: does this look right for a read/write stream? http://gist.github.com/549555
[14:10] _announcer: Twitter: "got my new module system to work on #nodejs, @commonjs compliant as well!" -- Tim Lind. http://twitter.com/timlind/status/22091365109
[14:11] mape: micheil: Seems like it would work, but can't really be sure, I've only briefly poked at streams when using request to download images.
[14:12] micheil: ah, okay then
[14:12] micheil: ACTION needs someone like ryah or mjr_ 
[14:13] Frans-Willem: micheil: You do realise the documentation quite clearly specifies how a stream behaves, don't you ?
[14:13] micheil: Frans-Willem: not for implementing your own stream
[14:13] micheil: iirc.
[14:14] ehaas has joined the channel
[14:15] _announcer: Twitter: "hopefully going to have some time to play with node.js tonight" -- Richard Patching. http://twitter.com/disciplex/status/22091676890
[14:16] pgriess has joined the channel
[14:16] micheil: morning pgriess 
[14:17] [[zz]] has joined the channel
[14:18] aubergine has joined the channel
[14:18] pgriess: hey micheil
[14:19] micheil: sup?
[14:19] jakehow has joined the channel
[14:19] pgriess: not much. trying to cook up some ideas for knockout
[14:19] micheil: nice
[14:19] micheil: ACTION is a judge.
[14:19] Blink7 has joined the channel
[14:19] mape: Going the practical route or fun route?
[14:20] pgriess: not sure yet
[14:20] pgriess: the creative route regardless of ultimate ends
[14:20] pgriess: (ideally)
[14:20] mape: micheil: Guess that means you'll have to judge a lot of random people since you can't judge people you know? ;)
[14:20] micheil: pgriess: is this a individual team or yahoo group?
[14:20] junkee[] has joined the channel
[14:20] micheil: mape: true
[14:20] pgriess: micheil: sh1mmer, reid and i (yahoos)
[14:20] micheil: nice
[14:20] bradleymeck: OCR web service?
[14:20] pgriess: yeah, its a strong team, but we all have such different backgrounds that it's been interesting coming up w/ something that we actually want to do
[14:21] mape: pgriess: can't you just hijack a Yahoo! property and make a nice API?
[14:21] micheil: ACTION is working on releasing a new nws version in time for KO.
[14:22] pgriess: mape: most properties have good (or at least existing apis). but we're trying to avoid using yahoo-ness as a crutch as well
[14:22] mape: Hehe yeah, makes sense
[14:22] micheil: pgriess: maybe make a game or something?
[14:22] mape: There will probly be tons of games
[14:22] micheil: pgriess: you could remake that iseemike code ;P
[14:23] bradleymeck: graphical api interface for non-programmers?
[14:23] pgriess: micheil: heh. yeah we've thought of that ;)
[14:23] dylang: mape: talking about node knockout?
[14:23] micheil: yeah
[14:23] mape: Yup
[14:23] loinclot_ has joined the channel
[14:23] dan_manges has joined the channel
[14:24] bradleymeck: if you have a flash dev, voice chat?, someone had a rtp thing around here i think
[14:24] dylang: there isn't a category for fun - so i was thinking of killing my game idea (if winning becomes a goal for my team)
[14:24] bradleymeck: pfffffffffff winning
[14:24] mape: Don't really care much about winning
[14:25] mape: Only thing I would want is the iPhone and I don't think I'll be innovative
[14:25] mape: twitter/google maps mashup all the way!
[14:26] bradleymeck: im going to be lazy and hook up like everything i can together to become a monster, that monster will transform on the full moon, and then he will crash hisown server
[14:26] jblanche has joined the channel
[14:27] dylang: mape: are you going to add an rss, atom, or twitter feed to npm.mape.me?  i'm obsessively hitting refresh every few hours to see what people have submitted.
[14:27] mscdex: i need to add to that rtp module soon
[14:28] _announcer: Twitter: "the #peepcode screencast on node.js is fantastic, a great starter with fantastic tips, I can't wait for part 2!" -- Josh Kalderimis. http://twitter.com/joshkalderimis/status/22092684089
[14:28] mscdex: blargh, so many things to work on and not enough time :S
[14:28] mape: dylang: hmm, should be easy enough.. Just don't want to restart the process, the data persistance layer is kinda flakey (the version I'm using) so loosing data would be bad. But I'll look at it.
[14:31] marek_z has joined the channel
[14:32] paul__ has joined the channel
[14:33] qbit_ has joined the channel
[14:33] qbit_: hello!
[14:34] mscdex: hola!
[14:37] ker2x: Closing connection to mongoDB!
[14:37] ker2x: mongo is down
[14:37] ker2x: mongo is down
[14:37] ker2x: mongo is down
[14:37] ker2x: Segmentation fault
[14:37] ker2x: ACTION whine
[14:39] ajpiano has joined the channel
[14:39] dilvie: what's up mscdex?
[14:39] dilvie: I'm ready for another day of javascript hackery.
[14:39] mscdex: not much, doing boring stuff to pay the bills
[14:40] [[zz]] has joined the channel
[14:40] _announcer: Twitter: "@ GuGu:: Here&#39;s what it means to have nothing to do: I wrote to node.js demon, which makes the tail-f / home / gugu / somefile and gave ... http://bit.ly/bD6Ry4" [ru] -- ÐÐ½Ð´ÑÐµÐ¹ Ð¡ÐºÐ¾ÑÐµÐ½ÐºÐ¾. http://twitter.com/kostenko/status/22093637023
[14:41] voxpelli has joined the channel
[14:43] maushu: ACTION watches as ker2x's mongo explodes.
[14:43] dilvie: ker2x: what happened?
[14:47] bradleymeck has joined the channel
[14:50] jelveh has joined the channel
[14:52] Blackguard has joined the channel
[14:52] cloudhead has joined the channel
[14:53] Frans-Willem: Hmmm, is there a way to represent a time interval in JS ?
[14:53] MrTopf has joined the channel
[14:53] dnolen has joined the channel
[14:55] _announcer: Twitter: "JavaScript is awesome! Trying to create a progress bar with node.js for a file upload and eat a big chocolate pancake in the same time" -- Cristian Prodan. http://twitter.com/cristiprodan/status/22094796503
[14:58] bradleymeck: Frans-Willem, just Dates, no combination is standard
[14:59] Frans-Willem: bah
[14:59] Frans-Willem: So much for mapping all postgresql stuff nicely to JS datatypes
[15:00] steadicat has joined the channel
[15:01] bradleymeck: just use an array [date,date] or an object {start:date,end:date}, add it to your documentation
[15:01] joshbuddy has joined the channel
[15:01] ker2x: dilvie: i tried to reconnect too frequently
[15:01] ker2x: and boom
[15:01] ker2x: mongo didn't segfaulted, it's nodejs that segfaulted
[15:01] _announcer: Twitter: "Because I can participate Node.js Japan User Group. http://groups.google.co.jp/group/nodejs_jp" [ja] -- hiroftp. http://twitter.com/hiroftp/status/22095298379
[15:02] ker2x: and just found another problem
[15:02] ker2x: arghhh
[15:03] ker2x: the connection event is raised even if it's not connected to mongodb
[15:03] bradleymeck: date ranges as native types almost never exist in programming languages
[15:03] ker2x: or more exactly, even if the connexion failed
[15:03] wattz: Good morning
[15:04] bradleymeck: morning wattz
[15:04] ker2x: time to use another driver
[15:04] daleharvey has joined the channel
[15:05] bradleymeck: which driver? and can you post the code?
[15:05] bradleymeck: even if you move to a new one tickets are nice
[15:05] ker2x: http://github.com/w1nk/node-mongodb
[15:06] _announcer: Twitter: "How the hell do you get a node.js extension to actually install the bits in a public place? "node-waf install" does nothing for me." -- rjp. http://twitter.com/zimpenfish/status/22095634665
[15:07] Alex-SF has joined the channel
[15:07] _announcer: Twitter: "â» @felixge: Published #nodejs mysql module v0.3.0: http://bit.ly/aGdaYZ &lt;-- Awesome work Felix!" -- Mariano Iglesias. http://twitter.com/mgiglesias/status/22095745414
[15:08] wattz: anyone know of a good ajax js library that is framework agnostic?
[15:09] bradleymeck: you can rip out ajax libs from frameworks, but thats about it to me
[15:10] visnup has joined the channel
[15:10] wattz: thanx bradleymeck, not a bad idea
[15:11] eazyigz: has anybody worked with jsdom?  Is there a way to open an existing html document, not create a new one?
[15:11] bradleymeck: in fact, the mootools builder should have a way to just grab request
[15:12] bradleymeck: eazyigz, over network or from file? *goes to dig up the witch parser*
[15:12] eazyigz: file
[15:12] bradleymeck: sec digging up the files
[15:13] eazyigz: I only see examples for jsdom to construct new html doc...
[15:13] dan_manges_ has joined the channel
[15:14] ker2x: i found my problem :)
[15:14] _announcer: Twitter: "I swear, if I open my news reader to find even one more node.js article (let alone the dozen I found this morning), I'm going to freak." -- Dave Rusek. http://twitter.com/mgodave/status/22096261538
[15:14] ker2x: there is 2 events : "connection" (trying to connect) and "ready" (connected). the "ready" event wasn't in the documentation
[15:15] danielzilla has joined the channel
[15:16] bradleymeck: eazyigz, you have to write your own but im going to just strip out Witch's one for you give me a sec
[15:17] aubergine has joined the channel
[15:18] ker2x: Mmm
[15:20] aubergine has joined the channel
[15:20] ker2x: nope :(
[15:20] ker2x: bleh
[15:21] maushu: Anyone knows on how can I get the name of the variable that holds the called function?
[15:21] maushu: My kingdom for reflection!
[15:23] TheEnd2012 has joined the channel
[15:25] Frans-Willem: w000t, got a working PostgreSQL re-implementation :)
[15:25] Sembiance: Anyone knoe of any attempts at adding true continuation support to JavaScript/node.js itself?
[15:25] Frans-Willem: with proper parameter binding :D
[15:26] Sembiance: Currently the best way I've seen to handle 'callback hell' is creationix's "step" project.
[15:26] Frans-Willem: Sembiance: Read this blog post: http://mihai.bazon.net/blog/redis-client-library-javascript-node
[15:26] Frans-Willem: Best hack around continuations I've seen thus fasr
[15:26] Frans-Willem: r
[15:26] wattz: any html/css/js guess looking for work?
[15:27] matt_c: ACTION has that one open in a tab somewhere...
[15:27] Frans-Willem: wattz: What kind of work ?
[15:27] wattz: Front End dev
[15:27] aurynn: I'm a backend programmer and not really looking.
[15:27] aurynn: frontend makes me cry,.
[15:27] wattz: i bet you do like the backend!
[15:27] wattz: hahaha.
[15:27] wattz: >_>
[15:27] wattz: jk
[15:27] Frans-Willem: wattz: In that case :p
[15:27] wattz: for Lowes.com
[15:27] aurynn: ellipsis
[15:27] Frans-Willem: wattz: not really, I hate frontend
[15:27] wattz: no worries
[15:28] Sembiance: Frans-Willem: I had seen that. I was also intrigued by that.
[15:31] daleharvey has joined the channel
[15:33] vnguyen has joined the channel
[15:33] Sembiance: node.js http://wargamez.mape.me test
[15:34] bradleymeck: http://gist.github.com/gists/549720/ 
[15:34] mape: Sembiance: boing
[15:34] Sembiance: mape: bong
[15:34] Sembiance: oh neat
[15:34] dylang: when using connect and i do res.send('hello 1'); res.end(); res.send('hello 2'); res.end();  is it possible to not throw the 500 error page?
[15:35] mape: dylang: why close it if you are sending more?
[15:35] Alex-SF has joined the channel
[15:36] dylang: mape: i'm not doing it on purpose.  if an error happens in a partial that is run multiple times then connect tries to throw a 500 page up multipile times. after the first one is attempted the stream is killed and the user gets a generic 500 error.
[15:36] mape: oh k
[15:37] [[zz]] has joined the channel
[15:37] Apage43 has joined the channel
[15:38] softdrink: yaaaayyyy macvim update
[15:39] bronson has joined the channel
[15:39] jakehow has joined the channel
[15:40] Lerchmo has joined the channel
[15:41] jdub: anyone here done ssl websockets with socket.io?
[15:42] jdub: i keep getting
[15:42] jdub: Error during WebSocket handshake: location mismatch: wss://localhost:8000/socket.io/websocket != ws://localhost:8000/socket.io/websocket
[15:42] micheil: jdub: yeah, that'd be right
[15:42] bradleymeck: ws doesnt do ssl
[15:42] micheil: bradleymeck: it does
[15:42] bradleymeck: really?
[15:42] jdub: wss == https of websockets
[15:43] micheil: jdub: I was experimenting with it last night, and I couldn't get any browsers to connect, despite it seeming to work
[15:43] jdub: the problem here is difference of opinion between client and server :-)
[15:43] bradleymeck: ive never had it work when i looked into it *goes to look again*
[15:43] micheil: jdub: I think sockets.io hardcodes that
[15:43] jdub: micheil: with socket.io in particular?
[15:43] jdub: ah
[15:43] micheil: jdub: node-websocket-server doesn't hard code it, but for some reason the connections just die
[15:43] micheil: invalid certificate errors or something like that
[15:43] jdub: right
[15:44] jdub: perhaps accepted certs don't transfer over to wss yet?
[15:44] jdub: if my trouble is s.io hardcoding though, it's fixage time!
[15:44] micheil: anyway, I decided that my time was better spent on other parts of ws, such as origin and a better streamable frame parser
[15:44] bradleymeck: are you hijacking the upgrade to ssl ?
[15:45] sudoer has joined the channel
[15:45] jdub: ha ha:
[15:45] jdub: jdub@sliver:~/src/node/socket.io$ grep -rl 'ws:' . | wc -l
[15:45] jdub: 18
[15:45] jdub: jdub@sliver:~/src/node/socket.io$ grep -rl 'wss:' . | wc -l
[15:45] jdub: 0
[15:46] jdub: looks like the problem is only in one file though
[15:46] vnaren has left the channel
[15:50] _announcer: Twitter: "Am considering diving into #node.js, but not sure how useful it is for the smaller clients who use don't use dedicated servers." -- Teresa. http://twitter.com/maria_teresa_m/status/22098974119
[15:50] _announcer: Twitter: "You think only #redis and #mongodb do #node.js? #CouchDB and #Node.js: Couch Client Â« myNoSQL http://j.mp/azqSjO" -- Alex Popescu. http://twitter.com/al3xandru/status/22098977699
[15:51] siculars has joined the channel
[15:52] micheil: jdub: do a check: protocol = socket.secure ? "wss://" : "ws://"
[15:52] micheil: that way you don't hard code it.
[15:52] micheil: probably push that back to the project too as a patch
[15:54] ker2x: i'm testing node-mongodb-native
[15:54] SamuraiJack_ has joined the channel
[15:54] ker2x: look like the documentation is the code :(
[15:55] jdub: yays, easily fixaged
[15:55] jdub: micheil: yep, that's what i did
[15:55] micheil: good stuff
[15:55] micheil: jdub: works now?
[15:56] jdub: yep
[15:56] micheil: sweet
[15:56] micheil: code example please.'
[15:56] micheil: I'
[15:56] jdub: on ff4 and chromium
[15:56] micheil: I'm really wanting to have ssl support in node-websocket-server
[15:57] ker2x: there is no events at all in node-mongodb-native ?
[15:57] jdub: sio figures out if the server it's attached to is setSecure
[15:57] jdub: and does just about everything with you except sending the right headers
[15:57] dmcquay has joined the channel
[15:58] micheil: I seem to never get the upgrade event over ssl
[15:59] softdrink has joined the channel
[16:00] _announcer: Twitter: "&gt; &lt; @creationix's Node.js couch-client couldn't have come at a better time. XOXOXO /cc @dreadnode @rhussmann @getify @teleject" -- Daniel Shaw. http://twitter.com/dshaw/status/22099723573
[16:00] claudiu__ has joined the channel
[16:00] aubergine_ has joined the channel
[16:01] _announcer: Twitter: "Find other people interested about #nodejs faster by using http://www.startupweekly.com/hashtag/show/nodejs.html" -- Startup Weekly. http://twitter.com/startupweeklies/status/22099859802
[16:02] Blink7 has joined the channel
[16:03] JimRoepcke has joined the channel
[16:05] deadlyicon has joined the channel
[16:05] mjr_: micheil: delayed ping response
[16:05] micheil: mjr_: hey
[16:05] trotter has left the channel
[16:05] micheil: was curious about implementing streams and best practices when doing so.
[16:06] micheil: I thought you might be the person to ask?
[16:06] mjr_: I am a person you could ask.
[16:06] bradleymeck: micheil i think the upgrade event for all ssl tasks are killed by node-websocket-server, may be mistaken
[16:06] mjr_: mikeal is emerging as the stream expert at the moment.
[16:06] mjr_: Other than ryah, of course.
[16:07] micheil: mjr_: k, got the names mixed up
[16:07] micheil: bradleymeck: explain?
[16:07] bradleymeck: wrap a http.server in a node-websocket-server, i seem to recall i couldnt https a webpage
[16:08] brianleroux has joined the channel
[16:10] bradleymeck: http://github.com/miksago/node-websocket-server/blob/master/lib/ws.js#L58-69
[16:11] micheil: hmm..
[16:11] Frans-Willem: w000t, prepared statements working too :D
[16:11] micheil: so, https is actually a http upgrade?
[16:11] micheil: *slow*
[16:12] bradleymeck: shouldnt be but could it be firing that upgrade event?
[16:12] gorakhargosh has joined the channel
[16:12] bradleymeck: https is http routed over tls
[16:13] maushu: And port 443.
[16:13] _announcer: Twitter: "How about services like Jail node.js to be run on the following" [ja] -- ãã°@ç²¾ç¥ã®å®å®ãè¿·å­. http://twitter.com/KOBA789/status/22100744687
[16:13] maushu: Don't forget the port.
[16:13] bradleymeck: doesnt have to be port 443
[16:14] maushu: MUST BE PORT 443.
[16:14] bradleymeck: 443 is DEFAULT
[16:14] bradleymeck: http://tools.ietf.org/html/rfc2818 2.3
[16:15] maushu: bradleymeck: It must be 443. This conversation is over.
[16:15] bradleymeck: k
[16:15] maushu: You dare defy me?!
[16:15] bradleymeck: no
[16:15] maushu: Oh, okay.
[16:16] maushu: ACTION looks at his sword for a moment and then stores it.
[16:16] maushu: Maybe another time.
[16:16] aurynn: lol
[16:20] bradleymeck: ruh roh, micheil, http://tools.ietf.org/html/rfc2817 , can use http upgrade to engage tls
[16:20] micheil: heh
[16:20] micheil: testing'
[16:20] gerad has joined the channel
[16:20] jdub: micheil: http://github.com/jdub/Socket.IO-node/commit/eadd5c95115695de3ebb0586c41a330a8f391019
[16:22] visnup has joined the channel
[16:23] mu-hannibal has joined the channel
[16:23] micheil: jdub: yeah
[16:24] benburkert has joined the channel
[16:28] micheil: jdub: I just can't get secure websockets working.
[16:29] amerine has joined the channel
[16:32] creationix has joined the channel
[16:32] paulwe has joined the channel
[16:33] micheil: epic fail.
[16:33] micheil: The browser doesn't connect, but openssl s_client does.
[16:33] micheil: long of the short: websockets + ssl + untrust cert = no connection
[16:34] micheil: does someone have a valid cert I could use just for local testing?
[16:34] matt_c: micheil: can you self-sign and set trust in the browser manually?
[16:34] micheil: matt_c: not that I know
[16:35] nerdEd has joined the channel
[16:35] matt_c: micheil: Odd.  I've got some self-signed certs that I've added as trusted certs and the browser stops complaining about it.
[16:35] sh1mmer has joined the channel
[16:35] matt_c: I haven't tried ws though
[16:37] micheil: matt_c: how do I get a self-signed cert?
[16:38] maushu: micheil: http://library.linode.com/ssl-guides/self-signed-ssl-cert
[16:42] brianleroux has joined the channel
[16:42] micheil: wooo!
[16:42] micheil: it works!
[16:43] _announcer: Twitter: "Using @kurokikaze 's #limestone module for #SphinxSearch and #nodejs for http://Mefeedia.com's new search API. It's looking pretty sweet..." -- Adam Crabtree. http://twitter.com/CrabDude/status/22102854050
[16:44] Egbert9e9 has joined the channel
[16:48] eisd has joined the channel
[16:48] eazyigz has joined the channel
[16:48] sudoer has joined the channel
[16:50] bpot has joined the channel
[16:52] cardona507 has joined the channel
[16:52] femtoo has joined the channel
[16:53] dipser has joined the channel
[16:53] _announcer: Twitter: "POST node.js from library to use cURL to rap http://gist.github.com/549844" [ja] -- ãã°@ç²¾ç¥ã®å®å®ãè¿·å­. http://twitter.com/KOBA789/status/22103571958
[16:54] Alex-SF has joined the channel
[16:55] _announcer: Twitter: "â» @ marcos_sousa: Interesting to talk to the @ # nodejs emerleite mandatory for those wishing to climb a web app. http://bit.ly/9AZHme" [pt] -- diogobaeder. http://twitter.com/diogobaeder/status/22103686939
[16:55] Sembiance: test
[16:55] _announcer: Twitter: "node.js from POST properly and I hope I can beat that becomes. But I guess write a patch so that you can capture standard, I guess to do." [ja] -- ãã°@ç²¾ç¥ã®å®å®ãè¿·å­. http://twitter.com/KOBA789/status/22103707720
[16:55] _announcer: Twitter: "node.js + Socket.IO + twitter-node = fun! http://gist.github.com/549532" -- Matt. http://twitter.com/mc/status/22103722294
[16:56] noahcampbell has joined the channel
[16:57] _announcer: Twitter: "[JavaScript][HTTP] / node.js http://htn.to/Rnb5vR" -- ãã£ã². http://twitter.com/tyage/status/22103830502
[16:58] jelveh has joined the channel
[16:58] mostlygeek has joined the channel
[16:58] huyhong has joined the channel
[16:59] joshbuddy has joined the channel
[17:03] samsonjs has joined the channel
[17:03] skohorn has joined the channel
[17:04] Deputaats has joined the channel
[17:04] samsonjs has joined the channel
[17:04] Deputaats: What would be the best way to disallow bad data ( e.g. <script>) in JS?
[17:04] Deputaats: I want to make sure that outgoing data is safe.
[17:04] MikhX has joined the channel
[17:05] ker2x_: back
[17:05] Frans-Willem: Deputaats: Regular expression ?
[17:05] mjr_ has joined the channel
[17:05] samsonjs has joined the channel
[17:05] creationix: Deputaats: what do you mean
[17:05] samsonjs has joined the channel
[17:05] matt_c has joined the channel
[17:05] creationix: are you accepting html from users and then serving it to other users?
[17:06] danielzzz has joined the channel
[17:07] deepthawtz has joined the channel
[17:07] danielzzz: hi, anybody working with mongoose?
[17:07] Deputaats: creationix: Yes
[17:08] creationix: Deputaats: just don't allow the string '<script' (case insensitive of course)
[17:08] Deputaats: I'm accepting any data but if they send some xss.. 
[17:08] creationix: though you also need to check for js in html attributes
[17:08] creationix: there are lots of ways to sneak it in
[17:08] Deputaats: Yes, a lots..
[17:09] paulwe has joined the channel
[17:09] Deputaats: I was thinking of htmlentities() like PHP 
[17:09] samsonjs: has anyone else encountered a bug with JSON.stringify? it only happens after my server has somehow gotten into a bad state.
[17:09] Deputaats: What do you think - that will be enugh?
[17:09] creationix: Deputaats: well htmlentities will escape all your html
[17:09] ryah: we're falling behind v8
[17:09] samsonjs: the problem is that i'm still trying to figure out how to programmatically trigger this bad state, till now it only happens after using the app for some time
[17:09] ryah: it's already at 2.311
[17:09] creationix: ryah: what do you mean?
[17:09] creationix: oh
[17:09] ryah: 2.3.11
[17:10] Deputaats: yes, if there's html - I want it to be plan text, not to execute anything.
[17:10] ker2x_: i have a little problem with node-mongodb-native, can someone help please ?  when i do mongo.open(...) while the database is down, i have an exception and the program shutdown. how can i handle this exception please ?
[17:10] ryah: we need to get some ABI consistancy tests in so we can upgrade
[17:10] ryah: i guess i'm cherry-picking for v0.2 branch
[17:10] ryah: so we can pull in updates anyway
[17:10] samsonjs: once it's in this state the problem manifests by JSON.stringify turning null values into the bytes \002\000\000\000 instead of the chars 'null'.
[17:10] ryah: but it would be good to have ABI tests...
[17:10] creationix: ryah: so are you going for abi stability in 0.2.x then?
[17:10] ryah: ACTION looks at beelzabub 
[17:10] creationix: that sounds really hard
[17:10] micheil: ryah: did you want a branch for that doc project?
[17:10] Deputaats: ker2x: process.addListener('uncaughtException', function(err){ /RERUN YOU RERVER HERE/ }
[17:11] Deputaats: That's how I do it with Redis. Just rerun on exception.
[17:11] ryah: micheil: sorry ?
[17:11] creationix: Deputaats: well, htmlentities is pretty easy
[17:11] micheil: for the work I'm going to try doing on the project documentation
[17:11] ryah: micheil: split up docs?
[17:11] micheil: did you want that as a branch?>
[17:11] micheil: yeah
[17:11] b_erb has joined the channel
[17:11] creationix: html.replace(/</g, '&lt;').replace(...)
[17:11] ker2x_: Deputaats: thank you
[17:11] ryah: micheil: yeah - let's review it next week
[17:12] mjr_: Are we doing a separate doc project?
[17:12] ryah: can't do much now with nko to prepare for
[17:12] micheil: mjr_: not quite
[17:12] micheil: ryah: fair point
[17:12] micheil: I'm just a judge, so I'm free :P
[17:12] Deputaats: np
[17:12] ph^ has joined the channel
[17:13] creationix: Deputaats: if you want to get really fancy, use node-htmlparser and jsdom to parse the input and then process it
[17:13] micheil: ryah: also..one thing that would be awesome to find out more about is writing a readable/writable stream for node
[17:13] Deputaats: creationix, I'm not sure that will protest from all xss and csrf thigs?
[17:13] creationix: Deputaats: and then use textContent to remove all tags
[17:14] micheil: eg, something that get's sys.pump from a network socket and sys.pump's to something else, like a websocket server
[17:14] ryah: micheil: hm
[17:14] pquerna: making 'safe' html?
[17:14] Deputaats: I just need to be protected from all bad code executing. Dos not matter if that's html or js..
[17:15] ryah: http://github.com/ry/node/wiki/library-compatibility
[17:15] mscdex: you should always practice safe markup
[17:15] dilvie has joined the channel
[17:16] creationix: Deputaats: is you app ajax powered?
[17:16] Lerchmo has joined the channel
[17:16] creationix: or is this all server-generated html
[17:16] Deputaats: ajax, websockets..
[17:16] creationix: Deputaats: oh, then just set the text content of some div to their input
[17:17] creationix: the dom will insert it as plain text, and not html
[17:17] Deputaats: can't do that. Good "hacker" will just simulate ajax request with his data.
[17:18] inimino: .oO(?)
[17:18] creationix: the standards way is https://developer.mozilla.org/En/DOM/Node.textContent, and most libraries have something like that for cross-browser use
[17:18] micheil: Deputaats: no.
[17:18] micheil: element.textContent does not do html
[17:18] creationix: Deputaats: I don't understand, if you control ALL the ajax and only treat data as text, it CAN'T be treated as html
[17:18] micheil: creationix: btw, was that time I gave ok for you?
[17:19] creationix: micheil: I think so, I need to check with the other guy who will be on the call
[17:19] micheil: k
[17:20] gbot2 has joined the channel
[17:20] Deputaats: But that's client side code anyway. I can't rely on textContent!
[17:20] creationix: Deputaats: who are you trying to protect?
[17:21] Blink7 has joined the channel
[17:21] creationix: xss is when person A inserts js into person's B browser
[17:21] micheil: hmm... I wonder if there's a sencha channel on here..
[17:21] ker2x_: can i find the developper of node-mongodb-native somewhere here, please ?
[17:21] micheil: ker2x_: yeah, on github
[17:21] Deputaats: person A inserts js into person's B browser <- this is exactly what my app does.
[17:21] micheil: well, that's where you can find them, but they may not be on here
[17:21] creationix: micheil: there is #extjs
[17:22] micheil: does that cover sencha touch?
[17:22] creationix: Deputaats: no, not if you use textContent
[17:22] ker2x_: micheil: a private message on github ? :)
[17:22] micheil: yup
[17:22] ker2x_: ok thx :)
[17:22] creationix: Deputaats: if you use textContent then person A inserts text into person B's browser
[17:22] creationix: and text is always safe
[17:22] micheil: ACTION should've used that for the websockets example :D
[17:22] SamuraiJack_ has joined the channel
[17:22] Deputaats: You're saying I can use textContent on server to send out only textContent from received data?
[17:23] micheil: Deputaats: no, in your client side code
[17:23] micheil: rather then doing like, element.innerHTML = "..."
[17:23] Deputaats: Who the hell relies on client side validation??
[17:23] creationix: Deputaats: no, textContent is a dom function you call in the browser when you get your html from the server
[17:23] micheil: you do element.textContent = "...";
[17:23] creationix: Deputaats: it's not validation
[17:23] Deputaats: I understand but that's not safe.
[17:23] creationix: like I said, who are you trying to protect
[17:23] creationix: the user from breaking their own browser?
[17:23] creationix: that's inpossible
[17:23] Deputaats: other users from bad code.
[17:24] micheil: well, textContent is what you want
[17:24] streampunk has joined the channel
[17:24] micheil: it inserts the data as a textnode, which can't have html in it.
[17:24] micheil: everything gets escaped in them
[17:24] creationix: person A(bad) can't insert html into person B's(good) browser unless person B hacks their local environment
[17:24] Deputaats: I can simulate AJAX request with my own data. Then textContent ill not help.
[17:24] ollie has joined the channel
[17:25] micheil: Deputaats: example code please.
[17:25] micheil: it'll help explain your point.
[17:25] creationix: Deputaats: well, if you don't believe me, then that's fine.  If you insist on using innerHTML instead of textContent, then, yes you need server-side excaping using something like htmlentities from php
[17:25] Deputaats: oh, you are saying to use textContent on user who's receiveing data?
[17:25] creationix: but textContent is perfectly safe for your case, I promise
[17:25] Deputaats: not sending.
[17:25] creationix: Deputaats: yep
[17:25] paulwe has joined the channel
[17:25] micheil: creationix: hmm.. cross-browser compat on textContent, I'm not sure
[17:26] Deputaats: omg, I feel stupid.
[17:26] kodisha has joined the channel
[17:26] creationix: Deputaats: don't, xss is a complicated thing, but your use case can be solved quite nicely
[17:27] creationix: :)
[17:27] Deputaats: I was thinking about sender, not receiver :)
[17:27] creationix: that makes sense now
[17:27] creationix: yeah, you can't validate on the sender side
[17:29] saikat has joined the channel
[17:29] b_erb has left the channel
[17:29] creationix: micheil: yeah, it doesn't work on all browsers, but libraries smooth over that fact
[17:29] bradleymeck: textContent+innerText = supported
[17:29] micheil: probably something like jQuery's $.text()
[17:29] micheil: (not sure on yui / dojo / mootools equivs)
[17:30] bradleymeck: if you really wanna go for odd browsers (linx), add range support and a dom crawler, ewwww
[17:31] bradleymeck: 1024 group views on mailing list since i last visited, i feel lucky
[17:33] micheil: creationix: did nStore do stuff like couchdb's _changes?
[17:33] micheil: actually, no, it wouldn't.
[17:34] micheil: or, not any network stuff atleast
[17:37] bradleymeck: ooo nextTick was sped up?
[17:38] mertimor has joined the channel
[17:40] micheil: that's another project with awesome docs. Couchdb
[17:41] voodootikigod_ has joined the channel
[17:41] wilmoore has joined the channel
[17:41] wilmoore has left the channel
[17:41] wilmoore has joined the channel
[17:42] Gruni has joined the channel
[17:43] _announcer: Twitter: "Node.JS goes mainstream, makes a movie appearance: http://s3.amazonaws.com/four.livejournal/20100819/doDtD.jpg" -- Rafael Corrales. http://twitter.com/RafaelCorrales/status/22106869890
[17:44] creationix: micheil: not yet
[17:44] micheil: k
[17:45] nerdEd has joined the channel
[17:45] Deputaats: How to know how fast one full request is executed in my node server? 
[17:46] mjr_: Deputaats: put some logging at request start and response end, I guess
[17:48] jsilver has joined the channel
[17:48] Sembiance: Deputaats: my guess is... really fast
[17:48] pgriess has joined the channel
[17:49] programble has joined the channel
[17:49] bradleymeck: uggg breadth first search (with multiple iterations) on arrays...
[17:49] dgathright has joined the channel
[17:49] _announcer: Twitter: "@heroku now that stable node.js v0.2 is commited and out, how long till we have an available node heroku option? I still haven't gotten in." -- Stephen Middleton. http://twitter.com/Rixius/status/22107248450
[17:50] _announcer: Twitter: "Nooooo, #nodejs is faster than #eventmachine at serving static files, damnit. Must.... make.... it..... FASTER" -- Asim. http://twitter.com/chuhnk/status/22107299143
[17:50] drudge: ha
[17:51] jakehow has joined the channel
[17:51] wattz: anyone got a heroku hook up and get me on the node.js beta list? :D
[17:52] drudge: i tried that one already wattz ;)
[17:52] WALoeIII has joined the channel
[17:52] wattz: TRY HARDER
[17:52] wattz: lol
[17:53] bradleymeck: [[{priority:Number(),affects:[...]},..],..] , any ideas on how to iterate the affects of a given priority on that  damn thing without blowing memory usage to hell?
[17:53] jimmybaker has joined the channel
[17:53] bradleymeck: guess should rename that effects too
[17:53] nerdEd_ has joined the channel
[17:56] xer0xM has joined the channel
[17:56] aubergine has joined the channel
[17:57] _announcer: Twitter: "@namlook Over the next few months - I'd suspect 1.8 mongod-ish.  Not sure at the moment if we're going with Python; we may be doing node.js" -- Brendan W. McAdams. http://twitter.com/rit/status/22107693512
[17:58] bradleymeck: ooo [].forEach will skip unset indices and go on to next numeric index used
[17:58] mjr_: I'm totally forEaching my ass off these days.
[17:58] mjr_: I dunno how I ever lived without it.
[17:59] bradleymeck: i still get upset i cant break it early
[17:59] jbr_ has joined the channel
[17:59] _announcer: Twitter: "#viennajs @beanieboi talking about Node.js in production http://img.ly/1XMF" -- Markus Prinz. http://twitter.com/cypher/status/22107841737
[17:59] mjr_: Yeah, although someone was just recently schooling me on that and how to use some() in certain cases.
[17:59] mjr_: For the same effect.
[17:59] SubStack: ACTION misses takeWhile, dropWhile, and such
[18:00] Frans-Willem has joined the channel
[18:04] AAA_awright has joined the channel
[18:06] mjr_: bradleymeck: check out this awesome nested some() for extra early exit.
[18:06] mjr_: http://github.com/mranney/node_pcap/blob/master/examples/http_trace#L236-243
[18:06] _announcer: Twitter: "Just met @esad at @viennajs. Now listening to #nodejs in production talk." -- Martin S. http://twitter.com/MSch/status/22108266155
[18:06] bradleymeck: mjr_ is that faster than a for loop? forEach sometimes is
[18:06] mjr_: mattstevens just sent that to me.  Super cool.
[18:06] bradleymeck: very nice none the less
[18:07] mjr_: I dunno if it is faster.  It's way easier to read than the for loop version though.
[18:07] aubergine has joined the channel
[18:08] BrianTheCoder has joined the channel
[18:09] _announcer: Twitter: "two simple examples for shipping expressjs apps on heroku, http://bit.ly/9is5cH and http://bit.ly/aOVGN4 #nodejs" -- Corey Donohoe. http://twitter.com/atmos/status/22108452688
[18:09] dylang: creationix: i seemingly randomly get this while testing (restart, refresh, repeat) "Error: EMFILE, Too many open files " - from staticProvider.  In dev I have about 20 files loading (css, images, js).
[18:10] creationix: dylang: do you have the cache middleware enabled?
[18:10] creationix: it defaults to a cache length of 0, but really helps with concurrent requests to the same file
[18:11] dylang: creationix: no.  should i always have it on?
[18:11] creationix: uses a LOT less file handles
[18:11] grahamalot has joined the channel
[18:11] creationix: the tricky thing in node is all I/O is parallel by default and so if you hammer the server, you can open a lot of file handles real fast
[18:12] creationix: the cache middleware by default takes concurrent requests for the same resource and only opens the file once and returns the result to all the concurrent requests
[18:12] creationix: if you data is truly static, then you can put a larger timeout on the cache middleware and it will even cache the response in ram
[18:13] dylang: cool.  so during dev when templates are constantly changing is there anything i should set?
[18:13] drudge: no caching :P
[18:14] wattz: i wonder how i could use node to stream
[18:14] dylang: does order mater - like should cache be before or after gzip?
[18:15] wattz: receive and send stream
[18:15] bradleymeck: wattz what do you want to stream
[18:15] wattz: like conference calling sorta
[18:15] wattz: you have an app you talk to, it streams to a server then broadcasts to people connected to the same session
[18:16] wattz: like conference calling
[18:17] bradleymeck: who was it that had the flash rtmp stuff?
[18:18] mattikus has joined the channel
[18:19] mjr_: wattz: if you look at websocket-server, it's pretty much set up to do just that.
[18:19] maushu has joined the channel
[18:19] wattz: mjr_: hah, actually there
[18:19] huyhong has left the channel
[18:19] wattz: was looking at twilio
[18:19] ay: Ok: Here is a dumb question from a long time perlprogrammer: Using Apricot and trying to use Apricot.open("http://nonexistantdomain.com/") And i get a "Events:12 throw agruments[1]: Error: ENOTFOUND Domain not found bla-bla.. Putting it in a generic try-cache does not change anything. Could someone enlighten me?
[18:20] ay: IOWatcher.callback...
[18:20] JimBastard has joined the channel
[18:21] jsilver has joined the channel
[18:21] JimBastard: i love how creationix is on the nyc.js mailing list
[18:21] mjr_: wattz: are you trying to do fanout of signaling data or of media?
[18:21] micheil: wattz: it'll do chat style stuff, but not audio (yet)
[18:22] wattz: well i have an iphone/ipad app idea
[18:22] drudge: wattz: faye?
[18:22] wattz: faye?
[18:22] wattz: this is for podcasters
[18:22] micheil: faye's like socket.io
[18:22] micheil: uses websockets but with fallbacks
[18:23] mjr_: I'm doing media fanout in node for my closed source day job.  Node handles it very well, but beware the slow mobile clients.
[18:23] wattz: mjr_: can i send you a quick message?
[18:23] mjr_: sure
[18:23] drudge: wattz: http://faye.jcoglan.com/
[18:23] sh1mmer has joined the channel
[18:23] _announcer: Twitter: "Huh, can't seem to git clone NodeJS anymore, missing package. wget/tar works at least." -- HB Stone. http://twitter.com/hbstone/status/22109324049
[18:25] _announcer: Twitter: "Updated #NodeJS, installed #ExpressJS and #MongoDB last night.  Excited to dive in." -- davidwalshblog. http://twitter.com/davidwalshblog/status/22109447332
[18:26] brianmario has joined the channel
[18:27] voxpelli has joined the channel
[18:28] _announcer: Twitter: "glad to see @meso and @koba789 tackle the ja_JP translation of the #nodejs site: http://bit.ly/9lDlZM" -- Jed Schmidt. http://twitter.com/jedschmidt/status/22109588687
[18:28] Lerchmo has joined the channel
[18:29] _announcer: Twitter: "@atmos should http-pulse.atmos.org work? .. The first time I've ever seen my connect auth in the wild, peeked my interest ;)  #nodejs" -- Ciaran Jessup. http://twitter.com/ciaran_j/status/22109664594
[18:29] creationix: JimBastard: I'm on the list so you can't hide from me
[18:30] _announcer: Twitter: "Was happy about something like translation node.js" [ja] -- ãã°@ç²¾ç¥ã®å®å®ãè¿·å­. http://twitter.com/KOBA789/status/22109717552
[18:31] stagas: strange a broken node.js translation saying about node.js translation
[18:31] creationix: ay: did you figure out your problem?
[18:31] creationix: basically try..catch only works for blocking/sync code
[18:31] creationix: everything else has to be callback based
[18:32] javajunky has joined the channel
[18:32] cloudhead has joined the channel
[18:33] maushu: Libraries should be removed from the Prject listing.
[18:33] _announcer: Twitter: "JavaScript junkie? Come to the Rochester.js meeting next Wed. I'll be presenting boomerang w/ #nodejs back end. http://ow.ly/2uK0D #roc #js" -- Dan DeFelippi. http://twitter.com/ExpertDan/status/22109896301
[18:33] ay: creationix: No I didn't. Ok. Thanks. I'll look more into it.
[18:33] micheil: maushu: nawh, we shouldn't have a module listing, that should be npm.
[18:33] _announcer: Twitter: "Thanks to @changelogshow for featuring my #nodejs mysql driver! http://bit.ly/bD1n80" -- Felix GeisendÃ¶rfer. http://twitter.com/felixge/status/22109921968
[18:33] maushu: micheil, I LIKE IT RAW.
[18:33] micheil:  / http://npm.mape.me
[18:33] felixge has joined the channel
[18:34] felixge: partey
[18:34] creationix: ay: btw, I've had trouble with Apricot, I made a much simpler module
[18:34] felixge: creationix: url?
[18:34] maushu: creationix, yay!
[18:34] ay: creationix: You did?
[18:34] micheil: felixge: yeah. I thought tim could say it better
[18:34] felixge: creationix: apricot gave me some trouble as well
[18:34] felixge: micheil: say what?
[18:34] creationix: ay: felixge: I didn't make a proper module, but it's embedded in this http://github.com/creationix/scraperdemo/blob/master/app.js
[18:35] matt_c has joined the channel
[18:35] micheil: felixge: the changelog article
[18:35] felixge: creationix: I see
[18:35] felixge: micheil: ah :)
[18:35] felixge: micheil: yeah, thanks guys!
[18:35] creationix: give it a url, and it gives you a sizzle object (and optionally the dom document)
[18:36] creationix: felixge: :) thanks for writing awesome code
[18:36] felixge: creationix: looks nice
[18:37] creationix: felixge: I should probably add http keepalive and proper connection pooling for http fetching
[18:37] creationix: but it's the sizzle + htmlparser + jsdom part that's really useful
[18:37] felixge: jsdom / htmlparser = insane projects :)
[18:37] felixge: so glad people are working on this stuff
[18:38] creationix: felixge: no more insane that pure js mysql ;)
[18:38] felixge: creationix: that japenese dude who ported the ruby lib?
[18:38] felixge: creationix: yeah, my head was spinning a little when I looked at that
[18:38] creationix: don't know about a ruby lib, sorry
[18:39] felixge: creationix: well, the previous pure JS driver was a direct port of a pure ruby driver for mysql
[18:39] creationix: crazy
[18:39] samsonjs: has anyone else encountered a bug with JSON.stringify? it only happens after my server has somehow gotten into a bad state. the problem is that i'm still trying to figure out how to programmatically trigger this bad state, till now it only happens after using the app for some time. once it's in this state the problem manifests by JSON.stringify turning null values into the bytes \002\000\000\000 instead of the chars 'null'.
[18:39] felixge: creationix: Unfortunately the ruby driver sucked to begin with :|
[18:39] creationix: felixge: yeah, it's a good think you started fresh
[18:39] creationix: *thing
[18:39] ker2x_: well well... for now node.js is not sysadmin proof. i found (and submited) bug in almost every module i tried to use :)
[18:40] matt_c: idomatic libraries are a good thing.
[18:40] creationix: samsonjs: no, never saw that
[18:40] creationix: ker2x_: Awesome!
[18:40] ker2x_: no, it's very frustrating :)
[18:40] creationix: ker2x_ it is, but is much needed
[18:40] samsonjs: creationix: man, this is driving me mad. i hope i can isolate a test case.
[18:40] ker2x_: ineed
[18:41] ker2x_: indeed*
[18:41] felixge: ACTION goes playing some starcraft II
[18:41] felixge: (damn you blizzard)
[18:41] ker2x_: :)
[18:41] creationix: ker2x_: the only reason I wrote so many node libraries is because the ones I needed to build apps didn't exist or weren't very good
[18:41] creationix: a year of writing modules later, I'm still struggling to write fully functional apps without having to write more modules
[18:41] ker2x_: i'm not a developper, i don't have time for that :(
[18:41] rwaldron has joined the channel
[18:41] ker2x_: time and talents :)
[18:42] creationix: ker2x_: node is getting closer to what you're looking for
[18:42] mjr_: Do people write actual applications in node, or does everybody just make libraries?
[18:42] nefD: creationix: I'm quite interested in using spark for a fully node driven project im working on.. will spark handle restarting instances that suddenly exit or error out?
[18:42] felixge: mjr_: we run transloadit.com
[18:42] mjr_: awesome
[18:42] creationix: nefD: not yet, but it shouldn't be hard to add
[18:42] mjr_: An actual app.
[18:42] creationix: mjr_: I have several small actual apps
[18:42] ker2x_: mjr_: both. but look like you need to write module to write app :)
[18:42] _announcer: Twitter: "Create an environment in FreeBSD Jail will run free node.js want to create Web services create service" [ja] -- ãã°@ç²¾ç¥ã®å®å®ãè¿·å­. http://twitter.com/KOBA789/status/22110469939
[18:42] aho has joined the channel
[18:42] JimBastard: yo guys, client-side templating is insecure. its pretty much handing over the keys to your server
[18:42] creationix: nothing as large as transloadit though
[18:43] JimBastard: i had two hackers tell me
[18:43] JimBastard: they hacked my site in 20 minutes
[18:43] mjr_: I have written a few applications in node, but they are all internal tools.
[18:43] creationix: JimBastard: who was he talking to, I can't imagine how that's more unsafe
[18:43] felixge: creationix: I think learnboost is pretty big as well
[18:43] creationix: stackvm
[18:43] felixge: creationix: transloadit isn't even all that much code, it's just very intense code :)
[18:43] JimBastard: creationix: dude is obviously retarded and has hired snake oil consultants more then once in his lifetime
[18:43] felixge: JimBastard: what dude?
[18:43] creationix: nycjs mailing list
[18:44] JimBastard: felixge: nyc.js mailing list lulz
[18:44] creationix: I joined the list just for fun
[18:44] JimBastard: ill post you link
[18:44] felixge: JimBastard: k
[18:44] maushu has joined the channel
[18:44] JimBastard: felixge: http://groups.google.com/group/nycjs/browse_thread/thread/a53bd275ad59964c
[18:44] JimBastard: it really starts to get good towards the end when he brings up david hasslehoff
[18:44] felixge: game started brb
[18:44] nefD: creationix: Hm, guess I could just crack open the spark script to see about adding it.. any hints or tips on where to start digging?
[18:45] JimBastard: nefD: what you want to add to spark?
[18:45] creationix: nefD: you'll have to be in child-process mode
[18:45] creationix: JimBastard: auto-restarting of servers
[18:45] JimBastard: on file watch?
[18:45] nefD: JimBastard: I'd like it to restart server instances which crash out
[18:45] JimBastard: ohhh
[18:45] JimBastard: yeah
[18:45] JimBastard: fuck that
[18:45] creationix: nefD: Ideally it will do graceful shutdown of a cluster of servers so it can be used in deployment too
[18:45] JimBastard: you should just start the instance up when the request comes in
[18:45] nefD: actually, hot loading of changed files is another thing im going to be looking into, but yea, for not just restarting of crashed instances :P
[18:45] _announcer: Twitter: "@rauchg provides a great explanation on the history of real time web and how to use with socket.io. http://post.ly/tbM6 #nodejs" -- Nathan White. http://twitter.com/_nw_/status/22110664728
[18:46] creationix: nefD: actually for just restarting crashed children shouldn't be too hard
[18:46] creationix: just listen for some event on the child process and restart it
[18:46] JimBastard: One node ninja said to another: Since node doesn't have sleep, I guess I'll kill you while you're blocking.
[18:46] JimBastard: nodejitsu!
[18:47] javajunky has joined the channel
[18:47] creationix: JimBastard: lol
[18:47] ker2x_: i'm writing some kind of "realtime" syslog server and analytic tool. it need to be super resistant to catastrophic event. (read-only filesystem, network failure, etc ...). for now it handle easily 150 events per seconds with less than 2% cpu usage and a few MB of memory. but it's not catastroph-proof at all, mostly because of the modules :(
[18:47] zemanel has joined the channel
[18:48] JimBastard: ker2x_: ?
[18:48] ker2x_: most of the problems come from module that assume that everything went well... which is not the case :)
[18:48] ker2x_: -that
[18:48] JimBastard: so build error handling and validation into it?
[18:48] JimBastard: or use http://github.com/indexzero/node-experiments/tree/master/uncaught-exception/
[18:49] JimBastard: and shoot yourself in the foot
[18:49] JimBastard: or yell at the person who wrote the module? that usually works for me
[18:49] ker2x_: nope i don't want to shoot myself. i want to handle the error and resume to normal operation when everything is back to normality
[18:49] eazyigz: trying to port readability.js to env.js is such a slow performance.  Anybody know of a faster alternative to env.js, so that I can leverage the DOM in node?
[18:49] ker2x_: yes, i yell a lot :)
[18:50] hober: eazyigz: try tmpvar's jsdom
[18:50] drudge: 5 invites left! Invite a friend to the new Digg.
[18:50] creationix: ker2x_: yes, modules without proper error handling are about worthless for real apps
[18:50] drudge: any takers?
[18:50] creationix: since you can't catch the exceptions externally
[18:50] ker2x_: my last problem is is node-mongodb-native.
[18:50] rwaldron has joined the channel
[18:50] ker2x_: and couldn't patch it correctly
[18:51] eazyigz: hober: jsdom makes you reconstruct the entire html document from scratch.  I already have an html doc, and wish to execute some jquery inside of it...
[18:51] creationix: ker2x_: are you interested in a couch client instead ;)
[18:51] ker2x_: when the last mongodb server available die, the connection.state do not switch to notConnected
[18:52] mattly has joined the channel
[18:52] ker2x_: creationix: i can't install mongodb on my cluster
[18:52] JimBastard: eazyigz: yeah man, JSDOM
[18:52] ker2x_: old libs :)
[18:52] ker2x_: err
[18:52] ker2x_: couchDB*
[18:53] bdha: JSBDSM?
[18:53] creationix: ker2x_: really, I thought couch was easy to isntall
[18:53] maushu: Hey Jim.
[18:53] ker2x_: most server are still running old patched etch :)
[18:53] creationix: ahh, that may be a problem then
[18:53] ker2x_: it is
[18:53] eazyigz: JimBastard: I haven't been able to leverage jsdom for existing html documents.  All the examples with jsdom show you how to construct a document from scratch
[18:53] ker2x_: an upgrade is planned :)
[18:54] creationix: ker2x_: can you not add a new machine for couch
[18:54] creationix: it installs quite easily on latest debian or ubuntu
[18:54] kriszyp_ has joined the channel
[18:54] eisd has left the channel
[18:54] ker2x_: i don't install guenine debian
[18:54] EyePulp: so... if I have a string of JSON, how do I convert it to an object under node?
[18:54] EyePulp: or eval it
[18:54] ker2x_: and a lot of patch are still to be written for the latest debian
[18:54] creationix: EyePulp: JSON.parse
[18:55] EyePulp: creationix: perfect - thank you
[18:55] creationix: EyePulp: but it must be valid json
[18:55] JimBastard: eazyigz: ?
[18:55] creationix: EyePulp: {name:'foo'} is not json
[18:55] sh1mmer: fyi san francisco people I'll be takling about the node.js dns server a bit tonight
[18:55] JimBastard: http://github.com/tmpvar/jsdom/blob/master/example/jquery/run.js
[18:55] mjr_: sh1mmer: you mean on IRC?
[18:55] ker2x_: well, time to go. see you later. have fun _o/
[18:55] sh1mmer: mjr_: in person
[18:55] JimBastard: eazyigz: just load your page and toss it into the window
[18:56] JimBastard: using the file system or http.Client
[18:56] mjr_: Should we just ride our fixed gear bicycles around the mission until we find you?
[18:56] sh1mmer: exactly
[18:56] mjr_: OK, sounds good.
[18:56] sh1mmer: you'll be able to spot me by the plaid shirt I'll be ironically wearing
[18:56] Aria has joined the channel
[18:56] EyePulp: creationix: well, I'm trying to objectify the output from sys.inspect, (just for some debugging client side) so is there a more flexible parser?
[18:57] sh1mmer: mjr_: http://www.meetup.com/SF-Web-Performance-Group/calendar/14372332/
[18:57] creationix: EyePulp: well, sys.inspect doesn't output json
[18:57] creationix: it's not even valid js all the time
[18:57] eazyigz: JimBastard: is it known to perform faster than env.js?
[18:57] EyePulp: creationix: ah
[18:57] creationix: EyePulp: eval can parse it if it's valid js
[18:57] creationix: but eval it tricky
[18:57] mjr_: sh1mmer: sadly I cannot make tonight.  But you'll be just 2 blocks from my office.
[18:57] sh1mmer: mjr_: sorry.
[18:58] JimBastard: eazyigz: i have to assume jsdom is like 1000x better then env.js
[18:58] eazyigz: env.js is inexcusably slow for my purposes...
[18:58] sh1mmer: mjr_: I have permission to open source it now though
[18:58] sh1mmer: hooray
[18:58] mjr_: awesome
[18:58] creationix: sh1mmer: :D
[18:58] sh1mmer: although I want to merge my dev branch in first
[18:58] EyePulp: and when you say {name:'foo'} is not json do you mean it should be "{'name':'foo'}" instead?  making sure I understand your point about validity
[18:58] sh1mmer: so that'll take me a day or two I reckon
[18:58] sh1mmer: just because I like making you all wait :P
[18:58] creationix: EyePulp: not even that
[18:58] eazyigz: JimBastard: the only reason I didn't go with jsdom is cuz they don't have adequate examples
[18:58] creationix: JSON only has double quotes
[18:58] matt_c: sh1mmer: Cool.  Hooray for more node network daemons!
[18:58] creationix: EyePulp: http://json.org/
[18:58] mjr_: sh1mmer: I've just been typing in IP addresses manually all this time.  Please hurry.
[18:59] creationix: EyePulp: it's a very easy spec to understand
[18:59] JimBastard: eazyigz: 1. they are tons of examples in the repo. 2. im working on getting better examples online, i swear
[18:59] sh1mmer: mjr_: ha
[18:59] JimBastard: tmpvar was here last night, we were talking about
[18:59] sh1mmer: dev branch has all the redis stuff on
[18:59] JimBastard: we use jsdom for some client stuff, it works
[18:59] sh1mmer: so it's somewhat important for making it actually useful
[18:59] EyePulp: creationix: thanks - I've read it.  I guess I've grown fat and lazy on the method most browsers have implements to allow object notation of the single quote variety.
[18:59] EyePulp: *implemented
[18:59] sh1mmer: creationix: oh and I need to send you my jsconf slides soon
[19:00] eazyigz: JimBastard: have you ran readability.js on jsdom?
[19:00] sh1mmer: I'd love your input
[19:00] _announcer: Twitter: "@gloparco It's abbot using Ruby (slow). There is a newer server called Garcon using node.js that is wicked fast. http://bit.ly/bDwz3K" -- Frozen Canuck. http://twitter.com/frozencanuck/status/22111507747
[19:00] JimBastard: eazyigz: naah, mostly jquery stuff
[19:00] creationix: sh1mmer: for jsconf.eu?
[19:00] sh1mmer: creationix: ja
[19:00] creationix: cool
[19:00] creationix: EyePulp: as far as I know, all browsers with native JSON.parse only allow valid json
[19:00] Throlkim has joined the channel
[19:01] creationix: but most libraries are more lax in their input
[19:01] EyePulp: creationix: si
[19:01] _announcer: Twitter: "Happy hacking some node.js" -- Jacob Atzen. http://twitter.com/jacobat/status/22111612558
[19:01] eazyigz: JimBastard: I am trying to understand how to leverage their jquery example.  I don't see how to load an existing html document
[19:02] JimBastard: eazyigz ....
[19:02] eazyigz: jsdom.jsdom().createWindow()
[19:02] JimBastard: what do you mean "existing html document"
[19:02] eazyigz: what does createWindow do
[19:02] JimBastard: you mean a file?
[19:02] JimBastard: or a webpage sitting somewhere?
[19:02] eazyigz: how do I pass it a file?
[19:02] eazyigz: either one
[19:02] JimBastard: you read the file contents?
[19:02] creationix: JimBastard: is this a good way to do it? http://github.com/creationix/scraperdemo/blob/master/app.js#L50-53
[19:03] JimBastard: creationix: only if you care about the body, yes that looks fine
[19:03] creationix: hmm, good point
[19:03] creationix: that's what I get for reading apricot code
[19:03] _announcer: Twitter: "Node Knockout countdown blog post, "Intro to Jake -- JavaScript build tool for Node.js": http://is.gd/eDle6 #node.js #nodejs" -- Matthew Eernisse. http://twitter.com/mde/status/22111754629
[19:03] JimBastard: creationix: apricot is pointless to my understanding
[19:04] JimBastard: this is what tmpvar and indexzero have told me. 
[19:04] JimBastard: ever since they landed that jquery patch to jsdom a week or two ago
[19:04] matt_c: JimBastard: It seems roughly equivalent to BeautifulSoup (plus httplib/urllib) to my tiny Pythonic brain (and useful).
[19:05] matt_c: I haven't looked at jsdom tho
[19:05] creationix: JimBastard: what's the best way to get a dom for a full html page?
[19:05] JimBastard: matt_c: what do you think apricot uses
[19:05] JimBastard: creationix: im unsure, indexzero has been diving into that stuff a bit more then me.  i can bug him when he gets back in
[19:05] matt_c: JimBastard: Oh, duh.
[19:05] creationix: cool, I just want htmlparser + jsdom + sizzle, nothing more
[19:06] JimBastard: we are using jqueryify method of jsdom, works pretty good
[19:06] JimBastard: im not 100% sure of what isnt available in jQuery versus sizzle, re: level 1 dom
[19:06] JimBastard: i think jquery MIGHT have a couple of nice helper methods, really dont know
[19:06] JimBastard: brb coffee]
[19:06] gf3: k
[19:07] creationix: sizzle is just finding
[19:07] creationix: jquery adds modification and all sorts of utility objects
[19:07] eazyigz: I wish to utilize readability.js with jsdom.  But I think it won't be any faster than env.js implementation, simply because of readability's algorithms
[19:07] creationix: raw sizzle will return a native JS array of dom elements
[19:07] sh1mmer: eazyigz: you could always look at the YUI examples using JSDom
[19:07] creationix: jQuery will return an array of jquery objects
[19:07] gf3: NWMatcher > Sizzle
[19:07] sh1mmer: eazyigz: http://www.google.com/url?sa=t&source=web&cd=3&ved=0CBsQFjAC&url=http%3A%2F%2Fwww.yuiblog.com%2Fblog%2F2010%2F04%2F09%2Fnode-js-yui-3-dom-manipulation-oh-my%2F&ei=72l1TMP4LIumsQPV56SgDQ&usg=AFQjCNEdIKA67H-jSmUuoQ9ehju5bCIAbA
[19:07] sh1mmer: er
[19:07] sh1mmer: http://www.yuiblog.com/blog/2010/04/09/node-js-yui-3-dom-manipulation-oh-my/
[19:07] sh1mmer: better :)
[19:08] eazyigz: sh1mmer: I think I'm starting to understand that for complex dom traversals and manipulations, nothing will be fast on the server-side
[19:08] eazyigz: jsdom is great for simple jquery stuff
[19:08] sh1mmer: eazyigz: I'm not sure yet
[19:08] creationix: eazyigz: jsdom is pretty fast I thought
[19:08] sh1mmer: creationix: it's fast but it's no where near as fast as a real DOM would be
[19:09] creationix: sh1mmer: really, I thought it was faster than a real dom
[19:09] sh1mmer: I'd like to see what would happen if we ported a real DOM
[19:09] sh1mmer: creationix: not even close
[19:09] sh1mmer: creationix: the problem is right now most real DOMs are tightly integrated with rendering
[19:11] eazyigz: yes, at what it does.  The problem starts when you want to execute other js scripts like readability.js
[19:11] eazyigz: that will be 10x slower than the browser
[19:12] sh1mmer: I'm wondering if a good solution is a common interface written in two ways
[19:12] sh1mmer: like mustache
[19:12] sh1mmer: one implementation in DOM methods another in native SSJS
[19:12] sh1mmer: probably buffers
[19:12] eazyigz: when using thing like document.innerhtml in javascript, that will be painfully slow on the server
[19:13] eazyigz: only fast in the browser
[19:13] sh1mmer: eazyigz: I don't see why.
[19:13] sh1mmer: eazyigz: that doesn't _have_ to be slow on the server
[19:14] Aria: Yeah... It could be implemented the exact same way...
[19:14] Viriix has joined the channel
[19:14] mAritz has joined the channel
[19:15] eazyigz: sh1mmer: I wish I knew why.  All I know is that its people's chief complaint when running readability.js on the server
[19:15] creationix: JimBastard: I couldn't help myself, I had to reply to "gregory"
[19:15] JimBastard: well, i hope you tried to help him
[19:16] JimBastard: i dont have the patience for that sort of thing over email
[19:16] creationix: sh1mmer: what about template engines that don't reply on innerHTML and thus trigger the html re-parse
[19:16] stepheneb has joined the channel
[19:16] creationix: is jsdom fast then?
[19:16] _announcer: Twitter: "Tornado Twsteed a programemos Node.js websockets!! SIII!" [ro] -- Francisco Reyes. http://twitter.com/pacorro2000/status/22112503817
[19:16] bmavity has joined the channel
[19:16] sh1mmer: creationix: well that's going to be slow in both the browser and the server
[19:16] creationix: not in my experience
[19:16] stepheneb has joined the channel
[19:17] creationix: I only render the visible nodes
[19:17] JimBastard: The safest option by far is to allow the client to send whatever html/javascript they want, don't try to sanitize it at all in the server, and simply render it client side in the receiver using dom operations.
[19:17] creationix: and don't attach them to the page till the entire tree is built
[19:17] JimBastard: creationix: thats kinda misleading
[19:17] sh1mmer: creationix: sorry I misread that
[19:17] creationix: JimBastard: ?
[19:17] sh1mmer: creationix: you are right, that is just good DOM coding
[19:17] eazyigz: JimBastard: that is if you intend to return anything to the client
[19:17] JimBastard: eazyigz: sigh
[19:17] eazyigz: what if you are parsing a news article that the client sent you...
[19:18] _announcer: Twitter: "Transloadit - Great file uploading for your web application:  http://bit.ly/bPhJhA #nodejs #jquery #upload" -- Carlos Pires. http://twitter.com/Cadu/status/22112597046
[19:18] creationix: eazyigz: JimBastard was quoting me
[19:18] sh1mmer: creationix: I think my point is, if we are serious about sharing the DOM with browsers as a content generation API we need a C++ based implementation
[19:18] JimBastard: what if i wasnt talking to you, or if that was a quote
[19:18] sh1mmer: it's not that JSDOM is bad, it's actually great
[19:18] creationix: sh1mmer: sure that couldn't hurt , just make it faster
[19:18] Aria: The parsers are still a bit slow.
[19:18] sh1mmer: It's more than it's fundamental enough it needs to be super fast
[19:18] creationix: but I'd rather just be more effecient in our templates
[19:18] sh1mmer: creationix: we should do both, but it's orders of magnitude slower right now
[19:19] sh1mmer: creationix: I'm pretty sure the YUI team write good DOM methods
[19:19] eazyigz: v8 to the rescue
[19:19] v8bot: eazyigz: SyntaxError: Unexpected identifier
[19:19] sh1mmer: but we were getting 30rps on Node running yui3/jsdom
[19:19] sh1mmer: which just isn't that good
[19:19] sh1mmer: (obviously)
[19:19] sh1mmer: unless it was in the high hundreds I wouldn't be that happy
[19:19] creationix: sh1mmer: I'm pretty sure YUI dom methods are heavy, no matter how good they are written
[19:20] creationix: doing that per request it going to kill speed
[19:20] sh1mmer: creationix: but if you start writing real applications it's going to get complex
[19:20] sh1mmer: one of the difference between the browser and the server is that the browser can hog a whole core and a lot of memory
[19:20] creationix: yeah, you can't beat string compiled templates for server-side if you must pre-generate html
[19:20] creationix: I only use the dom method when I can offload the processing to the client
[19:21] sh1mmer: creationix: I want it to be fast enough to use the DOM that I can choose to trade off some performance to have shared code
[19:21] creationix: agreed
[19:21] bradleymeck: one of the biggest things things a dom implementation needs is object to object mapping if you want speed. we have to wait on  the ecma ppl for that or use weakmap draft for now :/, if we could get a combination of string/dom caching we could go a lot faster when using dom for rendering, but strings will almost always be faster
[19:22] creationix: bradleymeck: that can be done today with node extensions right?
[19:22] bradleymeck: it is done today
[19:22] gf3 has joined the channel
[19:22] _announcer: Twitter: "duh mustache.js is generic js, not node specific.  thanks @jchris." -- rektide de la fey. http://twitter.com/rektide/status/22112860934
[19:22] bradleymeck: but would require a fairly hefty rewrite
[19:22] bradleymeck: for dom that is
[19:23] creationix: yeah
[19:23] sh1mmer: bbl
[19:23] JimRoepcke: the JSON.stringify bug samsonjs mentioned is weird. If we add some useless code to the function after the JSON.stringify call, the bug doesn't occur nearly as frequently (may take 10's of thousands of requests rather than 500 to trigger it). I'm starting to wonder if it's a V8 JIT bug
[19:24] creationix: It would be great if node came with a couple more primitives like weakmaps typed arrays
[19:24] creationix: JimRoepcke: If it is, make sure to file a ticket against V8
[19:25] Aria: I'd love to get some writev support in Node, so we can write a DOM with a buffer-based backing store, and as nodes get changed, slice the buffers up. Then when you want to serialize, just have the kernel do it inside a writev.
[19:25] _announcer: Twitter: "node.js + less.js + capistrano = CSS Bliss :)" -- Jake Smith. http://twitter.com/jakefolio/status/22113065109
[19:25] creationix: Aria: that's how my world-db module works
[19:26] creationix: the data is stores in 1024x1024 grids tiles together
[19:26] creationix: *stored
[19:26] creationix: I just do a memcpy via the buffer apis to serialize it
[19:26] Aria: Nice.
[19:26] Aria: And with writev, there'd not even be a memcpy.
[19:26] jetienne: i m doing slides and would like to include code in it... how can i convert code in image with colored sources ?
[19:26] Aria: You could just dump the pile to a socket or file.
[19:26] JimRoepcke: creationix: we certainly will but right now we haven't managed to isolate a test case. we can reproduce it (randomly) with our (rather large) codebase.
[19:27] creationix: JimRoepcke: good luck
[19:28] creationix: Aria: what is writev?
[19:28] creationix: the reason I have to memcpy is to get a snapshot of the changing data
[19:28] creationix: since writing several megs takes time
[19:28] Aria: Ah, that'd do it too.
[19:29] Aria: writev -- you give the kernel a list of start-length pairs to write.
[19:29] Aria: So it can dump a whole, non-contiguous region of memory in a single system call.
[19:29] creationix: oh, so like a sendfile type thing
[19:29] e^ipi: does node have a system or shell or exec or some such thing that i can run command line programs with?
[19:29] creationix: yeah, I think you still need the snapshot with that
[19:29] Aria: e^ipi: Child Process
[19:29] Aria: Yeah, except memory to fd, rather than fd to fd
[19:29] Aria: Yeah, you would in that case.
[19:30] e^ipi: Aria: thx
[19:30] bradleymeck: uggg finally done w/ rpg statistics system
[19:30] Aria: (then some copy on write techniques to do lazy snapshotting.)
[19:30] creationix: Aria: yeah, that would be super fast
[19:30] Aria: Kind of a limited scope mark-and-sweep.
[19:30] creationix: and with the typed array spec, using that buffer-backed store would be easier
[19:30] Aria: Or refcounting.
[19:31] Aria: Yeah? I've not looked at the typed array spec.
[19:31] creationix: Aria: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/TypedArray-spec.html
[19:32] Aria: Ah, fun!
[19:32] creationix: DataView is especially useful for implementing binary protocols
[19:32] Aria: Yeah, wow.
[19:32] Aria: Man, I should start trying to implement this.
[19:32] eisd|away has joined the channel
[19:32] creationix: :)
[19:33] eisd|away has left the channel
[19:33] Alex-SF has joined the channel
[19:33] eisd|away has joined the channel
[19:33] eisd|away has left the channel
[19:34] tobiassjosten has joined the channel
[19:34] Aria: I think it's totally the right way, and the API isn't too heavy.
[19:34] Aria: Doesn't smell nearly as bad as the DOM
[19:34] Aria: Which is kinda my limit as far as the size of an API
[19:35] danielzilla has joined the channel
[19:36] codetonowhere has joined the channel
[19:36] codetonowhere has left the channel
[19:36] gf3 has joined the channel
[19:37] javajunky: anyone know do I have to publish a new version of npm just to add a description to the package.json ?
[19:37] Aria: I believe so.
[19:38] _announcer: Twitter: "Speaker @sh1mmer will be presenting @ #sfwebperf tonight @ 7PM.  Topic is node.js and DNS.  http://meetup.com/u/fq7 + live video stream." -- SF Web Perf. http://twitter.com/sfwebperf/status/22113843465
[19:38] isaacs has joined the channel
[19:39] bradleymeck: need to open me up a ticket for typedarrays
[19:41] jetienne: javajunky: yes
[19:41] zomgbie has joined the channel
[19:42] jetienne: javajunky: you can do a 1.2.3fix0
[19:44] javajunky: jetienne: its just all I"m doing is adding a description to the package.json file, seems wrong to update the version :(
[19:44] _announcer: Twitter: "Building and using node.js on Windows (32 and 64-bit) through Cygwin - I have been going through the existing... http://tumblr.com/xskgpg8v3" -- Stan Angeloff. http://twitter.com/StanAngeloff/status/22114195303
[19:44] jetienne: javajunky: what is the current version ?
[19:44] javajunky: 0.8.0
[19:45] jetienne: javajunky: first this is a requirement of npm to update the version. and yep i agree you dont want to confuse the user by changing version without changing code
[19:45] jetienne: javajunky: but you can publish 0.8.0glitches1
[19:46] isaacs: javajunky: you can unpublish and then republish if it's just a metadata change.
[19:46] jetienne: i mean i do a 0.8.0build20100825 :)
[19:46] javajunky: isaacs: and is that 'ok' to do ? 
[19:46] isaacs: javajunky: just beware that unpublishing can break dependencies.  publishing is a promise that you won't change code without changing the version.
[19:46] isaacs: javajunky: eh.  use it wisely.  don't be a capricious with it, or you'll hurt your own reputation.
[19:46] javajunky: isaacs: that is the case in this situation
[19:47] isaacs: javajunky: yeah, that's what it's for.
[19:47] jetienne: isaacs: have you seen the npm github service tweet ? wouldnt it be cool to have joyent to run that ?
[19:47] javajunky: if the code hasn't changed (its just the package.json I'm changing â¦ based on your tweet as it happens to update descriptions and repositories!) 
[19:47] javajunky: isaacs: whilst I've got you distracted what should the repositories point to (lets say github) ..the '.git' url or the github page ?
[19:47] isaacs: jetienne: i've heard of it, but i haven't checked it out.
[19:48] jetienne: isaacs: the goal is github tag version == npm package... seems good for npm adoption 
[19:48] isaacs: javajunky: search this page for "repository" http://github.com/isaacs/npm/blob/master/doc/json.md
[19:48] javajunky: ty
[19:48] bradleymeck: need to get that post push service to be a bit better
[19:49] isaacs: jetienne: what's that github hook thing?  where's it live?
[19:49] bradleymeck: i have one up
[19:49] isaacs: bradleymeck: yeah, where's it at?
[19:49] bradleymeck: sec... digging up the exact url
[19:49] isaacs: curious isaac is curious
[19:50] jetienne: isaacs: your future cto is willing http://twitter.com/jasonh/status/22105546405
[19:50] bradleymeck: http://github.com/bmeck/npm-github-service , bmeck.homedns.org:8888 , works fine for the couple commits i tested
[19:50] jetienne: isaacs: this is in github, honnestly i havnt tried. but the principle is uber nice
[19:50] Aria has left the channel
[19:51] isaacs: yeah, neat :)
[19:51] Aria has joined the channel
[19:51] javajunky: *sob* won't let me un-publish, hohum
[19:51] isaacs: javajunky: huh?
[19:51] isaacs: javajunky: (you need to give it a full name@version.  updated in next version to allow unpublishing the whole record with just the name)
[19:52] bradleymeck: http://groups.google.com/group/npm-/browse_thread/thread/fea0b6b7e4fb74f4 instructions
[19:52] isaacs: jetienne: it's right up joyent's alley, yeah
[19:52] jetienne: isaacs: excelent
[19:52] isaacs: bradleymeck: yeah, i saw the email, but haven't had a chance to dig through the code
[19:53] bradleymeck: its fugly
[19:53] deepthawtz has joined the channel
[19:54] cardona507 has joined the channel
[19:54] jetienne: principle is very good, code maty need refactoring
[19:55] isaacs: working code is less fugly than no code
[19:55] isaacs: (ok, that's not ALWAYS true, but still...)
[19:55] javajunky: isaacs: ah the error does actually make sense ;) my bad!
[19:56] bradleymeck: code is async and spawns tons of shell stuff, some http, its a cluster
[19:57] javajunky: isaacs: *sigh* sorry to be confused, but on npm.mape.net the repositories that work are references to the github homepages, but my oneâ¦a reference directly to the .git doesn't.. 
[19:58] isaacs: javajunky: it's supposed to be something you could hand to git
[19:58] isaacs: javajunky: i think mape is just trimming the .git$ or something
[19:59] isaacs: javajunky:  http://github.com/isaacs/npm/blob/master/package.json#L20-23
[19:59] javajunky: isaacs: for example http://github.com/mape/connect-assetmanager-handlers/blob/master/package.json
[20:00] isaacs: javajunky: that's wrong.  handing that to git would fail.
[20:00] _announcer: Twitter: "Last night's #nodejs w/ #express programming in #coffeescript was fun.  Not sure if I can appreciate it after much time with clojure/erlang" -- Tim Dysinger. http://twitter.com/dysinger/status/22115254580
[20:01] _announcer: Twitter: "Finally got around to doing some basic learning about node.js. #mindisblown" -- bikesandcode. http://twitter.com/bikesandcode/status/22115300606
[20:02] jsilver has joined the channel
[20:02] javajunky: indeed (as you said)â¦but on mape's npm.mape.me it worksâ¦whereas my one â¦ (which I"m struggling to push because I pull a github fork into my masterâ¦ arggh) â¦ points at the .git â¦ and npm.mape.me doesn't show it :( 
[20:03] isaacs: javajunky: i dunno.  take it up with mape maybe
[20:03] isaacs: didn't write that code.
[20:03] isaacs: javajunky: does it start with git:// or git@, maybe?
[20:03] javajunky: http://github.com/ciaranj/node-oauth/blob/master/package.json
[20:03] javajunky: isaacs: yeah I figure its not your issue, thought you might have a view though :)
[20:06] MikhX has joined the channel
[20:06] _announcer: Twitter: "Coding JavaScript make my heart tingle. http://nodejs.org/" -- Michel Legnered. http://twitter.com/legnered/status/22115636158
[20:07] bradleymeck: what was the name of the fancy npm repo website
[20:07] visnup has joined the channel
[20:08] aubergine has joined the channel
[20:09] MikhX has joined the channel
[20:09] chuhnk- has joined the channel
[20:09] javajunky: bradleymeck: npm.mape.me
[20:09] mattikus has joined the channel
[20:09] deepthawtz has joined the channel
[20:10] pgriess has joined the channel
[20:10] cardona507 has joined the channel
[20:11] dmcquay has joined the channel
[20:13] javajunky: mape: ping ?
[20:14] aubergine_ has joined the channel
[20:14] Pilate has joined the channel
[20:16] pdelgallego has joined the channel
[20:22] Frans-Willem: Someone just asked me a question I hadn't thought about before :/
[20:23] Frans-Willem: [22:20] <aurynn> what's the license?
[20:23] Frans-Willem: What kind of license do you guys apply to your open-source projects?
[20:23] aurynn: LGPL for me, generally
[20:23] SubStack: depends on what sort of project
[20:23] _announcer: Twitter: "tomcat, weblogic, jetty and node.js are all running on my workstation right now" -- jamescarr. http://twitter.com/jamescarr/status/22116751110
[20:23] Frans-Willem: Are there any that basically say "Use it how you wish, just give me some credit for the parts you used from me" ?
[20:23] gf3 has joined the channel
[20:23] Aria: I usually match the license of the runtime I use.
[20:23] aurynn: Frans-Willem, yes, that'd be BSD.
[20:24] Aria: BSDish for Ruby, GPL for Gnome, LGPL for parts.
[20:24] Frans-Willem: What's Node's license?
[20:24] mjr_: node is MIT
[20:24] mostlygeek_ has joined the channel
[20:24] aurynn: MIT is equiv to BSD, iirc?
[20:24] mjr_: I think so
[20:24] Aria: Equivalent to 2-Clause BSD.
[20:25] Aria: 3-Clause BSD has the advertising clause that conflicts with GPL
[20:25] mjr_: I think matching the license to the project it goes with makes sense.
[20:25] Frans-Willem: Hmmm, what are the the cons for a license that would say use how you wish, give me credit, and give back any fixes you made ?
[20:26] mjr_: Although I don't know why people want to do xGPL.
[20:26] Frans-Willem: (And what kind of license would that be?)
[20:26] Aria: Because of just what Frans-Willem said.
[20:26] SubStack: I need to start calling MIT the Expat license
[20:26] SubStack: since MIT is ambiguous
[20:26] aurynn: mjr_, I use xGPL so I get changes back.
[20:26] SubStack: or else X11
[20:26] deadlyicon has joined the channel
[20:26] aurynn: Straight GPL isn't for me, but LGPL works nicely
[20:26] Aria: Frans-Willem: That's the lesser GPL style or CDDL.
[20:26] mjr_: But GPL really restricts its use for people wanting to do commercial stuff.
[20:27] Aria: (I actually prefer the CDDL.)
[20:27] gerad has joined the channel
[20:27] mjr_: Even LGPL, just because it's risky and hard for people to understand.
[20:27] Frans-Willem: And let's say I go with LGPL, then later on decide I can't be bothered anymore, or someone needs a MIT licensed bit, can i license it again?
[20:27] aurynn: LGPL is "Do what you lik, I get changes back."
[20:27] aurynn: "Your code does not need to be open sourced as a result"
[20:27] Frans-Willem: aurynn: How about giving credit to the original author?
[20:29] Aria: It doesn't do that, but "original author" is a very difficult thing to define.
[20:29] javajunky: Frans-Willem: as the copyright owner you can do what the hell you like, but beware, the previously released stuff under other licences is still subject to those, so if you move to a more restrictive licence, people can still do what the hell they want with the previous stuff (I believe)
[20:29] Aria: And credit where?
[20:29] Aria: javajunky: Yes indeed.
[20:29] SubStack: attribution doesn't seem so important
[20:29] Aria: Also, if you have multiple copyright holders, you have to get the approval of all.
[20:30] Aria: A copyright assignment or at least a contributor agreement.
[20:30] javajunky: SubStack: attribution perhaps not, but copyright very much so 
[20:30] Frans-Willem: SubStack: If people use my stuff, I just want to see my name somewhere, even if it's just in a dark corner, so I can point people or possible employers to it.
[20:30] mjr_: If the goal is to both get people using your software and to get credit for software you've written, then I don't get GPL or LGPL.
[20:30] Aria: Also, by default, copyright law can be used against plagiarism.
[20:30] Aria: So claiming at a source level that you wrote something you didn't isn't entirely possible.
[20:30] SubStack: Frans-Willem: it's usually pretty obvious though
[20:31] mjr_: Frans-Willem: the BSD/MIT style licenses will get your name on the "clickwrap" page or whatever.
[20:31] _announcer: Twitter: "Finally took a look at node.js. Some cool concepts there. I may need to work it into some future projects." -- John Stephens. http://twitter.com/johns2k5/status/22117235753
[20:31] Aria: No, actually, mjr_. That's a specific feature of the 3-clause BSD license.
[20:31] mjr_: Oh, I didn't know there were multiple BSD options.
[20:32] sh1mmer has joined the channel
[20:32] SubStack: I care more about people not having to duplicate my efforts in the future, at least where libraries are concenered
[20:32] mjr_: People get really touchy about open source licensing issues and philosophies.
[20:32] rauchg_ has joined the channel
[20:32] Aria: Yeah. There's a bunch of competing wishes, and some funky dovetailing with the implications of various wordings.
[20:33] Aria: Also, inter-license compatibility.
[20:33] mjr_: There are lots of LGPL and GPL software that I'd like to use in commercial products, but it's just too risky.
[20:33] Aria: LGPL too
[20:33] Aria: ?
[20:33] mjr_: Yeah, it's really risky
[20:33] Aria: CDDL and 3-Clause BSD conflict with GPL -- CDDL over various patent and IP law stuff, and 3-clause with the 'advertising clause'
[20:33] Aria: Orly? Why?
[20:33] mjr_: And has yet to be tested in court, so who knows.
[20:34] mjr_: I'm getting outside of my competence zone here, but this is basically how our lawyers have advised us.
[20:34] SubStack: the supreme court needs to invalidate software patents already
[20:34] SubStack: they keep finding excuses not to address the issue directly
[20:35] Frans-Willem: Hmmm
[20:35] Frans-Willem: "Neither the name of the <ORGANIZATION> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission."
[20:35] mjr_: The issue with LGPL in commercial products, as I understand it, is what it means to be "linked".
[20:35] Frans-Willem: That sounds like something I didn't think of but is really useful :/
[20:35] mjr_: SubStack: if somebody can figure out what exactly software means, and what exactly a software patent means, it might be possible.  
[20:35] mjr_: The lines are way too blurry.
[20:36] SubStack: true
[20:36] Frans-Willem: Anyone want to explain to me why the no-endorsement bit would be bad to include ?
[20:36] Aria: mjr_: That's actually more a problem with GPL, since with LGPL, linked things are exempt. 
[20:36] matt_c: Frans-Willem: It's more restrictive but protects the author a little more?
[20:36] Aria: But yeah, makes more sense for compiled binary programs.
[20:37] mjr_: Aria: the issue is the definition of linking in order to make sure you are exempt.
[20:37] Throlkim has joined the channel
[20:37] Aria: Frans-Willem: I've no issue with the no-endorsement thing. It's a sensible restriction.
[20:37] benburke_ has joined the channel
[20:37] Frans-Willem: Guess I'll go with the 3-clause BSD then :/
[20:38] Aria: I'd suggest the modified MIT. It has a weaker 'no-endorsement' rather than the 'must advertise' clause.
[20:38] Aria: (3-Clause BSD is ~never smart.)
[20:38] Aria: http://www.xfree86.org/current/LICENSE4.html#6
[20:38] mjr_: I read about this stuff about a year and concluded that MIT was the way to go, for reasons I can no longer remember.
[20:39] mjr_: But please stay away from LGPL if you want people with lawyers to use your software.
[20:39] Aria: (Oh, I mean 4-clause, not 3-clause. Carry on.)
[20:39] matt_c: MIT/X is the best "do whatever you want with this but please don't sue me" license IMHO
[20:39] Aria: MIT/X and ISC license, yeah.
[20:39] Aria: ISC is even less restrictive.
[20:39] Aria: But either way, those are seriously permissive licenses, and in most cases, that's a good thing.
[20:40] Aria: mjr_: And I think the bit about the LGPL is FUD. libc gets linked rather often, and nobody has a problem with it ;-)
[20:40] daleharvey has joined the channel
[20:40] Frans-Willem: This is the 3-clause, right, the one at the bottom of http://www.opensource.org/licenses/bsd-license.php ?
[20:40] matt_c: GPL/LGPL are totally appropriate for a lot of situations, particularly when you're planning on making money commercially licensing your code to people.
[20:40] mjr_: FUD it may be, but that's the advice lawyers give.
[20:40] Aria: Yep, Frans-Willem.
[20:41] Aria: It's the advice /some/ lawyers give. Others have looked a little deeper.
[20:41] mjr_: Not all lawyers, of course.  My point is that many commercial users are concerned about this.
[20:41] Frans-Willem: Hmmm, MIT seems ok, but I kinda like the "no endorsement" bit from BSD, is that a bad thing ?
[20:41] Aria: Not at all! 
[20:41] Frans-Willem: ok, 3-clause BSD it'll be then
[20:41] Aria: (I got myself tangled up in the original BSD license, which I thought was the 3-clause. It's the 4th clause that's a problem.)
[20:42] joemccann has joined the channel
[20:42] joemccann: oi!
[20:42] bradleymeck: joe!
[20:42] joemccann: anyone able to get felix's mysql driver tests to work?
[20:42] matt_c: it's often called the "Simplified BSD" as well.
[20:42] joemccann: ACTION having no luck
[20:43] bradleymeck: some ppl have been using  the driver just fine, havent heard about tests though
[20:43] bradleymeck: ACTION goes off to run a check
[20:43] sh1mmer has joined the channel
[20:43] joemccann: I keep getting "buffer is not defined" on any test I run
[20:44] sveimac has joined the channel
[20:44] javajunky: creationix: are you abotu ?
[20:44] creationix: yep
[20:44] bradleymeck: lowercase buffer, mmm?
[20:44] SubStack: isaacs++ for the npm rebuild feature
[20:44] joemccann: nah, it is "Buffer is not defined."
[20:44] joemccann: is the error
[20:44] mjr_: joemccann: you need a newer node.
[20:45] joemccann: really?
[20:45] joemccann: ok cool
[20:45] joemccann: ACTION goes to update and build
[20:45] mjr_: joemccann: Buffer became a global object recently.
[20:45] joemccann: ahh
[20:45] Frans-Willem: Am I the only one doing an extra var Buffer=require("buffer").Buffer on top of modules that use it, just in case :p?
[20:45] joemccann: mjr_: thx
[20:46] bradleymeck: frans-willem, possible
[20:46] javajunky: creationix: I'm finishing off some minor changes to connect-auth so there's no actual dependency on there being a session present, do you have a preference for connect middlewares that need to pass things around, i.e. I'm currently planning on putting a ._connect_auth property on the request ? 
[20:47] creationix: javajunky: that sounds good
[20:47] creationix: what is is passing aroung
[20:47] creationix: *around
[20:47] joemccann: is there a one-liner to update node?
[20:47] creationix: joemccann: got ivy users it's ./utils/update.sh
[20:48] creationix: joemccann: s/got/for/
[20:48] creationix: ACTION still can't type on apple keyboards
[20:48] javajunky: a fairly lightweight object literal container, a reference will also be on the session as 'auth' [which is how it currently works]
[20:48] bradleymeck: git pull origin master && ./configure && sudo make install
[20:48] Frans-Willem: creationix: my postgres rewrite: http://github.com/Frans-Willem/node-PostgresClient/
[20:48] Frans-Willem: creationix: Not quite ready, but should be up to par with the old module, if not better :)
[20:48] joemccann: bradleymeck: thx
[20:48] Frans-Willem: creationix: LEt me know what you think
[20:49] creationix: Frans-Willem: pretty
[20:49] javajunky: creationix: was http://github.com/ciaranj/connect-auth/blob/master/lib/auth.js#L120
[20:49] creationix: bradleymeck: don't forger to make clean and/or distclean
[20:49] bradleymeck: i havent had to do that in forever though
[20:49] sh1mmer: joemccann: that's only if you are running head
[20:50] creationix: javajunky: yeah, putting things on session gets them serialized into the session storage
[20:50] sh1mmer: joemccann: it would be cool if npm could update node
[20:50] joemccann: sh1mmer: fer shure
[20:50] joemccann: sh1mmer: +100 to that!
[20:51] bradleymeck: nave+npm
[20:51] javajunky: javajunky: yeah thats the intention 
[20:52] creationix: Frans-Willem: very nice code
[20:52] javajunky: ooo talking to myself, awesome ;)
[20:52] javajunky: creationix: yeah persisting is the intention when the session is present.
[20:52] creationix: Frans-Willem: the names are a little verbose for my taste, but otherwise it's very clean
[20:53] creationix: javajunky: ahh
[20:53] joemccann: for those keeping score, the mysql driver's tests are passing nao
[20:53] javajunky: creationix: where the session is present it allows for only authenticating once per session (if no logout occurs) .. where not present it will have to re-authenticate for each request (OAuth for example tends to do that when a provider)
[20:54] sh1mmer: bradleymeck: did isaac document Nave somewhere?
[20:54] StevenSoroka has joined the channel
[20:54] sh1mmer: nm. I'm an idiot. I totally looked past it on his Github
[20:55] sh1mmer: joemccann: http://github.com/isaacs/nave
[20:55] bradleymeck: and thus did frog move onto a non-blocking mysql
[20:56] joemccann: sh1mmer that's for multipel environments of node, right?
[20:56] joemccann: not actually updating node
[20:56] joemccann: ?
[20:56] sh1mmer: joemccann: you can use it to install the latest version
[20:56] sh1mmer: I was about to patch it to accept the flag 'latest'
[20:56] sh1mmer: looks like it doesn't do that
[20:57] joemccann: oh duh, it's just a shell script
[20:57] sh1mmer: yeah
[20:58] sh1mmer: hm, maybe it does support latest... 
[20:59] bradleymeck: yes it does
[20:59] sh1mmer: that's sweet
[20:59] sh1mmer: joemccann: `nave install latest`
[20:59] MikhX has joined the channel
[21:00] joemccann: hmm, i think there's a bug if u use npm
[21:00] joemccann: npm install nave
[21:00] joemccann: works
[21:00] joemccann: but
[21:00] joemccann: which nave
[21:00] joemccann: nothing
[21:01] bradleymeck: odd fresh install of nave here seems ok, did you sudo npm install nave? (executables tend to need sudo from my exp)
[21:02] joemccann: yeah i did sudo
[21:02] bradleymeck: what version of npm?
[21:02] joemccann: it shows it as installed
[21:03] joemccann: 0.1.23
[21:03] joemccann: shit, just did
[21:03] joemccann: sudo npm update
[21:03] joemccann: and shit is broken nao
[21:04] creationix: hmm, seems zero length buffers are crashing my code again
[21:04] joemccann: Error: Cannot find module './../lib/node/.npm/npm/0.1.23/package/cli' 
[21:04] creationix: i though someone fixed all those bugs
[21:05] Blackguard has joined the channel
[21:05] mjr_: creationix: 0 length toString() was fixed, but maybe not some other part of buffers.
[21:05] creationix: I'm not seeing the exception, my http request is just dying silently
[21:05] EyePulp_ has joined the channel
[21:05] creationix: calling res.end with a zero length buffer
[21:05] mjr_: I hate the silent death.
[21:06] bradleymeck: oh god the evil update thing
[21:06] joemccann: yeah wtf happened?
[21:06] joemccann: i ran update and shit's fuct
[21:06] dnolen has joined the channel
[21:07] joemccann: should i npm uninstall npm?
[21:07] bradleymeck: im not sure what causes it, i tend to have to delete my .node_libraries after it T_T
[21:07] joemccann: yeah was thinking that
[21:07] mjr_: Every now and then I find myself just deleting node_libraries and starting over
[21:07] mjr_: I think node and especially npm is just too new.
[21:07] sh1mmer: joemccann: that isn't the latest version of npm
[21:07] joemccann: problem is someone in IT jacked with my machine and can't find .node_libraries
[21:07] sh1mmer: mjr_: too right
[21:08] joemccann: it is not in ~/.node_libraries
[21:08] mjr_: But I mean, whatever, npm is so much better than not npm.
[21:08] dnolen has joined the channel
[21:08] tilgovi has joined the channel
[21:08] dnolen has joined the channel
[21:09] jelveh has joined the channel
[21:09] bradleymeck: sudo npm config get root
[21:09] jelveh has joined the channel
[21:09] bradleymeck: should say what npm is looking in
[21:09] sh1mmer: mjr_: I end up nuking .node_libraries a fair amount
[21:09] sh1mmer: I guess my problem is the weird mix of dev versions and npm libraries I use
[21:10] dnolen has joined the channel
[21:10] joemccann: bradleymeck: can't run any npm command
[21:10] bradleymeck: eww ummm
[21:10] mjr_: It all rebuilds quickly anyway, so it's not so bad.
[21:10] sh1mmer: joemccann: just update npm from scratch
[21:10] sh1mmer: it's weird to me that npm attempts to to manage all packages
[21:10] sh1mmer: instead of the ones it installed
[21:10] bradleymeck: cat ~/.npmrc
[21:11] dnolen has joined the channel
[21:11] bradleymeck: yea, fresh install is way to go if you can i think
[21:11] joemccann: bradleymeck: binroot = /Users/joe.mccann/bin 
[21:11] sh1mmer: joemccann: I would just re-install npm
[21:12] sh1mmer: joemccann: it will be possible to just run update
[21:12] sh1mmer: it won't loose start
[21:12] sh1mmer: state
[21:12] bradleymeck: i still wanna know what causes that
[21:12] dnolen has joined the channel
[21:12] joemccann: sh1mmer: still throwing error
[21:12] joemccann: wtf
[21:12] deepthawt has joined the channel
[21:13] cardona507_ has joined the channel
[21:13] joemccann: Error: Cannot find module './../lib/node/.npm/npm/0.1.23/package/cli' 
[21:13] dnolen has joined the channel
[21:13] joemccann: after
[21:13] joemccann: curl http://npmjs.org/install.sh | sudo sh
[21:13] sh1mmer: wtf
[21:14] deepthawt has joined the channel
[21:14] joemccann: that's what im sayin!
[21:14] joemccann: lol
[21:14] sh1mmer: heh
[21:14] sh1mmer: dude. your machine is weird
[21:14] dnolen has joined the channel
[21:14] joemccann: trust me, my macbook at home is not like this
[21:15] joemccann: fucking IT
[21:15] sh1mmer: heh
[21:15] mjr_: sh1mmer: do you know anything about IT departments restraining your ability to use the latest software?
[21:15] mjr_: Or is this all going over your head?
[21:15] dnolen has joined the channel
[21:16] sh1mmer: mjr_: I work at bigco
[21:16] sh1mmer: remember I'm still on Leopard
[21:16] dnolen_ has joined the channel
[21:16] sh1mmer: happily I just uninstalled all of IT's bullshit when they gave me the laptop
[21:16] mjr_: Right, that was a two-line callback joke to a few weeks ago when you were trying to get pcap installed.
[21:16] sh1mmer: :)
[21:17] sh1mmer: I still haven't been able to get it working 100% on my Ubuntu 10.4 machine
[21:17] sh1mmer: I need to fix that
[21:17] sh1mmer: we might be using it for KO
[21:17] mjr_: Yeah, that's odd.  I run it on 10.04 all the time.
[21:17] tuxsbro has joined the channel
[21:18] tuxsbro_ has joined the channel
[21:18] sh1mmer: mjr_: it's probably me. I haven't put huge time into it
[21:19] _announcer: Twitter: "September === beer.js ...Node Knockout this weekend, break, CouchCamp, JSConf.eu and then Android Only. mad h4xx0r!n" -- xnoÉ¹ÇÊ uÉÄ±É¹q. http://twitter.com/brianleroux/status/22120263204
[21:20] hpoydar has joined the channel
[21:20] joemccann: sh1mmer: you coming to Amsterdam b4 jsconf.eu?
[21:21] joemccann: wait, ur in nyc then, right?
[21:21] sh1mmer: joemccann: nah
[21:21] sh1mmer: joemccann: I'm in ATL
[21:21] sh1mmer: NYC after JSConf
[21:21] joemccann: booooo!
[21:21] sh1mmer: sorry
[21:21] sh1mmer: you know I want to
[21:21] sh1mmer: but it just didn't work out that way this year
[21:21] joemccann: for sure, ur liver will thank u later
[21:22] benburke_ has joined the channel
[21:23] wink_ has joined the channel
[21:23] overra has joined the channel
[21:23] sh1mmer has joined the channel
[21:23] dnolen_ has joined the channel
[21:24] aliem has joined the channel
[21:25] pzich has joined the channel
[21:26] dnolen_ has joined the channel
[21:27] _announcer: Twitter: "connect-auth 0.1.3 now lets you write strategies that don't require session middleware http://bit.ly/bSqjff #nodejs yay! :)" -- Ciaran Jessup. http://twitter.com/ciaran_j/status/22120840009
[21:29] dnolen has joined the channel
[21:31] dnolen has joined the channel
[21:32] twoism has joined the channel
[21:32] pzich has joined the channel
[21:33] dnolen has joined the channel
[21:36] vnguyen has joined the channel
[21:41] _announcer: Twitter: "nodeJS, server side javascript http://ff.im/pIbRU" [it] -- Pierpaolo Follia. http://twitter.com/madchicken/status/22121759646
[21:42] satori_ has joined the channel
[21:46] hpoydar has joined the channel
[21:47] dgathright has joined the channel
[21:54] deepthawtz has joined the channel
[21:56] JimRoepcke: the JSON.stringify corruption bug samsonjs and I have been tracking down - we haven't been able to reproduce it on Node 0.1.99 or 0.1.100, but we can on 0.1.101, 0.1.104 and 0.2
[21:56] tpryme has joined the channel
[21:56] admc has joined the channel
[21:56] JimRoepcke: i'm looking at the V8 diffs between those versions and haven't seen anything that stands out yet :(
[21:57] wink_: yikes, what sort of corruption are you seeing?  malformed json?
[21:57] tuxsbro has joined the channel
[21:58] JimRoepcke: yes, after a random number of requests through node, well see JSON.stringify({anything: null}) get return:
[21:59] JimRoepcke: '{"anything": \002\000\000\000}'
[21:59] JimRoepcke: sorry, not literally
[21:59] eazyigz has joined the channel
[22:00] JimRoepcke: it actually returns '{"anything": ' then the byte value 2 then 3 null bytes then '}'
[22:01] Aria: Sounds a bit like a corrupt string.
[22:01] wink_: niceee, can you reproduce it easily?  i wouldnt mind helping hunt for it if you've got a simple script i can repro it with
[22:01] JimRoepcke: and of course we're not actually calling JSON.stringify on {anything: null} but on an arbitrary JavaScript object that has properties that are nuull
[22:01] JimRoepcke: we haven't been able to isolate a test case :(
[22:01] dantalizing has joined the channel
[22:01] JimRoepcke: but we can reproduce it in our code base easily enough using ab
[22:01] JimRoepcke: just throw enough requests at it and eventually it does it
[22:01] mostlygeek has joined the channel
[22:02] JimRoepcke: we're working towards isolating it, but we also wanted to see if we could find a version of node where it worked
[22:02] wink_: well if its corruption, even though its working, it could still be breaking, just differently
[22:02] JimRoepcke: our dev boxes had been running 0.1.99 or 0.1.100 for quite a while, we noticed it when we provisioned servers running 0.1.104 and then 0.2
[22:02] rauchg_: JimRoepcke: are you sure it's not a concurrency issue ?
[22:03] rauchg_: what are you writing the json to ?
[22:03] mostlygeek has joined the channel
[22:04] samsonjs: rauchg_: we usually send it out via http, response.end(json)
[22:04] rauchg_: i see 
[22:04] kriszyp_ has joined the channel
[22:04] samsonjs: rauchg_: we get the same result if we log to stdout too
[22:04] rauchg_: i might have ran into this too 
[22:04] samsonjs: oh interesting!
[22:04] nex3 has joined the channel
[22:04] rauchg_: in my case it was associated with high concurrency, maybe that's why you only get it through `ab`
[22:04] mostlygeek_ has joined the channel
[22:04] samsonjs: oh, we get it if we just use the app for a while too
[22:04] mostlygeek_ has joined the channel
[22:05] JimRoepcke: low low load even
[22:05] nex3: Is there a way to uninstall an "npm link"-ed package?
[22:05] rauchg_: low load too ? :/
[22:05] samsonjs: and once the node process is in that bad state all calls to JSON.stringify fail
[22:05] rauchg_: interesting problem :D
[22:05] JimRoepcke: yes even that unfortunately ;)
[22:06] JimRoepcke: samsonjs: they don't fail they just return corrupted results :)
[22:06] JimRoepcke: i mean it doesn't throw an exception
[22:06] tuxsbro has joined the channel
[22:06] mostlygeek has joined the channel
[22:06] samsonjs: JimRoepcke: yes, sorry. corruption not failure.
[22:07] _announcer: Twitter: "@romefort e.g. today I listened some music from http://radioplz.com/#frisky  #nodejs #discovery  #serendipity" -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22123441795
[22:07] mostlygeek_ has joined the channel
[22:07] wink_: does the corruption occur via node_g as well?
[22:07] benburke_ has joined the channel
[22:07] wink_: because you could always launch your app with node_g wait for the failure and then attach gdb
[22:07] maushu: frog?
[22:07] drewolson has joined the channel
[22:07] ryah: we really need to support strings for ports
[22:08] ryah: in listen()
[22:08] drewolson: can anyone help me out with a simple (i think) vows question
[22:08] ryah: and connect()
[22:08] maushu: ryah, huh, why.
[22:08] JimRoepcke: wink_: haven't tried node_g!
[22:08] ryah: because sometimes they come from environ vars
[22:08] maushu: parseInt fixes everything. xD
[22:08] ryah: and it's confusing to turn it to integer
[22:08] maushu: ...true.
[22:08] wink_: jimt: fwiw, that'd be my next move....hopefully it'll start acting a fool then you should be able to attach gdb and get some breakpoints set in v8
[22:09] maushu: ryah, does ipv6 work?
[22:09] JimRoepcke: stepping through V8 sounds like a great fun
[22:09] ryah: maushu: in node? yes
[22:09] mostlygeek_ has joined the channel
[22:10] mostlygeek__ has joined the channel
[22:10] Dmitry has joined the channel
[22:10] bradleymeck: Number(process.env.x)?
[22:10] mostlygeek_ has joined the channel
[22:11] maushu: ryah, there is this: http://github.com/ry/node/blob/master/lib/net.js#L858
[22:11] ryah: maushu: yeah- doesn't seem to work correctly though
[22:11] maushu: Hmm.
[22:12] wink_: JimRoepcke: its not too terrible, not the best though ;)
[22:12] maushu: Yeah, if files start with numbers.
[22:12] wink_: luckily , stringify should be relatively isolated
[22:12] Ori_P has joined the channel
[22:12] EyePulp has joined the channel
[22:13] bradleymeck: is number faster than parseInt?
[22:14] maushu: Don't think so.
[22:14] mattly has joined the channel
[22:14] wink_: JimRoepcke: it looks like most of stringify is implemented in js :<
[22:14] _announcer: Twitter: "good intro to Jake http://bit.ly/anyXhn #nodejs #jake (http://nodeknockout.posterous.com/ seem a great blog for learn nodejs universe)" -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22123926674
[22:14] wink_: JimRoepcke: /deps/v8/src/json.js
[22:15] maushu: ryah, this would work better: function isPort (x) { return parseInt(x) == x; }
[22:15] bradleymeck: holy F parseInt is faster
[22:16] bradleymeck: but only on first iteration... mmm
[22:16] bradleymeck: cant have negative port though
[22:17] mostlygeek_ has joined the channel
[22:17] rauchg_: nor 0
[22:17] bradleymeck: sec ill write up a patch, is there a max port number?
[22:18] MikhX has joined the channel
[22:18] rauchg_: 65535?
[22:19] JimRoepcke: wink_: yeah but i think it eventually calls into serialize.cc
[22:19] sonnym has joined the channel
[22:20] _announcer: Twitter: "The #nodejs Daily is out - read this Twitter newspaper on http://paper.li/tag/nodejs (25 contributions today)" -- Christos Stathis. http://twitter.com/chstath/status/22124303564
[22:21] maushu: bradleymeck, don't forget the isPort fix.
[22:22] bradleymeck: its wiser to save that parse so im changing it some
[22:23] ben_alman has joined the channel
[22:23] drewolson: anyone with vows experience, any idea why this simple test is returning undefined as the code? https://gist.github.com/019a1b1e68bb441ea0b0
[22:24] _announcer: Twitter: "another great post on socket.io http://bit.ly/c5Pl6Q #nodejs #websocket #socket.io" -- RÃ©gis Gaidot. http://twitter.com/rgaidot/status/22124607409
[22:24] iganapolsky has joined the channel
[22:28] twoism has joined the channel
[22:29] bradleymeck: running the tests on the change
[22:29] maushu has joined the channel
[22:31] sechrist: me learning postgres after using mysql for years is giving me a headache
[22:31] aho has joined the channel
[22:32] JimBastard has joined the channel
[22:32] JimBastard: has anyone tried to use npm programatically? i.e. not calling it via terminal or child process. 
[22:32] _announcer: Twitter: "Server side rendering with YUI on Node.JS http://bit.ly/cr919V" -- Roberto Sebestyen. http://twitter.com/NoobTech/status/22125134873
[22:33] aubergine has joined the channel
[22:33] Tim_Smart has joined the channel
[22:36] JimBastard: i think http://github.com/isaacs/npm/blob/master/cli.js#L83 would do ya
[22:36] bradleymeck: a long time ago jim
[22:40] davidwalsh has joined the channel
[22:40] junkee[] has left the channel
[22:41] badaxx has joined the channel
[22:41] _announcer: Twitter: "tell me what I'm doing wrong? #nodejs #eventmachine http://bit.ly/d27e4D" -- Asim. http://twitter.com/chuhnk/status/22125708144
[22:41] badaxx: aloha! does fs.read read the file line-by-line or byte-wise?
[22:42] ctp has joined the channel
[22:42] bradleymeck: byte
[22:42] ashleydev: any one here using a queue server for their web app?
[22:42] sechrist: for modules not in npm, from a git clone, do I still have to manually move out the contents of lib? or is there some easier fashion now?
[22:43] sechrist: or does everybody literally just use a symlink
[22:43] ashleydev: i'm looking for one that allows me to set time based delays to events in a queue
[22:43] badaxx: can I read a file line-by-line?
[22:43] sechrist: ashleydev: I wrote one for a project I did but it's larely customized for my uses
[22:44] mattly has joined the channel
[22:44] ashleydev: sechrist: hmmm
[22:44] bradleymeck: uh oh, cant compile, darwin not declared O-o
[22:45] bradleymeck: sechrist, yes, node does not come with a package manager
[22:45] sechrist: well I know that but I was just curious if the lib subdirectory convention had been taken into consideration with require
[22:45] sechrist: eh oh well
[22:46] bradleymeck: no, index.js is respected, but lib is not part of spec
[22:46] victorstan has joined the channel
[22:51] pkrumins: hey creationix, i am building an authentication middleware based on cookies, do you have anything to say on this subject? Here is how it works - a user logs into the site, the server sets a cookie, the next time he comes back (say after a few days), he doesn't have to log in but gets authed by contents in the cookie.
[22:51] pkrumins: creationix: ah, and i am bulding it as connect middleware. forgot to mention that.
[22:51] creationix: pkrumins: yeah, that sounds like pretty standard session stuff
[22:52] creationix: you could look at connect-auto for some guadance
[22:52] creationix: I usually just implement it in my application and not as a middleware
[22:52] pkrumins: oic
[22:52] pkrumins: looking at connect-auto
[22:53] twoism has joined the channel
[22:53] sh1m has joined the channel
[22:54] kriszyp_ has joined the channel
[22:54] creationix: *connect-auth
[22:54] creationix: pkrumins: ^
[22:54] bradleymeck: lol, we need to get nodes tests to run async for some fun action
[22:55] SteveDekorte has joined the channel
[22:55] pkrumins: creationix: yep, thought so
[22:59] Akufen has joined the channel
[22:59] Akufen has joined the channel
[23:01] badaxx: hey, did anyone ever experience node putting the output of e.g. "node server.js" into the server.js file?
[23:01] sechrist: creationix: is your postgres module "stable" to you?
[23:01] sechrist: like can I use it in a project that won't be dead in a few months?
[23:01] Frans-Willem: sechrist: I highly advise against using that module, if you must, take aurynn's fork
[23:02] bradleymeck: badaxx not without redirecting output
[23:02] sechrist: It looks like MySQL is more mature all around in Node at this point
[23:02] creationix: sechrist: my postgres module is very active
[23:02] badaxx: so this is a bug? :/
[23:02] creationix: Frans-Willem: any chance we can merge all three branches
[23:03] sechrist: also just out of curiosity, does it abstract query building or can I just send a string?
[23:03] sechrist: I haven't used it yet
[23:04] lachlanhardy has joined the channel
[23:04] siculars has joined the channel
[23:04] Frans-Willem: sechrist: It does abstract query building, but the current version is slightly broken with that (injection possible)
[23:04] creationix: sechrist: my current version does both
[23:04] creationix: the query builder is on top of the string sender
[23:04] aurynn: Frans-Willem, I haven't pushed my fork up yet
[23:04] aurynn:  :(
[23:04] bradleymeck: badaxx, im thinking you are doing something to cause that
[23:04] Frans-Willem: creationix: Did you fix the sql_escape bugs I pointed out yet ?
[23:04] creationix: I plan on removing the query builder into a layer on top
[23:04] aurynn: I hope to tonight
[23:04] sechrist: wow this is a terrible day to start development on a project that needs postgres
[23:05] aurynn: creationix, go talk to MST
[23:05] sechrist: :(
[23:05] creationix: Frans-Willem: nope, I've been swamped with other things
[23:05] aurynn: sechrist, we're working on it!
[23:05] sechrist: I know :P
[23:05] Frans-Willem: sechrist: I'd go with ayrunns fork for now, and keep it updated, loads to come.
[23:05] Frans-Willem: sechrist: I've also got a module in the works if you're interested, might suit your better, but it's not as mature as postgres-js yet.
[23:06] sechrist: an injection doesn't scare me because it would likely be fixed before i'm able to reach production
[23:06] sechrist: since everything is so busy
[23:06] creationix: sechrist: well aurynn's branch does proper statement prepares
[23:06] Frans-Willem: sechrist: Look at http://github.com/creationix/postgres-js, http://github.com/aurynn/postgres-js, and http://github.com/Frans-Willem/node-PostgresClient, see which best suits your needs and preferences
[23:06] sechrist: excellent
[23:06] isaacs_mobile has joined the channel
[23:06] creationix: Frans-Willem's rewrite is a refactor of the code style and is a clean start
[23:07] aurynn: Okay, okay, let me push up
[23:07] sechrist: wooo, sample usage
[23:07] deadlyicon has joined the channel
[23:07] Frans-Willem: sechrist: There's been a lot of work on all those recently, and I believe they'll all be supported properly, so take your pick :)
[23:07] creationix: I hope to merge everything some time this month
[23:08] sechrist: I'd like to not choose mysql over postgres just because of today's state of drivers
[23:08] sechrist: that would make me cry
[23:08] Frans-Willem: sechrist: One thing to do keep in mind that the node-PostgresClient I wrote is really recent (talking 2 days old), so the API might fluctuate a bit (but this also means you can still give me feedback on it)
[23:08] sechrist: sounds like I need to go with auryns
[23:08] creationix: I know my API will change
[23:08] creationix: :)
[23:08] sechrist: so far
[23:09] creationix: aurynn's is an evolution of mine
[23:09] creationix: with more features
[23:09] sechrist: API changing doesn't scare me, there won't be 500k lines of code that actively use it before it stabilizes
[23:09] Frans-Willem: sechrist: Also, node-PostgresClient does pipelining (sending queries before others return), whereas I believe postgres-js doesn't atm
[23:09] creationix: sechrist: but yes, there will be a solid postgres driver based on this code some time in the near future
[23:09] isaacs has joined the channel
[23:10] creationix: Frans-Willem: oh, I pipeline, that's why I can't tie error events to the request that triggered them
[23:10] creationix: if I remember right at least
[23:11] Frans-Willem: creationix: You do? I believe last time I checked (~2 days ago?) the callbacks didn't have an error callback yet ?
[23:11] _announcer: Twitter: "@elazar you should use node.js, not PHP, for stuff like that :p" -- David Zuelke. http://twitter.com/dzuelke/status/22127686632
[23:11] Blackguard has joined the channel
[23:11] MikhX has joined the channel
[23:11] creationix: Frans-Willem: I added a placeholder for the error in the callback, but it's always null
[23:11] creationix: still using the global error event
[23:12] Frans-Willem: Ooooh, I think we're misunderstanding eachother :)
[23:12] aurynn: I associate errors by my queries not releasing the wire until after they're done.
[23:12] creationix: aurynn: exactely
[23:12] creationix: aurynn: that's what I think I need to do
[23:12] TangoIII has joined the channel
[23:13] Frans-Willem: creationix: Actually, in your port, you send a query, then queue any waiting, and send another on ReadyForQuery. Mine just sends them all in a batch, and only uses ReadyForQuery for finding out which callback to call.
[23:13] creationix: ahh, I see
[23:13] aurynn: I went against batching just due to concurrency and transactional possible-weirdness
[23:13] creationix: well, it's been many a moon since I've written real postgres-js code
[23:14] Frans-Willem: sechrist: Meh, honestly, I'd check them all out, look at the API, look at what they support, look at how the code fits in with your style (see if you'd be able to understand the code if you need to quickly fix something), and use that to decide :)
[23:15] Frans-Willem: aurynn: Out of curiosity, what kind of weirdness? (maybe I didn't take something into account)
[23:15] sechrist: I didn't mean to come in here and stirr everything up :)
[23:15] creationix: sechrist: no worries
[23:15] jimt has joined the channel
[23:15] aurynn: Frans-Willem, Using the concept of multiple concurrent sessions (say a webapp) each set of queries has to be isolated.
[23:16] bradleymeck: string port number patch is out
[23:16] bradleymeck: to the mailing list...
[23:16] aurynn: I'm thinking of doing something like a connection-object-that-isn't
[23:16] aurynn: that buffers the queries
[23:16] aurynn: and then they get put on the wire whenever.
[23:16] aurynn: as a transactional "block"
[23:16] rwaldron has joined the channel
[23:17] aurynn: which would let it scale nicely over multiple connections
[23:18] mattikus has joined the channel
[23:18] Frans-Willem: aurynn: Aaah, I indeed didn't take that into account. But you'd simply just have to make sure all queries are sent after one another, and you don't yield control to node or another function.
[23:18] Frans-Willem: Anyway
[23:19] Frans-Willem: I'm off to bed :)
[23:19] Frans-Willem: Good luck with your choice, sechrist
[23:19] sechrist: Thanks
[23:19] sechrist: I wish I could start a few weeks later
[23:21] jimt_ has joined the channel
[23:21] aurynn: which means you block
[23:21] _announcer: Twitter: "Wow, @reid, yeti looks great! Congrats! #node.js" -- Edward O'Connor. http://twitter.com/hober/status/22128409212
[23:21] aurynn: Which I didn't want to do
[23:21] aurynn: :)
[23:24] mjr__ has joined the channel
[23:24] maushu: ...forgot the debug argument...
[23:25] aurynn: Just pushed my postgres-js up.
[23:25] _announcer: Twitter: "Yeti from @reid: http://bit.ly/9PBHh6 This is really cool: Like testswarm, but less bullshit. #nodejs" -- â¾â¢âââ. http://twitter.com/izs/status/22128686165
[23:25] aurynn: The readme is out of date. Hmm.
[23:25] aurynn: I should fix that.
[23:26] jelveh has joined the channel
[23:27] aurynn: it supports ? replacement in the SQL query, so you can do SELECT * FROM blah WHERE id = ? and it'll map it over correctly.
[23:28] maushu: How about parameters.
[23:28] maushu: :3
[23:28] aurynn: it supports prepared statements.
[23:28] aurynn: real prepared statements :)
[23:28] maushu: Carry on.
[23:30] _announcer: Twitter: "Late night PHP, jQuery, Twitter OAuth, MySQL and node.js, how lovely. #sideproject" -- Tim Hastings. http://twitter.com/timhastings/status/22128980859
[23:30] rauchg_ has joined the channel
[23:30] _announcer: Twitter: "Just pushed up my postgres.js changes for node.js. Major inclusion: Proper prepared queries & bind parameters." -- ÊÉÉ¥s uuÊÉ¹nÉ. http://twitter.com/aurynn/status/22129031095
[23:35] badaxx has joined the channel
[23:35] pkrumins: is index.js a special node.js file for modules?
[23:36] sechrist: it's part of the require spec. require checks for an index.js if you give it a folder name
[23:37] creationix: kriszyp: I still have to laugh every time someone points me to this article http://www.sitepen.com/blog/2010/06/11/jsgi-vs-connect-for-node-middleware/
[23:37] pkrumins: sechrist: got it
[23:37] aurynn: so like __init__.py
[23:37] pkrumins: cool
[23:37] sechrist: stracing node gives an easy way to see how the require logic works
[23:38] creationix: kriszyp: "slow" is all relative right, I mean is 112K requests/second really "slow"?
[23:39] aurynn: Clearly it is.
[23:39] aurynn: ;)
[23:39] ajpiano has joined the channel
[23:40] pkrumins: 112K is like 'slow doooooooooooown'
[23:40] creationix: I do feel the article was misleading with statements like "Middleware delegation is over 3000% faster with JSGI than Connect"
[23:40] creationix: well, yeah a single function call is faster than 15 lines of code
[23:42] creationix: but overall 0.0004ms vs 0.00002ms?
[23:42] creationix: that's not a big deal
[23:43] creationix: anyway, I don't mean to rant, I was just hoping to chat with kriszyp, some of the other points in the article were perfectly valid and connect has since changed because of them
[23:43] _announcer: Twitter: "Awesome new x-browser testing framework written on top of Node.js by @reid http://bit.ly/aYkp0k" -- Tom. http://twitter.com/sh1mmer/status/22129898432
[23:45] badaxx_ has joined the channel
[23:47] mostlygeek_ has joined the channel
[23:51] mostlygeek_ has joined the channel
[23:51] Tobsn has joined the channel
[23:52] ezmobius has joined the channel
[23:53] _announcer: Twitter: "You know you're working with #nodejs when someone benchmarks your code and calls 112,000 http requests per slow!" -- Tim Caswell. http://twitter.com/creationix/status/22130540308
[23:53] ryah: req/slow
[23:53] ryah: the new metric
[23:53] creationix: oops
[23:53] creationix: hah
[23:54] kschzt has joined the channel
[23:54] kschzt: eefnin
[23:54] creationix: heck, I'd love to get 112k/s over a real network connection
[23:54] creationix: that would be amazingly fast
[23:55] kschzt: those of all of you SF heads, you should take time tomorrow:
[23:56] badaxx_: http://refactormycode.com/codes/1420-node-js-calculating-total-filesize-of-3-files
[23:56] _announcer: Twitter: "Going to spend some time with NodeJS, MongoDB, and ExpressJS tonight. #javascript #ftw" -- davidwalshblog. http://twitter.com/davidwalshblog/status/22130746017
[23:56] creationix: badaxx_: yikes
[23:56] creationix: use Step!
[23:56] kschzt: and go and see http://twitter.com/jboner present Akka at Twitter tomorrow
[23:56] kschzt: free and open, so go there
[23:56] mjr__: badaxx_: You can combine exists and stat right?
[23:57] mjr__: badaxx_: like just only do stat?
[23:57] badaxx_: creationix: can you post me a refactored code?
[23:57] creationix: badaxx_: sure
[23:57] badaxx_: mjr__: okay thats true.. but I still have this tree
[23:58] mjr__: it is a lot less painful if you remove those 2 extra layers.
[23:58] mjr__: wait, 3 layers.
[23:58] creationix: badaxx_: what's the goal of the code?
[23:58] badaxx_: creationix: I'm doing partial downloads with 3 connections and want to get the current total filesize
[23:58] badaxx_: creationix: so sth like a progress bar
[23:58] creationix: ok
[23:58] mjr__: Yeah, just 3 nested stats does it.
[23:59] mjr__: kschzt: is this a twitter event?
[23:59] Tobsn: found something interesting
[23:59] kschzt: mjr__, guess so, yes
