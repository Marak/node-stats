[00:00] xla has joined the channel
[00:00] isaacs: micheil: i've never heard that
[00:00] quirkey has joined the channel
[00:00] kgf: micheil: only if you were referencing something.Something multiple times, presumably
[00:01] isaacs: micheil: yeah, what kgf said
[00:01] micheil: kgf: yeah
[00:01] micheil: like stream.Stream vs Stream
[00:01] jashkenas has joined the channel
[00:01] skohorn has joined the channel
[00:03] mikeal1 has joined the channel
[00:03] Tim_Smart: ryah: What is a ByteArray? http://code.google.com/p/v8/source/browse/trunk/src/heap.cc#2365
[00:05] davidascher has joined the channel
[00:05] [[zz]] has joined the channel
[00:05] Nohryb has joined the channel
[00:07] _announcer: Twitter: "1. node.js | 2. WebSockets | 3. CSS preprocessors | 4. Web Workers | 5. OAuth # this is the new web" [es] -- Luis  de Jesus. http://twitter.com/lucks17/status/27082711335
[00:07] davidwalsh has joined the channel
[00:07] Tim_Smart: ryah: Also http://www.google.com/codesearch/p?hl=en#W9JxUuHYyMg/trunk/src/objects-inl.h&q=ByteArray%20package:http://v8%5C.googlecode%5C.com&l=1947
[00:10] ben_alman has joined the channel
[00:10] mikeal1: Tim_Smart: it's part of the WebGL spec
[00:10] cloudhead has joined the channel
[00:10] Tim_Smart: mikeal1: Yeah I know that much, but can we use them today?
[00:11] zemanel_ has joined the channel
[00:11] mikeal1: it's a binary datatype for javascript that you need for doing OpenGL stuff
[00:11] mikeal1: i think we do
[00:11] Tim_Smart: mikeal1: Nope, we allocate outside the heap
[00:11] mikeal1: i think we use that code or something
[00:11] _announcer: Twitter: "Nice little web app for designers: Draw on any webpage in the browser. http://markup.io/ #node.js" -- Jason Melgoza. http://twitter.com/jasonmelgoza/status/27083088330
[00:12] MobileSidnicious has joined the channel
[00:12] Tim_Smart: mikeal1: http://github.com/ry/node/blob/master/src/node_buffer.cc#L171-175
[00:13] creationix has left the channel
[00:13] _announcer: Twitter: "VERY successful #nodejs and #socket.io test. can't wait till this hits production." -- Dan Panzarella. http://twitter.com/dpanzarella/status/27083270734
[00:15] Tim_Smart: I think announcer needs more rate limiting.
[00:15] ryah: Tim_Smart: ByteArray is an internal thing
[00:17] jperras has joined the channel
[00:18] micheil: ryah: would it be wise to have an official announcement on the mailing list about the sys -> util migration
[00:18] Prometheus has joined the channel
[00:19] micheil: as well as a patch for 2.X to add a symlink of sys -> util
[00:19] micheil: (I'm not sure if that's possible though)
[00:19] sprout has joined the channel
[00:21] ryah: a backport for 2.x would be nice
[00:21] ryah: gtg
[00:22] niko has joined the channel
[00:24] radiofreejohn has left the channel
[00:24] Gurpartap has joined the channel
[00:30] threeve has joined the channel
[00:33] banjiewen_ has joined the channel
[00:37] Viriix has joined the channel
[00:39] Mikushi1 has joined the channel
[00:40] dbathurst_ has joined the channel
[00:42] _announcer: Twitter: "Message me if you want to see a preview of my [barely] secret project. Plenty of html5/javascript/node.js/websockets. ;-) #dontmissout #cool" -- Justin Vaillancourt. http://twitter.com/jvaill/status/27086807926
[00:42] rkieffer has joined the channel
[00:43] ryah: tell me what the syntax error is here:
[00:43] ryah: http://s3.amazonaws.com/four.livejournal/20101011/node_natives.h
[00:43] bpadalino: oh god it's quiz time
[00:43] ryah: i'm getting default/src/node_natives.h:58: error: braces around scalar initializer for type âconst char*â
[00:43] rkieffer: Is there a (simple) way to detect if a file is run from the command line .vs. being required?
[00:44] rkieffer: e.g. I'd like to be able to run some test code if a file is launched explicitely, but only in that case.  It'd be convenient to be able to add something like function __main() {/* run test code */} to the file.
[00:45] ryah: (line number isn't matching, necessarally)
[00:46] ako has joined the channel
[00:46] _announcer: Twitter: "I have a strong desire to write XMPP libs in node.js, java, and golang. Then I remember I can barely keep up on maintaining my Python lib." -- fritzy. http://twitter.com/fritzy/status/27087536621
[00:48] niko has joined the channel
[00:49] jperras has joined the channel
[00:50] herbySk has joined the channel
[00:51] twoism has joined the channel
[00:53] rkieffer: nm. "if (__filename == process.argv[1])" works
[00:53] JimBastard_ has joined the channel
[00:54] Tim_Smart: ryah: Interesting, all the braces matched up.
[00:54] Tim_Smart: Vim has trouble rendering everything though.
[00:54] bpadalino: ryah: i can't get anything with using numeric constants for char *'s to work
[00:55] bpadalino: i also get a deprecated conversion from string to char * warning ..
[00:55] _announcer: Twitter: "27 10 node.js http://atnd.org/events/8756 drinking party in Shibuya" [ja] -- Daisuke Horie. http://twitter.com/dice/status/27088996088
[00:57] jperras has joined the channel
[00:57] dilvie: What is "this" in the module scope?
[00:58] Tim_Smart: dilvie: exports
[00:58] dilvie: Thanks Tim... trying to read somebody else's code. =)
[00:59] bpadalino: ryah: using strings as "\xAA\xBB\xCC" for the array seems to make things much happier
[00:59] davidascher has joined the channel
[00:59] bpadalino: g++ has the warning for deprecated string -> char * conversion, but gcc seems cool with it
[01:00] pengwynn has joined the channel
[01:01] dohtem has joined the channel
[01:01] dohtem has joined the channel
[01:04] davidwalsh has joined the channel
[01:06] sudoer has joined the channel
[01:06] gerred has joined the channel
[01:06] breccan has joined the channel
[01:08] _announcer: Twitter: "node.js Hey hot, I wish like to try soon. http://d.hatena.ne.jp/koichik/20100918" [ja] -- _y_u_y_a. http://twitter.com/pypupypa/status/27090080434
[01:09] mbrochh has joined the channel
[01:09] jacobolus has joined the channel
[01:10] langworthy has joined the channel
[01:11] isaacs: we need some fuse bindings for nodejs
[01:11] isaacs: it'd be rad to write file systems in node.
[01:12] Yuffster has joined the channel
[01:13] cloudhead has joined the channel
[01:13] steadicat has joined the channel
[01:14] niko has joined the channel
[01:15] _announcer: Twitter: "Got no answer to this one earlier: any best practices for *generating* (versus parsing) #XML from #nodejs?" -- Matthew Turland. http://twitter.com/elazar/status/27090671386
[01:16] roger_raymond has joined the channel
[01:16] mikeal1 has joined the channel
[01:16] micheil: Tim_Smart: hey, did you end up testing a full C websocket parser?
[01:17] Tim_Smart: micheil: Sorta. Calling functions and making buffers in C++ is really slow.
[01:17] SubStack: annoyance: expresso -c only works if libs are in lib/, not .
[01:17] Yuffster has joined the channel
[01:17] michael_ruddy has joined the channel
[01:18] michael_ruddy: Hey dudes
[01:18] Tim_Smart: SubStack: I usually set up a Makefile with a test task.
[01:18] Tim_Smart: expresso -I lib --serial test/*.test.js is the runner.
[01:18] SubStack: -c is for coverage, which is only something I care about occasionally
[01:18] Tim_Smart: Oh right.
[01:19] apage43 has left the channel
[01:19] antono has joined the channel
[01:19] _announcer: Twitter: "Web Worker tapje in IE, a good feature would be. nodejs waiting for the day .. that is associated with http://www.whatwg.org/specs/web-workers/current-work/" [ko] -- nanhapark. http://twitter.com/nanhapark/status/27091077565
[01:19] bradleymeck has joined the channel
[01:19] softdrink has joined the channel
[01:20] michael_ruddy: If someone has a sec to give me feedback on my startup project I would be very thankful. It's at http://skanr.com, thanks in advanced.
[01:20] softdrink1 has joined the channel
[01:20] apage43 has joined the channel
[01:20] boaz_ has joined the channel
[01:21] tav has joined the channel
[01:22] AAA_awright: Can Nodejs authenticate users with PAM, anyone know?
[01:24] _announcer: Twitter: "@ Outsider__ nodejs see you&#39;re interested in two minutes. Hello. ^ ^" [ko] -- nanhapark. http://twitter.com/nanhapark/status/27091524248
[01:24] niko has joined the channel
[01:24] softdrink has joined the channel
[01:26] Aria has joined the channel
[01:27] AAA_awright: How does one sugguest I implement authentication?
[01:28] micheil: Tim_Smart: who says you need to create Buffer's in C++?
[01:28] micheil: just memcopy on write
[01:28] micheil: you already have a Buffer
[01:28] EyePulp has joined the channel
[01:28] micheil: surely?
[01:28] Tim_Smart: micheil: Because you need to alloc the buffer.
[01:28] micheil: oh. yeah
[01:29] Tim_Smart: And there isn't a way to manipulate memory pointers in ecmascript.
[01:29] dbathurst has joined the channel
[01:29] micheil: hmm, is it possible to make C++ creation of Buffer's faster?
[01:30] Tim_Smart: Hmm not really.
[01:30] Mikushi1 has joined the channel
[01:30] hassox has joined the channel
[01:31] micheil: it should be.
[01:32] micheil: what about doing:
[01:32] micheil:   char *data     = Buffer::Data(args[0]->ToObject());
[01:32] micheil: is that slow?
[01:32] sprout has joined the channel
[01:33] Tim_Smart: http://github.com/ry/node/blob/master/src/node_buffer.cc#L109-123
[01:34] micheil: meaning?
[01:34] micheil: I'd say that's not slow. But I could be wrong.
[01:35] Tim_Smart: The only overhead is the check for indexed properties, and the unwrap.
[01:35] cloudhead has joined the channel
[01:36] Evet has joined the channel
[01:37] micheil: so it's fast, right?
[01:37] Tim_Smart: Well the slow bit the buffer creation.
[01:37] Tim_Smart: *is the
[01:37] Tim_Smart: Which is why we made fast buffers :)
[01:38] _announcer: Twitter: "25 more stories of the 12th season. Using the online game Node.js. What have we come here, you feel it. http://bit.ly/b9qQBl" [ja] -- Atsushi Nakatsugawa. http://twitter.com/moongift/status/27092819739
[01:38] pydroid has joined the channel
[01:39] micheil: Tim_Smart: so, if I just do the state machine + parsing, then just emit "data" events or something like that, then that should be faster
[01:39] Tim_Smart: micheil: Problem is, as soon as you put a .toString() in there somewhere, is becomes a lot slower than strings.
[01:40] Tim_Smart: So maybe just use strings for utf8 message ;)
[01:40] _announcer: Twitter: "I'm excited that #nodejs' Buffer may be getting pushed down into V8. Efficient binary data handling on the client-side of an XHR? Rad." -- Edward O'Connor. http://twitter.com/hober/status/27092994641
[01:40] micheil: like, I can still do all the heavy buffer work in js land
[01:40] Tim_Smart: micheil: With that c++ code I showed you earlier, no buffer work is done in C++ land.
[01:41] Evet: nodejs isnt yet enough to replace nginx?
[01:41] micheil: but, at the same time, I can do the heavy parsing of data in C, where it's quicker
[01:41] Tim_Smart: micheil: Yes.
[01:41] Evet: *stable
[01:41] micheil: Tim_Smart: so, essentially, I'm doing similar to what you're doing in C, but slightly differently
[01:41] Tim_Smart: micheil: And don't call callback's in c++ as well, try to return directly.
[01:42] micheil: for example: emit("start", idx)
[01:42] Tim_Smart: Function calls are slow it seems.
[01:42] micheil: could be the start of a packet
[01:42] micheil: emit("end", idx) could be the end of a packet
[01:42] _announcer: Twitter: "you might say you can use node.js fugue" [ja] -- yutaka matsubara. http://twitter.com/mopemope/status/27093182382
[01:42] micheil: then I could just slice both
[01:43] micheil: Tim_Smart: any stats on EventEmitter's in C land?
[01:43] Tim_Smart: nope.
[01:43] danielzilla has joined the channel
[01:43] Tim_Smart: I don't even think node itself uses them.
[01:44] Tim_Smart: Actually, it does.
[01:44] _announcer: Twitter: "500 yen or worry about whether Node.js premium member be too concerned about the game made." [ja] -- id:slowbirds. http://twitter.com/slowbirds/status/27093373356
[01:45] michael_ruddy: Hey guys, I think my startup can be useful to some folks here. I could use some input if you have a sec, thanks! http://skanr.com/
[01:46] JimBastard_: heard you the first time michael_ruddy 
[01:46] JimBastard_: try the mailing list with a quick write up, you might get better feedback
[01:46] JimBastard_: also, on your site, i didnt see anywhere mentioning node
[01:46] JimBastard_: maybe i missed that part
[01:46] JimBastard_: are you releasing any of your tech stack as open-source?
[01:47] bentruyman has joined the channel
[01:48] Mikushi1 has left the channel
[01:48] michael_ruddy: Good call, I'm using node for the backend so I can handle many quick requests. I don't have a definitive plan yet but open-sourcing it is a possibility.
[01:49] JimBastard_: well, i think you'll find most of the people here will find open-source node software useful.
[01:50] JimBastard_: do a write up of what your service does (perhaps with an emphasis of how to use it in conjunction with node) and post that to the mailing list. 
[01:50] JimBastard_: i read the copy on your site and didnt really get it, but then again im pretty dumb
[01:50] niko has joined the channel
[01:51] micheil: Tim_Smart: node doesn't use node_events.h
[01:51] michael_ruddy: No I need to work on the delivery, I'll take you up on your advice tho, thanks.
[01:51] cferris has joined the channel
[01:51] JimBastard_: the design looked good for the site though!
[01:51] gerred: curious: why use express.js over say, sinatra?
[01:51] _announcer: Twitter: "@melgray How often are you using node.js?" -- Robby Colvin. http://twitter.com/geetarista/status/27093874987
[01:51] JimBastard_: gerred: caus its node?
[01:51] michael_ruddy: ha thanks, credit to weethemes
[01:52] micheil: because you can, and you think javascript is more awesome then ruby?
[01:52] gerred: JimBastard_: i'm having the issue where I fal back to ruby. ;)
[01:52] Tim_Smart: micheil: It is used in stat watcher http://github.com/ry/node/blob/master/src/node_signal_watcher.h#L6
[01:52] JimBastard_: gerred: use the best tool for the job
[01:52] gerred: where are you finding node is the best tool for the job out of curiousity?
[01:52] micheil: ah, missed that there Tim_Smart 
[01:52] JimBastard_: gerred: webservices
[01:53] micheil: realtime stuff
[01:53] micheil: fun
[01:53] JimBastard_: gerred: i can role out a powerful api very quickly. if i need some browser real-time, its easy as well
[01:53] JimBastard_: like micheil  says
[01:53] gerred: ah ha
[01:53] JimBastard_: if you only need sinatra, use sinatra 
[01:53] gerred: using socket.io i assume?
[01:53] micheil: no.
[01:54] micheil: using node-websocket-server.
[01:54] JimBastard_: lol micheil 
[01:54] stephenjudkins has joined the channel
[01:54] micheil: why? because I'm totally biased towards my own code.
[01:54] gerred: haha
[01:54] gerred: hey if it makes my life happy
[01:54] gerred: i'm not at the point with JS or node that I'm writing my own modules.
[01:54] micheil: ACTION is.
[01:54] JimBastard_: i would assume socket.io is gonna be more noob friendly
[01:55] JimBastard_: since its higher level?
[01:55] micheil: I also like deleting code, as the last few patches to node that I've added do.
[01:55] gerred: eh I'll dig into it.
[01:55] micheil: JimBastard: yeah
[01:55] gerred: I'm still reading JS: the good parts. ;)
[01:55] xdamman_ has joined the channel
[01:55] micheil: gerred: never read it. I know what's good though.
[01:55] dilvie: ls
[01:55] dilvie: oops
[01:55] dilvie: =)
[01:55] micheil: not happening.
[01:55] gerred: i like the idea of server side js
[01:56] gerred: is this on npm micheil?
[01:56] micheil: yes
[01:56] micheil: websocket-server
[01:57] dilvie: gerred: the most difficult aspect of using node is that you have to roll your own solutions to a lot of common problems at this stage.
[01:57] dilvie: That is changing very quickly, though.
[01:57] saikat has joined the channel
[01:58] gerred: true.
[01:58] micheil: not really.
[01:58] micheil: there's not a whole heap of rolling your own needed now, depending on what you do.
[01:59] gerred: i figure I'm at a point where I'd have to be insane to try to ignore javascript's existence any longer.
[01:59] astrolin has joined the channel
[02:00] JimBastard_: gerred: at least you arent in denial
[02:00] JimBastard_: bad news everyone, javascript isnt going anywhere anytime soon
[02:00] gerred: plus...
[02:00] ossareh_ has joined the channel
[02:00] dilvie: JimBastard_: That's great news.
[02:00] JimBastard_: isnt going away*
[02:00] gerred: "hay guys I know server side javascript hire me"
[02:01] gerred: I totally get evented code, I do it with eventmachine....it's just applying it to JS. ;)
[02:01] dilvie: gerred: Yeah, that line doesn't work too well, yet.
[02:01] dilvie: employers are just beginning to discover Node.
[02:01] saikat: in javascript there isn't a way to make a variable that points to, in the pointer world, the equivalent of a reference to another variable rather than the value pointed to by another variably right?  or any trick that can achieve something similar?
[02:01] micheil: JavaScript is evented code.
[02:02] micheil: there's no applying involved.
[02:02] saikat: basically, if i have arr = ["a", "b"]; x = arr[1];  arr[1] = "foo";, arr[1] is "foo" and x is "b" but is there a way to do the equivalent of x = &arr[1] in javascript so when arr[1] changes, x is also "foo"
[02:02] gerred: micheil: rather, I learned it in Ruby.
[02:02] gerred: micheil: reducing my barrier to entry.
[02:02] micheil: yeah. but the barrier in EM is massive.
[02:02] gerred: true.
[02:03] SubStack: EM is clunky too if you need to pass varibles into your classes
[02:03] SubStack: that is a problem generally with ruby code, confusing as fuck scoping
[02:03] dguttman_ has joined the channel
[02:04] MikhX has joined the channel
[02:05] gerred: very true
[02:05] gerred: whereas with js the scoping is fairly strict and obvious.
[02:05] SubStack: yeah, it's just closures everywhere
[02:05] micheil: also, why do we always have these language X vs javascript or tech X verse node.js discussions?
[02:06] SubStack: it's really bad in ruby when you have a nested class but you can't get at the parent block's local vars
[02:06] SubStack: micheil: therapy
[02:06] gerred: micheil: i don't think its vs., I'm just struggling to get to that point where I know node.js is the tool for a certain job.
[02:08] saikat_ has joined the channel
[02:08] micheil: gerred: just try it. If it fails, so be it.
[02:08] softdrink has joined the channel
[02:08] micheil: but seriously. It's not likely to fail.
[02:08] _announcer: Twitter: "Creating voice, SMS, IM and Twitter apps using Node.js and Tropo http://bit.ly/db5hAc" -- Dan York. http://twitter.com/danyork/status/27095476481
[02:08] onar_ has joined the channel
[02:14] pedrobelo has joined the channel
[02:16] niko has joined the channel
[02:18] mAritz: so, how would i best unittest a webapp (besides testing the models)?
[02:19] _announcer: Twitter: "Experimental night with node.js lead to OAuth fun with the Twitter API and some WebSockets, but failed at the Streaming API, kept timing out" -- Bartek Ciszkowski. http://twitter.com/bartekci/status/27096764554
[02:20] jakehow has joined the channel
[02:21] techwraith has left the channel
[02:22] zooko has joined the channel
[02:30] micheil: ryah: ping.
[02:30] isaacs has joined the channel
[02:30] isaacs: micheil: yeah, i'm thinking python can suck it
[02:31] micheil: heh
[02:31] micheil: isaacs: y'know much on fast buffers?
[02:31] isaacs: a bit.  what's up?
[02:31] micheil: like, is it just the one buffer allocated?
[02:32] micheil: say I want new Buffer(30), that would be a fast buffer, because it's < 8*1024
[02:32] micheil: if I allocated another new Buffer(30)
[02:32] isaacs: they'd have the same parent, and teh second one would be offset by 30 bytes
[02:32] micheil: then the second buffer and first buffer would both be in the one buffer
[02:32] micheil: yeah
[02:32] isaacs: ie, the first would be 0-30 and the second would be 31-60, in the SlowBuffer parent
[02:33] micheil: yeah
[02:33] micheil: thinking if that can help me in the quest for a faster websocket parser
[02:33] isaacs: when it runs out of space, it throws it away and starts using another one
[02:33] isaacs: well, the thing is, you should just magically start being faster now.
[02:33] isaacs: :)
[02:33] isaacs: the more you allocate small buffers, the more the increase
[02:34] dpritchett has joined the channel
[02:34] Tim_Smart: If the pool size is too small, Buffer.poolSize = 1024 * 1024 etc.
[02:35] robotarmy has joined the channel
[02:36] micheil: yeah
[02:36] _announcer: Twitter: "Creating voice, SMS, IM and Twitter apps using Node.js and Tropo ...: I freely admit to being intrigued by all the... http://bit.ly/a0m6Nj" -- Old Mac Donald. http://twitter.com/twittafarm/status/27099707595
[02:37] Tim_Smart: ryah: That eio.h warning is start to drive me crazy...
[02:37] Tim_Smart: *starting
[02:38] _announcer: Twitter: "Twitter: Twitter Streaming API + node.js + Appcelerator Titanium = Real-time tweet map |  @ecito:  http://bit.ly/bQrd0A" -- fury. http://twitter.com/__fury/status/27099844680
[02:38] twoism has joined the channel
[02:39] stephenjudkins has joined the channel
[02:39] micheil: isaacs: npm supports make scripts, right?
[02:39] isaacs: micheil: yeah
[02:39] isaacs: npm help json
[02:39] micheil: k
[02:39] isaacs: search for "scripts"
[02:39] nuba has joined the channel
[02:39] isaacs: or npm help scripts for even more inf
[02:39] isaacs: info
[02:40] hzin has joined the channel
[02:41] niko has joined the channel
[02:42] micheil: isaacs: http://blog.ksplice.com/2010/07/building-filesystems-the-way-you-build-web-apps/
[02:42] micheil: isaacs: k, just thinking if it's worth implementing this stuff with C or not.
[02:42] isaacs: micheil: well, really i want to implement everything in JS
[02:42] micheil: yeh
[02:42] isaacs: micheil: so i'm going to bind the entire fuse API to node
[02:43] micheil: isaacs: bind to it using?
[02:43] isaacs: micheil: well, C++ (mostly C, except for the v8 stuff)
[02:43] micheil: k
[02:43] micheil: I'd like to have part in, this sounds like fun
[02:43] isaacs: kewl :)
[02:44] isaacs: i'm actually looking into it as a way to test flaky filesystems.
[02:44] Tim_Smart: isaacs: Does fuse have its own event loop or anything?
[02:44] isaacs: Tim_Smart: not really.  it's not really for "real" filesystems, as far as i can tell ;)
[02:44] micheil: flaky filesystems>?
[02:44] isaacs: Tim_Smart: or rather, it doesn't matter.
[02:44] Tim_Smart: Or is it just a bunch of sys calls?
[02:44] isaacs: Tim_Smart: like, if your app is non-blocking, it'll be nonblocking
[02:44] Tim_Smart: Right.
[02:44] Tim_Smart: So not like GTK or anything?
[02:45] isaacs: Tim_Smart: no, it sorta hops in the middle, and routes those syscalls to your app.
[02:45] Tim_Smart: Right.
[02:45] isaacs: micheil: yeah, like if you read() a file that's got 1000 bytes in it, and you say "gimme 1000 bytes", and it only gives you 1 byte each time.
[02:45] isaacs: micheil: pathological
[02:45] mAritz: how do you guys test your node.js websites?
[02:45] micheil: ouch
[02:45] micheil: mAritz: I don't.
[02:45] mAritz: i looked at selenium and that looks like a pain in the ass :(
[02:46] Tim_Smart: mAritz: I test the tools I make them with.
[02:46] isaacs: micheil: not that this is common, but with a long enough event horizon, every hard drive's survival rate goes to zero
[02:46] micheil: (but then again, I don't test, unless it's a patch to node.js)
[02:46] isaacs: s/event/time/
[02:46] dilvie: Is there a caching module for express?
[02:46] isaacs: micheil: it's a hard thing to test for
[02:46] mAritz: and not the pages themselves? hm... i just really don't want to introduce regressions, because the site will grow more than anything else i've done so far. (if i find the time)
[02:47] isaacs: micheil: so, i really don't dig the python API.  it is very pythonic, and that's great, but node's should be more node-like
[02:47] isaacs: it should be guessable, because the fuse api mirrors the posix api so closely
[02:47] micheil: isaacs: yeah, but at any rate, I remember when reading that ksplice article, I was like, "wow. I want to do that in node.js"
[02:47] isaacs: kewl :)
[02:47] micheil: so, if you're up for doing it, I am.
[02:48] micheil: (pengwynn will tell you how much I say "yeah' it'd be cooler if it was node.js")
[02:48] micheil: :D
[02:48] isaacs: i think the pattern that works best in node is to bind at the C layer as low and tight as possible, even to the point of being obnoxious about it, and then wrap it in pretty js
[02:48] path[l] has joined the channel
[02:48] isaacs: just expose every function with teh minimum amount of v8 code possible
[02:48] mAritz: dilvie: you can use connect.cache (or express.cache if you want to keep it in express lingua, no difference though since express just uses the connect one ;) )
[02:49] micheil: isaacs: yeah
[02:49] dilvie: mAritz: Thanks. =)
[02:49] isaacs: the tricky bit here is that you have to create a bigass struct of object pointers when you mount, so i'll have to figure out how to pull that off of an object with methods
[02:49] micheil: man.. hitting disc when you what memory sucks balls.
[02:49] micheil: isaacs: and don't you mention those 8gbs.
[02:49] micheil: >_>
[02:49] isaacs: hehe
[02:50] isaacs: i was eating all 4GB with some vmware stuff.  even with 8, it's kinda slowish
[02:50] isaacs: but ram doesn't matter until you run out of it, right?
[02:50] micheil: 4 Gigs here, with 7 gigs in swap
[02:50] isaacs: yikes
[02:50] micheil: yeah
[02:50] MikhX_ has joined the channel
[02:50] micheil: safari using 1Gb of active ram
[02:50] micheil: (tonnes of stuff open)
[02:51] ysynopsis has joined the channel
[02:51] _announcer: Twitter: "Node.js future will be driven mainstream events like but I think server-side JavaScript is used in the future I can not imagine too many" [ja] -- nog. http://twitter.com/nog/status/27100824591
[02:51] micheil: isaacs: check that: http://drp.ly/quCq
[02:51] isaacs: youare in teh hurty ram plae
[02:51] isaacs: *place
[02:51] micheil: haha, yeah
[02:52] micheil: can't do much though. considering this is a nov. 09' macbook pro.
[02:52] dilvie: hmm.. I don't understand that last tweet at all. 
[02:52] dilvie: =)
[02:52] gerred: hmm
[02:52] micheil: I need to get a mac mini or something; do all the node.js dev on that.
[02:52] gerred: any method to reopen a closed websocket connection?
[02:52] micheil: gerred: no.
[02:52] micheil: gerred: you just create a new socket
[02:52] gerred: ah
[02:52] micheil: gerred: have a look at http://github.com/miksago/drano
[02:53] micheil: erm
[02:53] micheil: http://github.com/miksago/drano.js
[02:54] Tim_Smart: micheil: http://dl.dropbox.com/u/396394/screenshots/ubuntu-memoryusage.png ;)
[02:54] Tim_Smart: Mac is a memory hog, windows even more.
[02:54] micheil: ...
[02:55] micheil: Tim_Smart: I've literally got about 200 - 400 tabs open in safari.
[02:55] _announcer: Twitter: "Oh I get the feeling that node.js of memory should I use to see a millionaire" [ja] -- yutaka matsubara. http://twitter.com/mopemope/status/27101109163
[02:55] gerred: figured it out...and now I'm hooked on node.
[02:55] Tim_Smart: micheil: Oh...
[02:55] micheil: yeah.
[02:55] micheil: haha
[02:55] Tim_Smart: I'm always closing my tabs.
[02:56] mAritz: Tim_Smart: how's biggie-orm going? :)
[02:56] micheil: yeah, I don't
[02:56] hzin has joined the channel
[02:56] seangrov` has joined the channel
[02:56] Tim_Smart: mAritz: The orm is pretty good. A few things with associations need polishing.
[02:56] micheil: Tim_Smart: most stuff is 90Mb< Virtual memory
[02:56] Tim_Smart: Ah ok.
[02:57] mAritz: Tim_Smart: and documentation :D
[02:57] micheil: mAritz: pft. source code.
[02:57] micheil: :P
[02:57] mAritz: :D
[02:57] Tim_Smart: My largest process is firefox, which I only using for email (Googe Gears_
[02:57] Tim_Smart: *Google Gears
[02:58] mAritz: btw: does biggie-orm support custom functions in the models? like if i have a user model that needs something like if(user.checkPrivilege('admin'))
[02:59] micheil: Flash is ~500Mb virtual
[02:59] Yuffster has joined the channel
[02:59] micheil: Safari 1.8Gb virt.
[02:59] Tim_Smart: mAritz: Sure, just chuck them in the definition.
[02:59] micheil: then a bunch of other things at ~400Mb virtual
[02:59] mAritz: oh, okay. cool. :)
[03:00] mAritz: Tim_Smart: another question: does it use a specific keyspace? can i define one?
[03:00] Tim_Smart: Specific key space for the time being.
[03:00] Tim_Smart: ("assoc:", "index:", "id:", "view:")
[03:00] mAritz: ok, but not like connect-redis which just uses uuids as redis keys -.-
[03:01] _announcer: Twitter: "Hi .. @ nanhapark Yes Is gwansimjeongdoman. node.js Do you? Heh" [ko] -- Outsider. http://twitter.com/Outsider__/status/27101561337
[03:01] Tim_Smart: mAritz: Models use "model_name:id"
[03:01] mAritz: oh, no biggie:something:something? :(
[03:01] Tim_Smart: Nope.
[03:01] joshpeek has joined the channel
[03:01] mAritz: ACTION is a sad panda.
[03:01] Tim_Smart: That is what "select" is for ;)
[03:01] dipser_ has joined the channel
[03:02] mAritz: grml
[03:02] _announcer: Twitter: "But now, node.js What? * Tw in NS *" [ja] -- カトウ キミノリ. http://twitter.com/kimikato/status/27101666968
[03:02] mAritz: so the connection is exposed?
[03:02] Tim_Smart: Yeah, orm.db.client
[03:02] Tim_Smart: (I think)
[03:03] mAritz: And this months winner for worst tweet goes tooo... KIMIKATO! Congratulations!
[03:03] mAritz: btw, regarding virtual memory: right now java has > 2.3gb vm for 2 applications -.-
[03:04] TheEmpath has joined the channel
[03:06] micheil: isaacs: given cb is   Local<Function> cb = Local<Function>::Cast(cb_v);
[03:07] jwm has joined the channel
[03:07] CIA-36 has joined the channel
[03:07] isaacs: say what?
[03:07] niko has joined the channel
[03:07] micheil: then to get the result of calling a JS function, you'd do: Local<Value> result = cb->Call(args..)
[03:07] micheil: right?
[03:07] isaacs: yeah, i think so
[03:08] micheil: k
[03:08] isaacs: maybe cb.Call()
[03:08] isaacs: i always forget
[03:08] micheil: in which case fuse bindings may be piss easy
[03:08] isaacs: oh, yeah, it's a handle, so ->
[03:08] isaacs: the dicy bit seems to be the ObjectWrap stuff
[03:08] isaacs: but yeah, not rocket surgery
[03:09] micheil: hmm..
[03:11] meso has joined the channel
[03:11] micheil: yeah. this should be pretty easy to implement I think.
[03:11] richcollins has joined the channel
[03:11] Tim_Smart: micheil: Yeah its cb->Call(context, argc, arv);
[03:11] micheil: not sure on the ObjectWrap stuff
[03:11] sh1mmer has joined the channel
[03:11] micheil: maybe something to talk through with ryah?
[03:14] TheEmpath: hi
[03:14] TheEmpath: so node.js and oauth.... thoughts?  debtaes?  beef?  tacos?
[03:16] _announcer: Twitter: "@HunterLoftis have you seen some of the utility functions in Async.js? It's a nice complement to #nodejs. http://github.com/caolan/async" -- Corey Ballou. http://twitter.com/cballou/status/27102762552
[03:17] _announcer: Twitter: "wow, I like Jade (a haml descendant for node.js)." -- Giles. http://twitter.com/gilesgoatboy/status/27102859366
[03:18] jamesarosen has joined the channel
[03:18] _announcer: Twitter: "Is #nodejs was an animal, it'd be a cougar. For the speed and maturity." -- NodeCore. http://twitter.com/nodecore/status/27102988570
[03:20] Me1000 has joined the channel
[03:20] dilvie: anybody using CouchApp and node together?
[03:21] mbrochh has joined the channel
[03:22] TheEmpath: how about node.js and mongo?  thoughts on what to use?
[03:23] micheil: isaacs: I don't think HandleScope is an issue.
[03:23] _announcer: Twitter: "I',m a big fan of @changelogshow , #websockets, #node.js" -- Francisco Reyes. http://twitter.com/pacorro2000/status/27103310916
[03:24] HAITI has joined the channel
[03:24] HAITI has joined the channel
[03:24] dilvie: TheEmpath: npm install mongodb
[03:25] TheEmpath: what is that installing andw here can i find documentation of it?
[03:26] jamesarosen has joined the channel
[03:27] dilvie: TheEmpath: http://github.com/christkv/node-mongodb-native
[03:27] TheEmpath: nifty
[03:27] marshall_law_ has joined the channel
[03:30] meso_ has joined the channel
[03:33] niko has joined the channel
[03:37] andrewfff has joined the channel
[03:39] ben_alman has joined the channel
[03:46] murphy has joined the channel
[03:47] bradleymeck has joined the channel
[03:47] hassox_ has joined the channel
[03:47] _announcer: Twitter: "http://github.com/stephank/orona OMFG NODE.JS GAMES LOL #NODE.JS" -- HELLO I AM RUBY BOTS. http://twitter.com/elotente/status/27105242003
[03:47] murphy has joined the channel
[03:49] Tyler has joined the channel
[03:49] hassox__ has joined the channel
[03:50] codebudo has joined the channel
[03:52] quirkey has joined the channel
[03:52] TheEmpath: mongoose looks silly good
[03:53] codebudo: better than os x? 
[03:53] mAritz: mongoose also didn't have an update since end of august. also, last time i checked a lot did not work. (and the 26 open issues don't make a strong case for it either.)
[03:54] _announcer: Twitter: "GigGITy: http://github.com/creationix/node-git/blob/master/lib/git-fs.js # L310" [fil] -- Benjamin Truyman. http://twitter.com/bentruyman/status/27105746230
[03:56] sh1mmer: ryah: did you ever do anything with zeromq
[03:57] niko has joined the channel
[03:57] micheil has joined the channel
[03:58] murz has joined the channel
[03:58] TheEmpath: npm for mongoose is busted
[03:59] isaacs: TheEmpath: installs fine.  care to be more specific?
[03:59] jansc has joined the channel
[03:59] TheEmpath: making an issue now
[03:59] isaacs: if it's a mongoose bug, you should make it there
[04:00] matt_c: sh1mmer: I think the consensus was that making the 0mq bindings work well with libev wasn't as trivial as it might usually be.
[04:00] sh1mmer: ok
[04:00] TheEmpath: http://github.com/isaacs/npm/issues/issue/280
[04:00] TheEmpath: isaacs: http://github.com/isaacs/npm/issues/issue/280
[04:00] sh1mmer: last time I'd talked with Ryan he said he thought he had a way to do it, but that was a few weeks back
[04:00] isaacs: TheEmpath: don't install trees.
[04:00] isaacs: TheEmpath: install tarballs
[04:00] sh1mmer: ACTION is prepping code to do onna plane
[04:00] TheEmpath: then mongooses instructions are bad?
[04:01] isaacs: TheEmpath: probably
[04:01] TheEmpath: k
[04:01] isaacs: npm install mongoose <-- that works fine
[04:01] TheEmpath: k
[04:02] TheEmpath: looking good!
[04:02] TheEmpath: ty
[04:02] isaacs: np
[04:02] TheEmpath: ACTION loves this chan.
[04:02] mAritz: TheEmpath: biggie-orm is 10x better than mongoose, use it! :D
[04:03] TheEmpath: shameless promotion or scientific fact!?
[04:03] dilvie: what's biggie-orm?
[04:03] jwcooper: ^^
[04:03] TheEmpath: ACTION reviews the reaction of the crowd!
[04:04] jwcooper: TheEmpath: are you using mongoose off of master, or of the 1.x branch?  It looks like it's going through a re-write...significant changes between the two branches.
[04:05] twoism has joined the channel
[04:05] TheEmpath: npm install mongoose worked.  its using http://registry.npmjs.org/mongoose/-/
[04:05] mAritz: dilvie: biggie-orm is a fast fast fast fast redis orm
[04:05] TheEmpath: errr
[04:05] mAritz: TheEmpath: yep. i have written another redis orm before tim even started biggie-orm... i was pretty bummed about it. but biggie-orm is just better. :)
[04:06] TheEmpath: http://registry.npmjs.org/mongoose/-/mongoose-0.0.3.tgz
[04:06] TheEmpath: i mean
[04:06] mikeal1 has joined the channel
[04:07] bentruyman: are there any decent git libraries for node?
[04:07] _announcer: Twitter: "Reading the #nodejs docs revives those long lost eureka moments of when I first learned unix." -- Mike Repass. http://twitter.com/mdrcode/status/27106698345
[04:10] sh1mmer: I like Node it makes people happy.
[04:10] sh1mmer: Happiness is good.
[04:11] mAritz: indeed it does. :)
[04:12] bentruyman: sh1mmer: GO BACK TO YOUR BUDWEISER!
[04:12] sh1mmer: I HAVE NO BUDWEISER.
[04:12] sh1mmer: but I do have my self-repsect.
[04:12] sh1mmer: heh
[04:13] sh1mmer: This will become and in-joke. I'm sure I owe you a beer now.
[04:13] bentruyman: (budweiser is one of our clients, hehe) :-)
[04:13] Tim_Smart has joined the channel
[04:13] dnolen has joined the channel
[04:13] dilvie: Is there a good best practices doc for writing node modules?
[04:13] sh1mmer: bentruyman: I know. That's why I apologised for trolling on twitter.
[04:13] bentruyman: heh, okay
[04:13] TheEmpath: woooow ORM mongo
[04:13] TheEmpath: yaaay i wrote one of those in php once
[04:13] bentruyman: no, I'm a fan of Blue Moon myself ;-)
[04:13] TheEmpath: took me 3 days
[04:14] sh1mmer: dilvie: I haven't seen any, but what kind of suggestions are you looking for?
[04:14] mikeal1: and…… I'm drunk!
[04:14] TheEmpath: ^^
[04:14] sh1mmer: bentruyman: personally I like something IPA or dark like a Porter but it's good in a pinch
[04:14] mikeal1: 3 hour dinners are the best
[04:14] mikeal1: i'm just sick and tired of west board over-hopped insanity
[04:14] sh1mmer: mikeal1: are you counting stout as a meal?
[04:15] mikeal1: no, i went to Camino
[04:15] mikeal1: 3 courses and 5 cocktails
[04:15] dilvie: sh1mmer: I don't know.. just some basic introductory info with some common patterns and pitfalls to avoid.
[04:15] mikeal1: good times
[04:15] isaacs: wow, the fuse_lowlevel api is a lot like libeio
[04:15] sh1mmer: furf took me to some place with a rad selection of Porters in NYC the other week 
[04:15] mikeal1: isaacs: inorite!
[04:15] mikeal1: it's f'ing awesome
[04:15] mjr_ has joined the channel
[04:15] sh1mmer: dilvie: best advice check out some established libs like connect or express
[04:15] isaacs: all the functions, you get a request struct and a bunch of args.
[04:15] mikeal1: i looked at it after ry said how good of a match it was
[04:16] isaacs: yeah
[04:16] dilvie: sh1mmer: That is good advice. =)
[04:16] sh1mmer: dilvie: you don't really need the module pattern or other encapsulation since the modules do that already
[04:16] sh1mmer: in general you should have some kind of factory method
[04:16] isaacs: i was kind of playing with making bindings to fuse's normal api, and like, "man, this sucks"
[04:16] isaacs: mikeal: everything blocks all over its face.
[04:16] sh1mmer: so that people can create instances of whatever it is you are building
[04:16] sh1mmer: singletons are bad
[04:17] mikeal1: yeah, it's surprising how many established APIs are a bunch of bad blocking code over evented code
[04:17] sh1mmer: after that it's the usual advice from Crock. Capitals for Classes; lower case for objects. 
[04:17] mikeal1: tcpdump is the same way
[04:17] isaacs: mikeal: that also explains why most fuse programs are slow and awful
[04:17] _announcer: Twitter: "nodejs for hosting / nodejitsu.com http://htn.to/eFvt1a" [ja] -- Yuji Okazawa. http://twitter.com/yujiorama/status/27107439389
[04:17] isaacs: mikeal: like, lock up your whole system while they do some network bs
[04:17] dilvie: sh1mmer: "singletons are bad" is kindof vague advice.
[04:17] mikeal1: yup
[04:18] sh1mmer: dilvie: don't write modules which force you to have one instances of whatever you get from that module
[04:18] mikeal1: if you want a singleton put it in Redis :)
[04:18] isaacs: dilvie, sh1mmer: a better way to say it is that require("foo") already IS a singleton
[04:18] sh1mmer: dilvie: in general
[04:18] mikeal1: oh no, that's what you mean
[04:18] mikeal1: yeah, those break
[04:18] mjr_: mikeal1: thank goodness somebody went and wrote a non-blocking tcpdump for node
[04:18] sh1mmer: helper functions, such as sys, are ok in that style
[04:18] isaacs: dilvie, sh1mmer: so require("foo").createSingleton() is dumb.
[04:18] mikeal1: require('blah') in one module is not guaranteed to be the same as require('blah') in another module if you're using npm
[04:18] isaacs: sh1mmer: it's "util" now.
[04:19] mikeal1: so don't use module level singletons
[04:19] _announcer: Twitter: "[Js 人 気 情报] RingoJS vs. Node.js: Runtime Values - Hannes Wallnöfer http://bit.ly/9uMvdf # javascript" [de] -- jsMagazine. http://twitter.com/jsMagazine/status/27107536812
[04:19] isaacs: mikeal: actually, it is
[04:19] isaacs: mikeal: oh, unless they require different versions.
[04:19] mikeal1: mjr_: i know, that guy rocks :P
[04:19] sh1mmer: isaacs: well server = require('myawesomeserver').server; // dumb
[04:19] _announcer: Twitter: "@ Outsider__ four, nodejs fun. Approximately one month became manjinji. ^ ^" [ko] -- nanhapark. http://twitter.com/nanhapark/status/27107553385
[04:19] isaacs: but if they have the same versions, it is
[04:19] mikeal1: i said "guaranteed"
[04:19] sh1mmer: isaacs: I've been out for a couple of weeks
[04:19] sh1mmer: isaacs: as you've all possibly noticed
[04:19] mikeal1: the version requirements of a module you're using are opaque to you
[04:20] sh1mmer: one less gobby bastard
[04:20] isaacs: hehe
[04:21] mikeal1: we should have Tim write up the node best practices
[04:21] mikeal1: it'll be like a month of arguments
[04:21] isaacs: mikeal: haahhahahah
[04:21] isaacs: a
[04:21] isaacs: mikeal: cuz we don't ahve enough of those?
[04:21] mikeal1: but at the end of it we'll have something good to point people to
[04:21] Tim_Smart: Heh.
[04:21] isaacs: mikeal: you mean caswell or smart?
[04:21] mikeal1: stuff like comma first won't make it in
[04:21] mikeal1: Caswell
[04:21] isaacs: hahah
[04:21] dilvie: sh1mmer: What's your reasoning behind creating factories?
[04:22] mikeal1: but we'll have like "don't use module level singletons"
[04:22] isaacs: "put commas first" isn't a best practice, it's a style
[04:22] isaacs: a best practice is, "have a consistent style, and document it"
[04:22] mikeal1: true enough
[04:22] sh1mmer: dilvie: there are lots of places that people want to run multiple instances of things in node
[04:22] niko has joined the channel
[04:22] sh1mmer: dilvie: like lots of http clients
[04:22] mikeal1: javascript that isn't in the browser is fairly new
[04:22] mikeal1: it would do us some good to write up the obvious things
[04:23] sh1mmer: or multiple http servers on multiple ports, one hosting a site another providing admin
[04:23] sh1mmer: etc
[04:23] dilvie: sh1mmer: You can do that with the closure that modules provide, can't you?
[04:23] isaacs: mikeal: i think most of these things are not new, though
[04:23] mikeal1: i just hate the word "factory"
[04:23] isaacs: mikeal: just same old "don't do bad programming" stuff
[04:23] mikeal1: it carries too much baggage
[04:23] sh1mmer: dilvie: it's just the way that people have done it so far
[04:23] mikeal1: isaacs: in browser js you use singletons all the time tho, you kind of rely on them
[04:24] sh1mmer: dilvie: you probably could do it with the module closure, but it's more convention now
[04:24] mikeal1: the structural patterns differ
[04:24] isaacs: mikeal: you do in node, too, you just call them "modules" and you create them with require()
[04:24] mikeal1: it's obvious to me and you at this point but i see new people trip over it over and over again
[04:24] dilvie: sh1mmer: That wasn't really a question. You can do it with the closure provided by CommonJS modules. Just create a function level scope with instance variables declared with var.
[04:24] MikhX has joined the channel
[04:25] mikeal1: we have the same conversations in here every day
[04:25] sh1mmer: dilvie: right. and I'm saying it's a node convention to have included modules be factories rather than calling require more than once
[04:25] mikeal1: "don't do that, you'll hurt yourself"
[04:25] isaacs: mikeal: and, while you can't guarantee that require("foo") is the same thing in all programs if you're using npm, you *can* guarantee that it's the same thing in all points in a single program
[04:25] isaacs: mikeal: yeah, i'm all about doc'ing the common questions
[04:25] mikeal1: "you don't want to use mongodb, no really, i'm serious, don't"
[04:26] sh1mmer: dilvie: also, require is sync so calling it in the main event loop is probably bad
[04:26] dilvie: sh1mmer: Ah, that makes sense. I actually think it looks funny when people require stuff in the middle of their module, rather than the top
[04:26] mikeal1: would be nice to just point to a page
[04:26] sh1mmer: or rather calling it once you have servers serving
[04:26] sh1mmer: yeah
[04:26] sh1mmer: ok
[04:26] dilvie: it kindof feels wrong not to keep all the dependency declaration at the top of the file..
[04:26] sh1mmer: I'm going to find some food before I board
[04:26] mikeal1: didn't we talk at one point about have require() throw a warning if you called it after the initial js load?
[04:26] sh1mmer: talk to you all later
[04:27] dilvie: mikeal1: I missed that. =)
[04:27] mikeal1: it's a damn good idea
[04:27] dilvie: mikeal1: I really would appreciate an article that goes over this stuff.
[04:27] joshpeek: could someone please review my patch: http://github.com/ry/node/pull/343
[04:28] mikeal1: joshpeek: the only person who can commit it is ry :)
[04:28] jamesarosen has joined the channel
[04:28] joshpeek: i know, looking for feedback though
[04:28] mikeal1: oh man, he wants this tho
[04:28] mikeal1: he was hunting down these bugs all day yesterday
[04:28] mikeal1: man, all these low level changes to networking
[04:28] mikeal1: feels like February
[04:29] mikeal1: :)
[04:29] isaacs: i take back what i said about fuse_lowlevel api being like libeio.  it's way nicer than libeio.
[04:29] dilvie: mikeal1: If ry gets ruch, moves to a private island, and abandons the project, do we all battle it out like gladiators to determine the new canonical repo? =)
[04:29] isaacs: i mean, it can be, because it's not actually doing something.
[04:29] dilvie: ruch = rich
[04:29] tyfighter has joined the channel
[04:29] mikeal1: dilvie: no, the project would just die :)
[04:30] mikeal1: if Linus died in the first 2 years of writing Linux you'd have never run it
[04:31] mikeal1: it's way way too early in the project to have the "hit by a bus" talk
[04:31] ben_alman has joined the channel
[04:32] mikeal1: why do i feel like the old open source fogie  
[04:32] mikeal1: i'm like 27
[04:32] mikeal1: or 28
[04:32] gerred: i'm 22
[04:32] mikeal1: i can't remember
[04:32] Aria: Hehe. I'm 29 this week. You're in good company.
[04:32] mikeal1: nevermind, pquerna is the old salty open source guy
[04:32] gerred: it seems like everybody in startupland is 22-30.
[04:33] gerred: at least in ruby/js areas.
[04:33] mikeal1: you can't live like this with kids
[04:33] dilvie: I think I used linux the year after the first release...
[04:33] mikeal1: well, you cna
[04:33] dilvie: but I get the point. =)
[04:33] gerred: mikeal1: what do you mean, constant binge coding sessions? ;)
[04:33] mikeal1: you just have to have enough experience to tell people that you aren't staying past 6
[04:34] gerred: my issue where I'm at is I need to get out of my chair at around 6. if we had a couch...
[04:34] gerred: it'd be dangerous.
[04:34] mikeal1: dilvie: when about was that?
[04:34] mikeal1: my office has a big read couch, because we kinda have to, it's required :)
[04:35] gerred: why's that?
[04:35] mikeal1: couchone.com :)
[04:36] gerred: oh nice.
[04:36] gerred: i looked at you guys while you were hiring, I decided my erlang wasn't strong enough atm though.
[04:36] gerred: i guess that was cloudant
[04:37] mikeal1: we hire developers, we don't worry that much about erlang
[04:37] mikeal1: erlang isn't that hard to learn
[04:37] mikeal1: but i don't even write erlang at the moment
[04:37] mikeal1: we have too much javascript to write
[04:37] gerred: it's not my time is just limited.
[04:38] mikeal1: Damien is famous as stating multiple times that "he doesn't know erlang"
[04:38] gerred: i just ported your example to eventmachine...
[04:38] jesusabdullah: Who is Damien?
[04:38] gerred: and I like the node.js version better. ;)
[04:38] mikeal1: he was Erlang Developer of the year :)
[04:38] jesusabdullah: Hah
[04:38] mikeal1: damien katz, creator of couchdb
[04:38] jesusabdullah: Cute
[04:38] tyfighter_ has joined the channel
[04:38] gerred: or rather I like your framework better
[04:39] mikeal1: gerred: if you're looking for a job tho, send your resume
[04:39] gerred: especially conn.storage
[04:39] gerred: hmm
[04:39] jesusabdullah: JOBS YOU SAY
[04:39] jesusabdullah: er, I mean
[04:39] Tim_Smart: JOBS, STEVE.
[04:39] jesusabdullah: Wat
[04:39] jesusabdullah: O NOES
[04:39] jesusabdullah: run away
[04:39] jesusabdullah: !
[04:40] Tim_Smart: I'm looking for a job, I would be up for relocation too.
[04:40] Tim_Smart: (I'm in New Zealand atm)
[04:41] jesusabdullah: I have a while before jobbing becomes a serious concern
[04:41] jesusabdullah: and I'm not really worried
[04:41] jesusabdullah: At some point in my head, though, something broke and now I feel like I should constantly be handing out resumes and Making Connections and scoring interviews and shit
[04:41] jesusabdullah: This is what engineering school does to you.
[04:42] Tim_Smart: I'm not worried, but I might be in a few months..
[04:43] Tim_Smart: Hot. Finally re-factored the node-gtk to be more awesome. Now I need to re-factor my re-factor.
[04:43] jesusabdullah: Yeah, if anything, I need to *stop* looking at work
[04:45] mAritz: Tim_Smart: noo, now you need to port it to qt xD
[04:45] mAritz: (and then back when you realize that qt is kind of a big clunky mess as well)
[04:46] Tim_Smart: Na. Gnome it only getting my love at this stage.
[04:46] Tim_Smart: *is
[04:46] xdamman has joined the channel
[04:46] mAritz: redis > gnome
[04:46] mAritz: :P
[04:46] _announcer: Twitter: "built a miniapp in node.js. that was crazy fast/easy! like it mucho. will deploy in a day or two." -- Giles. http://twitter.com/gilesgoatboy/status/27109397732
[04:47] SubStack: jesusabdullah: yeah just keep pushing shit to github
[04:47] SubStack: best way to show that you'd be a good hire
[04:47] jesusabdullah: :)
[04:47] jesusabdullah: At this point, I need to
[04:47] jesusabdullah: EAT FOOD
[04:47] jesusabdullah: >:O
[04:47] jesusabdullah: again
[04:47] jesusabdullah: I feel like I've eaten a lot of food today :)
[04:47] Tim_Smart: SubStack: Am I pushing enough crap? http://github.com/Tim-Smart
[04:48] jesusabdullah: later, I should try to hack some more
[04:48] niko has joined the channel
[04:48] jesusabdullah: Oh, that reminds me
[04:48] Tim_Smart: Hah, that can be taken the wrong way quite easily.
[04:48] SubStack: Tim_Smart: you can never push enough
[04:49] SubStack: just like the rest of life, pushing to github is fundamentally unsatisfying
[04:49] SubStack: but you should still do it
[04:49] jesusabdullah: SubStack: Fixed the bot, probably :)
[04:49] Tim_Smart: You push some, you pull some..
[04:49] jpld: has anyone else seen that new Date() in node is wrong? is that something that must be manually configured?
[04:49] hober: in soviet russia, github pushes to you
[04:50] jpld: for example, node-repl claims it is the following right now Tue, 12 Oct 2010 04:49:49 GMT
[04:50] gerred: is js: the good parts worth reading through or just referring to as I need it?
[04:51] SubStack: so that's not what time it is?
[04:51] SubStack: ah, it's doing UTC
[04:51] SubStack: but reporting GMT
[04:52] SubStack: UTC doesn't have daylight savings time
[04:52] jpld: yeah…
[04:52] jpld: bit bizarre really, i was trying to save a timestamp in my db and i didn't realize it was constantly offset
[04:54] Tim_Smart: Date.now() is what I usually use.
[04:54] Tim_Smart: v8: Date.now()
[04:54] v8bot: Tim_Smart: 1286859250491
[04:54] jpld: that just prints ms since epoch right?
[04:54] Tim_Smart: Yeah.
[04:54] SubStack: v8: new Date
[04:54] v8bot: SubStack: "Tue Oct 12 2010 00:54:28 GMT-0400 (EDT)"
[04:54] jpld: ahh you just store that…
[04:55] jchris has joined the channel
[04:55] Tim_Smart: v8: new Date().toUTCString()
[04:55] v8bot: Tim_Smart: "Tue, 12 Oct 2010 04:55:09 GMT"
[04:58] dilvie: Connect.createServer(function (req, res, next) <-- what is next?
[04:59] astrolin_ has joined the channel
[05:00] Tim_Smart: dilvie: Calls the next layer if you aren't sending off an response.
[05:00] chrischris has joined the channel
[05:00] jesusabdullah: What's a good html parser for node?
[05:01] Aria: html5 ;-)
[05:02] jesusabdullah: Hmm?
[05:03] _announcer: Twitter: "wondering when #heroku #node.js will be ready for production? :)" -- Yevgeniy Viktorov. http://twitter.com/yviktorov/status/27110406701
[05:04] dilvie: Tim_Smart: Thanks. Am I supposed to do something with next inside the function?
[05:06] pufuwozu has joined the channel
[05:06] _announcer: Twitter: "Getting close to a working ESI reverse proxy in Node.js. It's fast. Really fast." -- Joshua Hull. http://twitter.com/joshbuddy/status/27110629100
[05:07] dilvie: Tim_Smart: Nevermind. Reading "Connect It" on How To Node. I think that'll answer my questions.
[05:11] dilvie: Should I call next() only if the request wasn't handled, or should I always call next()?
[05:11] Tim_Smart: If the request wasn't handled.
[05:12] Tim_Smart: So things like 404 handlers etc can catch it.
[05:12] dilvie: Cool. =)
[05:13] niko has joined the channel
[05:15] Tobsn has joined the channel
[05:15] TheEmpath: mongoose.load() doesn't exist anymore :(
[05:15] TheEmpath: so how do i aggressively/dynamically load models? :X
[05:16] _announcer: Twitter: "Dealing with some NodeJS memory leaks with @ggoodale. Memory leak might be a putting it lightly. More like a deepwater horizon memory spill" -- Jacques Crocker. http://twitter.com/railsjedi/status/27111185101
[05:17] gerred: hmm so how are things like db modules written in a non-blocking way? i guess I could look at the code myself.
[05:17] TheEmpath: async functions within async functions
[05:17] TheEmpath: only way
[05:17] Tobsn: or remove the doorstopper
[05:18] TheEmpath: openSocket() { getDatabase() { getTable() { runQuery() {} } } }
[05:18] gerred: ahh.
[05:18] gerred: okay that makes sense.
[05:19] gerred: with each of those being an async callback
[05:19] TheEmpath: yep
[05:19] TheEmpath: that forces concurrency
[05:19] Tobsn: openSocket() { $this->remove( 'doorstopper' ); }
[05:19] gerred: getDatabase listening for a db response, getTable listening for that particular response and runQuery...done deal.
[05:19] TheEmpath: dunno what this doorstopper thing is
[05:19] dilvie: TheEmpath: No events/listeners?
[05:19] TheEmpath: ACTION looks at his doorstopper and realize he hasn't fed her in a while.
[05:19] Tobsn: its a global variable that keeps functions from being async
[05:20] TheEmpath: you could toss events, but listeners are expensive
[05:20] gerred: now I just need to get into TDD/BDD with node. ;)
[05:20] TheEmpath: when you mass them up and fail to remove them over time
[05:21] JimBastard_: gerred: www.vowsjs.org
[05:21] TheEmpath: i like async functions :D
[05:21] dilvie: TheEmpath: isn't it also expensive to pass the same anonymous callback function again and again?
[05:21] TheEmpath: lets look into it!
[05:21] Tobsn: TheEmpath: www.doorstopperjs.org
[05:21] mbrochh has joined the channel
[05:21] mbrochh has joined the channel
[05:23] matjas has joined the channel
[05:24] Tobsn: hmm 1.5 hours till medal of honor.
[05:25] TheEmpath: dilvie: for YahooUtils at least: http://2tbsp.com/node/91#comment-2553
[05:25] Tobsn: btw. does anyone use the DUI?
[05:25] Tobsn: digg UI stuff
[05:26] Tobsn: they have all their stuff on github.com/digg
[05:26] Tobsn: but i never saw anyone using it
[05:27] dmcquay has joined the channel
[05:31] dilvie: TheEmpath: I was hoping you were going to post a test comparing memory overhead from event listeners to memory overhead from anonymious function callbacks in Node. =)
[05:31] TheEmpath: drat!
[05:31] TheEmpath: how dare you foil my claim!
[05:31] TheEmpath: i'll run a benchmark in a few days
[05:31] TheEmpath: i know in flex if you have all kinds of orphaned listeners floating around, the bubbling phase takes super long
[05:32] TheEmpath: and over the course of an apps runtime, it bogs down badly
[05:32] dilvie: TheEmpath: hehe, yeah, saying "event delegation is faster than attaching individual event listeners per element" is a bit of a no brainer. =)
[05:32] dilvie: TheEmpath: oh, you obviously can't just let your event listeners get orphaned. =)
[05:33] TheEmpath: you'd be surprised how many people let that one slip by
[05:33] dilvie: TheEmpath: That's how you create memory leaks and crash your app every 20 minutes.
[05:33] TheEmpath: with javascript as a server side language now, people wont detect orphan issues up front anymore
[05:33] TheEmpath: server has way more resources than the client browser
[05:33] bpot has joined the channel
[05:34] TheEmpath: so you can go longer before hitting issues associated with orphan leaks
[05:34] dilvie: TheEmpath: Depends on how much traffic you get, I suppose. =)
[05:34] TheEmpath: that too
[05:34] TheEmpath: lol
[05:34] dilvie: if you're getting 10 hits a day, you might not notice for a month or two. =)
[05:34] TheEmpath: lol
[05:35] TheEmpath: how quaint!  /reboot
[05:35] TheEmpath: ACTION feels like he is building Zend Framework in node.js
[05:35] jesusabdullah: urgh, node-htmlparser has a frustrating api
[05:36] jesusabdullah: and apricot is teh brokens from what I can tell
[05:37] rkieffer has joined the channel
[05:39] evl has joined the channel
[05:39] niko has joined the channel
[05:40] HAITI has joined the channel
[05:42] dilvie: is it a good idea to define my express app routes in separate files?
[05:44] SubStack: good ideas do not exist
[05:45] SubStack: I split up my routes like that in my current project though
[05:45] jesusabdullah: Hah :D
[05:47] quag has joined the channel
[05:51] unomi has joined the channel
[05:57] _announcer: Twitter: "@tobsn as I'm using node.js with web sockets I can't put it behind lighthttpd or nginx." -- Arnout Kazemier. http://twitter.com/3rdEden/status/27113416311
[05:58] Tobsn: ha.
[06:00] mape: Tobsn: haproxy :)
[06:00] Tobsn: well i just told him that he can use xcache for internal caching of small objects or a small amount of objects
[06:00] Tobsn: since its included into the webserver its a tiny tiny bit faster than memcache
[06:00] Tobsn: because there is no tcp/udp connection etc.
[06:01] Tobsn: i removed a scratch from my car today :D
[06:01] Tobsn: its shiny again.
[06:01] quag: how?
[06:01] Tobsn: quixx easy repair blah
[06:02] Tobsn: it was really just on the surface
[06:02] Tobsn: not deep... just the super highest level of paint was irritated...
[06:02] Tobsn: but on a large area
[06:02] Tobsn: ~8 sq inch probably
[06:03] Tobsn: but i found a real scratch on his ass... inch long really deep...
[06:03] Tobsn: http://sphotos.ak.fbcdn.net/hphotos-ak-snc4/hs186.snc4/37663_405106921862_733566862_5034401_2280922_n.jpg
[06:03] Tobsn: shiny.
[06:03] andrewfff has joined the channel
[06:04] quag: Tobsn: good work!
[06:04] Tobsn: :D
[06:04] Tobsn: took me two weeks, every day ~15min to deep clean that car after i drove with it from chicago to cali
[06:04] Tobsn: ~3200 miles
[06:05] Tobsn: i bet around ~2000 insects from small to 3 inch long over the whole front
[06:05] niko has joined the channel
[06:06] Tobsn: http://sphotos.ak.fbcdn.net/hphotos-ak-ash2/hs019.ash2/34333_405678096862_733566862_5046999_7052071_n.jpg
[06:06] Tobsn: that was already after the second day
[06:07] quag: woah
[06:07] quag: you're a killing machine
[06:07] quag: :)
[06:07] Tobsn: lol yeah
[06:07] Tobsn: thats when i drive over the badlands
[06:07] Tobsn: seeing mount rushmore etc.
[06:08] Tobsn: its all fields everywhere
[06:08] Tobsn: tons of insects
[06:08] Tobsn: i think that picture is from after we left minnesota... so after south dakota there were like 10 times more insects glued to it
[06:13] muhqu has joined the channel
[06:15] jansc has joined the channel
[06:15] TheEmpath: yessss mongoose implemented and fucntional
[06:15] TheEmpath: and abstracted into the model layer
[06:15] TheEmpath: ACTION vrooms.
[06:17] SamuraiJack has joined the channel
[06:17] Tobsn: npm available?
[06:17] Tobsn: ah wait no, mongoose worked
[06:17] Tobsn: something else was broken
[06:18] jakehow has joined the channel
[06:18] Tobsn: oh yeah 3rdEdens memcache thing
[06:20] bahamas has joined the channel
[06:22] TheEmpath: hrmm if i pass a new Mongoose Model back through socket, the Model gets stringified :(
[06:24] leeeb has joined the channel
[06:29] solidsnack has joined the channel
[06:32] niko has joined the channel
[06:40] SINPacifist has joined the channel
[06:41] dilvie: Are most node apps using connect-auth for authentication?
[06:41] SINPacifist: There's no documentation for sys.ingerits and some other sys methods
[06:41] yviktorov has joined the channel
[06:42] SINPacifist: *sys.inherits
[06:42] bahamas: can anyone recommend a module for csv writing? i found ya-csv so far. should i go with it?
[06:42] SINPacifist: How can I ask developers to add this methods to docs?
[06:43] jpld: dilvie: i was just looking at that too, sadly won't work with npm/node0.2.3
[06:44] Tim_Smart: SINPacifist: http://nodejs.org/api.html#sys-inspect-82
[06:44] tobeytailor has joined the channel
[06:46] dohtem has joined the channel
[06:46] dohtem has joined the channel
[06:47] dilvie: jpld: Are you talking about connect-auth or express-auth? 
[06:47] jpld: dilvie: actually, neither seem happy to install on node@0.2.3/npm@0.2.3
[06:48] SINPacifist: Tim_Smart: there's no a single word about sys.inspect or any developer's contacts
[06:48] SINPacifist: Is google groups the only way to send a message to developers?
[06:48] dilvie: connect-auth@0.1.3                       =ciaranj installed latest remote
[06:48] jpld: dilvie: right, but try to install it…
[06:49] jpld: ERR! Error: connect-auth@0.1.3 not compatible with your version of node
[06:49] Tim_Smart: SINPacifist: The API has an entry for sys.inspect, I linked you to it...
[06:49] ajsie: is there a way to create full resource route like in Rails?
[06:49] SINPacifist: Tim_Smart: yes, but I found that socket.io developers using sys.inspect
[06:49] dilvie: jpld: oh, nevermind - I'm on node 0.2.0
[06:49] SINPacifist: Tim_Smart: sys.inherits, sorry
[06:50] EyePulp has joined the channel
[06:50] SINPacifist: Tim_Smart: and could not find any docs for it
[06:50] jpld: dilvie: if only i could go backwards… (0:
[06:50] SINPacifist: Tim_Smart: sys.inspect(sys.inherits) says that's a function
[06:50] SINPacifist: Tim_Smart: and that's all
[06:50] dilvie: how do I upgrade node?
[06:50] Tim_Smart: SINPacifist: Ah. It isn't recommended to use that. It is used internally.
[06:51] dilvie: better question - do I want to upgrade node? =)
[06:51] SINPacifist: Tim_Smart: I think there should be a notice about it)) Thanks
[06:51] jpld: dilvie: not if you want to use connect_auth (0:
[06:51] SINPacifist: Tim_Smart: for help
[06:51] Tim_Smart: SINPacifist: All it does is perform basic prototypical inheritance.
[06:53] jacobolus has joined the channel
[06:53] Tim_Smart: SINPacifist: http://github.com/ry/node/blob/master/lib/util.js#L382-390
[06:54] zemanel has joined the channel
[06:54] Tim_Smart has joined the channel
[06:54] deoxxa: does hton/ntoh/htons/ntohs/etc exist somewhere in v8 or node?
[06:55] ajsie: is there a cucumber for node.js?
[06:55] ajsie: or an equivalent?
[06:57] SINPacifist: Tim_Smart: thanks once again)
[06:58] niko has joined the channel
[06:58] breccan_ has joined the channel
[06:58] ivanfi has joined the channel
[07:00] Anti-X has joined the channel
[07:01] chetan51 has joined the channel
[07:02] ajsie: why is JSpec no longer supported: http://github.com/visionmedia/jspec
[07:02] fbits has joined the channel
[07:03] sean` has joined the channel
[07:03] chetan51: are there any official / quotable benchmarks for Node.js performance, compared to Apache and such?
[07:05] aubergine has joined the channel
[07:07] Anti-X: ajsie, there is jasmine
[07:07] Anti-X: which sort of took over from it
[07:07] ajsie: Anti-X: but no documentation
[07:07] ajsie: and don't tell me to read the source code :)
[07:07] Anti-X: read the source code :p
[07:07] Anti-X: no i think it's fairly new
[07:07] Anti-X: it'll come
[07:08] _announcer: Twitter: "Me likes the nodecasts initiative http://is.gd/fYfjc by @emerleite. #nodejs #radar" -- Raphael Stolt. http://twitter.com/raphaelstolt/status/27116775479
[07:08] Anti-X: the main problem is that it's missing the __global__ docs
[07:08] Anti-X: that's the one you need!!
[07:08] Anti-X: to use it
[07:09] Anti-X: but i thought there was a list of commands somewhere
[07:09] Anti-X has joined the channel
[07:09] Anti-X: bluh
[07:10] virtuo has joined the channel
[07:10] jetienne has joined the channel
[07:11] Max_Might has joined the channel
[07:16] overra has joined the channel
[07:16] JimBastard has joined the channel
[07:19] Tim_Smart: Hmm getting an idiomatic way to map glib signals to ecmascript is interesting,,,
[07:19] _announcer: Twitter: "node.js remote debugging in eclipse http://groups.google.com/group/nodejs/browse_thread/thread/10cfb1465f40436d?pli=1" -- Bumphrey Hogart. http://twitter.com/leftieFriele/status/27117279865
[07:21] ph^ has joined the channel
[07:22] mbrochh has joined the channel
[07:24] niko has joined the channel
[07:25] ph^ has joined the channel
[07:27] markwubben has joined the channel
[07:29] Mobbit has joined the channel
[07:29] pufuwozu has joined the channel
[07:32] daglees has joined the channel
[07:34] evl has left the channel
[07:34] _announcer: Twitter: "Doesn't Open Source just rock! Had a problem with MongoDb driver for #nodejs in the evening and by the morning it was all solved." -- Andris Reinman. http://twitter.com/andris9/status/27117947134
[07:34] chetan51: Node official benchmarks? Anyone?
[07:35] Tim_Smart: chetan51: Node usually only benchmarks against itself.
[07:35] _announcer: Twitter: "rabbit.js for node-rabbit-socket.io things - nodejs | Google Groups http://monk.ly/aZ5Hdc cc @sogrady" -- James Governor. http://twitter.com/monkchips/status/27117983955
[07:35] Tim_Smart: There isn't any 'official' comparative benchmarks around.
[07:37] chetan51: So is there no way to prove that Node is faster than other server platforms?
[07:38] pufuwozu has joined the channel
[07:41] stephenjudkins has joined the channel
[07:42] JimBastard: chetan51: node has flux_capacitor.cc
[07:42] JimBastard: i dont think that is in dispute 
[07:43] pufuwozu has joined the channel
[07:43] masch: JimBastard: O.o ryl? nice!
[07:44] JimBastard: yeah, we've been able to respond to http requests here before they actually exist. been causing a major race condition
[07:45] masch: xD
[07:45] masch: awesome
[07:45] JimBastard: plutonium.js 
[07:46] JimBastard: im debating doing the nodejitsu how it works section by hand or in mspaint
[07:46] JimBastard: maybe i can make it a rage comic
[07:47] aubergine_ has joined the channel
[07:49] masch: JimBastard: use mspaint. the rage comes by itself
[07:49] pufuwozu has joined the channel
[07:49] niko has joined the channel
[07:49] JimBastard: masch: i did a whole series of mspaint comics once, they went well
[07:49] JimBastard: the internet liked it for a while lol
[07:49] masch: skill0r
[07:49] _announcer: Twitter: "Node.js as the persistence layer what is good I guess. / CouchDB and I compared MongoDB - Masatomo Nakano Blog http://htn.to/yPD4MQ" [ja] -- 河合 太郎. http://twitter.com/inuro/status/27118604543
[07:50] JimBastard: http://s478.photobucket.com/albums/rr145/JimBastard/
[07:50] JimBastard: ahaha
[07:50] JimBastard: old stuff
[07:50] teemow has joined the channel
[07:51] sideshowcoder has joined the channel
[07:51] simme has joined the channel
[07:54] _announcer: Twitter: "In return the node.js SJIS, node-iconv Spending. Note Note http://github.com/bnoordhuis/node-iconv" [ja] -- goodoo. http://twitter.com/goodoo/status/27118792003
[07:54] _announcer: Twitter: "&quot;CouchDB QueryServer synchronization of IO interfaces, but are designed for, node.js of Non-Blocking I / O base asynchronous SSJS have Damejan Kitara&quot; hum / 2010-01-24 - We ... http: / / htn.to/4FvsyV" [ja] -- 河合 太郎. http://twitter.com/inuro/status/27118826864
[07:55] pufuwozu has joined the channel
[07:58] ajsie: Anti-X: this look promising: http://vowsjs.org/
[07:58] ajsie: Anti-X: you can use it with cucumber: http://github.com/nodejitsu/kyuri
[07:59] Anti-X: is the site slow?
[07:59] Anti-X: oh there it is
[07:59] SubStack: vows is pretty verbose
[07:59] _announcer: Twitter: "Carsonified : Around the Web: Node.JS Goodness, Amit on Humble Pied, &amp; Riak 0.13... http://inblogs.org/go/dxc29" -- inBlogs. http://twitter.com/inBlogs/status/27119039607
[08:00] SubStack: from that webpage anyhow, I've only used expresso
[08:00] SubStack: I like not having to name stuff that isn't important
[08:00] Anti-X: i use nodetest for node
[08:00] Anti-X: perty neat
[08:00] pufuwozu has joined the channel
[08:01] ajsie: SubStack: yeah .. =)
[08:02] hjjaa has joined the channel
[08:02] ajsie: Anti-X: you got github link?
[08:02] ajsie: cant find it
[08:03] Nohryb has joined the channel
[08:03] Anti-X: it's on npm
[08:03] MikhX has joined the channel
[08:03] ajsie: i have to read documentation
[08:03] JimBastard: vows is pretty easy once you figure it out
[08:03] Anti-X: oh it's not on npm
[08:03] Anti-X: hm
[08:03] hjjaa has left the channel
[08:04] Anti-X: where did i get it from
[08:04] Anti-X: hehe
[08:04] ajsie: JimBastard: i like the object literal structure in Vows
[08:05] ajsie: good documentation too
[08:05] ajsie: compared to others
[08:05] JimBastard: ajsie: aye. have you seen http://github.com/nodejitsu/kyuri ?
[08:05] ajsie: JimBastard: yeah .. thought about using it with vows
[08:05] pufuwozu has joined the channel
[08:05] ajsie: JimBastard: you got something more to recommend? =)
[08:06] Anti-X: i think nodetest is called ntest
[08:06] ajsie: im new to node and want to know my stack environment 
[08:06] ajsie: okay
[08:06] JimBastard: ajsie: there is a wiki page
[08:06] JimBastard: http://github.com/nodejitsu/
[08:06] ajsie: yeah node modules .. have looked it it
[08:06] Anti-X: http://github.com/technoweenie/ntest
[08:06] JimBastard: http://github.com/marak/
[08:06] JimBastard: http://github.com/cloudhead/
[08:06] JimBastard: http://github.com/indexzero/
[08:06] ajsie: great =)
[08:06] JimBastard: also
[08:06] JimBastard: http://github.com/creationix
[08:07] JimBastard: http://github.com/visionmedia
[08:07] ajsie: i see your strategy 
[08:07] MikhX has joined the channel
[08:07] Anti-X: ignore that link i posted, it's not that
[08:07] Anti-X: strange
[08:07] ajsie: Anti-X: okay
[08:07] Anti-X: can't find it
[08:08] Anti-X: oh it's called nodeunit
[08:08] Anti-X: haha
[08:08] Anti-X: that's why
[08:08] Anti-X: caolan's
[08:08] ajsie: yeah found it
[08:08] sechrist: -node- UNIT
[08:08] ajsie: just looked at it before
[08:09] jblanche has joined the channel
[08:09] ajsie: but vows look so amazing =)
[08:10] Anti-X: the difference is that vows is behaviour driven
[08:10] Anti-X: which is fine, i like that
[08:10] ajsie: yeah
[08:10] Anti-X: but you may need nodeunit if your code is not behaviour oriented :p
[08:11] Anti-X: i dunno what i'm on about
[08:11] ajsie: but isnt everything about behaviour
[08:11] Anti-X: it's early
[08:11] pufuwozu has joined the channel
[08:11] Anti-X: 10 am is like death to a programmer
[08:11] ajsie: i should write my libraries in a behaviour driven aproach
[08:12] Anti-X: definately
[08:13] rra_ has joined the channel
[08:13] Anti-X: but a behaviour oriented way does not take into account that your function throws exceptions on horrible errors, because that's not behaviour (on good/bad input), it's a systems failure
[08:13] daglees has joined the channel
[08:13] Anti-X: i don't know, it may take it into account, but i haven't seen that on other behaviour testing things
[08:13] ajsie: yeah
[08:14] ajsie: how do you guys set up your development environment?
[08:14] ajsie: local on Mac/Windows/Linux? virtual with VirtualBox/Vmware? remote with VPS hosting? (i want to find a remote hosting for managing my VPS)
[08:15] Anti-X: as long as i have git and komodo edit available, i'm good wherever i am
[08:15] bronb has joined the channel
[08:15] Anti-X: and internet to get my code down
[08:15] _announcer: Twitter: "Playing around with node.js reminds me how much I hate JavaScript's lack of sensible builtins, like format strings." -- Jeremy Grosser. http://twitter.com/synack/status/27119736568
[08:16] ajsie: Anti-X: but the environment you download your git repo to have to suit your needs
[08:16] ajsie: eg. ruby/rails, javascript/node, all gems/npm packages etc
[08:16] niko has joined the channel
[08:16] Anti-X: not necessarily
[08:16] ajsie: okay .. you just edit the source code then push the changes up again?
[08:17] Anti-X: i can program hundreds of line of code without running it, because i have a rough idea in my head how it will work out.. usually once i run it i just have to fix 3-5 small bugs
[08:17] christophsturm has joined the channel
[08:17] Anti-X: like typos and stuff
[08:17] ajsie: Anti-X: but if you write an application from scratch
[08:17] pufuwozu has joined the channel
[08:17] Anti-X: that's even better
[08:17] ajsie: how do you set up everything?
[08:17] Anti-X: because then i have it all in my head
[08:17] ajsie: :)
[08:17] _announcer: Twitter: "That said, node.js is awesome because it lowers the barrier to entry for server-side programming while keeping everything cleanly async." -- Jeremy Grosser. http://twitter.com/synack/status/27119829011
[08:19] Anti-X: remember that you can't run it before you code it, and as long as you know fairly well how it's going to be, you can code _a lot_ before you test anything at all, because you know you'll just need to fix some names or arguments that you forgot, or stuff like that... the main work of writing all the code will be done, and can be done "anywhere"
[08:21] _announcer: Twitter: "1 st unconference at Mejsla success.Topics explored:cuke4duke,node.js, html5,death 2 mvn,CoffeeScript,TDD javascript,Kanban vs Scrum,DVCSs" -- Lars Westergren. http://twitter.com/wgren/status/27119978137
[08:22] pufuwozu has joined the channel
[08:22] Anti-X: when i wrote http://github.com/torvalamo/htmlaudio i wrote the whole simpleaudio.js two days before i even ran it
[08:23] astrolin has joined the channel
[08:23] Anti-X: and i haven't ran audio.js yet, but it's still almost done
[08:23] ajsie: okay 
[08:23] Anti-X: ;)
[08:23] ajsie: i have to think what is the best effective way for me to code and push it up
[08:24] _announcer: Twitter: "@ Koichik it a shame Oh! I&#39;m easy to get into the event Wednesday is at work. . I&#39;m looking forward to the end of nodejs seeing you at drinking!" [ja] -- 西山 雄也/Nishiyama Yuya. http://twitter.com/nsyee/status/27120107262
[08:24] astrolin has joined the channel
[08:27] unomi has joined the channel
[08:27] pufuwozu has joined the channel
[08:30] derferman has joined the channel
[08:30] saikat has joined the channel
[08:30] Aamir has joined the channel
[08:33] pufuwozu has joined the channel
[08:34] zomgbie has joined the channel
[08:36] xraid has joined the channel
[08:39] FransWillem has joined the channel
[08:41] pufuwozu has joined the channel
[08:43] caolanm has joined the channel
[08:46] pufuwozu has joined the channel
[08:47] _announcer: Twitter: "For now, note. / WebSocket aim for the &quot;real Web&quot;! Node.js first shock and the Prosperous Future WebSocket - @ IT http://htn.to/wEFsUH" [ja] -- 中村英都. http://twitter.com/Hideto_N/status/27121175814
[08:49] _announcer: Twitter: "Spoke about the report he heard on the # codefest NodeJS. More desire to understand the technology ..." [ru] -- Maxim Denisov. http://twitter.com/global_max/status/27121229871
[08:50] xla has joined the channel
[08:51] _announcer: Twitter: "postgres.js, a pure postgresql driver for node.js, alpha released http://tri.mu/04m #postgresql #js #incredible" -- Piedvache Hervé. http://twitter.com/footcow/status/27121321822
[08:51] pufuwozu has joined the channel
[08:52] _announcer: Twitter: "MarkUp lets you draw on any website, lovely bookmarklet. Built in node.js. http://markup.io" [nl] -- Ruben Bos. http://twitter.com/rubenbos/status/27121371935
[08:53] murphy has joined the channel
[08:53] murphy has joined the channel
[08:56] benreesman has joined the channel
[08:56] Aamir has left the channel
[08:57] pufuwozu has joined the channel
[08:58] olegp has joined the channel
[08:58] path[l] has joined the channel
[09:00] [[zz]] has joined the channel
[09:00] jpld has joined the channel
[09:01] Nohryb has joined the channel
[09:01] pufuwozu has joined the channel
[09:02] nsm has joined the channel
[09:03] TomY has joined the channel
[09:06] _announcer: Twitter: "And Tb @ ncorreia adepti node.js do?" [hu] -- joão machado. http://twitter.com/joao_machado/status/27121996399
[09:06] TomsB has joined the channel
[09:07] pufuwozu has joined the channel
[09:10] nsm has joined the channel
[09:11] mytrile has joined the channel
[09:12] pufuwozu has joined the channel
[09:12] unomi has joined the channel
[09:13] niko has joined the channel
[09:14] jetienne: hmm what is the name of the js framework with no code ? the one from jsconfeu ?
[09:15] ajsie: is joyent in the same leagues as heroku?
[09:15] ajsie: their approach seems different .. like a better VPS .. not like heroku that seems to be managed hosting
[09:16] jetienne: ajsie: i experienced heroku this weekend. it is easy and fast to setup. but may rapidely become quite costy
[09:16] jetienne: ajsie: i dunno for joyent
[09:17] ajsie: yeah i've used heroku .. great service 
[09:17] ajsie: but want to understand joyent and see if it's something for me
[09:18] jetienne: ajsie: there is a #joyent channel if you want
[09:18] ajsie: yeah i know but i rarely get response =)
[09:18] ajsie: i have NEVER got a response to be precise
[09:19] pufuwozu has joined the channel
[09:20] unomi has joined the channel
[09:22] mbrochh has joined the channel
[09:22] hdon has joined the channel
[09:24] pufuwozu has joined the channel
[09:25] MikhX has joined the channel
[09:26] MikhX has joined the channel
[09:27] _announcer: Twitter: "Created a new issue for #nodeunit. http://github.com/caolan/nodeunit/issues/issue/26 Any #nodejs guy out there with an idea? /cc @caolan" -- Kadir Pekel. http://twitter.com/kadirpekel/status/27122974694
[09:28] boaz_ has joined the channel
[09:28] unomi has joined the channel
[09:28] aubergine has joined the channel
[09:29] pufuwozu has joined the channel
[09:29] deoxxa: ok, i'm just banging my head on a wall now
[09:29] aubergine has joined the channel
[09:29] deoxxa: what would be the fastest way to take the buffer Buffer('\x01\x00') and get the integer 100 from it?
[09:30] mikeal1 has joined the channel
[09:30] deoxxa: this is an operation that will be done potentially tens of thousands of times per second, so it needs to be pretty quick
[09:31] deoxxa: actually, i'm just doing this in completely the wrong way, never mind me
[09:31] deoxxa: ACTION goes back to attacking his wall
[09:32] Jonasbn_ has joined the channel
[09:33] antono has joined the channel
[09:34] pufuwozu has joined the channel
[09:34] delapouite has joined the channel
[09:34] sideshowcoder has joined the channel
[09:39] pufuwozu has joined the channel
[09:40] digitalspaghetti: any nodejitsu people around?>
[09:45] pufuwozu has joined the channel
[09:45] daglees has joined the channel
[09:46] holydevil has joined the channel
[09:48] robotarmy has joined the channel
[09:48] ajsie: is it possible to register in https://no.de/
[09:48] ajsie: i dont get what a coupon is?
[09:49] omarkj has joined the channel
[09:52] pufuwozu has joined the channel
[09:53] ajsie: could anyone donate a node account on Heroku to me? I'd glad to pay for it =)
[09:54] agnat has joined the channel
[09:56] Jonasbn_: ajsie: I was actually just about to look into how to get a Heroku node account. Let me know if there's and easy solution! :)
[09:57] digitalspaghetti: Heroku no longer offer the node service to new customers, only to existing who signed up before a certain date
[09:57] digitalspaghetti: it's still in alpha
[09:57] pufuwozu has joined the channel
[09:57] ajsie: digitalspaghetti: yeah i know 
[09:57] ajsie: im desperate
[09:58] ajsie: i pay!!
[09:58] digitalspaghetti: you might be better off with something like this: http://github.com/nodejitsu/node-cloudservers
[09:58] digitalspaghetti: rackspace cloudservers
[09:58] ajsie: how does it work
[09:59] digitalspaghetti: well it's just a cloud server instance, kind of like ec2, so just do something like this: http://blog.nodejitsu.com/nodejs-cloud-server-in-three-minutes
[09:59] _announcer: Twitter: "@hugoahlberg There's also one in #nodejs here http://github.com/sbrekken/Rumpetroll #yay" -- Simen Brekken. http://twitter.com/simenbrekken/status/27124533687
[10:02] MattJ has joined the channel
[10:02] ajsie: no one that want to sell their account? =)
[10:02] pufuwozu has joined the channel
[10:04] Kami_ has joined the channel
[10:07] hellp has joined the channel
[10:08] pufuwozu has joined the channel
[10:10] JimBastard: ajsie: why do you need public hosting soo badly right now?
[10:10] JimBastard: do you have an application ready to be rolled out?
[10:11] ajsie: JimBastard: just want to test =)
[10:11] JimBastard: ajsie: test locally
[10:11] ajsie: yeah
[10:12] JimBastard: you can sign up @ www.nodejitsu.com if you'd like. we'll be public end of month
[10:12] ajsie: i already have
[10:12] ajsie: first I didn't get the page
[10:12] ajsie: so you are providing hosting for node apps?
[10:13] JimBastard: aye
[10:13] ajsie: what is the vision 
[10:13] ajsie: or concept
[10:13] JimBastard: 20/20
[10:13] ajsie: like heroku/joyent or more like slicehost/rackspace
[10:13] JimBastard: i can't get into too many details, but it will be the best most awesome thing ever
[10:13] ajsie: 20/20?
[10:13] JimBastard: like heroku
[10:13] ajsie: okay
[10:14] ajsie: can't tell anything?
[10:14] JimBastard: but with a few things that heroku and joyent dont do at all
[10:14] ajsie: oh 
[10:14] ajsie: interesting
[10:14] stride: unicorns? great! :>
[10:14] JimBastard: for instance, if you are a development shop or if you work for clients
[10:14] JimBastard: we'll have tools to help manage that
[10:14] JimBastard: like automated billing and what not
[10:15] ajsie: JimBastard: i c
[10:15] JimBastard: other things as well though
[10:15] ajsie: will it be beta then?
[10:15] JimBastard: ?
[10:15] ajsie: or official launch
[10:15] ajsie: at the end of the month
[10:15] JimBastard: i think we arent going to charge people for a while, so i guess thats beta
[10:16] JimBastard: we've been testing since april or so
[10:16] pufuwozu has joined the channel
[10:16] ajsie: okay 
[10:16] ajsie: i think i get one of your features
[10:16] ajsie: you are the guys of prenup and kyuri
[10:16] JimBastard: aye
[10:16] ajsie: you are going to integreate those frameworks on it!
[10:16] ajsie: :)
[10:17] JimBastard: something like that! you'll have to wait to see! :-)
[10:17] ajsie: yeah
[10:17] JimBastard: if you are an open-source application developer, you'll really like some of the stuff we will be doing
[10:17] ajsie: yeah i am very focused on OS-app develeopment
[10:18] ajsie: so bad of you to trigger my expectations and impatience
[10:18] ajsie: i want christmas!
[10:18] JimBastard: we are working on some things that can help proliferate and even help monetize OSS apps
[10:18] JimBastard: node apps that is!
[10:19] SubStack: this is relevant to my interests
[10:19] JimBastard: ;-)
[10:19] ajsie: i read your prenup
[10:19] JimBastard: big hint : irc friends are gonna the best treatment for this app marketplace :-)
[10:19] SubStack: being that I have a big OSS app that is also written in node
[10:19] ajsie: first page .. maybe you mean billing automation =)
[10:20] SubStack: but there is other stuff todo with that
[10:20] ajsie: JimBastard: my biggest "issue" is right now development and production envionrment are 2 different places
[10:21] pufuwozu has joined the channel
[10:21] _announcer: Twitter: "Node.js before you finished down when used without permission" [ja] -- ぐらンダー武蔵. http://twitter.com/grapswiz/status/27125626081
[10:21] ajsie: eg. production is no brainer with Heroku .. but locally I have to install everything .. using chef/vagrant etc .. its a burden really .. not sure you guys are going to fix that ..  but just wanted to share my thoughts
[10:23] JimBastard: ajsie: we actually have been thinking about that as well
[10:23] Gruni has joined the channel
[10:23] JimBastard: the jump to actually shipping binaries for OS's though is a bit far away
[10:23] JimBastard: but eventually you could download the nodejitsu env
[10:24] JimBastard: thats not this year though
[10:24] ajsie: cool
[10:24] mape: ACTION burns Drupal to the ground
[10:24] mape: Want to add a class to a automated wrapper div? Jump through 13 hoops
[10:25] JimBastard: oofa
[10:25] ajsie: JimBastard: What do you think about Heroku's and Joyent's node competition?
[10:25] JimBastard: ajsie: in what regard?
[10:25] ajsie: why would people choose you before them?
[10:25] Anti-X: is there a browscap thingy thangy for node? or even just a bullet proof simple one for the <10 largest browsers
[10:25] JimBastard: its a completely different class of service 
[10:25] Anti-X: i just need browser name and version (and os)
[10:25] ajsie: especially Heroku with lots of future addons for node
[10:25] JimBastard: our support and agility will be unbeatable
[10:26] ajsie: i c
[10:26] JimBastard: ive got bad news about heroku ajsie , their node hosting is dead until next year
[10:26] ajsie: i bet you have encoded some agile methods in a framework ready to use for developers
[10:26] JimBastard: they are a ruby company at heart
[10:26] pufuwozu has joined the channel
[10:26] ajsie: JimBastard: yeah i know
[10:26] ajsie: how about joyent?
[10:26] ajsie: they are node company at heart!
[10:27] Anti-X: a cow in buffalo's clothing
[10:27] JimBastard: joyent is a great company. if you have the budget to get joyent to consult at your company and do all your node hosting and assist with your application design, you should
[10:27] JimBastard: if you want to get the CEO and CTO answering your support tickets personally, you should do nodejitsu
[10:28] JimBastard: making node hosting work is our number one priority 
[10:28] JimBastard: nothing else is more important to us, then the node hosting working right
[10:28] ajsie: sounds like you have thought a lot about the developers .. looking forward to it
[10:28] ajsie: cool
[10:28] JimBastard: :-D
[10:29] Anti-X: you're talking about just drop in .js files and make them run, right? because i don't see how it's hard to make node itself run on a vps, say
[10:29] chapel: what kind of prices JimBastard ?
[10:29] micheil: although, naturally, JimBastard is biased towards his own services
[10:29] JimBastard: chapel: comparable with heroku
[10:29] JimBastard: micheil: i dont think its unfair to say that nodejitsu is the most focused on node cloud hosting then any of the other companies?
[10:30] JimBastard: joyent has a huge stake in enterprise, and heroku is focused on ruby
[10:30] JimBastard: i dunno, im sleepy
[10:30] chapel: honestly I think a bw and process based price model would be good, ie charge for bw used and how many processes you have running, but ignore memory usage
[10:30] micheil: yeah, but joyent are doing heaps of stuff to ensure node works
[10:30] JimBastard: micheil: of course
[10:30] chapel: its crazy how big node has become
[10:31] chapel: I know ruby had a huge rise as well
[10:31] digitalspaghetti: JimBastard: you work at nodejitsu then?
[10:31] chapel: but the hosting side of things didn't hit as soon
[10:31] chapel: ceo right?
[10:31] ysynopsis has joined the channel
[10:31] JimBastard: digitalspaghetti: aye, founder
[10:31] JimBastard: with indexzero
[10:31] digitalspaghetti: cool, i'm checking out your node-cloudserver stuff
[10:31] chapel: ah
[10:31] chapel: I wondered
[10:32] pufuwozu has joined the channel
[10:32] digitalspaghetti: i was going to look at EC2, but this looks much simplier from a deploy script point of view
[10:32] mr_daniel: I want to write an inherit-method similar to sys.inherits (http://github.com/ry/node/blob/master/lib/util.js#L382), but for the browser side. Unfortunately JS engines differ.
[10:32] chapel: how are you planning scalability?
[10:32] JimBastard: chapel: use web scale 2.0
[10:33] mr_daniel: for example: some have Object.create, others don't; some allow access to __proto__, some don't
[10:33] digitalspaghetti: i need to be able to deploy node + my app + couchdb 'database' of designs + some initial data
[10:33] micheil: mr_daniel: just look in git history
[10:33] JimBastard: digitalspaghetti: yeah exactly! i think we will be using couchone for our couch hosting
[10:33] mr_daniel: I know how to check if Object.create is available:  if(Object.create==='function'), but how can I check if __proto__ is available
[10:33] chapel: I have a couchone instance
[10:33] JimBastard: unless someone wants a dedicated / local one
[10:33] chapel: seems nice
[10:33] mr_daniel: micheil: does the history shows how to check for __proto__ availablity?
[10:33] chapel: though I haven't used it much yet
[10:34] digitalspaghetti: JimBastard: yea, looking at cloudserver, inter-server communication is free
[10:34] digitalspaghetti: so i think i might set up one machine for the couchdb instance, one for our client apps
[10:34] micheil: mrsort of, one sec.
[10:35] JimBastard: digitalspaghetti: ec2 is a little cheaper then rackspace, but rackspace is pretty amazing
[10:35] micheil: mr_daniel: or, just steal from another JS librayr
[10:35] JimBastard: support is very very good
[10:35] ajsie: JimBastard: its like 2 weeks from now
[10:35] digitalspaghetti: JimBastard: yea, it's the support + the API looks much simplier
[10:35] JimBastard: ajsie: ?
[10:35] ajsie: JimBastard: from your public release
[10:35] digitalspaghetti: EC2 is a bit of a pig, especially with using Java for the ec2 tool set
[10:35] JimBastard: ajsie: well its a good thing broodmother has over 200 passing tests!
[10:36] micheil: rackspace wouldn't take my service because I'm still < 18
[10:36] ajsie: :)
[10:36] chapel: for simple cheap hosting, I have been using webfaction
[10:36] JimBastard: im hacking away at the client website for now
[10:36] chapel: enjoying it
[10:36] ajsie: yeah good website is a must! =)
[10:36] JimBastard: if you look at the github ajsie , you'll see most of the pieces of our stack are open and have good test coverage
[10:36] digitalspaghetti: chapel: i was using webfaction too, but try running a django site + node, they kept killing my node stuff
[10:36] JimBastard: we are using almost all those projects live
[10:36] chapel: lol yeah digitalspaghetti
[10:36] micheil: mr_daniel: I'm gunna be a little slow replying. for some reason everything at the moment that should be hitting memory on this box is hitting disk.
[10:36] digitalspaghetti: kept pushing over the memory limits
[10:36] chapel: have to watch node, since it is a memory hog
[10:37] micheil: node isn't a memory hog.
[10:37] chapel: well
[10:37] chapel: it can be
[10:37] chapel: like anything
[10:37] digitalspaghetti: chapel: especially with using express + YUI :D
[10:37] JimBastard: res.end()
[10:37] digitalspaghetti: i use the YUI stuff from davglass to do parsing
[10:37] micheil: I can parse like 1 GB data / s with it and it handles with ~50-100Mb.
[10:37] digitalspaghetti: (http://tanepiper.com)
[10:37] digitalspaghetti: micheil: yea, the problem is on my webfaction i also have a django site with apache + mod_python
[10:38] chapel: sorry, wasn't meaning to say node was bad, just saying that in a restricted environment, it is easy to overextend your memory limit using node
[10:38] digitalspaghetti: that uses a lot of memory as well
[10:38] micheil: node's memory usage is fine.
[10:38] mr_daniel: micheil: maybe your OS is using the swap parition right know?
[10:38] pufuwozu has joined the channel
[10:38] micheil: mr_daniel: nawh, just too much open.
[10:38] digitalspaghetti: node would be < 60mb, but combined everything kept going over 170mb
[10:38] chapel: micheil: well with the basic plan at 80mb, you have to watch it
[10:38] ajsie: JimBastard: i like that you have used Vows and Kyuri to test
[10:39] chapel: I just had a simple script using jsdom and http-agent to parse a site, and it hit 40mb
[10:39] ajsie: JimBastard: maybe you will be the next "Heroku" but for Node =)
[10:39] JimBastard: ajsie: thats the idea!
[10:39] digitalspaghetti: chapel: i suspect it's using DOM on the server side
[10:39] digitalspaghetti: it's not memory optimised
[10:39] chapel: yes
[10:39] chapel: its not
[10:39] chapel: :)
[10:39] pngll has joined the channel
[10:39] chapel: not specific to node
[10:40] chapel: if it was anything else, doubt it would have been above 20mb
[10:41] micheil: DOM is expensive in node still
[10:41] micheil: if you don't use DOM implementations, node is fine.
[10:41] micheil: it's the DOM libraries that push it beyond
[10:42] micheil: mr_daniel: http://github.com/ry/node/blob/v0.1.92/lib/sys.js#L232-238
[10:42] chapel: in the future, would there be cheaper ways to parse dom?
[10:42] micheil: should work in a browser
[10:43] micheil: chapel: write a DOM implementation in C/C++ like chrome, firefox, safari, etc use, then yes
[10:43] digitalspaghetti: chapel: there is no real proper implementaion of DOM in C++
[10:43] micheil: but until then, no.
[10:43] chapel: or should I do string parsing instead of dom parsing?
[10:43] micheil: definitely
[10:43] micheil: if possible.
[10:43] chapel: hmm, anything you recommend?
[10:44] micheil: mustache, jade, haml?
[10:44] chapel: considering what I want to build, Im going to have to queue jobs
[10:44] micheil: all of those are pretty light weight.
[10:44] chapel: eh
[10:44] chapel: not for rendering
[10:44] chapel: for parsing/scraping
[10:44] micheil: ah
[10:44] micheil: in which case your only real choice is probably jsdom.
[10:44] chapel: already using it
[10:44] micheil: or, take up the code gloves and write a C implementation.
[10:45] ajsie: JimBastard: have you thought about developers using MongoDB/CouchDB .. eg. in Heroku we can just use the addons .. will there be any kind of support/abstractions of Database in nodejitsu?
[10:45] pufuwozu has joined the channel
[10:45] chapel: heh, outside of my scope :(
[10:45] chapel: at least atm
[10:45] micheil: then you'll have to do with jsdom.
[10:45] JimBastard: ajsie: something similiar, yes
[10:45] ajsie: okay great
[10:46] _announcer: Twitter: "Head to BKK for urgent meeting, Node.js for distributed system and large scale products." -- Neung Poowanai. http://twitter.com/taneung/status/27126957599
[10:46] ajsie: JimBastard: RabbitMQ, Sendgrid then? Support or "i am on my own"?
[10:47] chapel: so my idea for my app is to queue up jobs, scrape the site as there is a queue, and put all the data into couchdb, at which time have an active renderer that takes the data and does something with it
[10:47] JimBastard: ajsie: if you want it, we'll add it
[10:47] JimBastard: as long as you are paying, lol
[10:47] _announcer: Twitter: "A multi-user experiment with Node.js input and physics calculation, connected to HTML5 canvas: http://2x.io/g" -- Einar Otto Stangvik. http://twitter.com/einaros/status/27127012579
[10:47] ajsie: JimBastard: of course =)
[10:47] chapel: ajsie: look at it this way, they are small enough they can add whatever you want, :P
[10:47] chapel: but smart enough to listen and be agile
[10:47] chapel: amirite?
[10:48] digitalspaghetti: chapel: i used davglass's YUI implementation, it made stuff really easy for parsing
[10:48] digitalspaghetti: I can parse HTML + XML
[10:48] ajsie: chapel: yeah interesting field .. the best user-experience will win 
[10:48] chapel: I saw it, but how light is it? I am not familiar with yui (not that its much different)
[10:48] micheil: being able to read heaps of different programming languages is useful when writing FUSE bindings.
[10:48] digitalspaghetti: it's not light, but it's fast - and i just cache the page contents to file, not in a db instance
[10:49] chapel: I guess my question is, am I over engineering the problem, by separating the tasks, is that even node like?
[10:49] digitalspaghetti: as i say, my 4 page site goes to ~60mb if you view all the pages, then it sits ~ 25mb when idle
[10:49] ajsie: making it simple to develop .. i don't even want to set up my own VPS manually .. i just want to choose from a list "ruby 1.9.2", "node latest", "mongodb latest" etc and have it all installed so i can code and then just through one command have it deployed
[10:50] pufuwozu has joined the channel
[10:50] chapel: digitalspaghetti: I haven't even got to a front end, I am just working on the scraping and logic atm
[10:51] digitalspaghetti: http://github.com/tanepiper/tanepiper.com/blob/master/apps/linkedin/index.js is an example of one of my DOM-based scrapings
[10:52] digitalspaghetti: i parse my LinkedIn page and re-present it
[10:52] digitalspaghetti: http://github.com/tanepiper/tanepiper.com/blob/master/apps/twitter/index.js is doing a RSS feed
[10:53] digitalspaghetti: although i wrote this when i was first starting out with node
[10:53] digitalspaghetti: there is probably a lot of optimisation i can do
[10:55] pufuwozu has joined the channel
[10:56] chapel: well I want only certain info from the webpage I am parsing
[10:56] _announcer: Twitter: "…@simenbrekken forked & made a Node.js version: http://bit.ly/d9iQja — (he also built the org Rumpetroll code in EventMachine/Ruby!)" -- Hugo Ahlberg. http://twitter.com/hugoahlberg/status/27127522249
[10:56] _announcer: Twitter: "My puny node.js server handled that remarkably well, however useless the application. http://2x.io/g" -- Einar Otto Stangvik. http://twitter.com/einaros/status/27127524505
[10:56] chapel: and sadly, its a lot of pages I have to parse
[10:56] chapel: not just one
[10:58] chapel: someone gives a username, I then parse a few pages for links to games (each game has its own page) I then goto each page for each game and gather information from it, I want to store it in a database so I don't have to redo each game incase another user with the same game comes and uses the site
[10:59] ysynopsis has joined the channel
[11:01] micheil: ryah: ping.
[11:01] pufuwozu has joined the channel
[11:01] Tim_Smart: micheil: Is ryah in SF?
[11:01] chapel: what do you think digitalspaghetti ?
[11:01] micheil: yeah.
[11:01] micheil: oh. 4am.
[11:01] Tim_Smart: It is 4am there ^^
[11:02] Tim_Smart: Yeah.
[11:02] chapel: heh
[11:02] chapel: its 4am here
[11:02] chapel: :)
[11:02] micheil: Tim_Smart: any ideas on how a C binding should call functions into javascript?
[11:02] chapel:  4:02  up 2 days, 19:15, 2 users, load averages: 0.25 0.39 0.41
[11:02] Tim_Smart: micheil: Call function from C?
[11:02] Tim_Smart: Sure.
[11:03] micheil: because it looks like FUSE loads the C api you describe, rather then being JS calling into C it's the other way round
[11:03] micheil: C calling into JS
[11:03] micheil: most things in node are js invoking C methods
[11:03] ysynopsis has joined the channel
[11:04] _announcer: Twitter: "Using server-side Javascript NodeJS or what has become a reality much longer. Javascript is called at all I mean I can not imagine 10 people in development, or rather loosely speaking NodeJS long after checking inside or touching." [ja] -- disktnk. http://twitter.com/disktnk/status/27128002511
[11:06] fermion has joined the channel
[11:07] aliem has joined the channel
[11:07] pufuwozu has joined the channel
[11:10] rnewson has joined the channel
[11:12] astrolin_ has joined the channel
[11:12] zorzar_ has joined the channel
[11:12] pufuwozu has joined the channel
[11:15] kjy112 has joined the channel
[11:18] pufuwozu has joined the channel
[11:18] christophsturm has joined the channel
[11:18] Tim_Smart: micheil: http://gist.github.com/622021
[11:19] gregerolsson has joined the channel
[11:20] _announcer: Twitter: "@ Munichjs I can show what node.js. Will anyone? # # Toomuchjsexception nodejs # muchjs" [de] -- Sebastian Schürmann. http://twitter.com/sschuermann/status/27128955523
[11:21] micheil: Tim_Smart: can't do that.
[11:21] micheil: due to how fuse.h says the C api needs to be'
[11:22] Tim_Smart: micheil: I use a similar approach for node-gtk (For widget signals)
[11:22] micheil: hmm..
[11:22] micheil: I'll have to check that.
[11:23] mbrochh has joined the channel
[11:23] Tim_Smart: micheil: http://github.com/Tim-Smart/node-gtk/blob/master/src/ngtk_widget.cc#L16-20
[11:23] micheil: like, static int hello_getattr(const char *path, struct stat *stbuf)
[11:24] pufuwozu has joined the channel
[11:24] breccan_ has joined the channel
[11:26] cefn has joined the channel
[11:26] cefn has left the channel
[11:27] micheil: Tim_Smart: yeah, I think gtk is slightly different
[11:28] Tim_Smart: micheil: Here is what a standard api looks like: http://github.com/Tim-Smart/node-gtk/blob/master/src/ngtk_entry.cc#L95
[11:29] pufuwozu has joined the channel
[11:31] _announcer: Twitter: "Sschuermann lol @ # # nodejs munichjs" [hr] -- Nils Hitze. http://twitter.com/kojote/status/27129575346
[11:31] Gruni has joined the channel
[11:32] _announcer: Twitter: "# Darkvander (coyote)-D # # Sschuermann nodejs munichjs" [hr] -- TwittServices. http://twitter.com/TwittServices/status/27129628810
[11:32] Anti-X: Tim_Smart, is there a problem with FF 3.6 and socket.io? it seems that it wants to use websockets, but there's nothing happening other than an error from the ws.proto.disconnect function, even though it never even connects according to the events
[11:32] Tim_Smart: Not sure/
[11:33] Anti-X: you're a dev on that aren't you?
[11:33] Tim_Smart: Haven't used it all that much.
[11:33] Tim_Smart: Nope.
[11:33] Anti-X: hm
[11:33] micheil: FF3.6 shouldn't have "WebSocket" in window
[11:33] Anti-X: you're listed on npm
[11:34] pufuwozu has joined the channel
[11:34] Anti-X: micheil, i know... that's what's weird
[11:37] _announcer: Twitter: "Node.js at Google Tech Talk .. http://youtu.be/F6k8lTrAE2g cooler than cool .." [de] -- MacbethIII. http://twitter.com/MacbethIII/status/27129978389
[11:38] path[l]2_ has joined the channel
[11:38] Anti-X: where is guillermo when you need him
[11:39] sudoer has joined the channel
[11:40] pufuwozu has joined the channel
[11:40] _announcer: Twitter: "ever since watching the nodejs talk, I've had "body body body body body body body" in Ryan Dahl's voice stuck in my head" -- David Hall. http://twitter.com/cowsandmilk/status/27130166564
[11:43] holydevil has left the channel
[11:43] bradleymeck has joined the channel
[11:44] micheil_mbp has joined the channel
[11:45] pufuwozu has joined the channel
[11:46] breccan__ has joined the channel
[11:46] _announcer: Twitter: "node.js I&#39;d classify you like a mouse compared to the processing of the octopus, I never gone to sea rats? Ah, the sea cucumber sea cucumber ... but I yeah. Even though rabbit grazing is also why the mice first place (ry / WebSocket aim for the &quot;real Web&quot;! - @ IT http://j.mp/cWsYPG" [ja] -- 未席汚してやんよ. http://twitter.com/imashi/status/27130527170
[11:47] _announcer: Twitter: "Normally I would never edit live, but I was playing with some node.js. File was gone, still loaded in node... #wheretheresawilltheresaway" -- Richard Assar. http://twitter.com/richardassar/status/27130576024
[11:49] sth has joined the channel
[11:50] sth: Hi, is there a way to inspect an object to stdout?
[11:50] sth: n/m
[11:50] Anti-X: sys.inspect
[11:50] Ori_P has joined the channel
[11:51] pufuwozu has joined the channel
[11:52] Gruni has joined the channel
[11:56] pufuwozu has joined the channel
[11:57] ben_alman has joined the channel
[11:57] tobeytailor has joined the channel
[11:58] digitalspaghetti: with JSON.stringify, is there a way to get it to pretty print with indents?
[11:58] digitalspaghetti: rather than one blob line of text?
[12:01] hoodoos has joined the channel
[12:02] pufuwozu has joined the channel
[12:02] herbySk has joined the channel
[12:02] Tim_Smart: digitalspaghetti: I don't think so. The is always sys,inspect + console.log :)
[12:03] digitalspaghetti: yea, there is :D  found it
[12:03] digitalspaghetti: var output = JSON.stringify(design, null, '\t');
[12:03] digitalspaghetti: takes design and makes it pretty output with tabs
[12:03] digitalspaghetti: i knew there was something like that
[12:04] _announcer: Twitter: "I'll be talkin riakjs for nodejs this Thurs @ the nycjs group. Will cover some of the new riak hotness. http://bit.ly/bpdR6e" -- alexander sicular. http://twitter.com/siculars/status/27131690951
[12:04] digitalspaghetti: the problem was I wanted 4 spaces insstead
[12:04] digitalspaghetti: you can't just pass a number though, you have to do:
[12:04] digitalspaghetti: var output = JSON.stringify(design, null, new Number(4));
[12:04] _announcer: Twitter: "@caseywstark I was always a fan of Ruby and Rails, but node.js is getting my attention." -- Antonio Salazar. http://twitter.com/lightfiend/status/27131712105
[12:04] digitalspaghetti: instead of just 4
[12:07] pufuwozu has joined the channel
[12:07] herbySk has joined the channel
[12:08] tg has joined the channel
[12:08] Anti-X: micheil, for some reason my firefox does have 'WebSocket in window'... v 3.6.4
[12:08] mif86 has joined the channel
[12:09] micheil: it shouldn't.
[12:10] Anti-X: well it does! but it doesn't have send methods on it... :-/
[12:10] Anti-X: so that makes it pretty fail
[12:11] micheil: Anti-X: checking with the firefox guy in #whatwg.
[12:11] Anti-X: i just did alert('WebSocket' in window) and it says true
[12:11] Anti-X: so there's no arguing that it's there
[12:11] micheil: it shouldn't be.
[12:12] ashb: in a blank window?
[12:12] Anti-X: hold on
[12:12] Anti-X: never mind
[12:13] Anti-X: socket.io made it
[12:13] Anti-X: for some reason
[12:13] micheil: >_>
[12:13] pufuwozu has joined the channel
[12:13] Anti-X: but there's still an error in my ff regarding it
[12:13] Anti-X: since it calls it
[12:14] Athox has joined the channel
[12:14] _announcer: Twitter: "@aarongodin Enjoying your slides and blog post [http://goo.gl/siIi] Will definitely follow up when you blog about Node, Processing.js, etc." -- Andy L. http://twitter.com/ALindeman/status/27132368521
[12:15] _announcer: Twitter: "While we look RingoJS NodeJS and differences. The NodeJS Async (asynchronous), but the intention, RingoJS is not the case? ?" [ja] -- fu_su. http://twitter.com/fu_satou/status/27132438055
[12:15] micheil: ah. Flash cobbles the WebSocket constructor
[12:15] Athox: and it specifically calls the WS object, which is directly connected to a WebSocket object
[12:16] Athox: yeah but then it should use the FlashWebSocket object, and the thing it calls now is WS.prototype.blabla, which IS WebSocket
[12:16] micheil: Anti-X: it's a bad implementation that; As soon as you load up the flash fallback, it takes over the WebSocket object, and replaces it
[12:17] Athox: yeah but the WS setup is before the FlashWS setup
[12:17] Athox: unless
[12:18] dnolen has joined the channel
[12:18] micheil: well, if you load up socket.io in firefox 3.6.X then you'll get flash fallback loaded
[12:19] pufuwozu has joined the channel
[12:19] micheil: so then if you do: new WebSocket() that'll be a call to flash
[12:19] micheil: not to the browser.
[12:19] sudoer has joined the channel
[12:19] micheil: to fix: 
[12:19] micheil: 		return 'WebSocket' in window && WebSocket.prototype && ( WebSocket.prototype.send && !!WebSocket.prototype.send.toString().match(/native/i)) && typeof WebSocket !== "undefined";
[12:22] heavysixer has joined the channel
[12:22] _announcer: Twitter: "Video: Node.js, JavaScript development on the server. Quite an interesting concept. http://tumblr.com/xktlh2oag" -- Felipe Lalanne. http://twitter.com/pipex/status/27132965793
[12:24] pufuwozu has joined the channel
[12:24] Anti-X has joined the channel
[12:27] sveimac has joined the channel
[12:28] micheil has joined the channel
[12:29] pufuwozu has joined the channel
[12:32] _announcer: Twitter: "Really neat product: @MarkupIO, http://markup.io/ built using @nodejs and @RaphaelJS" -- John Wards. http://twitter.com/johnwards/status/27133679312
[12:33] roger_raymond has joined the channel
[12:34] _announcer: Twitter: "Async node.JS http://github.com/caolan/async" [pl] -- Yuri Nevsky. http://twitter.com/outself/status/27133792811
[12:35] pufuwozu has joined the channel
[12:37] Tim_Smart has joined the channel
[12:39] hunt0r has joined the channel
[12:40] pufuwozu has joined the channel
[12:43] Ori_P has joined the channel
[12:43] _announcer: Twitter: "getting ready for the first of my own talks: "JavaScript on client and Server". I thought it would be obvious it's a node.js introduction…" -- Dirk Ginader. http://twitter.com/ginader/status/27134482017
[12:44] Anti-X has joined the channel
[12:46] pufuwozu has joined the channel
[12:51] bahamas has joined the channel
[12:52] pufuwozu has joined the channel
[12:55] jtsnow has joined the channel
[12:57] jansc_ has joined the channel
[12:57] trotter has joined the channel
[12:57] ysynopsis has joined the channel
[12:58] pufuwozu has joined the channel
[13:00] pengwynn has joined the channel
[13:04] pufuwozu has joined the channel
[13:04] washingmachine has joined the channel
[13:05] MasterCJ has joined the channel
[13:06] sveimac has joined the channel
[13:09] pufuwozu has joined the channel
[13:10] boaz_ has joined the channel
[13:14] pufuwozu has joined the channel
[13:18] ajpiano has joined the channel
[13:21] bradleymeck has joined the channel
[13:22] WALoeIII has joined the channel
[13:23] pufuwozu has joined the channel
[13:24] robotarmy has joined the channel
[13:25] Ari-Ugwu has joined the channel
[13:29] xak466 has joined the channel
[13:29] pufuwozu has joined the channel
[13:29] xak466: hi. i am making working on a long polling server in node js.
[13:29] xak466: is it advisable to proxy it behind nginx?
[13:30] Anti-X: it's not a problem
[13:30] xak466: any performance issues?
[13:30] davidsklar has joined the channel
[13:31] xak466: previously someone advised me against proxying node js behind apache. is that relavent?
[13:31] Anti-X: yeah
[13:31] dylan- has joined the channel
[13:32] xak466: so it's ok to proxy on nginx, but not on apache. is that right?
[13:33] Anti-X: if you care to read my answer here: http://stackoverflow.com/questions/3878096/nodejs-nodejs-org-experience-comments/3884324#3884324
[13:33] xak466: thanks Anti-X
[13:33] Anti-X: it may give you a clue of why apache is bad for node
[13:34] Tim_Smart has joined the channel
[13:34] xak466: Anti-X: if i wanted to run apache on the same server, would i put apache and node behind nginx?
[13:34] pufuwozu has joined the channel
[13:35] Anti-X: you would at least need to not have apache in front
[13:35] Anti-X: because that's where the limit is
[13:35] xak466: ok thanks.
[13:35] Anti-X: but there's no reason to run apache behind nginx, unless of course it's on a different machine
[13:35] Anti-X: nginx can do pretty much what apache can do
[13:35] emmanueloga has joined the channel
[13:35] xak466: what i want really is to be able to run apache and node on port 80
[13:35] mbrochh has joined the channel
[13:35] mbrochh has joined the channel
[13:36] xak466: ahhh... so nginx can do php, etc?
[13:36] Anti-X: well if the php developers haven't managed to slime their way onto nginx yet, i'm pretty sure it will happen
[13:36] bradleymeck: nginx has fastcgi
[13:36] xak466: sorry i am new to nginx
[13:37] xak466: i'm just asking about it because i want to run a webserver as well as node both behind port 80. any better suggestions?
[13:37] Anti-X: i saw someone was making php for android, and i fried some brain cells out of anger
[13:37] ysynopsis has joined the channel
[13:38] Anti-X: using nginx and node seems to become more common
[13:38] Anti-X: where nginx is the static fileserver and node is the streaming part
[13:38] zum: i use lighttpd to serve my site (static & php) and route some of the requests to a local node.js server
[13:39] chapel: well there is fastcgi
[13:39] zum: nginx seems to be more popular, but I'm sure it can do that as well
[13:39] Anti-X: yeah you can use php with fastcgi
[13:39] chapel: but if you want a more nginx way of doing php, get php-fpm
[13:39] chapel: zum http://interfacelab.com/nginx-php-fpm-apc-awesome/
[13:40] chapel: or xak466
[13:40] chapel: sorry
[13:40] zum: last time I checked, nginx was buggy and maldocumented, but things might have changed since then...
[13:40] Anti-X: it's nerdware, so it will pick up
[13:40] Anti-X: once more nerds discover it
[13:41] xak466: i know this is kind of an open ended question, but is nginx hard to pick up?
[13:41] chapel: webfaction uses a large nginx server to handle their whole clientbase for all their servers, with local apache servers for each server for users with php
[13:42] Tim_Smart has joined the channel
[13:42] c4milo has joined the channel
[13:43] zum: hmm this seems to hype nginx (over lighttpd at least), maybe it is worth a look then
[13:43] hpoydar has joined the channel
[13:43] bradleymeck: lighttpd will be below nginx until it patches that memory leak
[13:44] Anti-X: i think lighttpd is aimed at being the end server, whereas nginx is probably more aimed at being a proxy/distributor thing
[13:44] xak466: how would it compare to something like pound which is just a proxy
[13:47] pufuwozu has joined the channel
[13:48] Anti-X: you just answered that question yourself
[13:49] Lerchmo has joined the channel
[13:49] xak466: Anti-X: yes i know. but performance wise?
[13:50] micheil: uhh, I'd recommend against having node and php on the same port.
[13:50] Anti-X: a pure proxy would probably be extremely optimized, so you can imagine
[13:50] micheil: (for instance, if node is doing anything with websockets, then you could (atm) be opening your self up for cross-protocol attacks)
[13:50] xak466: would it be better to A) nginx + node proxied by nginx or B) apache + node behind pound
[13:51] dylan- has joined the channel
[13:51] micheil: well, really, depending on how you think of node, you can do just C) Node
[13:51] micheil: for instance, I'd be happy to run stuff straight off node at this stage.
[13:51] micheil: (unless I needed SSL)
[13:51] Anti-X: i do that
[13:51] Jonasbn_ has joined the channel
[13:52] xak466: micheil: i'm still more familiar with php and am more comfortable with it
[13:52] charlenopires has joined the channel
[13:52] xak466: so, lesser of two evils i guess - A) or B)?
[13:52] micheil: xak466: well, I'm not sure about you, but I'd be learning javascript.
[13:52] Anti-X: you'll get into it very quickly
[13:52] akweon has joined the channel
[13:52] pufuwozu has joined the channel
[13:52] Anti-X: also there's a js library for php functions
[13:52] micheil: you could also do: D) Node on say, :8080, PHP on :80
[13:52] Anti-X: if you're really really weird
[13:53] davidwalsh has joined the channel
[13:53] micheil: xak466: also, there's a heap of really good tutorials on learning JavaScript about, such as sitepoint.com
[13:54] xak466: i know javascript
[13:54] xak466: just not in the way that php is used i guess
[13:54] mif86 has joined the channel
[13:54] xak466: with templating
[13:54] xak466: and other stuff
[13:54] xak466: im transitioning i guess
[13:54] micheil: xak466: well, node with templating is more like rails or sinatra then php
[13:54] micheil: in the sense that you use say, HAML (or Jade)
[13:54] Nohryb has joined the channel
[13:55] xak466: do i still need to restart node each time i fix something?
[13:55] micheil: and then that language gets transformed into a JS function.
[13:55] xak466: atm it's like that
[13:55] micheil: xak466: yes.
[13:55] xak466: yeah
[13:55] micheil: xak466: although, there are libraries to automate that
[13:55] xak466: :)
[13:55] micheil: (imho, node should never auto-reload)
[13:55] jamesarosen has joined the channel
[13:56] xak466: im something like a chat server
[13:56] xak466: web based chat
[13:56] xak466: browser based
[13:56] micheil: why's everyone want to do that?
[13:56] xak466: so im using apache/php to send out the client files
[13:56] xak466: and node to just to the messaging
[13:56] hoodoos: guys, is Do should be considered as best practice for solving async related issues?
[13:56] bradleymeck: micheil to learn
[13:56] micheil: xak466: perhaps something like pusherapp would be better suited, unless you want to learn node.
[13:57] micheil: hoodoos: Do?
[13:57] xak466: i suppose it's part of my learning by studying the sample nodechat
[13:57] sugardave has joined the channel
[13:57] xak466: it's not anything great, but you can check it out here http://twich.me/isaacsu
[13:57] hoodoos: micheil, yes, lib Do, which allows to run funcs parallel/in chain
[13:57] bradleymeck: hoodoos Do, Conductor, and Step are the main libs for async issues, i use Step for simple things and manually write complex things
[13:58] pufuwozu has joined the channel
[13:58] dpritchett has joined the channel
[13:58] dpritchett: is it possible to create two separate staticProviders under a single instance of Connect?
[13:58] hoodoos: bradleymeck, i've read about conductor and step today, conductor's quite nice, combines chain with parallel easy
[13:59] bradleymeck: dpritchett yes, look into router
[13:59] micheil: xak466: well, yeah, kinda, because it's like longPolling + tables for layout.
[13:59] xak466: micheil: yeah i know. it's a start, and i'm working on it
[13:59] dpritchett: thanks
[13:59] xak466: :)
[13:59] micheil: k
[14:00] xak466: micheil: thanks for dropping by
[14:00] micheil: ACTION needs to work on websocket parsers and fuse
[14:01] xak466: thank you everyone for your help Anti-X micheil bradleymeck chapel
[14:01] xak466: bye
[14:01] xak466 has left the channel
[14:02] andrewa2 has joined the channel
[14:03] caolanm: hoodoos: http://github.com/caolan/async provides a pretty comprehensive set of tools for async problems, though I'm obviously biased in recommending it ;)
[14:03] pufuwozu has joined the channel
[14:03] caolanm: hoodoos: useful if you use underscore.js, since it provides async versions of many of the same functions
[14:04] hoodoos: caolanm, what is underscore.js?
[14:06] caolanm: hoodoos: http://documentcloud.github.com/underscore/
[14:07] caolanm: functional stuff like map, reduce, filter...
[14:07] Anti-X: i'm starting to think that java developers like it just because they can split the source into 4000 files of 1kB, so it looks like a huge project
[14:07] Anti-X: java that is
[14:08] pufuwozu has joined the channel
[14:09] spetrea: maybe someone here is interested , just forked the code of some pretty smart russian guy, and hacked it to get images attached to labels of github users -> http://i.imgur.com/YAuwI.png
[14:09] Anti-X: and every file is half copyright notice. the other half is 50% comments, 25% class declarations and if you strip away all the abstractions just to make every function contain less than 3 operations, you're left with just about 5 lines of code
[14:09] spetrea: it uses the thejit visualization toolkit for Javascript
[14:10] ircretary has joined the channel
[14:10] micheil: hmm.. sounds like graph databasing github
[14:10] bradleymeck: anti-x don't forget the interfaces for one time use classes
[14:10] Anti-X: of course
[14:11] Anti-X: and to be honest, that is a huge project, but it doesn't have to be
[14:12] marshall_law_ has joined the channel
[14:12] Anti-X: grunt programmers need work too
[14:12] aheckmann has joined the channel
[14:12] Anti-X: i guess
[14:13] nerdEd has joined the channel
[14:13] pufuwozu has joined the channel
[14:14] fjakobs has joined the channel
[14:15] matt_c has joined the channel
[14:16] EyePulp has joined the channel
[14:16] Me1000 has joined the channel
[14:16] yhahn has joined the channel
[14:17] Tim_Smart has joined the channel
[14:18] spetrea: micheil: graph databasing ?
[14:18] Tim_Smart has joined the channel
[14:18] micheil: spetrea: as in the data is modelled as if it were a graph database
[14:19] spetrea: micheil: yeah, do you like it ? :)
[14:19] pufuwozu has joined the channel
[14:19] spetrea: micheil: do you consider it a good/bad thing ?
[14:19] micheil: like what?
[14:20] spetrea: micheil: the idea of graphing github
[14:20] spetrea: or of some form of visually navigating through github's repositories/users/forks/commits
[14:20] micheil: uh, I'm referring to technology like Neo4j, where user N has X jumps to user M
[14:21] micheil: visualisation != graph database
[14:21] dmcquay has joined the channel
[14:23] ceej has joined the channel
[14:25] spetrea: I had to patch thejit to do this lol
[14:25] Anti-X: bradleymeck, can you tell that i have to look through java sources atm? :p
[14:25] antono has joined the channel
[14:25] pufuwozu has joined the channel
[14:25] ajsie has joined the channel
[14:26] Anti-X: i'm slightly agitated
[14:26] bradleymeck: anti-x really?? lol, better than reading python to find a bug
[14:26] spetrea: micheil: haf you used neo4j ? I'm interested in it and watching their videos right now
[14:26] ajsie: i find it very difficult to get started with express.js
[14:26] ajsie: due to the non-structure
[14:26] micheil: spetrea: I've not used it, purely because I don't know much about Java
[14:26] ajsie: dont know where to put anything and require it
[14:27] delapouite has joined the channel
[14:28] astrolin has joined the channel
[14:29] digitalspaghetti: so i've done a fresh install here, and i notice it says 'The 'sys' module is now called 'util'. It should have a similar interface.'
[14:29] digitalspaghetti: isn't that going to break a lot of stuff :D
[14:29] spetrea: micheil: I don't know much either about java. It seems a bit weird that they say it's "performant graph database" since it's written in java but hey ... :)
[14:30] pufuwozu has joined the channel
[14:30] hsuh has joined the channel
[14:32] bradleymeck: java still runs a bit faster than js on raw benches
[14:32] T-Co has joined the channel
[14:33] DrunkDwarf has joined the channel
[14:33] herbySk has joined the channel
[14:34] T-Co: Sorry for offtopic, but there is no support channel for dbslayer. Some someone know if it is possible to compile dbslayer with automake-1.11? It has static references for automake-1.10 and aclocal-1.10?
[14:34] pashields has joined the channel
[14:35] Anti-X: bradleymeck, but then you realise you have to program in java
[14:35] muhqu_ has joined the channel
[14:36] reifter has joined the channel
[14:36] pufuwozu has joined the channel
[14:39] micheil: digitalspaghetti: no. 
[14:39] micheil: digitalspaghetti: it's a soft migration, given say, 3 or 6 months, the sys file will probably get removed
[14:41] pufuwozu has joined the channel
[14:42] Anti-X: and you can't expect stuff to remain the same when it's still in version 0.x
[14:42] Anti-X: that's the whole point of 0.x
[14:43] gerred has joined the channel
[14:43] Anti-X: the liberty to pull the rug out from under people's feet
[14:43] softdrink has joined the channel
[14:44] ajsie: anyone here use express.js?
[14:45] micheil: Anti-X: soft migration means, you can still use sys, you just get a warning to upgrade
[14:45] ajsie: i wonder if there is a shortcut to create resourceful routes like Rails
[14:45] Anti-X: i know what it means
[14:45] ajsie: instead of writing every route
[14:45] Anti-X: i'm just saying, complaining that v 0.x changed stuff, isn't really a valid complaint
[14:45] micheil: Anti-X: so, we're not pulling the rug out from under anyones feet.
[14:45] micheil: unless they called their npm package util
[14:45] dshaw has joined the channel
[14:46] Anti-X: well that's just a stupid name for a custom package :p
[14:46] pufuwozu has joined the channel
[14:46] mAritz has joined the channel
[14:46] Anti-X: speaking of v0.x, noticed that inkscape has been around for 10 years and still is only at 0.42 or something?
[14:47] Anti-X: they seem to be taking the 0.1 increment approach
[14:47] Anti-X: no matter what
[14:48] tmedema has joined the channel
[14:48] cefn has joined the channel
[14:48] cefn has left the channel
[14:49] tmedema: Hi folks, if one is to publish an investment heavy website with node as it's backend, is it still recommended to use a "stable" webserver as a proxy, like NGinx?
[14:49] tmedema: With investment heavy, I mean one that would result in severe losses if something happens to the web server
[14:50] mape: loadbalance it for redundancy?
[14:50] micheil: tmedema: I'm not sure by what you mean as losses, but if there's a large amount of money processing, it may be wise not to use node
[14:51] micheil: but as with any application redundancy increases the reliability of it.
[14:51] tmedema: That's what I mean yes micheil. With NGinx proxying to node it should be stable right?
[14:51] micheil: tmedema: not necessarily
[14:51] pufuwozu has joined the channel
[14:51] c4milo: tmedema: not necessarily 
[14:51] c4milo: ahah
[14:52] micheil: although, a lot of money processing applications I know of actually use machine code, to increase stability and reduce attack vectors
[14:53] tmedema: Ah, well I don't mean money processing as in bank transfers etc. Rather, if the webserver is vulnerable to attacks which would result in downtime it would result in liquidity losses
[14:53] dshaw: tmedema: explain
[14:53] mape: then make sure it has redundancy?
[14:53] Anti-X: well there are definately ways to bring node down
[14:54] mape: Anti-X: there are ways of bringing anything down? ;)
[14:54] micheil: you can bring down in server given the right conditions
[14:54] Anti-X: mape, yes, but with node there may be EASY ways, that haven't been detected yet
[14:55] tmedema: mape: alright, you're talking about load balancing over multiple servers right? 
[14:55] mape: tmedema: I was talking about multiple node instances
[14:55] mape: but sure, that as well
[14:55] seanouimet has joined the channel
[14:56] micheil: Anti-X: go find one then. I'm betting there'd be less vunerabilities in node's http_parser then say rails, django, etc.
[14:57] gregerolsson: micheil: That's speculations.
[14:57] tmedema: Alright, it seems to me that having such setup with NGinx as a backend proxying to node should be quite stable
[14:57] Anti-X: micheil, no need to get defensive
[14:57] gregerolsson: micheil: Rails doesn't have an HTTP parser for that matter
[14:57] micheil: gregerolsson: it is speculation. Although, I'd be willing to put things there
[14:58] micheil: gregerolsson: rails mightn't have a http parser, but it still uses one somewhere along on the stack
[14:58] gregerolsson: Out of curiosity, if Nginx just upstreams to Node, in what way can Nginx help keep a cluster of node processes alive better?
[14:58] c4milo: tmedema: node is still in heavy development, I would recommend you to be very careful with your test cases, specially, you should try to test your nodejs demons for a considerable amount of time before going to production. I know people who have been in troubles because its demons die unexpectedly and without any obvious reason.
[14:59] gregerolsson: micheil: Yup, there are lots of HTTP parsers to choose from, based on which HTTP server you put in front of it. It's Rack-based.
[14:59] tmedema: gregerolsson: I was thinking more about the vulnerability of outside attacks.. NGinx would serve as somekind of firewall right?
[14:59] gregerolsson: micheil: Yup, got it. Just reacted to your statement.
[14:59] tmedema: c4milo: alright thanks
[14:59] c4milo: tmedema: apache + mod_security works 
[14:59] c4milo: for security concerns 
[15:00] pufuwozu has joined the channel
[15:00] gregerolsson: micheil: Not sure what Nginx can protect against. We use it for SSL and some rewrites before upstreaming to our webstack behind it (and LB'ing of course). Apart from that, I don't see what kind of attacks it can prevent.
[15:01] dshaw: tmedema: You're still going to need to have a baseline organizational understanding that with Node you're really going live with bleeding edge.
[15:01] tmedema: gregerolsson: I don't know either, I'm not experienced in this field at all.. just heard people say "I recommend you to use NGinx together with node for security concerns, rather than just node as a webserver"
[15:01] micheil: gregerolsson: well, that's my point. At present, Node is probably less or equally as vulnerable to http style attacks compared to other stacks
[15:02] gregerolsson: dshaw: Yes, my point exactly. Fronting with another web server may not prevent attacks from slipping though.
[15:02] gregerolsson: micheil: Agree completely.
[15:02] gregerolsson: micheil: So sticking Nginx in front may not help at all.
[15:02] micheil: as for stability, redundancy and monitoring is the only way to ensure it.
[15:03] gregerolsson: Granted, Nginx has been exercised a bit more than Node, but eventually your request hits node anyway
[15:03] micheil: at present, I'd be happy with having node facing raw http.
[15:03] jetienne has joined the channel
[15:03] steadicat has joined the channel
[15:03] micheil: ryah on the other hand may have other opinions on that.
[15:03] EyePulp: heh
[15:03] tmedema: gregerolsson: the request only hits node if it is accepted by Nginx, I think thats the point of it.. right?
[15:03] c4milo: tmedema: another thing is nodejs doesn't have a good support for SSL so yes, if you want SSL you need put a webserver in the front (nginx, apache, etc)
[15:04] EyePulp: c4milo: can you elaborate on that?  
[15:04] jamesarosen has joined the channel
[15:04] gregerolsson: tmedema: Sure, it can possibly help prevent some attacks. I was curious myself.
[15:04] micheil: EyePulp: it's documented in the issue tracker, but basically the bindings are still unstable
[15:04] c4milo: tmedema: if you want to take security as serious concern, you should use mod_security 
[15:04] dshaw: Which is fairly easy to do. SSL
[15:05] tmedema: c4milo: I am not really happy with using apache
[15:05] chapel: hmm
[15:05] dshaw: Someone should blog that out. :)
[15:05] EyePulp: micheil: ah, interesting.
[15:05] chapel: anyone used cloud9?
[15:05] Yuffster has joined the channel
[15:05] c4milo: tmedema: you I don't like neither but I really like mod_security 
[15:05] c4milo: s/you/yeah/ 
[15:05] micheil: EyePulp: like, occassionally odd bugs are seen  and things like that.
[15:05] EyePulp: micheil: when you say unstable - is that a server-wide instability or per-connection oddities?
[15:06] pufuwozu has joined the channel
[15:06] micheil: EyePulp: I don't know the details of it.
[15:06] dshaw: tmedema: …and if you want stable, Apache's definitely been around the block.
[15:06] EyePulp: gotcha
[15:06] quirkey has joined the channel
[15:07] tj has joined the channel
[15:07] norviller has joined the channel
[15:07] mbrochh_ has joined the channel
[15:07] tmedema: "W3Techs reports that 5.1% of the top 1 million sites on the web (according to Alexa) use nginx. Hence nginx is on the 3rd place after Apache (70.2%) and IIS (20.5%)." Seems to be that NGinx should be pretty stable too. I heard good things about it efficiency wise
[15:08] c4milo: EyePulp: yep, that are the issues with SSL, thanks micheil  :)
[15:08] gregerolsson: tmedema: The fact that it too is evented may prove it a better fit with node if you expect many many concurrent connections.
[15:08] c4milo: tmedema: if you want efficiency , choose nginx
[15:08] tmedema: yeah gregerolsson, think ryan seriousely prefered NGinx over apache in some presentation he did.. or maybe it was someone else..
[15:09] gregerolsson: Every benchmark I've seen shows Nginx to be more efficient, but I can't speak for resilience regarding attacks
[15:09] tmedema: I looked on github for a stable nodejs webserver, couldn't actually find one.. maybe I overlooked it though
[15:09] Anti-X: apache should definately never be used with node
[15:10] c4milo: Anti-X: why ? 
[15:10] Anti-X: at least not in front of it i mean
[15:10] sonnym has joined the channel
[15:10] Anti-X: because of its limitations with concurrent connections
[15:11] c4milo: Anti-X: yeah, the performance could be less 
[15:11] pufuwozu has joined the channel
[15:11] Anti-X: it's already less by using apache
[15:11] Anti-X: in general
[15:11] gregerolsson: Yeah, Nginx really screeams speed.
[15:12] c4milo: Anti-X: but I will choose apache if I want to feel security and the performance isn'r really a concern for my app
[15:12] c4milo: I mean, I wish nginx have a mod_security port 
[15:12] micheil: tmedema: uh. Node.js is the webserver.
[15:13] lakin has joined the channel
[15:13] zemanel has joined the channel
[15:13] gregerolsson: c4milo: I've never read anywhere that Mginx is less safe than Apache. Is that really true? Anyone?
[15:13] bronb has joined the channel
[15:13] micheil: gregerolsson: probably not.
[15:13] micheil: urban myth I'd say.
[15:13] c4milo: gregerolsson: no, I'm talking about apache + mod_security 
[15:14] Anti-X: micheil, i think he meant actual js code to make node.js act as one, because out of the box, node isn't
[15:14] tmedema: micheil: I guess I am talking about the next stage, eg. templating system - so that you can write websites object oriented in server sided javascript
[15:14] gregerolsson: micheil: Truly hope so :-) Have had it in production over a year now.
[15:14] micheil: c4milo: if you're adding specific security patches to apache, then it's no longer just apache.
[15:14] micheil: apply a similar patch to nginx or node and you have the same security.
[15:14] c4milo: micheil: patches.  ? I'm talking about modules  
[15:15] c4milo: micheil: do you know some web app firewall as module for nginx ? 
[15:15] mvt_ has joined the channel
[15:15] micheil: Anti-X: wtf? The idea of node.js is that you write a dynamic webserver, no one is ever saying (or should ever being saying) that you should throw out nginx or apache or lighty or whatever for node.
[15:16] micheil: c4milo: no, as I'm not a sys op/admin.
[15:16] pufuwozu has joined the channel
[15:16] Anti-X: micheil, i meant.. you need to write code that starts a server/listener
[15:16] micheil: ask in say #nginx.
[15:16] micheil: Anti-X: that's the idea of it.
[15:16] Anti-X: yeah but maybe that's what he was looking for
[15:16] c4milo: c4milo: me neither but I know a little of that :)
[15:17] tmedema: micheil: did you get what I mean with node webserver?
[15:17] Anti-X: finally found the .java file i was looking for, and then it turns out it's doesn't do things half as good as i thought it did :/ i could seriously kill right now
[15:17] micheil: tmedema: it depends what you want to do.
[15:18] micheil: if you want to do static file serving, try paperboy
[15:18] Anti-X: wasn't that a game once?
[15:18] gregerolsson: hehe
[15:18] gregerolsson: C64
[15:18] micheil: if you want to do dynamic stuff like what a rails or sinatra app may do, try express or connect
[15:19] bentruyman has joined the channel
[15:19] tmedema: thanks micheil, do you have any idea which of those is the most actively developed / most popular?
[15:20] rauchg_ has joined the channel
[15:20] gregerolsson: tmedema: They do different things
[15:20] micheil: express and connect are actively developer, not sure as to paperboy.
[15:20] gregerolsson: tmedema: Connect basically is a port of Rack from the Ruby world
[15:20] gregerolsson: And Express is more akin to Sinatra in the Ruby world
[15:20] tmedema: alright, thanks a lot
[15:20] gregerolsson: So they fit nicely together
[15:20] gregerolsson: And sprinkle some Sass and Haml into the mix and you're smiling
[15:21] micheil: gregerolsson: Jade's better :P
[15:21] gregerolsson: micheil: Agreed!! Love it.
[15:22] pufuwozu has joined the channel
[15:22] gregerolsson: micheil: We use it to compile templates to CommonJS-modules that we can run directly in the browser. It so sweet.
[15:22] Anti-X: i've yet to have node manipulate html for me in any way (except i made an SSI thing once)
[15:22] micheil: ACTION did have a fork of jade for the client side.
[15:22] micheil: it's outdated though
[15:22] gregerolsson: micheil: cool
[15:23] viirya has joined the channel
[15:24] noahcampbell has joined the channel
[15:26] benburkert has joined the channel
[15:26] richcollins has joined the channel
[15:28] pufuwozu has joined the channel
[15:30] bradleymeck: its really easy to port to browser
[15:30] Anti-X: it's not incidentally written in js, is it? :P:P
[15:30] tmedema: Question, if you write your websites in node with a node web library like express, how would you add Javascript to the html page? Basically, you have to write client side javascript inside server side javascript?
[15:31] deanlandolt: tmedema: but adding a <script> tag in your html...and if you use something like requirejs and transporter you can actually share some modules between the two
[15:32] micheil: tmedema: how do you add javascript to a page written in php, rails, sinatra, etc.
[15:32] micheil: same deal.
[15:32] micheil: script tag, and a file server.
[15:33] tmedema: micheil, well in PHP for example, you close the server sided PHP ?> and start writing client side, eg. html and Javascript
[15:33] tmedema: that's with static files
[15:33] micheil: no, that's a dynamic file. 
[15:33] tmedema: is it?
[15:33] deanlandolt: tmedema: do you want to dynamically /generate/ your js?
[15:33] micheil: if it has <?PHP ?> then it's dynamic.
[15:34] deanlandolt: that's usually not recommended but there's nothing stopping you
[15:34] ph^ has joined the channel
[15:34] pufuwozu has joined the channel
[15:35] deanlandolt: or you could just include a raw script ... or even define your client side functions right next to your templates and use Function.prototype.toString
[15:35] tmedema: deanlandolt: no, I don't want to generate it.. I guess I need to study how express works before I can really explain what I don't understand - but basically, I was wondering how you would add javascript that is not being executed by node but simply send to the client as part of the website
[15:35] aurynn: dynamically generating your JS seems fraught with peril
[15:36] sprout has joined the channel
[15:36] deanlandolt: tmedema: javascript you're including in your page is just a string...your html page is just a string...you can include string scripts in your string html...or use a template to help you...or keep your js in static files and use a script tag pointing to the location where they're accessible (that last option is most certainly the best)
[15:37] gerred has joined the channel
[15:38] Me1000 has joined the channel
[15:38] tmedema: deanlandolt: so both html and javascript have to be written in a string? Or is this what templating engines are for?
[15:39] quirkey has joined the channel
[15:39] deanlandolt: that's usually what templating is for...but ultimately, what you have is a string (or a stream of strings)
[15:39] zooko has joined the channel
[15:40] tmedema: Yea, makes sense that you ultimately have a string deanlandolt , but it's not very convenient to write html or javascript inside quotes. 
[15:40] tmedema: So I guess  I need a templating engine too
[15:40] virtuo has joined the channel
[15:40] deanlandolt: tmedema: it is a shame js doesn't have multiline strings...but still, there are plenty of ways to write your client side js without having to escape it
[15:41] deanlandolt: like i said, you could just write it in its own file and write a script tag to have node serve up the js file statically
[15:41] deanlandolt: or you could get fancy and go the Function.prototype.toString route
[15:42] deanlandolt: or (if you're on a rhino engine...so this obviously doesn't apply here) you can use some e4x tricks to fake multiline strings
[15:42] Athox has joined the channel
[15:42] tmedema: alright deanlandolt, thanks. So  HTML can be inserted without escaping?
[15:43] deanlandolt: well, you can use singlequotes around html chars and doublequotes in html
[15:43] pufuwozu has joined the channel
[15:43] deanlandolt: if you're writing out variables that ultimately are outside of your control you'd need to escape the html entities...it can get messy and it's easy to screw up...that's why you should find a templating solution you like
[15:44] tmedema: deanlandolt: at http://expressjs.com/guide.html#HTTP-Methods it looks like he's just adding raw html, weird?
[15:44] hzin has joined the channel
[15:45] tjholowaychuk: tmedema: shit, some of my example is not showing grr markdown
[15:45] tjholowaychuk: one sec
[15:46] tmedema: tjholowaychuk: :)
[15:47] tjholowaychuk: should be fixed in a few seconds
[15:47] tjholowaychuk: k now there is the form tag haha
[15:49] pufuwozu has joined the channel
[15:49] Nohryb has joined the channel
[15:49] jpld has joined the channel
[15:50] jakehow has joined the channel
[15:50] hoodoos: anyone used Do lib here?
[15:51] jpld has joined the channel
[15:52] hoodoos: i examined source code and wouldn't it be great to wrap functions calls (ones u pass to parallel or chain) with try..catch and call errback in catch case? I know must of stuff inside is async, but sometimes there some sync stuff nad catching can be useful..
[15:53] figital has joined the channel
[15:53] agilandfast has joined the channel
[15:54] bradleymeck: depends if you want to take the small hit for a try catch or not
[15:54] pufuwozu has joined the channel
[15:54] MattJ has joined the channel
[15:55] tmedema: tjholowaychuk: its still raw html?
[15:55] tjholowaychuk: tmedema: it just shows how you would set up your form, in a template or whatever
[15:55] tjholowaychuk: its not like php
[15:55] tmedema: tjholowaychuk: ah, maybe you should mention that? It looks like you're just adding the html as javascript
[15:56] aurynn has joined the channel
[15:56] strmpnk has joined the channel
[15:56] virtuo has joined the channel
[15:58] steadicat has joined the channel
[15:58] hoodoos: bradleymeck, what is small hit u mention?
[15:58] blaines has joined the channel
[15:58] Ori_P has joined the channel
[15:58] bradleymeck: having a try catch makes things slower by nature
[15:59] hoodoos: bradleymeck, but when process is somewhat critical..
[15:59] pufuwozu has joined the channel
[15:59] bradleymeck: then you should be putting them inside anyway instead of relying on outside catchers?
[16:00] hoodoos: bradleymeck, well, if it slows things down, sure you're right
[16:00] sprout has joined the channel
[16:04] pufuwozu has joined the channel
[16:07] halfhalo has left the channel
[16:07] marshall_law has joined the channel
[16:07] jbenesch has joined the channel
[16:08] gerred has joined the channel
[16:08] SamuraiJack_ has joined the channel
[16:09] cefn has joined the channel
[16:09] pufuwozu has joined the channel
[16:09] cefn has left the channel
[16:09] stephank has joined the channel
[16:10] strmpnk has joined the channel
[16:11] Craig` has joined the channel
[16:13] tmedema: Are there template engines that did not change the html element generation/structure? Eg. I do not want to do things like head rather than <head>, or !!!5 rather than a doctype.
[16:13] tjholowaychuk: tmedema: ejs, mustache, etc
[16:14] aubergine has joined the channel
[16:14] pufuwozu has joined the channel
[16:15] aubergine has joined the channel
[16:16] antono has joined the channel
[16:17] deepthawtz has joined the channel
[16:18] noahcampbell has joined the channel
[16:19] technoweenie has joined the channel
[16:20] jchris has joined the channel
[16:20] pufuwozu has joined the channel
[16:23] dnolen has joined the channel
[16:23] davidascher has joined the channel
[16:24] qFox has joined the channel
[16:26] pufuwozu has joined the channel
[16:27] tmedema: tjholowaychuk: hmm, alright, but basically, if I write html and javascript in standalone files -- I do not have to use a templating engine at all?
[16:27] tmedema: Although I'm not sure how that would allow dynamic content
[16:27] tjholowaychuk: tmedema: yeah if you dont need ANY logic
[16:27] tjholowaychuk: but that is rare
[16:27] brui has joined the channel
[16:27] tmedema: tjholowaychuk: yeah, I do need logic
[16:27] isaacs has joined the channel
[16:28] tjholowaychuk: go with ejs
[16:28] richcollins has joined the channel
[16:28] tjholowaychuk: sounds like what you want as far as working with "raw" html
[16:28] tmedema: ejs does not seem that actively used, is it?
[16:29] tmedema: I'm trying to find its documentation
[16:29] digitalspaghetti: i use it, but only because i only have 1 html file to load the rest is client-side js
[16:29] digitalspaghetti: so i only need some vars (like the current extjs version for the script path)
[16:30] brui has left the channel
[16:31] zemanel has joined the channel
[16:31] tmedema: there must be a reason why the bigger ones use their own html format, I can't quite think of it though
[16:31] tmedema: seems like it's better to follow the web standards
[16:31] tmedema: to me
[16:32] technoweenie: you can use mustache too
[16:32] vnguyen has joined the channel
[16:33] bartt has joined the channel
[16:33] tjholowaychuk: tmedema: they are only "bigger" because more people prefer that sort of thing, ejs or mustache are just fine as well
[16:33] daniellindsley has joined the channel
[16:33] benburkert has joined the channel
[16:33] tmedema: I see tjholowaychuk , thanks for the help
[16:33] pufuwozu has joined the channel
[16:34] dpritchett: is it just me or is there no redirect function in connect anymore?
[16:35] sprout has joined the channel
[16:35] robotarmy has joined the channel
[16:38] dshaw has joined the channel
[16:38] rnewson has joined the channel
[16:38] bjarkih has joined the channel
[16:39] jetienne has joined the channel
[16:39] pufuwozu has joined the channel
[16:40] Pilate: Jade is pretty amazing, idk what you could possibly need to do that you couldnt accomplish with it
[16:40] ajsie: anyone knows why app.delete doesnt work in express.js
[16:40] ajsie: app.get, app.post, app.put works but not app.delete
[16:40] tjholowaychuk: Pilate: some people just prefer something more literal
[16:41] tjholowaychuk: ajsie: app.del
[16:41] ajsie: okay thanks
[16:41] tjholowaychuk: I will alias as delete() tho
[16:41] tjholowaychuk: one sec
[16:42] bpot has joined the channel
[16:42] TheEmpath has joined the channel
[16:44] micheil: tjholowaychuk: I don't suppose you've come across anything where a C api needs to call another C method from which you need to envoke a JS method?
[16:44] slashxr has joined the channel
[16:44] blaines has joined the channel
[16:44] pufuwozu has joined the channel
[16:44] tjholowaychuk: micheil: hmm nope lol
[16:44] tjholowaychuk: cant say i have
[16:44] matt_c_ has joined the channel
[16:44] micheil: hm, trying to think of how to write the basic start of a FUSE module for node
[16:45] derferman has joined the channel
[16:45] jdalton has joined the channel
[16:45] micheil: jdalton: oh really?
[16:46] admc has joined the channel
[16:46] michael_ruddy has joined the channel
[16:47] tapwater has joined the channel
[16:47] bpot_ has joined the channel
[16:47] confoocious has joined the channel
[16:47] confoocious has joined the channel
[16:47] sudoer has joined the channel
[16:49] stagas has joined the channel
[16:49] tjholowaychuk: ajsie: delete / del are the same now. delete just looks funny because its usually highlighted
[16:50] ajsie: tjholowaychuk: okay
[16:50] ajsie: tjholowaychuk: you know why app.set('views', '../views'); doesnt work?
[16:50] pufuwozu has joined the channel
[16:50] ajsie: cause im on config/app.js
[16:50] tjholowaychuk: ajsie: __dirname + '/../views'
[16:50] ajsie: okay thanks
[16:50] ajsie: great it worked
[16:51] ajsie: tjholowaychuk: you are the creator of express arent u?
[16:51] tjholowaychuk: yup
[16:51] micheil: hmm.. that's kinda crap. repo admin rights are tied up with issues on github.
[16:52] jdalton has left the channel
[16:52] micheil: ajsie: it could be said that express is the creator of tjholowaychuk  
[16:52] tjholowaychuk: haha
[16:52] ajsie: micheil: :)
[16:52] ajsie: micheil: why is that?
[16:52] micheil: (russian reversals ftw.)
[16:52] tjholowaychuk: express wrote me
[16:52] dahankzter has joined the channel
[16:52] tjholowaychuk: and then i wrote express
[16:52] tjholowaychuk: meta
[16:52] micheil: ajsie: yeah, tj's a bot, didn't you know?
[16:52] micheil: very
[16:53] ajsie: tjholowaychuk: are there plans for making more structures like config folder and so on for express.js?
[16:53] ajsie: or do you want non-structure?
[16:53] tjholowaychuk: ajsie: nah, nothing like that should be imposed at the Express level
[16:53] tjholowaychuk: you can easily create what you want/need
[16:53] ajsie: okay
[16:53] ajsie: yupp
[16:53] tjholowaychuk: or create a higher level framework on Express to provide that
[16:54] ajsie: yeah so i thought ... there are advantages of having low level frameworks ... i hope devs are going to create different high level on top of express
[16:54] xdamman has joined the channel
[16:54] ajsie: node -> connect -> express -> node-on-rails =)
[16:54] micheil: nawh
[16:54] micheil: node -> connect -> node-on-clouds
[16:55] ajsie: micheil: what happened to express?
[16:55] ajsie: :)
[16:55] micheil: well, if you're implementing something like rubyonrails on node, then you'd use a server framework, like connect
[16:55] ajsie: okay
[16:56] ajsie: havent used connect .. what is the difference with connect and express?
[16:56] micheil: if you add in express, it saves rewriting a little bit, but essentially ends up not like rubyonrails
[16:56] micheil: express is built on connect
[16:56] tjholowaychuk: ajsie: Express is built on connect
[16:56] pufuwozu has joined the channel
[16:56] micheil: connect is a framework for building frameworks
[16:56] micheil: tjholowaychuk: is that right?
[16:56] tjholowaychuk: micheil: not true :p I have written similar things built on Express
[16:56] tjholowaychuk: I still consider Express low level enough for that as well
[16:56] bpot has joined the channel
[16:56] tjholowaychuk: but yup Connect is a building block
[16:56] tjholowaychuk: for larger things
[16:57] micheil: tjholowaychuk: I think you'd be more performant without express in the mix.
[16:57] tjholowaychuk: nah
[16:57] tjholowaychuk: there is no difference between connect / express as far as performance
[16:57] micheil: especially if you use a different router
[16:57] micheil: minds you, how new is app.router?
[16:57] tjholowaychuk: it uses connect's router middleware
[16:57] micheil: tjholowaychuk: there'd be more object lookups and such
[16:57] [[zz]] has joined the channel
[16:57] ajsie: so what is the difference between express and connect
[16:58] tjholowaychuk: well yeah, but that does not effect performance
[16:58] ajsie: connect code looks like node.js
[16:58] ajsie: what does it add?
[16:58] bradleymeck1 has joined the channel
[16:58] micheil: tjholowaychuk: I had a project that didn't app.use(app.router) or something, and it broke at some point
[16:58] tjholowaychuk: app.router just lets you position the routing middleware
[16:58] micheil: hmm..
[16:58] tjholowaychuk: otherwise it is added to the first call of get() put() etc
[16:59] micheil: it wasn't.
[16:59] tjholowaychuk: hm should have been
[16:59] ajsie: tjholowaychuk: what is the best way of creating Resourceful routes like Rails (one liner)?
[16:59] V1 has joined the channel
[16:59] ajsie: i add all 7 routes manually for each resource?
[16:59] tjholowaychuk: ajsie: I have an MVC example in the express repo
[17:00] tjholowaychuk: and a "resource" example
[17:00] ajpiano has joined the channel
[17:00] micheil: tjholowaychuk: still' wondering what that new thing you're working on is.
[17:00] tjholowaychuk: micheil: its on hold a little bit, trying to fix some bugs in our app
[17:00] micheil: oh.
[17:00] tjholowaychuk: but its node-canvas
[17:01] ajsie: tjholowaychuk: okay
[17:01] eazyigz has joined the channel
[17:01] dshaw: tjholowaychuk: Soda patch landed http://github.com/dshaw/soda/commit/cae3fcb637116ba0040aaaf59e55f653fb855a1b
[17:02] tjholowaychuk: dshaw: nice! thanks man, will merge it over
[17:02] micheil: tjholowaychuk: hmm, let me know if you'd be up for that interview at some stage.
[17:02] tjholowaychuk: micheil: will do
[17:02] c4milo has joined the channel
[17:02] pufuwozu has joined the channel
[17:02] eazyigz: I am trying to install node on an amazon basic ami on ec2.  When I run 'make' it just says "waf leaving directory /home/node-v0.2.3/build" 
[17:02] eazyigz: I don't get it
[17:02] sveimac has joined the channel
[17:03] hoodoos: eazyigz, configure goes smoothly?
[17:03] mikeal2 has joined the channel
[17:03] eazyigz: apparently
[17:04] eazyigz: it says "finished successfully"
[17:04] hoodoos: eazyigz, no clues :) wait for other answers :)
[17:04] bpot has joined the channel
[17:05] V1: Either Socket.io is leaking memory or node.js is leaking memory on each ECONNRESET. I have completely removed all my own application code, and my app is still, leaking memory
[17:05] tjholowaychuk: micheil: but yeah connect vs express vs node with hello world is identical
[17:05] tjholowaychuk: so no need to worry about micro optimizations
[17:05] micheil: tjholowaychuk: I suppose.
[17:05] tjholowaychuk: people are just crazy these days lol omgGG an extra function call
[17:06] eazyigz: f#*k, I tried to install node0.2.1 and it doesn't even configure the build file
[17:06] MikhX has joined the channel
[17:06] eazyigz: I don't know which version of node I should be installing
[17:07] ajsie: tjholowaychuk: some wrong with the resource example though ... the User model shouldn't be responsible for the routing methods
[17:07] tjholowaychuk: ajsie: havent looked at it in ages, one sec
[17:07] V1: Is there someone here who is using node.js in production, with a fair amount of user base?
[17:07] tjholowaychuk: ajsie: ah my bad lol
[17:08] tjholowaychuk: ajsie: the mvc example is newer, more valid but larger
[17:08] ajsie: that is the job of the controller .. cause now you implemented User.show, User.destroy, User.list etc in the model .. it should be in the User_controller.show, User_controller.destroy, User_controller.list etc
[17:08] hoodoos: tjholowaychuk, does connect support running efficiently on several cores? or I should use it as worker for webworker api e.g.?
[17:08] ajsie: :)
[17:08] ajsie: yeah ok
[17:08] tjholowaychuk: hoodoos: yeah you can use it with multinode or spark etc
[17:08] pufuwozu has joined the channel
[17:08] technoweenie: V1: we use it at github for a small feature.  its not heavily used but it works well enough we'll start using it more
[17:08] roger_raymond has joined the channel
[17:09] hoodoos: tjholowaychuk, thnx
[17:10] V1: Is it "normal" that you see allot of ECONNRESET errors in your logs? I Have about 300 concurrent users atm who are connected through sockets with my server and my log is getting flooded with it.
[17:10] technoweenie: no, we're not using websockets
[17:10] technoweenie: or 300 concurrent users
[17:11] micheil: V1: try plurk.
[17:11] V1: So the ECONNRESET seems to be a thing of the "upgrade" request
[17:11] micheil: hm..
[17:11] micheil: I think I might be able to reproduce that.
[17:11] micheil: V1: do you have a live server you can watch the logs of?
[17:12] V1: yes
[17:12] micheil: link?
[17:12] V1: I'm doing a tail of them atm..
[17:12] xdamman has joined the channel
[17:12] V1: Let me upload gist of the last few minutes
[17:12] V1: http://gist.github.com/622542
[17:12] micheil: k
[17:12] isaacs has joined the channel
[17:13] pufuwozu has joined the channel
[17:13] micheil: V1: socket.io being used?
[17:13] V1: yes,
[17:13] micheil: k
[17:14] V1: And i'm testing this without application code: http://gist.github.com/622549
[17:15] V1: So it's just a normal plain server, doing, absolutely nothing.
[17:15] WALoeIII has joined the channel
[17:15] hoodoos: anyone tried this http://github.com/pgte/fugue/?
[17:15] V1:  8643 node      104M   51M sleep   59    0   0:00:09 0.1% node/2 << And it's already up to 104m
[17:16] hoodoos: tjholowaychuk, looks quite nice, ever heard of it?
[17:16] tjholowaychuk: hoodoos: which?
[17:16] hoodoos: tjholowaychuk, http://github.com/pgte/fugue/
[17:16] micheil: V1: hmm, okay
[17:17] tjholowaychuk: hoodoos: ohh yeah I saw that, havent used it yet myself though
[17:17] tjholowaychuk: hoodoos: I would prefer if it require()d your app
[17:17] kriszyp has joined the channel
[17:17] tjholowaychuk: instead of that / multinode being shoved into your source
[17:18] hoodoos: yes.. 
[17:18] bpot has joined the channel
[17:18] hoodoos: not sweet
[17:18] hoodoos: well, not a big deal to make it require :)
[17:18] V1: micheil: Odd huh
[17:18] micheil: V1: just tracking down the socket.io error
[17:18] pufuwozu has joined the channel
[17:18] MikhX has joined the channel
[17:19] tjholowaychuk: dshaw: merged. will release right away :D
[17:20] micheil: V1: which version of node?
[17:20] V1: Pff lemme check on no.de
[17:20] micheil: ACTION can't find the deprecation notice for Notification: Stream.prototype.close has been renamed to end() in HEAD
[17:21] V1: Yeah, that is code that I added yesterday, that not the issue
[17:21] micheil: oh?
[17:21] V1: v0.2.0
[17:21] micheil: well, yeah, use .end()
[17:21] micheil: don't use .close() on streams
[17:21] micheil: as it's definitely been deprecated in HEAD
[17:22] V1: Yeah i noticed that, but it's at the end of my checks: https://gist.github.com/d65e147e8162d4b59079
[17:23] dshaw: tjholowaychuk: great. assertElementNotPresent working fine?
[17:23] pufuwozu has joined the channel
[17:24] dilvie: Using connect... will this  app.use(connect.staticProvider(__dirname + '/public')); have urls like http://mysite.com/public/somedoc.html by default?
[17:24] tjholowaychuk: dshaw: yup seems all good
[17:24] dshaw: tjholowaychuk: great
[17:24] tjholowaychuk: dilvie: minus "/public/"
[17:25] tjholowaychuk: dilvie: that just tells the staticProvider which directory to look in for any urls that get to it
[17:25] dilvie: tjholowaychuk: Cool. So I don't need to re-write the URLs. =)
[17:25] tjholowaychuk: so if you place staticProvider first, it will stat frequently
[17:25] tjholowaychuk: or if it is at the end of your "stack"
[17:25] tjholowaychuk: then only things that are not handled by routes will reach it
[17:26] tjholowaychuk: but if you DID want /public in there you can do app.use('/public', stat....)
[17:26] dilvie: tjholowaychuk: Thanks. So much to learn, so little time. =)
[17:26] cardona507 has joined the channel
[17:27] micheil: V1: is this still the same NKO repo?
[17:27] V1: Yes but i'll push the updates
[17:27] V1: give me a sec
[17:28] micheil: k
[17:28] twoism has joined the channel
[17:28] micheil: I still wonder if there's a company looking to hire someone who works with websockets, node.js and socket.io
[17:29] zomgbie has joined the channel
[17:29] V1: micheil: It's updated
[17:29] micheil: k
[17:29] pufuwozu has joined the channel
[17:30] eisd has joined the channel
[17:30] dilvie: tjholowaychuk: Still trying to wrap my head around the best way to structure my node app. My app is JSON web-service driven, but I want to fail gracefully to server-rendered views if the user does not have JavaScript enabled.
[17:30] V1: micheil: Maybe learntoboost would hire someone :)
[17:31] micheil: s/learntoboost/learnboot
[17:31] micheil: *boost
[17:32] TheEmpath: for someone to hire someone with node.js experience, you're going to need more than cool games and nifty architecture advancements
[17:32] TheEmpath: business decisions are not based on technical improvements that increase profits for most startups
[17:32] tjholowaychuk: micheil: you are looking for work?
[17:32] aurynn: node isn't (quite) mainstream enough yet.
[17:32] micheil: tjholowaychuk: yes.
[17:32] tjholowaychuk: micheil: ah, totally forgot :) *puts word in for micheil*
[17:32] dilvie: tjholowaychuk: I'm a little confused about the best way to handle that. I am pretty sure I can just serve static HTML to people with browser ajax support, but that won't fall back to server-side render.. so should I be using dynamic views for everything and checking for old-skool form submissions?
[17:32] digitalspaghetti: i'm lucky in that when i was hired i got to decide the tech stack, and i've chosen node
[17:32] TheEmpath: agility and ease of implementation with the aim to automate is the goal of most businesses
[17:32] digitalspaghetti: and i'm happy about it :D
[17:33] TheEmpath: therefore, any node.js app that serves those goals will receive adoption
[17:33] micheil: tjholowaychuk: fulltime starting nov/dec. part time until then
[17:33] tjholowaychuk: dilvie: you might want to consider proxying res.render() and maybe send the locals as json or just leave it to render as usual
[17:33] micheil: (the only reason I can't take on fulltime just yet is because I have exams over the next month
[17:33] tjholowaychuk: micheil: ah gotcha, cool man
[17:34] hpoydar has joined the channel
[17:34] micheil: V1: where's the socket.io code in that project?
[17:34] digitalspaghetti: Although if this job doesn't work out, i might be looking for work in January, and I'd like to still use node!
[17:34] V1: micheil: /vendor/io.server/
[17:34] ajsie: is there a way to create a express app with ejs instead of jade when i run "express <app>"?
[17:34] micheil: k
[17:35] micheil: V1: so have you added logging stuff to socket.io?
[17:36] path[l] has joined the channel
[17:36] V1: ajsie: server.set("view engine", "ejs");?
[17:36] tjholowaychuk: ajsie: currently nope it is set up to give you jade/less.js
[17:36] tjholowaychuk: but it would be great to get more in there
[17:36] tjholowaychuk: I just have not had time
[17:36] dilvie: tjholowaychuk: I need to prototype the application quickly, so I was thinking of starting out with only static files that interact with the server via ajax... If I do that, and just put the static handler last, I can intercept the requests later in the dev process before it gets to the static handler, right?
[17:36] V1: micheil: Yes, unlike the trunk build of the Socket.io I log the errors
[17:36] micheil: k
[17:36] tjholowaychuk: dilvie: yup that is correct
[17:37] tjholowaychuk: dilvie: if you have a route /users, but you have a file ./public/users if staticProvider was higher you would never have a chance to have a /users route
[17:37] bpot has joined the channel
[17:37] siculars has joined the channel
[17:38] ajsie: V1: yeah i know .. i meant when i create an express app with its generator
[17:38] cloudhead has joined the channel
[17:38] ajsie: tjholowaychuk: okay
[17:38] dilvie: because once a handler handles a request, it's no longer available for processing by other handlers...
[17:39] dilvie: Is there a way to let the request pass through to other handlers if I want to? Say later on I add the fallback, can I just check for oldskool query params and then pass through to the static handler if they don't exist?
[17:39] ryah: http://github.com/ry/node/blob/32aadd9400c1ebf9eba940620030edcb1161a2f1/src/node.cc#L1749-1789
[17:39] ryah: ^-- this is horrible code
[17:39] pufuwozu has joined the channel
[17:39] ryah: does anyone feel like cleaning it up?
[17:40] ryah: using getopt(3) ?
[17:40] digitalspaghetti: dilvie: using next() ?
[17:40] tobeytailor has joined the channel
[17:40] digitalspaghetti: any method in express actually passes req, res, next
[17:41] deepthawtz has joined the channel
[17:41] ajpiano has joined the channel
[17:41] stephenjudkins has joined the channel
[17:42] tjholowaychuk: ryah: getopt only handles single char flags though right?
[17:42] bpot has joined the channel
[17:42] tjholowaychuk: (thought it did)
[17:42] stephenjudkins_ has joined the channel
[17:42] dilvie: digitalspaghetti: Oh, I forgot about next() ... just learned about it yesterday. =)
[17:42] micheil: ryah: I could try.
[17:43] micheil: ryah: with ECONNRESET, that means that the connection has been reset, hence closed, right?
[17:43] micheil: in which case it could be caught and handled with a socket.end() / destroy() style thing?
[17:43] dilvie: digitalspaghetti, tjholowaychuk: Thanks. I think I finally have a decent grasp of how to structure my app. =)
[17:43] tjholowaychuk: dilvie: cool :)
[17:44] Yuffster_work has joined the channel
[17:44] ossareh has joined the channel
[17:44] digitalspaghetti: micheil: please!  That always bugs me
[17:44] digitalspaghetti: with node-couchdb for example, if the instance is down I can't catch it
[17:44] benreesman has joined the channel
[17:44] micheil: hmm?
[17:44] pufuwozu has joined the channel
[17:45] bartt: When using less with express I'm noticing that changes to .less files being imported by master.less don't lead to master.css being updated (on the next HTTP request). 
[17:45] digitalspaghetti: the ENCONRESET stuff
[17:45] bartt: Would that be a deficiency in less.js or express? Any pointers where I should start looking?
[17:45] drudge: tjholowaychuk: getopt_long()
[17:46] teemow has joined the channel
[17:46] tjholowaychuk: drudge: ah, yes :)
[17:46] digitalspaghetti: even if i wrap my request in try/catch, if the couchdb instance is down, or there is no network the app crashes rather than gracefully waiting to try again
[17:46] ryah: tjholowaychuk: getopt_long
[17:46] ryah: i guess we have --debug
[17:47] ryah: micheil: when you get ECONNRESET, the socket fd will be closed automatically
[17:47] micheil: okay
[17:47] tjholowaychuk: bart: hmm, that might be an issue with connect's "compiler" middleware
[17:47] tjholowaychuk: bartt: ^^
[17:47] micheil: ryah: so, it couldn't be a source of a mem leak?
[17:47] ryah: any 'error' event will close the fd
[17:47] tjholowaychuk: havent tried it with imports though
[17:48] davida has joined the channel
[17:48] ryah: micheil: oh - it might very well be
[17:48] micheil: okay. I'm slightly confused there, if it auto-closes the socket fd, that's not the same as socket.close/end/destroy?
[17:49] ryah: there is no socket.close
[17:49] micheil: V1: looks like ECONNRESET could be caught and the socket destroy()'d / end()'d
[17:49] bartt:  Thanks tjholowaychuk, should I file this as an issue on github?
[17:49] micheil: ryah: my bad, thinking of net.Stream there.
[17:49] tjholowaychuk: bartt: sure
[17:50] ajsie: anyone knows what the problem is here with my ejs template: http://pastie.org/1216105
[17:50] ajsie: it outputs <h1></h1> tags
[17:50] pufuwozu has joined the channel
[17:50] V1: micheil: In my code, they are caught by the "error" listeners I attached on them. But I still the memory spike after they are caught
[17:50] V1: I just output them to the logs.
[17:51] micheil: hmm..
[17:51] tjholowaychuk: ajsie: <%- body %> will not escape the page template output
[17:51] V1: So I know, what kind of error occurred, because the same error listeners also catch broken pipes etc
[17:51] deanlandolt: ajsie: where do you reference layout.ejs
[17:51] micheil: V1: check if the write() calls in socket.io are succeeding
[17:51] deanlandolt: (i don't know the first thing about ejs...just curious)
[17:51] evanpro has joined the channel
[17:51] micheil: you may be writing to "dead clients"
[17:52] tjholowaychuk: ajsie: you dont really need that regexp tho, just use app.get('/users')
[17:52] ajsie: deanlandolt: layout is included  .. i havent chaned the default behavour which includes layout.ejs 
[17:52] ajsie: tjholowaychuk: i know .. i simplified for you guys .. i have a more advanced regexp path =)
[17:52] tjholowaychuk: ajsie: ah :p
[17:52] deanlandolt: okay...i figured it was something like that considering tj didn't seem too confused by the question
[17:53] ajsie: tjholowaychuk: how do i fix the template problem then?
[17:53] V1: micheil: I only write to clients, if there is an authorized user to write to. Also, I was also suspecting the same thing, so I created a small interval that checks the amount of dead clients. So I could compare them with the length the clientList
[17:53] TooTallNate has joined the channel
[17:53] tjholowaychuk: ajsie: should be fine if you change <%= body to <%- body
[17:53] ajsie: ah ok
[17:53] ajsie: wii
[17:53] ajsie: thanks!
[17:53] V1: And there where no dead clients left in the hash micheil 
[17:54] micheil: k
[17:54] micheil: V1: I'm not sure why memory is spiking after an ECONNRESET then
[17:54] V1: :(
[17:54] ajsie: tjholowaychuk: saw your ejs git repo now with doc
[17:54] tjholowaychuk: ajsie: ah :)
[17:54] ajsie: tjholowaychuk: amazing job having coded every part of the express =)
[17:55] tjholowaychuk: ajsie: haha thanks. its still a WIP
[17:55] pufuwozu has joined the channel
[17:55] ajsie: :)
[17:55] dilvie: tjholowaychuk: I start my express app with "node app.js", right?
[17:55] dilvie: I think I broke something. =P
[17:55] tjholowaychuk: dilvie: yup, or with spark but yup
[17:56] ceej has joined the channel
[17:56] V1: micheil: Atleast I guess checking the readState of the connected users gives me the correct info: http://gist.github.com/622612
[17:56] matt_c has joined the channel
[17:57] micheil: V1: I'm wondering if that situation will change if we get socket.io using the node-websocket-server manager
[17:57] V1: Same, because I'm beginning to doubt if the memory leak is actually caused by socket.io
[17:58] Draggor has joined the channel
[17:58] aho has joined the channel
[17:58] roger_ra1mond has joined the channel
[17:58] dilvie: tjholowaychuk: If I want to define some configuration related variables, like which port to listen on, is there a standard place to do that, or should I just create my own object literal to store them?
[17:59] tjholowaychuk: dilvie: use configure() callbacks, and app.set('something', 'value')
[17:59] tjholowaychuk: dilvie: you can grab that value via app.set('something') or app.settings.something
[18:00] V1: micheil: The only thing that could possibly leak would be the websocket.js transport
[18:00] micheil: V1: hopefully that'll be changing soon.
[18:00] eisd: Anyone else play with http push on Android?
[18:00] d0k has joined the channel
[18:00] micheil: ACTION should really fork socket.io-node
[18:00] micheil: ryah: I'm going to try and fix that getopt()'s TODO
[18:01] V1: micheil: I do hope that would be case, and I'm willing to test your fork on my server if you need some heavy testing
[18:01] pufuwozu has joined the channel
[18:01] micheil: V1: okay, cool. I'm not able to start on that for probably a week.
[18:01] micheil: (I've got 4 exams between 14th-21st
[18:01] rauchg_: V1: 
[18:01] V1: micheil: No rush, I'm working on a complete rewrite anyways
[18:02] rauchg_: have you run the same benchmarks i ran 
[18:02] rauchg_: for long polling ?
[18:02] V1: The ab benchmark rauchg_ ?
[18:02] rauchg_: yeah but for websocket with the -client
[18:02] rauchg_: cause there were no leaks for the xhr transports
[18:02] rauchg_: i haven't tested websocket yet
[18:03] spetrea: micheil: I want to do that also with some projects, sometimes I'm not sure I have the minimum knowledge to understand their internals, let alone patch/hack them
[18:03] dilvie: tjholowaychuk: Thanks. Is there a standard listen port setting? I don't see one listed here http://expressjs.com/guide.html#Configuration
[18:03] micheil: spetrea: read, test, conceptualize, write, test.
[18:03] V1: rauchg_: Yeah I doubt the xhr transports are the source of the leaks. But I still have a major leak somewhere in my app. I tested today without any application code inside of socket.io's client event emitters. And my memory was still leaking. 
[18:03] bahamas has joined the channel
[18:03] V1: rauchg_: So there are 2 options, either there is still something leaking in socket.io. Or Node is leaking memory.
[18:04] tjholowaychuk: dilvie: nope just whatever you pass to listen()
[18:04] micheil: ryah: just going to create an issue on GH to reference it.
[18:04] sideshowcoder has joined the channel
[18:05] V1: rauchg_: This is my log without running any application code: http://gist.github.com/622542
[18:05] V1: As you will notice there are allot of captured ECONNRESET messages
[18:05] boaz_ has joined the channel
[18:05] deepthawtz has joined the channel
[18:05] ryah: micheil: ok
[18:05] ryah: getopt_long()
[18:05] dilvie: tjholowaychuk: Cool. I just like to have some type of configuration object for my app that stores stuff like that. =)
[18:06] micheil: ryah: yeah, just read the gnu docs on it.
[18:06] tjholowaychuk: dilvie: for sure :)
[18:06] micheil: ryah: would it be an idea to expose this method?
[18:06] ajsie: if i use app.set('view options', {open: '{{', close: '}}' }); on express ... then i replace <%= title %> with {{ title }} ?
[18:06] micheil: or leave that to a module?
[18:06] ajsie: got an error on that
[18:07] tjholowaychuk: ajsie: you still need "=" or "-"
[18:07] tjholowaychuk: ajsie: if you want to buffer the expression
[18:07] pufuwozu has joined the channel
[18:07] tjholowaychuk: ajsie: otherwise {{}} should work fine for conditionals
[18:07] ajsie: ah
[18:07] ajsie: now it worked
[18:07] ajsie: awesome
[18:07] ajsie: the more i work with express i like it more =)
[18:07] tjholowaychuk: good to hear :)
[18:08] micheil: ryah: any thoughts on? http://github.com/ry/node/pull/342
[18:09] ryah: micheil: eh - it's not faster
[18:09] dilvie: tjholowaychuk: Is it safe to use app.settings directly, or should it be accessed only through the app.set interface?
[18:09] micheil: ryah: okay. 
[18:10] micheil: I'll close it then :)
[18:10] tjholowaychuk: dilvie: I consider them both public, app.set() doesnt do anything special
[18:11] bpot has joined the channel
[18:12] dilvie: =)
[18:13] mif86 has joined the channel
[18:13] langworthy has joined the channel
[18:14] V1: I'm quite happy with amount of traffic my app is handling atm, This month i handled atleast 5,000,000 requests 
[18:14] dilvie: Does it make sense to run my web services as a different app, listening on a different port?
[18:14] dilvie: V1: what's your app?
[18:15] aurynn: dilvie, breaking your API from the main app generally makes sense
[18:15] V1: dilvie: http://speedo.no.de
[18:16] herbySk has joined the channel
[18:17] deanlandolt: aurynn: why? i'd say having your main app /use/ your api makes the most sense
[18:18] dilvie: aurynn: How are you handling user authentication?
[18:19] dilvie: urm, I meant to ask that of v1 ^^
[18:19] aurynn: deanlandolt, Your API is going to scale differently than your main application.. different request patterns, different hotspots
[18:20] V1: dilvie: You have 2 options, go public. Or restrict it on IP addresses
[18:20] deanlandolt: aurynn: i guess we have different definitions of main application :)
[18:20] aubergine has joined the channel
[18:20] aurynn: deanlandolt, I have a webapp sort of view :)
[18:20] deanlandolt: as ry so often says, (almost) every application is just a  proxy :)
[18:21] deanlandolt: so effectively, your main application /is/ your api
[18:21] aurynn: Right. I'm commenting on, your target audiences will have different needs depending on how they access the application
[18:21] dilvie: deanlandolt: I figured even just breaking them into different node processes might help with multi-core CPU utilization, and when it's time to scale, I could serve them from different servers without causing problems. Eventually I could tune the servers differently depending on the needs.
[18:21] richcollins has joined the channel
[18:22] deanlandolt: yeah, that's one shard key that gives you a switch to flip (whether app access comes via api calls or from in browser)...but there are other ways to shard load
[18:23] deanlandolt: and the bool "is api" isn't a very high fidelity knob
[18:23] aurynn: then again, this doesn't really matter unless you're hitting high scale.
[18:24] deanlandolt: aurynn: amen :)
[18:24] deanlandolt: (i write crappy enterprise apps for a living...i /never/ see scale!)
[18:24] dilvie: aurynn: I learned a few years ago, always plan for scale. When you forget to plan for scale, that's when your app will need to scale. =)
[18:24] aurynn: And there's always the bit of truth where, no matter how you build it today, you'll have designed it wrong once you try to scale it.
[18:25] deanlandolt: dilvie: no doubt...but no what you're planning for -- arbitrarily splitting your app may not be necessary when you can detect usage any other way
[18:25] dilvie: deanlandolt: is it really arbitrary to split the web services API from the HTML / view rendering bits?
[18:26] dilvie: deanlandolt: is it not true that it could help with CPU utilization, or is there a better way to do that?
[18:26] isaacs_ has joined the channel
[18:26] brianmario has joined the channel
[18:27] Anti-X has joined the channel
[18:27] deanlandolt: dilvie: yeah, i tend to think it's arbitrary because your api may want to allow a user to provide an accept: text/html and your browser app may want to accept: application/json
[18:28] deanlandolt: it's just conneg
[18:28] deanlandolt: but if you want to shard on that, it's easy to redirect requests based on accept headers (or lackthereof)
[18:28] zomgbie has joined the channel
[18:30] dilvie: what about the issue of CPU utilization? Is it not true that a single instance of node is not going to be able to utilize multi-core CPU very well?
[18:30] aurynn: s/very well/at all
[18:30] javajunky has joined the channel
[18:31] aurynn: if youhave multiple CPUs, start multiple worker processes
[18:31] stagas has joined the channel
[18:31] deanlandolt: dilvie: yeah, what aurynn said...there are all kinds of options to solve that
[18:31] Druid_ has joined the channel
[18:32] Nohryb has left the channel
[18:34] ceej has joined the channel
[18:34] strmpnk has joined the channel
[18:34] stagas has joined the channel
[18:34] Me1000 has joined the channel
[18:34] admc has joined the channel
[18:36] boaz_ has joined the channel
[18:42] isaacs: ghost ftw
[18:44] pedrobelo has joined the channel
[18:46] bradleymeck: need to figure out a good way to manage client side files to things on npm, its a pain to make ppl copy them to a static dir
[18:47] v8bot has joined the channel
[18:47] pedrobel_ has joined the channel
[18:47] Anti-X: isaacs, do you think you could move the =user active latest installed remote blabla thing a bit to the left? when listing the installed ones, there always seems to be every other one goes to a new line... most are within 10 chars
[18:47] isaacs: Anti-X: i think it's doing something where it's long enough to handle the longest one you have
[18:48] isaacs: Anti-X: but that means if you have even one link package, ti's stupid long
[18:48] charlenopires has joined the channel
[18:48] bahamas: what logging module do you guys use? i see that there are quite a few options available
[18:48] spetrea has joined the channel
[18:49] matt_c_ has joined the channel
[18:49] strmpnk: http://trac.webkit.org/changeset/69516 <- anyone know if the V8 team is working on something like this as well?
[18:49] Anti-X: well can't you let those that are long sort of just start further out right than normal, while the other ones are straight, but at least readable? :P
[18:49] Anti-X: to isaacs
[18:49] tjholowaychuk: bahamas: http://github.com/visionmedia/logjs
[18:49] tjholowaychuk: bahamas: http://github.com/visionmedia/log.js
[18:49] isaacs: Anti-X: sure, it wouldn't be much of a difficult patch, if you feel like doing it
[18:49] tjholowaychuk: my bad
[18:49] isaacs: Anti-X: look for the "prettify" function in npm/lib/list.js
[18:49] Anti-X: ok
[18:50] isaacs: it's just some string hacking
[18:50] dilvie: doesn't connect have a decent logger built-in?
[18:50] CIA-36: node: 03Ryan Dahl 07master * r901d5fd 10/ lib/fs.js : Don't require events in fs.js - http://bit.ly/9cuNIo
[18:50] CIA-36: node: 03Ryan Dahl 07master * rc4636a5 10/ (5 files in 3 dirs): Dynamically load native scripts - http://bit.ly/clIfgk
[18:50] tjholowaychuk: dilvie: yup
[18:50] matt_c_ has joined the channel
[18:51] isaacs: ryah: w00t.
[18:51] tjholowaychuk: dilvie: log.js is just for ad-hoc use, nothing http specific
[18:51] bahamas: tjholowaychuk: ok, thanks
[18:51] isaacs: ryah: re: c4636a5
[18:51] ryah: isaacs: yeah, now you can just drop in source
[18:51] isaacs: that's awesome.
[18:52] ryah: one step closer to custom builds
[18:52] isaacs: i have spent many unhappy minutes puzzling over why some file didn't get picked up
[18:52] teemow has joined the channel
[18:53] aurynn: part of me wants to write an object system in node that just uses events.
[18:53] bradleymeck: strmpnk the v8 team is not currently working on strict mode (and i agree with that descision)
[18:54] codemanki has joined the channel
[18:54] felixge has joined the channel
[18:54] CIA-36: node: 03Ryan Dahl 07master * r0fcb3bd 10/ src/node.js : Add .js to native script's filename - http://bit.ly/ae2bys
[18:55] felixge: Is anybody profiling their node.js stuff?
[18:55] felixge: If so, how do you analyze the v8 logs?
[18:55] felixge: http://github.com/mape/node-profile seems broken
[18:55] ryah: felixge: v8.log ?
[18:55] tjholowaychuk: felixge: v8 has some tick processors
[18:55] felixge: ryah: yeah v8.log
[18:56] tjholowaychuk: felixge: in ./deps/v8/tools or something
[18:56] ryah: felixge: what tjholowaychuk said
[18:56] hassox has joined the channel
[18:56] strmpnk: bradleymeck: Just curious in terms of development.
[18:57] felixge: ah cool
[18:57] felixge: that seems to work
[18:57] stephenjudkins has joined the channel
[18:58] bradleymeck: no work on it, rather hard since some internals for major things would blow up if you used them from strict mode right now (yay for chrome's inspector using eval! and setTimeout(String)! ...)
[18:58] Tprice has joined the channel
[18:58] tobeytailor has joined the channel
[18:58] felixge: ryah / tjholowaychuk: Any idea how to read that output? It says my connect() function has 80 ticks which is either wrong or I don't understand what a tick is
[18:59] dilvie: tjholowaychuk: To add logging to my app, I just do add app.use(connect.logger()); to the top of my app.configure call?
[18:59] strmpnk: bradleymeck: Yeah. I understand that. It's just nice to have things blow up in a sort of development mode. Kind of like having a warnings mode.
[18:59] tjholowaychuk: dilvie: yup that is right, sometimes I add configure('development', function(){...}) and use a custom { format: '' } for logger
[18:59] bradleymeck: well yes, but some people want to use strict mode in production, and that is in general chaotic at best
[18:59] tjholowaychuk: in development
[19:00] tjholowaychuk: since its kindof annoying
[19:00] pedrobelo has joined the channel
[19:00] tobeytailor: Hey guys, does anyone how to get the v8::FunctionTemplate of a v8::Function?
[19:00] strmpnk: bradleymeck: Yeah. I don't see a big win there at all. jslint will do for now.
[19:01] bradleymeck: tobey  v8::Local<v8::Function> function = t->GetFunction();
[19:01] aubergine has joined the channel
[19:01] bradleymeck: oh in reverse
[19:01] bradleymeck: you dont
[19:01] dilvie: =)
[19:01] dilvie: brilliant.
[19:01] dilvie: Starting to really appreciate express / connect.
[19:02] dilvie: The ready-to-roll connect middleware is nice to just plug in to my app.
[19:02] gf3 has joined the channel
[19:02] zemanel has joined the channel
[19:02] ajsie: isn't there a express.format() middleware?
[19:03] ajsie: according to: http://senchalabs.github.com/connect/
[19:03] ajsie: i get no such method
[19:03] tjholowaychuk: ajsie: not anymore
[19:03] tjholowaychuk: that might be outdated
[19:03] ajsie: hm okay
[19:03] tjholowaychuk: you can use get('/user/:id.:format?') etc
[19:03] tobeytailor: bradleymeck the template from a function not the function from a template :)
[19:03] tjholowaychuk: ajsie: format was to greedy
[19:03] tjholowaychuk: not overly useful
[19:04] ajsie: tjholowaychuk: im using regexp
[19:04] bradleymeck: yea tobey, cant go that direction unfortunately
[19:04] ajsie: how can i get the format using regexp for url path?
[19:04] tjholowaychuk: ajsie: ah well then just add something like (\.(\w+))$/
[19:04] tjholowaychuk: ajsie: ah well then just add something like (\.(\w+))?$/
[19:05] tjholowaychuk: and you can access the capture groups via req.params[n]
[19:05] ajsie: tjholowaychuk: the problem is that that gives me the key in an array
[19:05] ajsie: yeah
[19:05] ajsie: u have to access the last one
[19:05] ajsie: i
[19:05] tjholowaychuk: yup
[19:05] ajsie: req.params[-1] maybe .. ill test
[19:05] tobeytailor: bradleymeck okay, so i can't use Inherit, have to set the __proto__ instead, thanks
[19:05] tjholowaychuk: ajsie: they are constant tho, so if you have 3 capture groups req.params[2] will be your format
[19:05] bradleymeck: or hold a reference to FunctionTemplate
[19:05] tjholowaychuk: or empty
[19:06] ajsie: tjholowaychuk: isn't the format always going to be the last one
[19:07] ajsie: then i guess i can just access the last key and it will always be the format
[19:07] tobeytailor: bradleymeck question is how... cant use an Array as a hash, storing class name as a key, array only accepts v8::Value as values
[19:07] ajsie: even though the previous ones are defined or null
[19:07] tjholowaychuk: ajsie: yeah
[19:07] bradleymeck: tobey im not sure what you are trying to do
[19:09] tobeytailor: im workin on a java bridge for node
[19:11] bradleymeck: ok, but why do you need to grab functiontemplates from functions, and why would you store them in a v8::Array
[19:11] tobeytailor: you can do an import("org.test.Test") and it reflects the java class to javascript, i store all loaded classes (v8::Functions) in an array
[19:12] bradleymeck: available to js or hidden in c++?
[19:12] ajpiano has joined the channel
[19:12] tobeytailor: available in js
[19:13] BHSPitCSP: That's the most direct way to download a JSON url and put the resulting object into a variable?
[19:13] tobeytailor: Test = import("org.test.Test"); test = new Test();
[19:13] tobeytailor: if you import a second class, which inherits from org.test.Test
[19:13] BHSPitCSP: erm, s/That's/What's/
[19:14] tobeytailor: i lookup the loadedClasses array instead of importing it again
[19:14] banjiewen has joined the channel
[19:14] tobeytailor: to use FunctionTemplate::Inherit i need the FunctionTemplate
[19:14] tobeytailor: not the Function from loadedClasses
[19:14] yhahn has joined the channel
[19:14] stride: BHSPitCSP: http.Client is the highest abstraction in the core I think
[19:15] felixge: ryah / tjholowaychuk: I think the v8 log analyzer is completely broken, at least if you analyze a v8.log file with 300k lines
[19:15] tobeytailor: i solved the inheritance now by setting the __proto__ property of the functions' object
[19:16] tjholowaychuk: felixge: yeah i noticed that too, big files tanked
[19:16] tobeytailor: to the prototype of the superclass
[19:16] tjholowaychuk: :s
[19:16] ceej has joined the channel
[19:16] felixge: tjholowaychuk: bah
[19:16] tjholowaychuk: felixge: I was profiling our app, I could only reload the page maybe 10 times
[19:16] felixge: tjholowaychuk: do you know how big the file can be?
[19:16] tjholowaychuk: hmmm
[19:17] bradleymeck: i would suggest then, instead of storing functions, store objects, and just make the constructor a simple wrapper to generate a new instance and apply the constructor from java. then when you need to inherit etc you make the instanceprototype/objectprototype etc the super object
[19:17] tobeytailor: it works well, but feels so much WRONG
[19:17] tjholowaychuk: not sure, not very large though
[19:17] mlangenberg_ has joined the channel
[19:17] tjholowaychuk: felixge: which sucks, its hard to get useful information from a small dataset
[19:17] tjholowaychuk: it was pretty useless for me
[19:17] bradleymeck: SetPrototype works as well 
[19:18] tobeytailor: ah, right
[19:18] tobeytailor: damnit
[19:18] tobeytailor: thanks dude
[19:18] BHSPitCSP: stride: so, do I need to piece the data chunks together as they come in, and *then* try to parse the json when the response finishes loading?
[19:18] tobeytailor: :D
[19:18] felixge: tjholowaychuk: I'm trying on a smaller file (4000 lines) and it still fails
[19:18] yhahn: anyone here use mongoose?
[19:18] felixge: tjholowaychuk: that's just 10 queries :(
[19:18] felixge: tjholowaychuk: entirely useless
[19:18] tjholowaychuk: felixge: shit, I dont think it was that bad for me but I couldnt do much
[19:19] micheil: odd.
[19:19] jameshome has joined the channel
[19:19] BHSPitCSP: tjholowaychuk: you're working on a ss canvas api implementation, right? How's that coming along?
[19:19] stride: BHSPitCSP: yep, though somebody did a streaming parser for JSON I think
[19:19] tjholowaychuk: BHSPitCSP: just started working on it again
[19:19] bradleymeck: i have one
[19:19] tjholowaychuk: BHSPitCSP: not to bad, trying to get putImageData() to not fuck up
[19:19] tjholowaychuk: haha
[19:20] mlangenberg_: Am I right that is is not possible to catch an exception throw by http.Client client.request()? See https://gist.github.com/73a64fd2150f4fe274ae
[19:20] BHSPitCSP: tjholowaychuk: I'm excited :)
[19:20] tjholowaychuk: BHSPitCSP: :D hopefully I will have that resolved soon so I can move along, it is tough to debug some of this
[19:20] BHSPitCSP: tjholowaychuk: is it on github where I can follow it?
[19:20] tjholowaychuk: not yet
[19:21] xdamman has joined the channel
[19:21] micheil: hmm, C/C++ "h" != 'h'
[19:21] bradleymeck: streaming json parsing is slower than JSON.parse, but it can be useful for stupidly large objects, http://github.com/bmeck/node-jsonparser
[19:21] tobeytailor: ah wait, setPrototype overwrites .prototype, but thats not what i want, i want to extend the prototype chain via __proto__
[19:21] bradleymeck: indeed micheil
[19:21] felixge: tjholowaychuk: it seems like the log itself is bad
[19:21] micheil: ACTION didn't know that.
[19:21] tjholowaychuk: felixge: oh really?
[19:21] tjholowaychuk: shit
[19:21] tjholowaychuk: thats not good
[19:21] felixge: tjholowaychuk: I'm doing a | grep emit and I only see ~10 emits
[19:22] felixge: tjholowaychuk: for code that has hundreds
[19:22] BHSPitCSP: bradleymeck: I just need to parse a really small json message coming from a webservice on occasion
[19:22] felixge: tjholowaychuk: unless I'm not reading the file right
[19:22] tjholowaychuk: felixge: that might explain why my results were so useless
[19:22] BHSPitCSP: bradleymeck: roll my own, you think?
[19:22] bradleymeck: BHSPitCSP, just concat onto a string until finished if it is small
[19:22] BHSPitCSP: bradleymeck: thanks
[19:23] tobeytailor: michael, "h" is from type char* 'h' is a char
[19:23] felixge: tjholowaychuk: fuck :(
[19:23] tjholowaychuk: felixge: let me know if you figure that out I gave up pretty quick lol
[19:24] benburkert has joined the channel
[19:25] derferman has joined the channel
[19:26] bradleymeck: whats a good javascript statistics library
[19:26] jansc has joined the channel
[19:27] mbl has joined the channel
[19:27] astrolin has joined the channel
[19:27] tobeytailor: for drawing graphs?
[19:27] bradleymeck: nope, just stats t-test etc
[19:28] digitalspaghetti: felixge: hey - quick q, do you have a timeline for when auth will be implemented in node-couchdb?
[19:28] felixge: digitalspaghetti: not sure, whenever somebody sends me a good pull request for it I guess :)
[19:29] ajsie: if you use send(json_object) then it serves json, if you use send(html_string) then it serves html...how do you serve xml in express?
[19:29] stagas has joined the channel
[19:29] aurynn: who else was working on the postgres drivers?
[19:29] digitalspaghetti: felixge: cool, i might have a hack at it next week then if i get time
[19:29] ajsie: you have to manually set it with header() ?
[19:30] tjholowaychuk: ajsie: you can set the content-type with res.header()
[19:30] tjholowaychuk: ajsie: or res.send('whatever', { 'Content-Type': '...' })
[19:30] ajsie: okay .. so you provide shortcuts only for json and html?
[19:30] micheil: ryah: what should "eval_string" be set to? /cc tjholowaychuk 
[19:30] ajsie: not xml .. since its similar syntax to html?
[19:30] tjholowaychuk: ajsie: yeah
[19:30] ajsie: okay
[19:30] xraid has left the channel
[19:31] tjholowaychuk: micheil: that just holds the string later evaluated in node.js
[19:31] tjholowaychuk: once bootstrapped
[19:31] digitalspaghetti: ajsie: http://gist.github.com/622768
[19:31] micheil: k
[19:31] tjholowaychuk: something more elegant would be good lol but I couldnt think of much
[19:31] digitalspaghetti: i wrote this so I can do this
[19:32] digitalspaghetti: render_to_response(res, {data: 'here}, 200, {'Content-Type': 'text/json'})
[19:32] mlangenberg_: Aah.. instead of try { client.request } catch() ... I can do client.on('error', function() .... No I can do robust HTTP requests :)
[19:32] ajsie: digitalspaghetti: ah nice
[19:32] tjholowaychuk: digitalspaghetti / ajsie: you shouldnt need that. end() is called in send()
[19:33] digitalspaghetti: tjholowaychuk: oh, good to know.
[19:33] tjholowaychuk: digitalspaghetti: its not good (or meant) for streaming things, but it is a good one-shot response util
[19:34] digitalspaghetti: tjholowaychuk: yea, it's just a function i can call, but since i just need the res.send, i can probably get rid of now then
[19:34] digitalspaghetti: i used to write the header, send the data then do end, but now it's just one line anyway :D
[19:34] micheil: hm...
[19:35] tjholowaychuk: digitalspaghetti: yup :)
[19:36] margle has joined the channel
[19:36] ajsie: tjholowaychuk: is there a way for me to add a variable for "format" so all routes could use it
[19:36] ajsie: var format = req.params[req.params.length-1]
[19:37] Anti-X: isaacs, this came up in the npm list... looks like a name error http://gist.github.com/622779
[19:37] tjholowaychuk: ajsie: you could define a getter on IncomingRequest, req.format == req.params[req.params.length-1]
[19:37] hassox has joined the channel
[19:37] ajsie: yeah .. but where?
[19:37] tjholowaychuk: ajsie: http.IncomingRequest.prototype
[19:37] isaacs: Anti-X: yeah, tha'ts a failure to flush before emitting the "npm ok" message.
[19:37] ajsie: okay
[19:37] isaacs: Anti-X: fixed it already in HEAD
[19:37] Anti-X: ok
[19:38] tjholowaychuk: ajsie: you could just have a helper function as well but this way you have access to everything
[19:38] Anti-X: i set the attrs to start from pos 28, seems to accomodate about 99% of packages
[19:38] ajsie: tjholowaychuk: okay ... could i use middleware for this as well?
[19:38] xdamman_ has joined the channel
[19:38] ajsie: haven't read about it in detail yet
[19:38] tjholowaychuk: ajsie: not really
[19:39] ajsie: doesn't route middleware hook up before the route callback letting me do stuff?
[19:39] programble has joined the channel
[19:39] programble has joined the channel
[19:40] tjholowaychuk: ajsie: yeah, but that would only work if you assume trailing .<word> as being a format
[19:40] tjholowaychuk: always
[19:40] micheil: tjholowaychuk: 
[19:40] micheil: in node --eval "console.log('test')"
[19:41] tjholowaychuk: yup
[19:41] micheil: option_end_index should == 1, right?
[19:41] micheil: or 2?
[19:41] tjholowaychuk: cant remember, that part was messed up
[19:41] micheil: k
[19:41] tjholowaychuk: haha
[19:41] micheil: because currently I get an EONET
[19:41] tjholowaychuk: ah yeah you are off by one then
[19:41] micheil: ENOENT
[19:41] margle has joined the channel
[19:41] micheil: yeah. it doesn't like incrementing properly
[19:43] dilvie: Can node.js do an SSL front-end in 4 lines? http://gist.github.com/400433
[19:48] stride: just in case anybody has this in his/her head: buffer.copy doesn't resize the target buffer if it's too small, right?
[19:48] ajsie: tjholowaychuk: i realized that it would be good to assign variable for every routes to use .. is this possible?
[19:48] tjholowaychuk: ajsie: for your format thing?
[19:48] ajsie: cause then the format issue would be fixed too as well as other assigntments
[19:49] ajsie: for other assignments too ... if you want the controllers to have access to some shared data
[19:49] ajsie: or predefined data
[19:49] tjholowaychuk: ajsie: look the express repo, ./lib/express/request.js
[19:49] ajsie: kinda like initalizers in rails
[19:49] tjholowaychuk: you can extend it however you like
[19:49] ajsie: okay
[19:50] hassox has joined the channel
[19:51] dilvie: how do you handle SSH with sessions in Node apps?
[19:52] richcollins has joined the channel
[19:52] micheil: tjholowaychuk: k, for the given: `node --eval "console.log('test')"`, option_end_index should == 3
[19:52] mikeal1 has joined the channel
[19:53] tjholowaychuk: micheil: ah yeah that makes sense
[19:53] tjholowaychuk: it is just wonky to work with
[19:53] micheil: for just `node`, option_end_index should == 1
[19:53] davidascher has joined the channel
[19:53] micheil: ACTION is rewriting it to use getopt_long
[19:54] tjholowaychuk: yeah that makes sense, to pass the rest of argv to v8
[19:55] stride: hm, the http.Client example is missing the end-event handler, do I report documentation stuff as an issue?
[19:55] jstemmer has joined the channel
[19:55] skohorn has joined the channel
[19:56] micheil: stride: add a issue to github, and email the dev mailing list.
[19:56] jstemmer has joined the channel
[19:57] stride: okay, will do that, thanks
[19:57] tilgovi has joined the channel
[19:59] spetrea-home has joined the channel
[20:00] micheil: hmm..
[20:00] micheil: tjholowaychuk: option_end_index = 3 throws an error in v8. wtf.
[20:01] digitalspaghetti: micheil: you're really getting into your C++ :D
[20:01] micheil: digitalspaghetti: well, I do what I can.
[20:01] tjholowaychuk: micheil: haha, yeah i really didnt look into that much, just accepted that it was kinda awkward
[20:02] jdalton has joined the channel
[20:02] micheil: tjholowaychuk: could you execute that statement and tell me what you get?
[20:02] tjholowaychuk: micheil: it should be dynamically set based on the input tho
[20:03] tjholowaychuk: so that it can defer those args
[20:03] micheil: tjholowaychuk: if HEAD currently throws this, then it should be fixed: http://gist.github.com/622808
[20:03] micheil: I'm getting a constant 1 off
[20:03] micheil: either I'm getting ENOENT or I'm getting v8 help.
[20:03] dguttman has joined the channel
[20:03] aliem has joined the channel
[20:03] tjholowaychuk: node build/default/node ?
[20:03] tjholowaychuk: ./build/default/node
[20:04] micheil: just node
[20:04] dilvie: I want my whole app to be encrypted with SSL. Is that easy to do with Node? Does it effect session support?
[20:04] micheil: node --eval "console.log('test');"
[20:04] tjholowaychuk: micheil ah, lol confused me
[20:04] teemow has joined the channel
[20:04] micheil: ohh.
[20:04] micheil: whoops.
[20:04] micheil: that's my zsh prompt
[20:05] micheil: the directory is called node
[20:05] tjholowaychuk: ohhh hahah
[20:05] micheil: see: http://drp.ly/GlsV
[20:05] tjholowaychuk: nope works fine for me
[20:06] micheil: k
[20:06] hassox has joined the channel
[20:07] ben_alman has joined the channel
[20:07] felixge: ryah: do you know what / where __notify_server_register_check is?
[20:08] jblanche has joined the channel
[20:10] murz has joined the channel
[20:11] Anti-X has joined the channel
[20:12] sveisvei has joined the channel
[20:13] stephenjudkins has joined the channel
[20:17] Eber has joined the channel
[20:17] blowery has joined the channel
[20:17] zooko has joined the channel
[20:18] mjr_ has joined the channel
[20:18] Eber: Hey guys, does anyone here knows if there is any effort in bringing i18n tools to node?
[20:19] tjholowaychuk: Eber: http://github.com/visionmedia/lingo is a start
[20:19] Eber: tjholowaychuk: Thanks man, I'll check it out!
[20:20] stagas_ has joined the channel
[20:20] Eber: tjholowaychuk: you can count on me if you need to add portuguese to the languages stack...
[20:20] tjholowaychuk: Eber: awesome :) feel free to fork/submit a pull request
[20:21] Eber: tjholowaychuk: ok :)
[20:22] felixge: ryah: looks like this is part of mac os: http://www.opensource.apple.com/source/notify/notify-23/notifyd.tproj/notify_proc.c
[20:22] drudge: tjholowaychuk: if you need help with english i'm your guy ;)
[20:22] felixge: if that's the case than my driver is spending most of its time waiting for the OS
[20:22] tjholowaychuk: drudge: haha that is no doubt needed as well :D haha
[20:23] drudge: american too!
[20:23] felixge: which would be terrible
[20:23] micheil: can C/C++ switch use strings?
[20:23] jdalton has left the channel
[20:23] bradleymeck: no
[20:23] tjholowaychuk: micheil: nope
[20:23] ryah: felixge: no, what is that?
[20:23] digitalspaghetti: holy crap: http://www.bbc.co.uk/news/world-us-canada-11528661
[20:23] wink_: nope
[20:23] digitalspaghetti: oops, wrong chan
[20:23] micheil: damn.
[20:23] felixge: ryah: seems like OSX networking code?
[20:23] micheil: that makes the op parser a little messier
[20:23] tmedema has joined the channel
[20:24] tjholowaychuk: micheil: you can kinda fake it with macros lol but its .. odd
[20:24] bradleymeck: char by char baby
[20:24] tjholowaychuk: and harder for other people unless they know what is going on
[20:24] felixge: ryah: this is my v8 profile for node-mysql selectin 10.000 rows: https://gist.github.com/12ae78dd3745f7a45ffc
[20:24] bradleymeck: i tend to avoid macros though
[20:24] tmedema: Hi, I was wondering if there've been any (blog) posts on seting up a node environment with multiple servers (about sharing the same databases etc.)
[20:24] micheil: yeah, i'll use an if/else, not that I wanted to.
[20:25] bradleymeck: switch is faster still, but if else is more readable for most situations
[20:25] pkrumins: node.js needs .once event listener, that is like .on, except executed just once
[20:25] felixge: ryah: if that is to be believed then my parser is using 4% and __notify_server_register_check uses 40%
[20:25] felixge: ryah: and that would be exactly the order of magnitude that my driver is currently slower then libmysql :)
[20:25] pkrumins: very often do you need to do something just once
[20:25] pkrumins: ryah: would you accept a patch with .once?
[20:26] ryah: pkrumins: hm - okay . but is there a better name?
[20:26] ryah: felixge: hm...
[20:26] felixge: pkrumins: once() does kinda useful
[20:26] felixge: * does seem
[20:26] ryah: felixge: gdb it 
[20:26] micheil: ryah: I'm getting somewhere on that patch.
[20:26] ryah: felixge: break on that symbol, get a stack trace
[20:26] felixge: ryah: gdb can do profiling?
[20:27] felixge: ryah: ah ok
[20:27] pkrumins: ryah: once seems like pretty good name to me
[20:27] eisd: I like once too
[20:27] wink_: once++
[20:27] v8bot:  wink_ has given a beer to once. once now has 1 beers.
[20:27] eisd: since it's just two more letters than on
[20:27] bradleymeck: pkrumins, EventEmitter.prorotype.once = function(name,fn) {var emitter = this;this.on(name,function f(){emitter.removeListener(name,f);fn.apply(this,arguments)}})}
[20:28] digitalspaghetti: a_lady.once().twice().three('times')
[20:28] felixge: ryah: break __notify_server_register_check ?
[20:28] path[l] has joined the channel
[20:28] ajsie: when i use: res.send(xml_string, {'Content-type': 'application/xml'}); i see in Chrome: Content-Type:text/html; charset=utf-8, application/xml
[20:28] ajsie: shouldn't text/html not be there?
[20:28] digitalspaghetti: Content-Type
[20:28] felixge: ryah: doesn't seem to work that way?
[20:29] tjholowaychuk: ajsie: Content-Type, you have Content-type so it probably collides
[20:29] pkrumins: bradleymeck, just like that
[20:29] ajsie: tjholowaychuk: thanks!
[20:29] ajsie: it worked
[20:30] astrolin_ has joined the channel
[20:31] Anti-X: tjholowaychuk, your library is english oriented, isn't it? that makes it unsuitable for pretty much any other language in the world :P
[20:31] Anti-X: lingo that is
[20:31] aurynn: bradleymeck, I like that implementation :)
[20:32] tjholowaychuk: Anti-X: right now yeah, its far from perfect I just started it the other day
[20:32] bradleymeck: even with the misspellings? :D
[20:32] Anti-X: ah ok
[20:33] Anti-X: also your *ox -> *oxen pluralization is a bit too general :p
[20:33] aurynn: :P
[20:33] tjholowaychuk: Anti-X: probably, fix it lol dont complain
[20:33] Anti-X: haha
[20:34] Anti-X: was looking at it to start adding norwegian, but i don't know where to start changing stuff :p
[20:34] felixge: ryah: am I doing the gdb thing right?
[20:35] felixge: ryah: gdb node_g \ break __notify_server_register_check \ run benchmark.js
[20:35] digitalspaghetti: felixge: http://lemonodor.com/images/mccarthy-youre-doing-it-wrong-s.jpg   :p
[20:35] benburkert has joined the channel
[20:35] tjholowaychuk: Anti-X: well if / when you do know, let me know lol
[20:35] felixge: digitalspaghetti: hm?
[20:35] digitalspaghetti: sorry, i start going a little crazy at this time of night :D
[20:36] Anti-X: tjholowaychuk, i'm keeping an eye on it at least, might join in later
[20:36] tjholowaychuk: Anti-X: sounds good
[20:36] eazyigz has joined the channel
[20:37] dilvie: tjholowaychuk: Is there a standard 404-handler for express, or do I need to roll my own?
[20:37] eazyigz has joined the channel
[20:37] tjholowaychuk: dilvie: gotta roll your own, typically using a layout with your assets so it looks like your site
[20:37] tjholowaychuk: or if you dont want to waste resources just a simple template
[20:37] tjholowaychuk: Anti-X: what is your github username?
[20:38] Anti-X: torvalamo
[20:38] Anti-X: see whois
[20:38] Anti-X: if you forget :p
[20:39] halfhalo has joined the channel
[20:40] dilvie: tjholowaychuk: Is it good practice to throw an error like the one in the guide under error handling?
[20:40] jblanche has joined the channel
[20:40] dilvie: for 404?
[20:40] dmcquay has joined the channel
[20:41] tjholowaychuk: dilvie: whatever works best for you, it is fine to next(a404)
[20:41] digitalspaghetti: throw nice 404's :D  something like: http://blippy.com/404
[20:41] tjholowaychuk: dilvie: you can just keep next()ing and have middleware handle it
[20:41] tjholowaychuk: at the bottom of your config
[20:43] dilvie: tjholowaychuk: OK, but I want to present something nice to the user, but I want to make sure that the middelware has had a chance to handle the request before I give the user a 404 message.. how do I do that?
[20:43] jblanche has joined the channel
[20:43] tyfighter has joined the channel
[20:44] tjholowaychuk: dilvie: then in that case you just want to next()
[20:44] tjholowaychuk: you would only want to next() an exception if you want the 404 immediate, which is usually not the case
[20:44] stagas has joined the channel
[20:44] Eber: off-topic: is anyone here working with localStorage already?
[20:46] prettyrobots has joined the channel
[20:47] eazyigz has joined the channel
[20:48] sonnym has joined the channel
[20:50] stagas_ has joined the channel
[20:50] eazyigz has joined the channel
[20:50] dilvie: tjholowaychuk: Thanks. =)
[20:51] tjholowaychuk: dilvie: np
[20:51] dilvie: digitalspaghetti: That blippy 404 is funny -- though probably not very useful. =)
[20:51] jacobolus has joined the channel
[20:51] dilvie: digitalspaghetti: Great for blippy's branding. =)
[20:52] dylang: how about bringing the user to a page that makes the most sense
[20:52] everton has joined the channel
[20:52] dylang: 404 example, it will try to bring you to a page that makes sense.  http://opowerjobs.com/dc-northern-virginia/engineering/software-engineer/404test
[20:53] dilvie: dylang: Nah. If they're looking for something else, dropping them on some random page will only confuse them. For example, redirecting 404's to the homepage is generally considered bad for usability.
[20:54] dilvie: dylang: I could see loading a search page with some recommendations pre-populated based on the URL the user tried.
[20:55] dylang: dilvie: that would be cool
[20:56] mjr_: felixge: you can also run node under Instruments.app and get a better stack trace in many cases.
[20:56] felixge: mjr_: I'll try that
[20:56] mAritz: so, it's 10am in nz and Tim_Smart is still not here?!
[20:56] felixge: mjr_: no idea how to use it so
[20:56] dilvie: dylang: That opower example is not bad, but I wouldn't drop /404 to /
[20:57] eazyigz has joined the channel
[20:57] mjr_: felixge: you want the "CPU Sampler"
[20:57] richcollins has joined the channel
[20:57] mjr_: felixge: then do, "Choose Target" -> node
[20:58] mjr_: felixge: click on the red "record" button
[20:58] mjr_: Then make node do whatever it is slow
[20:58] mjr_: After you capture an interesting interval, hit stop and see if it makes any sense.
[20:58] felixge: mjr_: who do I specify the command line argument for node?
[20:58] mjr_: Just start node however you want to start it
[20:59] mjr_: Then attach to a running node
[20:59] felixge: mjr_: hm
[20:59] MikhX has joined the channel
[20:59] mjr_: Choose Target -> Attach to Process -> pid of node
[20:59] pquerna: node_g
[21:00] pquerna: is helpful
[21:00] mjr_: yeah, node_g has more symbols
[21:00] mjr_: But node_g is all slow in strange ways that confuse this type of debugging.
[21:00] mjr_: computers are hard
[21:00] dpritchett1 has joined the channel
[21:00] brapse has joined the channel
[21:01] bjarkih has joined the channel
[21:01] felixge: mjr_: well
[21:02] felixge: mjr_: how do I tell instruments to break on a certain function?
[21:02] bpot has joined the channel
[21:02] mjr_: no need, just see where the time goes
[21:02] mjr_: you'll probably find that same function in a stack trace, but more importantly, you'll have a stack trace
[21:02] felixge: mjr_: I'm not profiling anymore
[21:02] felixge: mjr_: I'm trying to find out what function is calling another function
[21:02] overra_ has joined the channel
[21:03] mjr_: yeah, this will often tell you that
[21:03] felixge: mjr_: I'm not finding that function in the stack trace
[21:03] mjr_: The point is asking that question is because that function came up on V8's profile right?
[21:03] pkrumins: sent a patch that adds .once together with a test to mailinglist: http://groups.google.com/group/nodejs/browse_thread/thread/f6d699fbf1cb88dd
[21:04] felixge: mjr_: yes
[21:04] Tobsn has joined the channel
[21:04] mjr_: felixge: that's annoying if it doesn't show up in instruments.  However, if node is spending time in OSX-y stuff, Instruments will generally be more trustworthy.
[21:05] felixge: mjr_: overall it says most time is spend in kqueue_poll
[21:05] mjr_: We need to get those dtrace probes in V8.
[21:05] felixge: mjr_: which seems like a similar result to v8
[21:05] mjr_: Oh, make sure to click on "running sample times" or whatever it's called
[21:05] derferman has joined the channel
[21:06] mjr_: You'd expect much of the time to be spent blocked in kqueue, so that box will filter out that kind of stuff.
[21:06] pedrobel_ has joined the channel
[21:07] felixge: mjr_: well, if kqeueu is the bottleneck of my driver that'd be neat
[21:07] felixge: mjr_: and horrible
[21:07] mjr_: yeah, I bet it's not
[21:07] felixge: mjr_: because it would mean blocking i/o gets 10x the throughput 
[21:07] jblanche has joined the channel
[21:07] felixge: :)
[21:07] mjr_: But who knows
[21:07] mjr_: You are talking TCP to mysql?
[21:08] felixge: mjr_: yeah
[21:08] ajsie: tjholowaychuk: noob question: what object is holding the "req" object .. cause im calling req.params inside a function that is not coupled to the framework you can say .. i have to specify "this" eg. "my_function.apply(object_that_holds_req)" so that req.params will work
[21:08] mjr_: felixge: should be fast-able then.
[21:08] felixge: mjr_: the benchmark inserts and selects 10000 records
[21:08] tjholowaychuk: ajsie: http.IncomingRequest
[21:08] mjr_: felixge: all the time should be spent in your parser, you'd expect.
[21:08] ajsie: tjholowaychuk: thanks
[21:09] felixge: mjr_: one would think so, yes
[21:09] mjr_: felixge: if you can convince Tim_Smart that this is a worthy problem, he'd be a great person to look at this.
[21:09] felixge: mjr_: actually I need to use node-profiler to make sure profiling doesn't start until I'm done with the inserts
[21:10] xdamman has joined the channel
[21:12] derferman has joined the channel
[21:12] wink_: felixge: are you trying to profile your mysql binding?
[21:16] felixge: wink_: yes
[21:16] felixge: wink_: they are 10x slower than libmysql right now, I can't let that fly
[21:16] felixge: :)
[21:16] wink_: is it only performing badly on osx?
[21:16] felixge: wink_: not sure
[21:17] felixge: actually let me find out
[21:18] felixge: wink_: no, same on linux
[21:18] wink_: ah your binding is pure js, that makes it a little tougher although valgrind might still offer some insight
[21:18] derferman has joined the channel
[21:18] wink_: have you tried profiling it with valgrind and then looking at the profile with kcachegrind?
[21:19] eazyigz has joined the channel
[21:19] overra has joined the channel
[21:20] overra_ has joined the channel
[21:22] overra_ has joined the channel
[21:24] iganapolsky has joined the channel
[21:25] zooko has joined the channel
[21:25] bpot has joined the channel
[21:26] digitalspaghetti: micheil: http://www.amazon.com/gp/product/0321683919?ie=UTF8&tag=threriveinst-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0321683919
[21:26] digitalspaghetti: you might be interested in this
[21:26] jesusabdullah has joined the channel
[21:26] digitalspaghetti: oh infact: •    Testing code for both browsers and servers (using Node.js)
[21:27] felixge: wink_: have not tried yet
[21:28] sh1mmer has joined the channel
[21:28] digitalspaghetti: ooh, http://www.amazon.com/JavaScript-Patterns-Stoyan-Stefanov/dp/0596806752/ref=pd_bxgy_b_img_b
[21:28] sh1mmer: micheil: yo I'm in Sydney
[21:28] digitalspaghetti: lots of server side JS books coming out right now it seems
[21:29] benburke_ has joined the channel
[21:29] dilvie has joined the channel
[21:30] felixge: ah, I did my profiling wrong
[21:30] felixge: I also profiled the insert() because I thought it would not show up in the profile much
[21:30] felixge: that was wrong
[21:31] MikhX has joined the channel
[21:35] ossareh has joined the channel
[21:37] felixge: so now it looks more like EventEmitter is the bottleneck
[21:39] bradleymeck: emitting too fast?
[21:40] ctp has joined the channel
[21:42] ajsie: what is wrong with this one: http://pastie.org/1216771
[21:43] ajsie: its a question about express
[21:43] ajsie: i want to try to specify content-type
[21:43] hassox has joined the channel
[21:43] tjholowaychuk: ajsie: it wont convert it to xml for you
[21:43] ajsie: but it doesnt work
[21:44] tjholowaychuk: ajsie: only json
[21:44] evanpro has joined the channel
[21:44] ajsie: tjholowaychuk: okay this one then
[21:44] ajsie: http://pastie.org/1216779
[21:44] ajsie: cause i have to specify xml
[21:44] ajsie: but something is wrong
[21:45] ajsie: cause it downloads the xml document instead of showing it
[21:45] tjholowaychuk: ajsie: res.contentType() passes the argument through mime.type()
[21:46] ajsie: i have to separete those and not use res.send(model, {'Content-Type', etc. ....}
[21:46] tjholowaychuk: ajsie: so in this case use res.contentType('.xml')
[21:46] ajsie: oh
[21:46] ajsie: okay
[21:46] tjholowaychuk: or res.header('Content-Type', 'application/xml; ..')
[21:46] tjholowaychuk: which is raw
[21:46] teemow has joined the channel
[21:46] ajsie: which is the preffered one?
[21:46] tjholowaychuk: ajsie: doesnt matter, http://expressjs.com/guide.html#res-contentType-type-
[21:47] tjholowaychuk: res.contentType() is useful for files n stuff
[21:47] tjholowaychuk: and is used internally a bunch
[21:48] ajsie: tjholowaychuk: okay i noticed i have no utf-8 header if i used that one
[21:48] herbySk has joined the channel
[21:48] ajsie: i guess i better of using header() instead and specify my whole header
[21:48] ajsie: cause that is the only way passing utf-8 i guess
[21:48] tjholowaychuk: ajsie: yup
[21:49] tjholowaychuk: when I have time I will take tim's utf8 assumption out of connect's mime util, and add a charset accessor to express
[21:49] micheil: sh1mmer: unfortunately I'm 500km's west and can't make WDS due to exams.
[21:50] micheil: sh1mmer: super bummed about that. I haven't been able to get to any conf's this year due to either travel costs or exams.
[21:51] nerdEd has joined the channel
[21:51] eazyigz has joined the channel
[21:51] everton_ has joined the channel
[21:52] bpot has joined the channel
[21:52] sideshowcoder has joined the channel
[21:54] overra has joined the channel
[21:56] ysynopsis has joined the channel
[21:57] boaz_ has joined the channel
[21:57] figital has joined the channel
[21:58] micheil: ryah: also, how does node handle CONNECT requests?
[21:58] micheil: do we have an event for that?
[21:58] micheil: (I've not seen one)
[21:58] ashleydev: how does one include a file in an node.js app that doesn't do module.exports?
[21:59] ashleydev: that file has a var that I want to access...
[22:00] davglass has joined the channel
[22:00] richcollins has joined the channel
[22:00] micheil: ashleydev: without difficulty, you can't.
[22:01] micheil: ashleydev: there are ways to do it, but I don't have the time right now to talk about it in depth..
[22:01] ashleydev: ok
[22:02] ashleydev: thx
[22:03] steadicat has joined the channel
[22:03] ajsie: tjholowaychuk: looks like i have to set: res.header('Content-Type', 'application/xml; application/xhtml+xml; charset=UTF-8'); not to have error on chrome
[22:03] ajsie: both xml and xhtml
[22:04] tjholowaychuk: ajsie: weird, I wouldnt know I try my best to stay away from xml :)
[22:04] ajsie: :)
[22:05] ajsie: tjholowaychuk: but isn't it good to have a restful xml API for customers?
[22:05] tjholowaychuk: meh
[22:05] tjholowaychuk: jon
[22:05] tjholowaychuk: json*
[22:05] ajsie: if they dont like json
[22:05] ajsie: isnt it common to offer xml too?
[22:06] tjholowaychuk: yeah, but i wouldnt worry about how a browser chooses to output it
[22:06] tjholowaychuk: I would just set application/xml
[22:08] ajsie: okay
[22:10] digitalspaghetti: XML was coded by a sadistic person
[22:11] rnewson has joined the channel
[22:11] melpad has joined the channel
[22:11] digitalspaghetti: and SOAP, someone wh is a sociopath
[22:11] kjy112 has joined the channel
[22:12] rkieffer has joined the channel
[22:13] eazyigz has joined the channel
[22:13] Akufen has joined the channel
[22:13] Akufen has joined the channel
[22:14] aurynn: soap was written by someone who missed the point
[22:14] aurynn: xml itself isn't bad
[22:14] teemow has joined the channel
[22:14] sh1mmer has joined the channel
[22:14] MikhX has joined the channel
[22:15] nerdEd has joined the channel
[22:15] MikhX_ has joined the channel
[22:16] bpot has joined the channel
[22:16] iganapolsky has joined the channel
[22:18] _mythz has joined the channel
[22:19] breccan_ has joined the channel
[22:20] TooTallNate has joined the channel
[22:20] lakin has joined the channel
[22:20] ryah: micheil: you get an 'upgrade' event
[22:20] micheil: ryah: okay, is that right?
[22:21] micheil: I don't think it is, considering upgrade is generally for the Connection: Upgrade header.
[22:21] micheil: I think it should possibly be something different.
[22:21] micheil: I'm not too sure though.
[22:21] davida has joined the channel
[22:21] micheil: ACTION will bbiab, watching the JSConf EU 2010 speech.
[22:22] benburkert has joined the channel
[22:22] MikhX has joined the channel
[22:22] frode has joined the channel
[22:24] TooTallNate: ryah: pretty please merge my 2 pull requests!
[22:24] jashkenas has joined the channel
[22:24] maqr has joined the channel
[22:27] prettyrobots has joined the channel
[22:28] benburkert has joined the channel
[22:30] jblanche has joined the channel
[22:32] bradleymeck has left the channel
[22:36] dpritchett has joined the channel
[22:36] xla has joined the channel
[22:39] micheil: voodootikigod: ping.
[22:40] micheil: anyone know what the google groups "welcome message" is?
[22:41] voodootikigod: micheil: pong
[22:41] margle has joined the channel
[22:44] micheil: voodootikigod: see the private message.
[22:45] steadicat has joined the channel
[22:45] ajsie: is there a way to abstract all the variables on top: http://pastie.org/1216900
[22:45] ajsie: cause i have multiple files needing all those variables
[22:45] ajsie: so it wont be DRY
[22:47] aurynn: has anyone written caldav on node yet?
[22:50] Athox has joined the channel
[22:50] ajpiano has joined the channel
[22:51] rkieffer has joined the channel
[22:52] modular has joined the channel
[22:52] jacobolus has joined the channel
[22:52] margle has left the channel
[22:53] modular: which version of node.js should i be using, if i'm just starting?
[22:53] micheil: 2.X
[22:53] mjr_: 0.3.x is changing rapidly
[22:53] micheil: I'm not sure what the latest is, I'm working off HEAD
[22:54] micheil: (or 0.3-pre)
[22:54] mr_daniel has joined the channel
[22:54] mjr_: I just replaced some couchdb views with redis and got a 10X speedup.  Pretty great.
[22:55] shaver: redis is pretty nice
[22:55] shaver: I am having to re-learn that computers are fast
[22:55] derferman has joined the channel
[22:55] shaver: and can do a lot of work in a few milliseconds
[22:55] mjr_: It was a giant waste of time for couchdb, but I couldn't figure out how else to to it.
[22:55] shaver: if you don't make them wade through all of the L1, L2, L3 caches, do some I/O, and context switch a few hundred times
[22:55] micheil: shaver: which Mike Shaver are you?
[22:56] shaver: if they owe you money, I'm not the one you're thinking of
[22:56] hellp has joined the channel
[22:56] shaver: I'm the Mozilla Mike Shaver, if that's who you're thinking of
[22:56] mjr_: shaver: yeah, this new page loads the index from node/redis so fast that you don't actually notice it loading.  It seems like it must have been cached on the client.
[22:56] shaver: yeah
[22:56] felixge: ACTION sleep
[22:56] shaver: I had to watch server logs to believe that my websocket/redis thing was actually remoting
[22:56] micheil: shaver: dubbing you "The Real Shaver"
[22:56] mjr_: I have this progress bar that seemed necessary, but now is just a waste of time
[22:57] micheil: shaver: what's this you're doing with websockets?
[22:57] shaver: micheil: real-time keyword matching for bugzilla summaries at bug-entry time
[22:57] shaver: to find likely duplicates
[22:57] micheil: shaver: I'm micheil / miksago on the hybi mailing list.
[22:57] shaver: ah; I'm not on the hybi list, but I've seen much mention of it
[22:57] micheil: shaver: nice. Any particular websocket server implementation you're using?
[22:58] mjr_: micheil: I finally switched to yours instead of my hand-rolled one.
[22:58] aurynn: Remember: having 8GB of main memory is rich beyond the wildest dreams of avarice.
[22:58] shaver: I think it's called "node-websocket" -- it was something that npm found
[22:58] shaver: it speaks -76, I believe
[22:58] micheil: websocket-server on npm, would be mine.
[22:58] micheil: http://github.com/miksago/node-websocket-server
[22:58] shaver: ah
[22:58] shaver: that could be it
[22:58] micheil: k
[22:58] shaver: I'm not logged into the machine right now
[22:58] shaver: whatever it was, it worked very well
[22:58] micheil: let me know if you find anything odd in it.
[22:58] shaver: I have to say, I miss a lot of Mozilla extensions in v8 when I'm working in node
[22:59] shaver: generators and function-shorthand mostly
[22:59] mjr_: shaver: if you did "npm install redis" then you installed my redis lib.
[22:59] shaver: now Proxies
[22:59] shaver: mjr_: that I very much did
[22:59] micheil: shaver: pft. non-standard extensions.
[22:59] shaver: well, they're all proposed
[22:59] micheil: shaver: I do want __noSuchMethod__ though
[22:59] shaver: we implement what we propose to make sure it's something we actually want to propose :-)
[22:59] shaver: thus getters/setters/Array extras/etc.
[22:59] micheil: shaver: the hybi should do the same. >_>
[23:00] micheil: shaver: oh, node/v8 has getters/setters
[23:00] shaver: yeah, they're in ES5
[23:00] micheil: yeah
[23:00] shaver: because we implemented and got experience with them, honestly
[23:01] micheil: shaver: things like __NSM__ won't be in v8 until JS Core implements them
[23:01] micheil: there's actually a patch to v8 to add them.
[23:01] shaver: we'll see
[23:01] shaver: I hear that the v8 team is going to be willing to be more aggressive
[23:01] micheil: anyway, I need to get back to patching node.
[23:01] JimBastard: it is possible to hack in a NSM
[23:01] micheil: erm. fixing an issue.
[23:01] JimBastard: its just not very clean at all
[23:01] shaver: our NSM isn't very clean
[23:02] shaver: but sure is handy
[23:02] JimBastard: i mean to say, you can do it in pure JS right now
[23:02] shaver: not really, without catch-all getters
[23:02] shaver: you can do it with Proxies, but I don't think they've been implemented in v8 yet
[23:02] shaver: (though the spec was largely developed by people at Google originally!)
[23:02] JimBastard: you can kinda do it with try / catch if you structure your call right
[23:02] JimBastard: its just very ugly and mostly pointless
[23:03] shaver: yeah, I don't think you get the right semantics
[23:03] shaver: god, I would rather be hacking with node right now
[23:04] brapse has joined the channel
[23:07] micheil: shaver: what are you hacking with?
[23:08] jpld: if a library is sitting at an older-than-current version in npm, does that mean the author hasn't pushed later versions?
[23:08] jpld: in which case, i can just ask the author to do so rather than installing from source -- i'm trying to vendor it…
[23:08] shaver: micheil: email :-(
[23:08] micheil: jpld: yes, I believe so, if I understand you correctly
[23:09] micheil: shaver: email?
[23:09] shaver: I am not really hacking, but rather I am writing a lot of email
[23:09] dilvie has joined the channel
[23:09] jpld: micheil: ahh thanks, i'll give the author a holler
[23:09] micheil: shaver: yeah, I'd expect that. I'm busy learning and writing C/C++ code for src/node.cc
[23:10] micheil: ryah: could you explain the semantics of --debug and --debug-brk? The code is not at all clear.
[23:11] c4milo has joined the channel
[23:14] dandean has joined the channel
[23:16] bradleymeck has joined the channel
[23:16] dandean: are CommonJS module names required to follow the camelCase format? as such, are dashes and underscores not allowed?
[23:16] steadicat has joined the channel
[23:16] bradleymeck: real ones are, node is more lenient
[23:16] xdamman_ has joined the channel
[23:17] dandean: bradleymeck: but if a CommonJS implementation follows the spec to a T, they'll go with camelCase?
[23:17] bradleymeck: yes
[23:18] dandean: damn. camel case file names drive me crazy.
[23:18] dandean: thanks bradleymeck
[23:20] ryah: micheil: --debug just turns on the daemon, --debug-brk stops the script 
[23:20] ryah: and turns on the daemon
[23:21] micheil: okay.
[23:21] Tim_Smart has joined the channel
[23:23] nerdEd has joined the channel
[23:24] micheil: ryah: almost finished the getopt_long patch
[23:24] micheil: ryah: is there any reason why PrintHelp() doesn't exit(0); ?
[23:25] prettyrobots has joined the channel
[23:25] c4milo1 has joined the channel
[23:26] ryah: *shrug*
[23:26] c4milo2 has joined the channel
[23:26] dilvie has joined the channel
[23:26] muk_mb has joined the channel
[23:27] twoism has joined the channel
[23:28] micheil: ryah: k. I'm going to place it into there to remove heaps of duplication.
[23:32] micheil: ryah: just have an issue with a char** to char* conversion
[23:34] twoism has left the channel
[23:34] twoism has joined the channel
[23:40] pngll has joined the channel
[23:40] cloudhead has joined the channel
[23:41] derferman has joined the channel
[23:51] svnlto has joined the channel
[23:51] Tim_Smart: ryah: Been thinking about gtk signals, and the best way to bind to them... Either a) Create a handler for each callback type, and do some sort of mapping. Or b) do some type of introspection.
[23:51] Tim_Smart: ryah: Got any thoughts?
[23:52] ryah: Tim_Smart: no
[23:53] ceej_ has joined the channel
[23:53] Pilate has joined the channel
[23:54] Tim_Smart: Damn it. :p
[23:56] micheil: ryah: so far I've got everything working, but I can't get -- working
[23:57] davidascher has joined the channel
[23:57] JimBastard_ has joined the channel
[23:58] jakehow has joined the channel
