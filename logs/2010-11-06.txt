[00:02] ngw has joined the channel
[00:04] eee_c has joined the channel
[00:05] marek1 has joined the channel
[00:09] jfd1 has joined the channel
[00:14] rikarends: alright without optimizing just compiler flags and small png fix we are now in the 2x ballpark
[00:15] jamund has joined the channel
[00:17] mjr_ has joined the channel
[00:19] cheesebread has left the channel
[00:22] ircretary has joined the channel
[00:23] s33n has joined the channel
[00:25] kami__ has joined the channel
[00:28] _mayo has joined the channel
[00:29] ircretary has joined the channel
[00:30] banjiewen_ has joined the channel
[00:36] rcy has joined the channel
[00:39] jchris has joined the channel
[00:47] devinus- has joined the channel
[00:47] twoism has joined the channel
[00:50] shadow_walker has joined the channel
[00:52] saschagehlich has joined the channel
[00:53] softdrink has joined the channel
[00:54] jamund has joined the channel
[00:56] Zeph\k0d3: today feels productive :-)
[00:56] rikarends: the test list looks pretty nice
[01:01] deepthawtz has joined the channel
[01:03] benburkert has joined the channel
[01:05] bradleymeck has joined the channel
[01:07] yeevgen has joined the channel
[01:07] JimBastard has joined the channel
[01:11] dguttman_ has joined the channel
[01:14] mape: rikarends: 2x compared to?
[01:18] benburkert has joined the channel
[01:19] MikhX has joined the channel
[01:23] mjr_ has joined the channel
[01:25] davidascher has joined the channel
[01:26] benburkert has joined the channel
[01:28] pkrumins has joined the channel
[01:28] pkrumins has joined the channel
[01:31] CIA-93: node: 03Ryan Dahl 07writev * ra64586e 10/ lib/net.js : ... (+25 more commits...) - http://bit.ly/c0gpMw
[01:31] CIA-93: node: 03Ryan Dahl 07master * ra3750a9 10/ src/node_io_watcher.cc : Remove unnecessary ref/unref in iowatcher cb - http://bit.ly/94tDlC
[01:32] benburkert has joined the channel
[01:32] benburke_ has joined the channel
[01:34] deepthawtz has joined the channel
[01:34] unomi has joined the channel
[01:35] ajsie has joined the channel
[01:35] ajsie: JimBastard: How is it going?
[01:36] rikarends: mape:  2x compared to node-canvas. 
[01:36] mape: ah, neat
[01:36] JimBastard: working on it
[01:36] rikarends: mape: we havent looked at optimization at all yet so this is going to drastically improve still
[01:36] rikarends: mape: sofar it was just compiler flags
[01:37] rikarends: mape: and in the timings list there are also a lot of api-overhead benchmarks that dont actually do any graphics. I'll update our generic scripting layer next week to generate V8 specific glue so then that difference should be gone too.
[01:38] rikarends: mape: node-o3-canvas is written on O3 which is env-independent so the thing will run in any dynamic language. But that also means it has a bit of overhead in small functioncalling
[01:38] mape: hmm k
[01:38] rikarends: mape: but i can also compile that overhead away so. thats gonna be fun to do.
[01:39] rikarends: mape: cant be slower than the other guy :)
[01:39] mape: hehe
[01:39] rikarends: mape: but that gen will also help with getting our stuff to run in Ruby and Lua and whatever else. so its good anyway
[01:41] ajsie: okay .. ill check back on dec =)
[01:41] ryah_: okay - writev almost working.
[01:42] mape: faster?
[01:43] pquerna: arrrrg
[01:43] pquerna: must merge
[01:43] DTrejo has joined the channel
[01:43] DTrejo: hello
[01:43] ryah_: mape: haven't tested yet
[01:43] mape: k
[01:43] necrodearia has joined the channel
[01:43] ryah_: it's still crashing but - it's almost there
[01:44] DTrejo: JimBastard: (finally adding sessions to my app with your session.js)
[01:44] ryah_: got to change a few singlely linked list to double linked lists as i forgot i had to remove thing sometimes
[01:44] ryah_: etc
[01:45] robmason has joined the channel
[01:46] ryah_: https://github.com/ry/node/blob/a64586ecae58a592cced7117396caa0f16b1c00e/src/node_io_watcher.cc#L190-488
[01:48] twoism has joined the channel
[01:50] softdrink: aside from Jasmine, what are the cool kids using these days to unit test *client side*?
[01:50] jamund has joined the channel
[01:50] node has joined the channel
[01:51] rikarends: endless supplies of slaves
[01:51] orangered has left the channel
[01:52] technoweenie: softdrink: twitter, ha
[01:53] necrodearia has joined the channel
[01:53] tanepiper: soo tempted to implement this in nodejs with the new canvas stuff from tj http://imrannazar.com/GameBoy-Emulation-in-JavaScript
[01:53] technoweenie: fuck, thats an old school gameboy emulator?
[01:54] technoweenie: my son bought the first gb mario game and has nothing to play it on
[01:59] necrodearia has joined the channel
[01:59] boaz has joined the channel
[01:59] necrodearia has joined the channel
[02:01] rauchg__ has joined the channel
[02:07] dohtem has joined the channel
[02:07] dohtem has joined the channel
[02:09] necrodearia has joined the channel
[02:13] wasabist has joined the channel
[02:15] mjr_ has joined the channel
[02:19] robotarmy has joined the channel
[02:24] matt_c has joined the channel
[02:25] necrodearia has joined the channel
[02:26] necrodearia has joined the channel
[02:29] kriszyp_ has joined the channel
[02:32] charlenopires has joined the channel
[02:37] mattly has joined the channel
[02:42] necrodearia has joined the channel
[02:42] lupomontero has joined the channel
[02:42] tanepiper: yay, got me nodejs on me free aws instance \o/
[02:46] mikeal has joined the channel
[02:46] SubStack: tanepiper: \o/
[02:46] SubStack: I need to find somebody with a phone so I can get one
[02:46] necrodearia has joined the channel
[02:47] tanepiper: took bloody ages to compile node though
[02:47] tanepiper: it is only a micro instance though
[02:47] tanepiper: but heh, it's free
[02:47] SubStack: it takes ages to compile node on my laptop :/
[02:48] noahcampbell has joined the channel
[02:52] twoism has joined the channel
[02:53] MikhX has joined the channel
[02:53] creationix1 has joined the channel
[02:54] DTrejo has joined the channel
[02:56] blaines has joined the channel
[02:56] necrodearia has joined the channel
[02:57] devinus_ has joined the channel
[02:58] necrodearia has joined the channel
[03:02] guitt has left the channel
[03:05] twoism has joined the channel
[03:06] bradleymeck has joined the channel
[03:07] langworthy has joined the channel
[03:10] tmpvar: node 0.3.1-pre when attempting to spawn a new process throws a "execvp(): No such directory" (Ubuntu 10.10) -- any ideas?
[03:11] Aria: SHELL set funny or something?
[03:13] indexzero has joined the channel
[03:13] tmpvar: Aria, not sure.. you know how to test that?
[03:14] Aria: Not offhand -- I've not looked at the source to know just how spawn works at all, in fact.
[03:14] Aria: Just a wild-ass guess.
[03:14] tmpvar: word
[03:14] mjr_: also could be PATH is messed up
[03:14] Aria: Wait, "no such directory", not "no such file or directory"?
[03:14] mjr_: or perhaps something with the recent env change.
[03:14] tmpvar: file or dir, sorry
[03:14] Aria: Yeah, I'd guess env changes might be related.
[03:14] Aria: Oh, okay.
[03:15] tmpvar: path may be messed up
[03:15] Aria: try stracing it.
[03:15] jamund has joined the channel
[03:15] Aria: It should show the call that fails; that would be very illustrative.
[03:17] Gruni has joined the channel
[03:18] creationix has joined the channel
[03:19] necrodearia has joined the channel
[03:20] mAritz: can someone tell me what the "buffered" part exactly means in jade's code part? (e.g. "= somevar" opposed to "#{somevar}")
[03:22] dgathright has joined the channel
[03:22] tanepiper: well for example, you can do - console.log(somevar) and it will output to the console
[03:23] mAritz: and = console.log(somevar) would do what?
[03:28] mAritz: okay, that just silently fails :D
[03:28] tmpvar: does this make sense to anyone? looks like vfork failed? https://gist.github.com/665168
[03:31] jchris has joined the channel
[03:33] deepthawtz has joined the channel
[03:35] rauchg_: mAritz: = escapes and appends 
[03:35] rauchg_: doesn't fail
[03:35] rauchg_: console.log() returns undefined probably 
[03:35] rauchg_: jade makes it ''
[03:37] mAritz: doesn't render for me
[03:38] Aria: Definitely not shell, tmpvar. It's direct execvp. 
[03:39] benburkert has joined the channel
[03:46] tapwater_ has joined the channel
[03:58] rauchg_: mAritz: try require('jade').render("a(href:'#')= Math.random()");
[03:59] rauchg_: '<a href="#">0.39175702445209026</a>' for me
[04:00] mAritz: doh... :D
[04:08] pquerna: dammit.
[04:08] pquerna: fixed ssl, regres non
[04:09] Tobsn has joined the channel
[04:11] pquerna: ryah_: callback on write would be very nice
[04:12] papy|away has joined the channel
[04:13] mjr_: pquerna: ryah_ and I talked about this write callback thing like forever ago for throttling reasons.
[04:13] mjr_: It's interesting that it's come up as the solution for all sorts of things.
[04:14] pquerna: yeah
[04:14] pquerna: i've having a problem right now with pipelining responses
[04:14] pquerna: i want to know when its done flushing a big one
[04:14] pquerna: in a chain
[04:14] mjr_: yeah, hard
[04:14] mjr_: pipelining is a really fascinating concept that I don't think I really cared about until I started to use node
[04:18] herbySk has joined the channel
[04:23] __swanson: sanity check time - can anyone spot a problem? trying to remove a div w/ jquery when I get a socket.io message.  No errors, the alert shows the correct textm but the div doesnt go away. https://gist.github.com/665188
[04:24] jesusabdroolah has joined the channel
[04:27] __swanson: doh, wrong channel and be being stupid
[04:27] __swanson: sorry!
[04:28] __swanson: s/be/me -- sigh time for bed -_-
[04:28] ossareh has joined the channel
[04:28] pquerna: http server-side error: EPIPE, Broken pipe
[04:32] janne has joined the channel
[04:33] langworthy has joined the channel
[04:34] ysynopsis has joined the channel
[04:34] themiddleman has joined the channel
[04:34] pquerna: git bisect to the rescue.
[04:36] mAritz: swanson, checked that the div really got selected? (alert(announcement.length), even though using firebug you could just put in a debugger; statement and look at the variable)
[04:36] jesusabdroolah: What are you bisecting?
[04:36] jesusabdroolah: ACTION didn't know about git bisect, actually
[04:37] themiddleman has joined the channel
[04:41] bartt has joined the channel
[04:42] path[l] has joined the channel
[04:43] pedrobelo has joined the channel
[04:48] sudoer has joined the channel
[04:49] donnerjack13589 has joined the channel
[04:51] zentoooo has joined the channel
[04:53] pkrumins has joined the channel
[04:59] podman has joined the channel
[05:01] tmpvar has joined the channel
[05:03] davidascher has joined the channel
[05:03] derferman has joined the channel
[05:04] noahcampbell has joined the channel
[05:22] mattly has joined the channel
[05:25] blaines has joined the channel
[05:27] DTrejo has joined the channel
[05:33] fizx has joined the channel
[05:41] amerine has joined the channel
[05:42] amerine has joined the channel
[05:43] amerine has joined the channel
[05:49] Blink7 has joined the channel
[06:08] devinus has joined the channel
[06:22] langworthy has joined the channel
[06:25] langworthy has joined the channel
[06:38] SubStack: bwahaha this webapp should now be scalable to dozens of servers
[06:39] dquestio2s has joined the channel
[06:40] technoweenie has joined the channel
[06:43] dquestions has joined the channel
[06:47] jesusabdroolah: SubStack: What about hojillions of servers?
[06:48] dquestions has joined the channel
[07:03] mikeal has joined the channel
[07:04] derferman has joined the channel
[07:10] jchris has joined the channel
[07:19] WRA has joined the channel
[07:19] WRA: heyo,  few pattern questions concerning Node.JS
[07:20] WRA: config files in json included as modules? Using JSON to write to module files for persistence?
[07:20] WRA: Basically are those two best practices or should I be looking at something else
[07:22] SubStack: I don't like best practices
[07:23] twoism has joined the channel
[07:23] WRA: I'm only asking because when working on my application these are the solutions I came up with. There are other solutions ofc, but none of them seem as elegant.
[07:24] SubStack: there's stuff on npm for persistence
[07:24] SubStack: the benefit of those is that they've been tested, some more than others
[07:24] WRA: new to node.js, so nodepm?
[07:24] SubStack: http://npmjs.org/ 
[07:25] SubStack: also http://npm.mape.me/ 
[07:26] SubStack: for quick persistence there's dirty, nstore, supermarket
[07:27] aurynn has joined the channel
[07:27] WRA: Thanks, took a quick look.
[07:28] bpot has joined the channel
[07:29] WRA: I think once I need to expand my persistence implementation I'll just move to MySQL
[07:33] tekky has joined the channel
[07:33] WRA: basically writing a generic distributed game shard framework. (Game Servers -> Network Servers -> Clients) , where there can be many game servers and network servers
[07:36] dquestions has joined the channel
[07:39] pkrumins: beh mysql.
[07:41] devinus_ has joined the channel
[07:46] Twelve-60 has joined the channel
[07:49] jchris has joined the channel
[07:51] SubStack: couch!
[07:52] SubStack: I should learn me some couchdb
[07:52] SubStack: couch hq is only 2 miles from my place
[07:53] derferman has left the channel
[07:57] zomgbie has joined the channel
[07:58] agnat has joined the channel
[08:05] unomi: Error: Array.prototype.toString is not generic failed to load jar:http://github.com/kriszyp/promised-io/zipball/v0.2.1!/lib/process.js anyone seen this?
[08:10] dquestions has joined the channel
[08:12] altamic has joined the channel
[08:14] SamuraiJack has joined the channel
[08:15] Max-Might has joined the channel
[08:16] mikeal has joined the channel
[08:19] femtoo has joined the channel
[08:26] slaskis has joined the channel
[08:26] beppu: Has a clear winner emerged as far as which CouchDB client for node.js is the best?
[08:27] pkrumins: incidentally it's 2 miles from my place too
[08:28] pkrumins: hey SubStack where do you live?
[08:29] adambeynon has joined the channel
[08:34] chapel: beppu: I found just using http.client was easiest
[08:34] chapel: I mean really its all http based
[08:34] olivvv_ has joined the channel
[08:35] olivvv_: hi. I just got ubuntu installed on my virtualbx. Whats a typical folder to put node in ?
[08:35] jesusabdroolah: What do you mean?
[08:36] jesusabdroolah: When I install node, I've done it system-wide
[08:36] olivvv_: well i m not use to the filesystem
[08:36] jesusabdroolah: ah
[08:36] olivvv_: bin etc
[08:36] jesusabdroolah: Maybe ~/node ?
[08:36] olivvv_: just on the root then ?
[08:36] jesusabdroolah: well
[08:36] stagas: olivvv_: clone in /usr/local/src
[08:37] jesusabdroolah: Just download it to home, right? And then ./configure && make && make install and it'll do its thing right?
[08:37] jesusabdroolah: (right?)
[08:39] beppu: chapel: hmm...  so the existing client libraries didn't really add value for you?
[08:40] olivvv_: strange copy and paste doesn't work
[08:41] beppu: jesusabdroolah: You should be fine.  node installs into /usr/local when you do it that way.  
[08:42] beppu: jesusabdroolah: Make sure /usr/local/bin is in your PATH.
[08:42] jesusabdroolah: That's what I thought
[08:43] jesusabdroolah: always worked for me
[08:44] chapel: beppu: not really, I mean they can be simpler in some ways, but its not that hard to just do it low level
[08:44] olivvv_: okay, I got it in home/olivvv/node so now how do I start the command line ?
[08:45] jesusabdroolah: olivvv_: You haven't installed it before?
[08:45] jesusabdroolah: olivvv_: Did you try the readme? the install doc? etc?
[08:45] olivvv_: I have just downloaded it
[08:45] jesusabdroolah: then read those.
[08:46] jesusabdroolah: They are in the tgz, which you have to unzip.
[08:46] jesusabdroolah: (Or, if you used git clone, in /home/olivvv/node/
[08:46] olivvv_: I promise, I read a lot, this is my third attempt to get it running on windoes, after cygwin and then binaries... but I ll get back to the docs
[08:46] jesusabdroolah: )
[08:46] olivvv_: its just that i m using ubuntu for the first time
[08:47] jesusabdroolah: It's the same as in windows/cygwin
[08:47] jesusabdroolah: In fact, probably easier
[08:47] aldosarmiento has joined the channel
[08:47] pkrumins: damn cygwin
[08:47] stagas: olivvv_: cd node, ./configure && make install
[08:47] jesusabdroolah: In the command line, run
[08:47] jesusabdroolah: ./config && make && make install
[08:47] jesusabdroolah: er
[08:47] jesusabdroolah: ./configure && make && make install
[08:48] olivvv_: yep but how do i start the command line ?
[08:48] Druid_ has joined the channel
[08:48] jesusabdroolah: node
[08:49] jesusabdroolah: just type "node"
[08:49] jesusabdroolah: if you've installed it like we just said up there
[08:49] stagas: olivvv_: there's a Terminal in the menus
[08:49] olivvv_: I think I found it, its terminal right ?
[08:49] jesusabdroolah: Yeah
[08:49] olivvv_: cd node
[08:49] olivvv_: wrong window
[08:50] pkrumins: fuck cygwin and windows
[08:50] tmpvar: yep
[08:50] jesusabdroolah: Agreement
[08:51] tmpvar: ./out
[08:51] olivvv_: http://gyazo.com/dbdafae913be8834f45ec78f4c724b15.png
[08:52] olivvv_: error: could not configure a cxx compiler!
[08:53] hoodoos has joined the channel
[08:53] stagas: olivvv_: sudo apt-get install g++ git-core libssl-dev curl apache2-utils
[08:54] stagas: olivvv_: and then try ./configure again
[08:54] jesusabdroolah: apache2-utils? Really?
[08:54] jesusabdroolah: Man I don't remember having to install THAT
[08:55] stagas: it doesn't hurt
[08:55] beppu: stagas: I like doing: sudo apt-get install build-essential
[08:55] beppu: in addition to the other things you pulled in.
[08:55] olivvv_: http://gyazo.com/952ee511f1e0eaae8987b70bb8cb89b3.png
[08:56] olivvv_: I guess it didn't work
[08:56] olivvv_: should i remove -dev ?
[08:56] jimt has joined the channel
[08:56] stagas: olivvv_: there's a space in libssl -dev it should be libssl-dev
[08:56] qFox has joined the channel
[08:56] jacoblyles has joined the channel
[08:59] okuryu has joined the channel
[09:01] Wyverald has joined the channel
[09:01] ph^ has joined the channel
[09:01] faust45 has joined the channel
[09:07] nsolsen has joined the channel
[09:16] unomi: so, did stuff break when github switched over to https?
[09:17] sveimac has joined the channel
[09:19] sveimac has joined the channel
[09:23] olivvv_: stagas, jesusabdroolah:http://gyazo.com/524e310ef2860d703a4543cdb5291a56.png
[09:23] stagas: olivvv_: sudo make install
[09:24] unomi: stagas: you need to do sudo make install then
[09:24] unomi: alternatively use nvm
[09:24] unomi: https://github.com/creationix/nvm
[09:26] hoodoos has joined the channel
[09:26] hoodoos: hello, guys. please tell me that tdd is awesome
[09:33] jesusabdroolah: tdd is pretty rad
[09:33] jesusabdroolah: Why?
[09:33] q_no has joined the channel
[09:33] jesusabdroolah: olivvv_: Either sudo make install, or when you configure use --prefix='/home/olivvv/wherever/you/want/to/store/node'
[09:34] jesusabdroolah: If it's your computer, sudo make install's easiest
[09:34] jesusabdroolah: if you don't have root priveleges, then try
[09:34] jesusabdroolah: ./configure --prefix='/home/olivvv/node/'
[09:34] olivvv_: yes i did the sudo
[09:34] jesusabdroolah: Awesome
[09:34] jesusabdroolah: That's easiest
[09:34] jesusabdroolah: ^5
[09:34] olivvv_: now i guess i can test the hello world example
[09:34] jesusabdroolah: now just type "node"
[09:34] unomi: nvm is pretty rad, it lets you change between different node versions etc
[09:35] olivvv_: but i do not find it anymore
[09:35] olivvv_: anyway
[09:35] olivvv_: thanks a lot for your help
[09:35] olivvv_: i m pretty close now apparently
[09:35] olivvv_: but i ll have some linux sytax to lern ...
[09:35] beppu: olivvv_: It's probably sitting in /usr/local/bin.
[09:36] beppu: PATH=/usr/local/bin:$PATH
[09:36] beppu: ^type that, and then type:  node
[09:36] unomi: the hello world example or node itself?
[09:36] hoodoos: jesusabdroolah, rad?
[09:37] unomi: rapid application development :p
[09:37] hoodoos: ah!
[09:37] olivvv_: unomi: yep they was an example.js when it tried on windows, but now i dont find that in the node folder
[09:38] hoodoos: i guess it's just neccessary when you write something big on script language like js or python or php..
[09:38] hoodoos: since you can't even compile to see if there's any typos..
[09:39] unomi: can node currently open https ?
[09:39] hoodoos: listen for one?
[09:39] unomi: no, open remote connections, ala wget
[09:39] unomi: *curl
[09:39] hoodoos: ehh, as far as I remember it always could
[09:39] hoodoos: http.client can do it
[09:40] unomi: alright, just wondering
[09:40] masm has joined the channel
[09:42] d0k has joined the channel
[09:42] jfd1 has joined the channel
[09:44] jesusabdroolah: rapid appli---what?!
[09:44] jesusabdroolah: No
[09:44] olivvv_: mmh tests are failing : http://gyazo.com/cefe5627ede07609095ff1f7cd75814a.png
[09:44] jesusabdroolah: rad/sweet
[09:45] jesusabdroolah: Looks like blogoblag problems to me, olivvv
[09:45] olivvv_: blogoblag ?
[09:46] jesusabdroolah: internets
[09:46] jesusabdroolah: ?
[09:46] olivvv_: but ff is working
[09:47] jesusabdroolah: Man why don't people from other countries know my slang? >:O
[09:47] peutetre has joined the channel
[09:47] jesusabdroolah: Where's hoodoos from?
[09:49] firede has joined the channel
[09:49] jesusabdroolah: Anyways: Bedtime for me
[09:49] jesusabdroolah: No longer have the energy to breach the cross-cultural divide ;)
[09:49] jesusabdroolah: Good luck olivvv_ 
[09:49] olivvv_: thx
[09:50] olivvv_: I keep trying
[09:50] jesusabdroolah: and hoodoos, I meant to say, I like test-driven development, though I'm never really too stringent when it comes to coverage, etc.
[09:52] hoodoos: jesusabdroolah,  from russia)
[09:52] hoodoos: jesusabdroolah, but it's critical to cover everything, no?
[09:52] slaskis has joined the channel
[09:53] hoodoos: if you write a small lib it's not for sure, but if it involves some business logics, it's critical
[09:53] derferman has joined the channel
[09:53] jesusabdroolah: hoodoos: Sure--I just meant that it's not so much fun that it stops me from being sloppy ;)
[09:54] hoodoos: heh,  i never done any unit testing in my life, for my shame..
[09:54] hoodoos: and now it's sooo hard to begin :)
[09:55] seele0x has joined the channel
[09:55] hoodoos: i always begin to think that way: i'll create a product which will bring me some money, then hire some young hot blooded programmers and they will cover it all :)
[09:56] seele0x: good for you
[09:56] jesusabdroolah: It's really nice if you know exactly how you want it to behave a'priori
[09:56] hoodoos: it's wrong, I need to do it myself, would be great to have a TDD guru sitting next to me for a couple of days to hit me in the face when I'm doing something wrong
[09:56] jesusabdroolah: So you write the test that outlines your api
[09:56] jesusabdroolah: and then you program everything to work, y'know?
[09:57] jesusabdroolah: Doesn't always fit, but when it does it's nice
[09:57] jesusabdroolah: Right, I was going to bed
[09:57] hoodoos: yep, now if I need to rename some variable I never know when it fails and i'm already have lots of code written, so guys! never ever program without testing! :)
[09:58] slaskis: programming without testing builds excitement for when the testing comes
[10:01] rcy has joined the channel
[10:01] beppu: (i just tried nvm for the first time -- consider me impressed.)
[10:06] Blink7 has joined the channel
[10:07] Blink7_ has joined the channel
[10:16] SamuraiJack_ has joined the channel
[10:24] unomi: well, its not so much a question of not knowing what to do, its more a case of instant gratification
[10:24] unomi: TDD is hard, because it forces you to figure out what you actually want it to do before you write it
[10:25] jouz has joined the channel
[10:30] Anti-X: BDD is not so hard because it lets you be lenient about how you actually implement specific things
[10:30] Anti-X: BDD only cares about the end result
[10:31] Anti-X: unit tests are very specific to each and every function
[10:31] Anti-X: which is bollox!
[10:31] Anti-X: :p
[10:31] saschagehlich has joined the channel
[10:32] Moominpapa: Cucumber's actually a very smart little tool.
[10:33] Moominpapa: You write in English what you want it to do.
[10:33] Moominpapa: Then worry about what that looks like in code.
[10:33] Moominpapa: Most unit tests specify exactly how you want a component to behave, which is great for tiny details, but lousy for large-scale design.
[10:36] Moominpapa: Kyuri https://github.com/nodejitsu/kyuri is pretty clever, but it misses the point of cucumber: the English specs stay live.  Maybe in version 2...
[10:37] jouz: little socket.io problem: i want to initialize socket.io with this line: "var socket = new io.Socket([url]);" and while it works in chrome, it fails in IE because "io is undefined". Can someone help?
[10:38] Anti-X: well do you have script tags in the head and in the right order?
[10:38] Anti-X: async loading script tags (which IE supports) doesn't go along with external libraries
[10:38] jouz: I guess so, since it works in chrome?
[10:39] Moominpapa: tried putting it in $()?
[10:40] jouz: http://pastie.org/1276813 looks like this (sorry its unformatted)
[10:40] Moominpapa: Looking at mine, it looks like as long as the js is at the top, you should be fine.
[10:40] aubergine has joined the channel
[10:41] liar has joined the channel
[10:41] Anti-X: jouz, you may wanna specify port too
[10:41] Anti-X: if it's different from the main document
[10:41] Anti-X: but that's not the problem
[10:42] Anti-X: just a comment
[10:42] jouz: yeah i cropped out the url, ports are specified
[10:42] hoodoos: guys, what was that Facebook solution for cenralized log analysis?
[10:42] Moominpapa: Stupid question: you checked you can actually load the socket.io.js file from IE?
[10:42] hoodoos: forgot and can't remember :)
[10:43] stephank has joined the channel
[10:43] hoodoos: or any other good solution for that
[10:43] mraleph has joined the channel
[10:43] Anti-X: google analytics?
[10:43] hoodoos: application logs :)
[10:43] Anti-X: oh
[10:43] Anti-X: no friggin clue
[10:43] Anti-X: write your own
[10:43] Anti-X: :p
[10:44] hoodoos: i wouldn't want to do it
[10:45] jouz: Moominpapa: yes, pasted the exact src="" to address bar and it loaded the .js
[10:45] Moominpapa: Weird.  I'm looking at /very similar/ code here and it works.  Let me look at your file again.
[10:46] hoodoos: Anti-X, it was a Scribe :)
[10:46] Anti-X: never heard of it
[10:46] Moominpapa: lol
[10:46] Moominpapa: https://github.com/facebook/scribe
[10:46] hoodoos: yep :)
[10:47] Anti-X: oh, it was the "large number of servers" part that means i've never heard of it, or needed it
[10:48] jetienne has joined the channel
[10:53] jouz: Moominpapa: Okay i got it to work by removing the type="application/javascript" attribute... i don't know if this makes sense... never thought it could harm oO
[10:53] dquestions has joined the channel
[10:57] olivvv_: whooooooo I finally have my Hello World !!!!
[10:57] olivvv_: so much emotions
[10:57] Moominpapa: LOL
[10:58] Moominpapa: Just got there myself :)
[10:58] Moominpapa: I think the type='application/javascript' must create a different scope in IE.
[10:58] Moominpapa: But not in Chrome.
[10:58] Moominpapa: gz olivvv
[10:58] Moominpapa: I know the feeling :$
[10:59] MattJ has joined the channel
[10:59] fangel has joined the channel
[11:00] olivvv_: gz ?
[11:01] olivvv_: okay, anyway, gonna cook some meat to celebrate this
[11:01] rikarends has joined the channel
[11:01] aho: that's probably garbled net speak for "congratulations" :>
[11:02] sideshowcoder has joined the channel
[11:02] faust45 has joined the channel
[11:03] Blink7 has joined the channel
[11:05] xla has joined the channel
[11:06] shirro has joined the channel
[11:08] cloudhead has joined the channel
[11:10] q_no has joined the channel
[11:13] romainhuet has joined the channel
[11:18] guitt has joined the channel
[11:26] mytrile has joined the channel
[11:28] jacobolus has joined the channel
[11:30] zorzar_ has joined the channel
[11:31] pkrumins has left the channel
[11:33] mr_daniel has joined the channel
[11:40] q_no has joined the channel
[11:40] jerome_ has joined the channel
[11:45] shirro has joined the channel
[11:46] altamic has joined the channel
[11:56] liar has joined the channel
[11:57] markwubben has joined the channel
[11:57] markwubben has joined the channel
[12:02] olivvv_: so now I m trying the node_chat. I downloaded it from github, and did : node node_chat/server.js
[12:03] olivvv_: but when I triy to load it
[12:03] olivvv_: it is not reachable
[12:03] olivvv_: and in the console
[12:03] olivvv_: loading index.html... Error loading index.html
[12:05] rikarends has joined the channel
[12:07] ang: did you leave the index.html file in the node_chat directory?
[12:09] olivvv_: ang: yep it is there
[12:09] Athox has joined the channel
[12:15] olivvv_: http://gyazo.com/f68c8fe15cc478ed7383580b23f960bc.png
[12:15] jerome_: olivvv_: try cd node_chat
[12:15] jerome_: olivvv_: then do server
[12:16] johan_bouveng has joined the channel
[12:17] johan_bouveng: hello folks.
[12:17] johan_bouveng: markwubben: :))
[12:17] olivvv_: jerome_:thx!
[12:19] johan_bouveng: im a new adopter on node.js, love it! however, have a few questions before i start building an app.
[12:19] johan_bouveng: many people use an httpd in front of it, why?
[12:19] johan_bouveng: what db is nice to use with it? mongodb?
[12:20] ang: jerome_: whoops .... good call, didn't catch that
[12:21] stride: johan_bouveng: because it can be unstable at times and little to no security related testing has been done yet
[12:21] johan_bouveng: ah okay?
[12:22] jerome_: stride: which kind of security are you thinking qbout 
[12:22] johan_bouveng: i just used iptables to reroute req's on 80 to my node port. :>
[12:22] stride: johan_bouveng: as to the db, if you want a nosql, the couch and mongo modules seem to be pretty popular around here
[12:22] johan_bouveng: i have looked a bit on express.js
[12:22] johan_bouveng: but i cant get my head around if it has mongosupport or not
[12:23] jerome_: http://howtonode.org/express-mongodb
[12:23] jerome_: johan_bouveng: this link may be of interest
[12:23] jerome_: a bit old tho
[12:24] johan_bouveng: i saw it..
[12:26] stride: jerome_: I haven't seen any security related looks on node yet. so.. everything from buffer overflows to DoS stuff like slowloris or whatnot
[12:26] stride: jerome_: although my main reason to this argument is, ryah_ said so in one of his older talks.. :)
[12:27] jerome_: :)
[12:32] sveimac has joined the channel
[12:37] dquestions has joined the channel
[12:39] sveisvei has joined the channel
[12:39] herbySk has joined the channel
[12:46] sonnym has joined the channel
[12:46] dquestions has joined the channel
[12:48] kriszyp has joined the channel
[12:50] aliem has joined the channel
[12:53] ysynopsis has joined the channel
[12:53] Ori_P has joined the channel
[12:58] shadow_walker has joined the channel
[13:16] dquestio1s has joined the channel
[13:20] alcuadrado has joined the channel
[13:22] beawesomeinstead has joined the channel
[13:23] Gehhilfe has joined the channel
[13:24] Utkarsh has joined the channel
[13:28] Imperion has joined the channel
[13:28] mape: Anyone had issues with node-redis corrupting data saved?
[13:29] Imperion: why am I getting this error? "Error: Cannot find module 'util'"
[13:29] Imperion: isn't the util module standard?
[13:29] mape: Imperion: Running node 2.* with a module that uses node 3.* ?
[13:30] janne has joined the channel
[13:31] Imperion: and there it is
[13:31] Imperion: I'm using a really old version of node
[13:32] Imperion: just remembered that it isn't in Arch's main repos
[13:32] Imperion: so it didn't get updated
[13:32] Imperion: :S
[13:32] nsolsen has joined the channel
[13:34] Anti-X has joined the channel
[13:34] [[zz]] has joined the channel
[13:40] ooooPsss has joined the channel
[13:42] necrodearia has joined the channel
[13:46] boaz has joined the channel
[13:59] stride: "On Linux, under Mono: C:\> mono node.exe server.js" srsly.. wtf..?
[13:59] stride: http://newcome.wordpress.com/2010/05/08/node-net-node-js-implemented-in-javascript-on-the-net-runtime/
[14:01] mape: :S
[14:01] mape: Seems node-redis breaks if the data contains ���
[14:19] oal has joined the channel
[14:21] kixxauth has joined the channel
[14:23] InsDel has joined the channel
[14:25] Nohryb has joined the channel
[14:26] shripadk has joined the channel
[14:29] Aria has joined the channel
[14:32] rnewson has joined the channel
[14:34] c4milo has joined the channel
[14:36] jrockjiggz has joined the channel
[14:38] ruxkor: mape: wtf i absolutely have to check this! writing a message parser with a redis backend, and will be used predominantly with german customers!
[14:39] mape: ruxkor: Then yeah :)
[14:39] cnu has joined the channel
[14:39] mape: ruxkor: https://github.com/bnoguchi/redis-node/issues#issue/5
[14:39] mape: There you'll find a gist on how to reproduce it
[14:40] ruxkor: thx!
[14:43] mape: ruxkor: Please let me know if you find you have the same issues
[14:44] ruxkor: mape I will try it in the next days, going out in a few minutes (its 11pm here), but I will comment on the issue!
[14:45] mape: Great
[14:46] StM has joined the channel
[14:51] shockie has joined the channel
[14:52] V1 has joined the channel
[14:55] Ori_P_ has joined the channel
[14:56] prettyrobots has joined the channel
[14:59] markwubben has joined the channel
[14:59] markwubben1 has joined the channel
[14:59] Gruni has joined the channel
[15:04] faust45 has joined the channel
[15:05] shadow_w_ has joined the channel
[15:06] Imperion has left the channel
[15:07] vircuser has joined the channel
[15:08] V1 has left the channel
[15:09] glass8: Hello, ... I have a question about express sessions ... I'm using connect-mongo for storing sessions in mongo - question is, when do the sessions ever get cleared?
[15:10] Nohryb has joined the channel
[15:16] glass8: ok .. i looked around a bit .. seems like the sessions will live forever unless I customize connect-mongo
[15:17] boaz has joined the channel
[15:17] prettyrobots has joined the channel
[15:28] prettyrobots has joined the channel
[15:30] creationix has joined the channel
[15:31] muk_mb has joined the channel
[15:33] javruben has joined the channel
[15:37] sivy has joined the channel
[15:40] Gehhilfe has left the channel
[15:43] programble has joined the channel
[15:43] programble has joined the channel
[15:43] olivvv_ has joined the channel
[15:44] slaskis: mape: shouldn't JSON.stringify convert åäö and other non-ascii to unicode?
[15:44] mape: slaskis: Not sure, but doesn't seem to
[15:45] mape: Not in v8 or firefox
[15:45] slaskis: hmm, apparently not, as any unicode char is valid in json
[15:46] bnoordhuis has joined the channel
[15:48] aconbere has joined the channel
[15:50] Nohryb has joined the channel
[15:53] podman has joined the channel
[15:55] podman has left the channel
[15:56] jetienne has joined the channel
[16:02] Zeph\k0d3: o3-canvas-nodejs - from http://www.blokmodular.com/dev/test10.htm to http://www.blokmodular.com/dev/test18.htm in a day! :-)
[16:02] rikarends: awesome :)
[16:03] mape: The css? :P
[16:03] rikarends: that too :)
[16:03] Zeph\k0d3: had to add the css to check if transparency was handled correctly
[16:03] Zeph\k0d3: transparent pngs generated
[16:03] mape: Perhaps add a client side representation like tj did?
[16:03] Zeph\k0d3: http://www.blokmodular.com/dev/graphics-tests-in-browser.html  like this one?
[16:03] mape: jup
[16:04] mape: only side by side
[16:04] mbrochh has joined the channel
[16:04] mbrochh has joined the channel
[16:04] Zeph\k0d3: maybe eventually, this is nicely fast to work with
[16:04] rikarends: looks like some text features and gradients still to go
[16:04] Zeph\k0d3: yep... 
[16:04] Zeph\k0d3: text-property parsing is the bulk of it
[16:05] Zeph\k0d3: the properties are supported, just not the css-font decoding
[16:05] Zeph\k0d3: alignment is up next after the gradients work
[16:05] overra_ has joined the channel
[16:05] Zeph\k0d3: I'll add a bunch of extra tests as well.. a lot of edge-case behaviour is unspecified by the canvas-draft
[16:06] Zeph\k0d3: I just found out even opera fails 1 of these tests
[16:06] rikarends: oh no the hero of browsers :)
[16:06] dnolen has joined the channel
[16:06] overra_ has joined the channel
[16:06] Zeph\k0d3: in terms of correctness.. yes.. the advanced features of the canvas spec are handled better by opera than by chrome
[16:06] mape: Zeph\k0d3: Btw the side by side thing, if you are going to do that you could just overlay the image generated ontop of the canvas and set it to opacity: 0.5; should be easy to see things that differ then, and takes less space
[16:07] Zeph\k0d3: mape: that could be handy, but then it becomes guessing which engine is doing it right ;)
[16:07] Zeph\k0d3: I'll add some handy debugging stuff later.. 
[16:08] mape: When i do that for mockup up sites from PSDs I just add a border to the image, so then I know if the border shows it is the image and else it is the client
[16:09] Zeph\k0d3: for now the differences are so blindingly obvious that this view is enough
[16:10] Zeph\k0d3: some web-nerd can write nice js/css for it afterwards
[16:10] rikarends: dont insult me :)
[16:10] Zeph\k0d3: oh.. are you going to do it?
[16:10] rikarends: nah :)
[16:10] rikarends: i'll get some web-nerd to do it :)
[16:11] Zeph\k0d3: ;)
[16:12] felixge has joined the channel
[16:12] felixge has joined the channel
[16:13] jchris has joined the channel
[16:14] felixge: ryah_: in case you're in, did you find out what the overhead of calling into C++ is?
[16:16] felixge: (anybody else who's been looking into this is welcome to comment as well)
[16:16] felixge: :)
[16:18] Zeph\k0d3: I know rikarends wants to know
[16:19] danslo has joined the channel
[16:20] rikarends: not yet, i'll just start with the basic v8 glue :)
[16:20] gerad has joined the channel
[16:21] marktlang has joined the channel
[16:25] johngbrooks has joined the channel
[16:26] StM has joined the channel
[16:28] fangel: cloudhead: in Vows, wouldn't it be an idea to have the msg-function from bin/vows added to the libs/vows.js export, so people can add debug-output to their tests with require('vows').msg(...); ?
[16:31] dquestions has joined the channel
[16:35] creationix has left the channel
[16:36] creationix has joined the channel
[16:36] shadow_walker has joined the channel
[16:37] mattly has joined the channel
[16:37] boaz has joined the channel
[16:39] robmason has joined the channel
[16:40] boaz has joined the channel
[16:43] davidascher has joined the channel
[16:44] mjr_: mape: are you still around?
[16:45] mape: mjr_: yup
[16:45] mjr_: mape: it that my redis lib you had an issue with?
[16:45] mape: mjr_: No I don't belive so
[16:45] mjr_: Oh, OK
[16:45] mjr_: I'm pretty sure mine is unicode/binary safe
[16:45] tmpvar has joined the channel
[16:46] _mythz has joined the channel
[16:46] _mythz has left the channel
[16:47] mbrochh has joined the channel
[16:49] mape: Saw 2 and picked the one that was updated last
[16:49] mape: So I ended up with https://github.com/bnoguchi/redis-node
[16:49] mape: mjr_: yours wasen't listed in the modules wiki page so didn't look at it :(
[16:50] mape: Guess I should
[16:52] mjr_: It's not on the modules page?
[16:52] mjr_: I added it at one point
[16:52] mape: Don't think so
[16:52] evanmeagher has joined the channel
[16:53] mjr_: Mine's got quite a few users at this point.
[16:53] bnoordhuis: felixge: overhead of what precisely?
[16:53] evanmeagher: how do you get npm to not include certain files in a package when you publish a module?
[16:53] mape: redis-node - Comprehensive, high speed Redis client
[16:53] mape: redis-node-client - Redis Client by Fictorial
[16:53] mape: at least those are grouped, so guess I didn't look further
[16:53] mjr_: Bah, somebody edited it away
[16:53] felixge: bnoordhuis: from what I heard calling C++ functions from node.js is slow
[16:53] mape: node_redis - High performance Redis client
[16:53] felixge: bnoordhuis: slower than calling a JS function
[16:53] mjr_: Yeah, they used to be all in a list
[16:53] mape: moved it down a couple slots
[16:53] mape: it is under riak-js
[16:54] gerad: mjr_: which one is yours?
[16:54] felixge: bnoordhuis: I'm not exactly sure where the overhead comes from
[16:54] bnoordhuis: felixge: hmm, i haven't noticed much difference in benchmarks
[16:54] mjr_: gerad: mine is "node_redis".  Its the one you get from "npm install redis"
[16:54] admc has joined the channel
[16:55] gerad: felixge: visnup and I were appreciating transloadit yesterday... looks awesome1
[16:55] mape: mjr_: Ah neat, 4 lines of code to change and then it worked :)
[16:55] gerad: mjr_: awesome.. thanks! :-)
[16:56] felixge: bnoordhuis: I'm trying to profile / improve the speed of node-mysql, and calling Buffer::Utf8Slice() seems to be a bottleneck.
[16:56] felixge: gerad: thanks :)
[16:56] mjr_: If you findi anything that doesn't work right in node_redis, please let me know.
[16:56] bnoordhuis: felixge: could you gist the numbers?
[16:56] liar has joined the channel
[16:56] bnoordhuis: or pastie-ize
[16:56] ossareh has joined the channel
[16:57] felixge: bnoordhuis: This is part of a bigger benchmark at this point, but removing the Utf8Slice call makes it go from 30k rows / sec to 60k rows /sec
[16:57] mape: mjr_: unexpected_eos'
[16:57] felixge: PHP get's 180k rows / sec, I just don't want to accept that I can't get there :)
[16:58] bnoordhuis: felixge: appreciable difference
[16:58] mjr_: mape: have a gist?
[16:58] Benvie1 has joined the channel
[16:58] bnoordhuis: i suppose the handlescope could have some overhead
[16:58] mape: mjr_: Hmm need to figure out what breaks it, my test for the other redis passes with yours.
[16:58] bnoordhuis: but it shouldn't be a 100% markup
[16:59] bnoordhuis: felixge: what happens if you replace Utf8Slice with AsciiSlice?
[16:59] mjr_: felixge: you ought to be able to get pretty close to PHP, but it might take more cleverness or compromises.
[16:59] boaz has joined the channel
[16:59] bnoordhuis: the utf8 decoding might make things slow
[16:59] felixge: bnoordhuis: no difference
[17:00] felixge: bnoordhuis: but that's because AsciiSlice is the exactly same code ;)
[17:00] ryah_: felixge: getters to convert to strings, please - no
[17:00] bnoordhuis: right you are
[17:00] felixge: ryah_: won't happen - it's actually slower to setup the getters than to convert the buffers :(
[17:01] bnoordhuis: felixge: could you run your benchmark through gprof?
[17:01] isaacs has joined the channel
[17:01] ryah_: felixge: you could experiment with using ExternalAsciiStringResource
[17:02] felixge: ryah_: I looked at that, but didn't understand how to use it / if there are any gains to be expected
[17:02] ryah_: felixge: if you go through the repo to when buffers were added, asciiSlice() was using that
[17:02] ryah_: felixge: it doesn't require a copy
[17:02] felixge: bnoordhuis: gprof?
[17:02] ryah_: i wasnt able to see a difference
[17:03] ryah_: but maybe for you it will help
[17:03] bnoordhuis: felixge: gnu profiler
[17:04] bnoordhuis: felixge: you'll need to compile node with -pg
[17:04] felixge: bnoordhuis: any reasons to expect better output from this than Instructions on OSX or v8's profiler?
[17:04] SamuraiJack has joined the channel
[17:04] felixge: both have been producing relatively useless information for me, at least as far as I can tell
[17:04] bnoordhuis: felixge: instructions is a profiler?
[17:05] mape: mjr_: Sorry, just me being dumb with multiple requires over different files, seems to work great now. Thanks :)
[17:05] felixge: bnoordhuis: sorry, * Instruments
[17:05] bnoordhuis: felixge: i repeat the question :)
[17:05] bnoordhuis: google says yes
[17:05] bnoordhuis: okay
[17:06] bnoordhuis: could you post a call graph?
[17:06] felixge: bnoordhuis:http://www.apple.com/macosx/developers/#instruments
[17:06] felixge: bnoordhuis: yes, I can try to get that going
[17:06] shockie_ has joined the channel
[17:07] jakehow has joined the channel
[17:10] felixge: bnoordhuis: gonna need a moment, I need to split my benchmark up again into insert/select for this to produce good output
[17:10] bnoordhuis: felixge: i'm not going anywhere :)
[17:10] boaz has joined the channel
[17:10] creationix has left the channel
[17:10] bnoordhuis: the fact that i'm half disabled from a back sprain has much to do with it
[17:11] davidascher has joined the channel
[17:12] felixge: bnoordhuis: ouch : |
[17:13] bnoordhuis: felixge: fortunately my fridge is well-stocked with beer
[17:14] softdrink has joined the channel
[17:14] ryah_: ACTION thinks about sneeking out of the house to a cafe to finish his writev patch :)
[17:14] ryah_: the gf is still sleeping
[17:15] c4milo has joined the channel
[17:16] ajsharp has joined the channel
[17:16] felixge: ryah_: what writev patch?
[17:17] ajsharp: excuse my ignorance, i'm a total node newb, but is there documentation for the sys module? trying to get an understanding for what the inherits function does
[17:17] captain_morgan has joined the channel
[17:17] ajsharp: i'm having trouble finding documentation for sys in the docs on nodejs.org
[17:17] femike_ has joined the channel
[17:18] femike_: hello
[17:18] Nohryb has joined the channel
[17:19] femike_: ehlo
[17:19] femike_: ping
[17:20] femike_: русскоязычные есть?
[17:20] mape: ?
[17:20] mAritz: ajsharp: well, theoretically sys got renamed to util and that would be the reason for not finding anything in the official docs. however there doesn't seem to be any info on util.inherits either. does that even exist? :D
[17:20] bnoordhuis: felixge: writev = git branch with, well, writev support
[17:21] gerad has joined the channel
[17:21] felixge: bnoordhuis: yeah, what does it do?
[17:21] felixge: :)
[17:21] mraleph: femike_: есть
[17:22] felixge: not familar with writev, man page isn't helpful yet either
[17:22] mAritz: write files
[17:22] mAritz: ACTION runs
[17:22] ajsharp: mAritz: in a library i'm reading through, there are "var inherits = require('sys').inherits" all over the place
[17:22] bnoordhuis: felixge: stack a bunch of writes into a single syscall
[17:22] Kami_: mAritz, yes, inherits it's not documented but it's in the sys / util module and used internally in node
[17:22] felixge: bnoordhuis: ah, nice
[17:22] bnoordhuis: for great performance justice, obviously
[17:22] femike_: mraleph: я так понимаю это международный канал
[17:22] ajsharp: Kami_: thx
[17:22] Kami_: ajsharp, np
[17:22] mraleph: femike_: yep. поэтому основной язык английский
[17:23] ajsharp: Kami_: so, what does it do? I see it being used in global scope a lot https://github.com/christkv/node-mongodb-native/blob/master/lib/mongodb/connection.js#L22
[17:23] femike_: mraleph: а аналогичный по тематике, русскоязычный существует?
[17:24] felixge: bnoordhuis: http://img208.imageshack.us/img208/8858/screenshot20101106at182.png ?
[17:24] eisd has joined the channel
[17:24] felixge: bnoordhuis: is that what you were looking for?
[17:24] felixge: bnoordhuis: or a different view?
[17:25] evanmeagher has joined the channel
[17:25] bnoordhuis: felixge: yes, that's it
[17:25] mraleph: femike_: не знаю, вообще я здесь видел несколько русскоязычных. 
[17:25] felixge: bnoordhuis: yeah, that's the output from my driver selecting 10.000 rows
[17:25] felixge: bnoordhuis: and it's not really telling me much :)
[17:26] bnoordhuis: felixge: it's a bit diluted
[17:26] mraleph: felixge: are you running with debug version of v8?
[17:26] felixge: mraleph: yes
[17:26] felixge: mraleph: well node_g
[17:26] Wyverald1 has joined the channel
[17:26] mraleph: felixge: not nice, will introduce noise
[17:26] felixge: mraleph: I assume that would use the debug version of v8?
[17:27] bnoordhuis: top function is 2.8%, not quite enough to draw meaningful conclusions
[17:27] path[l] has joined the channel
[17:27] felixge: yeah
[17:27] felixge: let me run the regular node
[17:27] Kami_: ajsharp,  it just sets the prototype on your class to the base class prototype and sets the super_ property on your class so you can call the parent class method using .super_ and you don't need to know the name of the parent class and use apply
[17:27] stride: felixge: oh hi, I was looking into adding prepared statement support the other day.. but sadly you were right. it's a bunch of work to handle them..
[17:27] tmpvar has joined the channel
[17:28] mraleph: you just need to insure that symbols are added to binary --- compile with -g flag... 
[17:28] shadow_walker has joined the channel
[17:28] marshall_law_ has joined the channel
[17:29] ajsharp: Kami_: ok, gotcha. so "inherits(Connection, EventEmitter);" means that Connection inherits from EventEmitter, right?
[17:29] bnoordhuis: mraleph: is there a significant overhead to calling C++ functions from JS land?
[17:29] felixge: http://img24.imageshack.us/img24/8858/screenshot20101106at182.png
[17:29] Kami_: ajsharp, yep
[17:29] mraleph: femike_: если есть какой-то вопрос про ноду можно попробовать спросить меня, я правда не уверен что смогу ответить, я сам нодой не пользуюсь. 
[17:29] aconbere has joined the channel
[17:29] bnoordhuis: the only thing i could think of was the handlescope
[17:29] ajsharp: Kami_: awesome. thanks
[17:29] tek has joined the channel
[17:29] Kami_: ajsharp, np. here you can see how it's implemented https://github.com/ry/node/blob/master/lib/util.js#L388
[17:29] felixge: bnoordhuis: this one is rather untelling as well :)
[17:29] felixge: big Invoke thingie
[17:30] bnoordhuis: felixge: wow, 46.5%
[17:30] mraleph: bnoordhuis: there is some overhead yes. we are currently trying to reduce it. 
[17:30] felixge: bnoordhuis: yeah, but it's not helping me locate the problem
[17:30] felixge: bnoordhuis: or what conclusions would you draw from it?
[17:30] bnoordhuis: felixge: that C++ to JS callbacks are expensive
[17:31] mraleph: bnoordhuis: I have a hypothesis about this 46%
[17:31] bnoordhuis: mraleph: my ears, they are all yours
[17:31] felixge: bnoordhuis: well, the only calls from C++ to JS are the buffers being emitted
[17:31] felixge: bnoordhuis: which is only 20.000
[17:32] felixge: bnoordhuis: the script runs 400ms
[17:32] bnoordhuis: felixge: so that would be 20K callbacks?
[17:32] felixge: bnoordhuis: yeah
[17:33] femike_: mraleph: а зачем тогда ты здесь? да у меня масса вопросов о ноде, мне не совсем понятен принцып возможности горячей замены кода, как понимаю при запуске node myscr.js он обрабатывает всю ветку и создает кеш, и вариант подсунуть свое что - то отпадает и
[17:33] felixge: bnoordhuis: I mean only getting 50k calls from C++ / JS per second seems insanely slow
[17:33] mraleph: bnoordhuis: this tool is it a Mac OS X profiler?) when sampling if it can't decode pc walks the stack until it finds something it can decode. this way all time spend in JS code gets accounted as spent in Invoke
[17:33] bnoordhuis: mraleph: yeah, that was what i was thinking
[17:33] bnoordhuis: that 46% is also the CPU time of the JS code itself
[17:34] felixge: mraleph: yes, it's the osx profiler
[17:34] mraleph: v8 profiler should be way better in decoding stacks because it knows about JS frames... felixge you should also make script run longer than 400ms. 
[17:35] felixge: mraleph: ok, I'll repeat the query a bunch of times
[17:35] felixge: mraleph: last time I tried the v8 profiler it wasn't giving me interesting output, maybe that's why - not enough samples
[17:36] mraleph: femike_: я из v8, помогаю людям если у них есть проблемы с ней. к сожалению про myscr.js я ничего не знаю =(
[17:36] mraleph: femike_: а погоди myscr.js это твой собственный код
[17:36] mraleph: ты хочешь его заменять без остановки сервера
[17:37] stephank: alienspeak! :O
[17:37] mraleph: stephank: sorry for that. will move to private.
[17:37] felixge: mraleph: suggestions on how long I should run?
[17:37] bnoordhuis: felixge: is your benchmark available somewhere?
[17:37] felixge: bnoordhuis: yes
[17:37] felixge: bnoordhuis: let me push the latest version
[17:37] femike_: mraleph: да, я думал при require('some.js') можно выполнять без перезагрузки сервера но не выходит.
[17:38] mraleph: felixge: it's difficult to say but 5-10s sounds better than 400ms.
[17:38] bnoordhuis: felixge: don't hurry, it seems dinner is ready
[17:38] bnoordhuis: and my gf frowns upon me having dinner in front of my pc :/
[17:38] felixge: bnoordhuis: https://github.com/felixge/node-mysql/tree/master/benchmark/node-mysql/
[17:39] felixge: bnoordhuis: ok, my girlfriend has been trying to get my attention for the past 15 min as well, lets take a break :)
[17:39] bnoordhuis: felixge: good idea, talk to you in a bit :)
[17:42] felixge: bnoordhuis: seems like I'm headed out for dinner, so it'll probably be ~45-60min for me
[17:42] boaz has joined the channel
[17:43] V1 has joined the channel
[17:45] davidascher has joined the channel
[17:46] rnewson has joined the channel
[17:47] c4milo has joined the channel
[17:48] c4milo has joined the channel
[17:48] oal has joined the channel
[17:49] prettyrobots has joined the channel
[17:55] isaacs: ryah_: hey, you know why make install would be complaining?  "Unable to install the file 'config.h' (not found in dir:///Users/isaacs/private-src/dev/js/node)"
[17:56] isaacs: when i copy build/default/config.h into the src directory, it breaks on "Unable to install the file 'tools/nodejs.pc' (not found in dir:///Users/isaacs/private-src/dev/js/node)"
[17:56] aconbere has joined the channel
[17:59] jacoblyles has joined the channel
[18:00] rnewson has joined the channel
[18:01] cyraxx has joined the channel
[18:03] ryah_:  isaacs reconfigure? 
[18:03] ryah_: make distclean ?
[18:03] isaacs: ryah_: yeah, i had to manually delete the autoc4che stuff, and the build/ dir and everything
[18:03] unomi has joined the channel
[18:03] isaacs: basically, cat .gitignore | xargs rm -rf
[18:04] isaacs: and then git clean -f
[18:04] guitt has joined the channel
[18:04] tmpvar: yikes
[18:05] isaacs: ACTION fell off the moving target
[18:06] isaacs: tmpvar: ok, using a3750a983351f3646592d2cb831b947fb6bfbf5a of node, and my latest master npm, and an empty cache, `npm install yui3` works fine.  no hangs, no crashes
[18:06] boaz has joined the channel
[18:07] langworthy has joined the channel
[18:07] tmpvar: so strange, how do we debug this?
[18:07] tmpvar: how do I debug it rather?
[18:09] sudoer has joined the channel
[18:12] noahcampbell has joined the channel
[18:12] jamund has joined the channel
[18:13] bradleymeck has joined the channel
[18:16] tmpvar: bradleymeck, yo
[18:16] ryah_: isaacs: are on latest?
[18:18] vvsh has joined the channel
[18:20] evanmeagher has joined the channel
[18:20] isaacs: ryah_: yeah
[18:21] benburkert has joined the channel
[18:24] isaacs: tmpvar: ok.... so, i definitely see it do the writeShim call, and then pause for a sec
[18:24] tmpvar: hrm, on my end it just stalls
[18:25] isaacs: tmpvar: what's `ulimit -a` say?
[18:25] tmpvar: https://gist.github.com/665596
[18:25] isaacs: tmpvar: because of the point where it's stalling, i think it's definitely runinng into some kind of infinite EMFILE loop
[18:26] tmpvar: that would make sense
[18:27] isaacs: and, perhaps setTimeout changed slightly in 0.3.latest, such that my graceful-fs doesn't work around the problem any more.
[18:27] isaacs: ok, i'm freezing with ulimit -n 256
[18:27] isaacs: awesome!!
[18:27] isaacs: progress!!
[18:27] tmpvar: haha
[18:27] tmpvar: npm install yui3-core also exhibits the behavior
[18:28] jacobolus has joined the channel
[18:28] isaacs: tmpvar: got a fix.
[18:28] tmpvar: nice
[18:28] meandi2 has joined the channel
[18:30] bradleymeck: tmpvar pong
[18:30] tmpvar: bradleymeck, what state is sfml in?
[18:30] tmpvar: node-sfml rather
[18:30] bradleymeck: 70%~, mainly just needs me to work on event loop and error integration
[18:32] tmpvar: nice
[18:32] tmpvar: what os have you been testing on?
[18:32] bradleymeck: mac and linux
[18:33] tmpvar: cool :)
[18:33] bradleymeck: pixel arrays are working right now
[18:33] micheil: smfl?
[18:33] micheil: *sfml?
[18:33] tmpvar: ive been trying to get it compiled.. having a problem on linux
[18:33] tmpvar: sfml
[18:33] bradleymeck: its like sdl but not software rendering, paste?
[18:33] tmpvar: yeah, sec
[18:34] bradleymeck: havent touched it in a while, so might take me a bit to see
[18:35] meatmanek_ has joined the channel
[18:35] tmpvar: bradleymeck, https://gist.github.com/665598
[18:36] tmpvar: perhaps im missing a libsfml-mouse-dev package ehh
[18:36] tmpvar: heh*
[18:36] bradleymeck: mmm maybe, but i thought the install script bundled everything, checking
[18:37] bradleymeck: yea, some lib is missing, http://sfml-dev.org/documentation/1.6/namespacesf_1_1Mouse.htm, that or something odd
[18:38] isaacs: tmpvar: ok, pull the latest npm from my master branch, that should work for you
[18:38] tmpvar: k
[18:38] isaacs: here's what the problem was:
[18:39] isaacs: when you try to open too many files, you get an EMFILE error
[18:39] isaacs: so, i had this "graceful-fs" module, that detects that, and just sets a timeout to try again
[18:39] tmpvar: fixed
[18:39] tmpvar: great
[18:39] isaacs: now, what i'm doing is providing a timeout value that gets incremented every time that error happens.  if there's no fs ops that hit EMFILE within 1 second, it resets it back to 0.
[18:40] isaacs: so, things might get slower and slower if you try to write a million files, but they won't ever just *stop* completely
[18:40] tmpvar: ah
[18:40] bpot has joined the channel
[18:40] isaacs: basically, just putting some molasses underneath the herd so it thunders less.
[18:41] tmpvar: yep, thanks!
[18:41] isaacs: btw, you'll have a faster time installing yui3 if you do ulimit -n 2560 or somethign
[18:41] tmpvar: yeah, but I won't be able to catch bugs on a default install ;)
[18:42] isaacs: true that :)
[18:42] isaacs: you can even set ulimit -n 50 now, and it'll just slow down the install, but wont' actually halt it
[18:43] bpot has joined the channel
[18:43] isaacs: so, definitely roll back your patch.  it will prevent modules from being written properly.
[18:43] tmpvar: done
[18:44] Neil__ has joined the channel
[18:45] isaacs: thanks for your help!  i like finding mysteries like that.
[18:46] tmpvar: anytime
[18:47] alexfner has joined the channel
[18:48] unomi: isaacs: quick question, the npm packages, are they stored on your server or do some get pulled from github at install time?
[18:48] mbrochh has joined the channel
[18:48] isaacs: unomi: they're stored on http://registry.npmjs.org
[18:48] unomi: ok
[18:48] isaacs: unomi: which is a couchapp running on http://isaacs.couchone.com/jsregistry
[18:49] unomi: looks spiffy
[18:49] unomi: sadly, it seems that nodules got burnt
[18:50] isaacs: unomi: if you want github integration, you can use bradley meck's npm post-receive github hook.  also, you can give npm a url to a tarball, so npm install http://github.com/isaacs/abbrev-js/tarball/master works
[18:50] isaacs: unomi: yeah, i have to fix the date stuff
[18:50] isaacs: the way i was doing it is bad
[18:50] unomi: date stuff?
[18:50] isaacs: unomi: the modules are actually up to date.  it's just that the mtime field went away, so it doesn't know that.
[18:50] isaacs: if you look at http://nodul.es/modules/, they're all there
[18:51] unomi: ah I was referring to kriszyp's nodules
[18:51] twoism has joined the channel
[18:51] unomi: is that the same thing?
[18:51] isaacs: oh, no, not at all
[18:51] isaacs: kz's thing got burnt?  what do you mean?
[18:51] unomi: not sure, but I suspect that it could be related to the forced https thing
[18:52] unomi: that it wasn't expecting to handle a 301 to https
[18:52] isaacs: oic
[18:52] isaacs: got burnt by github
[18:52] unomi: I don't really have the competence to sort it out at the moment
[18:53] unomi: yeah, some funky stuff, wget will also halt at default settings, complaining about their certificate
[18:54] sudoer has joined the channel
[19:00] aldosarmiento has joined the channel
[19:01] admc has joined the channel
[19:02] eisd has joined the channel
[19:05] nsolsen has joined the channel
[19:10] WRA has joined the channel
[19:11] ruxkor: hi everybody, if I have a bunch of functions accepting callbacks, and I need some control flow (like if then else) whats the best procedure to use?
[19:12] ruxkor: or better: can you suggest any paper/screencast/js library to cope with this thing in node_
[19:12] ruxkor: ?
[19:13] dgathright has joined the channel
[19:13] jetienne: sudo add-apt-repository ppa:jerome-etienne/neoip && sudo apt-get update && sudo apt-get install nodejs <- works on ubuntu 10.10 now
[19:14] WRA: which version of nodejs is it
[19:14] faust45 has joined the channel
[19:14] WRA: ruxkor: statemachine driven by a switch statement
[19:17] richcollins has joined the channel
[19:18] jetienne: WRA: 0.2.4
[19:18] ruxkor: WRA: hm... ok so I really need to include everything in every state explicitly.. thx for the answer
[19:18] mikeal has joined the channel
[19:20] isaacs: ruxkor: http://www.scribd.com/doc/40366684/Nodejs-Controlling-Flow
[19:22] ruxkor: thx isaacs!
[19:22] isaacs: ruxkor: that's almost exactly the same flow control utils that i use all throughout npm.  it's a very simple and versatile pattern
[19:23] q_no has joined the channel
[19:25] smtlaissezfaire has joined the channel
[19:25] ruxkor: ok, nice! reading it right now! : )
[19:26] Aria: Oh, nice slides!
[19:28] mape_ has joined the channel
[19:29] tg: hm, i only see the first 3 slides
[19:29] Aria: asyncMap from those slides needs to be a T-shirt or something.
[19:29] tg: after that only white pages
[19:29] ruxkor: @tg had the same they came after a few seconds
[19:30] Aria: Yeah, watch your browser activity. It's loading in the background.
[19:30] Aria: .oO(But they're not using a completion event to extend the viewable range. They'd do well to read the slide show.)
[19:31] unomi: isaacs: weird, I get add popups when I click on the right arrow there
[19:31] unomi: doh, sneaky advertising
[19:31] isaacs: unomi: could just download the pdf, then
[19:32] isaacs: i didn't build the site, just the slideshow
[19:32] unomi: nah its cool, its just a banner ad at the top that is being devious
[19:32] ryah_: isaacs: should we cook a emfile solution into core?
[19:33] isaacs: ryah_: that'd be rad
[19:33] shadow_w_ has joined the channel
[19:33] isaacs: ryah_: buti wonder if it's sort of evil-ish
[19:33] isaacs: are there any conditions where you want to see that error?
[19:33] unomi: http://img819.imageshack.us/img819/3227/window20101107023155.png that can't be legal
[19:33] Aria: emfile?
[19:33] isaacs: it might be surprising if you try to open a file and it takes forever
[19:33] ryah_: i think handling those cases sanely would be helpful to many people - would just need to do it in a way that isn't super magical
[19:33] isaacs: Aria: EMFILE.  too many files open error
[19:33] Aria: Oh! 
[19:34] Aria: I would certainly want to be able to get a grip on that error.
[19:34] langworthy has joined the channel
[19:34] isaacs: ryah_: yeah, i think just raising it is best.
[19:34] Aria: Even if only to abort gracefully.
[19:34] isaacs: in npm's case, "try again in a second" is fine.
[19:34] isaacs: but i mean, not always
[19:34] ryah_: isaacs: what are you doing exactly?
[19:34] ryah_: why are you opening so many files?
[19:34] isaacs: ryah_: well, some packages have a lot of modules that they link
[19:35] isaacs: ryah_: really, just yui3.  that's the main culprit
[19:35] isaacs: ryah_: and i make a list of all the files i'll need to write, and then write them all at once.
[19:35] isaacs: and the os goes "WHOA, buddy!!"
[19:35] ryah_: hm
[19:35] isaacs: when i was doing them in a serial fashion, there were no emfiles, because i was only opening one at a time.  but it was also way slower
[19:36] ryah_: what if we queued it internally
[19:37] ryah_: and emitted 'emfile' on process
[19:37] ryah_: so - not an error - but a hook
[19:37] ruxkor: haha isaacs : ) LOVE the code, very nice and finally something you CAN actually grasp without looking through pages and pages of code for 3 days!
[19:37] ruxkor: ACTION npm install slide
[19:37] isaacs: ruxkor: cool, i tried to keep it small :)
[19:38] jchris has joined the channel
[19:39] ryah_: isaacs: also - you seem to have a wario. @isaacsu 
[19:39] isaacs: orly?
[19:40] tmpvar: yeah, he's falling in love with sql again
[19:40] jacobolus has joined the channel
[19:41] isaacs: haha
[19:42] bnoordhuis has joined the channel
[19:52] benburkert has joined the channel
[19:52] rnewson has joined the channel
[19:54] matt_c has joined the channel
[19:57] wilmoore has joined the channel
[19:59] wilmoore has joined the channel
[20:00] isaacs: ok, npm@0.2.6 pushed
[20:02] gerad has joined the channel
[20:02] MikhX has joined the channel
[20:04] rnewson has joined the channel
[20:04] tmpvar: isaacs, nice!
[20:04] gerad has joined the channel
[20:04] bentruyman has joined the channel
[20:05] pydroid has joined the channel
[20:07] davidascher has joined the channel
[20:07] felixge: mraleph: in case you're still around, I did the v8 profile: https://gist.github.com/f85c38010c038e5efe2e
[20:07] felixge: mraleph: do you know if the Buffer.toString() item includes the time spend on Parser.write() (which is calling it) ?
[20:07] felixge: mraleph: or are they independent?
[20:08] ryah_: installed npm - worked :)
[20:08] ryah_: always amazed at that
[20:08] isaacs: hahah
[20:08] felixge: :)
[20:09] bnoordhuis: felixge: lots of gc'ing going on
[20:09] ryah_: isaacs: is there a way to make npm less verbose?
[20:09] bnoordhuis: but not wildly irregular
[20:09] isaacs: ryah_: npm config set loglevel silent
[20:09] felixge: bnoordhuis: hm 19% of all time
[20:09] felixge: bnoordhuis: didn't even catch that
[20:10] felixge: bnoordhuis: wow, if I could turn that off ;)
[20:10] ryah_: isaacs: awesome
[20:10] isaacs: ryah_: npm help config, and then search for "loglevel"
[20:10] isaacs: silent is zero output, just exit with 0 or 1
[20:10] felixge: bnoordhuis: I'm wondering if I could reduce gc activity
[20:10] isaacs: ryah_: "warn" is probably best if you want a fairly quiet experience
[20:11] ryah_: isaacs: cool - working really well
[20:11] isaacs: awesome :)
[20:11] ryah_: ryan@ryan-laptop:~/projects/node% npm install mysql 
[20:11] ryah_: npm ok
[20:11] ryah_: ryan@ryan-laptop:~/projects/node% 
[20:11] ryah_: isaacs: do you fork out to curl for the http pulls?
[20:11] bnoordhuis: felixge: you don't have much influence on it from JS land
[20:11] isaacs: ryah_: no, i use node
[20:11] isaacs: ryah_: that's why i don't use ssl :(
[20:11] ryah_: isaacs: oh - nice
[20:11] bnoordhuis: felixge: try reusing buffers where possible
[20:12] isaacs: ryah_: the only thing i shell out for is tar and gzip
[20:12] ryah_: a few more weeks, then we're going to have good ssl
[20:12] isaacs: ryah_: and it's a world of hurt
[20:12] isaacs: yeah, that'll rock
[20:12] felixge: bnoordhuis: it seems there is less gc time when not running the profiler, around ~7%
[20:12] isaacs: i really need to write a tar parser.
[20:12] felixge: bnoordhuis: (measure by --trace-gc and adding up the ms output)
[20:12] ryah_: landing writev is going to rip out the old ssl
[20:12] felixge: * measured
[20:12] isaacs: awesome
[20:12] ryah_: and that's going to happen this weekend i think
[20:12] isaacs: ryah_: do we have gzip?
[20:12] isaacs: ryah_: i remember some talk about that
[20:12] isaacs: buffer.compress or some such?
[20:12] felixge: bnoordhuis: how would I do that? the only buffers I use are those coming from socket.on('data')
[20:12] ryah_: isaacs: i'm not against it - but it requires some thought
[20:13] isaacs: agreed
[20:13] bnoordhuis: felixge: right, then you won't be able to do that
[20:13] isaacs: thankfully, gzip is installed everywhere, and a *very* portable command.
[20:13] felixge: bnoordhuis: shouldn't fast-buffers do that these days?
[20:13] isaacs: takes zero arguments
[20:13] isaacs: write to stdin, read from stdout.
[20:13] ryah_: what's amazing is that stream.pipe kind of works
[20:13] felixge: wtf is "_lgamma$fenv_access_off" btw?
[20:13] ryah_: even for http requests
[20:13] isaacs: tar, on the other hand..
[20:13] bnoordhuis: felixge: definitely maybe
[20:14] ryah_: it's like this thing is becoming actually useful these days :)
[20:14] isaacs: hehe
[20:14] jesusabdroolah has joined the channel
[20:14] bnoordhuis: felixge: not sure what kind of buffer socket.on('data') produces, fast or slowbuffer
[20:14] felixge: ryah_: can you comment on that?
[20:14] bnoordhuis: felixge: i'd assume the fast kind but i'd have to check
[20:14] ryah_: felixge: i don't know what that is
[20:15] felixge: bnoordhuis: anyway, why would you think buffer allocation is even relevant here?
[20:15] felixge: ryah_: we were wondering if socket.on('data') buffers are fast buffers?
[20:15] bnoordhuis: felixge: lots of throwaway objects will lead to lots of garbage collecting
[20:15] jchris has joined the channel
[20:15] ryah_: felixge: in v0.3, yes
[20:15] felixge: ryah_: ok - thanks. This is on HEAD so yeah
[20:16] Max-Might has joined the channel
[20:16] felixge: bnoordhuis: ah right
[20:16] ryah_: felixge: all buffers are fast buffers
[20:16] ryah_: unless you go inside
[20:17] ryah_: i think we need counters in node
[20:17] ryah_: for everything :)
[20:17] bnoordhuis: ryah_: counters?
[20:17] tanepiper: manual GC?
[20:17] felixge: counters would be awesome
[20:17] bnoordhuis: that's a dirty word around here :)
[20:18] tanepiper: ACTION has flashbacks to doing iPhone development
[20:18] felixge: (assuming you mean to see what is going on internally, right?)
[20:18] ryah_: bnoordhuis: like number of events emitted
[20:19] isaacs: ryah_: you see that fs.write() thing that bnoordhuis and jorge are talking about on the list?
[20:19] ryah_: require('events').nemitted
[20:19] ryah_: isaacs: no - my email is backed up and i don't want to look at it
[20:19] isaacs: hahah
[20:19] ryah_: it's depressing
[20:19] isaacs: ok, just a sec...
[20:21] isaacs: ryah_: take this file, and run it: https://gist.github.com/665690
[20:21] shripadk has left the channel
[20:21] isaacs: you'll end up with a bunch of characters in the output.json that are not "a" or "\n"
[20:21] ryah_: isaacs: it's saturday morning though :~
[20:21] isaacs: hahahaha
[20:21] jacobolus has joined the channel
[20:22] isaacs: ok, then do it tomorrow night :)
[20:22] ryah_: curl https://gist.github.com/raw/665690/a9b9c73ff7e2f1f2db9487a8dd0c2859b00adf28/write.js | node
[20:22] ryah_: hm
[20:22] ryah_: :(
[20:22] isaacs: ryah_: YOU SEE!!?
[20:22] isaacs: i told you taht's handy!!
[20:22] guitt: hello, I made a patch to add unix pipes to node, would you look at it please? https://gist.github.com/665691
[20:23] isaacs: quote: ryah_: "i get that it's cute and all, but i'd never use that"
[20:23] ryah_: guitt: we've already got a binding for pipe
[20:23] ryah_: guitt: process.binding('net').pipe()
[20:24] bnoordhuis: at least this version is documented
[20:24] ryah_: isaacs: is that script supposed to increment i ?
[20:24] guitt: ryah_: oops, I really missed that one
[20:25] isaacs: ryah_: oh, yeah
[20:25] ryah_: isaacs: okay - well - clearly that's a bug
[20:25] isaacs: well, just run it for a few seconds and then ^C it
[20:25] isaacs: you'll see the issue
[20:25] ryah_: i mean the output.json that gets shitty stuff
[20:25] ryah_: well
[20:26] ryah_: hm
[20:26] ryah_: we should think about this
[20:26] isaacs: apparently, creating a new cb in fs.write avoids the issue, presumably by preventing the buffer from being gc'ed
[20:26] isaacs: until the cb is gc'ed
[20:26] isaacs: but having a random wrapper function in jsland to prevent a cland thing from being gc'ed... it's just weird.
[20:26] isaacs: it's a bandaid
[20:27] bnoordhuis: good choice of words, isaacs :)
[20:27] isaacs: bnoordhuis: great artists steal.
[20:27] isaacs: :D
[20:27] benburkert has joined the channel
[20:27] ryah_: isaacs: oh - the buffer is being gc'd while it goes to the thread pool?
[20:27] isaacs: ryah_: i guess so
[20:27] bnoordhuis: ryah_: yes
[20:28] ryah_: okay - well - that should be an easy fix
[20:28] ryah_: just got to Ref() it
[20:28] isaacs: kewl.
[20:28] isaacs: figured it was something simle
[20:28] isaacs: ->Ref() and ->UnRef() or somethjign
[20:28] isaacs: it's getting sunny.  i'm gonna go play.
[20:28] isaacs: have a good weekend :)
[20:28] ryah_: later
[20:29] WRA has joined the channel
[20:29] eee_c has joined the channel
[20:29] guitt: I've got another patch, hopefully useful. It means to add the ability to close file descriptors when you spawn programs
[20:30] ryah_: guitt: almost everything is CLOEXEC
[20:30] ryah_: if that's what you mean
[20:31] guitt: well in node_child_process.cc, the pipe calls are not
[20:33] guitt: I tried to pipe three processes together with spawn (not exec), and it seems there is a deadlock with FDs
[20:33] modular has joined the channel
[20:33] ryah_: guitt: oh - interesting
[20:34] ryah_: making a test for that would be awesome
[20:35] guitt: ok, I'm going to try this, and I'll get back
[20:35] mikeal has joined the channel
[20:36] amerine has joined the channel
[20:36] mattly has joined the channel
[20:38] benburkert has joined the channel
[20:38] Neil__ has joined the channel
[20:41] V1 has joined the channel
[20:42] benburkert has joined the channel
[20:43] ako has joined the channel
[20:44] noahcampbell has joined the channel
[20:44] mattly has joined the channel
[20:44] benburke_ has joined the channel
[20:47] evanmeagher has joined the channel
[20:50] smtlaissezfaire has joined the channel
[20:53] ajsie has joined the channel
[20:54] rauchg_ has joined the channel
[20:54] muk_mb has joined the channel
[20:59] sonnym has joined the channel
[21:00] res99 has joined the channel
[21:02] richcollins has joined the channel
[21:02] dicon has joined the channel
[21:05] bentruyman has joined the channel
[21:10] faust45 has joined the channel
[21:10] slaskis_ has joined the channel
[21:11] kjeldahl has joined the channel
[21:21] jrockjiggz has joined the channel
[21:26] prettyrobots has joined the channel
[21:28] themiddleman has joined the channel
[21:30] gerad has joined the channel
[21:30] charlenopires has joined the channel
[21:31] TomsB has joined the channel
[21:33] mAritz has joined the channel
[21:34] hassox has joined the channel
[21:35] vandenoever has joined the channel
[21:35] zorzar_ has joined the channel
[21:37] gerad has joined the channel
[21:41] liar has joined the channel
[21:42] siculars has joined the channel
[21:47] bradleymeck has joined the channel
[21:49] twoism has joined the channel
[21:52] richcollins has joined the channel
[21:53] Utkarsh has joined the channel
[21:54] c4milo has joined the channel
[21:56] indexzero has joined the channel
[21:56] c4milo1 has joined the channel
[21:58] slaskis has joined the channel
[22:00] davidascher has joined the channel
[22:00] johan_bouveng: hello! in order to use mongodb with node.js, should i just get the tarball and install it, or should i use the npm manager to get the driver (will that give me mongodb aswell?), or should i do both?
[22:00] evanmeagher has joined the channel
[22:01] bnoordhuis: johan_bouveng: you need to install mongodb along with the nodejs driver
[22:03] johan_bouveng: bnoordhuis: i tought so aswell. thanks.
[22:03] rnewson has joined the channel
[22:03] rnewson has joined the channel
[22:03] johan_bouveng: kinda obvious
[22:03] johan_bouveng: hehe
[22:03] johan_bouveng: -bash: mongo: command not found
[22:06] Utkarsh has joined the channel
[22:11] bartt has joined the channel
[22:11] ysynopsis has joined the channel
[22:16] Aria has joined the channel
[22:17] Anti-X: mongod
[22:17] rbranson: not a bad problem to have
[22:17] rbranson: :)
[22:32] mape_: Anyone here know if you with node.js can hook into accepting calls in the palm pre phone?
[22:32] mape_: Fetch the incoming number and do fetches against the web and such?
[22:32] halfhalo: I... maybe with a patch
[22:34] MikhX_ has joined the channel
[22:34] halfhalo: I believe you can get that info through regular mojo if you patch the phone app
[22:36] mape_: Hmm k
[22:38] halfhalo: We don't have access to the developer tools for webOS 2.0, so its hard to say for sure
[22:38] mape_: Didn't they relase that quite some time ago?
[22:38] mape_: Or was that only early access?
[22:39] halfhalo: Thats EA, and also under NDA
[22:39] mape_: meh
[22:40] halfhalo: ACTION isn't happy that the shipping version of node is 0.1.102
[22:42] Farsinsen has joined the channel
[22:42] stride: boy, that's really ancient :)
[22:43] BHSPitMonkey has joined the channel
[22:43] BHSPitMonkey: Is it possible to make code changes without having to stop and start the process?
[22:44] Anti-X: yes!
[22:44] Farsinsen: Hi. I'm trying to install geddy via npm, but it fails. Anybody godt an idea whats wrong? Output: http://pastebin.com/BiJRUBtc
[22:44] Anti-X: you can program all you want without stopping the process...
[22:45] BHSPitMonkey: I'd love to know how that's done :)   (Will merely editing the file cause node to reexamine it?)
[22:45] Anti-X: no
[22:46] skohorn has joined the channel
[22:46] Anti-X: you can change the code all you want, but the process still needs to restart
[22:46] Anti-X: :p
[22:46] Anti-X: ta-da!
[22:46] BHSPitMonkey: oh. pssh.
[22:46] Anti-X: yes, there are solutions to deal with this
[22:46] Anti-X: nodemon
[22:46] Anti-X: i think was one
[22:47] Anti-X: npm install nodemon
[22:47] Anti-X: then
[22:47] Anti-X: nodemon myapp.js
[22:48] aconbere has joined the channel
[22:48] BHSPitMonkey: all that seems to do is handle killing and restarting the process for you
[22:48] Anti-X: yes
[22:48] InsDel has joined the channel
[22:48] Anti-X: that's what you NEED to do
[22:48] BHSPitMonkey: doesn't solve the problem of users being kicked off :)
[22:48] Anti-X: you can't hot load code
[22:48] BHSPitMonkey: it's not a huge deal, I was just wondering if it could be done.
[22:49] Anti-X: only erlang does that, and it was built with that in mind
[22:49] frodenius: ofc you can hotload code
[22:50] Anti-X: yeah if you pretend that modules aren't really modules
[22:50] BHSPitMonkey: I figured with js's ability to redeclare functions it could be managed
[22:50] frodenius: well, if you say code == modules, then it is complicated
[22:50] rbranson: it can be done in the Rails or PHP sense, but would have to be done at the framework level
[22:50] frodenius: but say, just some functions, easy
[22:50] Anti-X: well why would you hotload anything other than modules?
[22:50] Anti-X: :P
[22:51] rbranson: and of course, you'd have to make concessions like dropping existing connections, etc
[22:51] Anti-X: that's the point of hotloading
[22:51] Anti-X: changing the application while running
[22:51] BHSPitMonkey: I'm hosting a multiplayer game, and I'd like to be able to make tweaks to functions without kicking everybody off
[22:51] rbranson: hotloading in the Erlang sense = for uptime reasons
[22:51] BHSPitMonkey: like I said, it's not a big deal if I have to
[22:51] rbranson: hotloading in the PHP/Rails sense = for development convenience
[22:52] rbranson: the problem is with the erlang approach is that it's fraught with problems
[22:52] Anti-X: BHSPitMonkey, that would be a problem, because the old users would then keep using the old code, except in instances where that old code references code that just got replaced, and then you have a whole bunch of issues you don't want
[22:52] rbranson: exactly what Anti-X says
[22:52] rbranson: you'd have to design it to be hotloadable basically
[22:52] Anti-X: in erlang that's fine
[22:52] BHSPitMonkey: Anti-X: depending on the nature of the change, yes.  I don't doubt that it could be a very messy problem.
[22:52] Anti-X: because erlang is functional.. you don't change states
[22:52] rbranson: in erlang it's fine if you follow a set of conventions
[22:52] frodenius: if say, you have functions to compute some game related stuff, and do that on event "round", then just process.compile a script with a call that replaces the listener with a new function
[22:53] BHSPitMonkey: <rbranson> you'd have to design it to be hotloadable basically -- I think this is the winning answer
[22:53] frodenius: the main obstacle to overcome is closures
[22:53] rbranson: every part of your code would have to be designed with this in mind though
[22:53] rbranson: and you'd have to have a clear separation from mutable state and hotloadable code
[22:53] BHSPitMonkey: e.g. if I just want to be able to hot-modify, say, strings, I should set it up to get the strings externally
[22:53] frodenius: you'd have to restrict yourself to pretty much pure functional no side effects programming style
[22:53] Anti-X: if you change your game so often that you wanna have hotloading, then maybe you should reconsider the drop-code-into-production strategy
[22:53] rbranson: from=  between
[22:54] bnoordhuis: frodenius gets a cookie
[22:54] itissid has joined the channel
[22:54] rbranson: frodenius: even beyond that
[22:54] frodenius: :)
[22:54] Anti-X: accumulate changes, and apply them once a week or something
[22:54] rbranson: frodenius: to do it right in erlang, you basically have to store all mutable state in mnesia
[22:54] Anti-X: that's the best advice i can give
[22:54] BHSPitMonkey: yep
[22:54] Anti-X: if you're really scared about users
[22:54] Anti-X: and announce downtime
[22:54] stride: heh? what's hotloading in the php sense?
[22:55] Anti-X: stride, reloading the entire app on a per-request basis
[22:55] BHSPitMonkey: stride: PHP requests are usually sparse and short
[22:55] rbranson: i think it'd be better to figure out a way to allow the process to restart without long interruption
[22:55] rbranson: like perhaps a 10 second pause
[22:55] BHSPitMonkey: if that
[22:55] mape_: loadbalance?
[22:55] rbranson: basically build a lightweight process that holds state
[22:55] Utkarsh has joined the channel
[22:55] mape_: and restart them one after one?
[22:55] rbranson: and put all of your game logic in a different process that can be rolled over 
[22:56] Anti-X: oh yeah, one way could be to start a parent node that keeps several child nodes, and just keep shoving all users away from one specific node, restart that
[22:56] Anti-X: etc
[22:56] stride: hmkay, obviously it's too late for my mind & semantics.. :)
[22:56] rbranson: making the client smart enough to flash up a message like "hey the server is reloading code, we're reconnecting and you'll be right back where you were"
[22:57] rbranson: of course, all of your mutable data structures would have to be very flexible and the code that reads/writes to the state would have to be able to handle all sorts of craziness
[22:59] rbranson: I think the eggdrop IRC bot can reload most of it's code without dropping it's connections and state
[23:00] Anti-X: why would that be a priority feature?
[23:01] rbranson: because they're often used to hold ops channels on IRC networks without services
[23:01] rbranson: ops on channels
[23:01] Anti-X: it seems like a waste of time, when all you could do is op a user, restart the bot with the new version, and op the bot
[23:02] Anti-X: i'm just saying it doesn't make sense as a priority
[23:02] rbranson: i mean it's a very very old codebase, I'm sure they just ran out of shit to do
[23:02] Kami_: rbranson, I'm not sure if that is the case with c modules, but you can of-course dynamically reload tcl scripts :)
[23:02] Anti-X: oh yeah the tcl scripts
[23:02] Anti-X: sure
[23:02] Anti-X: but that's more like.. configuration of the bot
[23:02] Anti-X: not a new version update or something
[23:03] jamescarr: man
[23:03] jamescarr: WebWorkers on node.js are the bomb :)
[23:03] rbranson: maybe i'm thinking of another bot
[23:03] Anti-X: ACTION ducks
[23:03] jamescarr: I just built an application that makes extensive use of em
[23:03] rbranson: it's definitely C code
[23:04] rbranson: they're compiled into DSOs and reloaded on the fly
[23:04] Anti-X: maybe it's some irc daemon
[23:04] Anti-X: definately not ircu (undernet), because that shit keeps going down several times a day
[23:05] Kami_: psotnic maybe? But psotnic is written in c++ and I don't remember it having this feature
[23:05] bnoordhuis: it's technically possible, at least (see dlclose())
[23:07] eee_c has joined the channel
[23:07] rbranson: well i can't find proof on the internets
[23:08] rbranson: maybe i'm cuhrazy :D
[23:08] Anti-X: i wouldn't bet against it
[23:09] bnoordhuis: any freebsd users here?
[23:09] stride: hm.. is the runScript* stuff as evil as eval performance-wise? otherwise they may be a neat way to import & reload functions, right?
[23:09] Anti-X: well if it was written in c++ then there's no proof.. it's write-only
[23:09] Kami_: bnoordhuis, yes
[23:09] Anti-X: stride, eval is only evil if you don't know what you're feeding it
[23:09] inimino: rbranson ⋱ Weechat does that, irssi probably does also.
[23:10] bnoordhuis: Kami_: portsnap extract, is it normal for the integrity check to take ten minutes?
[23:10] bnoordhuis: or more, it's still busy
[23:10] Kami_: yeah, it takes a while
[23:10] bnoordhuis: and as we speak it finishes
[23:10] stride: Anti-X: hm, true
[23:10] Kami_: heh :)
[23:10] bnoordhuis: sorry for wasting your time :)
[23:10] Anti-X: i have a stackoverflow answer about eval
[23:10] bobry has joined the channel
[23:11] Anti-X: that sums it up
[23:11] zentoooo has joined the channel
[23:11] bobry: hey folks, anyone here using mongoose?
[23:12] stride: Anti-X: link or it didn't happen :)
[23:14] Anti-X: actually i found someone else's answer to be better... in short: "guns don't kill people, people kill people."
[23:15] Utkarsh has joined the channel
[23:15] Anti-X: eval (in any language) is not evil in the same way that a chainsaw is not evil. It is a tool. It happens to be a powerful tool that, when misused, can sever limbs and eviscerate (metaphorically speaking)
[23:17] bnoordhuis: Anti-X: i don't understand, could you turn it into a car analogy?
[23:18] cloudhead has joined the channel
[23:18] stride: that's certainly true :) although my question stands. are there benefits from using Script.* with new v8 context initializations and what else that does in the background?
[23:19] bnoordhuis: stride: what are you doing that you worry about the microsecond difference?
[23:19] Anti-X: JS eval is just as fast as running an actual JS script through the engine... because (as far as I know) eval IS the engine
[23:19] MikhX_ has joined the channel
[23:20] stride: bnoordhuis: absolutely nothing :) I just like to know how stuff works
[23:20] Anti-X: obviously there is the time it takes to parse it
[23:21] stride: (and I should probably just read the code for that.. sorry for the stupid question :))
[23:21] Anti-X: and if you have a global context, that's different from parsing it in a separate context
[23:26] MikhX_ has joined the channel
[23:29] zentoooo has joined the channel
[23:32] softdrink has joined the channel
[23:35] zentoooo has joined the channel
[23:36] bartt has joined the channel
[23:37] benburkert has joined the channel
[23:37] benburke_ has joined the channel
[23:40] hamsterspider has joined the channel
[23:41] hamsterspider: for node.js 0.3.0 what is recommended websocket library to use?
[23:41] bnoordhuis: hamsterspider: that would be socket.io, i think
[23:42] hamsterspider: bnoordhuis: cool - thanks much
[23:42] Anti-X: noo
[23:42] Anti-X: MAGNIC
[23:43] Anti-X: uhm
[23:43] Anti-X: MAGIC
[23:43] justin_ has joined the channel
[23:43] Anti-X: magic > *
[23:43] bnoordhuis: the drawback is that magic only works when you really, really believe in it
[23:44] hamsterspider: Anti-X: I *believe*
[23:44] Anti-X: no, magic is very real
[23:44] bnoordhuis: as are elves, i take it?
[23:45] Anti-X: no
[23:45] Anti-X: what are you, 5?
[23:45] Anti-X: :p
[23:45] bnoordhuis: you're crushing my illusions here, Anti-X
[23:46] tanepiper: Magic is one of the reasons i started to hate Django
[23:46] Anti-X: if you're seeing elves, then you have bigger problems
[23:46] bnoordhuis: my elves are mostly pink, with long snouts
[23:46] Anti-X: o..k...
[23:47] Anti-X: ACTION tries to keep bnoordhuis in conversation, while looking for the number to the psych ward
[23:47] bnoordhuis: i'm just differently sane, is all
[23:47] bnoordhuis: you still haven't come up with that car analogy, btw
[23:47] Anti-X: oh i thought you were kidding
[23:48] Anti-X: cars don't drive into trees, people do?
[23:48] bnoordhuis: catchy oneliner
[23:48] bnoordhuis: i like it
[23:48] twoism has joined the channel
[23:49] Anti-X: using eval as a n00b is like DUI
[23:49] bnoordhuis: it gets you fined?
[23:49] Anti-X: "look, this works.. i can totally do this.."
[23:49] Anti-X: of course, while only testing with valid input
[23:50] bnoordhuis: subtle, good one
[23:50] Anti-X: "i drove this straight line while drunk, i can totally drive all the way home, through intersections, street lights and curves"
[23:51] jesusabd1llah has joined the channel
[23:51] Anti-X: street lights is the wrong word
[23:51] Anti-X: what's the word?
[23:51] Anti-X: the red, yellow, green thing
[23:52] bnoordhuis: traffic light?
[23:52] kgf: traffic lights?
[23:52] bnoordhuis: i think the british have their own word for it
[23:52] johan_bouveng: node.js is such a hack.
[23:53] bnoordhuis: johan_bouveng: you say it like it's a bad thing
[23:53] johan_bouveng: ;D
[23:53] Kami_: Anti-X, semaphore? :P
[23:54] Anti-X: traffic lights
[23:54] Anti-X: yeah
[23:54] rwaldron has joined the channel
[23:55] bnoordhuis: Kami_: is there a reason why csh is the default shell on freebsd?
[23:55] voodootikigod has joined the channel
[23:56] Kami_: bnoordhuis, csh is only default for root, sh is default for normal users
[23:57] bnoordhuis: Kami_: right you are
[23:58] bnoordhuis: but sh is a plain bourne shell, isn't it?
[23:58] Kami_: yes
[23:58] bnoordhuis: man, feels like solaris in the nineties
[23:59] SvenDowideit has joined the channel
