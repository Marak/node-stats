[00:00] galaxywatcher has joined the channel
[00:00] nooder has joined the channel
[00:01] aconbere has joined the channel
[00:01] shimondoodkin: found: https://github.com/davglass/nodejs-yui3/blob/master/lib/yui3-dom.js
[00:02] shimondoodkin: tmpvar: it could be at jsdom.windowAugmentation(dom, {parser: parser});
[00:02] shimondoodkin: https://github.com/davglass/nodejs-yui3/blob/master/lib/yui3-dom.js#L28
[00:03] tmpvar: you want to know where jsdom gets initialized?
[00:04] MetaJake_ has joined the channel
[00:04] shimondoodkin: i do not understand your offer
[00:04] captain_morgan has joined the channel
[00:04] shimondoodkin: is it about yui or in jsdom
[00:04] shimondoodkin: yuui ive just found
[00:04] prettyrobots has joined the channel
[00:05] shimondoodkin: i wanterd to see how he used it
[00:05] tmpvar: oh
[00:06] programble has joined the channel
[00:06] shimondoodkin: as i look on the code at https://github.com/davglass/nodejs-yui3/blob/master/lib/yui3-dom.js#L28 the question i have in mind is how to do the configuration so it wil go in line with the way he uses js dom
[00:06] BillyBreen has joined the channel
[00:07] BHSPitMonkey has joined the channel
[00:07] shimondoodkin: tmpvar: are the options of jsdom(..,.., options) are the same with jsdom.windowAugmentation(.., options)?
[00:08] BHSPitMonkey: Can a Socket.IO server receive pure websocket connections, or do they have to come from a socket.io client?
[00:08] BHSPitMonkey: (You there, rauchg_ ?)
[00:08] tmpvar: shimondoodkin, yeah for the most part
[00:09] cloudhead has joined the channel
[00:11] xilostech has joined the channel
[00:12] pagameba has joined the channel
[00:14] isaacs has joined the channel
[00:15] jimt_ has joined the channel
[00:16] thebigbad: tmpvar: is there a recent commit where the tests pass?
[00:16] thebigbad: after 0.1.20, I mean
[00:18] tmpvar: have you tried HEAD?
[00:19] thebigbad: tmpvar: yup. running again so I can paste error
[00:19] thebigbad: { message: 'titleLink Failure (titleLink):  expected <NIST DOM HTML Test - FRAME> found <>' }
[00:20] tmpvar: can you npm install htmlparser and try that again?
[00:20] tmpvar: should be 1.7.2
[00:20] thebigbad: ah, I had htmlparser@1.6.2
[00:21] _mythz has joined the channel
[00:21] thebigbad: business: I'm back in it :)
[00:21] mscdex: that's good to hear, the unemployment numbers aren't very good nowadays
[00:22] thebigbad: I looked around the other day for a way to require specific versions of node modules
[00:22] thebigbad: in my current 3-man project, I'm using a README file with the output of npm ls installed :(
[00:23] jimt has joined the channel
[00:23] sonnym has joined the channel
[00:24] shimondoodkin: ive figured that out too also is there a problem to run from a diferent user like www-data
[00:26] Booths has joined the channel
[00:26] ehaas has joined the channel
[00:26] tj has joined the channel
[00:27] boaz has joined the channel
[00:29] matt_c has joined the channel
[00:29] tmpvar: thebigbad, im going to bump the req'd version for htmlparser when 0.1.21 goes out
[00:30] thebigbad: kk
[00:30] Tim_Smart has joined the channel
[00:33] MattJ has joined the channel
[00:35] masahiroh has joined the channel
[00:35] rkieffer has joined the channel
[00:39] EyePulp has joined the channel
[00:41] dnolen has joined the channel
[00:41] omni5cience has joined the channel
[00:41] jimt_ has joined the channel
[00:41] yozlet has joined the channel
[00:44] isaacs has joined the channel
[00:45] shimondoodkin: tmpvar: ive check the code i think it is i mposible to put in in options and have a working jquery, the solution should be like: browser.disableJavascript, browser.enableJavascript
[00:47] aheckmann has joined the channel
[00:47] shimondoodkin: the disabling/enabling place is at https://github.com/tmpvar/jsdom/blob/master/lib/jsdom/level2/html.js#L1088
[00:47] shimondoodkin:  at init
[00:47] drewmiller has joined the channel
[00:48] charlenopires has joined the channel
[00:49] Anti-X has joined the channel
[00:51] drewmiller has left the channel
[00:51] sprout has joined the channel
[00:52] drewmiller has joined the channel
[00:53] ossareh has joined the channel
[00:53] jimt has joined the channel
[00:56] hoffa_ has joined the channel
[01:03] indexzero has joined the channel
[01:05] davidc_ has joined the channel
[01:06] justin__ has joined the channel
[01:09] mw has joined the channel
[01:11] skiz has joined the channel
[01:13] nolan_d has joined the channel
[01:13] siculars has joined the channel
[01:14] roberthahn_ has joined the channel
[01:14] isaacs1 has joined the channel
[01:15] roberthahn_: Gooood evening!  I'm *sure* this has been asked a lot, but Google hasn't offered up the goodies -- how would one replicate Object.create() in JS environments (like FireFox 3.x) that don't support it?
[01:20] mikew3c has joined the channel
[01:20] rkieffer_ has joined the channel
[01:20] GriffenJBS: is there no way in node/v8/JS to catch oom exception; or create a weak or soft reference?
[01:22] SvenDowideit_ has joined the channel
[01:23] MetaJake_ has joined the channel
[01:26] jashkenas: roberthahn_: you can't replicate it exactly.
[01:26] jashkenas: You can either use a subset, or avoid it if you want to write compatible JS.
[01:27] siculars_ has joined the channel
[01:27] hornairs has joined the channel
[01:29] roberthahn_: jashkenas:  good to know.  is the 'compatible JS' approach using "Classical JavaScript Constructors" (see the first section on this page: http://howtonode.org/object-graphs-2)
[01:31] jashkenas: roberthahn_: if you're interested in writing compatible JS, I'd recommend using regular prototypes + new instead of trying to replicate Object.create.
[01:32] jashkenas: do you have an example you're trying to write?
[01:32] dnolen has joined the channel
[01:34] InsDel has joined the channel
[01:40] jimt_ has joined the channel
[01:40] mbrochh has joined the channel
[01:41] creationix has joined the channel
[01:41] creationix: Is there something like indexOf, but for objects?
[01:41] creationix: I have a value, and I want to know what property in an object points to that value
[01:41] creationix: currently I'm looping over the keys and checking for ===
[01:41] JimBastard has joined the channel
[01:43] Tim_Smart: creationix: I don't think there is.
[01:44] tk has joined the channel
[01:45] isaacs has joined the channel
[01:45] jimt has joined the channel
[01:45] _mythz has left the channel
[01:45] creationix: Tim_Smart: thanks, just checking
[01:46] elijah-mbp has joined the channel
[01:47] GriffenJBS: why won't this work for Object.create? https://gist.github.com/711097
[01:48] bpadalino: is this a quiz?!
[01:48] jashkenas: creationix: some helper libraries implement it...   _.include works for both Arrays and Objects.
[01:48] jashkenas: _.include({a: 1, b: 2}, 1)   =>   ture
[01:49] Tim_Smart: jashkenas: I think creation wants it to return 'a'
[01:49] jashkenas: ah, yes.
[01:49] Tim_Smart: creationix*
[01:49] twoism has joined the channel
[01:51] jashkenas: GriffenJBS: that won't work because it doesn't support full property descriptors.
[01:52] GriffenJBS: meaning setters and getters?
[01:52] jashkenas: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/defineProperty#Description
[01:52] GriffenJBS: thanks
[01:52] jashkenas: {value : 1, writable: false, enumerable: true}
[01:53] jashkenas: a shame ECMA5 didn't pick an Api that could be back-ported. There's a lot you can do with Object.create *without* property descriptors.
[01:53] ysynopsis has joined the channel
[01:54] roberthahn_: jashkenas:  thanks for your feedback re: writing compatible JS.  I've written a JS library for validating data (that's not baked into an ORM), and someone suggested that making it work in the browser as well as Node.js would be valuable. So, I'd be getting it packaged up for launch now but for the fact that I use Object.create() in the library.
[01:54] rcy has joined the channel
[01:55] jashkenas: roberthahn_: It shouldn't be hard to get that swapped out. Is it already up on github?
[01:55] CIA-95: node: 03Ryan Dahl 07master * rf123a1a 10/ src/node_script.cc : hack to display syntax errors. FIXME - http://bit.ly/fXNTvp
[01:55] GriffenJBS: wow, I based the gist on https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/create which didn't mention those details
[01:56] roberthahn_: jashkenas:  not yet.  I'll get it up there tomorrow night. About to pack it in for now to spend time with my wife.  Thanks for your interest. i'll look for you here when it's up
[01:57] unomi: what is wrong with json-schema?
[01:57] Tim_Smart: roberthahn_: You will find jashkenas quicker on #coffeescript ;)
[01:57] unomi: for validating data
[01:58] Vekz has joined the channel
[01:58] roberthahn_: Tim_Smart:  good to know!  I'm still pretty new to the node.js community :)
[01:58] rkieffer has joined the channel
[01:59] kriszyp_ has joined the channel
[02:00] msilverman2 has joined the channel
[02:01] GriffenJBS: is there no way to catch OOM in node?
[02:02] _mql has left the channel
[02:03] unomi: GriffenJBS, presumably you could listen to usage now and then
[02:04] hornairs: whats the http header that specifies where to start downloading a file from if the download has already started? or rather, how do i implement downloads over http that can be resumed?
[02:04] Tim_Smart: ryah: Was writev too slow?
[02:04] Tim_Smart: I see you reverted it
[02:05] hoffa_ has joined the channel
[02:07] langworthy has joined the channel
[02:07] theBigZ has joined the channel
[02:07] ryah: Tim_Smart: yes
[02:08] langworthy: I'm having ssl certificate issues when trying to install ndistro using the command in the README. is this due to recent github changes?
[02:08] markwubben has joined the channel
[02:11] justin__ has joined the channel
[02:12] jimt has joined the channel
[02:13] kjeldahl has joined the channel
[02:14] bartt has joined the channel
[02:15] robotarmy has joined the channel
[02:15] isaacs has joined the channel
[02:15] bartt has joined the channel
[02:15] MetaJake_ has joined the channel
[02:16] GriffenJBS: unomi: possible, but not very useful, I'm trying to create a cache using available memory, by the time that catches it, the program has terminated from oom
[02:18] Tim_Smart has joined the channel
[02:19] unomi: GriffenJBS, caching what kinds of things?
[02:19] unomi: on possible workaround might be to mount a ramFS you push things into
[02:19] mu-hannibal has joined the channel
[02:20] unomi: that way you get around node.js memory limitations, and also have something shareable between multiple nodes
[02:20] GriffenJBS: unomi: that is doable, but seems more like it fixes a problem in node/javascript that should be fixed, not worked around
[02:21] GriffenJBS: unomi: :-) I'll give you a gold star, that is a cleaver way to do it
[02:21] bradleymeck has joined the channel
[02:21] unomi: well, it is possible that V8 should return some information when it doubles its memory usage
[02:22] unomi: node.js processes are known to need recycling now and then, having it outside any given one is a good idea
[02:22] unomi: + you get the multinode core usage
[02:23] zikes has joined the channel
[02:24] jimt_ has joined the channel
[02:24] unomi: working with javascript is all about doing clever things with limited tools ;)
[02:24] jashkenas: node.js processes are fine ... if your code doesn't leak -- pretty fantastic actually. 
[02:24] matt_c has joined the channel
[02:25] jashkenas: I have one here that's been running for 6 months under moderate traffic, still sitting pretty at 4.5Mb of resident RAM.
[02:25] unomi: jashkenas, it is a very bad idea to rely on node.js processes not quitting arbitrarily
[02:25] unomi: or any kind of process for that matter
[02:25] jashkenas: sure, not to rely on it.
[02:25] jashkenas: I just mean that Node in and of itself doesn't leak.
[02:25] GriffenJBS: I'm working on a generic MRU memcache, the idea is to flush out LRU; that's the approach I'm trying, another is to have soft or weak references to objects, that can achieve the same idea
[02:25] mikeal has joined the channel
[02:26] Tim_Smart has joined the channel
[02:26] matt_c_ has joined the channel
[02:26] JimBastard: im trying to figure out the best way to do a session check for my single page app. right now i have a cookie and a session, but the only way i can determine who i am is to send an additional XHR when the page loads since my whole site is static html. 
[02:27] JimBastard: i guess its either do the additional XHR or implement server-side templating in the client
[02:27] sivy has joined the channel
[02:27] unomi: JimBastard, what do you mean 'who you are'? can't you put that in the cookie you get back?
[02:29] JimBastard: unomi: hrmmm
[02:29] unomi: one of the things I have seen in persevere is the clever use of response header 
[02:29] JimBastard: unomi: not really, i'd still have to do the additional request 
[02:29] unomi: so if a valid session is set, there is a response header of : username
[02:29] JimBastard: i have a session id
[02:29] JimBastard: its just a quirk of doing single page apps
[02:30] JimBastard: gotta do an additional XHR on ready
[02:30] unomi: Jimbastard, the client asks for a particular page, a session cookie is attached from the client. if the sessionID is valid a username is set / overwritten in the response
[02:30] JimBastard: unomi: yes, sessions, i have them
[02:30] Tim_Smar1 has joined the channel
[02:31] unomi: then I don't understand what you need the additional XHR for?
[02:31] JimBastard: you've logged into the site that lists your videos
[02:31] JimBastard: got a session and cookie
[02:31] JimBastard: reload the page
[02:31] JimBastard: gotta show your list of videos
[02:31] JimBastard: its a single page app
[02:32] jashkenas: Or, don't have the single page be static HTML.
[02:32] JimBastard: aye
[02:32] jashkenas: Include the bootstrap data in an inline <script> tag.
[02:32] JimBastard: thats what im debating
[02:32] jashkenas: zero XHRs to load the page. It's worth it.
[02:32] erlnoob has joined the channel
[02:32] JimBastard: do i introduce server-side templating, or eat the additional request
[02:32] jashkenas: you can still do the templating client-side.
[02:32] JimBastard: one script tag doesnt seem bad
[02:32] jashkenas: Just bootstrap the data.
[02:32] JimBastard: thanks jashkenas 
[02:32] unomi: JimBastard, how 'heavy' is the data?
[02:33] cjm: anyone here from ny?
[02:33] jashkenas: He's going to be requesting it anyway.
[02:33] unomi: you can go 4kb cookies
[02:33] JimBastard: aye
[02:33] jashkenas: cjm: yes.
[02:33] JimBastard: ny
[02:33] mw has joined the channel
[02:33] benburkert has joined the channel
[02:33] cjm: What type of stuff are you guys working on?
[02:33] unomi: bootstrapping data is an 'ok' way of getting the requests down.. otoh, you lose any caching of the html
[02:33] jashkenas: JimBastard: for the record, our _bootstrap partial looks like this: https://gist.github.com/705622
[02:33] JimBastard: cjm: http://www.youtube.com/watch?v=eRISZCk4IE0
[02:34] JimBastard: nodejitsu!
[02:34] jashkenas: unomi: you don't need to cache the HTML because it's effectively an empty body tag.
[02:34] jashkenas: unomi: how do you handle it?
[02:34] unomi: jashkenas, depends on where the sweet spot is ;)
[02:34] JimBastard: jashkenas: yeah, do you have a name for that? i was calling it the "base state" for the ajax application
[02:34] unomi: 4kb is quite a bit
[02:35] JimBastard: you call it "bootstrap" ?
[02:35] jashkenas: Yeah, bootstrap in your initial models... in our case, Accounts, Projects, and you.
[02:35] unomi: for single page apps the initial html is rarely just 'empty'
[02:35] unomi: because you want something to show up front
[02:35] JimBastard: unomi: unless you want the page to connect instantly
[02:36] bmizerany has joined the channel
[02:36] JimBastard: i've done some pages that started white and async loaded content in over time
[02:36] unomi: yeah, you can get a blank page pretty quickly :p
[02:36] chrischris has joined the channel
[02:36] JimBastard: yeah, blank page + jquery fade = woah
[02:36] JimBastard: at least sometimes
[02:36] unomi: but you'd like it to show some outline, waiting etc. 
[02:36] jashkenas: unomi: JS renders the page from the data, client-side... just like it's going to be rendered from there on out.
[02:36] jashkenas: There's nothing to wait for because the data is already bootstrapped.
[02:37] cjm: Oh awesome you're one of the nodejitsu guys, I signed up for the beta a few days ago. 
[02:37] jashkenas: And all of your views *are* statically cached, as JS.
[02:37] Tim_Smart has joined the channel
[02:37] meck has joined the channel
[02:37] Tim_Smar1 has joined the channel
[02:37] unomi: jashkenas, here is what I am saying, it depends on the size of your initial load. 
[02:38] unomi: does it cost more to invalidate the caching of it than the request you save?
[02:38] jashkenas: absolutely, in a huge way. the bootstrapped data is minimal and user specific.
[02:38] jashkenas: We get to DOMReady in 400ms-ish, and the entire UI is visible at that point.
[02:38] googol has joined the channel
[02:39] jashkenas: All of the heavy bits are statically cached with far-futures, because they're in JS.
[02:39] unomi: jashkenas, yes, I build these kinds of things as well :)
[02:39] jashkenas: yeah, that's why we're talking, right ;)
[02:39] agnat has joined the channel
[02:39] unomi: what I am saying is that you can get away with a heavier initial load page if you don't invalidate it
[02:40] JimBastard: cjm: nice! me and indexzero are working on it everyday! 
[02:40] jashkenas: I'll concede the point ... if the main HTML page is heavy and slow to render. it's better to put your data in an external script or XHR. If the main HTML is empty or light, it's better to bootstrap inline.
[02:40] jashkenas: fair enought?
[02:40] unomi: that is, you could move more of your js into your loading page, save the request on it and use it for user data
[02:40] JimBastard: we've been sending out accounts as fast as we can :-)
[02:40] cjm: we're a ny startup looking for more devs working with node and good node hosting solutions 
[02:40] davidascher has joined the channel
[02:40] JimBastard: cjm: we should definitely link up 
[02:41] unomi: jashkenas, yes, there are many ways to skin a cat is what I am saying, and which one you choose should depend on the cat and the tools 
[02:41] EGreg: guys
[02:41] jesusabdullah: data, you say?
[02:41] EGreg: how do I access php sessions with node.js
[02:41] jesusabdullah: i like data
[02:41] EGreg: they seem to be compiiled into a:[];s:3847
[02:41] EGreg: that kid of stuff
[02:42] Aria: Parse that
[02:42] JimBastard: EGreg: you can parse the incoming request?
[02:42] luke` has joined the channel
[02:42] EGreg: what are you talking about, jimbastard, what request
[02:42] Aria: php serialize format
[02:42] EGreg: yeah, how do I parse that format in node.js? Are there any libs
[02:42] MetaJake_ has joined the channel
[02:43] unomi: jashkenas, what I am also saying is that if you have less than 4kb of user data, you can pop that into a onetime cookie
[02:43] Aria: Not that I know of
[02:43] Aria: But it's a simple format
[02:43] JimBastard: unomi: the only thing i like in my cookies are a key and token
[02:43] EGreg: oh yeah, what's the format?
[02:43] EGreg: I don't think it's so simple
[02:44] unomi: JimBastard, well, your server should never count too much on the content of that cookie
[02:44] unomi: but the other way around works ok
[02:45] Aria: It's php's serialize
[02:45] unomi: all it means is that when the initial load occurs, there are additional response headers ( packed into a cookie for convenience if you want)
[02:45] Aria: sort of like kson in concept
[02:45] Aria: er   json
[02:45] EGreg: aha, hurray for phpjs!
[02:46] jashkenas: unomi: what app are you working on, btw...
[02:47] jamescarr: EGreg, no
[02:47] jamescarr: Hmmm... I need to get my act together and put together my app for people to interact with at the node,js bootcamp
[02:47] EGreg: when is this bootcamp?
[02:48] jamescarr: next week :0
[02:48] jamescarr: it's a half day node.js bootcamp to get people immersed into node.js
[02:49] unomi: jashkenas, tools for software project management
[02:50] unomi: ticketing, feature planning etc
[02:51] unomi: yourself?
[02:52] jakehow has joined the channel
[02:52] jashkenas: documentcloud ...
[02:53] unomi: backbone.js looks very nice :)
[02:53] bradleymeck has joined the channel
[02:54] jamescarr: thinking of making a friendfeed clone that people can interact with via websockets, http, or amqp during the bootcamp
[02:55] EGreg: what's a friendfeed clone gonna do
[02:55] benburkert has joined the channel
[02:56] jamescarr: not even friend feed, just some little thing that people can post messages, binary data, etc to and see show up
[02:56] msilverman2 has joined the channel
[02:56] brianmario has joined the channel
[02:56] jamescarr: it's more of an exercise in the networking related stuff available ;)
[02:59] galaxywatcher has joined the channel
[03:00] jpld has joined the channel
[03:00] markwubben has joined the channel
[03:06] bmizerany has joined the channel
[03:09] jimt has joined the channel
[03:10] tim_smart has joined the channel
[03:10] o_o has joined the channel
[03:13] tylerstalder has joined the channel
[03:13] braddunbar has joined the channel
[03:13] mbrochh: i want to screen scrape an airlines website in order to monitor the price development of a flight...
[03:13] mbrochh: unfortunately when entering the URL to that flight, an iframe is loaded with a loading animation, after some seconds the iframe updates iteslf and shows the real information
[03:14] mbrochh: is it possible to scrape something like this with node.js?
[03:14] tim_smart: mbrochh: Sure, just look in firebug for the external resource that is loading
[03:14] mbrochh: you mean in the iframe?
[03:14] tim_smart: Yuo
[03:14] tim_smart: Yup
[03:15] mbrochh: i tried that
[03:15] mbrochh: it seems as if some session key gets baked into the iframe url
[03:15] mbrochh: so when i enter that url into another browser i get a page not found error
[03:15] mbrochh: oh me stupid
[03:15] tim_smart: OK. Then you will need to scrape the session id first.
[03:15] mbrochh: yep
[03:15] mbrochh: :)
[03:16] mbrochh: would i use http.createClient for this?
[03:16] tim_smart: Yeah
[03:16] mbrochh: i can't figure out how to make requests against https resssources
[03:16] tim_smart: Set the port to 443, and setSecure()
[03:17] tim_smart: http://nodejs.org/api.html#http-createclient-192
[03:17] jimt_ has joined the channel
[03:18] hassox has joined the channel
[03:18] mbrochh: when i try this: var google = http.createClient(80, 'https://www.klm.com', secure=true); i get Error: error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol
[03:19] tim_smart: var client = http.createClient(443, 'https://www.klm.com', true);
[03:19] tim_smart: sorrt
[03:20] sh1mmer has joined the channel
[03:21] marus25 has joined the channel
[03:21] tim_smart: sorry*
[03:21] softdrink has joined the channel
[03:21] tim_smart: var client = http.createClient(443, 'www.klm.com', true);
[03:21] tim_smart: var client = http.createClient(443, 'www.klm.com', true);
[03:22] tim_smart: Damn flaky internet...
[03:22] mbrochh: sweet
[03:22] mikew3c has joined the channel
[03:23] marus25: Hey all; anyone have any examples of doing secure socket communication (non-HTTP - using net.Server and net.Stream) in node.js
[03:24] jimt has joined the channel
[03:25] tim_smart: marus25: Nope.
[03:25] hij1nx has joined the channel
[03:26] bbttxu has joined the channel
[03:27] hij1nx: what up JimBastard 
[03:27] JimBastard: chillin
[03:27] JimBastard: sup
[03:27] hij1nx: hacking on some nodejitsu with indexzero
[03:28] mbrochh: tim_smart,  is it possible to manipulate the mimetype for the http client?
[03:28] mbrochh: arg 
[03:28] mbrochh: not mimetype
[03:28] mbrochh: useragent
[03:29] Fullmoon has joined the channel
[03:29] tim_smart: mbrochh: Yeah, just set the 'User-Agent' header
[03:29] cloudhead has joined the channel
[03:29] fly-away has joined the channel
[03:30] jimt_ has joined the channel
[03:30] JimBastard: hij1nx: you doing any work on client? im working on that atm
[03:33] hij1nx: JimBastard: no im on admin
[03:34] mscdex: marus25: for net.Stream, you just call the setSecure() method after calling createConnection.
[03:34] mscdex: marus25: for net.Server, you just call setSecure() on the stream argument for your connection listener
[03:34] tim_smart: mscdex: Also you will have to listen for 'secure' on the server side
[03:34] tim_smart: Then setSecure
[03:35] mscdex: i bet someone has examples somewhere
[03:35] tim_smart: Rather, then do the exchange
[03:36] tim_smart: Just toy around until you get it working :)
[03:37] mscdex: marus25: there you go, that ought to get you started :p
[03:37] ossareh has joined the channel
[03:38] aconbere has joined the channel
[03:40] theBigZ has joined the channel
[03:41] MetaJake has joined the channel
[03:41] tk has joined the channel
[03:41] jamescarr: heh... who wants to make a SOAP client in node.js :)
[03:42] davidascher has joined the channel
[03:43] mscdex: nobody
[03:43] derferman has joined the channel
[03:43] mscdex: soap = :-(
[03:43] mscdex: isn't there a json-based alternative?
[03:45] mscdex: REST!
[03:46] rbranson: soap is just so fucking complicated
[03:47] rbranson: with very little return on the effort
[03:48] cataska has joined the channel
[03:48] rbranson: it's somewhat beneficial to static environments where you've got to build stubs/skeletons for the calls, as well as it allows fancy IDEs to do things like code completion and service discovery
[03:48] rbranson: none of which is useful to the JS community
[03:51] Twelve-60 has joined the channel
[03:52] marus25: mscdex/tim_smart: so from what i'm understanding after I do net.createConnection - i should call setSecure on the result of that; and that should trigger the secure event on the server stream that was created in the server
[03:52] tim_smart: marus25: The secure event is fired when the handshake succeeds
[03:54] marus25: tim_smart: I've tried a few things - with little success - I've called setSecure on both the server and client - but I don't get  a secure event happen
[03:57] mbrochh has joined the channel
[03:57] tim_smart: marus25: Well you need to setup the certificates and things on the server side, which I have no experience with. If pquerna is around, he might be able to help.
[03:58] rwaldron_ has joined the channel
[03:58] bradleymeck has joined the channel
[03:58] marus25: I've made a set of self-signed certificates - that i was trying to use on the server side
[03:59] davidascher has joined the channel
[03:59] EGreg: how do I read/write php sessions with node.js?
[03:59] Aria: Parse the files.
[03:59] Aria: Or, have PHP store the session differently in a way you can read.
[04:00] siculars has joined the channel
[04:04] ooooPssss has joined the channel
[04:06] Kai_ has joined the channel
[04:06] Kai_: How do I include a js file? require won't let it use variables from the program.
[04:07] EGreg: aria: well, I can't really store the session differently because it's hard to capture everythign the php serializing thing does
[04:07] marus25: tim_smart: thanks for you help - I think i've got it working - looks like the problem were with my self-signed cert that I created
[04:07] EGreg: so the question is, how do I decipher the php session serializing function
[04:08] pifantastic has joined the channel
[04:08] Aria: It's a simple format.
[04:09] mscdex: EGreg: it's easier said than done. supposedly the unserialize on phpjs works, but i found that it didn't work all the time
[04:09] Aria: A parser would be fifty lines or so.
[04:09] marus25 has left the channel
[04:09] Aria: (Or you could serialize as json in PHP...)
[04:09] marus25 has joined the channel
[04:09] Aria: (Just write a custom session handler function)
[04:10] mscdex: i ended up cheating and using a regex on the session file contents
[04:10] mscdex: :p
[04:11] Aria: Hehe.
[04:11] mu-hannibal has joined the channel
[04:11] mikeal has joined the channel
[04:11] Aria: You'd use session_set_save_handler
[04:13] EGreg: Aria: I couldn't find any documentation of the format
[04:13] ben_alman has joined the channel
[04:13] EGreg: of php sessions
[04:14] EGreg: I don't think JSON would capture everything... for eample the distinctons between arrays and objects, and what type of object
[04:14] Aria: Indeed. Depends on your use case.
[04:15] cloudhead: anyone know why I'm getting GET requests to the current url, when using Socket.io, which result in 404s?
[04:15] dguttman has joined the channel
[04:15] EGreg: Well, I am investigating whteher to change the session save handler, or deciphering the native one with Node.js . I would prefer the first one
[04:19] theBigZ has joined the channel
[04:22] noahcampbell has joined the channel
[04:25] pquerna: https://developer.mozilla.org/en/JavaScript_typed_arrays
[04:25] sh1mmer has joined the channel
[04:27] wilmoore has joined the channel
[04:28] guybrush: anyone familier with sarissa (javascript xslt-lib)?
[04:28] MetaJake has joined the channel
[04:30] Aikar: anyone know of the new way to pass FD's to a child process in master?
[04:30] Aikar: i'm trying to pull off http://www.flickr.com/photos/kiwikewlio/4788061306/in/photostream/
[04:31] hassox has joined the channel
[04:32] hassox has joined the channel
[04:37] a_meteorite has joined the channel
[04:39] aconbere has joined the channel
[04:39] MikhX has joined the channel
[04:47] vdrab has joined the channel
[04:53] sprout has joined the channel
[04:54] atmos has joined the channel
[05:01] dnolen has joined the channel
[05:03] jimt has joined the channel
[05:04] twoism has joined the channel
[05:05] tim_smart has joined the channel
[05:08] jimt_ has joined the channel
[05:11] joemccann has joined the channel
[05:12] joemccann: yo
[05:12] joemccann: an
[05:12] sivy has joined the channel
[05:12] joemccann: anyone familiar with how to take a base64 encoded string and convert to an image and write it to disk?
[05:13] joemccann: var filename = 'test.jpg'
[05:13] joemccann: fs.write(__dirname + "/" + filename, base64.decode(foo), 0, foo.length, null, function(err, written){
[05:13] joemccann: 	if(err)throw err;
[05:13] joemccann: 	console.log(written)
[05:13] joemccann: })
[05:13] jimt has joined the channel
[05:13] joemccann: where foo is a base64 encoded string
[05:13] Aria: Ah, a jpeg image that's been base-64 encoded.
[05:13] joemccann: exactly
[05:13] joemccann: so foo is the string
[05:13] atmos: why wouldn't you write it to disk in jpg format ?
[05:13] Aria: I believe that's the idea
[05:13] atmos: oh you're decoding
[05:13] joemccann: i need to write the string as a jpeg to disk
[05:13] joemccann: yeah
[05:13] joemccann: decoding
[05:14] tim_smart has joined the channel
[05:14] atmos: foo is base64 encoded and coming in from a web request ?
[05:15] joemccann: yeah
[05:15] joemccann: so it is just a string
[05:15] joemccann: https://gist.github.com/raw/711297/b76e8db8ca7b27fcd0f326e771b39c08c38f1b7c/base64img.jpg
[05:15] joemccann: https://gist.github.com/711297
[05:15] joemccann: sorry, the 2nd gist is the JS
[05:16] joemccann: i've included the base64 module as well
[05:16] joemccann: it is in fact decoding, but im not sure how to basically convert the string BACK to an image and write it to disk
[05:17] atmos: it should just work
[05:17] atmos: normally there's options to write things in binary/ascii/utf-8
[05:17] joemccann: copy/paste the gist and see if it works for u
[05:17] joemccann: i'm wondering if there is an encoding i need to set
[05:20] joemccann: the error i get is:
[05:20] joemccann: node.js:63
[05:20] joemccann:     throw e;
[05:20] joemccann:     ^
[05:20] joemccann: TypeError: Bad argument
[05:20] atmos: yeah
[05:20] atmos: your fs.write call is screwy
[05:21] joemccann: so im wondering if the 
[05:21] joemccann: base64.decode(foo)
[05:21] joemccann: is not actually a buffer?
[05:21] joemccann: it should be tho
[05:21] joemccann: yeah it is a string, not a buffer
[05:21] joemccann: how can i convert the string to a buffer?
[05:22] atmos: i think you can just new Buffer(foo) in your example
[05:22] twoism has joined the channel
[05:22] joemccann: yeah, but i may need the base64 encoding sent as the second param
[05:24] a_meteorite has joined the channel
[05:24] joemccann: var bar = new Buffer(foo, "base64");
[05:24] joemccann: console.log(typeof bar)
[05:24] joemccann: no dice
[05:24] ysynopsis has left the channel
[05:25] jamund has joined the channel
[05:26] atmos: https://gist.github.com/711308
[05:26] atmos: stil errors though
[05:28] admc has joined the channel
[05:28] tim_smart has joined the channel
[05:28] joemccann: yeah so the real question is
[05:28] joemccann: how does one take a base64 encoded string
[05:28] joemccann: decode it
[05:29] joemccann: write it to a file with node
[05:29] joemccann: ?
[05:29] atmos: where are the base64 docs ?
[05:30] joemccann: https://github.com/pkrumins/node-base64
[05:30] joemccann: pretty straightforward
[05:30] atmos: are you sure that foo is base64 there ?
[05:31] joemccann: yeah it is
[05:32] mu-hannibal has joined the channel
[05:32] atmos: dunno man, gotta grab dinner
[05:32] atmos: good luck
[05:33] mikeal has joined the channel
[05:33] joemccann: thx
[05:33] evanmeagher has joined the channel
[05:36] Viriix has joined the channel
[05:37] ajpiano has joined the channel
[05:39] sivy has joined the channel
[05:42] robotarm_ has joined the channel
[05:44] hassox has joined the channel
[05:46] ajpiano has joined the channel
[05:48] evanmeagher has joined the channel
[05:50] jacobolus has joined the channel
[05:51] sergeb has joined the channel
[05:51] Rixius has joined the channel
[05:55] richcollins has joined the channel
[05:55] Me1000 has joined the channel
[05:56] mbrochh has joined the channel
[06:00] jimt has joined the channel
[06:01] echosystm has joined the channel
[06:01] echosystm: hi all
[06:01] echosystm: does anyone here have experience with the ajax.org framework?
[06:03] echosystm: or sproutcore
[06:05] Aikar: lol the opening phrase on ajax.org kinda discredits that site to me
[06:07] Rixius: personally, I suggest tailoring jQuery to your need, or going all out with Dojo
[06:08] saikat: echosystm: i've been using cappuccino for the past year and a half
[06:08] saikat: and very happy with it - it's similar to sproutcore in terms of the types of apps you build with it
[06:08] mikeal: i don't really buy in to big frameworks
[06:08] echosystm: jQuery an Dojo are not what i need
[06:08] echosystm: i need more comprehensive frameworks
[06:08] echosystm: like extjs, cappuccino, sproutcore, GWT, ajax.org etc.
[06:09] saikat: i don't really buy into absolute statements about tools ;)
[06:09] Rixius: what about Dojo isn't comprehensive?
[06:09] Rixius: also like extjs and GWT
[06:09] Rixius: but I don't like the idea of a sub-language like cappuccino
[06:09] echosystm: the two main points are that dojo has no build tools and it doesnt have as many widgets as the others
[06:10] saikat: it's not a very hard language to pick up
[06:10] saikat: and it comes with its advantages
[06:10] saikat: i didn't have any prior objective-c or JS experience before i started my web app
[06:10] saikat: and it took about 2 weeks to make a prototype with cappuccino
[06:10] Rixius: as far as build tools go I'd use plain Make personally
[06:11] saikat: echosystm: what are you trying to build?
[06:11] echosystm: a JS client for restful ws
[06:12] saikat: all the frameworks you described
[06:12] echosystm: i have a lot of different projects i need to use this for
[06:12] saikat: are entirely client-side frameworks
[06:12] saikat: so it would depend a lot on what you want the client to do
[06:12] saikat: but if you are making a dumb client, i agree that such a large framework might not be what you are looking for
[06:13] echosystm: i know what im after, ive written a lot of apps like this before
[06:13] mikeal: jquery is a library for dom manipulation
[06:13] mikeal: it's not really a "framework"
[06:13] echosystm: basically my previous job was 70% extjs
[06:13] mikeal: which i enjoy
[06:13] echosystm: but i dont want to ask my employer to shell out licenses for the entire team
[06:13] saikat: ok
[06:13] echosystm: so i need a FOSS alternative
[06:13] mikeal: ext, dojo, yui, it's all a lot of stuff and when you opt in you basically opt for the entire stack
[06:13] saikat: well i guess i recommend cappuccino but i have little experience with the comparable alternatives
[06:13] jesusabdullah: extjs costs money?
[06:13] jesusabdullah: For commercial use?
[06:14] echosystm: yes
[06:14] mikeal: it's GPL
[06:14] mikeal: you can use for pretty much anything unless you need to make modifications to it
[06:14] saikat: that's not entirely true
[06:14] mikeal: also, if you ever challenged their copyright they would probably lose
[06:14] saikat: it's dual licensed
[06:14] echosystm: thats completely not true mikeal
[06:14] mikeal: :)
[06:14] saikat: last i checked
[06:14] mikeal: a ton of the code is straight up out of YUI
[06:14] mikeal: or at least it was
[06:15] echosystm: because its GPL, you can't redistribute it with closed-source software
[06:15] saikat: well there is an easy way to check this =)
[06:15] Aria: Or you can, but you have to redistribute it.
[06:15] saikat: http://www.sencha.com/products/license.php
[06:15] Aria: But the definition of 'derivative work' is tricky with Javascript and GPL
[06:15] echosystm: "if you wish to derive a commercial advantage by not releasing your application under an open source license, you must purchase an appropriate number of commercial licenses from Sencha."
[06:15] mikeal: it's a js framework, you are unlikely to "distribute" it
[06:15] mikeal: but if you make modifications getting them back in is going to be close to impossible
[06:16] mikeal: so be prepared to keep a public fork
[06:16] BHSPitMonkey: I'm having some weird stability problems with socket.io :(
[06:16] saikat: BHSPitMonkay: what are you seeing
[06:16] mikeal: echosystm: they can say whatever they want, they offer it under the GPLv3 so the public has rights to it under those terms
[06:16] BHSPitMonkey: Certain users' connections just disconnect inexplicably
[06:16] echosystm: anyhow, i'm looking mostly at sproutcore and ajax.org... YUI, GWT, Capuccino don't float my boat
[06:16] BHSPitMonkey: It's never happened to me in Chromium on any of my machines
[06:16] echosystm: has anyone used either of those?
[06:17] saikat: BHSPitMonkay: any idea which transport it's happening with
[06:17] mikeal: my experience with sproutcore wasn't positive
[06:17] mikeal: never used ajax.org
[06:17] BHSPitMonkey: But I just saw it happen on a Windows XP Chrome 
[06:17] joemccann has joined the channel
[06:17] BHSPitMonkey: echosystm: ^ (websocket)
[06:17] Rixius has left the channel
[06:17] saikat: your internet connection is fine?
[06:18] BHSPitMonkey: Yep
[06:18] echosystm: it seems to me like sproutcore was thrown together by a bunch of mac fanboys who wanted cocoa in javascript
[06:18] mikeal: that's mostly accurate :)
[06:18] saikat: BHSPitMonkay: off the top of my head, check your FD limits on your machine
[06:18] echosystm: theres some retarded things like YES and NO constants instead of true/false
[06:18] BHSPitMonkey: FD limits?
[06:18] saikat: i was seeing similar things at around 300 concurrent users, i was running out of file descriptors
[06:18] saikat: FD = file descriptor
[06:18] mikeal: i'm not a fan of toolkits and frameworks that are heavily invested in something that isn't javascript
[06:18] saikat: you can check (and adjust) with ulimit
[06:18] Anti-X has joined the channel
[06:18] saikat: though ulimit adjusts it temporarily
[06:18] BHSPitMonkey: saikat: I just observed the problem in XP
[06:18] saikat: the server is running in XP?
[06:19] mikeal: i'm guessing that ajax.org is at least really in to javascript :)
[06:19] ceej has joined the channel
[06:19] saikat: echosystm: it's not instead, it's on top of
[06:19] echosystm: i wouldnt mind using GWT, but its REST support seems to really suck
[06:19] BHSPitMonkey: saikat: oh, I just realized you meant server-side.
[06:19] saikat: because objective-c uses YES/NO but you can use true/false
[06:19] saikat: but yeah if it doesn't float your boat not going to try to push it =)
[06:20] Aria: "REST support"? like making regular HTTP calls?
[06:20] BHSPitMonkey: saikat: any particular ulimit flags? just ulimit alone returns "unlimited"
[06:20] echosystm: like having any kind of automagic databinding for rest resources
[06:20] saikat: ah sor
[06:20] saikat: ulimit -n
[06:20] mikeal: ulimit -n 4096
[06:20] BHSPitMonkey: 1024
[06:20] mikeal: sudo
[06:20] echosystm: it all seems to be locked down to GWTRPC and that new thing... i forget what its called
[06:21] saikat: but beware that
[06:21] saikat: if you restart the process
[06:21] saikat: in a different shell instance
[06:21] BHSPitMonkey: any way to check if FD's are even the issue?
[06:21] saikat: without setting ulimit -n first
[06:21] BHSPitMonkey: I've only had a few connections
[06:21] saikat: BHSPitMonkey: a few ways
[06:21] mikeal: BHSPitMonkay: you'd get an error that was something on the order of "no such file descriptor"
[06:21] saikat: oh, how many?
[06:21] saikat: mikeal: not necessarily
[06:21] mikeal: or, it would be a timeout in EPOLL or EPIPE
[06:21] BHSPitMonkey: maybe 20 or 30 since this process started
[06:22] saikat: hm, yeah it doesn't seem like you'd hit a limit with that
[06:22] BHSPitMonkey: there were no errors
[06:22] saikat: i also didn't used to get errors
[06:22] saikat: just dropped connections
[06:22] BHSPitMonkey: the ondisconnect got called normally on both ends
[06:22] mikeal: that's quite odd
[06:22] saikat: but BHSPitMonkey another way is to try to do a simple benchmark
[06:22] mikeal: didn't a ton of changes just drop in to socket.io?
[06:22] saikat: using websocket-bench or whatever it is
[06:22] saikat: wsbench i think
[06:22] mikeal: to cover the latest version of the spec
[06:23] saikat: er
[06:23] BHSPitMonkey: how often do I need to git-pull the socket.io node module?
[06:23] saikat: yes to 1, i don't think it had to do with the spec though
[06:23] jimt_ has joined the channel
[06:23] mikeal: i was in here when they were making some of the changes and it was
[06:23] mikeal: i think latest Chrome or FF beta actually implemented it
[06:23] BHSPitMonkey: I'll try updating socket.io
[06:24] BHSPitMonkey: and node I guess
[06:24] saikat: mikeal: interesting - i'm looking at the commits - do you know if it was on a separate branch?
[06:24] mikeal: some of the changes were going in to node code
[06:24] xilostech has joined the channel
[06:24] mikeal: er node core
[06:27] saschagehlich has joined the channel
[06:28] mikeal: has anyone actually used WebSockets on iOS yet?
[06:29] hij1nx has joined the channel
[06:30] murz has joined the channel
[06:31] dnolen: mikael: I have
[06:31] dnolen: mikeal: works great.
[06:31] mikeal: awesome
[06:31] BHSPitMonkey: Yikes, I updated socket.io to latest git and now I can't connect at all
[06:31] mikeal: i'm mostly stoked on the new font support
[06:33] BHSPitMonkey: My server.js is initializing socket.io fine it appears, but my client no longer connects
[06:33] BHSPitMonkey: it tries, and the node stdout says "Connected" then "Disconnected"
[06:35] xilostech: WebSocket connection invalid or Origin not verified
[06:35] xilostech: anyone try to run socket.io behind Apache w/ mod_proxy? I'm getting some websocket degradation
[06:35] bartt has joined the channel
[06:36] matjas has joined the channel
[06:38] Aikar: for those who havent heard, north korea just attacked(bombed) south korea :/ http://www.reuters.com/article/idUSTRE6AM0TZ20101123
[06:38] Aria: Whoa.
[06:39] Aria: Thanks for the heads up.
[06:39] BHSPitMonkey: wow
[06:40] Aikar: http://news.google.com/news/more?pz=1&cf=all&ned=us&ncl=dY7BnJyYqrQePOMNChEMcz-rEoQLM
[06:41] jimt has joined the channel
[06:42] captain_morgan has joined the channel
[06:42] mape: christ..
[06:47] Lorentz: I'm glad I'm not in SKorea right now.
[06:48] guybrush: doesn't matter when they use nuclear bombs
[06:50] quirkey has joined the channel
[06:50] captain_morgan has joined the channel
[06:50] muk_mb: is there something convenient to help generate web-service API docs?
[06:52] viirya has joined the channel
[06:52] Aikar: muk_mb: http://jsdoc.sourceforge.net/ ?
[06:53] muk_mb: that generates code documentation
[06:53] mape: http://korea.mape.me/ if you want a real time twitter feed over tweets related to korea
[06:53] muk_mb: I mean documenting the web-service, HTTP requests and such
[06:53] peutetre has joined the channel
[06:54] Aikar: mape: thats too fast to even read lol
[06:54] MikhX has joined the channel
[06:54] mape: Aikar: If something big happens I'm sure you'll see it over and over
[06:55] jimt has joined the channel
[06:55] captain_morgan has joined the channel
[06:58] dev__ has joined the channel
[06:59] Aikar: my child_process is throwing an error on 3 of 8 worker spawns 90% of the time, https://gist.github.com/711383  how can i see the error? 
[07:00] dev__: is it possible to run node script in background? like :  exec("node server.js",['>>','/dev/null','&']);
[07:01] Aikar: dev__: npm install fork then you can call require('fork').daemonize();
[07:02] dev__: Thanks Aikar ... let me do that
[07:02] nsolsen has joined the channel
[07:02] Aikar: https://gist.github.com/711387   example
[07:02] Aikar: i use it to do ./script.js start subapp
[07:03] dev__: Aikar:  Ok
[07:04] fitzgen has joined the channel
[07:04] hassox has joined the channel
[07:04] fitzgen: Lost my npm username/password combo, anyone know how to remedy the situation?
[07:06] richcollins has joined the channel
[07:06] captain_morgan has joined the channel
[07:06] Kai_ has joined the channel
[07:08] jimt_ has joined the channel
[07:08] fitzgen has left the channel
[07:08] tim_smart: fitzgen: Contact Isaac.
[07:10] fangel has joined the channel
[07:10] twoism has joined the channel
[07:11] evanmeagher has joined the channel
[07:13] captain_morgan has joined the channel
[07:16] Aikar: since when do you need an npm user/pass O.o?
[07:17] derren13 has joined the channel
[07:18] sh1mmer: Aikar: hm?
[07:18] Aikar: < fitzgen> Lost my npm username/password combo, anyone know how to remedy the situation? 
[07:18] sh1mmer: Anyone have thoughts on couchdb drivers?
[07:19] sh1mmer: hm. he quit. weird.
[07:21] MiiCode2 has joined the channel
[07:22] langworthy has joined the channel
[07:25] themiddleman has joined the channel
[07:25] ivanfi has joined the channel
[07:27] mscdex: Aikar: for uploading packages to the repository
[07:27] Aikar: ah
[07:27] mscdex: at least
[07:30] mape: Aikar: It now pauses the feed if you focus the window
[07:30] mape: So you can click, read through and still have it running in the background
[07:32] jimt has joined the channel
[07:35] dev__: Aikar: It perfectly worked!
[07:35] V1 has joined the channel
[07:35] Aikar: grats
[07:35] dev__ has left the channel
[07:36] Aikar: well i got the code to do load balancing in node working sorta under .3.1
[07:37] jimt has joined the channel
[07:37] Aikar: just some reason some of the workers die on spawn
[07:38] Aikar: i bet the socket isnt fully ready when they connect, lemme try fixing that
[07:43] Aikar: yep that seems to of been it, i had the workers spawning immediately after calling .listen instead of inside a listen callback
[07:46] mikew3c has joined the channel
[07:46] springify has joined the channel
[07:47] mikeal has joined the channel
[07:49] langworthy has joined the channel
[07:49] captain_morgan has joined the channel
[07:50] Garo_: any particular reaspon why many node.js writers prefer to write requireds like this: var module1 = require(...), module2 = require(...); instead of var module1 = require(...); var module2 = require(...); In my opinion the former is superior because 1) it makes copy-pasting require statements easier and 2) adding new require() statement doesn't require the writer to first replace last ; with , and then writing the new statement to new line.
[07:52] erlnoob: just wondering which redis library are you guys using?
[07:53] captain_morgan has joined the channel
[07:53] xilostech: Garo_: I was also wondering about that. I wonder if the V8 engine combines statements to save 1 or 2 ticks. It's pretty ugly the way it is.
[07:53] Aikar: well, if you press enter before the ; your not replacing it ;)
[07:54] Garo_: xilostech: I doubt that the speed would be any factor, the require statements are after all done only once in the beginning of the program
[07:54] Aikar: i think mainly people do it since it looks a lil cleaner, not repeating var everywhere
[07:55] Garo_: the beauty is in the eye of beholder - I think writing var into each line is much better :)
[07:56] xilostech: so purely cosmetic then
[07:56] xilostech: maybe i wanted a deeper meaning  :)
[07:56] Garo_: except that writing var to each line makes copy-pasting easier
[07:57] Aikar: for copy pasting yeah i think everyone agrees its easier to copy lol
[07:57] mbrochh has joined the channel
[07:58] mscdex: extra 'var's just clutter things up :-)
[07:58] mscdex: plus you can do things like indent each declaration on a new line so that the variable names line up
[07:58] luke` has joined the channel
[07:58] mscdex: spiffy things like that
[08:00] ivanfi has joined the channel
[08:00] sriley has joined the channel
[08:04] captain_morgan has joined the channel
[08:05] ph^ has joined the channel
[08:05] mAritz has joined the channel
[08:06] fangel has joined the channel
[08:08] simme has joined the channel
[08:09] SamuraiJack has joined the channel
[08:09] captain_morgan has joined the channel
[08:10] dguttman has joined the channel
[08:13] JojoBoss has joined the channel
[08:14] kawaz_home has joined the channel
[08:15] captain_morgan has joined the channel
[08:16] jimt_ has joined the channel
[08:19] stephank has joined the channel
[08:22] delapouite has joined the channel
[08:22] jimt has joined the channel
[08:25] faust45 has joined the channel
[08:26] [AD]Turbo has joined the channel
[08:27] DoNaLd`: cloudhead: alive ?
[08:27] virtuo_ has joined the channel
[08:27] derferman has joined the channel
[08:28] [AD]Turbo: hi there
[08:28] EGreg_ has joined the channel
[08:28] DoNaLd`: has cradle some metod for authorization to my CouchDB ?
[08:28] DoNaLd`: cloudhead: ^^
[08:31] captain_morgan has joined the channel
[08:31] markwubben has joined the channel
[08:34] Druid_ has joined the channel
[08:36] margle has joined the channel
[08:38] captain_morgan has joined the channel
[08:40] tanepiper: DoNaLd`: he's based in Canada, it'll be the middle of the night
[08:40] tanepiper: probably bug him in around 4~5 hours
[08:41] DoNaLd`: tanepiper: ok thanx
[08:42] herbySk has joined the channel
[08:47] masahiroh has joined the channel
[08:51] slaskis has joined the channel
[08:54] Athox has joined the channel
[08:55] ctp has joined the channel
[08:55] dguttman has joined the channel
[08:56] mgutz has joined the channel
[08:57] captain_morgan has joined the channel
[08:58] ntelford has joined the channel
[08:59] adambeynon has joined the channel
[09:04] captain_morgan has joined the channel
[09:04] sveimac has joined the channel
[09:05] jbergstroem has joined the channel
[09:07] jbergstroem: hai. i'm having issues using the new cmake system - http://pb.lericson.se/p/cqTUIB/ . should i file an issue before digging into it? 
[09:08] derferman has joined the channel
[09:08] mbrochh has joined the channel
[09:08] mscdex: cmake. cmake run. :-D
[09:09] javruben has joined the channel
[09:09] jbergstroem: hm, it apparently deletes everything under deps/v8/
[09:09] mscdex: yikes
[09:10] sixtus42 has joined the channel
[09:10] sixtus42 has left the channel
[09:11] mbrochh has joined the channel
[09:11] captain_morgan has joined the channel
[09:15] sriley has joined the channel
[09:15] ewdafa has joined the channel
[09:16] nsolsen has joined the channel
[09:17] tisba has joined the channel
[09:18] captain_morgan has joined the channel
[09:23] jbergstroem: looks like the ry/node master needs to pull stuff from palm/node cmake-master
[09:23] TomY has joined the channel
[09:25] mikedeboer has joined the channel
[09:27] kawaz_h has joined the channel
[09:28] jetienne has joined the channel
[09:28] tg has joined the channel
[09:29] cainus_ has joined the channel
[09:32] keltus has joined the channel
[09:32] keltus has joined the channel
[09:33] christophsturm has joined the channel
[09:36] saschagehlich has joined the channel
[09:37] lmorchard has joined the channel
[09:41] danslo has joined the channel
[09:44] springify has joined the channel
[09:44] brianmario has joined the channel
[09:47] caolanm has joined the channel
[09:47] caolanm: morning all :)
[09:48] xla has joined the channel
[09:49] markwubben has joined the channel
[09:53] mscdex: still night as far as i'm concerned ;-)
[09:53] mscdex: despite it going on 5am
[09:57] mbrochh has joined the channel
[09:58] SamuraiJack has joined the channel
[09:59] confoocious has joined the channel
[09:59] markwubben has joined the channel
[10:01] Akufen has joined the channel
[10:01] Akufen has joined the channel
[10:02] christophsturm: caolanm: w
[10:02] christophsturm: oops
[10:02] christophsturm: caolanm: why does nodeunit use process reallyExit ?
[10:02] christophsturm: i need to clean up some things in my on exit callback and reallyExit does not call that
[10:03] Jonasbn_ has joined the channel
[10:06] tim_smart has joined the channel
[10:08] kawaz_home has joined the channel
[10:10] cefn has joined the channel
[10:12] romainhuet has joined the channel
[10:13] mpoz2 has joined the channel
[10:13] Locke23rus has joined the channel
[10:13] teemow has joined the channel
[10:14] caolanm: christophsturm: I'm not sure, I'll take a look at the commits and see if a reason is given
[10:14] caolanm: christophsturm: you can probably change it to call process.exit instead
[10:16] omarkj has joined the channel
[10:17] tylergillies has joined the channel
[10:18] Fullmoon has joined the channel
[10:20] saschagehlich has joined the channel
[10:21] tim_smart has joined the channel
[10:22] cefn has joined the channel
[10:23] markwubben has joined the channel
[10:24] cefn has left the channel
[10:25] captain_morgan has joined the channel
[10:26] caolanm: christophsturm: https://github.com/caolan/nodeunit/commit/d3d0c2e19f0d2ac90acc8e672cc082078128c3f6
[10:26] caolanm: sadly I didn't give any reason for using reallyExit
[10:27] caolanm: feel free to update it, and provided it still exits with the correct code I'll accept as a patch
[10:27] christophsturm: ok thanks
[10:30] c0nde has joined the channel
[10:35] msilverman2 has joined the channel
[10:36] markwubben has joined the channel
[10:38] saschagehlich has joined the channel
[10:38] mAritz: how do you guys keep your client(browser) libs up to date in your app repos? manually? clever npm scripting? ???
[10:38] captain_morgan has joined the channel
[10:39] mgutz: git submodule?
[10:40] maushu has joined the channel
[10:42] saschagehlich: do you have an example for an even-odd-cycling in jade?
[10:42] Throlkim has joined the channel
[10:43] derferman has joined the channel
[10:46] faust45 has joined the channel
[10:48] aubergine has joined the channel
[10:53] slaskis: cradle seems like a great couchdb wrapper, but i can't get it to work...the connection i get from calling new(cradle.Connection) doesn't seem to have a database method?
[10:53] captain_morgan has joined the channel
[10:54] _mql has joined the channel
[10:57] _mql: SubStack: with dnode-based authenication, how would you persist the login-state, so that you're automatically re-authenticated when you refresh the browser?
[10:59] vdrab has joined the channel
[10:59] slaskis: it's so strange, i can't seem to instantiate it, but i can see those method if i call cradle.Connection.prototype in REPL
[11:01] slaskis: this works: cradle.Connection.prototype.database.call(c,"hello")
[11:03] saschagehlich has joined the channel
[11:03] SamuraiJack has joined the channel
[11:06] [AD]Turbo: is it possible to perform redirect using nodejs (or connect framework) ?
[11:08] [AD]Turbo: so when the client requests (for example) "/", I want to redirect it on /index.html
[11:08] vandenoever has joined the channel
[11:08] vandenoever: i'm writing a file with fs.writeFile() and reading it immediately after
[11:09] vandenoever: and it seems the file i'm reading != the file i wrote
[11:09] vandenoever: could this be? is a file flushed immediately?
[11:09] SubStack: _mql: I use regular session cookies for that
[11:09] captain_morgan has joined the channel
[11:10] SubStack: _mql: let me dig up the trick
[11:10] SubStack: ah yes
[11:10] Anti-X has joined the channel
[11:10] SubStack: var qs = require('querystring'); var cookie = qs.parse(conn.stream.socketio.request.headers.cookie)
[11:12] SubStack: or if your cookies aren't http-only'd you can just use document.cookie client-side
[11:14] jacobolus has joined the channel
[11:15] zorzar has joined the channel
[11:15] nsolsen has joined the channel
[11:15] saschagehlich has joined the channel
[11:15] petercooper has joined the channel
[11:16] captain_morgan has joined the channel
[11:19] _mql: SubStack: Ah, so on the server-side I could check the cookie on('connect') and inform the client.
[11:21] margle has joined the channel
[11:21] kawaz_h has joined the channel
[11:25] _mql: SubStack: but I need to memorize, which cookies (clients) are already known (=have had logged in)
[11:29] stride: _mql: can't you just use the session middleware of the connect framework for that?
[11:30] stride: [AD]Turbo: just set the Location header field to the absolute URL you want to redirect to
[11:31] captain_morgan has joined the channel
[11:32] keltus: does anyone use any gzip compression libraries with express.js? I'm serving some static files and want my web server to squeeze them before sending them out
[11:32] jbergstroem: keltus: nginx (or any other web server) has ways of doing this
[11:33] _mql: stride: you mean i should do the whole authentication thing using Connec?
[11:33] Twelve-60 has joined the channel
[11:33] vdrab has joined the channel
[11:34] keltus: jbergstroem: okay, I am currently using express.js but will try something new :-)
[11:35] fermion has joined the channel
[11:36] stride: _mql: I don't know if / how connect handles websocket connections but other than that, why not? :)
[11:36] _mql: stride: I mean in my authenticate or on('connect') method I dont have a req obj I can access.
[11:36] stride: oh, socket.io?
[11:37] _mql: stride: I'm using dnode for the whole client/server communication thing.
[11:37] stride: ah, nice, not sure in that case, sorry. maybe use the session middleware (+ memory store) as a stand alone thing or implement something like that for your system
[11:37] _mql: that's why i was asking SubStack. ;)
[11:38] sriley: connect also has middleware for gzip compression
[11:38] stride: it's basically only a hashtable that keeps track of session ids and the associated data
[11:38] sriley: express being built upon connect should have it to
[11:39] rkieffer has joined the channel
[11:41] _mql: stride: so what i need to do, is implementing my own session store… hmmm.. persisting that information would be useful anyway… (e.g. when the server crashes)
[11:42] keltus: sriley: oh! I didn't know that. thanks for pointing that out
[11:45] _mql: SubStack: should i just use a regex matcher for connect.sid= or is there a more elegant solution?
[11:46] SubStack: regex? no just use querystring
[11:46] SubStack: like in my snippet
[11:46] SubStack: it can parse the cookie for you
[11:47] SubStack: also there are session middlewares for connect that take care of everything for you
[11:47] SubStack: I use supermarket-cart that pkrumins wrote
[11:48] SubStack: there's also nstore-session and some others
[11:48] SubStack: it's just a line or two to use them plus another few lines to generate/regenerate the session objects
[11:49] jamescarr has joined the channel
[11:53] keltus: sriley: I tried the gzip example here http://howtonode.org/connect-it by putting Connect.gzip() when I createserver(), but it doesn't seem to enable gzip. is this the method you were suggesting or am I missing something?
[11:54] jed___ has joined the channel
[11:55] jed___ has joined the channel
[11:56] mbrochh has joined the channel
[11:57] bahamas has joined the channel
[11:57] sriley: keltus: app.use(express.gzip());
[11:58] sriley: where app is your server instance
[11:58] sriley: i think
[11:59] micheil has joined the channel
[12:01] ivanfi has joined the channel
[12:03] keltus: sriley: hmm still not compression. no luck I'm afraid
[12:03] sriley: sure? its working here
[12:03] sriley: youll need to restart your server (just in case youve not done that already)
[12:04] keltus: oh wait, I got it now. I had to put it before the staticProvider :-)
[12:04] keltus: didn't realize the order matters
[12:04] _mql: SubStack: I mean the qs.parse just translates the qs-encoded characters…. I get an object like this: { __utmz: '1.1288044124.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utma=1.1559289581.1288044124.1288978991.1288982577.5; socketio=websocket; connect.sid=aoo1cgqfaf.2eCQxAVCSXM0KwHmU8MGaA' }
[12:04] _mql:  
[12:04] keltus: thanks sriley
[12:06] voodootikigod__ has joined the channel
[12:06] _mql: SubStack: not that familiar with that cookie/sesssion stuff on the lower level..
[12:06] voodootikigod__ has left the channel
[12:06] eee_c has joined the channel
[12:07] SubStack: odd, maybe has to do with semicolons instead of &s
[12:07] SubStack: try .replace(/;/g, '&')
[12:07] SubStack: or else write a cookie parser I guess
[12:07] voodootikigod_ has joined the channel
[12:08] SubStack: maybe cookie-sessions or cookiejar
[12:08] _mql: looking at the implementation of connect's session.js https://github.com/senchalabs/connect/blob/master/lib/connect/middleware/session.js
[12:08] voodootikigod_: SubStack: cookiejar from where?
[12:08] micheil: hey voodootikigod 
[12:08] voodootikigod_: micheil: hey
[12:08] voodootikigod_: hows it going
[12:08] micheil: not too bad.
[12:09] micheil: mikeal: let me know if/when you're about.
[12:09] _mql: however for now i just want to get this sid… and if it's a regex for the moment that's okay. but thx so far! :)
[12:10] SubStack: voodootikigod_: just stuff I see on npm
[12:10] voodootikigod_: ahh ok
[12:13] iszak has joined the channel
[12:13] kawaz_home has joined the channel
[12:13] erlnoob has joined the channel
[12:15] kjeldahl has joined the channel
[12:16] captain_morgan has joined the channel
[12:17] d0k has joined the channel
[12:18] stagas has joined the channel
[12:20] aliem has joined the channel
[12:34] markwubben has joined the channel
[12:36] jed___ has joined the channel
[12:42] InsDel has joined the channel
[12:43] margle has joined the channel
[12:55] captain_morgan has joined the channel
[12:57] jimt_ has joined the channel
[12:57] ianward has joined the channel
[12:58] ysynopsis1 has joined the channel
[12:58] tisba has joined the channel
[12:59] matjas has joined the channel
[13:02] sclaflin has joined the channel
[13:03] guitt has joined the channel
[13:04] ysynopsis has joined the channel
[13:05] markwubben has joined the channel
[13:05] mikew3c has joined the channel
[13:06] jed____ has joined the channel
[13:07] Booths has joined the channel
[13:11] Gruni has joined the channel
[13:15] cloudhead has joined the channel
[13:16] mattcodes has joined the channel
[13:18] markwubben has joined the channel
[13:21] malkomalko has joined the channel
[13:25] altamic has joined the channel
[13:26] bradleymeck has joined the channel
[13:26] jed___ has joined the channel
[13:28] unomi has joined the channel
[13:29] liar has joined the channel
[13:38] MattJ has joined the channel
[13:41] pagameba has joined the channel
[13:44] jimt has joined the channel
[13:44] dnolen has joined the channel
[13:45] matjas has joined the channel
[13:48] T-Co: mscdex, Around?
[13:49] baoist has joined the channel
[13:50] Gruni has joined the channel
[13:55] Anti-X has joined the channel
[13:56] trotter has joined the channel
[13:57] mbrochh has joined the channel
[13:57] aubergine has joined the channel
[13:57] [[zz]] has joined the channel
[14:03] malkomal_ has joined the channel
[14:05] markwubben has joined the channel
[14:06] k_f has joined the channel
[14:06] kriszyp has joined the channel
[14:07] hoodoos has joined the channel
[14:07] Rixius has joined the channel
[14:07] hoodoos: hey, guys, is there any way to check if file exists? can't find it :)
[14:08] stagas: fs.stat
[14:08] hoodoos: it throws exception :/
[14:08] hoodoos: if nothing is present
[14:08] hoodoos: use async? :/
[14:09] iszak: path.exists() perhaps?
[14:09] hoodoos: nice, thanks :)
[14:10] huh has joined the channel
[14:15] ben_alman has joined the channel
[14:15] aubergine has joined the channel
[14:17] aheckmann has joined the channel
[14:20] xla has joined the channel
[14:20] chrischris has joined the channel
[14:23] saschagehlich has joined the channel
[14:25] Booths: Anyone know a way to mimic the php copy() effect with remote files? Ie in php I check if I have the image, if so just provide that link, otherwise copy to my server then link to my image server : copy(google.com/some/image.jpg, myserver.com/someimage.jpg) 
[14:28] c4milo has joined the channel
[14:32] bradleymeck has joined the channel
[14:38] Kai_ has left the channel
[14:38] charlenopires has joined the channel
[14:39] derencius has joined the channel
[14:41] slaskis: in expresso, how can i do chained async tests, like request something with http, then check the contents, and then do another request and check that ones results 
[14:41] pagameba: Booths: sounds like it would be fairly straightforward to do but I haven't seen anything that does that in one step (nothing like fopen wrappers in node.js yet afaik)
[14:44] ooooPssss has joined the channel
[14:45] mbrochh has joined the channel
[14:45] losing has joined the channel
[14:47] SubStack: slaskis: you could just use async or step from within your test
[14:48] slaskis: SubStack: oh, right. i forgot about those
[14:49] losing has joined the channel
[14:51] akahn has joined the channel
[14:55] Locke23rus_ has joined the channel
[14:55] delapouite has joined the channel
[14:56] johngbrooks has joined the channel
[14:58] saml has joined the channel
[14:59] saml: ../src/platform_linux.cc:29: error: `PR_SET_NAME' was not declared in this scope
[15:00] micheil: hmm..
[15:00] micheil: while compiling?
[15:01] micheil: what distro?
[15:03] aconbere has joined the channel
[15:04] baoist has joined the channel
[15:09] springmeyer has joined the channel
[15:10] BrianTheCoder has joined the channel
[15:13] RevoOf has joined the channel
[15:14] quirkey has joined the channel
[15:15] RevoOf: hi. does a library exist that can send data via websockets and can fall back to long polling, if websockets are not implemented in the browser?
[15:15] bradleymeck: socket.io
[15:15] BHSPitMonkay: RevoOf: Socket.IO
[15:15] RevoOf: thx
[15:15] ceej has joined the channel
[15:15] aubergine has joined the channel
[15:16] aubergine_ has joined the channel
[15:17] technoweenie has joined the channel
[15:18] Rixius has joined the channel
[15:18] kawaz_h has joined the channel
[15:19] InsDel1 has joined the channel
[15:20] petercoo_ has joined the channel
[15:21] temp02 has joined the channel
[15:22] ashleyde1 has joined the channel
[15:22] cataska_ has joined the channel
[15:22] r00s_ has joined the channel
[15:22] mikew3c has joined the channel
[15:22] aliem has joined the channel
[15:22] nooder: can somebody fix this issue
[15:22] nooder: error: a value of type "void" cannot be assigned to an entity of type "ssize_t={__ssize_t={long}}"
[15:22] nooder:         case EIO_RENAME:    req->result = rename    (req->ptr1, req->ptr2); break;
[15:22] killfill_ has joined the channel
[15:22] nooder: node/deps/libeio/eio.c(1689):
[15:23] jeremy` has joined the channel
[15:23] baoist has joined the channel
[15:24] Yuffste__ has joined the channel
[15:24] ctp_ has joined the channel
[15:24] jeremy`: Hello; is anyone successfully using node.js on OpenBSD? I got it to successfully compile last night, but when I ran the tests there were some errors. Is that normal?
[15:24] lmorchard has joined the channel
[15:25] Akufen has joined the channel
[15:25] Akufen has joined the channel
[15:25] Draggor has joined the channel
[15:25] softdrink has joined the channel
[15:25] gbot2 has joined the channel
[15:26] tisba: is there a way to clone a js object in node?
[15:26] jchris1 has joined the channel
[15:28] mif86 has joined the channel
[15:29] Rixius: a clone function isn't too hard to write, but htere isn't a native one tisba
[15:29] tisba: Rixius: what would your approach look like?
[15:29] aubergine has joined the channel
[15:29] Rixius: give me a moment and I'll draw it up
[15:30] dylang has joined the channel
[15:31] tisba: Rixius: cool, thx
[15:31] oal has joined the channel
[15:31] dnyy has joined the channel
[15:32] T-Co: How do I get new Date().format('Y')?
[15:32] T-Co: What function does new Date() contain, or does it just return string representation of current date?
[15:32] cha0s has joined the channel
[15:33] altamic has joined the channel
[15:33] Guest4115 has joined the channel
[15:33] Booths: Date().getFullYear() will return 2010, is that what you mean?
[15:35] Rixius: tisba: http://pastebin.com/KFusmkGR
[15:35] InsDel has joined the channel
[15:35] Rixius: let me know if you have any questions about anything in it
[15:35] Rixius: it's about as thorough as I could think
[15:35] T-Co: TypeError: Object Tue Nov 23 2010 17:34:50 GMT+0200 (EET) has no method 'getFullYear'
[15:35] Rixius: it'll clone any variable, including arrays
[15:36] Rixius: need to make a quick fix I forgot about though
[15:36] Booths: Are you getting the string first? It's just new Date().getFullYear()
[15:36] Booths: v8: new Date().getFullYear()
[15:36] v8bot: Booths: 2010
[15:36] saikat has joined the channel
[15:37] Rixius: tisba: http://pastebin.com/QztK9P5E <-- there we go fixed Clone
[15:37] rphillips has joined the channel
[15:37] T-Co: Booths, I was asking about the format function, becayse essentially I need a week number...
[15:38] T-Co: Like new Date().format('w');
[15:38] pagameba has left the channel
[15:38] Booths: https://developer.mozilla.org/en/JavaScript/Reference/global_objects/date has all the date functions
[15:39] SubStack: format strings for dates would rock
[15:39] femtoo has joined the channel
[15:39] SubStack: wouldn't be hard to whip something like that up and throw it on npm
[15:40] davidascher has joined the channel
[15:40] Booths: yeah I don't think date() has any native functons to get the week
[15:40] javruben has joined the channel
[15:40] tanepiper: port Date.js to a nodejs module
[15:40] tanepiper: http://www.datejs.com/
[15:41] c4milo has left the channel
[15:41] tisba: Rixius: do you think that is faster than dup_obj = JSON.parse(JSON.stringify(obj))?
[15:42] tanepiper: tisba: anything is going to be faster than that 
[15:42] Rixius: i was gonna say you could run some tests, but that works too tanepiper >_>
[15:42] mbrochh_ has joined the channel
[15:42] tanepiper: :p
[15:43] tanepiper: also, that way is a recipie for disaster if you have Date's, functions, etc
[15:43] tanepiper: since they are not JSON valid
[15:43] Anti-X has joined the channel
[15:44] AAA_awright: That's an awesome library
[15:44] pagameba1 has joined the channel
[15:45] tanepiper: tbh i don't know why it hasn't be ported yet
[15:45] tanepiper: i was going to attempt it, insofaras i cloned the SVN to github but never got the time to make it commonjs style
[15:45] alloc has joined the channel
[15:46] robotarm_ has joined the channel
[15:46] jpld has joined the channel
[15:46] jacobolus has joined the channel
[15:46] hober has joined the channel
[15:47] yhahn has joined the channel
[15:48] pagameba1 has left the channel
[15:48] pagameba1 has joined the channel
[15:49] sudoer has joined the channel
[15:49] pagameba1 has left the channel
[15:49] T-Co: is it possible to read command line parameters?
[15:49] Gregor has joined the channel
[15:50] pagameba has joined the channel
[15:50] tanepiper: process.argv
[15:50] MattJ: arg[n]
[15:50] MattJ: Whoops, wrong channel
[15:51] aubergine has joined the channel
[15:51] springmeyer has joined the channel
[15:52] mAritz: hm, i'm trying to spawn a child process (redis_server) but it doesn't work. with sass it worked, but with redis_server the only thing that happens is one error event that doesn't have any arguments. printing out the options i gave to spawn and manually copy+pasting them into bash works fine. :/
[15:52] saikat_ has joined the channel
[15:54] jherdman has joined the channel
[15:56] hzin has joined the channel
[15:56] pdelgallego has joined the channel
[15:57] mAritz: oh... setting cwd fixed it :D
[15:57] danoyoung has joined the channel
[16:00] danoyoung has left the channel
[16:00] sixtus42 has joined the channel
[16:01] dguttman has joined the channel
[16:01] wilmoore has joined the channel
[16:01] mAritz: mikedeboer: now i can't stop my app with the stop button in cloud9 because i spawneded child processes. what's going wrong there? :D
[16:01] mikedeboer: whoops!
[16:02] mikedeboer: mAritz: when you kill the IDE node process, it'll also kill all associated sub-processes
[16:02] mAritz: yeah, i know
[16:02] mAritz: but that's kinda annoying :P
[16:02] jpld has joined the channel
[16:03] mikedeboer: so that's happening for you all the time?
[16:03] mAritz: yep
[16:03] mikedeboer: ok... which version of Node, Cloud9 and OS ?
[16:03] mAritz: if my app quits on itself, it's fine. but a server should rarely do that.
[16:04] sonnym has joined the channel
[16:04] herbySk has joined the channel
[16:04] prettyrobots has joined the channel
[16:05] mAritz: node 0.3.0, cloud9 0.1.5, debian 5.0.6
[16:06] mikedeboer: hmmm can you try with node 0.2.x ?
[16:07] aubergine_ has joined the channel
[16:08] saml: micheil, i think cent os
[16:08] micheil: cat /etc/*-release
[16:08] mAritz: mikedeboer: not really. it's my production server and i don't want to fuck the one app that is currently working :/
[16:08] aubergine has joined the channel
[16:09] micheil: nooder: what are you doing to get that "void" error?
[16:09] mikedeboer: k
[16:09] mikedeboer: mAritz: then we need to debug it ourselves... we need to get the next version out fully tested on node 0.3.x
[16:09] micheil: jeremy`: what version of node and what were the errors (create a gist.github.com of them)
[16:10] micheil: saml: ^^
[16:10] mAritz: mikedeboer: well, in a few hours i'll be home and can test it on 0.2.5 there
[16:10] saml: micheil, i'm trying to compile 0.2.5
[16:11] rajeshsr has joined the channel
[16:11] micheil: saml: which operating system?
[16:11] saml: Red Hat Enterprise Linux ES release 4 (Nahant Update 8)
[16:11] stagas has joined the channel
[16:11] micheil: hmm..
[16:11] saml: http://nodejs.debuggable.com/2010-08-31.txt   this has similar convo
[16:11] saml: by meck
[16:11] mbrochh_: is it possible to simulate a browser with node.js and EVEN run the javascript on the site?
[16:11] ivan has joined the channel
[16:11] mbrochh_: like selenium... just all command line based?
[16:11] tj has joined the channel
[16:12] micheil: mbrochh_: probably, with a lot of work
[16:12] mbrochh_: damn
[16:12] mbrochh_: :)
[16:12] mikedeboer: mAritz: ok cool, I'll pass the msg to fabian about the debugger probs in 0.3
[16:12] micheil: saml: looks like the error is coming from the process.title stuff
[16:12] devioustree has joined the channel
[16:12] jelveh has joined the channel
[16:13] saml: micheil, i  see...
[16:13] dmcquay has joined the channel
[16:13] micheil: saml: can you do: man prctl
[16:13] davidascher has joined the channel
[16:13] micheil: and copy and paste that into a gist for me?
[16:14] T-Co: Does someone know what are possible modes for fs.mkdir?
[16:14] T-Co: I'd like to get a similar mode that of linux mkdir -p
[16:15] saml: micheil, http://pastebin.com/yYM0A4P9   i don't see PR_SET_NAME
[16:15] micheil: hm..
[16:16] markwubben has joined the channel
[16:16] T-Co: hmm, maybe I'll just do this with a bash script...
[16:16] micheil: "PR_SET_NAME (since Linux 2.6.9)"
[16:16] micheil: according to http://manpages.courier-mta.org/htmlman2/prctl.2.html
[16:17] ooooPssss has joined the channel
[16:17] saml: 2.6.9-78.0.13.ELxenU 
[16:18] jelveh: a question: I'm trying to call an external script with spawn("script/local_deps/foobar.sh", ["-T", "http://google.com", "-o", "public/externals/", md5(url)]); somehow it doesn't do what I'd expect it to do
[16:19] jelveh: while the same thing works on the command line
[16:19] rajeshsr has joined the channel
[16:19] micheil: saml: was that `man 2 prctl`?
[16:19] saml: micheil, yup
[16:19] micheil: k
[16:19] jelveh: anyone know why?
[16:19] pagameba: jelveh: what does it do that you don't expect?
[16:19] micheil: looks like an issue.
[16:20] micheil: saml: can you email nodejs-dev@googlegroups.com about this?
[16:20] saml: micheil, sure. thanks
[16:20] micheil: make sure to mention the distro & version, node version and provide a link to that man page
[16:20] micheil: also mention it's in reference to process.title
[16:21] pagameba: jelveh: is script/local_deps/foobar.sh relative to process.cwd() ?
[16:21] jelveh: pagameba: it looks like the options aren't passed correclty
[16:21] jelveh: pagameba: yes it is
[16:21] saml: micheil, thanks
[16:22] jelveh: it's being executed but somehow the arguments are not correct
[16:22] micheil: saml: no worries. iirc, process.title was a pain in the ass.
[16:22] saml: can I mention your nick in the email micheil ?
[16:22] micheil: sure
[16:22] micheil: ryah knows' who I am :P
[16:23] saml: about process.title.. since i am not familiar to C or C++ and don't know where to dig through to verify it's process.title
[16:23] jelveh: ahhh pagameba I got it
[16:23] jelveh: stupid mistake
[16:23] markwubben has joined the channel
[16:23] micheil: saml: I know it's process.title because of the trace to src/platform.cc:26
[16:23] pagameba: jelveh: sorry, I was just looking for some code I am running that does something similar
[16:23] micheil: erm
[16:23] micheil: platform_linux.cc
[16:23] jelveh: the options should have looked like this ["-T", "http://google.com", "-o public/externals/" + md5(url)]
[16:23] saml: micheil, ah i see
[16:24] jelveh: was kinda confused by the ls example in the docs
[16:24] micheil: line 29 of that file is:   prctl(PR_SET_NAME, process_title);
[16:24] jelveh: thanks though pagameba :)
[16:24] pagameba: jelveh: ah ... needed -o with public/externals
[16:24] jelveh: yes while -T is a separate option
[16:25] jelveh: I tried a couple combinations but after talking to you it dawned on me :D
[16:26] sivy has joined the channel
[16:26] aubergine_ has joined the channel
[16:26] pagameba: jelveh: interesting distinction :)
[16:26] daglees has joined the channel
[16:27] saml: micheil, Linux 2.4.18                                                   2002-06-27                                                       PRCTL(2)    this is last line of man page
[16:27] micheil: ah
[16:27] saml: so i think... it's not 2.6
[16:27] micheil: there we go then.
[16:27] micheil: make sure to include that in the email too.
[16:28] sivy: has anyone used limestone to talk to sphinx?
[16:28] jacobolus has joined the channel
[16:30] postwait has joined the channel
[16:31] benburkert has joined the channel
[16:31] postwait: build/default/node test/simple/test-crypto.js isn't very telling when it fails.
[16:31] postwait: how do I get it to be "crazy verbose" ?
[16:31] rajeshsr_ has joined the channel
[16:32] jacobolus has joined the channel
[16:34] aubergine has joined the channel
[16:34] ph^ has joined the channel
[16:34] saml: micheil, hey should i join the nodejs-dev group?
[16:34] micheil: yes
[16:34] micheil: (you need to inorder to mail to it)
[16:35] AAA_awright: Are there any programs to generate any cool profiling charts and stuff?
[16:35] micheil: postwait: did you compile node with ssl support?
[16:35] AAA_awright: That would be useful for profiling code?
[16:35] postwait: micheil: yes, but I'm adding tests for new features.
[16:35] micheil: (start a node repl session and type: require("crypto")
[16:35] wattz: bahhhhh
[16:35] micheil: postwait: ah
[16:36] saml: micheil, ah thanks
[16:36] rajeshsr has joined the channel
[16:36] daglees has joined the channel
[16:36] wattz: so weird, anyone deving a node module in c++ and args.Length() comes back as a negative number?
[16:36] tj: drudge: when do you expect the next linkinus?
[16:37] drudge: i'd like to say before 1/1
[16:37] drudge: System Info: Model:  MacBook Pro (LED Unibody) · CPU:  2 @ 2.8 GHz · L2:  6 MB · RAM:  4 GB · OS X:  Version 10.6.5 (Build 10H574) · Hostname:  njp-mbp.local · User:  npenree · Client:  Linkinus 2.2 Beta/23503 · Style:  Whisper
[16:38] tj: drudge: k cool, I can beta if you need. I like it more than colloquy but the RAM issue is bogging me down
[16:38] ianward has joined the channel
[16:38] drudge: i'll let you know as soon as we have a beta i feel comfortable giving out, this one still has a few hiccups that need fixing
[16:39] sandymahalo has joined the channel
[16:39] tj: sounds good thanks man
[16:39] drudge: man node on windows is killing me ha
[16:40] postwait: ryah: you around? the test_ca.pem in fixtures doesn't have the residual CA setup and I need a test_crl.pem
[16:40] jakehow has joined the channel
[16:40] eee_c has joined the channel
[16:41] tj: drudge: I believe it, anything on windows kills me
[16:41] strixv has joined the channel
[16:42] drudge: yeah unfortunately i have to show that this can run on windows as well
[16:43] drudge: http://penree.com/images/1v/c82phqtkm8o80.png fails with these remap errors constantly
[16:43] drudge: even after following the wiki to rebaseall
[16:43] saml: micheil, i just commented out body of void OS::SetProcessTitle(char *title)   :P   i don't think i need process.title
[16:43] micheil: saml: it's used internally by node.
[16:43] saml: oh no
[16:43] micheil: but, it's not checked, I don't think.
[16:43] prettyrobots has joined the channel
[16:44] saml: make test fails
[16:44] ph^ has joined the channel
[16:44] rockstar` has joined the channel
[16:45] ph^ has joined the channel
[16:45] christophsturm has joined the channel
[16:45] aconbere has joined the channel
[16:46] rockstar` has left the channel
[16:46] micheil: saml: okay, in which case.. yeah, you can get node to build without it, but it doesn't pass all the tests
[16:47] cnu has joined the channel
[16:47] softdrink: woot. i have an Undoable class now
[16:48] mAritz: mikedeboer: what's the signal cloud9 sends my app when i press the stop button? (didn't find it) cause then i can just hook on that and shut down manually.
[16:48] Sami_ZzZ has joined the channel
[16:48] Booths: Is there any way to get a more detailed error than "Error: ECONNREFUSED, Connection refused"
[16:49] Aikar: Booths: what you trying to do?
[16:49] Booths: Connect to a mysql client on the same machine.
[16:49] Booths: that was working earlier and I can't figure out why.
[16:49] Booths: mysql server*
[16:50] Booths: What's more aggrivating is that I'm able to connect to it on this computer, just not from the host machine to itself
[16:50] bartt has joined the channel
[16:51] mscdex: T-Co: here now
[16:52] sh1mmer has joined the channel
[16:53] BillyBreen has joined the channel
[16:54] RevoOf: booths: tried localhost, 127.0.0.1, 192.168.2.101 (or so), ... ?
[16:55] RevoOf: booths: also check the mysql permissions. maybe your mysql user is only aloud for certain hosts
[16:55] RevoOf: booths: AND check, wether the server listens on localhost and so on ...
[16:56] Booths: I tried all the servers and it's the same connrefused when the mysql service is stopped
[16:56] Booths: 127 etc etc
[16:57] Booths: Aggrivating... 
[16:57] micheil: softdrink: an undoable class?
[16:57] RevoOf: booths: trie netstat -l and see if mysql is there
[16:57] RevoOf: s/trie/try/
[16:58] sixtus42 has joined the channel
[16:58] Booths: yeah, it's there.
[16:58] softdrink: it keeps track of its property changes and lets you undo/redo them
[16:58] RevoOf: booths: foreign adress?
[16:59] mAritz: softdrink: using getters/setters on arrays and just push/pop?!
[16:59] RevoOf: afk
[17:00] softdrink: not quite
[17:00] mAritz: why not?
[17:00] mAritz: (or, what's the better way?)
[17:00] T-Co: mscdex, I forgot what my question was, so nevermind :)
[17:01] mscdex: hehe
[17:01] Booths: www.MYDOMAIN:mysql *:* you mean that?
[17:01] Booths: I see that and "unix  2      [ ACC ]     STREAM     LISTENING     4865     /var/run/mysqld/mysqd.sock"
[17:02] softdrink: all property changes get written to a property log basically, and there's a playhead which is an index to that log.  so as you undo(), the playhead backs up and changes the value on the property that's logged. redo just increments it and changes again.  if you change a value after undoing a few times, it lops off the end of the log from the playhead position before setting the new value for a property
[17:02] T-Co: mscdex, I can't get flags go trough to Gimap, though... I think it's a question of finding a correct way to escape \
[17:02] erlnoob has joined the channel
[17:02] mscdex: "\\Seen"
[17:03] T-Co: mscdex, I've successfully stored flags by testing the syntax via openssl client, but the flags don't seem to change when called trough node-imap
[17:03] mscdex: I've removed the need for the backslash in an upcoming commit
[17:03] T-Co: That's nice
[17:03] Wise_ has joined the channel
[17:04] aubergine has joined the channel
[17:04] Booths: I give up, I've spent enough time trying to figure out the MySQL connection problem I forgot what I wanted to test once I connected... :\
[17:04] aubergine_ has joined the channel
[17:06] T-Co: Booths, Is that a typo or what? /var/run/mysqld/mysqd.sock should it be mysqld.sock?
[17:07] Booths: nah that's what it output
[17:07] Booths: copied it from terminal
[17:07] Booths: Wouldn't it listening improperly affect me connecting remotely as well though?
[17:07] T-Co: Booths, Yes, but by default I think that mysql-client for example tries to connect mysqld.sock, so maybe check you my.cnf if that has mysqd.sock and change it?
[17:08] Booths: Any idea where that would be?
[17:08] T-Co: Booths, Depends on distro, but usuallu in either /etc/mysql/my.cnf or /etc/my.cnf
[17:09] Wise_: how easy would it be to interface with a (non-standard) terminal through ssh with node.js?
[17:09] micheil: softdrink: sounds good.
[17:09] T-Co: Booths, Under [client] I have "socket          = /var/run/mysqld/mysqld.sock"
[17:10] Aikar: i saw a function somewhere that creates a pair of unix sockets, anyone know the name of it / link to doc?
[17:11] Booths: ocket          = /var/run/mysqld/mysqld.sock
[17:11] Booths: socket          = /var/run/mysqld/mysqld.sock
[17:11] Booths: Yeah mine show's that too in the my.conf
[17:11] cagdas has joined the channel
[17:11] Booths: Don't know why that pasted twice... sorry
[17:12] kjeldahl has joined the channel
[17:12] ehaas has joined the channel
[17:13] mikedeboer: mAritz: when you go into the #cloud9ide channel I can help you better
[17:13] eee_c has joined the channel
[17:13] T-Co: Booths, Perhaps that was a mispaste too, then...
[17:13] Booths: I give up :P
[17:13] Booths: I'll worry about it later
[17:14] matt_c has joined the channel
[17:14] Booths: It's just weird that I can connect remotely and directly via terminal but not via node
[17:14] joemccann has joined the channel
[17:14] Booths: when the node module worked earlier
[17:15] T-Co: mscdex, Even the copy function I added works, but for some reason I cannot get addFlags or delFlags to go trough...
[17:15] joemccann: any idea when express will support 0.3.0?
[17:15] Aikar: ?
[17:15] Aikar: works for me
[17:16] erlnoob: hi, I'm using expressjs and want to also use socket.io, how do i use middleware-augmented request objects inside socket.io's event handlers?
[17:16] Aikar: joemccann: im on master branch and connect hasnt given me any issues
[17:16] Aikar: and 0.3.1 is out now
[17:17] softdrink: so uh.. just installed cloud9…. segfault
[17:18] davidascher has joined the channel
[17:18] mikedeboer: softdrink: that's inconvenient :P
[17:18] joemccann: according to the github page it only supports 0.2.4
[17:18] softdrink: yeah just noticed that
[17:18] softdrink: oh well
[17:18] Aikar: well "officially"
[17:18] tj: joemccann: either when I have time, or someone contributes, now that I know 0.3.x is considered unstable I most likely wont bother
[17:18] tj: until 0.4.0
[17:18] tj: now that I know how they are versioning
[17:18] Aikar: it still works fine
[17:18] joemccann: understandable
[17:19] mikedeboer: softdrink: which Node version, cloud9 version and OS?
[17:19] tj: joemccann: I thought it was really odd to version 0.3.x at all but yeah I guess they are considering odds unstable
[17:19] softdrink: node 0.3.1-pre, just grabbed whatever cloud9 is on npm, osx
[17:19] Aikar: unstable as in the api is changing alot?
[17:20] Booths: softdrink: iirc it has an sh file in a lib or bin folder you can run
[17:20] Booths: that's bundled with a supported node version, but I could be completely wrong
[17:20] tj: yeah. im sure it would be fine, but if its changing often I dont want to go trying to keep up with something, when we wont put it into production anyways
[17:20] boaz has joined the channel
[17:21] joemccann has joined the channel
[17:21] joemccann: tj: sorry i missed that...was on my nexus one now on my mbp
[17:21] joemccann: tj: what did u say
[17:21] tj: joemccann: I forget :p its fine with 0.2.5 tho, I just forgot to update the readme
[17:22] joemccann: tj: thx bro...building a sick app and express is working beautifully...having an issue that i believe is based on the version of node im using so that's why i asked
[17:26] malkomalko has joined the channel
[17:26] aubergine has joined the channel
[17:27] T-Co: mscdex, Ah, event i/o, logout came before store. I feel so stupid now...
[17:27] mscdex: ah
[17:28] deepthawtz has joined the channel
[17:28] stephank has joined the channel
[17:28] robotarm_ has joined the channel
[17:31] fermion has joined the channel
[17:31] T-Co: mscdex, Getting this, though: http://dpaste.com/278934/ when trying to callback delFlags after addFlags...
[17:32] T-Co: Well, actually, when adding callback to addFlags...
[17:33] iaurynn has joined the channel
[17:33] cjm has joined the channel
[17:34] softdrink: oO why are there a crapload of inline styles on every element in cloud9?
[17:34] postwait: How does one go about creating a secure http server in master right now?
[17:34] ooooPssss has joined the channel
[17:35] rwaldron has joined the channel
[17:36] bartt has joined the channel
[17:37] sclaflin has joined the channel
[17:41] bnoordhuis has joined the channel
[17:44] Booths has joined the channel
[17:45] davidascher has joined the channel
[17:46] mu-hannibal has joined the channel
[17:47] erlnoob: hmm flashsocket and websocket in socket.io return different cookies in their headers.. websocket returns the session cookie id while flashsocket does not
[17:48] dmcquay has joined the channel
[17:49] noahcampbell has joined the channel
[17:49] Aikar: noone knows name of the function that creates a socket pair in node?
[17:49] mscdex: T-Co: what was the call you made that gives you that error?
[17:49] EvanR-work has joined the channel
[17:49] yozlet has joined the channel
[17:51] mscdex: T-Co: also, are you using the latest from master?
[17:51] dguttman_ has joined the channel
[17:51] Aikar: is there any docs on process.bindings('net') ?
[17:51] aubergine has joined the channel
[17:52] MetaJake has joined the channel
[17:53] fangel has joined the channel
[17:53] T-Co: mscdex, connection.delFlags(message, ["\\Flagged"], function()...
[17:54] T-Co: mscdex, And possibly not...
[17:54] T-Co: let's see
[17:56] vnguyen has joined the channel
[17:58] bnoordhuis: Aikar: it's process.binding('net').socketpair - but what do you want it for?
[17:58] derencius_ has joined the channel
[18:00] T-Co: mscdex, http://dpaste.com/278949/
[18:00] T-Co: mscdex, Updated
[18:01] Aikar: bnoordhuis: to send an fd to a forked process, instead of having to give it a specific file name
[18:01] T-Co: mscdex, But hey, do I need to add some extra stuff to the 'data' -handler if I added the copy method?
[18:01] losing_ has joined the channel
[18:01] T-Co: mscdex, Could it be that it cannot, for now, handle the response that is coming in from the copy?
[18:02] bnoordhuis: Aikar: just one end of the socket pair or arbitrary fds?
[18:02] mscdex: T-Co: doubt it. i've already added a copy function in the upcoming commit
[18:02] mscdex: and a bunch of other things
[18:02] Aikar: the .write(msg,enc,fd) feature, to pass FD from 1 process to other
[18:02] T-Co: mscdex, When are you plannin to push?
[18:02] mscdex: hopefully tonight some time
[18:03] Aikar: was wanting the socketpair to do the transport of the fd instead of a .listen('/tmp/blah.sock');
[18:03] T-Co: mscdex, Awesome, please, let me know when you do.
[18:03] sh1mmer has joined the channel
[18:03] mscdex: will do
[18:03] jelveh has joined the channel
[18:05] cardona507 has joined the channel
[18:08] Wise_: how easy would it be to interface with a (non-standard) terminal through ssh with node.js?
[18:09] ashleydev has joined the channel
[18:09] mw has joined the channel
[18:10] ajpiano has joined the channel
[18:10] matt_c has joined the channel
[18:10] admc has joined the channel
[18:11] banjiewen has joined the channel
[18:12] davidascher has joined the channel
[18:14] prettyrobots has joined the channel
[18:15] drudge: tj: any idea what error 100 is? https://gist.github.com/6c91f2b207845b95d495
[18:15] losing has joined the channel
[18:15] tj: drudge: not sure
[18:16] drudge: it's odd, express is the only package having issues
[18:16] tj: hmm :s
[18:16] tj: works fine for me, just tried
[18:17] langworthy has joined the channel
[18:17] drudge: yeah strange, it's the only package that i get Error: 100 on, don't know what that means
[18:19] drudge: tj: ok, forced my proxy settings in npmrc again and that package works
[18:20] tj: drudge: ah :)
[18:20] drudge: tj: so odd that it was only express though, i literally installed everything else without issue
[18:20] tj: drudge: dunno, I dont really use it
[18:20] tj: (npm)
[18:20] Insanity5902 has joined the channel
[18:20] tj: works for me tho
[18:20] drudge: you don't use npm? you do it "the hard way"? :)
[18:21] monokrome has joined the channel
[18:21] tj: i prefer to have everything in my app dir but the npm bundle thing is good
[18:21] mjr_ has joined the channel
[18:23] ajpiano has joined the channel
[18:24] markwubben has joined the channel
[18:24] mattcodes has left the channel
[18:24] saml: hey, does response.end() fire an event?   I am serving an image. after serving is done, i want to delete the image.
[18:25] captain_morgan has joined the channel
[18:25] monokrome: saml: can't you just delete it after you call response.end()
[18:26] mjr_: It's tricky if someone else is calling end.
[18:26] saml: monokrome, yah i could.. but... yah
[18:26] mjr_: But you are setting up the image or whatever.
[18:26] monokrome: hmm
[18:26] mjr_: I think most people end up wrapping end because of this.
[18:26] mjr_: Which is ugly.
[18:26] saml: so, maybe i should create temporary image file for each request
[18:26] nsolsen has joined the channel
[18:27] saml: what i want is.. parse request.url   and use imagemagick to process image (in filesystem)  and serve the processed image
[18:27] monokrome: Also, how the heck do you throw errors in situations like this find method?? https://github.com/monokrome/zest/blob/master/lib/zest/templates/loader.js
[18:27] monokrome: just trying to asyncronously see whether or not a file is in a given listen of directories
[18:28] omni5cience: Hey, random question, but I remember seeing a neat little one line hack to replace modules(like sys with util) cleanly depending on the node version and I'm having a brain fart. Is this ringing any bells for anybody?
[18:28] springify has joined the channel
[18:28] batasrki has joined the channel
[18:29] mjr_: saml: that sounds like a reasonable thing to want.  If you are the one calling end, then you should be able to structure the code so that you keep a reference to the file that you delete when the request is over.
[18:29] bnoordhuis: omni5cience: perl -i -pe "s/require('sys')/require('util')/g" foo.js ?
[18:30] captain_morgan has joined the channel
[18:31] mjr_: bnoordhuis: again with the perl
[18:31] saml: mjr_, let's say there are 1000 requests for the same url.  do you think i should create 1000 different temporary files?
[18:31] mjr_: monokrome: throwing exceptions in IO callbacks doesn't do what you'd expect, so that's why node uses the (err, data) callback pattern.
[18:31] bnoordhuis: mjr_: perl was my first love :$
[18:32] mjr_: bnoordhuis: I'm right there with you.  I still bust out -i -pe without even thinking about ti.
[18:32] mjr_: Although I usually write it as -p -i -e, because I like pie.
[18:32] monokrome: mjr_: Yes, but that I don't even know how I'd get to the point where I'm actually able to throw the error.
[18:32] omni5cience: bnoordhuis: nope, I mean I love a good perl one liner, but this left both in the source and (I think) checked if sys existed and required it or failing that required util
[18:33] mjr_: saml: some sort of caching is probably warranted.  Have you looked at how Connect does it, and/or considered just using Connect?
[18:33] femtoo has joined the channel
[18:33] saml: ACTION googles for Connect
[18:33] dguttman has joined the channel
[18:33] Fullmoon: What exactly happens, encoding-wise, when I have a string "", and I str += a buffer object?
[18:33] rkieffer has joined the channel
[18:33] bnoordhuis: omni5cience: that's easy-ish - wrap the require() in a try/catch block and require() the other module in the catch block
[18:34] mjr_: omni5cience: like this:  https://github.com/mranney/node_redis/blob/master/index.js#L10
[18:35] omni5cience: oh, well I guess that works, I just feel like I saw this very sexy little line of code that did it. I guess I'll just do that
[18:35] omni5cience: :P
[18:35] BrianTheCoder has joined the channel
[18:39] qFox has joined the channel
[18:39] nlacasse has joined the channel
[18:39] thebigbad has joined the channel
[18:40] DoNaLd`: cloudhead: alive ?
[18:40] saml: how would you create temporary files? use mktemp command/
[18:40] isaacs has joined the channel
[18:41] isaacs: tj: npm bundle is about to get SO much awesomer
[18:41] tj: isaacs: woot! howcome?
[18:42] SubStack: isaacs: also I've been hacking at browserify lately TOO
[18:42] isaacs: 1) you'll be able to do `npm bundle <any command>` to act on the bundle'd libs
[18:42] isaacs: so like, "npm bundle install http:/some/random/tarball"
[18:42] SubStack: so you'll be able to use npm modules in client-side code with connect middleware
[18:42] isaacs: in case you have a dep that's not on the registry
[18:42] isaacs: also, bundled libs will "count" as satisfied deps.
[18:42] SubStack: oh that is nifty
[18:42] isaacs: you can then also do `npm bundle rm something` or `npm bundle ls` to see what's in it
[18:43] tj: isaacs: nice nice!
[18:43] isaacs: so, if foo depends on "bar", and bundles some satisfying "bar", then it won't try to install "bar", which is great if "bar" isn't on the reg
[18:43] disq has joined the channel
[18:43] disq has joined the channel
[18:43] isaacs: one thing that i recently took away, though, is the ability to specify a directory to use for the bundle.
[18:43] tj: i think bundling is more advantageous than the global install stuff
[18:44] isaacs: because otherwise i can't know where to look for those things, unless i create a config file or something, which is dumb.
[18:44] isaacs: so bundled stuff *always* goes in ./node_modules
[18:44] pdelgallego has joined the channel
[18:44] isaacs: and if you install your kit with npm, then that's in the require path.
[18:45] isaacs: "npm bundle" with no args will still just install the necessary deps from the registry
[18:47] vnguyen has joined the channel
[18:48] strixv has joined the channel
[18:49] eee_c1 has joined the channel
[18:50] pquerna: has anyone actually used websockets over ssl yet?
[18:51] boaz_ has joined the channel
[18:56] sriley has left the channel
[18:56] slaskis: why is "" instanceof String false?
[18:56] Fullmoon: pquerna: Not yet, have you run into any issues?
[18:56] tj: slaskis: its not a String
[18:56] tj: slaskis: new String('whatever')
[18:57] isaacs: slaskis: because JS is a jerk
[18:57] slaskis: tj: oh, i just found the docs on mozilla
[18:57] isaacs: slaskis: "foo" is a primitive string literal.  not a String object.
[18:57] isaacs: slaskis: it's dumb.
[18:57] slaskis: yeah i'm sure this comes up often here,
[18:58] slaskis: too bad, i was hoping i could generalize my validations
[18:58] tj: use typeof
[18:58] markwubben has joined the channel
[18:58] isaacs: slaskis: you know what's super weird, though?  if you add something to String.prototype, it'll show up on "foo"
[18:58] slaskis: typeof Date.now()
[18:58] isaacs: v8: String.prototype.foo = "bar" ; "foo".foo
[18:58] v8bot: isaacs: "bar"
[18:58] isaacs: the . coerces it to an object
[18:59] langworthy_ has joined the channel
[18:59] slaskis: isaacs: oh, yeah that is weird, kind of makes you think String == ""
[18:59] tj: yeah same with bools, looks really awkward
[18:59] isaacs: v8: !!(new Boolean(false))
[18:59] v8bot: isaacs: true
[18:59] isaacs: v8: !!(Boolean(false))
[18:59] v8bot: isaacs: false
[18:59] slaskis: whoa
[18:59] isaacs: v8: new Boolean(false)
[18:59] v8bot: isaacs: {}
[18:59] isaacs: v8: new Boolean(false).valueOf()
[18:59] v8bot: isaacs: false
[19:00] slaskis: v8: false instanceof Boolean
[19:00] v8bot: slaskis: false
[19:00] tj: v8: Boolean.prototype.wahoo = 'yay'; true.wahoo
[19:00] v8bot: tj: "yay"
[19:00] isaacs: JavaScript: Not The Prettiest Language
[19:00] slaskis: haha
[19:00] slaskis: is it possible to convert a "" to String somehow?
[19:00] slaskis: ehm, duh
[19:01] slaskis: i'm stupid
[19:01] slaskis: haha
[19:01] slaskis: nvm
[19:01] isaacs: besides, who wants a language like scheme or haskell, all stuck up and fretting about getting its hair just right?  JavaScript may be ugly, but it can cook and carry on a conversation.
[19:01] richcollins has joined the channel
[19:01] isaacs: js doesn't judge you
[19:02] isaacs: slaskis: function isString (x) { return typeof x === "string" || (x instanceof String) }
[19:02] pt_tr has joined the channel
[19:02] mjr_: That String.prototype thing is crazy.
[19:02] slaskis: well, i was kind of hoping i could do some property validation with a hash like { "name" : String }
[19:02] slaskis: would be nice
[19:02] slaskis: and "created_at" : Date
[19:02] slaskis: etc.
[19:02] SubStack: pquerna: I've used ssl websockets
[19:02] isaacs: slaskis: sure, but you just can't generalize it
[19:03] paulwe has joined the channel
[19:03] isaacs: slaskis: also, you need to be aware that *everythign* has a toString capability
[19:03] SubStack: pquerna: https://github.com/substack/dnode/tree/master/examples/ssl/ 
[19:03] isaacs: v8: { toString: function () { return "foo" }} == "foo"
[19:03] v8bot: isaacs: SyntaxError: Unexpected token (
[19:03] slaskis: isaacs: why would that be a problem?
[19:03] isaacs: v8: ({ toString: function () { return "foo" }}) == "foo"
[19:03] v8bot: isaacs: true
[19:03] isaacs: v8: "null" == null
[19:03] v8bot: isaacs: false
[19:03] isaacs: v8: null == "null"
[19:03] v8bot: isaacs: false
[19:04] isaacs: oh, right, null and undefined are the exceptions
[19:04] isaacs: they only == to each other
[19:04] mjr_: New iOS finally has WebSocket.  This should make WS a lot more useful.
[19:04] slaskis: v8: null == undefined
[19:04] v8bot: slaskis: true
[19:04] mjr_: Except fro that fucking proxy thing.
[19:04] isaacs: proxy thing?
[19:04] mjr_: Lots of people are behind firewalls
[19:04] mjr_: And they only way they see the "internet" is through a transparent HTTP proxy
[19:05] mjr_: So if you don't talk HTTP that your proxy can understand, you are kind of fucked.
[19:05] isaacs: oh, right
[19:05] isaacs: and ws can't pierce thorugh that?
[19:05] mjr_: And the new WS isn't exactly proxy friendly.
[19:05] isaacs: i see
[19:05] isaacs: that's dumb.
[19:05] mikew3c_ has joined the channel
[19:05] mjr_: The old one was way more proxy friendly, but then they changed it.
[19:05] isaacs: we should just build apps that run on the phone and do the nat piercing and send framed tcp messages.
[19:06] isaacs: sometimes i feel like http is just unnecessary bloat
[19:06] mjr_: In this case though, HTTP is the only protocol that is allowed out, for various reasons.
[19:06] isaacs: ws is just taking this bloated http thing, and putting it through all kinds of machinations to do what tcp could already do with a lot less effort.
[19:06] isaacs: right, so speak tcp over port 80
[19:06] c4milo has joined the channel
[19:06] pquerna: Fullmoon: just required for any use for me;  just not seen anyone actually doing it.
[19:06] isaacs: excpet that you've got this proxy thing
[19:06] isaacs: it's dumb.
[19:06] mjr_: These proxies do not let you speak anything over port 80 other than real HTTP
[19:06] isaacs: right
[19:07] alex_b has joined the channel
[19:07] mjr_: kinda sucks
[19:07] isaacs: the world is overflowing with terrible software.
[19:07] mjr_: It's for the "enterprise"
[19:09] wattz: Local<Value>
[19:09] wattz: oops
[19:10] slaskis: v8: [] instanceof Array
[19:10] v8bot: slaskis: true
[19:10] slaskis: well, that just makes everything more confusing
[19:10] slaskis: meh
[19:10] indexzero: v8: process.exit(0)
[19:10] ryah: build systems
[19:10] v8bot: indexzero: ReferenceError: process is not defined
[19:10] ryah: most annoying thing ever.
[19:11] indexzero: haha
[19:11] isaacs has joined the channel
[19:11] indexzero: sorry, had to try that
[19:11] indexzero: I almost never play with the bot
[19:11] ryah: most annoying is that people don't even understand the problem. you can't just use arbitrary software.
[19:11] indexzero: ryah: Oh, lol. I thought you were talking about the v8 bot
[19:12] ryah: no, v8 bot i like. build systems i hate.
[19:13] indexzero: ryah: Yeah, never met one I like myself. Although I have found some decent continuous integration servers
[19:13] indexzero: but using continuous integration assumes you've found a build system that you can grim and bear it
[19:14] mjr_: ryah: I think the real issue with build systems is that we expect them to not be hard.  You pretty much need someone whose ALMOST fulltime job it is to do care and feeding of a building system if you want it to be healthy and strong.
[19:14] postwait: ryah: is the httpServer "setSecure" stuff known to be broken in master?
[19:15] tanepiper: mjr_: agreed, build systems just don't feel natural
[19:17] ryah: postwait: yes
[19:17] ryah: postwait: don't use master
[19:17] MikhX has joined the channel
[19:17] postwait: ryah: I attempted to add CRL support to master... then decided to do it against v0.2 so I could test it :-) I sent a pull request.
[19:18] ryah: postwait: the tls api is changing at the moment. see test/simple/test-securepair-server.js
[19:19] ryah: that's the low-level api - going to wrap that up in something easier to use
[19:19] postwait: in 0.2 or 0.3.1? or master?
[19:19] ryah: but currently it's broken
[19:19] akahn has left the channel
[19:19] ryah: in master
[19:19] jacobolus has joined the channel
[19:19] ossareh has joined the channel
[19:20] eee_c has joined the channel
[19:20] postwait: the pull req I sent against 0.2 applies cleanly to master.
[19:20] postwait: So the C++ bits presumably work.
[19:20] tilgovi has joined the channel
[19:21] jchris1 has joined the channel
[19:21] ryah: ok
[19:21] postwait: We couldn't use the SSL stuff the way it stands because it verifies peers that are simply signed by the CA.
[19:22] postwait: Very dangerous if you have PKI infrastructure that uses revocations... once a good guy -- not always a good guy :-)
[19:22] ryah: yeah thanks for adding that :)
[19:24] stagas: hn crashed?
[19:24] stagas: it's up again
[19:25] mattcodes has joined the channel
[19:26] sstreza has joined the channel
[19:29] Nevtus has joined the channel
[19:29] Nevtus has joined the channel
[19:31] jelveh has joined the channel
[19:32] markwubben has joined the channel
[19:33] jimt has joined the channel
[19:37] hornairs has joined the channel
[19:38] mraleph1 has joined the channel
[19:38] admc has joined the channel
[19:39] mattly has joined the channel
[19:39] erlnoob: so, to broadcast a message using socket.io from a route handler in express, you simply do: socket.broadcast('...')
[19:40] erlnoob: provided socket = io.listen(app)
[19:40] sandymahalo: has anyone had issues compiling nodejs on freebsd?
[19:40] erlnoob: or am I missing something here?
[19:41] isaacs has joined the channel
[19:41] markwubben has joined the channel
[19:41] cjm has joined the channel
[19:42] sriley has joined the channel
[19:42] hornairs: anyone know why socket.io might use the websocket transport when testing locally but when the same code is deployed to a server and accessed over the internet (using the same browser) it uses xhr-polling?
[19:43] swistak has joined the channel
[19:44] langworthy has joined the channel
[19:48] evanmeagher has joined the channel
[19:48] airhorns has joined the channel
[19:51] mattcodes has left the channel
[19:51] fly_ has joined the channel
[19:54] herbySk has joined the channel
[19:55] Booths: Any downsides of keeping a mysql connection alive w/ node? Product I'm making is making enough queries that closing/reopening is crashing it, but it also hits periods of lulls. An alternative would be setting a timeout w/ each query and clearing/restarting after each query.
[19:57] twoism has joined the channel
[19:57] jvolkman_ has joined the channel
[19:57] evanmeagher: tj: ping
[19:57] tj: yo
[19:58] jvolkman_: Is there a single line way to get the contents of a URL? Or do i have to parse the url, create an HTTP client, call GET, etc?
[19:58] evanmeagher: tj: is there a way to pass a variable to :markdown filters in jade?
[19:58] evanmeagher: they seem to only support blocks of md text, but I'm wanting to pass in a string var containing md
[19:59] Insanity5902 has joined the channel
[19:59] trotter has joined the channel
[20:00] tj: evanmeagher: hmm yeah interpolation seems to be messed
[20:00] tj: but other than the block no, its not meant for that
[20:00] tj: you could just do != markdown.toHTML(whatever)
[20:00] ryah: ndb isn't in npm ?
[20:00] ryah: :(
[20:00] tj: evanmeagher: but ya the interpolation thing is a bug
[20:01] isaacs: ryah: yeah, no package.json even
[20:05] hassox has joined the channel
[20:05] evanmeagher: tj: perfect! `!= markdown.parse(foo)` is just what i needed. thank you.
[20:05] evanmeagher: tj: what's the bug, exactly?
[20:06] tj: evanmeagher: all text blocks should allow interpolation, for example | my name is #{name}
[20:06] tj: but for some reason does not work with :markdown
[20:06] tj: ill have to look into that
[20:06] evanmeagher: ah, right i noticed that
[20:06] evanmeagher: you get + name+ or something
[20:06] tj: haha yeah
[20:08] pquerna: postwait: are you using CRLs or OCSP?
[20:10] aubergine has joined the channel
[20:10] quirkey has joined the channel
[20:10] rnewson_ has joined the channel
[20:10] markwubben has joined the channel
[20:10] pquerna: (ocsp will be difficult; near impossible with openssl w/o threading it, crl in mem is the only easy way for node right now)
[20:11] yozlet has joined the channel
[20:11] jakehow has joined the channel
[20:11] isaacs has joined the channel
[20:16] jimt_ has joined the channel
[20:16] SubStack has joined the channel
[20:17] ryah: v8bot: Buffer("hello world").slice(0,0).length
[20:17] v8bot: ryah: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[20:17] ryah: v8: Buffer("hello world").slice(0,0).length
[20:17] v8bot: ryah: ReferenceError: Buffer is not defined
[20:17] ryah: -_-
[20:17] ryah: > Buffer("hello world").slice(0,0).length
[20:17] ryah: 11
[20:17] rauchg_: v8bot: typeof Buffer
[20:17] v8bot: rauchg_: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[20:17] davida has joined the channel
[20:18] rauchg_: v8: typeof Buffer
[20:18] v8bot: rauchg_: "undefined"
[20:18] tj: v8bot: commands
[20:18] v8bot: tj: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[20:18] tj: v8bot: v commands
[20:18] v8bot: tj: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
[20:19] tj: wtf
[20:19] tj: lies
[20:19] mjr_: I think it is "v8 bot" not "node bot"
[20:19] sclaflin has joined the channel
[20:19] rauchg_: v8: v commands
[20:19] v8bot: rauchg_: SyntaxError: Unexpected identifier
[20:19] rauchg_: lies
[20:20] jb55: v8: `v commands
[20:20] v8bot: jb55: SyntaxError: Unexpected token ILLEGAL
[20:20] rauchg_: v8: `v commands
[20:20] v8bot: rauchg_: SyntaxError: Unexpected token ILLEGAL
[20:20] rauchg_: haha
[20:20] mjr_: `v commands
[20:20] v8bot: mjr_: Commands: Type `v <command>.  Optionally, type `v <command> @ <nick> to send to a specific user. 				`v Commands are: about, beers, commands, git, google, help, macro. Other commands: v8, `re, `pcre, `ref.  Type `v help <command> for more information.  Join #v8bot for more support.
[20:20] mjr_: ha!
[20:20] rauchg_: we've got a winner
[20:21] bahamas has joined the channel
[20:21] CIA-95: node: 03Ryan Dahl 07master * r4f32a59 10/ (lib/buffer.js test/simple/test-buffer.js): Fix buffer.slice(0, 0) - http://bit.ly/f4AzER
[20:23] pagameba: `v beers
[20:23] v8bot: pagameba:  has 0 beers.
[20:23] pagameba: ?
[20:23] pagameba: hah
[20:24] jesusabdullah has joined the channel
[20:27] mjr_: v8bot has all kinds of commands, including macros.
[20:28] mjr_: `re "v8bot has all kinds of commands, including macros." /\s/g
[20:28] v8bot: mjr_: [" ", " ", " ", " ", " ", " ", " "]
[20:29] davglass has joined the channel
[20:29] xla has joined the channel
[20:31] rajeshsr has joined the channel
[20:32] jimt has joined the channel
[20:35] Anti-X has joined the channel
[20:36] dmcquay has joined the channel
[20:38] kriszyp has joined the channel
[20:40] SubStack: http://www.youtube.com/watch?v=nsCWiBMcJlk # we launch!
[20:40] stepheneb has joined the channel
[20:40] hellp has joined the channel
[20:41] tj: SubStack: congrats!
[20:42] vandenoever has left the channel
[20:42] isaacs has joined the channel
[20:42] SubStack: aw crap have to fix some bugs
[20:43] stride: SubStack: congratulations :)
[20:43] SubStack: thanks!
[20:43] SubStack: the silly nexus router isn't routing properly grumble
[20:43] jb55: this is cool
[20:43] SubStack: so don't share that link just yet ;)
[20:43] rauchg_: SubStack: congrats
[20:44] c4milo: SubStack: congrats :) 
[20:44] programble has joined the channel
[20:44] pdelgallego has joined the channel
[20:44] pharkmillups has joined the channel
[20:45] mjr_: SubStack: that looks awesome.  I want to sign up and give you some money.
[20:45] yhahn has joined the channel
[20:45] pkrumins has joined the channel
[20:45] pkrumins: :D
[20:45] pkrumins: browserling!
[20:45] pkrumins: sign up and give money! \o/
[20:45] SubStack: yep yep
[20:45] pkrumins: i want some
[20:46] SubStack: give some money to pkrumins too
[20:46] pkrumins: rolling out paid plans sooon!
[20:46] SubStack: the code is already in there for tiered service we just have to stress-test this beast
[20:46] SubStack: battle-harden it
[20:47] MikhX has joined the channel
[20:47] herbySk has joined the channel
[20:47] mjr_: It'll easily be worth it to avoid waiting if you are doing real work with it
[20:48] jb55: I got the start menu to pop up at one point, is that supposed to happen?
[20:48] SubStack: pkrumins is messing with stuff
[20:49] jb55: damn this is cool
[20:50] stride: you should make the queue uglier. those robots are kind of funny :)
[20:51] mjr_: If the site is down, you can interact with the Windows connection diagnoser wizard.
[20:51] mjr_: Which is funny.
[20:51] SubStack: heh well
[20:51] SubStack: if the webapp goes down the rest of the site is still operational
[20:51] SubStack: by design
[20:51] SubStack: same for any of the components
[20:51] jb55: TIL that there is an IETester app
[20:51] SubStack: auth server, nexus, api servers
[20:51] mjr_: I mean if the target URL sends back 404, then IE gets all Windows on you.
[20:51] c4milo: that's the beautify of single page interface :) 
[20:52] mjr_: or connection refused, or whatever.
[20:52] malkomalko has joined the channel
[20:52] c4milo: beauty 
[20:52] SubStack: mjr_: it'll be more seemless as we discover tricks
[20:53] jb55: I open up cmd and my tab closes!
[20:53] SubStack: we are messing with stuff right now
[20:53] SubStack: the api routing algorithm is broken it seems
[20:53] jb55: ;)
[20:53] RevoOf has joined the channel
[20:53] mjr_: This is super fantastic, guys.
[20:54] pkrumins: thanks!
[20:54] mjr_: Once you get it hardened, it's going to be a super valuable service.
[20:54] InsDel: How much resources does this use? I'd like to contribute a VM because this is going to help A LOT with my web development
[20:56] mjr_: Awesome Windows Network Diagnostics display, which ends up also exposing your AWS URL
[20:56] mjr_: https://skitch.com/mranney/rbsgg/browserling-interactive-cross-browser-testing-in-your-browser
[20:56] mr_daniel has joined the channel
[20:56] SubStack: hey now don't share it yet
[20:56] SubStack: we are fixing stuff
[20:56] mjr_: I haven't shared
[20:56] pkrumins: you can just go to my ip
[20:56] SubStack: ah k
[20:56] pkrumins: i mean to "whats my ip"
[20:57] mjr_: Just pointing out what happens when you go to 127.0.0.1
[20:57] pkrumins: and it will expose the ip of windows anyway
[20:57] mjr_: :)
[20:57] SubStack: mjr_: what's a good way to hide that aws stuff?
[20:57] delapouite has joined the channel
[20:57] pkrumins: brushing up the blog post
[20:58] mjr_: SubStack: it mostly gets hidden, but somewhere you send a redirect to the AWS name instead of your own DNS name.
[21:00] jimt_ has joined the channel
[21:00] jarfhy has joined the channel
[21:01] dgathright has joined the channel
[21:03] JimBastard has joined the channel
[21:05] ryah: god - select() is limited to 64 fds in windows -_-
[21:06] EvanR-work: that doesnt sound right
[21:06] c4milo: ryah: that's the sort of things you can expect from Microsoft :)
[21:07] boaz has joined the channel
[21:08] pquerna: ryah: "The default value of FD_SETSIZE is 64, which can be modified by defining FD_SETSIZE to another value before including Winsock2.h"
[21:08] jimt has joined the channel
[21:08] ryah: pquerna: http://tangentsoft.net/wskfaq/advanced.html#64sockets
[21:08] ryah: it seems it's worse than that
[21:08] pquerna: right
[21:09] ryah: motherfuckers.
[21:09] pquerna: nice set of faqs
[21:09] tisba has joined the channel
[21:09] dberlinger has joined the channel
[21:10] sivy: anyone using mysql-native? I can't seem to get antything out of a query
[21:11] BillyBreen has joined the channel
[21:11] Booths has joined the channel
[21:12] isaacs1 has joined the channel
[21:13] jimt has joined the channel
[21:15] Aikar: anyone here experienced with forking? what in the world am i doing wrong https://gist.github.com/712548
[21:15] pquerna: ryah: there were some designs on dev@apr a few years back to use thread pools of 63 events each
[21:15] pquerna: ryah: but its windows.. :)
[21:16] ryah: why can't windows just provide a fucking kqueue
[21:17] ryah: anger
[21:17] pquerna: well, you can build IOCP on top of kqueue, but not kqueue on top of IOCP
[21:17] jb55: so that they dont scale so they can sell more windows servers #conspiracy
[21:17] hassox has joined the channel
[21:17] moeppel123 has joined the channel
[21:17] pquerna: jb55: IOCPs are actually pretty damn fast
[21:17] sivy: any mysql-native users know how to help me: https://gist.github.com/712550
[21:18] pquerna: (from everything I've heard, I'm no windows expert by any means)
[21:18] jimt_ has joined the channel
[21:19] ryah: how about a fake kqueue implementation which uses multiple threads in the background
[21:19] ryah: userspace
[21:19] jb55: madness
[21:19] ryah: weekend project for someone? :)
[21:20] izuzak has joined the channel
[21:20] pquerna: ryah: yes, you could do it with lots of threads in the background.
[21:20] pquerna: http://mark.heily.com/libkqueue/
[21:20] pquerna: already eixsts, to put kqueue on linux 
[21:20] pquerna: :)
[21:20] ryah: woah
[21:20] ryah: awesome
[21:21] pquerna: he is using that as a base to port libdispatch / GCD
[21:22] pquerna: i'm sure he wouldn't mind a windows port :)
[21:22] ryah: can we just shutdown node.js and come back in a few years when this shit is fleshed out
[21:22] ryah: ?
[21:22] cardona507: :)
[21:23] ryah: hopefully windows will be gone by then
[21:23] tj: ryah: ahaha ditto that
[21:24] tj: id LOVE for windows to disappear
[21:24] JimBastard: ACTION locks tj in the basement
[21:24] JimBastard: no windows!
[21:24] tj: doh!
[21:24] JimBastard: it writes the javascripts or else it gets the hose again
[21:25] JimBastard: :p
[21:25] tj: ahahahaha
[21:25] ryah: imagine is kqueue was everywhere
[21:25] ryah: s/is/if
[21:25] SubStack: tj: I'm working on that problem right now ;)
[21:25] SubStack: wherein windows disappears
[21:25] ryah: that would be so beautiful
[21:26] tj: humans cant even decide on a directory name, so not sure that will ever happen
[21:26] tj: but standards would be nice
[21:26] jimt has joined the channel
[21:28] saml: how do I delete a file?  fs.rmdir?
[21:28] mscdex: saml: fs.unlink
[21:28] tj: saml unlink
[21:28] saml: mscdex, tj ah thanks
[21:29] bartt: Anyone have any experience with https://github.com/rsms/node-imagemagick or https://github.com/aheckmann/gm ?
[21:30] hornbeck has joined the channel
[21:30] aheckmann: bartt i wrote gm. whats up
[21:30] bartt: aheckmann: I'm having to pick either one for a project.
[21:31] bartt: Both are wrappers around ImageMagick's command line tools, right?
[21:31] micheil: ohh.. i feel special, got some kooky irish guy when calling paypal for the 5th time this week. >_>
[21:31] aheckmann: not sure about rsms
[21:31] aheckmann: but
[21:31] jimt has joined the channel
[21:31] aheckmann: mine is just shells out
[21:31] aheckmann: its not a real binding
[21:31] aheckmann: but
[21:32] aheckmann: it works well for e
[21:32] aheckmann: me
[21:32] micheil: ryah: in regards to prctl, did you see ben's patch?
[21:32] bartt: gm looks very nice indeed.
[21:32] tj: bartt: if you are not doing heavy work the cli one would be better
[21:32] aheckmann: thanks bartt
[21:32] tj: IMO
[21:32] pharkmillups has left the channel
[21:33] rauchg_: you'll have an easier time upgrading node
[21:34] bartt: tj: better than what? Is there a node module that binds to the ImageMagick library? Couldn't find one.
[21:35] tj: bartt: I assumed thats what node-imagemagick was
[21:35] foertel has joined the channel
[21:35] aheckmann: bartt: gm uses GraphicsMagick
[21:35] foertel: n'evening
[21:36] davglass has left the channel
[21:37] yozlet has joined the channel
[21:37] dxld has joined the channel
[21:38] tyfighter has joined the channel
[21:40] prettyrobots: What is a good library for file comfort functions?
[21:40] foertel: I'll have bad dreams about JS middleware again *g*
[21:40] prettyrobots: Like copy a file, delete a directory and its contents, etc.
[21:40] bruse: what is the definition of middleware?
[21:41] Twelve-60` has joined the channel
[21:41] foertel: connect in my case ;)
[21:42] isaacs has joined the channel
[21:45] yozlet has joined the channel
[21:47] isaacs: ryah: yt?
[21:49] frodenius has left the channel
[21:49] tanepiper: wow, i didn't realise there were *that* many flow control libs
[21:49] tj: haha
[21:50] SubStack: blame isaacs for giving a talk walking people through how to write their own :p
[21:50] tanepiper: and everyone seems to have provided a similar solution
[21:50] tj: i found a way cleaner way to do it
[21:50] tj: but, still useless I think
[21:50] tanepiper: I started using Step, but i've recently switched to async personally
[21:51] tanepiper: although i might to back to step, because it just works and does it well
[21:53] yozlet: I've counted at least three different libs called async
[21:53] foertel: men … all this node stuff is really confusing for a poor little php dev *g*
[21:53] Aikar: hmm, isnt fork() suppose to return 0 for parent and a new PID for child?   https://github.com/ryantenney/node-fork   is behaving backwards :3
[21:53] tj: foertel: you will get a hang of it, and then php will confuse you
[21:54] isaacs: tanepiper: slide is the best.
[21:54] foertel: tj: yeah … bright future :D
[21:54] tj: with all it's terribleness :p
[21:54] Aikar: foertel: lol its not bad, ive been doing php for 8 yrs getting into node now :)
[21:54] isaacs: tanepiper: because you can write it in an hour in Keynote
[21:54] Aikar: very much enjoying the js language over PHP in most regards
[21:55] foertel: i think the amount of new is heavy ;) developing php for years you are learning slowly
[21:55] foertel: and then starting something new, espacially young stuff like node there is so much to see ;)
[21:56] captain_morgan has joined the channel
[21:56] Aikar: can anyone explain the 'backlog' option for listening, does a backlog of 128 mean a max of 128 connections?
[21:58] dxld: if I am not mistaking backlog is the number of connections that the kernel will queue up for accept'ing until it starts to refuse connections
[21:58] tanepiper: isaacs: tbh it doesn't fit in my style
[21:58] ben_alman: Anyone in the Boston area that would like to give a node.js talk @ the next Boston JavaScript meetup?
[21:58] isaacs: tanepiper: bah. :P
[22:00] floyd has joined the channel
[22:05] bartt: ACTION giving gm a try /cc aheckmann
[22:05] devinus: oh no
[22:06] devinus: didn't node used to have btoa ?
[22:06] devinus: no...damn never did
[22:06] yozlet has joined the channel
[22:06] richcollins: I don't see any "error" events in the docs for http.Client, http.ClientRequest or http.ClientResponse
[22:06] aheckmann: bartt: cool. let me know if you run into anything you need help with
[22:06] themiddleman has joined the channel
[22:07] richcollins: Do they adhere to the Streams interface?
[22:07] flashingpumpkin has joined the channel
[22:07] flashingpumpkin: ah. here i seem to be right. short question about node-amqp
[22:08] flashingpumpkin: been dabbling around a little with node-amqp and rabbitmq and kinda realised that connection.channels, connection.queues and connection.exchanges keeps growing
[22:09] Aikar: ok. i finally got this code working... pgriess has an article about using multi processes for 1 server to take advantage of all cores on system here: http://developer.yahoo.com/blogs/ydn/posts/2010/07/multicore_http_server_with_nodejs/#1   cept it doesnt work on 0.3.x, so I was working on figuring it out under 0.3.x and got it working. if anyone is interested in it here: https://gist.github.com/712628
[22:10] CIA-95: node: 03Wade Simmons 07master * r03e5da8 10/ src/node_net.cc : Fix ErrnoExceptions that have the wrong syscall name - http://bit.ly/f8yrA8
[22:10] CIA-95: node: 03isaacs 07master * ra2b3c86 10/ doc/api/globals.markdown : Correct reference to "process.Module" - http://bit.ly/h0gGCo
[22:10] MetaJake has joined the channel
[22:11] flashingpumpkin: also, that when destroying exchanges, the queues on it don't get notified even though the spec says (?) that all the queue bindings are cancelled
[22:13] isaacs has joined the channel
[22:13] Poetro1 has joined the channel
[22:14] Poetro1: There are several modules that has a test directory. How do i run those tests?
[22:15] Aikar: anyone able to glance over my code and see if any glaring issues besides safety checks like making sure we have a worker (ill get that soon)
[22:15] ryah: making an evbuffer that works on libev probably isn't too hard
[22:15] ryah: then we could steal the iocp backend from libevent
[22:16] micheil: hmm..
[22:16] ryah: then we don't have to take that whole beast
[22:16] mu-hannibal has joined the channel
[22:16] yozlet has joined the channel
[22:17] ryah: in fact, making an evbuffer on libev is about a 1 day project
[22:17] saschagehlich has joined the channel
[22:17] derferman has joined the channel
[22:17] micheil: ryah: I'm guessing you'd have to use say, ev_io?
[22:18] saml: so, if my callback function throws, where can I catch it?
[22:18] micheil: saml: uncaughtexception
[22:18] micheil: I think
[22:18] saml: micheil, is that the only way?
[22:18] saml: document says that it's crude
[22:19] micheil: there is another way, but really, why is your callback throwing?
[22:19] saml: i test if file exists.. if there is, i spawn a process `convert the-file -resize 100x100 ouput.jpg`
[22:20] saml: calling convert command happens in a callback
[22:20] irclogbot_ has joined the channel
[22:20] micheil: in which case, that spawn should have an "error" event
[22:20] ryah: micheil: yes
[22:20] richcollins: I have a node process that makes a bunch of http requests.  The process exists before all of the requests complete.  I'm listening for the error, close and end events.  What might I be missing?
[22:20] micheil: ryah: hmm, and then on windows it'd be libev + evbuffer = io calls?
[22:21] yozlet has joined the channel
[22:23] galaxywatcher has joined the channel
[22:25] foertel has left the channel
[22:25] BillyBreen has joined the channel
[22:26] pedrobelo has joined the channel
[22:27] jimt_ has joined the channel
[22:28] mscdex: richcollins: gist?
[22:28] eee_c has joined the channel
[22:29] richcollins: mscdex: https://gist.github.com/4e9919b9fb5a9c219ee6
[22:29] richcollins: That is the code for my HttpRequest proto
[22:29] mking has joined the channel
[22:29] richcollins: When each request completes, it creates a new request for the url
[22:29] mking: hi all, question about sending POST data with httpClient
[22:30] richcollins: so the process should run indefinitely
[22:30] richcollins: mscdex: However the process ends with one request still "in progress"
[22:30] richcollins: I'm guessing that I'm not handing some event that I should
[22:30] mking: i'm writing  to a request object a simple querystring (e.g. test1=true&test2=false) and on the other end it comes out with extra line breaks and random numbers
[22:30] saml: so i think i shouldn't throw at all
[22:30] richcollins: so I don't "requeue" the request
[22:31] saml: do you use EventEmitters when error is encountered?
[22:31] richcollins: mking: You probably aren't setting the encoding properly
[22:31] richcollins: mking: request.end(this.body(), 'utf8');
[22:33] mking: richcollins: tried that, still same result. I'm posting to a simple ruby sinatra app and when i look at both the headers node is sending and the parameter output, i see {"16\r\ntest1"=>"true", "test2"=>"false\r\n0\r\n\r\n"}
[22:33] richcollins: mking: Have you looked at the bytes that node is sending?
[22:33] richcollins: using wireshark or something equivalent?
[22:34] mking: richcollins: when i inspect the request object, i get: _writeQueue: [ 'POST /api/notify HTTP/1.1\r\nhost: 127.0.0.1\r\nContent-Type: application/x-www-form-urlencoded\r\nConnection: close\r\nTransfer-Encoding: chunked\r\n\r\n16\r\ntest1=true&test2=false\r\n0\r\n\r\n' ]
[22:35] mking: actually seeing an issue now, i'm setting content-length in an object that i pass in as the request headers to the request function, and i don't see it set in the headers
[22:35] richcollins: ah
[22:36] richcollins: also make sure that you measure the content length using Buffer.byteLength
[22:36] richcollins: not the string's length
[22:36] richcollins: (if you're using utf8)
[22:38] micheil: isaacs: hey, where were those docs on using npm from a script?
[22:38] Aikar: ok im having an insanely weird issue, https://gist.github.com/712669   - my workers array is just randomly losing entries...after it finishes processing all of them it says it spawned 8 (in my use here), and i see workers.length report 7 or 6 or 8 or 1 randomly. the only code i have in there to remove an entry has a console.log and its not being triggered.... anyone know what the hell is going on? https://gist.github.com/712628 for full test code (but the lib co
[22:38] isaacs: micheil: in the README.md
[22:38] micheil: aha, I was looking in doc/
[22:39] mking: richcollins: i'll give that a shot
[22:40] micheil: isaacs: writing that dependency installer I talked about last week.
[22:40] mking: richcollins: thanks, i'm a moron. I passed in my request headers object then added content-length afterwards
[22:40] richcollins: ah
[22:41] mking: richcollins: thanks for shaking that loose for me :-)
[22:41] richcollins: mking: np -- happy noding ...
[22:42] cloudhead has joined the channel
[22:43] isaacs has joined the channel
[22:43] micheil: isaacs: npm.load, will that load up the current users' npm config automatically?
[22:47] Durl has joined the channel
[22:48] MetaJake has left the channel
[22:49] isaacs: micheil: yeah
[22:49] isaacs: npm.load({cli configs}, function () { npm.doStuff })
[22:49] xla has joined the channel
[22:50] isaacs: ndb is on npm now.
[22:50] c4milo has left the channel
[22:51] cjm has joined the channel
[22:51] wattz: anyone expose/port/make available printf to js (from C++) or most just do it in js to start?
[22:51] eee_c has joined the channel
[22:52] bnoordhuis has joined the channel
[22:54] jvolkman_: wattz: what do you need printf for?
[22:54] wattz: just wondering
[22:54] tj: wattz: ive done a few printf implementations
[22:54] wattz: I wrote one in js
[22:54] wattz: but curious how you would handle it in C++/Node/v8
[22:54] wattz: to expose the native one
[22:54] jetienne: wattz: no advantage in doing it in c++
[22:54] wattz: right
[22:54] mscdex: wattz the need for C++? i think there's at least a few implementations of printf for node/v8
[22:55] wattz: just curious how it would look
[22:55] mscdex: :-D
[22:55] wattz: mscdex: in js it's pretty simple
[22:55] mscdex: yeah
[22:55] isaacs: wattz: check out the console.log function in src/node.js
[22:55] ryah: :P~ ndb
[22:55] wattz: but printf passing arguments to printf 
[22:55] wattz: would be a pain
[22:55] technowe_ has joined the channel
[22:55] ryah: if only it could be integrated into gdb
[22:55] ryah: i could actually make programs with node
[22:55] wattz: ^
[22:56] Aikar: ok im having an insanely weird issue, https://gist.github.com/712669   - my workers array is just randomly losing entries...after it finishes processing all of them it says it spawned 8 (in my use here), and i see workers.length report 7 or 6 or 8 or 1 randomly. the only code i have in there to remove an entry has a console.log and its not being triggered.... anyone know what the hell is going on? https://gist.github.com/712628 for full test code (but the lib co
[22:56] isaacs: wattz: console.log("Hi, %s", "world")
[22:56] davidascher has joined the channel
[22:56] wattz: isaacs: it's in js though
[22:56] isaacs: ryah: yeah, i know what hard time you have making programs with node ;)
[22:56] wattz: i know how to do that, was just curious how you could do it in C++ is all
[22:56] isaacs: wattz: oh, you want like a binding to printf?  that's silly.
[22:56] saml: so, I do emitter.emit('error', ...)      emitter.on('error', function(err) { sys.log(err); });      and somehow i see multiple logs  3 to 5 times of same error
[22:57] wattz: isaacs: just one of those things, ya know?
[22:57] isaacs: yeah, i dig
[22:58] stagas: is there a difference in sending say 10 packets of 5 bytes to sending 1 of 50 through a websocket?
[22:58] stagas: in speed?
[22:59] sonnym has joined the channel
[23:00] tanepiper: http://www.aminutewithbrendan.com/pages/20101122
[23:00] wink_: stagas: do you know if nagle is enabled?
[23:00] stagas: wink_: ?
[23:00] wink_: it's a socket option that will combine small packets if it can
[23:01] wink_: there will be overhead if your 10 packets go out individually
[23:01] [[zz]] has joined the channel
[23:01] saml: oh, it's like this..   first time I hit  /some/path, 'error' is fired once. second time, twice, third time, 3 times...etc
[23:01] wink_: at 10 packets, its probably negligible, but its there
[23:01] saml: should I flush emitter or something after handling an event?
[23:02] jperras has joined the channel
[23:02] aubergine has joined the channel
[23:03] mikedeboer has joined the channel
[23:03] stagas: wink_: ok that's what I was doing I just thought I might be combining packets for no reason :)
[23:03] wattz: could use va_list
[23:03] jetienne: wattz: 
[23:03] softdrink: does node build statically linked by default?
[23:04] Aikar: can someone please help me understand whats going wrong with my code? https://gist.github.com/712628  the workers array is just magically changing on each request. sometimes it has expected 8, sometimes 7, sometimes 0
[23:04] jetienne: wink_: stagas: naggle would be only controllable on server. so only for data server to client... additionally one would have to check those data are not buffered before kernel
[23:04] jetienne: stagas: most likely with no reason :)
[23:05] jetienne: no early optim kindof
[23:05] wink_: so there isnt a way to toggle nagle on the websocket?
[23:05] wink_: client that is
[23:06] Aikar: setNoDelay
[23:06] jetienne: wink_: not that i have checked. but clearly the api is much much higher than this
[23:06] wink_: because at 10 byte packets your tcp header overhead is at least twice that just from tcp headers
[23:07] thebigbad: Aikar: I see a workers.splice in master.on('end', ...) that doesn't log to console
[23:07] Aikar: thebigbad: it does in my test code, thats not being triggered
[23:07] jetienne: http://dev.w3.org/html5/websockets/#the-websocket-interface
[23:08] Aikar: thebigbad: https://gist.github.com/712669
[23:08] wink_: jetienne: sure, but sending discrete 10 byte packets is a little bit of a waste if you know you're gonna send 5 of 'em
[23:08] Aikar: thats what im running sorta with console.log debug lines
[23:08] jetienne: wink_: i do agree :)
[23:09] wink_: <3
[23:09] micheil: isaacs: is something like "oauth@>=0.8.3" a valid version?
[23:09] isaacs: micheil: yeah
[23:09] micheil: okay, cool
[23:10] thebigbad: Aikar: you saying that sometimes numWorkers  > workers.length ?
[23:10] tanepiper: people doing twitter stuff, beware: http://groups.google.com/group/twitter-development-talk/browse_thread/thread/6a16efa375532182?pli=1
[23:10] Aikar: yep
[23:10] micheil: and is the version part of a dependency optional?
[23:10] Aikar: it seems to change randomly
[23:10] isaacs: micheil: yeah.  default version is "latest"
[23:10] isaacs: micheil: just like using the install command directly
[23:10] micheil: so if I do:
[23:10] thebigbad: so if spawnWorker ret false, than ret && i++ < numWorkers will end early
[23:10] micheil: module+"@"+version 
[23:10] micheil: and version = "" or something, then what?
[23:11] Aikar: the ret false is for the forked process, forked would return false (which we want to break out of the loop)
[23:11] thebigbad: when does fork() return a falsy value?
[23:11] isaacs: var d = []; Object.keys(data.dependencies).forEach(function (dep) { d.push(dep+"@"+data.dependencies[dep]) }) ; npm.commands.install(d, cb)
[23:11] isaacs: micheil:  "" is a valid version range.
[23:11] Aikar: see if(pid) return true, thats the parent process, so it wants to continue onto spawning the next worker, 
[23:11] isaacs: micheil: it means "*" when interpreted as a range, or "latest" when interpreted as a tagname.
[23:12] thebigbad: Aikar: huh, then I have no ideas for you. sorry!
[23:12] Aikar: if pid is 0, thats the new process (i swear that seems backwards, i thought 0 was parent? but its not behaving that way), we dont want it to try to spawn another process so it returns false and exits while loop
[23:13] tanepiper: i assume nodejs is affected by the 53 bit limit of numbers too? (i haven't tested)
[23:14] isaacs has joined the channel
[23:14] micheil: isaacs: and I'm assuming I can require("npm/utils/read-json") ?
[23:15] isaacs: micheil: yep
[23:15] isaacs: micheil: though, the safer way is to do `npm cache add <whatever>`
[23:15] micheil: hmm?
[23:15] isaacs: micheil: add the thing to the cache, and that validates that it's a proper package, with valid data, etc.
[23:15] isaacs: oh, but you're not installing it.
[23:15] isaacs: so nvm
[23:15] isaacs: yeah
[23:16] isaacs: require("npm/utils/read-json")(theFile, cb)
[23:16] micheil: I'm just wanting to get the data in it, to find the dependencies key
[23:16] isaacs: yeah
[23:16] jashkenas has joined the channel
[23:16] BillyBreen has joined the channel
[23:17] adamcopp has joined the channel
[23:18] nsolsen has joined the channel
[23:18] micheil: isaacs: looks good? https://gist.github.com/712753
[23:18] adamcopp: I'm having trouble with express's app.register for registering mustache. I need to wrap their API, but I'm not sure how to, despite the clear-looking example. i've tried return mustache.to_html(str, options) but that doesn't seem to use any of the paramaters
[23:19] isaacs: sure, that should work
[23:19] micheil: isaacs: any suggestions?
[23:19] isaacs: micheil: read-json doesn't depend on any configs afaik, but i'm generally wary of calling npm functions outside of having been loaded.
[23:19] isaacs: oh, no, it does: the --dev flag might tell it to read the devDependencies
[23:19] micheil: okay
[23:20] isaacs: yeah, wrap the whole thing in npm.load(...)
[23:20] micheil: fixed.
[23:21] papandreou has joined the channel
[23:22] sivy: i'm trying to run this test (on my own db) for mysql-native, and i'm getting a parse error: https://github.com/sidorares/nodejs-mysql-native/blob/master/tests/test_execute.js
[23:22] sivy: at db.execute(process.argv[2], );
[23:23] aubergine has joined the channel
[23:24] micheil: isaacs: looks like it worked.
[23:25] micheil: isaacs: would you object to something like that being added to npm?
[23:26] tanepiper: tbh i didn't realise i could use npm that way
[23:26] tanepiper: gonna re-write my deploy scripe!
[23:27] tanepiper: s/e/t
[23:27] micheil: hey, who knows of the band.. Birds of Tokyo?
[23:27] benburkert has joined the channel
[23:28] micheil: (totally off topic, I know :P)
[23:29] papandreou: tj: I just installed the latest spark/connect/express from npm, but it seems like express doesn't pick up the environment with I specify "spark -E production", which worked perfectly fine previously. My diag is that a new spark version with the *_ENV change needs to be pushed.
[23:29] tj: papandreou: ah yeah if it is not using NODE_ENV then it wont work
[23:29] tj: anymore
[23:31] micheil: isaacs: like, if I sent you a pull request to add that functionality to npm, would you accept it?
[23:31] sh1mmer: isaacs: nave stable option nag
[23:31] sh1mmer: :D
[23:32] papandreou: tj: The fix has already been committed (bf7aac8f6), but hasn't made it to the npm repo.
[23:32] tj: papandreou: ah I see
[23:32] tj: ill get around to it soonish
[23:32] mw has joined the channel
[23:32] papandreou: tj: Thanks! (Damn, you're a fast typer!)
[23:32] _mql has joined the channel
[23:32] tj: papandreou: haha :p
[23:33] tj: I can type fast but my grammar is shit
[23:33] rkieffer: Hey gang, I'd like to get your thoughts on a performance test I just ran comparing ruby, perl, python, php, and Node.  Here's the money shot: http://goo.gl/YSmUH
[23:33] cagdas has joined the channel
[23:33] papandreou: tj: As long as it compiles :)
[23:33] tj: rkieffer: node is not a language
[23:33] tswicegood: rkieffer: looks nice, but what tj said :-)
[23:33] tj: and what are you benchmarking?
[23:34] rkieffer: Here's the source https://github.com/broofa/perf-lite
[23:34] tj: ohhh merge sort
[23:34] rkieffer: ... minor variation of this post: http://izumi.plan99.net/blog/index.php/2008/01/17/ruby-vs-php-performance/
[23:34] richcollins: Node appears to be exiting while I still have active listeners.  How should I go about debugging this?
[23:35] adamcopp: Is there a way to tell connect.staticProvider to serve static content at something other than the root of my webserver?
[23:36] tj: adamcopp: connect.staticProvider(__dirname + '/public')
[23:36] jashkenas: rkieffer: that C++ result seems suspicious, no? 
[23:36] hornairs has joined the channel
[23:36] adamcopp: tj: I have that, which serves files from PWD/public, but at urls like localhost/file. I want something like localhost/static/file
[23:37] tj: adamcopp: or connect.staticProvider({ root: __dirname + '/public' }) if you use other options
[23:37] rkieffer: It's consistent with plan99's original results... :P
[23:37] jashkenas: considering that Node's merge sort is implemented in terms of V8's c++...
[23:37] jashkenas: (madness)
[23:37] rkieffer: The test is the merge-sort *algorithm*, as implemented in different languages.
[23:38] tanepiper: v8 [] == []
[23:38] v8bot: tanepiper: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[23:38] tanepiper: v8: [] == []
[23:38] v8bot: tanepiper: false
[23:38] tanepiper: [] instanceof []
[23:38] rkieffer: The point is to test the underlying operations that make up the algorithm, not test whatever native sort algorithm the various languages use.
[23:38] tanepiper: v8: [] instanceof []
[23:38] v8bot: tanepiper: TypeError: Expecting a function in instanceof check, but got 
[23:38] jimt has joined the channel
[23:38] rkieffer: jashkenas: ^^^ is that addressing the point you were making?
[23:39] tanepiper: v8: typeof [] == 'object'
[23:39] v8bot: tanepiper: true
[23:39] rcy has joined the channel
[23:39] yozlet has joined the channel
[23:40] jashkenas: rkieffer: not so much ... I would expect C++'ers to take issue with your use of boost pointers somehow, but I don't know anything about it.
[23:40] _mql: SubStack: Turned out DNode is just a perfect fit for my usecase — thanks for creating this!  :) client server communication (including authorization) is now entirely done through DNode RMI calls. https://github.com/michael/substance/blob/master/server.js
[23:41] rkieffer: jashkenas: yeah, that's not my strong suit.  I'm just inheriting the implementation from the original blog post.
[23:41] tj: jashkenas: keep in mind v8 compiles to bytecode too
[23:41] tj: but they should be similar id think, not that far off
[23:41] jashkenas: and the bytecode interpreter is implemented in C++ ... right.
[23:42] rkieffer: the one comment in the original post aludes to boost's use of reference counting for shared pointers, but doesn't say if that's a good or bad thing.
[23:42] tj: jashkenas: its not an interpreter
[23:42] jashkenas: quite right -- generated machine code, sorry.
[23:43] mikeal has joined the channel
[23:43] tj: s/byte/machine/
[23:43] rkieffer: tj: jashkenas well, the intended audience for this will be node noobs that have preconceptions about JS performance.  My hope is that this breaks those preconceptions without (grossly) misrepresenting Node performance.
[23:44] papandreou: adamcopp: You can do that with express: app.use('/public', express.staticProvider(__dirname + '/public'));
[23:44] isaacs has joined the channel
[23:44] rkieffer: although... I suppose implying that Node is 5x faster than C++ might be considered "gross misrepresentation" :D
[23:44] papandreou: adamcopp: I assume you can wire it up with connect, too, but I don't know
[23:44] jashkenas: rkieffer: you bloggin' it?
[23:44] richcollins: Ah it looks like jQueryify in jsdom doesn't add any callbacks to the event loop
[23:44] tj: papandreou: yeah its the same interface
[23:45] rkieffer: jashkenas: don't see why not.  just spin it as , "here's the source.  Here's my results.  Thoughts?"
[23:45] jelveh has joined the channel
[23:45] rkieffer: jashkenas: although the immediate audience would be Facebook engineers that Im putting a presentation together for.
[23:46] jashkenas: rkieffer: get a C++ coder to take a peek before you do ... or else you'll have to spend more time defending your methodology than discussing what it means ... just imo.
[23:46] rkieffer: jashkenas: words o' wisdom
[23:46] yozlet1 has joined the channel
[23:46] tj: rkieffer: I can probably take a look in a bit
[23:46] tj: whats the repo again?
[23:46] jashkenas: rkieffer: that's exciting stuff though ... you presenting with Will?
[23:47] ph^ has joined the channel
[23:47] Ond has joined the channel
[23:47] jashkenas: facebook tech talk?
[23:47] Aikar: _mql: why are you doing require('lib@ver'); in your code?
[23:47] rkieffer: jashkenas: yeah, tech talk. 
[23:47] chrischris has joined the channel
[23:47] Ond: Sounds high tech.
[23:47] rkieffer: tj: https://github.com/broofa/perf-lite
[23:48] tj: cool, thanks
[23:48] rkieffer: tj: no, thank you :)
[23:49] _mql: Aikar: just wanted to freeze some particular versions. But that's just for now. I'm not too familiar with package dependencies in node yet.
[23:50] SubStack: _mql: glad dnode is a good fit!
[23:50] MattDiPasquale has joined the channel
[23:51] trentm has joined the channel
[23:51] trentm has left the channel
[23:52] airhorns has joined the channel
[23:52] trentm has joined the channel
[23:52] richcollins: Is there a general way to add a callback to the run loop so node won't exit until I explicitly remove it?
[23:53] _mql: SubStack: really cool stuff, didn't think it work out that well.
[23:53] richcollins: I suppose I could setTimeout with a long timeout
[23:53] Aikar: richcollins: var stdin = process.openStdin();
[23:53] ajcates has joined the channel
[23:53] Aikar: thatll hold it open
[23:53] richcollins: perhaps there is a better way?
[23:53] Aikar: whats wrong with that?
[23:53] Aikar: node has to have something to do/expect
[23:53] Aikar: that gives it something
[23:53] richcollins: I meant a better way than setTimeout
[23:54] richcollins: Aikar: How about adding more than one callback at a time?
[23:54] Aikar: huh
[23:54] richcollins: Aikar: I'm using jsdom + jQuerify
[23:54] richcollins: jQueryify returns immediately
[23:54] Aikar: you can call setInterval/setTimeout as many times as you need
[23:54] richcollins: but its callback might be called at a later date
[23:54] richcollins: however, the process exits before the callback is called!
[23:55] Aikar: sounds like it has no work to do after the callback is called and it dies before you see data on screen
[23:55] Aikar: someone was talking about that earlier waiting for a drain event to exit
[23:55] richcollins: Aikar: The callback isn't being called afaics
[23:55] Aikar: try process.stdout.on('drain', function() { process.exit(); });
[23:55] Anti-X has joined the channel
[23:56] _mql: SubStack: Still need to improve the code, but that's an endless story, u know ;)
[23:56] Aikar: richcollins: add process.openStdin(); to bottom of file... thatll hold your process open until you control C it, then you can see if its being called
[23:57] SubStack: _mql: yeah error handling is especially messy right now
[23:57] SubStack: _mql: and dnode evolved from something quite different too, so that makes it doubly messy
[23:57] ossareh has joined the channel
[23:57] SubStack: at least it has lots of tests
[23:57] fly_: hi2all
[23:57] _mql: Aikar: So you'd recommend to leave the @ver thing out?
[23:57] richcollins: Aikar: How about a sync write to stdout?
[23:58] sveimac has joined the channel
[23:58] fly_: is node.js using a reasonable for non-comet filling sites?
[23:58] rauchg_: fly_: absolutely 
[23:58] fly_: I mean can I write my php site on node
[23:58] Aikar: _mql: yeah that way when a new version comes out and you do an npm update or install to diff box itll still work (cause keeping code updated is good too you know :P)
[23:58] rauchg_: Q: When should I use node?
[23:58] fly_: without any troubles
[23:58] rauchg_: A: Always
[23:58] fly_: ok ^)
[23:59] SubStack: php? on node? what
[23:59] fly_: no, i mean node instead of php)
[23:59] _mql: SubStack: Would be great to fix issues, as they come up. :) Will spam the issues page, if necessary :P
[23:59] rauchg_: he's saying the typical php website usecase can be written with node
[23:59] rauchg_: but he's asking if it's a good fit
[23:59] SubStack: _mql: right, and pull requests also welcome!
[23:59] Aikar: fly_: node is always doable, it really depends on what your doing if its worth while to do it in node vs php. but for a comet server yeah node, but you should look at socket.io
