[00:00] davidwalsh has joined the channel
[00:00] kschzt: tj, www.warimals.com gets json and it all updates in frame based on the current data, you could say 
[00:01] tjholowaychuk: oh haha yeah for a game I totally agree
[00:01] kschzt: tj, if you just render a username into a template, yes I'd do that now with PHP :)
[00:01] tjholowaychuk: but for a "site" or semi-app meh
[00:02] kschzt: agreed :)
[00:03] kschzt: still, that node process is a single thread which must do a lot of things; offload anything you can into 'elsewhere' async
[00:04] tjholowaychuk: only if you are willing to punish their computers :p
[00:04] tjholowaychuk: for a game they expect that haha
[00:04] kschzt: yeah :) but the offload could also be local webworkers on the node side
[00:05] kschzt: I can tell you, that this shit is fantastic: https://github.com/pgriess/node-webworker
[00:05] tjholowaychuk: yeah if it applies, something that takes ~10ms or less to render shouldnt really be using a webworker I wouldnt think
[00:05] tjholowaychuk: more wasteful than anything
[00:05] tjholowaychuk: plus its not hard for us to spawn tons of nodes
[00:06] kschzt: tj, you reuse and pool them, then give the pool commands
[00:06] tjholowaychuk: totally. but for 10ms, why not just spawn 5 more nodes :p
[00:06] tjholowaychuk: to handle requests
[00:06] kschzt: there is no startup overhead, make the pool keep itself healthy, then issue commands, the webworker overhead is near 0
[00:07] jimt_ has joined the channel
[00:07] kschzt: yeah, for operations less than 10ms, doesn't make sense, anything over, does
[00:07] tjholowaychuk: I see us using it for image processing etc in the future
[00:07] tjholowaychuk: that is a good usecase
[00:07] kschzt: *shrug*
[00:07] kschzt: sure
[00:12] jimt has joined the channel
[00:13] noahcampbell has joined the channel
[00:15] jwcooper has joined the channel
[00:16] sivy has joined the channel
[00:19] monokrome: Does Node.JS have any async libraries for SQL and/or NoSQL?
[00:20] JusticeFries has joined the channel
[00:22] SamuraiJack_ has joined the channel
[00:22] kschzt: monokrome, https://github.com/ry/node/wiki/modules
[00:23] kschzt: monokrome, as this is Node, they are (all?) async
[00:24] HAITI has joined the channel
[00:24] HAITI: cheers
[00:31] yozlet has joined the channel
[00:33] jimt_ has joined the channel
[00:34] hunterloftis: tjholowaychuk: The cleanest way for me to get @Import working is to change the signature of compile from (str, function) to -> compiler.compile(str, srcDir, function(err, str){
[00:34] hunterloftis: tjholowaychuk: In order to avoid changing the signature, I could kludge in an external var just in compile.js that would give less the path it needs
[00:34] hunterloftis: tjholowaychuk: Any preference?
[00:35] cjm has joined the channel
[00:35] tjholowaychuk: hunterloftis: could pass it after the fn
[00:36] hunterloftis: tjholowaychuk: k, I'll do it that way
[00:37] mikeal has joined the channel
[00:45] killfill has joined the channel
[00:47] monokrome: kschzt: Hopefully they are :P
[00:59] linkmauve has joined the channel
[00:59] linkmauve: Hi all!
[00:59] abresas has left the channel
[01:00] xonecas has joined the channel
[01:00] linkmauve: I’d like to spawn vim from a nodejs app, but as it is a ncurses program I don’t want to do anything with stdout and so. How can I do this?
[01:00] xonecas: howdy everyone
[01:02] xonecas: I have a fresh build archlinux and I'm having trouble building node. ./configure fails (i got python and base-devel installed already)
[01:02] xonecas: here is the pastebin of the output
[01:02] xonecas: http://pastebin.com/JYUDvAjy
[01:02] xonecas: any help would be awesome :-)
[01:03] linkmauve: xonecas, you should use the package already done in AUR.
[01:03] linkmauve: PKGBUILD*
[01:04] linkmauve: There are some unofficial repositories that offer precompiled packages, if you prefer.
[01:04] xonecas: linkmauve: I dind't find it in aur...
[01:04] linkmauve: But building from AUR shouldn’t be a problem.
[01:04] xonecas: let me try without the .js
[01:04] linkmauve: xonecas, it’s the nodejs package.
[01:05] linkmauve: With yaourt, you can type “yaourt -S nodejs” and you’ll find it.
[01:05] xonecas: ahh I see I searched for node.js, came back with just some modules
[01:05] jwcooper has joined the channel
[01:05] frodenius: xonecas㇀ seems like your python version is not recent enough
[01:05] xonecas: frodenius: its version 3
[01:05] xonecas: :-/
[01:05] linkmauve: frodenius, too recent, I think.
[01:05] xonecas: it may be
[01:06] chapel: linkmauve: do you want to output somewhere?
[01:06] linkmauve: It’s a bug in nodejs, it requires python instead of python2.
[01:06] frodenius: or that :)
[01:06] linkmauve: chapel, I use temporary files.
[01:06] chapel: http://tldp.org/LDP/abs/html/io-redirection.html
[01:06] linkmauve: I just want to let the user modify some file.
[01:07] linkmauve: I said vim, but I want $EDITOR.
[01:08] xonecas: all good, thanks linkmauve frodenius 
[01:09] teemow has joined the channel
[01:09] linkmauve: chapel, your page is for shell scripting, I want to do that in a JS program.
[01:09] killfill has joined the channel
[01:09] chapel: if you want to open something youre going to have to use child process
[01:10] chapel: http://nodejs.org/docs/v0.3.2/api/child_processes.html#child_process.spawn
[01:10] xonecas: linkmauve: you can add '> /dev/null' to the exec command of vim to discard the stout
[01:10] linkmauve: I tried “var vim = spawn('vim', ['file']);”, it launchs vim (I see in ps), but don’t show it.
[01:11] chapel: not sure there
[01:11] robotarmy has joined the channel
[01:11] Aria: editors are special. They have to take over the terminal.
[01:11] linkmauve: If I capture stdout and print it, I get the affichage, but in a little window and without stdin.
[01:11] Aria: That's not normal subprocess behavior. 
[01:11] linkmauve: Aria, yes, that’s the problem.
[01:11] linkmauve: I don’t know how to do that.
[01:12] twoism has joined the channel
[01:12] Aria: Node would have to stop reading and writing stdin/out and the child process would need to be unpiped. I'm pretty sure node can't do that as is. (You'd need fork and exec)
[01:13] xonecas: linkmauve: do you know the underlying system? because I'm pretty sure you can call gnome-terminal/xterm and pass it the vim command
[01:13] xonecas: that way you'd have vim running in a term. or you can call gvim
[01:13] Aria: (Assuming you're in an x session)
[01:15] linkmauve: Unfortunately, I plan to run this program in a SSH session.
[01:15] strixv has joined the channel
[01:15] linkmauve: But it is a solution.
[01:15] Aria: Guess I need to get around to writing require('unix')
[01:15] linkmauve: ^^
[01:16] xonecas: eheh
[01:18] linkmauve: Thanks xonecas, for now I’ll use “var vim = spawn('tmux', ['new-window', 'vim file']);” (I use tmux).
[01:18] Aria: Hehe. Clever enough.
[01:18] linkmauve: But I’d like it to work elsewhere.
[01:18] Aria: Do you want your node script to stop and wait for the vim session?
[01:18] Aria: Or keep running in the background?
[01:18] linkmauve: Yes, if possible it should stop.
[01:19] Aria: a system() call essentially. Really time for me to write require('unix'). Heh.
[01:19] linkmauve: But either are good.
[01:19] linkmauve: fork and exec! \o/
[01:19] kschzt has left the channel
[01:21] sohail has joined the channel
[01:21] AAA_awright: Anyone know what --debug-brk does?
[01:21] AAA_awright: Actually, I'm trying to remember how to pause execution on running a program so I can attach a node-inspector
[01:22] zentoooo has joined the channel
[01:23] rodasc has joined the channel
[01:24] kschzt has joined the channel
[01:26] AAA_awright: Ah yes it's --debug-brk, I was using a bad port number
[01:26] chrisdico has joined the channel
[01:26] killfill has joined the channel
[01:26] aegir has joined the channel
[01:27] meder_ has joined the channel
[01:27] rbranson_ has joined the channel
[01:27] slpsys_ has joined the channel
[01:27] PyroPeter has joined the channel
[01:27] papyroma1cer has joined the channel
[01:27] dantaliz1ng has joined the channel
[01:27] sth_ has joined the channel
[01:28] CIA-121 has joined the channel
[01:29] domsz has joined the channel
[01:30] kschzt has left the channel
[01:30] kschzt has joined the channel
[01:30] zentoooo has joined the channel
[01:31] mikew3c_ has joined the channel
[01:31] stepheneb_ has joined the channel
[01:31] omni5cience_ has joined the channel
[01:31] saikat_ has joined the channel
[01:31] Yurik has joined the channel
[01:31] ddollar` has joined the channel
[01:31] MikhX_ has joined the channel
[01:31] matt_c_ has joined the channel
[01:31] tapwater_ has joined the channel
[01:32] elijah-mbp has joined the channel
[01:32] galaxywatcher_ has joined the channel
[01:32] galaxywatcher_ has joined the channel
[01:32] c4milo1 has joined the channel
[01:32] ben_alman has joined the channel
[01:32] rauchg_ has joined the channel
[01:32] gf3 has joined the channel
[01:32] yrashk has joined the channel
[01:32] BrianTheCoder has joined the channel
[01:33] yrashk has joined the channel
[01:33] yrashk has joined the channel
[01:34] Vertice has joined the channel
[01:34] yrashk has joined the channel
[01:34] kschzt: happy christmas!
[01:34] yrashk has joined the channel
[01:34] admc_ has joined the channel
[01:37] andrehjr has joined the channel
[01:37] skohorn has joined the channel
[01:38] wasabist has joined the channel
[01:38] nefD has joined the channel
[01:39] Cainus has joined the channel
[01:39] deoxxa has joined the channel
[01:39] case__ has joined the channel
[01:41] zentoooo has joined the channel
[01:41] yrashk has joined the channel
[01:41] jimt has joined the channel
[01:43] adamholt has joined the channel
[01:44] chapel: hmm, has anyone made streaming live video possible without flash?
[01:49] killfill has joined the channel
[01:51] datapimp has joined the channel
[01:53] esigler has joined the channel
[01:56] aaronblohowiak has joined the channel
[02:05] wasabist has joined the channel
[02:07] c4milo1 has left the channel
[02:08] tlrobinson has joined the channel
[02:10] c4milo2 has joined the channel
[02:11] pt_tr has joined the channel
[02:11] pt_tr has left the channel
[02:19] killfill has joined the channel
[02:26] linkmauve: chapel, yes, there are a lot of libraries to do that in almost every language. When I want to do a visioconference, I use Gajim, an XMPP client written in python that uses Gstreamer and Farsight to do the streaming.
[02:27] chapel: well I mean web based
[02:27] chapel: in the browser
[02:27] chapel: with no additional software
[02:28] tmzt_: linkmauve: no js based im client standalone is there
[02:30] linkmauve: tmzt_, you can try ChatZilla for IRC, OneTeam for XMPP…
[02:30] tmzt_: so you use v8 api to add native bindings or something else
[02:30] tmzt_: linkmauve: ah true forgot about them
[02:30] linkmauve: I have two friends that started an another XMPP-only client in JS.
[02:30] tmzt_: I mean written in pure js
[02:30] tmzt_: with node callbakcs
[02:31] linkmauve: And I started one in node using ncurses, but I don’t think I’ll ever publish it, neither continue it.
[02:31] tmzt_: what about libxcb bindings
[02:31] linkmauve: It is only for browsing PubSub, it doesn’t even support messages.
[02:32] jimt_ has joined the channel
[02:32] linkmauve: To write a graphical XMPP client? I switched to TTY some times ago, so no, thanks. :)
[02:34] masahiroh has joined the channel
[02:35] tmzt_: hmm
[02:35] tmzt_: with xcb bindings and a js toolkit you could do pure js applications
[02:37] jpld has joined the channel
[02:39] broofa has joined the channel
[02:40] linkmauve: tmzt_, have you tried the Mozilla platform? XUL is my favorite way to write graphical applications.
[02:41] tmzt_: sure
[02:41] chapel: I wish there were an easy chrome/v8 method
[02:41] chapel: I know there is webkit
[02:41] chapel: but I prefer chromes variation of webkit
[02:41] tmzt_: but node is my favorite way to write network code
[02:41] linkmauve: Mine too.
[02:41] tmzt_: chapel: chrome is all html
[02:41] chapel: I understand that
[02:41] tmzt_: linkmauve: when I completely lose it Ill embed it in the X server
[02:41] chapel: but for being able to just use it like xul
[02:42] linkmauve: But I prefer SpiderMonkey over v8, it has a lot of nice features from newer versions of JavaScript.
[02:42] linkmauve: I whish for a SM-based nodejs. ^^
[02:42] tmzt_: wouldnt it be slower?
[02:42] jimt has joined the channel
[02:42] tmzt_: there sort of is
[02:42] tmzt_: gjs
[02:43] tmzt_: or jssh
[02:43] tmzt_: jsshell
[02:43] charlenopires has joined the channel
[02:43] linkmauve: tmzt_, I don’t really care about slowness, nowadays all JS-engines are super-fast, computers are super-fast, and some tests show that SM isn’t that slower.
[02:44] linkmauve: For example http://arewefastyet.com/
[02:44] tmzt_: couldnt you use the same js parts of node with it?
[02:44] tmzt_: its things like buffer you would be missing
[02:44] linkmauve: tmzt_, I tried a lot of server-side JS frameworks, but nodejs is by far the best.
[02:45] linkmauve: No, there are buffers in SM.
[02:45] linkmauve: In the same way as is v8.
[02:47] tmzt_: I think Ive got a good use case for redis
[02:47] tmzt_: SRCNUMDSTNUM as the key
[02:47] MattDiPasquale has joined the channel
[02:50] ceej_ has joined the channel
[02:52] pHcF has joined the channel
[02:53] noahcampbell has joined the channel
[02:55] Zebra10 has joined the channel
[02:56] Zebra10: where is the default location for logs?
[02:56] Yuffster has joined the channel
[02:56] deoxxa has left the channel
[02:57] tmzt_: stderr?
[03:00] sechrist: anybody have any ideas on how I could use multiple socket.ios that can talk to each other (for redundancy)?
[03:01] sechrist: I have a few ideas scribbled on my whiteboard that use redis or ampq, but i'm curious if anybody else has done this
[03:02] c4milo2: sechrist: rabbitmq also works
[03:03] c4milo2: sechrist: basically you will have browsers linked to your messaging platform (redis, rabbitmq, etc) 
[03:03] jwcooper has joined the channel
[03:04] sechrist: well rabbitmq being ampq
[03:04] c4milo2: sechrist: subpub, you send a message to some queue and the apps that are subscribed to it will receive the message, you already know that, it is the common approach 
[03:05] c4milo2: sechrist: I didn't know redis supports ampq 
[03:05] sechrist: nah nah
[03:05] sechrist: anyway, our architecture is such that socket.io will be load balanced by haproxy, multiple haproxies, with a load balanced IP
[03:05] sechrist: but clients need to be grouped into a room
[03:06] sechrist: so I'm assuming on the message layer the events will be tagged with room-1772 etc
[03:06] sechrist: but i'm unsure how to partition these
[03:06] sechrist: I can't guarantee that all people in room y will be on socket.io server z
[03:07] chapel: pubnub
[03:07] chapel: I think there is an opensource node.js version of pubnub
[03:08] c4milo2: sechrist: you have to develop a layer of routing similar to what heroku does 
[03:08] c4milo2: where you can associate that 
[03:08] sechrist: yeah I was thinking that redis could store a table of person x is on SIO server y
[03:08] sechrist: but the problem with that is, that won't be the case
[03:09] c4milo2: sechrist: i would use rabbitmq since it already have the mechanism 
[03:09] sechrist: after websockets the other transports will float due to haproxy
[03:09] c4milo2: sechrist: I see 
[03:09] sechrist:  /socket.io urls could be routed to one of many socket.io servers
[03:10] sechrist: unless the routing table updates every time that a connection is formed
[03:10] sechrist: which seems expensive
[03:10] ceej_ has joined the channel
[03:16] mikew3c_ has joined the channel
[03:23] andrehjr` has joined the channel
[03:23] echosystm has joined the channel
[03:23] echosystm: is workers built into node 0.3.2 ?
[03:26] mjr_: echosystm: no, you'll need to install it yourself.
[03:30] sohail has left the channel
[03:31] WarriorSl has joined the channel
[03:39] jacoblyles has joined the channel
[03:53] kriszyp has joined the channel
[03:54] echosystm: i tried npm install webworker
[03:54] echosystm: its definitely in my NODE_PATH
[03:54] echosystm: but i get couldnt find
[03:55] Sembiance: heh, I haven't actually used npm before.
[03:55] Sembiance: I still "git clone" whatever I need and ensure I have a symbolic link to the correct js file or lib folder on my NODE_PATH
[03:56] boaz has joined the channel
[03:56] killfill has joined the channel
[04:05] AAA_awright has joined the channel
[04:08] echosystm: nodejs seems to be ignoring my node_path
[04:08] echosystm: wtf
[04:08] echosystm: echo $NODE_PATH = /Users/***/Applications/Homebrew/lib/node
[04:09] echosystm: contents of that folder has webworkers/index.js
[04:09] echosystm: etc.
[04:09] echosystm: this is breaking my heart.
[04:09] echosystm: on christmas eve.
[04:09] Druid_ has joined the channel
[04:10] ceej_ has joined the channel
[04:13] Sembiance: echosystm: require("webworkers/index") ?
[04:14] Aria: Should just be able to require('webworkers') at that point; index is automatically searched
[04:14] echosystm: the npm package is broken
[04:14] Aria: Also, check the path inside node: console.log(require.paths)
[04:14] echosystm: i followed the index and one of the folders is named wrong
[04:14] killfill has joined the channel
[04:19] mathgladiator has joined the channel
[04:20] echosystm: yeah the webworker npm package is complete fail
[04:20] echosystm: totally broken
[04:20] echosystm: 'worker' seems ok
[04:20] jakehow has joined the channel
[04:22] killfill has joined the channel
[04:23] echosystm: no, worker is fail to
[04:23] echosystm: awesome.
[04:23] zorzar has joined the channel
[04:30] Sembiance: echosystm's woes are one reasno I always find the most active, up to date, best version of any node module on github first, then git clone it directly instead of going with npm.
[04:31] cjm has joined the channel
[04:36] saikat has joined the channel
[04:38] ezmobius has joined the channel
[04:40] bruce has joined the channel
[04:43] mikeal has joined the channel
[04:44] bruce has joined the channel
[04:49] cjm has joined the channel
[04:53] chrischris has joined the channel
[04:55] Sembiance has joined the channel
[04:55] adrienf has joined the channel
[04:55] walkah has joined the channel
[04:55] walkah has joined the channel
[04:56] jacoblyles has joined the channel
[04:58] skohorn has joined the channel
[05:19] killfill has joined the channel
[05:19] mattcodes has joined the channel
[05:22] jakehow has joined the channel
[05:24] killfill has joined the channel
[05:26] mikeal has joined the channel
[05:28] mikeal: SubStack: you around?
[05:30] killfill has joined the channel
[05:32] mattcodes has joined the channel
[05:32] SubStack: mikeal: yep
[05:32] mikeal: twitter says you live in oakland
[05:33] SubStack: it's true
[05:33] mikeal: i live in Oakland
[05:33] mikeal: where in Oakland are you?
[05:33] SubStack: near the rockridge safeway
[05:33] mikeal: that's pretty close to me
[05:33] SubStack: neat
[05:33] mikeal: i live on Rich st
[05:34] mikeal: it's between telegraph and webster around 42nd
[05:34] mikeal: i do my shopping at market hall right over by you
[05:34] mikeal: you live really close to Jono Bacon actually
[05:34] mikeal: anyway
[05:34] SubStack: ACTION is on gilbert
[05:34] mikeal: i'm drinking cocktails
[05:34] mikeal: at my house, it's a good time
[05:34] chapel: haha
[05:34] chapel: you guys should get together :)
[05:34] mattcode_ has joined the channel
[05:35] SubStack: PERHAPS
[05:35] mikeal: you have plans for christmas
[05:35] SubStack: no plans
[05:35] mikeal: i'm having a dinner thing
[05:35] mikeal: with some people
[05:35] mikeal: i don't know who
[05:35] mikeal: whoever shows up basically
[05:35] SubStack: saw that on the twitter
[05:35] mikeal: i know that at some point i have to leave to issac's cats
[05:36] mikeal: i'm in charge of feeding them while he's in LA
[05:36] mikeal: man i'm drunk
[05:36] chapel: heh
[05:36] SubStack: cats!
[05:36] Aria: Man, I need to get back to the bay area.
[05:36] chapel: any of you guys use linkinus?
[05:36] mikeal: i have a dog
[05:36] Aria: It's been too long. And maybe less sleeping in Golden Gate Park this time.
[05:36] mikeal: everyone is here
[05:36] mikeal: and Oakland is awesome 
[05:37] SubStack: pkrumins is staying on my couch too
[05:37] chapel: if I could get a job down there
[05:37] mikeal: i'm so stoked that SubStack lives in Oakalnd
[05:37] chapel: I would move down
[05:37] mikeal: we need to get a drink right now
[05:37] SubStack: doing this startup thing
[05:37] mikeal: NOW!
[05:37] SubStack: ok!
[05:37] chapel: I live in bfe
[05:37] mikeal: where do you usually drink?
[05:38] ezmobius has joined the channel
[05:38] slaymer has joined the channel
[05:38] SubStack: usually drink? I haven't been to any bars since I moved
[05:39] mikeal: when did you move here?
[05:39] mikeal: do you have a car?
[05:39] SubStack: october
[05:39] SubStack: and my car is pretty much broken
[05:39] SubStack: need to get rid of it :/
[05:41] mikeal: i'm trying to figure out a bar over there
[05:41] mikeal: we can go to the Graduate
[05:41] mikeal: is really really drunk there
[05:47] mattcodes has joined the channel
[05:49] mattcod__ has joined the channel
[05:52] wasabist has joined the channel
[05:54] shripadk has joined the channel
[05:54] killfill has joined the channel
[05:54] mattcodes has joined the channel
[05:55] hamsterspider has joined the channel
[05:55] pkrumins has joined the channel
[05:57] nlacasse has joined the channel
[06:00] killfill has joined the channel
[06:00] pkrumins has left the channel
[06:00] dthompson has joined the channel
[06:08] sechrist has joined the channel
[06:14] benburkert has joined the channel
[06:22] shripadk has left the channel
[06:24] shripadk has joined the channel
[06:24] mjr_: SubStack: it'd be fun to meet you and pkrumins before I leave Oakland.
[06:25] mjr_: Which is in another month.
[06:25] noahcampbell has joined the channel
[06:39] robotarmy has joined the channel
[06:40] mattcode_ has joined the channel
[06:43] sechrist: people live in oakland?
[06:43] dioxide: california?
[06:44] Aria: Quite.
[06:48] killfill has joined the channel
[06:51] jesusabdullah: I was in Oakland last week
[06:52] jesusabdullah: Didn't see nobody but SubStack and pkrumins
[06:52] jesusabdullah: even though I think a lot of nodies live there
[07:01] zentoooo has joined the channel
[07:01] shinmei has joined the channel
[07:05] tilgovi has joined the channel
[07:10] qFox has joined the channel
[07:14] ezmobius has joined the channel
[07:15] tim_smart has joined the channel
[07:22] tim_smar1 has joined the channel
[07:27] amerine has joined the channel
[07:31] Sbioko has joined the channel
[07:31] Sbioko: morning
[07:32] herbySk has joined the channel
[07:36] hamsterspider has left the channel
[07:36] peritus_ has joined the channel
[07:37] tim_smart has joined the channel
[07:38] shinmei has joined the channel
[07:40] Figaroo has joined the channel
[07:42] killfill has joined the channel
[07:45] tim_smart has joined the channel
[07:46] mattcodes has joined the channel
[07:50] SamuraiJack has joined the channel
[07:54] matjas has joined the channel
[07:55] hzin has joined the channel
[08:00] killfill has joined the channel
[08:02] adambeynon has joined the channel
[08:03] derferman has joined the channel
[08:05] shripadk has left the channel
[08:05] shripadk has joined the channel
[08:06] mattcodes: does partial('comment.haml)
[08:06] mattcodes: need a - prefix
[08:06] mattcodes: not clear from the docs
[08:07] dandaman has joined the channel
[08:08] skohorn_ has joined the channel
[08:09] mattcodes: is there a shorter verison of this couchResult.rows.map(function(row) { return row.doc })
[08:09] mattcodes: actually ignore thats pretty short
[08:12] masahiroh has joined the channel
[08:12] evanmeagher has joined the channel
[08:18] yrashk has joined the channel
[08:18] mattcodes: is there a built in $.extends or somthing similar?
[08:22] skohorn has joined the channel
[08:23] femtoo has joined the channel
[08:25] skm has joined the channel
[08:25] skohorn has joined the channel
[08:33] slaymer has joined the channel
[08:37] hellp has joined the channel
[08:38] killfill has joined the channel
[08:43] mattcodes: having real problems with partials in expressjs
[08:43] mattcodes: anyone familiar?
[08:43] killfill has joined the channel
[08:44] opengeard has joined the channel
[08:53] iszak has joined the channel
[08:53] iszak has joined the channel
[08:54] skohorn_ has joined the channel
[08:54] mikeal has joined the channel
[08:55] mikeal has joined the channel
[08:58] Druid_ has joined the channel
[08:59] dandaman has joined the channel
[09:01] Jonasbn_ has joined the channel
[09:01] Wyverald has joined the channel
[09:02] killfill has joined the channel
[09:04] stephank has joined the channel
[09:05] prinzdezibel has joined the channel
[09:06] prinzdezibel_ has joined the channel
[09:07] dthompson has joined the channel
[09:09] Sbioko has joined the channel
[09:09] Sbioko: hi
[09:09] Sbioko: how to check if file exists
[09:10] Sbioko: did not find such info in the 0.2.5 docs
[09:11] JojoBoss has joined the channel
[09:11] SubStack: require('path').exists
[09:12] spoobie has joined the channel
[09:18] Sbioko: SubStack: var path = require('path');
[09:18] Sbioko: SubStack: what's next?
[09:19] Sbioko: SubStack: path.exists(filename) ?
[09:20] cjm has joined the channel
[09:21] SubStack: yep
[09:21] SubStack: well
[09:21] SubStack: path.exists is async
[09:21] SubStack: so path.exists(path, function (exists) { /* ... */ })
[09:22] SubStack: there's also existsSync if you like
[09:23] Sbioko: ok
[09:23] Sbioko: Thanks a lot
[09:24] Sbioko has left the channel
[09:24] SubStack: annoyingly exists() rather uniquely doesn't set an error, it only returns whether or not the file exists
[09:25] SubStack: even though some error conditions do exist
[09:25] yozlet has joined the channel
[09:25] mikew3c has joined the channel
[09:28] chapel: should I use exists vs just a fs.readFile and check for an error?
[09:28] romeo_ordos has joined the channel
[09:28] matjas has joined the channel
[09:29] SubStack: chapel: probably
[09:29] chapel: granted I am using the file data if it is read
[09:29] peritus_ has joined the channel
[09:30] chapel: even in that case?
[09:31] SubStack: perhaps not then
[09:31] SubStack: whatever looks prettiest I'd say
[09:32] Sbioko has joined the channel
[09:33] chapel: does exists use a stat?
[09:33] Sbioko: question about Connect + Node.js
[09:33] Sbioko: I'm using Express + Connect(for middleware)
[09:34] Sbioko: I'll paste my code to pastebin
[09:34] Sbioko: It cannot serve static files
[09:35] herbySk has joined the channel
[09:35] Sbioko: http://pastebin.com/XtrvWetN
[09:35] Sbioko: that code
[09:35] Sbioko: It just gives me "Cannot GET {file}"
[09:35] Sbioko: where {file} is filename
[09:36] Sbioko: where is the problem?
[09:37] Sbioko: please help!
[09:37] dandaman1 has joined the channel
[09:38] JojoBoss: anyone use the mailer module?
[09:39] chapel: Sbioko: well you dont have any routes setup
[09:39] Sbioko: chapel: I need routes for that?
[09:39] chapel: but idk
[09:39] Sbioko: what routes
[09:39] Sbioko: and what's "idk"
[09:39] Sbioko: :-)
[09:40] chapel: idk: Shorthand form for "I Don't Know". Person1: what do you want to do today?  Person2: idk you pick | More Info @ http://urbanup.com/define.php?term=idk
[09:41] chapel: well that do you have app.listen(port)?
[09:41] Sbioko: of course :-)
[09:41] Sbioko: I have / route
[09:41] Sbioko: app.get('/', ...);
[09:41] Sbioko: it works
[09:41] chapel: well since you only have 1 line in the paste wasn't sure
[09:41] Sbioko: but those piece of code does not work
[09:42] chapel: this is how I have it setup for mine app.use(express.staticProvider(__dirname + '/public'))
[09:42] Sbioko: chapel: http://pastebin.com/vzUUAcJQ
[09:43] Sbioko: ok
[09:43] Sbioko: it worked
[09:43] Sbioko: thanks chapel!
[09:43] Sbioko: :-)
[09:43] Sbioko: a lot!!!
[09:43] chapel: np
[09:43] ezmobius has joined the channel
[09:43] chapel: you know express has docs right?
[09:44] dandaman has joined the channel
[09:44] Sbioko: yes
[09:44] Sbioko: :-)
[09:44] chapel: kk
[09:44] chapel: :)
[09:44] JojoBoss: even more useful then the docs are the examples in various branches on git
[09:45] Sbioko: maybe skipped that
[09:45] JojoBoss: looks like tj added most the examples to the master tree now, so check those out
[09:45] Sbioko: another question
[09:46] Sbioko: about Rendering Views in Express
[09:46] Sbioko: Can I render just "plain" html file?
[09:46] Sbioko: I mean without template engines like haml, jade
[09:46] Sbioko: etc
[09:46] masahiroh has joined the channel
[09:46] JojoBoss: yes
[09:46] Sbioko: JojoBoss: how?
[09:46] Sbioko: res.render('index.html') ?
[09:46] SamuraiJack has joined the channel
[09:46] JojoBoss: app.register('.html', require('ejs'));
[09:47] Sbioko: ejs?
[09:47] Sbioko: it's like erb?
[09:47] JojoBoss: app.register('.html', require('ejs'));
[09:47] JojoBoss: app.set('view engine', 'ejs');
[09:47] JojoBoss: app.set('views', __dirname + '/public');
[09:47] JojoBoss: embedded javascript
[09:47] Sbioko: yeah, I got it
[09:47] Sbioko: thanks!
[09:47] JojoBoss: there are various template solutions you can use
[09:47] JojoBoss: i like ejs personally
[09:48] Sbioko: the thing is I dont want to use them :-)
[09:48] JojoBoss: i literally was asking about this like 2 days ago myself
[09:48] Sbioko: :-)
[09:48] chapel: Sbioko: it isn't templating so much as just a way to get your data into html
[09:48] JojoBoss: well, those lines i gave you let you use plain html files and use JS to include stuff
[09:48] chapel: <%= foo.bar %>
[09:48] Sbioko: chapel: I know, I know :-)
[09:49] Sbioko: guys I'm not newbie in programming world :-D
[09:49] chapel: but everything is html
[09:49] JojoBoss: i come from php, so i'm used to including stuff, and you can kind of do it with partials
[09:50] Sbioko: I came from php to
[09:50] Sbioko: too
[09:50] Sbioko: *
[09:51] JojoBoss: i'm currently storing plain html files, using static caching to serve images, css and client side js, and i use ejs just as the view engine so that i can have some semblance of includes
[09:51] Sbioko: can you give me a link to list of Express' middleware ?
[09:51] Sbioko: not Connect's
[09:51] stagas: Sbioko: ? they're the same
[09:51] Sbioko: did not find that
[09:51] Sbioko: stagas: same?
[09:51] Sbioko: great
[09:52] chapel: tj made connect to separate some stuff from express to keep express simpler
[09:52] Sbioko: aah
[09:52] Sbioko: ok
[09:52] Sbioko: got it
[09:56] sechrist has joined the channel
[09:57] sechrist: So I am a little confused. Rabbit.js is showing a separate socket.io connection for publish and subscribe
[09:57] sechrist: that seems silly
[09:58] SubStack: but if it works...
[09:58] killfill has joined the channel
[09:58] sechrist: it's 2x the connections for the same thing
[09:58] sechrist: actually 4x depending on the transports
[09:59] SubStack: but do additional connections incur measurable performance penalties?
[09:59] sechrist: yes
[09:59] SubStack: and more importantly, is your particular problem domain sensitive to performance?
[09:59] sechrist: I have clients on shoddy networks running ie6, I'd rather only burden them with one connection
[10:00] jetienne has joined the channel
[10:00] stagas: browsers also limit the number of connections to a single server so you might have issues there
[10:00] sechrist: I'm not exactly sure what it's trying to demonstrate using two connections
[10:01] sechrist: if you want to only publish, that's fine, use one, likewise for only subscribe
[10:01] sechrist: but if you want to pub and sub
[10:01] sechrist: it should be pubsub
[10:01] SubStack: I thought the latest socket.io pumped multiple logical connections through the same connection
[10:01] sechrist: really?
[10:01] sechrist: that's a pretty substantial architecture difference
[10:03] sechrist: anyway that doesn't mean my point isn't valid
[10:04] jetienne_ has joined the channel
[10:04] sechrist: socket.io has sending and receiving as part of it's layer already
[10:04] killfill has joined the channel
[10:10] killfill has joined the channel
[10:19] fly-away has joined the channel
[10:22] Gruni has joined the channel
[10:23] aklt has joined the channel
[10:23] pdelgallego has joined the channel
[10:29] Twelve-60 has joined the channel
[10:47] killfill has joined the channel
[10:52] Yuffster has joined the channel
[10:59] killfill has joined the channel
[11:03] ewdafa has joined the channel
[11:12] romeo_ordos has joined the channel
[11:12] romeo_ordos has left the channel
[11:19] mr_daniel has joined the channel
[11:28] oal has joined the channel
[11:30] killfill has joined the channel
[11:34] mraleph has joined the channel
[11:36] tim_smar1 has joined the channel
[11:36] matjas has joined the channel
[11:37] case__: hi there, anyone using libxmljs ? I've a load of errors whatever i'm trying to load ( like : xmlMemFree(8DA7298) error )
[11:42] d0k has joined the channel
[11:43] killfill has joined the channel
[11:48] killfill has joined the channel
[11:49] broofa_ has joined the channel
[11:55] femtoo has joined the channel
[12:02] hellp has joined the channel
[12:05] killfill has joined the channel
[12:11] Sbioko has joined the channel
[12:14] Sbioko has left the channel
[12:19] killfill has joined the channel
[12:19] femtooo has joined the channel
[12:21] prinzdezibel has joined the channel
[12:21] prinzdezibel_ has joined the channel
[12:23] femtoo has joined the channel
[12:26] pedrobelo has joined the channel
[12:30] peritus_ has joined the channel
[12:34] cheney has joined the channel
[12:35] cjm has joined the channel
[12:37] killfill has joined the channel
[12:49] killfill has joined the channel
[12:49] Wyverald has joined the channel
[12:52] herbySk has joined the channel
[12:55] killfill has joined the channel
[12:56] skm has joined the channel
[12:58] SamuraiJack_ has joined the channel
[12:59] ben_alman has joined the channel
[13:06] MattJ has joined the channel
[13:07] _mql has joined the channel
[13:07] killfill has joined the channel
[13:10] nlacasse has joined the channel
[13:10] skohorn has joined the channel
[13:15] fermion has joined the channel
[13:16] MaSch: has someone a link to the isometric graphic engine creationix wrote for node knockout? 
[13:22] killfill has joined the channel
[13:23] Kof has joined the channel
[13:23] oal has joined the channel
[13:24] meso has joined the channel
[13:28] killfill has joined the channel
[13:34] Blink7 has joined the channel
[13:40] killfill has joined the channel
[13:42] sivy has joined the channel
[13:43] capndiesel has joined the channel
[13:46] teemow has joined the channel
[13:51] killfill has joined the channel
[13:53] jvolkman_ has joined the channel
[14:03] dnolen has joined the channel
[14:05] killfill has joined the channel
[14:06] stagas_ has joined the channel
[14:07] mattcodes has joined the channel
[14:16] ysynopsis has joined the channel
[14:20] capndiesel has joined the channel
[14:23] killfill has joined the channel
[14:29] pdelgallego has joined the channel
[14:36] mattcode_ has joined the channel
[14:36] sivy has joined the channel
[14:40] bahamas has joined the channel
[14:41] iszak_ has joined the channel
[14:48] galaxywatcher has joined the channel
[14:50] iszak has joined the channel
[14:51] jimt has joined the channel
[14:55] faust45 has joined the channel
[14:59] pHcF has joined the channel
[15:03] Hello71 has joined the channel
[15:03] Hello71 has joined the channel
[15:12] GatorAlli has joined the channel
[15:12] GatorAlli: hello?
[15:16] boaz has joined the channel
[15:16] GatorAlli: hello?
[15:17] stagas: GatorAlli: hi
[15:17] mikew3c_ has joined the channel
[15:17] GatorAlli: i have a question
[15:17] GatorAlli: I'm trying to build a webpage scraper in PHP
[15:18] GatorAlli: Of course, the page is riddled with Javascript that gets info from other sources
[15:18] mscdexMobile has joined the channel
[15:18] GatorAlli: eg. innerHTML = "text"
[15:18] GatorAlli: Wait
[15:18] GatorAlli: start from scratch
[15:18] herbySk has joined the channel
[15:19] dnolen has joined the channel
[15:19] GatorAlli: I have a web page : <html><body><script>document.write("Hello World")</script></body></html>
[15:19] GatorAlli: If I try to load the page in PHP, i get <html><body><script>document.write("Hello World")</script></body></html>
[15:20] GatorAlli: Could I use Node.js to parse the javascript into <html><body><script>Hello World</body></html> ?
[15:22] stagas: GatorAlli: dunno maybe
[15:22] GatorAlli: Basically setting up a browser on a server.
[15:22] GatorAlli: URI - > server -> rendered html
[15:23] Artem_S has joined the channel
[15:23] Artem_S: Hi all!
[15:23] SubStack: that would be easy to do poorly and hard to do well
[15:23] GatorAlli: hmm
[15:23] GatorAlli: So no common.js or rhino?
[15:23] SubStack: what?
[15:23] Artem_S: Can anyone recommend a mock lib, capable of faking stuff imported via 'require'?
[15:24] Blackguard has joined the channel
[15:25] noahcampbell has joined the channel
[15:27] mape: Artem_S: faker?
[15:28] Artem_S: well, you know, mocking
[15:28] Artem_S: say I want to mock util.log
[15:28] Artem_S: so I can check whether it was called or not
[15:28] herbySk: Artem_S: require.cache['lib'] = {exported: ...} is not enough?
[15:29] Artem_S: will check it out in a sec
[15:29] Artem_S: thanks!!
[15:29] shinmei has joined the channel
[15:29] webr3 has joined the channel
[15:31] tjholowaychuk has joined the channel
[15:31] Artem_S: When I do this: require('util'); require.cache; cache comes up empty in repl
[15:32] herbySk: 'util' is internal, and it has its own cache... and probably not publicized, so you're screwed
[15:32] herbySk: :-/
[15:32] herbySk: well, unless:
[15:33] Artem_S: ok, I see
[15:33] Artem_S: thanks!
[15:33] herbySk: you can get bindings for native and changed source of util (as a string), and then require it
[15:33] Artem_S: I guess I'll have to wrap it around with some of my stuff
[15:33] herbySk: but this is really a hack
[15:34] iszak has joined the channel
[15:34] iszak has joined the channel
[15:34] herbySk: look at requireNative in src/node.js too see how to get to native bindings, and you can directly change the sourcecode there... but if it was already required and is in cache, you're out of the game
[15:35] sivy has joined the channel
[15:35] herbySk: Artem_S: sorry, I misled you, there was a change recently that changed the priroity of caches
[15:35] Artem_S: thanks for that, but I guess for now I will take the path of least resistance :)
[15:35] herbySk: the normal cache is now checked before the native one, so the code I posted as the first try should work
[15:36] Artem_S: herbySk, thanks for prompt replies!
[15:36] herbySk: just try require.cache['util'] = {....} and then require('util')
[15:37] herbySk: (it was done specifically to allow mocking)
[15:37] Aikar: GatorAlli: theres some DOM parser for node that will do that i believe.
[15:37] Aikar: i dont remember name of it though
[15:38] tjholowaychuk: jsdom?
[15:38] Artem_S: i tried require.cache['util'] = {log: function(a) {console.log(a);}}; and then require('util') but it still loads up the original one
[15:38] herbySk: hm...
[15:38] Artem_S: 0.3.2
[15:39] Artem_S: sorry
[15:39] Artem_S: 0.3.1-pre
[15:39] Artem_S: will update now
[15:39] herbySk: well, then, ... either you let it be for now of look into src/node.js if there's a way (I'd say you should go for the latter, explorative programming is fun)
[15:39] herbySk: ok, try then newest then, and if it won't work, it is not _that_ easy then :-/
[15:40] herbySk: s/try then/try the/
[15:40] m0rganic has joined the channel
[15:40] Artem_S: ok, out of luck, build is broken on ubuntu
[15:40] peritus_ has joined the channel
[15:40] Artem_S: will stick to mocking a wrapper for now, I guess
[15:40] faust45: guy's any one know way to fetch mp3 track duration and id3 tags with client side js, i see this one https://github.com/aadsm/JavaScript-ID3-Reader but it's not fetch duration
[15:41] kriszyp has joined the channel
[15:41] faust45: i look at <audio> html5 but don't see way fetch id3 tags
[15:41] Artem_S: I know explorative programming is fun :)
[15:41] faust45: ?
[15:41] herbySk: artem_s: me too, v8 can't build on (amd64) freebsd
[15:42] Artem_S: it's just that I have already diverted from the original task at hand :)
[15:42] Artem_S: yep, 64 bit as well
[15:42] iszak has joined the channel
[15:42] Artem_S: thanks for your help man!
[15:42] herbySk: np
[15:44] confoocious has joined the channel
[15:48] xSmurf: so quick, probably dumb, question, how does one catch ECONNREFUSED errors? it appears a try/catch block doen't work...
[15:48] iszak has joined the channel
[15:48] iszak has joined the channel
[15:50] SubStack: xSmurf: .on('error', cb) usually works for those
[15:50] xSmurf: ah I see, I tried .on("ECCONERROR"
[15:51] JusticeFries has joined the channel
[15:52] xSmurf: seems to work, many thanks
[15:52] xSmurf: hey, node-dev is awesome! I only wished it would detect when I'm changing multiple files and not start many copies of the project (working over rsync)
[15:54] xSmurf: are error codes defined anywhere? if I wanna do errno == ECONNREFUSED
[15:54] mattcode_: any recommendation for server-side validation frameworks. i thinking maybe just add Object.prototype.validate, which checks the presence of .type and looks up the metadata (regex, required) etc..
[15:54] xSmurf: or do I have to indexOf() for it or hardcode the errno?
[15:54] skm has joined the channel
[15:56] iszak has joined the channel
[15:56] iszak has joined the channel
[15:59] iszak has joined the channel
[15:59] iszak has joined the channel
[16:01] SubStack: xSmurf: they're in process
[16:01] SubStack: process.ECONNREFUSED
[16:01] xSmurf: ah sweet! thanks very much!
[16:01] AAA_awright_ has joined the channel
[16:02] xSmurf: I knew they had to be _somewhere_ hehe
[16:02] Yuffster has joined the channel
[16:03] iszak has joined the channel
[16:03] Yuffster has joined the channel
[16:03] sivy has joined the channel
[16:04] cjm has joined the channel
[16:09] davidc_ has joined the channel
[16:10] peritus_ has joined the channel
[16:11] fangel has joined the channel
[16:16] stepheneb has joined the channel
[16:16] marcostoledo has joined the channel
[16:18] temp01 has joined the channel
[16:20] hansek has left the channel
[16:23] chrischris has joined the channel
[16:24] Gruni has joined the channel
[16:28] charlenopires has joined the channel
[16:30] ibolmo has joined the channel
[16:30] maushu has joined the channel
[16:32] omni5cience has joined the channel
[16:33] lightharut has joined the channel
[16:34] lightharut: I have a problem using node.js with Chrome browser. My webpage is located on the address, 192.168.0.x:80 and node.js listen to the address 192.168.0.x:8080. When I try to do my request form IE all working is fine, but the same request doesn't return from FireFox and Chrome browsers.
[16:34] tjholowaychuk: mraleph: ping
[16:35] mjr_ has joined the channel
[16:36] omni5cience has left the channel
[16:36] mraleph: tjholowaychuk: pong
[16:37] mraleph: tjholowaychuk: how can I help you?
[16:37] tjholowaychuk: mraleph: why is it that in v8 function expressions have implicit names "var foo = function().." bit not "{ foo: function..." ?
[16:37] lightharut: I have looked in the internet and find out that Chrome and FireFox have the restriction to request from the some page to the same page but on the another port.
[16:37] riven has joined the channel
[16:37] MattJ has joined the channel
[16:38] lightharut: may you can help me with the suggestions how can I solve my problem and use node.js for FireFox and Chrome browser?
[16:38] tjholowaychuk: mraleph: just trying to think why it would be bad to assign the prop name, but I guess its not really the same
[16:38] tjholowaychuk: would be kinda nice if it didnt mess with anything
[16:40] peteatolia has joined the channel
[16:40] mraleph: tjholowaychuk: I do not know why v8 infers some of function names but not the others. I think it has something to do with Safari/JSC compatibility. I do not remember ECMA-262 saying anything about function name inference.
[16:41] tjholowaychuk: mraleph: weird because in safari "var foo = function(){}" wont give you foo.name
[16:41] tjholowaychuk: but in v8 it does haha
[16:42] mraleph: hmm
[16:42] jakehow has joined the channel
[16:42] tjholowaychuk: but I guess foo.bar = fn.. wouldnt make to much sense if you pass it around some more
[16:50] ewdafa has joined the channel
[16:55] jimt_ has joined the channel
[16:57] ceej has joined the channel
[16:57] ceej has left the channel
[16:57] hornairs has joined the channel
[17:03] lightharut has left the channel
[17:04] jpld has joined the channel
[17:07] jchris has joined the channel
[17:08] dandaman has joined the channel
[17:09] herbySk has joined the channel
[17:10] herbySk: ok, i got diconnected just after mu question...
[17:11] dandaman has joined the channel
[17:11] herbySk: (and I see it not there in the logs at all...) anyway:
[17:12] herbySk: v8: "test"
[17:12] v8bot: herbySk: "test"
[17:12] herbySk: v8: var foo = function () {}; foo.name
[17:12] v8bot: herbySk: ""
[17:12] herbySk: tjholowaychuk: does it? ^^^ did not
[17:12] tjholowaychuk: herbySk: it sohuld
[17:13] tjholowaychuk: might be an old version
[17:13] herbySk: As for spec, it should _not_, should it? it is just an anonymous function put to variable
[17:13] herbySk: after all...
[17:14] dandaman has joined the channel
[17:14] tjholowaychuk: hmm now its not
[17:14] tjholowaychuk: haha
[17:14] tjholowaychuk: wtf did i do
[17:14] tjholowaychuk: I even read it in v8, one sec
[17:17] cjm has joined the channel
[17:18] jchris1 has joined the channel
[17:18] tjholowaychuk: herbySk: nvm im just thinking as far as the stack traces go
[17:18] tjholowaychuk: the pull names for that but not accessible via .name I guess
[17:18] tjholowaychuk: they*
[17:20] tjholowaychuk: right, yeah k confused my self, I just remember people doing foo.bar = function bar(){} to give meaningful stack traces but you dont need to
[17:21] herbySk: tjholowaychuk: well, that's true that in stack traces anonymous functions (and non-anonymous, too, btw) have not only .name, but also "callname" (by what name were they called), but I think these are different matters
[17:22] tjholowaychuk: yeah, not sure in what situation but I swear I had an implied .name, maybe im just crazy
[17:24] tjholowaychuk: I dont think that is entirely true though. if you throw in obj.foo but you get Object.foo in the trace, but obj.bar = obj.foo and obj.bar() you get Object.<anonymous>
[17:24] tjholowaychuk: pretty sure i read it in v8 and it was done statically
[17:24] tjholowaychuk: but it would make sense like you said to just give it the property name or something
[17:24] mraleph: tjholowaychuk: it is in function-name-inferrer.cc
[17:24] mraleph: it is done during parsing
[17:25] tjholowaychuk: ah yeah i thought so
[17:25] mraleph: *func-name-inferrer.cc
[17:25] herbySk: tjholowaychuk: well, I did not tell for sure, but I faintly remember that in stack trace I saw the callname and original name (in some situation), when they were different (or maybe the callname is there only for anonymous ones)? Who knows?
[17:26] tjholowaychuk: "To check
[17:26] tjholowaychuk:   // that it is really a constructor, we check that it is not empty
[17:26] tjholowaychuk:   // and starts with a capital letter."
[17:26] tjholowaychuk: interesting
[17:27] tjholowaychuk: assuming a capital
[17:28] herbySk: eee? Why couldn't the constructor be empty???
[17:29] tjholowaychuk: not sure what "empty" is in this context
[17:29] isaacs has joined the channel
[17:30] dandaman has joined the channel
[17:30] herbySk: hm. If I had to check if foo is constructor, I'd see if foo.prototype was manipulated...
[17:30] slaymer has joined the channel
[17:33] tjholowaychuk: this is at parse-time though
[17:36] omni5cience has joined the channel
[17:41] creationix has joined the channel
[17:44] creationix: Mornin' everyone!
[17:44] tjholowaychuk: yoyo
[17:44] aheckmann has joined the channel
[17:44] creationix: it's the last day of work for the year here
[17:44] aheckmann has left the channel
[17:45] tjholowaychuk: I dunno what we are doing haha, working anyway
[17:45] creationix: the joy of a startup
[17:45] creationix: :)
[17:45] tjholowaychuk: i dont mind
[17:48] bruce_ has joined the channel
[17:53] creationix: who wants to write my book for me so I can get back to writing awesome libraries
[17:54] tjholowaychuk: baha
[17:54] creationix: yeah, I should just finish it and get it out
[17:54] creationix: good thing mde is helping
[17:56] tjholowaychuk: writing books sucks, I wrote one a year or two back and I will never do it again
[17:56] creationix: lol
[17:56] creationix: I want to write one, but actually finding the time is proving very challenging
[17:56] tjholowaychuk: for sure
[17:56] tjholowaychuk: I took 3 months off work to do mine way back
[17:58] jimt has joined the channel
[18:01] cagdas has joined the channel
[18:01] cagdas: hi, I've a very small VPS with 256 MB memory
[18:02] cagdas: sorry, 128 MB
[18:02] herbySk: tjholowaychuk: I meant at parse time (looking in that file for foo.prototype maniuplation)
[18:02] tjholowaychuk: oh
[18:02] cagdas: when I do nave install 0.2.5 it cannot finish succesfuly
[18:03] cagdas: because of memory limitations
[18:03] jimt_ has joined the channel
[18:03] cagdas: is there anyway to install node with nave without compiling :)
[18:04] herbySk: cadgas: build it for similar system in one-hour aws instance, grab the results and doing install steps manually?
[18:04] herbySk: (aha, with nave... then, idk)
[18:05] creationix: cadgas: yeah, you'd have to use nave on another system that's binary compatable and then copy the resulting folder over
[18:05] cagdas: creationix: would a simple copy be enough?
[18:05] creationix: should be, assuming nave works like nvm
[18:05] creationix: I do it all the time with nvm
[18:05] mattcodes has joined the channel
[18:05] creationix: compile on one linux machine and then rsync to my other systems (all same os and architecture)
[18:06] cagdas: I see, thanks
[18:06] iszak has joined the channel
[18:07] dandaman has joined the channel
[18:12] lin_ has joined the channel
[18:19] bronb has joined the channel
[18:20] jimt has joined the channel
[18:26] jimt has joined the channel
[18:28] jakehow has joined the channel
[18:28] yozlet has joined the channel
[18:29] femtoo has joined the channel
[18:30] cjm has joined the channel
[18:32] sechrist has joined the channel
[18:34] ceej has joined the channel
[18:37] femtooo has joined the channel
[18:40] Druid_ has joined the channel
[18:48] pHcF: does anyone know a good smtp client in node?
[18:48] pHcF: (and have a sample code :P )
[18:49] maushu: https://github.com/miksago/node-smtp-client
[18:50] maushu: https://github.com/aredridel/node-smtp
[18:50] maushu: https://github.com/marak/node_mailer
[18:51] chrischris has joined the channel
[18:54] faust45: guy's any one know way to fetch mp3 track duration and id3 tags with client side js?
[18:55] SamuraiJack_ has joined the channel
[19:00] wao: hmm
[19:00] wao: that node-smtp is save?
[19:00] wao: safe
[19:03] femtoo has joined the channel
[19:11] robotarmy has joined the channel
[19:11] peritus_ has joined the channel
[19:12] davidwalsh has joined the channel
[19:13] benburkert has joined the channel
[19:20] robotarmy has joined the channel
[19:23] polotek has joined the channel
[19:23] namelessnotion_ has joined the channel
[19:24] Gruni has joined the channel
[19:25] Gruni has joined the channel
[19:28] riven has joined the channel
[19:33] stepheneb has joined the channel
[19:36] admc has joined the channel
[19:38] sechrist has joined the channel
[19:59] jakehow has joined the channel
[20:01] xSmurf: hey, my app implements a plugin structure where I require the file apply a function to my main object dynamically (.apply()) and I'm trying to implement a reload feature. I go over all the imported functions and delete them, but once reloaded the functions are the same that were initially loaded
[20:02] xSmurf: is there anything special I should do to re-require a file?
[20:02] arrty has joined the channel
[20:03] chapel: xSmurf: I would honestly say take a look at the require code, or maybe mimic it but with the intent to do what you are trying to do
[20:04] ewdafa_ has joined the channel
[20:04] chapel: Another option, which would be easier, is use dnode and handle the plugins as separate node instances that are spooled up as needed, and then info is passed between processes
[20:05] noahcampbell has joined the channel
[20:07] xSmurf: chapel: hmmm this is interesting... this.moduleCache
[20:07] chapel: and yeah, looking at the code helps, I dont know anything about it personally
[20:07] chapel: but I have found it is better than the docs sometimes
[20:08] xSmurf: tbh the docs is the only taking making me frown after a week or two with node
[20:08] xSmurf: 0.3 seems better already
[20:08] xSmurf: maybe just the format
[20:09] chapel: yeah, you can thank one of the mikeal/micheal's not sure on spelling or which it was
[20:09] m0rganic has joined the channel
[20:09] chapel: but yeah I find the docs way too bare bones
[20:10] chapel: they definitely aren't meant for learning
[20:10] chapel: just for reference
[20:17] xSmurf: now, accessing the mentioned moduleCache...
[20:25] chapel: mind linking me to the line?
[20:26] xSmurf: almost got it, what's that directory constant already?? __directory?
[20:26] xSmurf: well, there are many lines, but inspect on process.mainModule.moduleCache
[20:27] xSmurf: this is where I traced it back to quick a quick skimming
[20:27] xSmurf: inspecting seems to confirm
[20:27] cheney: how could I start node as a service?
[20:27] chapel: cheney
[20:28] chapel: some options, using external (to node) process managers
[20:28] chapel: there is forever written in node, that keeps a node process up
[20:28] cheney: cool
[20:28] cheney: thanks chapel
[20:28] chapel: but mind you, crashing isn't handled that great, though they could have updated it
[20:28] xSmurf: __dirname
[20:32] femtoo has joined the channel
[20:34] herbySk has joined the channel
[20:36] xSmurf: yeepeekaye mofos!
[20:36] xSmurf: it works!
[20:37] xSmurf: thanks a bunch chapel
[20:37] peritus_ has joined the channel
[20:37] xSmurf: that's awesome
[20:38] chapel: mind sharing your solution?
[20:38] chapel: since I have an interest in a similar thing, I want a plugin system
[20:38] sivy has joined the channel
[20:40] xSmurf: chapel simple just delete process.mainModule.moduleCache["/full/path/to/file.js"];
[20:40] mikeal has joined the channel
[20:40] xSmurf: then re require
[20:41] chapel: so you do a normal require
[20:41] chapel: and then that removes it from memory
[20:41] chapel: and then you can re require
[20:41] chapel: and when you say delete, what do you mean
[20:42] xSmurf: yes exactly
[20:42] xSmurf: I mean "delete process.mainModule.moduleCache["/full/path/to/file.js"];"
[20:42] xSmurf: this will delete the process' cache entry for that file
[20:43] xSmurf: and thus making the process fetch the file again once you call require
[20:43] chapel: ah
[20:44] chapel: I would just make a simple api to handle that too :)
[20:44] chapel: though
[20:44] chapel: I fear it would have to be blocking
[20:49] xSmurf: chapel: this is what I have http://pastie.textmate.org/private/pwa4dpon7jcij9y5uu3exa it's bluntly copied from the lepote bot in the list of modules
[20:49] xSmurf: copied and adapted that is
[20:50] davidc_ has joined the channel
[20:51] sechrist: pubsubhubbub
[20:51] ewdafa has joined the channel
[20:52] chapel: awesome things
[20:52] chapel: though I probably wont use that exactly, I have my own ideas, I like the process
[20:52] chapel: sechrist: pubnubsubhubbubclub?
[20:52] xSmurf: indeed!! I can now reload commands/modules for my bot on SIGHUP allowing me to change the commands without resetting the XMPP connection ;D
[20:52] sechrist: node-pubnubsubhubbubclub
[20:52] chapel: sounds like a plan sechrist
[20:52] rauchg_ has joined the channel
[20:53] m0rganic has joined the channel
[20:53] chapel: I am surprised people haven't been using that before xSmurf
[20:53] xSmurf: now, I still need a better way of parsing/dispatching commands
[20:53] chapel: I remember seeing stuff about module caches
[20:53] chapel: parsing/dispatching?
[20:53] xSmurf: maybe they have and it's not documented anywhere
[20:53] chapel: well it for sure isn't documented
[20:54] xSmurf: parsing from incoming messages and dispatching to appropriate modules or internal commands
[20:58] xSmurf: ideally I'd check mtimes to reload only files with modifications
[20:59] xSmurf: I have a similar process for config files too
[20:59] chapel: hmm
[20:59] chapel: xSmurf: you should look at node-dev
[20:59] chapel: maybe use its functions of watching files
[20:59] chapel: and use that with the module reload code
[20:59] xSmurf: yeah I use it
[20:59] chapel: and you could easily have an atomic bot :)
[21:00] xSmurf: although it's a bit annoying cause I work over rsync
[21:00] xSmurf: and it doesn't detect I'm sending a few files at a time proper
[21:00] xSmurf: ly
[21:00] xSmurf: I posted an issue ticket today about it
[21:06] rauchg has joined the channel
[21:11] SamuraiJack__ has joined the channel
[21:13] herbySk has joined the channel
[21:14] polotek: is there a way to get a reference to the httpClient given the clientRequest
[21:16] chapel: what do you mean polotek ?
[21:17] polotek: var request = client.request();  request.client === client
[21:17] polotek: I need to get to the client object given the request object that came from it
[21:17] polotek: but it looks like that's not possible
[21:18] rauchg: polotek you can always store a reference when creating them
[21:18] rauchg: __client
[21:18] polotek: rauchg: I didn't create it. that's the problem
[21:18] rauchg: polotek sweet
[21:18] polotek: :)
[21:18] rauchg: have you thoroughly inspected the obj ?
[21:18] chapel: well cant you just call client directly
[21:18] polotek: node_oauth returns a request object
[21:18] polotek: but no client
[21:19] polotek: rauchg: yeah and I also just looked in the http.js code
[21:19] polotek: no back reference
[21:19] rauchg: patch ?
[21:19] polotek: indeed
[21:19] sechrist: rauchg: are you guys load balancing socketio?
[21:19] rauchg: you can always override the prototype as well
[21:19] rauchg: sechrist that's coming in 0.8
[21:19] rauchg: you can vertically scale socket.io a lot though
[21:19] rauchg: to the point where load balancing is reserved to the likes of facebook or google :D
[21:20] sechrist: well I'm just unsure if I should let rabbitmq do it, or if I should just make clients stick to certain ones (which is harder than it sounds the way we're using haproxy and dynect)
[21:20] rauchg: http://www.kegel.com/c10k.html
[21:20] sechrist: well the load balancing is more for redundancy
[21:20] rauchg: sechrist if you want to have message distribution across multiple processes
[21:20] rauchg: rabbit.js is a very good option
[21:21] rauchg: and very similar to what i'm going to implement for 0.8
[21:21] rauchg: <boom>
[21:21] sechrist: using just socket.io?
[21:21] sechrist: nice
[21:21] rauchg: yep
[21:21] rauchg: built-in
[21:22] rauchg: i need to get multiplexing out of the way
[21:22] sechrist: I didn't understand rabbit.js's example -- it opened up two SIO connections, one of pub and one for sub
[21:22] rauchg: first
[21:26] polotek: aha!
[21:26] polotek: request.socket === client
[21:27] polotek: it's not obvious at all that they are the same
[21:27] chapel: makes sense though
[21:27] chapel: since the client is just a socket
[21:27] polotek: chapel: yeah I think so too.
[21:30] wdperson has joined the channel
[21:33] dilvie has joined the channel
[21:33] dilvie: How do you handle internationalization in your JavaScript-heavy apps?
[21:33] ibolmo has joined the channel
[21:33] dilvie: Are there any libraries or frameworks I should be aware of?
[21:42] brainproxy: have there been any thoughts on the HTTP PATCH method as it might/could be supported in node.js?
[21:42] brainproxy: searchedin the google group and didn't turn up anything right away
[21:42] vineyard has joined the channel
[21:45] jchris has joined the channel
[21:50] tlrobinson has joined the channel
[21:51] isaacs has joined the channel
[22:01] ceej has joined the channel
[22:05] Wizek has joined the channel
[22:07] sechrist has joined the channel
[22:09] derferman has joined the channel
[22:12] paul_uk has joined the channel
[22:13] paul_uk: hi all, has anyone seen a multi room chat on nodejs?  I've been looking but haven't seen any decent ones...
[22:13] sechrist: tons of people have node chat rooms
[22:13] sechrist: it depends on your use case
[22:13] sechrist: even the socket.io example is a chat room
[22:13] Wizek_ has joined the channel
[22:13] paul_uk: sechrist, yeah i've seen "single" room chat
[22:13] dioxide: theres an entire ircd
[22:14] sechrist: you're not going to find a node-tinychat that gives you everything you want out of the box
[22:14] paul_uk: sechrist, everything is a pretty broad definition
[22:14] paul_uk: dioxide: that sounds interesting, you have a link?
[22:14] dioxide: no, i googled for it the other day
[22:14] dioxide: sec
[22:15] dioxide: http://dailyjs.com/2009/12/16/node-irc/
[22:15] paul_uk: cool thanks, pretty much a basic starting point with something that the dev put a little effort into would be nice.  a lot of chat rooms i've seen haven't really deviated from the sample at nodejs.com
[22:15] dioxide: clients and deamons
[22:15] paul_uk: dioxide, thanks
[22:15] sechrist: I hope there's been updates to that
[22:16] sechrist: node code written a year ago is not really relevant today
[22:16] dioxide: no idea, just found them while browsing
[22:16] dioxide: irc daemons dont change much though
[22:16] sechrist: irc daemons don't -- node API does
[22:17] sechrist: though probably not so much for people that aren't using binary protocols
[22:17] chapel: well its on github, someone could always update it
[22:20] jacoblyles has joined the channel
[22:21] paul_uk: dioxide: found something more uptodate on github, cheers for that and Merry Xmas :)
[22:22] Wizek has joined the channel
[22:24] riven` has joined the channel
[22:24] yozlet has joined the channel
[22:29] namelessnotion has joined the channel
[22:33] namelessnotion has joined the channel
[22:33] benburkert has joined the channel
[22:35] jchris has joined the channel
[22:40] jimt_ has joined the channel
[22:40] sechrist: Is there a popular way to generate uuids in node?
[22:42] shimondoodkin has joined the channel
[22:42] Wizek: sechrist: wait one second
[22:43] chapel: https://gist.github.com/665131
[22:44] Wizek: Math.uuid = function() { return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }) }
[22:45] Wizek: v8: 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); })
[22:45] v8bot: Wizek: "898a56fc856b4659ba73071713323ace"
[22:45] Wizek: v8 @ sechrist: 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); })
[22:45] Wizek: v8 help
[22:45] v8bot: Wizek: v8 <code> is no longer supported (except in PM).  Try v8: <code> or v8> <code>
[22:45] sechrist: O.o
[22:47] Wizek: v9: 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }) @ sechrist 
[22:47] Wizek: v8: 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); }) @ sechrist 
[22:47] v8bot: Wizek: SyntaxError: Unexpected token ILLEGAL
[22:48] Wizek: hmm, ow do I use v8bot so that it sends js's return to someone else?
[22:48] Wizek: *how
[22:48] chapel: uhh
[22:48] chapel: cant
[22:48] chapel: just use it
[22:49] ossareh has joined the channel
[22:51] Wizek: Does anyone uses express here?
[22:53] chapel: I do, not an advanced user though
[22:53] gkatsev: lots of people do.
[22:53] gkatsev: tj is also here sometimes. He wrote it.
[22:54] tjholowaychuk: Wizek: what up
[22:55] tjholowaychuk: I idle here all day most days just ping
[22:55] jimt has joined the channel
[22:55] gkatsev: Wizek: about v8bot, you can't. People usually just add a comment with the name of the guy. i.e.
[22:56] gkatsev: v8: 5 // Wizek 
[22:56] v8bot: gkatsev: 5
[22:56] chapel: or you could do
[22:56] Wizek: ty gkatsev 
[22:56] chapel: v8: 5; console.log('Wizek')
[22:56] v8bot: chapel: CONSOLE: ["Wizek"], OUTPUT: undefined
[22:56] chapel: v8: console.log('Wizek'); 5;
[22:56] v8bot: chapel: CONSOLE: ["Wizek"], OUTPUT: 5
[22:56] chapel: :)
[22:57] gkatsev: yep
[22:57] chapel: bot hacking
[22:57] gkatsev: chapel: this is bot hacking:
[22:57] gkatsev: `string->int
[22:57] gbot2: v8: [parseInt('1', 10), Number('1'), +'1', ~~'1', '1'>>0, '1'|0, 1*'1'] // each item in the list is a way of doing string->int conversions
[22:57] v8bot: gbot2: [1, 1, 1, 1, 1, 1, 1]
[22:57] guillermo has joined the channel
[22:57] Wizek: tjholowaychuk: There seems to be an error with it's sessions middleware, isn't it? After ten minutes, it exits with error I'll copy here when I get hang of it again
[22:58] Wizek: tjholowaychuk: it's with reapInterval
[22:58] polotek has joined the channel
[22:58] tjholowaychuk: Wizek: dont use the MemoryStore for production
[22:59] tjholowaychuk: its only really useful for the test environment
[22:59] Wizek: why?
[22:59] Wizek: hmm
[22:59] tjholowaychuk: because it will explode eventually
[22:59] sugardave has joined the channel
[22:59] Wizek: So I sould hit DB for every session ID check?
[22:59] tjholowaychuk: Wizek: I would suggest connect-redis for a redis store, there are some for mongo etc as well
[23:00] tjholowaychuk: but redis is a good fit
[23:00] jimt_ has joined the channel
[23:03] Wizek has joined the channel
[23:05] Cainus has joined the channel
[23:06] jimt has joined the channel
[23:09] Wizek: tjholowaychuk: here it is: http://prntscr.com/1bt6t
[23:11] tjholowaychuk: one sec
[23:13] [[zz]] has joined the channel
[23:15] tjholowaychuk: Wizek: oh self is not there for some reason wtf
[23:15] tjholowaychuk: ill patch
[23:15] tjholowaychuk: oh wait yeah it is
[23:16] tjholowaychuk: should be fine man
[23:16] Wizek: How can I get the fixed version?
[23:16] tjholowaychuk: it should be fine as-is
[23:16] tjholowaychuk: self is there
[23:17] Wizek: then, where  the problem is at?
[23:17] tjholowaychuk: try updating anyways
[23:17] tjholowaychuk: 0.5.0 is latest
[23:17] tjholowaychuk: you have 0.3.0
[23:19] Wizek: you mena connect and not express right?
[23:20] Wizek: tjholowaychuk: I've updated conenct to 0.5.0, let's see if it has any more problems
[23:20] tjholowaychuk: yeah connect
[23:20] tjholowaychuk: express is at 1.0
[23:21] tjholowaychuk: i could tell you when it was fixed if tim didnt bork the changelog
[23:21] lin__ has joined the channel
[23:21] tjholowaychuk: ill try a git log
[23:21] Wizek: tjholowaychuk: Exactly the same error msg
[23:21] Wizek: and it is encountered when reapInterval is reached
[23:22] tjholowaychuk: hmm ill give it a try
[23:22] benburkert has joined the channel
[23:23] Wizek: tjholowaychuk: I'm suspicious of my array prototype extension: http://prntscr.com/1bt8x Can this be the cause?
[23:23] tjholowaychuk: hmm no that should be fine
[23:24] tjholowaychuk: do you have other extensions?
[23:24] tjholowaychuk: all I do is pass this to setInterval()
[23:24] tjholowaychuk: and call self.reap()
[23:24] tjholowaychuk: shouldnt be breaking
[23:27] Wizek: but it does ^^
[23:28] tjholowaychuk: its not breaking for me
[23:30] sechrist: hmm
[23:30] sechrist: I'm curious if those guids are optimal
[23:30] sechrist: I figured somebody would just bind a c lib
[23:32] Wizek: tjholowaychuk: What am I doing wrong then here: http://prntscr.com/1btah
[23:32] Wizek: ?
[23:32] tjholowaychuk: Wizek: new
[23:32] tjholowaychuk: Wizek: new MemStore
[23:32] tjholowaychuk: not just MemStore()
[23:33] tjholowaychuk: also you can grab it via express.session.MemoryStore
[23:33] tjholowaychuk: (which is actually connect.session.MemoryStore, same thing)
[23:36] benburkert has joined the channel
[23:36] Wizek: tjholowaychuk: Oh, thanks
[23:37] lin__ has joined the channel
[23:39] zemanel has joined the channel
[23:39] ben_alman has joined the channel
[23:42] tjholowaychuk: :)
[23:42] tjholowaychuk: damn them constructors ey
[23:43] arrty has joined the channel
[23:43] cheney has joined the channel
[23:43] sechrist: npm install guid
[23:43] sechrist: heh
[23:47] Wizek has joined the channel
[23:49] prinzdezibel has joined the channel
[23:54] shimondoodkin has joined the channel
[23:55] yrashk has joined the channel
[23:56] RevoOf has joined the channel
[23:57] yrashk has joined the channel
[23:58] yrashk has joined the channel
[23:59] xSmurf: here's another issue with node dev... it doesn't pass along signals at least not SIGHUP in which case it just kills
[23:59] yrashk has joined the channel
[23:59] tjholowaychuk: xSmurf: use process.on('SIG<whatever>', ...
