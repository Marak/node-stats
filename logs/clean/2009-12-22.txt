[00:02] DamZ has joined the channel
[00:14] mikeal has joined the channel
[00:26] mikeal has joined the channel
[00:43] chakrit has left the channel
[00:45] jed has joined the channel
[00:47] chakrit has joined the channel
[00:50] RayMorgan has joined the channel
[00:59] <JimBastard> man people are soo stupid
[00:59] <JimBastard> i say, pretend you have 1,000,000 CSS classes...then explain a scenario.....people are like YEAH LOL LET ME SEE AN APPLICATION THAT HAS A MILLION CSS CLASSES WILL NEVER HAPPEN
[00:59] <JimBastard> :-(
[00:59] <JimBastard> noob overload
[01:00] <JimBastard> only a tasty vietnamese sandwhich and a cigar can help me now
[01:00] micheil has joined the channel
[01:01] <micheil> hey.. with tcp.createConnection, is there anyway to get what the error was out of it?
[01:01] <deanlandolt> JimBastard: i can imagine a scenario, but still, /if/ you have a million css classes i'd still say you're doing it wrong ;)
[01:01] <orlandov> JimBastard: i hear ya man
[01:02] <orlandov> specially after the n'th designer has been through the CSS. they never go back and make sure it's all sane, they just add new classes all over the place
[01:02] <orlandov> ACTION grumbles
[01:02] <micheil> like, can I force node to dump the error?
[01:03] <DamZ> "Don't Mistake the Finger Pointing at the Moon for the Moon"
[01:03] <JimBastard> bad moon
[01:03] <JimBastard> i was just trying to explain why you'd want to use dynamic css instead of loading it on pageload
[01:04] <JimBastard> this spicy pork baoguette is fucking unstoppable
[01:04] aguynamedben has joined the channel
[01:05] <deanlandolt> JimBastard: fair enough, but i think the real value is manipulating vars in css
[01:06] <deanlandolt> i've tried to come up with system to use css as a set of /default/ values and use js and json to manipulate them unobtrusively
[01:07] <deanlandolt> but it's pretty nasty...perhaps something like jsss could fix that
[01:07] <JimBastard> well usually just do jquery.css()
[01:07] <JimBastard> i just want to store my CSS in JSON
[01:07] <JimBastard> caus i <3 JSON
[01:08] <deanlandolt> yeah, that part's easy...the hard part is defining the mechanism to modify the stylesheet
[01:08] <micheil> man.. not even compiling with the debug flag will  get node to dump connection errors
[01:10] <JimBastard> micheil im assuming you tried binding to the default node error for connections?
[01:10] <JimBastard> i mean is there one?
[01:11] <JimBastard> on error event?
[01:11] <micheil> it just has the close event and the optional variable for "has errors"
[01:11] <JimBastard> is the close event firing?
[01:12] <JimBastard> or if the connection fails does it never hit close?
[01:14] <micheil> the close event is firing because there was an error
[01:14] <micheil> but I have no idea how to get that error
[01:14] <JimBastard> whats inside the optional variable?
[01:19] jed has joined the channel
[01:41] <micheil> it's a boolean
[01:42] <micheil> I did some hacking in node_net.cc to emit the error out
[01:42] <JimBastard> so it wasnt passing the error already?
[01:42] <JimBastard> just the bool?
[01:43] <micheil> it just passes a bool
[01:43] <JimBastard> so that should probaly be fixed maybe?
[01:43] <micheil> so I hacked it and made it emit a receive event and to emit the data as the error
[01:43] pistola has joined the channel
[01:44] <micheil> it's in the api docs that it needs to be fixed, but hasn't been
[01:45] <JimBastard> makes sense
[01:47] sudoer has joined the channel
[01:48] <JimBastard> so ive got to build a web api....im thinking http://github.com/danwrong/restler would be a good start?
[01:50] <JimBastard> reboot
[02:00] <pistola> Could be a good start
[02:02] Vito` has joined the channel
[02:04] <micheil> man.. hacking node would be heaps easier if I knew c++ / c
[02:07] <micheil> woot!
[02:07] <micheil> just manage to add an event called error
[02:08] <micheil> although, the error event is emitted in place of the close event
[02:08] <micheil> might make both emit
[02:12] <micheil> okay.. so we have: conn.addListener("close", function(bool)); and conn.addListener("error", function(string))
[02:15] <micheil> now I just need to work out why I'm getting a connection refused error
[02:33] JimBastard has joined the channel
[02:33] <JimBastard> so yeah
[02:33] <JimBastard> im thinking restler + redis or mongodb...if they ever get it working would make a decent webservice
[02:41] soveran has joined the channel
[02:44] scudco has joined the channel
[02:44] <micheil> anyone know what the SP control character is?
[02:45] <JimBastard> ACTION blinks
[02:46] ehird has joined the channel
[02:46] <ehird> do most people use git or the release?
[02:46] <JimBastard> i used the release
[02:48] Micheil1 has joined the channel
[02:50] <hassox> git
[02:50] <ehird> n=2, p=0.5
[02:50] <ehird> great sample there :p
[02:50] <hassox> :)
[02:56] tlrobinson1 has joined the channel
[03:02] chakrit has joined the channel
[03:03] hassox_ has joined the channel
[03:04] binary42 has joined the channel
[03:04] Pilate has joined the channel
[03:05] micheil has joined the channel
[03:06] <micheil> hmm.. SP is the space character.. and the reason I couldn't connect was because of the end server not responding
[03:07] mikeal has joined the channel
[03:08] bryanl has joined the channel
[03:24] eddanger has joined the channel
[03:25] tlrobinson1 has joined the channel
[03:25] <ehird> anyone want to toss a sample into the batch? :p
[03:25] <ehird> i guess it just depends on how stable the git is, really
[03:27] mikeal has joined the channel
[03:51] ehird_ has joined the channel
[04:29] soveran has joined the channel
[04:42] RayMorgan has joined the channel
[04:52] micheil has joined the channel
[05:29] aguynamedben has joined the channel
[05:42] sudoer has joined the channel
[06:15] <stephenlb> node++
[06:38] ryanmcgrath has joined the channel
[06:40] DamZ has joined the channel
[06:55] <micheil> note to self: EventEmitter works a tonne better when you inherit it, rather then mix it in
[06:59] felixge has joined the channel
[07:23] shiftb has joined the channel
[08:01] micheil has joined the channel
[08:03] <micheil> ACTION just pushed the beginnings of his SMTP lib to github: http://github.com/Miksago/node.js-smtp
[08:04] hassox_ has joined the channel
[08:04] mikeal has joined the channel
[08:09] rictic has joined the channel
[08:35] hassox_ has joined the channel
[08:45] zmoog has joined the channel
[08:46] qFox has joined the channel
[08:54] sixtus42 has joined the channel
[08:55] <hassox_> anyone up?
[08:55] <hassox_> require('./../lib/foo')
[08:55] <hassox_> throws :( 
[08:55] <hassox_> can't find it it says
[08:56] <hassox_> https://gist.github.com/d30513f9c70ce8b43437
[09:07] <hassox_> 4a615ddd9c29b57dd5b526b46dcbcf4585acd95f <<- that commit works cor
[09:08] <hassox_> 6301f18e62e8f90026dda3aec3457e4723ea319b << introduced the bug
[09:09] <ryanmcgrath> Hey, for anyone interested, I ported my Python Twitter API to Node: http://github.com/ryanmcgrath/twitscript
[09:09] <hassox_> ryah_away: ^^ 
[09:13] <ryanmcgrath> With that, I take my leave.
[09:13] <ryanmcgrath> G'night folks
[09:36] <isaacs> hey, is there a way to write to stderr in a non-blocking way?
[09:37] <isaacs> i'd like to have my server log accesses to stdout and errors to stderr.  but i really don't care to sit around and make the client wait while I print an error.
[09:39] <isaacs> hassox hassox_: I fixed that on my master, posted a patch to the list, and alerted ryah_away about it.  also added tests.
[09:40] <hassox_> nice :D
[09:40] <hassox_> it hurt my head to find it but I ended up just checking out the last working version and working with that
[09:40] <hassox_> isaacs: got time for a quick q?
[09:41] <isaacs> whassup?
[09:41] <hassox_> I've been refactoring chain to not mixin to the global namespace n stuff
[09:41] <hassox_> and to be a good user of require
[09:41] <isaacs> kudos!
[09:41] <hassox_> but there's on part where I need to get at the Chain object from one of the namespaced objects
[09:42] <hassox_> what I've ended up doing is
[09:42] <hassox_> var chain = module.parent.exports
[09:42] <isaacs> why can't you just do require("chain").Chain?
[09:42] <hassox_> is that bad?
[09:42] <hassox_> because chain requires this file
[09:42] <hassox_> to assemble it 
[09:42] <isaacs> you can just require it again, it won't load the script again, it memoizes it
[09:42] <isaacs> yeah, that's fine
[09:42] <isaacs> cycles are ok :)
[09:42] <hassox_> it's circular
[09:42] <hassox_> it wasn't
[09:42] <isaacs> yep.
[09:42] <isaacs> it is now :)
[09:42] <hassox_> it ran a bunch of too many promises on me
[09:42] <hassox_> ah k
[09:42] <hassox_> cool :D
[09:43] <isaacs> cycles were fine as long as you didn't have ".." in the relative module path.
[09:43] <isaacs> then it barfed.
[09:43] <hassox_> so it's a matter of the bug that's hit me with the relative paths
[09:43] <hassox_> which i do
[09:43] <isaacs> and i think even ../foo was fine, but ../../foo or ./../foo was not
[09:43] <hassox_> it'd be require('./../chain')
[09:43] <isaacs> trying to be lazy and use regexes rather than refactor code.
[09:43] <isaacs> you don't need the ./, it doesn't do anything
[09:43] <hassox_> cool
[09:43] <isaacs> i mean, it should be fine, of course
[09:43] <hassox_> wasn't sure about that
[09:43] <isaacs> but require("../chain") is ok, too
[09:43] <hassox_> so I have to wait for this patch to be applied
[09:44] <hassox_> and then I can change it to be a circular require
[09:44] <isaacs> sure, or you can just pull from me if you're eager.
[09:44] <hassox_> oh right
[09:44] <hassox_> what's ur git
[09:44] <hassox_> ?
[09:44] <isaacs> i'm isaacs
[09:44] <isaacs> http://github.com/isaacs/node
[09:44] <hassox_> just pull master?
[09:45] <elliottcable> Or you could just use `from` instead! d-:<
[09:45] <hassox_> ?
[09:45] <hassox_> isaacs: which branch?
[09:46] <isaacs> master should be passing all tests.
[09:46] <hassox_> kk
[09:46] <isaacs> if you run into any issues, i would really appreciate it if you could add a test case to node/tests such that "make test" shows the error
[09:47] <isaacs> the only failure i'm seeing now is that tls support isn't on my machine
[09:48] <hassox_> kk
[09:48] <hassox_> I'll try
[09:48] <isaacs> it's pretty easy to write tests.  just take a look at the other stuff in tests/mjsunit
[09:48] <hassox_> yeah
[09:48] <isaacs> it's a bit trickier if you have to create fixtures for your test, but not too awful
[09:48] <hassox_> I'll give it a crack
[09:48] <hassox_> I really want to be able to spec chain
[09:48] <hassox_> I have no tests and it's making me cry
[09:48] <isaacs> hehe
[09:49] <isaacs> hey, did i show you my latest toy?
[09:49] <hassox_> no
[09:49] <hassox_> yay
[09:49] <hassox_> circular deps work!
[09:49] <isaacs> http://github.com/isaacs/simple-node-server
[09:50] <isaacs> i've evolved it to the state where it's kinda like lighttpd or apache out of the box
[09:50] <hassox_> oh nice :D
[09:51] <hassox_> mm :D
[09:51] <hassox_> it'll be really awesome to have self monitoring clusters
[09:51] <isaacs> self-monitoring clusters?
[09:51] <hassox_> oh
[09:51] <hassox_> heheh
[09:51] <hassox_> guess it was just in my head ;)
[09:52] <hassox_> so the idea was that we could have a master server
[09:52] <hassox_> a la what you have
[09:52] <hassox_> and have it spawn a bunch of child nodes for each app
[09:52] <hassox_> it can then monitor those for memory consumption and aliveness right inside the master process
[09:52] <isaacs> oic
[09:53] <hassox_> in the ruby world we had mongrels
[09:53] <isaacs> yeah, i don't really monitor them.  i was starting to, but there's really no need.
[09:53] <hassox_> so you'd setup nginx and setup a cluster of reverse proxied mongrels
[09:53] <hassox_> then nginx would just round robin to the mongrels
[09:53] <isaacs> v8's crazy efficient with object creation.
[09:53] <isaacs> right
[09:53] <hassox_> now there's passenger, unicorn and a whole bunch of others that effectively do similar things
[09:53] <hassox_> unicorn is a bit different
[09:54] <hassox_> it make heavy use of posix kernel calls
[09:54] <hassox_> select() and accept() and stuff like that
[09:54] <hassox_> so have you taken this bad boi out for a spin?
[09:54] <isaacs> sns?
[09:54] <isaacs> i've throw a few benches at it.
[09:54] <hassox_> how does it go?
[09:55] <isaacs> better than apache for in-memory stuff, not quite as fast when touching the system.
[09:55] <hassox_> nice :)
[09:55] <isaacs> i'm on a mac, so concurrency kinda rots.
[09:55] <hassox_> heh
[09:55] <hassox_> so it will be able to use plugins huh
[09:55] <isaacs> but like 8k r/s for a minimal hello world app
[09:56] <isaacs> kinda
[09:56] <hassox_> so I'll be able to setup a plugin for a self assembling cluster of nodes ;)
[09:56] <isaacs> you can write a js function, and pass it into the server invocation
[09:56] micheil has joined the channel
[09:56] <hassox_> cool
[09:56] <hassox_> good enough
[09:56] <hassox_> that's really exciting
[09:56] <isaacs> from there, you'll have a this.next() method to punt to the next handler, or this.sendHeader().sendBody().finish() to handle it yourself
[09:56] <isaacs> or you can do any or all of the above.
[09:57] <hassox_> whoa
[09:57] <hassox_> so you can do it right up front in the public server
[09:57] <hassox_> that's cool
[09:57] <isaacs> so, you could have a module that just assigns the content-type and then lets something else handle the body
[09:57] <isaacs> or whatevs.
[09:57] <hassox_> what does this.next() do?
[09:57] <elliottcable> What’s going on?
[09:57] <isaacs> http://github.com/isaacs/simple-node-server/blob/master/example.js
[09:57] <elliottcable> ACTION missed something ‘really exciting’
[09:57] <isaacs> see how there's a list of "modules"?
[09:57] <hassox_> yeah
[09:58] <isaacs> well, if you call this.next() inside one of them, it passes the request to the next one.
[09:58] <hassox_> ah right
[09:58] <isaacs> so, i can't yet do the kind of middleware awesome that wsgi and rack and them do
[09:58] <hassox_> I don't think it's appropriate within node (as I've said before)
[09:58] <isaacs> because it's not a stack of functions, it's a list
[09:58] <isaacs> yeah, i agree with you'
[09:59] <hassox_> I like this
[09:59] <hassox_> this is nice
[09:59] <elliottcable> lol this.next
[09:59] <hassox_> so
[09:59] <isaacs> it seems conceptually congruent with what you're doing with chain
[09:59] <elliottcable> http://thisnext.com/
[09:59] <hassox_> it's handling the request and repsonse objects?
[09:59] <isaacs> i'm not in love with the names or shape yet
[10:00] <hassox_> elliottcable: is that sfw?
[10:00] <hassox_> isaacs: so you're using a http server?
[10:00] <isaacs> hassox_: you mean, for sns?  it's just using node
[10:00] <elliottcable> hassox_: No results for NSFW from:elliottcable
[10:01] <hassox_> so you're not firing it up with http=require('http')
[10:01] <elliottcable> http://search.twitter.com/search?ands=NSFW&from=elliottcable
[10:01] <hassox_> it's just a raw socket?
[10:01] <hassox_> elliottcable:  lol
[10:02] <hassox_> isaacs: elliottcable I've been having thoughts
[10:02] <hassox_> I'd like to run them past you guys
[10:02] <elliottcable> oh shit.
[10:02] elliottcable has left the channel
[10:02] <hassox_> haha
[10:02] <isaacs> hehe
[10:02] <hassox_> so I guess he's not up for it ;)
[10:02] elliottcable has joined the channel
[10:02] <elliottcable> >,>
[10:02] <hassox_> lol
[10:02] <elliottcable> <,<
[10:02] <simoncpu>  No results for  NSFW from:elliottcable
[10:02] <hassox_> sooo
[10:02] <simoncpu> BORING
[10:03] <elliottcable> simoncpu: It doesn’t search back far enough )-:
[10:03] <hassox_> I've been thinking about rendering in the context of a webapp and chain
[10:03] <isaacs> hassox_: i'm using require("http"), yeah
[10:03] <elliottcable> simoncpu: I was hoping to come up with a link to a specific tweet, but I gave up and decided the results text was more entertaining
[10:03] <isaacs> sorry, it's 2am here
[10:03] <hassox_> what would you guys think of an app wide object that handled all the rendering
[10:03] <elliottcable> Hm.
[10:03] <elliottcable> I’m not the guy to go to for this.
[10:03] <hassox_> so in ur bit of kit you get the data and put it into env.data
[10:03] <hassox_> elliottcable: conceptually
[10:04] <hassox_> so you fill in ur data that you want
[10:04] <elliottcable> I have a very specific goal in mind when it comes to Node.js + the web, and it doesn’t involve chains like that
[10:04] <hassox_> and then pass it over to the Renderer with the template name you want rendered
[10:04] <isaacs> hassox_: depends...
[10:04] <hassox_> elliottcable: care to explain?
[10:04] <elliottcable> hassox_: ##u
[10:04] <hassox_> isaacs: on?
[10:04] <isaacs> i rather like how ejs compiles a template into a function.  you could even then hang those functions on the server object, so that you only have to do it once per server start
[10:04] <elliottcable> (also, screw Freenode for not allowing Unicode room names)
[10:05] <hassox_> isaacs: indeed that's how I'd do it...
[10:05] <elliottcable> Hm.
[10:05] <hassox_> caching compiled views is a must
[10:05] <isaacs> right... for prod anyhow
[10:05] <isaacs> for development, that's a pita
[10:05] <elliottcable> See, it’s irrelevant for me, as there aren’t likely to *be* any ‘views’ on the server
[10:05] <hassox_> I was thinking that it'd be nice if any bit of kit could just render a template
[10:06] <hassox_> elliottcable: just rendering json?
[10:06] <isaacs> ACTION is a veteran of many years using php+apc, 15 browser refreshes, going "why isn't this updating!!!???!?!!!!  ... (oh, right)" and then restarting the server
[10:06] <hassox_> lol
[10:06] <elliottcable> I’m not entirely set on it yet, but it’s going to *probably* involve HTML as a data transport layer, so to speak
[10:06] <hassox_> why html and not xml?
[10:06] <hassox_> if ur into that kinda thing ;)
[10:07] <elliottcable> hassox_: Because I’m probably going to ship the data to the client in the initial HTTP request.
[10:07] <hassox_> we have one like that...
[10:07] <hassox_> takes an age to render the page with lots of data
[10:07] <elliottcable> hassox_: The server is probably going to create a very light datamodel in HTML, ship it along with some included JS to the client, and then let the application bootstrap clientside with that data
[10:07] chrisfarms has joined the channel
[10:08] <elliottcable> i.e. you have light, old-school webpages, with nothing but the relevant data and some light inline stylesheets to make it a little less ugly… and then let the actual *interactive application*, along with all complex layout/styling, bootstrap itself clientside.
[10:08] <elliottcable> I’m a long way from worrying about the details of all that, though. http://gist.github.com/260152
[10:09] <elliottcable> gotta finish up `from`, JESS, and grizzly first
[10:09] <isaacs> hehe.. "planned open source projects"
[10:09] <isaacs> open source projects are like babies.  you don't plan them.  they just happen if your'e not careful enough.
[10:10] <hassox_> lol
[10:10] <hassox_> that's quite a list
[10:11] <isaacs> i kid, i kid, i'm sure you're quite disciplined and probably not going to procrastinate all of this and get distracted by something shiny in the meantime.
[10:12] <hassox_> somethign shiny?
[10:12] <hassox_> you mean shinier than node?
[10:12] <isaacs> well, it's the shiniest thing i can see atm
[10:12] <isaacs> that's why i'm here.
[10:12] <hassox_> I can't see anything... I'm blinded by the shinies
[10:12] <hassox_> ;)
[10:12] <elliottcable> Exactly.
[10:13] <elliottcable> You should have seen the *ruby* projects I dropped for all of this. Hah.
[10:13] <isaacs> hehehe
[10:13] <elliottcable> But, yeah, the Wave stuff is *extremely* important to me. Has been for quite a few months.
[10:13] <elliottcable> I can’t even directly work on it, due to all the stuff necessary to come together before I can start doing so.
[10:13] <isaacs> this is an interesting way of organizing a dependency tree project plan
[10:13] <hassox_> elliottcable: I'm procrastinating on pancake for this
[10:13] <elliottcable> oh shit.
[10:14] <elliottcable> You *don’t* procrastinate on pancakes!
[10:14] <hassox_> heh
[10:14] <elliottcable> FUck that shit hassox, GO GET THOSE DAMNED PANCAKES.
[10:14] <hassox_> not panckaes...
[10:14] <hassox_> http://github.com/hassox/pancake
[10:14] <isaacs> i, not being disciplined, recommend instead that you do everything that involves producing actual code, and cross the rest off the list.
[10:14] <elliottcable> Anyhow.
[10:14] <elliottcable> 10:08:17 < isaacs> open source projects are like babies.  you don't plan them.  they just happen if your'e not careful enough.
[10:14] <elliottcable> That shit is going on Twitter. isaacs, what’s your @name?
[10:14] <isaacs> i'm @izs
[10:15] <elliottcable> isaacs: what?
[10:15] <isaacs> i'm http://twitter.com/izs
[10:16] erichocean has joined the channel
[10:18] <elliottcable> Oh shit, I’ve seen Pancake before, ah
[10:18] <elliottcable> hassox_:*
[10:18] <hassox_> <.<
[10:18] <isaacs> g'nite folks.
[10:19] <hassox_> yeah I'd better move too
[10:19] <hassox_> night elliottcable 
[10:21] <elliottcable> hassox_: damn.
[10:21] <elliottcable> o7
[10:30] shfx has joined the channel
[10:38] sixtus42 has joined the channel
[11:03] michaelk^ has joined the channel
[11:20] erichocean has joined the channel
[11:24] mcarter has joined the channel
[11:38] mcarter has joined the channel
[11:54] mcarter has joined the channel
[12:08] mies has joined the channel
[12:14] mies has joined the channel
[12:39] <micheil> hassox: That's a known issue about ".." requires, check out the threads on the mailing list
[12:40] chakrit has left the channel
[12:44] <elliottcable> micheil: issaacs repaired it
[12:45] <micheil> yeah, i know elliottcable.
[12:45] <micheil> I helped code review it.
[12:45] <micheil> iirc.
[12:47] micheil has joined the channel
[12:50] <micheil> hmm.. slowly getting somewhere with this smtp lib
[13:01] alex-desktop has joined the channel
[13:22] <micheil> hmm.. this slightly annoying.. some tcp commands I'm doing with node, I can't replicate under telnet
[13:24] <micheil> uh, duh. telnet auto sends \r\n on return key
[14:19] bryanl has joined the channel
[14:25] kriszyp has joined the channel
[14:37] Booster has joined the channel
[14:57] saikko has joined the channel
[15:03] keeto has joined the channel
[15:17] <ryah_away> ACTION back
[15:20] <mediacoder> welcome back
[15:22] <micheil> ryah: tcp doesn't support SSL/TLS yet does it?
[15:23] <micheil> rather, tcp.createConnection
[15:23] <micheil> not server
[15:27] <ryah> micheil: i think so
[15:27] jed has joined the channel
[15:27] <micheil> hmm.. I can't find any information / code on it
[15:28] <micheil> I can see that in node_net.h, that there's a v8 handle to SetSecure, but I don't think there's a public interface
[15:29] <micheil> (that was on line 45)
[15:29] <ryah> micheil: connection.setSecure()
[15:30] <ryah> that code is probably going to be redone soon
[15:30] <micheil> ryah: I've already hacked in an error event
[15:30] <micheil> so that I could actually see what errors I was incuring
[15:31] alexiskander has joined the channel
[15:36] brosner has joined the channel
[15:36] <zimbatm> ryah: what are the directions you're taking for the rewrite ?
[15:37] <zimbatm> all the inherit stuff seems a bit non-js-like to me
[15:37] <ryah> zimbatm: i'm refactoring the tcp stuff
[15:38] <zimbatm> tcp, then http ?
[15:38] <zimbatm> i just sent a patch to the ml for the http connection hijack btw
[15:40] <micheil> ryah: I've so far managed to get the initiialization of an SMTP client working, although, to go any further, I need various TLS modes and things like that
[15:40] <ryah> yes, http will its underbelly worked on
[15:44] felixge has joined the channel
[15:53] <micheil> man.. it's 2am..
[15:56] <ryah> zimbatm: sorry - let me write up my plans later in the ML. it's a bit hectic now
[15:58] <zimbatm> ryah: good idea, I'm looking forward to read them
[16:02] <ryah> zimbatm: main idea is - everything is going into js - with minimal bindngs to c
[16:02] <ryah> zimbatm: http://gist.github.com/259747
[16:09] nua has joined the channel
[16:10] <zimbatm> ryah: I was also going to propose to introduce some kind of Stream, that abstracts data source
[16:11] aurynn has joined the channel
[16:12] <zimbatm> but maybe not a duplex-stream like you implemented
[16:13] <nua> since upgrading to v0.1.22 I have some strangeness when running scripts, see: http://pastebin.com/m656bc9cd
[16:15] <nua> let me know if thats not clear... but basically running a script in another directory seems to stop me from seeing its output (which could be down to a number of things)
[16:15] <nua> anyone else getting this behaviour?
[16:18] jed has joined the channel
[16:20] <ryah> zimbatm: i think there will be two streams a reader and a writer
[16:22] <ryah> nua: yes - fixing it at the moment
[16:24] <nua> ryah: thanks
[16:25] <nua> ACTION reverts to 0.1.18 for now
[16:25] <nua> :)
[16:30] <CIA-56> node: 03isaacs 07master * r4dcdfaf 10/ (10 files in 7 dirs): 
[16:30] <CIA-56> node: Fix require("../blah") issues
[16:30] <CIA-56> node: Added some more tests, and refactored the uri and path modules to use the
[16:30] <CIA-56> node: same normalization logic, so that nothing is relying on flaky regexps.
[16:30] <CIA-56> node: http://groups.google.com/group/nodejs/browse_thread/thread/34779f8c10098c5e
[16:30] <CIA-56> node: http://groups.google.com/group/nodejs/browse_thread/thread/1aa0146b92582679#msg_9822c03998cb4064 - http://bit.ly/5uQPOD
[16:31] frodenius has joined the channel
[16:32] <ryah> nua: there is your fix
[16:32] <ryah> i'll be making a 0.1.23 release in an hour or so with that fix
[16:32] <nua> ryah: excellent! talk about service ;)
[16:39] michaelk^ has joined the channel
[16:40] binary42 has joined the channel
[16:48] felixge has joined the channel
[16:48] RayMorgan has joined the channel
[16:51] <CIA-56> node: 03Ryan Dahl 07master * r120492e 10/ src/node.js : export path.normalizeArray for the uri module - http://bit.ly/84OogK
[16:51] <felixge> ryah: hey, wb
[16:51] <felixge> still in berlin?
[16:51] <ryah> no, back in luebeck
[16:52] <ryah> was just there for a day 
[16:52] <felixge> ah ok
[16:53] <felixge> ryah: glad to see you back :)
[16:53] <felixge> well, I guess at least now - you shouldn't be here for christmas :)
[17:01] <CIA-56> node: 03Jonas Pfenniger 07master * re6c5ac4 10/ src/node.js : 
[17:01] <CIA-56> node: posix.cat not using call() correctly
[17:01] <CIA-56> node: 'this' will point to "arguments" and the arguments of the callback itself
[17:01] <CIA-56> node: will not be set. - http://bit.ly/8X71yk
[17:04] rictic has joined the channel
[17:07] felixge has joined the channel
[17:14] rictic has joined the channel
[17:28] aguynamedben has joined the channel
[17:36] voxpelli-laptop has joined the channel
[17:39] chrisfarms has joined the channel
[17:52] eddanger has joined the channel
[17:55] <felixge> ryah: what do you think about merging: http://groups.google.com/group/nodejs/browse_thread/thread/8044f2a28bb8c535
[17:57] sudoer has joined the channel
[17:58] ericflo has joined the channel
[18:08] aurynn has joined the channel
[18:12] ericflo has joined the channel
[18:12] chrisfarms has joined the channel
[18:12] voxpelli-laptop has joined the channel
[18:19] ryanmcgrath has joined the channel
[18:27] <CIA-56> node: 03Felix Geisendörfer 07master * r5de04da 10/ lib/multipart.js : (log message trimmed)
[18:27] <CIA-56> node: Do not pause request for multipart parsing
[18:27] <CIA-56> node: This is actually undesireable as it takes away control from the user who
[18:27] <CIA-56> node: may want to pause/resume to throttle the upload stream, or synchronize
[18:27] <CIA-56> node: it with disk flushing.
[18:27] <CIA-56> node: I actually ran into memory issues when trying to stream huge files to
[18:27] <CIA-56> node: disc as the file module was building up a huge action buffer. This can
[18:29] voodootikigod has joined the channel
[18:29] Connorhd has joined the channel
[18:29] sztanpet has joined the channel
[18:29] evilhackerdude has joined the channel
[18:29] halorgium has joined the channel
[18:36] michaelk^ has joined the channel
[18:44] logicuce has joined the channel
[18:51] jamiew has joined the channel
[18:52] stephenlb has joined the channel
[18:53] Pilate has joined the channel
[18:57] <ashb> http://nichol.as/asynchronous-servers-in-python
[18:57] brandon_beacher has joined the channel
[18:58] felixge has joined the channel
[18:58] rictic has joined the channel
[18:59] shiftb has joined the channel
[19:00] simoncpu has joined the channel
[19:02] <felixge> ryah: cool, thanks for merging!
[19:04] logicuce has joined the channel
[19:07] sudoer has joined the channel
[19:22] jtoy has joined the channel
[19:22] voodootikigod has joined the channel
[19:22] Connorhd has joined the channel
[19:22] sztanpet has joined the channel
[19:22] evilhackerdude has joined the channel
[19:22] halorgium has joined the channel
[19:26] <ryah> ashb: nice but the graphs suck
[19:26] <ryah> you can't tell which is which
[19:26] <ryah> oh i see, you can mouse over
[19:26] <ashb> oh neat
[19:27] <ryah> highcharts.com  meh
[19:27] <ashb> twisted has a surpsing error rate
[19:29] <ashb> hmmm its really a shame that coda is such a terrible editor
[19:31] ericflo has joined the channel
[19:31] voxpelli-laptop has joined the channel
[19:31] bryanl has joined the channel
[19:37] <ryah> any complains before the next release?
[19:37] <felixge> ryah: nope. I think the exception swallowing was the only really bad thing in the last release, so fixing that already qualifies for a new release
[19:40] <ryah> wait did that get merged?
[19:41] <ryah> i think that got swallowed up in a different commit
[19:41] <ryah> :/
[19:49] <kriszyp> ACTION goes to try out 0.1.23...
[19:49] devyn has joined the channel
[19:50] <kriszyp> btw, is there an appropriate way to upgrade node? do I just rerun the ./configure, make, make install process on the downloaded directory?
[19:51] <ryah> yeah
[19:54] <ashb> ACTION creates an abomination of a regexp to expand tabs in the indent
[19:54] <ashb>   var tab_re = new RegExp("^((?:" + replace + ")*)?( {0,"+this.tabstop+"}\t)", "gm")
[19:56] <kriszyp> ah, this is looking good, thanks for the fixes ryah!
[20:01] cloudhead has joined the channel
[20:02] michaelk^ has left the channel
[20:30] n8o has joined the channel
[20:31] n8o has joined the channel
[20:32] Tautologistics has joined the channel
[20:41] logicuce has left the channel
[21:04] jed has joined the channel
[21:06] oleg has joined the channel
[21:07] n8o has joined the channel
[21:43] JoePeck has joined the channel
[21:44] bryanl has joined the channel
[22:00] rictic has joined the channel
[22:03] dnolen has joined the channel
[22:09] devyn has left the channel
[22:12] jed has joined the channel
[22:17] dnolen has joined the channel
[22:28] jcrosby has joined the channel
[22:38] hassox_ has joined the channel
[22:51] felixge has joined the channel
[22:54] dnolen has joined the channel
[23:05] mikeal has joined the channel
[23:08] iaurynn has joined the channel
[23:40] <elliottcable> http://cld.ly/10vbf
[23:40] <elliottcable> now if only I could find a microphone worth shit in this house…
[23:44] rtomayko has joined the channel
[23:55] <inimino> elliottcable: nice
[23:57] binary42 has joined the channel
