[00:03] bmizerany has joined the channel
[00:36] stevendavie has joined the channel
[00:42] agenteo has joined the channel
[00:43] aho has joined the channel
[00:49] <micheil> Ned_: ugh. okay
[00:59] hober has joined the channel
[01:05] <_announcer> Twitter: "interesting segfault with a nodejs addon im writing.  segfaults when run with node, works when run with node_g.  Investigating" -- Elijah Insua. http://twitter.com/tmpvar/status/14526447312
[01:16] [[zz]] has joined the channel
[01:30] Tim_Smart has joined the channel
[01:34] bmizeran_ has joined the channel
[01:38] polotek has joined the channel
[01:39] linuxsable has joined the channel
[01:42] <_announcer> Twitter: "Today the #nodejs mailing list reached 1400 members and the github repository reached 1900 watchers." -- ryah. http://twitter.com/ryah/status/14528212711
[01:46] <_announcer> Twitter: "Ppl debating Ruby & Python are so 2006. Today's trend is to try node.js (and heroku's beta hosting for it)." -- Andrey Tarantsov. http://twitter.com/andreyvit/status/14528406925
[01:53] temp01 has joined the channel
[01:54] mikemike86 has joined the channel
[02:00] JimBastard has joined the channel
[02:00] <JimBastard> bleh my friends are too scared to watch human centipede 
[02:01] aaronblohowiak has joined the channel
[02:02] mscdex has joined the channel
[02:07] behmann has joined the channel
[02:08] <_ry> is there a js lib to take turn N seconds into a english phrase
[02:08] <_ry> like "5 hours ago"
[02:09] <micheil> umm.. yeah
[02:09] <micheil> one moment and I'll try to track it down for you, I think john resig wrote it
[02:09] mikemike86 has joined the channel
[02:13] <micheil> _ry: actually it wasn't john, here's an implementation: http://github.com/jherdman/javascript-relative-time-helpers/blob/master/date.extensions.js
[02:13] <JimBastard> hey _ry 
[02:13] <JimBastard> im building that right now
[02:14] <JimBastard> ive been working on an easy lib for that all week
[02:14] <micheil> good point
[02:14] <micheil> forgot about that lib.
[02:14] <JimBastard> its has toOrdinal() as well
[02:14] <temp01> `g john resig pretty date
[02:14] <gbot2> John Resig - JavaScript Pretty Date - http://ejohn.org/blog/javascript-pretty-date/
[02:14] <micheil> temp01: trust you. :P
[02:14] <polotek> _ry: is there a reason that ObjectWrap has protected methods?
[02:14] <JimBastard> http://github.com/marak/javascript-fu
[02:14] <JimBastard> ^^ not released
[02:15] <JimBastard> aye, yeah im pulling for all those sources
[02:15] <_ry> polotek: *shrug* probably
[02:15] <polotek> I don't fully understand C++ namespaces and scoping
[02:16] towski has joined the channel
[02:16] <polotek> so I'm trying to use ObjectWrap and getting errors because Wrap is protected
[02:17] <polotek> My custom wrap worked before because it was in the same namespace with my other objects
[02:17] <polotek> _ry: what happens when one object extends another object in a different namespace
[02:19] <micheil> JimBastard: y'know markdown can do lists?
[02:19] <JimBastard> ?
[02:19] <JimBastard> you mean UL / OL
[02:19] <JimBastard> ?
[02:20] <micheil> yeah
[02:20] <micheil> \t* | \t1. 
[02:20] <JimBastard> well i usually just fall back to html in my MD
[02:21] <micheil> JimBastard: I'm gunna leave a few comments on that code
[02:21] <JimBastard> i know a little html
[02:21] <JimBastard> word?
[02:21] <JimBastard> what you have in mind?
[02:21] <JimBastard> i was thinking of using Mint
[02:21] <JimBastard> to generate docs
[02:22] <_ry> micheil: thanks
[02:22] <micheil> _ry: i'm curious as to what it's for.. :D
[02:24] [[zz]] has joined the channel
[02:26] <_ry> micheil: im making the node-chat display how long it's been running
[02:26] <_ry> also its memory usage
[02:26] <micheil> ah, cool
[02:26] <micheil> _ry: I should really port that over to websockets
[02:27] <micheil> even though people are pushing for the websockets protocol to change AGAIN.
[02:28] <micheil> _ry: there's talk of making websockets use an SSL syntax or something, I don't completely understand it
[02:28] <micheil> basically as a way of stopping the websocket client in browsers from cross talking to other protocols
[02:29] Phazm has joined the channel
[02:29] <micheil> for secuity.
[02:29] <micheil> supposedly.
[02:30] ncb000gt has joined the channel
[02:30] iheartnodejs has joined the channel
[02:40] <_ry> polotek: hm i dontknow
[02:41] <_ry> like c++ namespacE?
[02:47] charlesjolley has joined the channel
[02:50] voodootikigod has joined the channel
[02:52] taf2 has joined the channel
[02:58] micheil has joined the channel
[03:00] <maushu> JimBastard, saw the movie.
[03:00] <JimBastard> which one
[03:00] <JimBastard> human cat?
[03:00] <maushu> The human centipede.
[03:00] <maushu> :p
[03:00] <JimBastard> spoiler alert, i havent seen it yet
[03:01] <maushu> Oh, okay.
[03:01] <maushu> It's hawt.
[03:01] <maushu> Forget all the porn you've seen, that movie is greatest.
[03:01] <maushu> lol
[03:02] <maushu> Just kidding. It's seriouly freaky.
[03:02] stepheneb has joined the channel
[03:02] <maushu> JimBastard, other movie that you might like is "Grace".
[03:03] <JimBastard> k
[03:04] <_ry> http://chat.nodejs.org/
[03:04] <_ry> ^-- put memory and uptime displays
[03:04] <maushu> 8.4mb?!
[03:06] <JimBastard> nice
[03:08] <_announcer> Twitter: "#nodejs chat now display daemon mem usage and uptime: http://chat.nodejs.org/" -- Ryan Dahl. http://twitter.com/ryah/status/14532512769
[03:09] <JimBastard> whoever set that up is fucking awesome
[03:09] <JimBastard> we can react in real time to haters
[03:10] <_ry> :)
[03:11] <maushu> ...set what up?
[03:11] <maushu> :x
[03:12] <mscdex> announcer
[03:12] <maushu> I wonder who was it.
[03:13] <maushu> That guy must be truly awesome.
[03:13] <mscdex> huhuehehahaheuheuhu
[03:13] <maushu> The code is horrible though. Needs to be cleaned.
[03:14] <darkrho> announcer is in pure js?
[03:14] <maushu> Yes.
[03:15] <maushu> Wait, let me check.
[03:15] <darkrho> I'm curious about the irc bot code
[03:15] <maushu> Not completely in js, it uses a gzip library.
[03:15] <darkrho> an if it's using t's realtime stream
[03:16] <maushu> http://graphnode.com/stuff/ircbot.js
[03:16] <maushu> It is.
[03:16] <maushu> The code is horrible. Seperating the stackoverflow api code and twiter code would improve it.
[03:16] <mscdex> !so-last
[03:16] <_announcer> Last Question: "How do i close a socket after a timeout in node.js?" by rramsden. http://stackoverflow.com/questions/2886191
[03:17] <Phazm> !so-check
[03:17] <_announcer> Sorry. Nothing new to announce.
[03:17] <mscdex> !so-what
[03:17] <maushu> !so-next
[03:17] <_announcer> Time left for the next fetch: 00:29:45
[03:17] <Phazm> !so-there
[03:18] <maushu> I need to also put some useful commands there.
[03:18] <mscdex> !so-hungry
[03:18] <maushu> But I want to port it first to my other idea.
[03:18] <mscdex> it needs an 8 ball script
[03:18] <mscdex> that way if someone comes by and asks a question when nobody else is alive, they can get an answer
[03:20] mikemike86 has joined the channel
[03:21] <maushu> Pretty much the most useless feature ever.
[03:21] <maushu> I like it!
[03:21] <mscdex> yey!
[03:21] <mscdex> and it could even use mirc colors!
[03:29] <darkrho> wow, there is already libxml bindings. nodejs it's increasing it's toolbox really fast
[03:30] <micheil> I wish _announcer didn't have the _, it removes _ry's easy tab-ability.
[03:31] <_ry> i was thinking abot changing my nick
[03:31] <ncb000gt> =o
[03:31] bpot has joined the channel
[03:31] <micheil> _ry: oh, okay
[03:31] <ncb000gt> *universe starts to rip apart*
[03:33] tmpvar has joined the channel
[03:33] <micheil> heh, ryah & ryan[WIN] fun.
[03:33] <Aria> ACTION laughs. Good thing "ryah" is as cool as _ry.
[03:33] towski has joined the channel
[03:33] charlesjolley has joined the channel
[03:34] <Aria> tmpvar: I'm on my way out, but http://github.com/aredridel/html5/blob/jsdom/JSDOM
[03:34] digman543 has joined the channel
[03:34] <Aria> (that branch works with jsdom!)
[03:34] <ryah> Aria: cool
[03:34] Aria has left the channel
[03:35] <tmpvar> Aria, awesome :)
[03:35] <tmpvar> oh yeah, I was considering how to fix #2
[03:35] PyroPete1 has joined the channel
[03:39] softdrink has joined the channel
[03:44] felixge has joined the channel
[03:44] felixge has joined the channel
[03:50] alexiskander has joined the channel
[03:51] mjijackson has joined the channel
[04:01] <_announcer> Twitter: "@stevelosh sounds like a job for Node.js" -- mark hellewell. http://twitter.com/markhellewell/status/14535131637
[04:04] jedschmidt has joined the channel
[04:18] <_announcer> Twitter: "wrapping my head around node.js with @simonw's ought to be classic 'Evented I/O-based Web Servers, Explained Using Bunnies'." -- James Home. http://twitter.com/jameshome/status/14535955084
[04:19] <_announcer> Twitter: "understanding node.js with @simonw's ought to be classic 'Evented I/O-based Web Servers, Explained Using Bunnies'. http://bit.ly/7DdKlj" -- James Home. http://twitter.com/jameshome/status/14536013176
[04:23] <_announcer> Twitter: "One of the nice things about coding JavaScript for Node.js is that you don't have to defensively code for things like Array.forEach()." -- Daniel Shaw. http://twitter.com/dshaw/status/14536181781
[04:27] <Phazm> man, I wish #redis was as active as #node.js
[04:27] <Phazm> I love you guys.
[04:28] digman543 has joined the channel
[04:31] <tmpvar> love you too
[04:31] <aaronblohowiak> <3 Phazm 
[04:31] <Phazm> <3
[04:31] <aaronblohowiak> i wish #v8 was active at all
[04:31] <aaronblohowiak> =(
[04:32] <tmpvar> i wish there were docs! i also wish creating a context in opengl was not platform specific
[04:32] <aaronblohowiak> tmpvar: use sdl
[04:32] <tmpvar> i could use glut..
[04:32] stevendavie has joined the channel
[04:32] <Phazm> tmpvar: use sdl or glut
[04:32] <Phazm> ACTION has no idea what he's talking about
[04:33] <tmpvar> but adding dependencies is sort of out of scope at the moment.  why can you not just alloc a buffer and call that a context?
[04:33] <tmpvar> ACTION shakes fists
[04:33] <aaronblohowiak> tmpvar: look at GLFW
[04:34] <aaronblohowiak> one of my dreams is to make a GLFW-backed text editor
[04:34] <JimBastard> red wizard needs cheesecake badly
[04:34] <aaronblohowiak> 3d code!!
[04:35] <aaronblohowiak> sloppy elephant needs some in & out.
[04:35] <tmpvar> aaronblohowiak, that looks interesting
[04:35] <aaronblohowiak> ( a burger place for you non-californians)
[04:35] <tmpvar> also arizonians
[04:36] <Phazm> aaronblohowiak: sloppy elephant?
[04:36] <tmpvar> aaronblohowiak, i hate glut, because you have to provide the glutInit() with unadulterated argv and argc
[04:37] <aaronblohowiak> tmpvar: glfwOpenWindow() is one line to get an opengl window
[04:39] <aaronblohowiak> Phazm: i thought we were doing adj/noun pairs to identify ourselves =/
[04:39] <Phazm> confused sloth understands now
[04:40] <Phazm> confused sloth is still confused in general, however
[04:41] <aaronblohowiak> sloppy elephant is going to get peanuts. bbiab
[04:42] <_announcer> Twitter: "#nodejs has a very nice looking documentation http://nodejs.org/api.html" -- Jose Pablo Barrantes. http://twitter.com/jpablobr/status/14537065062
[04:48] rtomayko has joined the channel
[04:48] _temp01 has joined the channel
[04:50] digman543 has joined the channel
[04:51] <aaronblohowiak__> node.js's docs are manually maintained ?
[04:51] <aaronblohowiak__> http://github.com/ry/node/blob/master/doc/api.markdown
[04:51] <tmpvar> yes
[04:52] <aaronblohowiak__> =/  what documentation systems are lazier people using?
[04:52] <tmpvar> Ryan is against auto-gen'd docs because they are generally awful 
[04:52] <tmpvar> heh, not sure
[04:52] <aho> i'm using YUI Doc
[04:52] <aho> it's ok
[04:52] <aho> (with a custom theme) :>
[04:53] <_announcer> Twitter: "weird-demo-proxy written in Node.js & working! I'm geeking out a bit.  Code & server output: http://gist.github.com/410647" -- Chris Ricca. http://twitter.com/ChrisRicca/status/14537557175
[04:55] rednul has joined the channel
[04:57] hdhoang has joined the channel
[05:00] sprsquish has joined the channel
[05:01] <tmpvar> aaronblohowiak__, thanks for the suggestion, i think im going to go the glfw route
[05:01] <aaronblohowiak__> tmpvar: it is not 64-bit clean
[05:01] <aaronblohowiak__> dunno if that matters to you =/
[05:01] <tmpvar> oh man.
[05:01] <tmpvar> now you tell me hah
[05:02] <aaronblohowiak__> i just found out as i was reading more about it
[05:02] <tmpvar> where'd you see that?
[05:03] <cloudhead> aaronblohowiak__: going through some of last night's log, could you give me a quick run-down on the inner/middle/outer idea, for middlewares?
[05:03] <aaronblohowiak__> tmpvar: http://www.glfw.org/faq.html
[05:03] <cloudhead> looking at your gist right now, and trying to figure out what the purpose of those are
[05:03] <aaronblohowiak__> cloudhead: that is a chain of three pipe processors
[05:04] <aaronblohowiak__> cloudhead: so one could regex replace curses with asterisks (inner), one could validate xhtml (middle) and one could gzip (outer)
[05:04] <aaronblohowiak__> the difference between the other fellow's approach and mine are summarized thusly:
[05:05] <cloudhead> aaronblohowiak__: so they are different 'types' of middleware
[05:05] <aaronblohowiak__> cloudhead: yea.
[05:05] <cloudhead> outer == outgoing, inner == in between, middle == incoming?
[05:06] <aaronblohowiak__> outer(middle(inner(source_stream)))
[05:06] <aaronblohowiak__> so each one processes the output of the one it wraps
[05:06] magcius has joined the channel
[05:07] <cloudhead> right, but do they get both incoming and outgoing req/res?
[05:07] <aaronblohowiak__> although the actual creation would be in the inverse order.
[05:07] <aaronblohowiak__> cloudhead: the example is just for outgoing.
[05:07] <cloudhead> oh ok
[05:07] <cloudhead> makes more sense now
[05:08] <aaronblohowiak__> you could do something similar for incoming, but that seems less useful to me.
[05:08] <aaronblohowiak__> the other fellow's idea was more of a way to intercept both incoming and outgoing
[05:08] <cloudhead> ah right
[05:08] <aaronblohowiak__> i find i usually do not want the middleware to sit on both sides of a pipe =)
[05:08] <cloudhead> yea, makes sense
[05:09] <aaronblohowiak__> okay, i am really going to get some late dinner now.
[05:09] <cloudhead> : |
[05:09] nsm has joined the channel
[05:09] <aaronblohowiak__> cloudhead: whats wrong?
[05:09] <cloudhead> later dinner
[05:09] <cloudhead> holding you up
[05:09] <cloudhead> late*
[05:09] <aaronblohowiak__> are you sfbay-local?
[05:10] <cloudhead> sadly not
[05:10] <cloudhead> am on the east-coast
[05:10] <aaronblohowiak__> whereabouts?
[05:10] <cloudhead> montreal, canada
[05:10] hdhoang has joined the channel
[05:10] <aaronblohowiak__> beautiful city
[05:10] <cloudhead> yes it is nice
[05:10] <aaronblohowiak__> and the women *.*
[05:11] <cloudhead> : >
[05:11] <cloudhead> no one believes me when I say that
[05:11] <aaronblohowiak__> then they havent been
[05:11] <cloudhead> yea
[05:12] wilmoore has joined the channel
[05:12] <aaronblohowiak__> the biggest difference about are approaches is that mine is less invasive, his is slightly more convienent
[05:13] <aaronblohowiak__> okay, burger time!
[05:13] <aaronblohowiakAF> ugh, i cant add afk to my name,
[05:13] <cloudhead> hah
[05:21] unomi has joined the channel
[05:31] digman543 has joined the channel
[05:31] <tmpvar> progress! got glfw building/linking with my addon
[05:32] <tmpvar> now more wrapping work. heh
[05:33] digman543 has left the channel
[05:34] DaNCeR has joined the channel
[05:34] <DaNCeR> hey guys i'm having some problems writing to a file
[05:35] <DaNCeR> getting a TypeError: Bad argument when calling fs.write
[05:35] <DaNCeR> any ideas?
[05:37] <tmpvar> show your code (paste/gist)
[05:37] [[zz]] has joined the channel
[05:38] <DaNCeR> i've created an issue on github
[05:38] <DaNCeR> http://github.com/ry/node/issuesearch?state=open&q=dancer#issue/157
[05:39] <tmpvar> not quite what i meant lol
[05:39] <DaNCeR> let me know if i forgot to put something in their
[05:39] <DaNCeR> its got all the relevant code in their
[05:39] <DaNCeR> i can copy it to a gist if yu prefer:p
[05:41] mikeal has joined the channel
[05:42] jedschmidt has joined the channel
[05:42] Casey has joined the channel
[05:43] darkf has joined the channel
[05:43] <Ned_> micheil: well, I played around with the development branch
[05:43] Casey has joined the channel
[05:43] <Ned_> I still have my browser disconnecting after exactly 2 minutes (and the server not noticing)
[05:43] CaseyH has joined the channel
[05:43] <Ned_> :-(
[05:43] <Ned_> 2 minutes sounds like some sort of timeout thing
[05:44] <CaseyH> Hello
[05:44] <Ned_> hello :-)
[05:46] <mikeal> i'm such a fuckin dork
[05:46] <mikeal> http://github.com/mikeal/node-nntp
[05:47] <Ned_> err, ?
[05:49] <tmpvar> DaNCeR, I duplicated.. your this.descriptor is invalid
[05:50] <tmpvar> DaNCeR, http://gist.github.com/410676
[05:50] <tmpvar> can you close that issue plz
[05:52] <DaNCeR> tmpvar: yeah sure, am i doing something wrong with fs.openSync?
[05:52] <tmpvar> nope
[05:52] <tmpvar> i think this.descriptor is your problem
[05:52] <tmpvar> more likely is the scope of "this"
[05:53] <tmpvar> definitely not a node issue
[05:53] <mikeal> damn
[05:53] <mikeal> commas in front rocks
[05:53] <tmpvar> lol
[05:53] <tmpvar> im not sold _yet_
[05:53] <mikeal> i really didn't like i at first
[05:53] Phazm has joined the channel
[05:53] <mikeal> but it's impossible to write sytax bugs
[05:53] <tmpvar> heh
[05:53] <mikeal> they stand out too strongly
[05:54] <tmpvar> ok, back to ogl
[05:54] <DaNCeR> tmpvar: fair enough. I'll have a play around with it. thanks for your help
[05:54] <tmpvar> np
[05:59] <tmpvar> np
[06:00] <tmpvar> wow.. alt-tab fail
[06:00] Yuffster has joined the channel
[06:04] <aaronblohowiak> np
[06:07] <aaronblohowiak> i wish script.runInNewContext could be used over a newtork =)
[06:07] <micheil> Ned_: oh?
[06:11] <micheil> Ned_: I need the build number.
[06:19] admc has joined the channel
[06:25] <aconbere> I'm a commas in front person myself
[06:25] <aconbere> carry over from places like haskell
[06:44] <_announcer> Twitter: "サーバーサイド JS は独自進化してる。クライアントサイド JS とだいぶ違う。少なくとも Node.js は CommonJS とは距離を取ってる感じがするし。" -- edvakf. http://twitter.com/edvakf/status/14542065508
[06:50] nsm has joined the channel
[06:55] <_announcer> Twitter: "CommonJS より Node.js のほうが楽しいです。非同期ラヴ。Ruby や Python で event driven なプログラムとか非同期 I/O とかやる気おきないです。JS は元々そういうふうに作られてるからいい。" -- edvakf. http://twitter.com/edvakf/status/14542464111
[06:55] <_announcer> Twitter: "RT $edvakf: CommonJS より Node.js のほうが楽しいです。非同期ラヴ。Ｒｕｂｙ や Python で event driven なプログラムとか非同期 I/O とかやる気おきないです。JS は元々そういうふうに作られてるからいい。" -- Rubyist Bot. http://twitter.com/rubyist_bot/status/14542464185
[07:05] <_announcer> Twitter: "Just tried out node.js. The hello world server has 2 MOTHERFUCKING SECONDS OF LATENCY. Tested on two boxes. I believe that's a fail." -- Karl Norby. http://twitter.com/knorby/status/14542835668
[07:06] <mscdex> wow
[07:13] charlesjolley has joined the channel
[07:15] <aaronblohowiak> wow
[07:17] bengl has joined the channel
[07:17] <DaNCeR> tmpvar: sorry to bother you but just wanted to check when you ran that code before was the buffer actually writing to the file because for some reason mine isn't still
[07:32] rictic has joined the channel
[07:37] <tmpvar> DaNCeR, yep! http://gist.github.com/410731
[07:39] <CaseyH> Do you guys have any special way of debugging Node apps? Or just sys.puts and whatnot?
[07:41] <aaronblohowiak> CaseyH - node-repl + lots of sys.puts(sys.inspect())
[07:41] <aaronblohowiak> sometimes i will use a custom setter on an object to trace a variable
[07:45] siculars has joined the channel
[07:46] jedschmidt has joined the channel
[07:49] Phazm has joined the channel
[07:50] zomgbie has joined the channel
[07:53] <tmpvar> CaseyH, you can use Eclipse + the v8 debugger plugin, or ndb which is more like gdb for node
[07:53] <tmpvar> but for quick stuff, sys.puts(sys.inspect(<object>, true)) works
[07:54] <tmpvar> ACTION ports a nehe tut to js :)
[07:54] <mape> ryah: Saw you fixed it but http://timeago.yarp.com/ is handy is the chat already uses jquery. Keeps it updated.
[07:55] <inimino> lol @ Karl Norby
[07:55] <mape> :/
[07:55] <inimino> (and yes, Karl, we are laughing *at* you)
[07:56] <inimino> anybody reply yet? :)
[07:56] <mape> yeh
[07:56] <mape> aaronblohowiak did
[07:57] <mape> It really should be changed to "hello world, 2 seconds later"
[07:57] <inimino> hehe
[07:58] <_announcer> Twitter: "@knorby, yo dude.. there is a setTimeout() in there :) #node.js" -- Elijah Insua. http://twitter.com/tmpvar/status/14544658756
[07:58] <tmpvar> :P
[07:58] <tmpvar> I'm in a *helpful* mood lol
[07:59] <mape> tmpvar: looked more at implementing the html5parser?
[07:59] <tmpvar> Aria has a branch that works with it :)
[07:59] <mape> oh really?
[07:59] <tmpvar> really
[07:59] <mape> url?
[08:00] <tmpvar> looking
[08:00] <inimino> needs more snark
[08:00] <tmpvar> http://github.com/aredridel/html5/blob/jsdom/JSDOM
[08:00] <tmpvar> er..
[08:00] <mape> .. :P
[08:01] <tmpvar> its in the jsdom branch apparently
[08:01] <tmpvar> but those are issues with getting it running natively (feel free to hax, heh)
[08:01] <mape> he has none though?
[08:01] <mape> fork of jsdom that is
[08:02] <tmpvar> wha?
[08:02] <tmpvar> who is mjjwright ?
[08:02] <tmpvar> oh
[08:04] <tmpvar> so i just spawned a window in linux with node
[08:04] <tmpvar> very happy
[08:05] binspace has joined the channel
[08:08] <aaronblohowiak> tmpvar: !!!?
[08:08] <tmpvar> yaas
[08:08] <_announcer> Twitter: "nehe tutorial #1 ported to js. #1 make it work, #2 auto-generate the same code #node.js" -- Elijah Insua. http://twitter.com/tmpvar/status/14545009362
[08:09] <_announcer> Twitter: "PS: The way I'm testing node.js request/response is to pass a dummy response object and do my asserts in the end() call." -- Chris Parsons. http://twitter.com/chrismdp/status/14545035408
[08:09] <tmpvar> ACTION closes twitter
[08:10] <aho> ACTION shuts down the internet
[08:12] <aaronblohowiak> bye tmpvar!
[08:13] <tmpvar> hacking :)
[08:13] <aaronblohowiak> oh, that kind of shutdown
[08:13] <tmpvar> auto generating a binding :)
[08:13] <tmpvar> yes
[08:13] <tmpvar> auto-generating an addon rather
[08:13] scudco has joined the channel
[08:16] jbrantly1 has left the channel
[08:17] bmizerany has joined the channel
[08:25] qFox has joined the channel
[08:31] <binspace> Hey, I'm looking to do queries using css selectors in node.js. Is nodejs-yui3 the only solution?
[08:32] <mape> binspace: tmpvar is working on jsdom which has jquery working. The html parser is not 100% right now but Aria is working on a html5 parser that is working good from what I can tell
[08:33] <tmpvar> you can also use sax-js or node-htmlparser to get from markup->dom
[08:33] <tmpvar> depends on what you need really
[08:34] <binspace> cool thx. Mainly I just want to parse xml and do queries on it.
[08:34] <binspace> nothing fancy
[08:34] <binspace> Ideally something like nokogiri for node
[08:36] <tmpvar> here is an example: http://github.com/tmpvar/jsdom/blob/master/example/jquery/run.js
[08:36] iwasbiggs has joined the channel
[08:36] <tmpvar> keep in mind, document.compareDocumentPosition() has not been implemented
[08:36] <unomi> whats wrong with nodejs-yui3?
[08:36] <tmpvar> so things like $("a span.test") wont work
[08:36] mscdex has joined the channel
[08:37] <tmpvar> nothing that im aware of ;)
[08:37] <binspace> aah ok. Nothing is wrong with it.
[08:37] <unomi> just wondering, thinking about picking it up soon, perhaps there were some issues with it
[08:39] <binspace> The thing that appears funky to me is you have to clone yui3 in nodejs-yui3/lib
[08:39] <binspace> at least that's what the README says
[08:39] <unomi> thats probably just to keep it up to date no?
[08:40] <unomi> rather than have to push a new nodejs-yui3 when yui3 updates
[08:40] <binspace> It is, however I would expect it to be treated as a separate library, not cloned into nodejs-yui3.
[08:40] <binspace> It would probably work if it were on the path...
[08:40] <unomi> mhhm, yeah would be nicer to be able to define a path for it
[08:41] <unomi> so you can use the same codebase to push to the user, if you do.
[08:41] <tmpvar> Dav went pretty quick with this
[08:41] <unomi> yeah
[08:41] <tmpvar> im sure he'd be open for suggestions
[08:42] <unomi> I think, though I am not sure, that yui is going to push nodejs pretty hard
[08:42] <unomi> they are putting their cdn stuff on it
[08:42] <tmpvar> i've heard some rumors as well
[08:42] <unomi> or atleast making it possible to host yui cdn from nodejs
[08:43] <tmpvar> yeah, they are definitely taking the torch
[08:43] <unomi> its a marriage made in heaven really
[08:43] <tmpvar> we'll see how much of it is opened up though
[08:43] <unomi> you can do really obnoxious javascript, but still push it as straight html if needed
[08:44] <unomi> dav had the calender example, where they render the javascript widget on the server
[08:44] <mscdex> lynx!
[08:44] <unomi> so you can accomodate say - low powered mobile devices
[08:44] <mscdex> node-lynx -- with javascript support! :-P
[08:44] <unomi> well, or just people who don't run JS for whatever reason
[08:44] <iwasbiggs> heathens 
[08:44] <tmpvar> unomi, im working on a resful example that ties into my talk :)
[08:45] <unomi> and you only have to maintain 1 codebase
[08:45] <tmpvar> exactly
[08:45] <tmpvar> thats the point :)
[08:45] <unomi> nod
[08:47] <_announcer> Twitter: "node.js to automagically generated ogl binding doesn't blow up, but it doesn't quite work.  http://bit.ly/9PPb1o" -- Elijah Insua. http://twitter.com/tmpvar/status/14546291924
[08:48] <_announcer> Twitter: "Playing with node.js and mongodb is fun. Feeling fresh and playful again" -- Lars Pind. http://twitter.com/larspind/status/14546336550
[09:01] mitkok has joined the channel
[09:12] ineation has joined the channel
[09:12] MattJ has joined the channel
[09:12] <_announcer> Twitter: "커피숍에서 된장질중.. ㅋㅋㅋ 안드로이드로 뭐 만들어봐야긴 하는데 전에같으면 이런시간에 열심히 만들어 봤겠지만 요즘은 굳이 개인시간에 회사일까지 하고 싶진 않다. node.js 포스팅 읽어보는 중..." -- Outsider. http://twitter.com/Outsider__/status/14547115088
[09:15] mfeiri_ has joined the channel
[09:26] hdhoang has joined the channel
[09:32] jedschmidt has joined the channel
[09:32] dridge has joined the channel
[09:35] N` has joined the channel
[09:40] hdhoang has joined the channel
[10:02] <_announcer> Twitter: "node.js 설치까지만 하고 집에 갈려고 했는데 make에서 먼가 오류가 났다. 집에가서 우분투에서 해보던가 해야겠다.. 미루고 미루던 머리를 깎아서 해서 이만 고고씽.. ㅋㅋ" -- Outsider. http://twitter.com/Outsider__/status/14548686688
[10:15] ctp has joined the channel
[10:20] hdhoang has joined the channel
[10:21] <_announcer> Twitter: "Python on Tornado is slower than JavaScript on Node.js.  A _LOT_ slower.  Time to switch back to Node.js." -- _bigwavejake. http://twitter.com/_bigwavejake/status/14549284796
[10:21] <mscdex> there's a quote worth saving :P
[10:21] <jedschmidt> sometimes i wonder how many people get a bad initial impression of node from the hello world app:
[10:21] <jedschmidt> http://twitter.com/knorby/status/14542835668
[10:21] <mscdex> yeah we saw that in here earlier
[10:21] <mscdex> heh
[10:22] <mape> Well, if he is a *nix admin and all around good programmer.. rtfc?
[10:22] <mscdex> some people don't think before they twitter ;-)
[10:22] <jedschmidt> funny how the main selling point of node.js is the main dealbreaker for the uninitiated.
[10:24] <jedschmidt> maybe the hello world should be a curl script that shows async streaming?
[10:25] <jedschmidt> aka, the same script, but executed on curl instead of a browser to show the updating response.
[10:29] <tmpvar> lol
[10:30] <tmpvar> "why does it take 2 seconds for my curl to work?"
[10:30] <tmpvar> same problem lol
[10:30] <tmpvar> maybe an ab script
[10:30] <jedschmidt> or instead of waiting 2 seconds, sending 1 character every 200ms?
[10:31] <mscdex> or how about the second message that's outputted instead say: "here is a message 2 seconds later." :P
[10:31] <tmpvar> i think that is missing the point, node is pretty hardcore and low level
[10:31] <tmpvar> HA
[10:31] <tmpvar> exactly
[10:31] <tmpvar> "by the way, this delay was caused by a setTimeout(), you can fix this by removing it"
[10:31] <mscdex> yeah
[10:31] <jedschmidt> or output "loading node..." first, heh.
[10:31] aaronblohowiak has joined the channel
[10:32] <tmpvar> im completely fine with it how it is lol
[10:32] <mape> Thoughts on http://npm.mape.me/ ?
[10:32] <mscdex> yeah, sorting doesn't work :P
[10:32] <jedschmidt> mape: it looks great, but it's too slow!
[10:33] <mape> jedschmidt: Well, yeah I have to fetch json for the list, then a request for each and every entry, and then one for github :P
[10:33] <mscdex> oh nevermind, the page was cached for me
[10:33] <mscdex> hehe
[10:33] <mape> When it is moved to native couchapp it should be far faster
[10:33] <tmpvar> couch, pft
[10:33] <tmpvar> mongo ftw
[10:33] <mape> oh and the latest-stable shouldn't stack
[10:33] <mape> Well you and micheil can fight that one
[10:34] <tmpvar> mape, looks pretty good
[10:34] <mape> and isaacs and mikeal can stick to couch ;)
[10:34] <tmpvar> sort of busy though heh
[10:34] <jedschmidt> mape: no, that lag is okay. it's all the styling that makes it impossible to scroll for me, i think.
[10:34] <mape> jedschmidt: Have you refreshed to clean the old css?
[10:34] <mape> Removed a lot of stuff and it isn't slow anymore for me
[10:34] <_announcer> Twitter: "Push my current node.js setup to github: http://bit.ly/9TO3tR ~ Blog post to follow." -- Chris Parsons. http://twitter.com/chrismdp/status/14549717932
[10:35] <mscdex> i noticed something: if a project description is longer than the available space, it gets cut off :S
[10:35] <jedschmidt> mape: oh, wow. night and day. it's very responsive now.
[10:35] <mape> Yeah chrome doesn't like inset box shadows
[10:36] <mape> mscdex: Hmm yeah, so it fits in the layout.. guess that can be fixed
[10:36] <mscdex> maybe have it wrap to the next line or something
[10:38] <mscdex> is search working?
[10:38] <mape> Nope
[10:38] <mscdex> okie
[10:38] <mape> Right now I'm just doing frontend, it will be hooked into backend later on
[10:39] <mscdex> cool
[10:39] <mscdex> keep up the good work
[10:39] <jedschmidt> mape: yeah, good stuff. really looking forward to getting a solid package manager.
[10:39] <mape> Is a github repo link/button interesting?
[10:47] tlrobinson has joined the channel
[10:47] ghou has joined the channel
[10:52] <_announcer> Twitter: "よし、夕飯食べたらnode.js を試してみよう。 http://nodejs.org/" -- Ryunosuke. http://twitter.com/tricknotes/status/14550291317
[10:54] <ghou> new to nodejs here, is it possible to get a return value from a callback?
[10:54] mfeiri_ has joined the channel
[10:55] <ghou> the examples i've seen so far for clientRequest always involves sys.puts in the callback method.. none about returning a value
[10:55] <mape> just assign it?
[10:56] <mape> var newString = functionThatReturnsAString();
[10:56] <mape> function functionThatReturnsAString(){ return 'hello'; }
[10:56] <mscdex> but a callback?
[10:57] <mape> Just pass it along?
[10:58] <mscdex> yeah but if you pass in a callback to say addListener, there's no way to get the return value when that callback is called?
[10:58] <mscdex> because it's async
[10:59] <aaronblohowiak> correct
[10:59] <aaronblohowiak> you can have it call something else
[10:59] <mscdex> yeah, that's what you'd have to do
[10:59] <micheil> I'd rather see the package repository moved to a standardised routing system, which is RESTful, all db backends can then interface with it
[10:59] <ghou> yup, i was referring to response.addListener
[11:00] <mscdex> yeah your best bet is to just call another function inside the callback
[11:00] <mscdex> or modifying a variable outside the callback
[11:01] <micheil> mape: ^^
[11:01] <mape> micheil: Isn't that what the couchapp does?
[11:01] zomgbie has joined the channel
[11:01] <ghou> mscdex: but then how to find out when that variable has been set by the callback?
[11:01] <micheil> mape: I'm not sure. 
[11:01] <micheil> mape: I'm just stating that as what we need.
[11:02] <micheil> because then repo's and package managers can be interchangeable
[11:02] <mape> Yeah I think that is the idea, that is is easy to replicate/mirror/interface with
[11:02] <micheil> (almost deb-list style)
[11:02] <mape> And the npm thingy is just a js repo
[11:02] <micheil> so, for instance, kiwi could talk and work with npm's repo
[11:02] <ghou> mscdex: my use case scenario is... i have a web service which returns an xml... my nodejs client sends a request to this web service, retrieving the xml, which will later be used by other apps..
[11:03] <ghou> mscdex: is there a way to make sync http client request? 
[11:03] <mape> ghou: perhaps look at something like Step?
[11:05] <ghou> mape: i tried googling nodejs Step, but not sure what you meant... any link?
[11:05] <mape> http://github.com/creationix/step
[11:05] <ghou> thank you
[11:08] <ghou> mape: does everyone use Step for use case scenario like mine? surely retrieving a response from a web service is a common scenario.. e.g. a nodejs twitter client.. 
[11:08] <aaronblohowiak> I AM GOING CRAZY
[11:08] <aaronblohowiak> :(
[11:09] <mape> ghou: Well Step is for doing stuff not blocking (async) but still needs to be done in order
[11:10] <aaronblohowiak> can i get a second set of eyes on some code?
[11:10] <mape> aaronblohowiak: pastebin :)
[11:11] <aaronblohowiak> http://github.com/aaronblohowiak/Push-It/blob/master/example/debug/client.js
[11:11] <aaronblohowiak> http://github.com/aaronblohowiak/Push-It/blob/master/example/debug/index.html
[11:11] <aaronblohowiak> why is PushIt() not defined in index.html
[11:12] <mape> Why not do window.PushIt = new PushIt() ?
[11:12] <mape> or well not new if new is done later on
[11:13] <mape> so just window.PushIt = PushIt;
[11:13] <mape> or return it
[11:13] <aaronblohowiak> mape: i am confused about why that would make a difference
[11:15] <mape> aaronblohowiak: var PushIt = (function(){ return 'share';})()
[11:15] <aaronblohowiak> why wouldnt the function defined in client.js not be available in index.html
[11:15] <iwasbiggs> could it be the pushit child.js script is not loaded until after the inline script is executed.
[11:16] <mape> Not really sure.. this should be window.. but have you verified that it is?
[11:16] <mape> iwasbiggs: script loading is blocking
[11:16] <aaronblohowiak> mape: i am calling 'new' on it, so it shouldnt be window
[11:17] <mape> aaronblohowiak: well this would be windows since that is where you want to put the origin PushIt? To make it global?
[11:17] <aaronblohowiak> yes.
[11:17] <aaronblohowiak> passing it window also breaks
[11:18] <aaronblohowiak> removing the whole wrapper makes no difference
[11:18] <ghou> mape: do promise/Do library be useful for getting return value from an async callback? (purely guessing)
[11:19] <mape> Well, I'd rather just do return PushIt; intead of global.PushIt = PushIt; and assign it through var PushIt = (function(){})()
[11:19] <mape> ghou: Isn't Do what he did before making Step?
[11:19] <mape> ghou: Do you have any code to share?
[11:20] <aaronblohowiak> oh my gosh. i am stupid.  my router wasnt loading client.js >(
[11:20] <ghou> mape: like this http://gist.github.com/233960 , in that gist, report() only sys.puts the result..
[11:20] <mape> .. hehe :P
[11:21] <mape> ghou: So what do you want to do with it?
[11:21] <ghou> mape: i would like to be able to return the result to the caller of read(), on that gist, at the end i would like something like var result = read(...)
[11:22] <mape> ghou: , of well that is not doable, you should use the callback for that
[11:22] <mape> Otherwise it would have to be blocking
[11:23] mfeiri_ has joined the channel
[11:23] <mape> What is the issue with using the callback rather then getting it straight from read?
[11:24] <ghou> mape: say if that piece of gist code becomes library X... i have X.read that retrieves some information.... an app wants to use X to retrieve that info... wouldn't X.read then have to return the info to the caller?
[11:24] derRichard has left the channel
[11:25] <ghou> mape: i'm still trying to get my head around the way things are done in nodejs.. very likely my way of thinking is off base
[11:26] zomgbie has joined the channel
[11:26] <mape> It would return the data to the callback you supplied to read
[11:27] <mape> So if you want to bring it back just have a function in the callback that brings back the information returned from read
[11:27] <_announcer> Twitter: "Blogging: How to TDD your node.js app http://bit.ly/aOWXUr" -- Chris Parsons. http://twitter.com/chrismdp/status/14551484337
[11:33] MattJ has joined the channel
[11:34] rolfb has joined the channel
[11:38] <_announcer> Twitter: "New Eden staff post: How to TDD your node.js app http://bit.ly/amEXI5" -- Eden Development. http://twitter.com/edendevelopment/status/14551906909
[11:42] dridge has joined the channel
[11:48] zomgbie has joined the channel
[11:51] mfeiri_ has joined the channel
[11:52] olegp has joined the channel
[12:02] mertimor has joined the channel
[12:09] jedschmidt has joined the channel
[12:31] harryv has left the channel
[12:31] mjijackson has joined the channel
[12:43] mertimor has joined the channel
[12:45] voxpelli-laptop has joined the channel
[12:46] inimino has joined the channel
[12:47] krishna has joined the channel
[12:47] exlt has joined the channel
[12:49] mrd` has joined the channel
[12:56] rnewson has joined the channel
[12:59] kriszyp has joined the channel
[13:01] felixge has joined the channel
[13:05] hellp has joined the channel
[13:07] jedschmidt has joined the channel
[13:17] <mscdex> i need a new node project
[13:20] <_announcer> Twitter: "How to TDD your node.js app http://bit.ly/bcPttN" -- hkrnws. http://twitter.com/hkrnws/status/14556033663
[13:20] <_announcer> Twitter: "How to TDD your node.js app: http://bit.ly/cZKlOT Comments: http://bit.ly/dfMqi8" -- Hacker News. http://twitter.com/HNTweets/status/14556033856
[13:24] <_announcer> Twitter: "How to TDD your node.js app: http: Comments: http:" -- YC Hacker News. http://twitter.com/YCHackerNews/status/14556236803
[13:27] OSInet has joined the channel
[13:28] OSInet has left the channel
[13:28] <_announcer> Twitter: "How to TDD your node.js app - http://su.pr/AlCoog" -- kicauan. http://twitter.com/kicauan/status/14556440090
[13:29] <micheil> just for good measure, here's another one.
[13:30] <micheil> maybe.
[13:32] <_announcer> Twitter: "How to TDD your node.js app http://bit.ly/aQ30dk" -- hnquestions. http://twitter.com/hnquestions/status/14556588410
[13:32] Pilate has joined the channel
[13:32] <mscdex> heh
[13:34] <mscdex> maushu ought to at least cache the last tweet and check for following duplicate tweets
[13:35] felixge has joined the channel
[13:46] zomgbie has joined the channel
[13:49] <micheil> or just cache all tweets and check for dups
[13:49] <_announcer> Twitter: "I wonder when node.js will get an official package manager. There's a handful of them now." -- Chris Jaure. http://twitter.com/chrisjaure/status/14557432990
[13:51] SubStack has joined the channel
[13:52] <mscdex> well caching all tweets is a bit much, maybe the last x tweets though
[13:52] <mape> bit much? Can't be more then a couple hundreds tweets per day tops?
[13:54] <_announcer> Twitter: "@aki_xavier 我决意用nodejs来重写我的网站。还有就是有时间咱们稿个nodejs的fastcgi服务器咋样？" -- 北京老张. http://twitter.com/ikarienator/status/14557673709
[13:59] <mscdex> maybe he could add automatic translation to English too :P
[14:08] stepheneb_ has joined the channel
[14:09] kriszyp_ has joined the channel
[14:12] <_announcer> Twitter: "How to TDD your node.js app http://ff.im/kNh54" -- antest. http://twitter.com/antest/status/14558578963
[14:14] dridge has joined the channel
[14:27] MattJ has joined the channel
[14:29] sprsquish has joined the channel
[14:33] jedschmidt has joined the channel
[14:46] <_announcer> Twitter: "node.js、ちょっと楽しいかもしれない。http://d.hatena.ne.jp/tricknotes/20100523/p1" -- Ryunosuke. http://twitter.com/tricknotes/status/14560393003
[14:46] Dennus has joined the channel
[14:46] <_announcer> Twitter: "http://bit.ly/b9VEQK is this the best way to tdd node.js? @voodootikigod @technoweenie" -- Giles. http://twitter.com/gilesgoatboy/status/14560401930
[14:50] polo has joined the channel
[14:52] rmurphey has joined the channel
[14:53] <polo> I'm trying the "production" mode in express but it crashes!
[14:53] arlolra has joined the channel
[14:53] <polo> No such file or directory 'undefined/views/home.html.haml'
[14:53] <polo> it seems the set("root", __dirname) is not working
[14:54] <polo> if if print it it returns undefined
[14:54] <polo> but it was not a problem in development mode
[14:54] kjeldahl has joined the channel
[14:55] <polo> what am I doing wrong ?
[14:56] <polo> here is where I call configure if you wanna check : http://github.com/Tug/express-chat/blob/master/app.js
[14:56] ineation has joined the channel
[14:59] stevendavie has joined the channel
[15:06] polo has left the channel
[15:19] polo has joined the channel
[15:19] polo has joined the channel
[15:31] <_announcer> Twitter: "@DanielleMORRILL heading up to New Haven for a family event today, but there in spirit:  playing with Node.js on the train. :)" -- Chris Ricca. http://twitter.com/ChrisRicca/status/14562914079
[15:52] maushu has joined the channel
[15:54] <maushu> !so-last
[15:54] <_announcer> Last Question: "How do i close a socket after a timeout in node.js?" by rramsden. http://stackoverflow.com/questions/2886191
[15:54] <maushu> bah
[15:55] pgriess has joined the channel
[15:57] micheil_mbp has joined the channel
[15:58] <maushu> Twitter: "Just tried out node.js. The hello world server has 2 MOTHERFUCKING SECONDS OF LATENCY. Tested on two boxes. I believe that's a fail." -- Karl Norby. http://twitter.com/knorby/status/14542835668
[15:58] <maushu> oh lol.
[15:58] cloudhead has joined the channel
[15:58] micheil has joined the channel
[16:00] <_announcer> Twitter: "@knorby Oh lol. Have you noticed that the 2 seconds are on purpose? It demonstrates node.js async. Try removing the setTimeout." -- Graphnode. http://twitter.com/graphnode/status/14564492147
[16:01] <_announcer> Twitter: "@ryah Please, please tell me you'll be at @jsconeu. I can't thank you enough of the awesomeness that is @nodejs." -- Ⓙohannes Ⓕahrenkrug. http://twitter.com/jfahrenkrug/status/14564540474
[16:01] jan____ has joined the channel
[16:02] <_announcer> Twitter: "Cappuccino + node.js  + CouchDB의 조합은 상당한 결과물을 만들어냅니다. 다만 ObjC를 배워야해서 문제죠 =__=" -- A.J. http://twitter.com/andrwj/status/14564642657
[16:03] <maushu> God dammit.
[16:03] smtlaissezfaire has joined the channel
[16:07] <maushu> Oh goddammit that half assed "how to TDD node.js"
[16:08] <maushu> What am I supposed to do?! They all the same thing and have different links! Damn spammers.
[16:09] <maushu> Well at least I have alot of test targets.
[16:12] <micheil> sorry, but this really needed to be said: http://twitter.com/miksago/status/14565123943
[16:12] <micheil> (in response to that knorby person)
[16:12] <mape> micheil: He already got an answer like 6h ago?
[16:12] <micheil> oh
[16:12] <micheil> oh well.
[16:13] <mape> 9h really
[16:13] <mape> and another 13min ago
[16:13] <mape> and then yours
[16:13] <mape> Oh and one 8h ago as well
[16:13] <micheil> haha, oh well.
[16:15] <maushu> OK, it seems using google api on the server side will be harder than I thought.
[16:15] <mape> google api for what?
[16:16] smtlaissezfaire has joined the channel
[16:17] <maushu> language
[16:17] <mape> oh k
[16:17] TobiasFar has joined the channel
[16:19] mfeiri_ has joined the channel
[16:19] alex-desktop_ has joined the channel
[16:20] mrjjwright has joined the channel
[16:23] felixge has joined the channel
[16:31] <maushu> Oh man, I'm feeling lazy.
[16:34] joshbuddy has joined the channel
[16:38] mertimor has joined the channel
[16:38] hellp has joined the channel
[16:44] softdrink has joined the channel
[16:48] xn-1L1a has joined the channel
[16:53] <_announcer> Twitter: "Quick attempt to build #nodejs on #openbsd yields immediate error (syntax intptr_t unrecognized).  Thwarts my immediate plans. #fail" -- Jay Nelson. http://twitter.com/duomark/status/14567192192
[16:53] mscdex has joined the channel
[17:01] stevendavie has joined the channel
[17:01] Aria has joined the channel
[17:11] <mscdex> maushu: why is using google translation api hard on the server side?
[17:11] <mscdex> it's just a get request
[17:11] <maushu> It was made for ajax. 
[17:12] <maushu> I'm currently sniffing the messages ht
[17:12] <maushu> that are sent.
[17:12] <mscdex> http://ajax.googleapis.com/ajax/services/language/translate?v=1.0&q=hello%20world&langpair=en|it
[17:12] <mscdex> just change the q and langpair variables
[17:12] <mscdex> returns json
[17:13] <mscdex> :)
[17:13] <mape> Super simple
[17:13] <maushu> ...why can't I find anything like that in the docs?
[17:13] <mscdex> a lot (if not all) google apis have simple requests available for non-javascript apps
[17:14] <mscdex> http://code.google.com/intl/xx-elmer/apis/ajaxlanguage/documentation/
[17:14] <mscdex> "Flash and other Non-Javascript environments"
[17:16] <maushu> Ah.
[17:20] <_announcer> Twitter: "@duomark come on irc (#node.js) and i'll help you get it built on openbsd. sounds maybe easy to fix." -- Ryan Dahl. http://twitter.com/ryah/status/14568518136
[17:22] JimBastard has joined the channel
[17:23] Ori_P has joined the channel
[17:25] sechrist has joined the channel
[17:25] Dennus has joined the channel
[17:25] sechrist has left the channel
[17:25] sechrist has joined the channel
[17:25] alexiskander has joined the channel
[17:27] mscdex has joined the channel
[17:32] ako has joined the channel
[17:32] <JimBastard> the four disciplines of javascript-fu : isFu - the art of type checking, toFu - the art of monkey punching, getFu - the art of the swift getter, formatFu - the art of format masking
[17:32] <JimBastard> :-D
[17:33] <JimBastard> this little lib is coming along
[17:37] <sechrist> hmm
[17:37] <sechrist> noice
[17:37] siculars has joined the channel
[17:38] <sechrist> can jsdom parse existing html? I've only seen it used to create html, and examples and slim pickins
[17:39] <sechrist> I guess it just users node-htmlparser
[17:39] <sechrist> *shrug*
[17:41] <Aria> Yeah, for the moment.
[17:42] <Aria> But I got the HTML5 parser working with jsdom on Thursday.
[17:42] <Aria> There's a branch of it for now, I'll tidy up and make a release soon
[17:42] <Aria> (but it works out of git)
[17:43] dridge has joined the channel
[17:44] <mscdex> hmm, i can't get node to compile on openbsd either.... different error though
[17:44] <mscdex> well libeio specifically
[17:45] <Aria> I get that one -- OpenBSD 4.5
[17:45] <Aria> It's because it needs stdint.h included in eio.c
[17:45] <mscdex> ah
[17:45] <Aria> I get an error in ares though
[17:47] <JimBastard> whats up with CI in node?
[17:47] <JimBastard> the custom build script ive been using is slowly starting to turn into a CI
[17:48] <JimBastard> tests, bundle, docs
[17:48] <Aria> CI?
[17:48] <JimBastard> continuous integration 
[17:48] <Aria> Oh! Never looked.
[17:48] <Aria> I've not seen anything out there though
[17:48] <Aria> And it lends itself to CI, being event-driven...
[17:49] <JimBastard> i think im just gonna keep rolling this custom build script in my projects
[17:49] <JimBastard> see where it goes
[17:49] <JimBastard> having a custom CI is way pimper anyway
[17:50] <JimBastard> node build.js => run tests => run bundle => generate docs => push to github
[17:50] <JimBastard> all in one step
[17:50] skampler has left the channel
[17:51] <Aria> Yeah.
[17:51] pgriess has joined the channel
[17:52] <JimBastard> wheres the blog post about install node on a mac os machine that needs gcc
[17:52] <JimBastard> i cant find it, my friend trying to install
[17:53] <Aria> "install XCode" ?
[17:53] <JimBastard> will that word
[17:54] <jwm> hehe
[17:54] <jwm> yeah you have to install Xcode
[17:54] <jwm> or I guess you could install through macports
[17:54] <jwm> but Xcode is simpler
[17:55] <JimBastard> http://developer.apple.com/technologies/xcode.html ?
[17:55] <JimBastard> yeah
[17:55] <jwm> they can download it or it even comes on the cd with macos
[17:55] <jwm> downloading is more up to date but mac update will update whatever they have
[17:55] <jwm> heh
[17:57] <JimBastard> yeah hes on it
[18:09] <sechrist> hmm okay, node-htmlparser works but I'm having trouble finding any documentation about how to load html and get a dom representation out of it
[18:09] <sechrist> that I can traverse like a browser
[18:10] <sechrist> I have a fat array tree of objects
[18:11] <JimBastard> yeah sechrist 
[18:11] <JimBastard> are you using jsdom?
[18:12] <sechrist> I have jsdom, but I have no idea how to interface the two
[18:12] <JimBastard> there are examples in the jsom lib
[18:12] <JimBastard> its a bit hard to get started
[18:12] <JimBastard> but ive seen it work, i swear
[18:12] <JimBastard> :-)
[18:12] <Aria> Hehe. 
[18:12] <Aria> The HTML5 parser works, now, folks.
[18:12] <Aria> http://github.com/aredridel/html5/
[18:13] <Aria> Grab the JSDOM branch and I can help you make it work
[18:13] joshbuddy has left the channel
[18:13] <jwm> Aria: got any plans for using it?
[18:13] <Aria> Greasemonkey-as-proxy among other things.
[18:13] <sechrist> Aria: alright cool
[18:13] <sechrist> btw if there like a method to organizing all of these libraries?
[18:13] <Aria> (Beware of encoding issues right now, but it should work for utf-8 with no trouble.)
[18:14] <sechrist> I've been git cloning and copying all of the js files into ~/.node_libraries
[18:14] <sechrist> no subdirs :\
[18:14] <Aria> That's how I set mine up. Copy the contents of lib/ into ~/.node_libraries
[18:14] <sechrist> collisions though
[18:14] <Aria> And I'm trying not to step on any existing names.
[18:14] <sechrist> ah okay so I'm not crazy
[18:14] <Aria> (Ultimately, I think, people should just play nice with others and choose good names)
[18:14] <sechrist> or require looks for a index.js or something in subdirs under that title
[18:14] <Aria> (And any package manager that exists should just do the same, and flag collisions so that first in wins, rather than last in)
[18:15] <Aria> Heh. That sounds like pain.
[18:15] <Aria> I'd rather keep it simple. It works for C programmers.
[18:15] <Aria> /usr/include/ + uniquename
[18:15] <Aria> If you really want to get fancy, put the version number in your library.
[18:16] <sechrist> okay so all I have to do is check out your html5?
[18:16] <sechrist> deps?
[18:16] <mape> Aria: I prefer git clone in .node_libraries and symlinking the .js into the .node_lib*** root
[18:16] <Aria> only jsdom as deps
[18:16] <mape> that way I can get pull without having to copy/move stuff around
[18:16] <jwm> greasemonkey as proxy
[18:16] <jwm> what would that be good for?
[18:16] smtlaissezfaire has joined the channel
[18:17] <jwm> one sec
[18:17] <mape> Aria: you mean proxy like glimmerblocker?
[18:17] <sechrist> testrunner hmm
[18:17] <Aria> Never heard of glimmerblocker. I was thinking.
[18:17] <jwm> ahh ok
[18:18] <jwm> hmm
[18:18] <jwm> I just thought of a good idea
[18:18] <jwm> good/bad idea
[18:18] <jwm> hehe
[18:18] <Aria> Hehe
[18:19] <mape> Aria: glimmerblocker is a http proxy for OSX where you can insert/filter/alter pages based on regex and whatnot. And it has ad blocking built in.
[18:19] DennusB has joined the channel
[18:19] <jwm> I just thought of the opposite
[18:19] <jwm> glimmeradder
[18:19] <jwm> lol
[18:19] <sechrist> aria: is the testrunner part of yui?
[18:19] <sechrist> I don't have it
[18:19] <Aria> Nope.
[18:19] <jwm> add ads to pages to get paid for viewing them
[18:19] <Aria> That's node-testrunner
[18:19] <mape> So you don't even have to waste time on rendering ads and then removing it using greasemonkey, it just nevers gets through to the browser. Plus you can insert css/js straight into the source which is faster
[18:20] <sechrist> http://wiki.github.com/caolan/node-testrunner/
[18:20] <sechrist> no existo
[18:20] keeto_ has joined the channel
[18:22] <sechrist> ah
[18:22] <sechrist> it's nodeunit now
[18:22] <jwm> how do you use glimmerblocker on ssl sites?
[18:22] <jwm> hehe
[18:22] mrjjwright has joined the channel
[18:22] <mape> jwm: it doesn't :(
[18:22] <mape> That is the only issue
[18:22] <jwm> yeah
[18:23] <mape> Oh and the one thing I need from greasemonkey is crossdomain ajax
[18:23] <mape> on certain sites I enhanced
[18:23] <jwm> really you could do it if your browser let your proxy negotiate the ssl for you
[18:23] <jwm> ssl proxy trust browser plugin would be cool
[18:23] hdhoang has joined the channel
[18:23] <jwm> hehe
[18:24] <jwm> encrypt traffic browser <-> proxy and proxy <-> ssl site
[18:25] <_announcer> Twitter: "Thanks @aredridel and @ryah for #openbsd tips on #nodejs, but I can't focus on it right now -- family day." -- Jay Nelson. http://twitter.com/duomark/status/14571587151
[18:27] <Aria> Yep. That's kinda among my plans.
[18:28] matthew_y has joined the channel
[18:30] rtomayko has joined the channel
[18:34] arlolra has joined the channel
[18:34] <mape> Aria: so with your jsdom is jquery functional?
[18:34] <_announcer> Twitter: "Damn V8 doesn't compile on x64 FreeBSD. Something's broken in new versions. Reverting to older #nodejs revs hoping it will build.." -- myfreeweb. http://twitter.com/myfreeweb_en/status/14572036047
[18:34] <_announcer> Twitter: "Чертов V8 не компилится под FreeBSD x64. Что-то там наломали в новых версиях. Откатываюсь на старые ревизии node.js в надежде, что соберется" -- myfreeweb. http://twitter.com/myfreeweb/status/14572036590
[18:35] <Aria> mape: Yes it is, though I haven't plumbed it into innerHTML in jsdom yet. It does, however, parse into a jsdom-supplied DOM
[18:35] <Aria> (shouldn't be hard to do, though. I have all the infrastructure in place)
[18:35] <mape> Hmm k
[18:36] <mape> Was looking at perhaps doing some parsing for all the modules in github related to node so the package.json sprint could be more efficent
[18:38] <Aria> Nice.
[18:38] <Aria> Shouldn't be too hard to do
[18:40] <mape> I'll start doing some boilerplaye code and I'll hook it up when something works with jQuery/html-parse thingy
[18:40] hdhoang has left the channel
[18:40] <Aria> Hehe. Okeye.
[18:44] charlesjolley has joined the channel
[18:46] binary42 has joined the channel
[18:47] <JimBastard> sup binary42 
[18:47] <binary42> JimBastard: Yo. Just going through all my goruco pictures and video.
[18:48] <binary42> Post goruco headache too but not bad considering some of those shots... you'll have to crash the after party next year.
[18:48] <JimBastard> cool beans, i could have sworn i saw a bus driving through manhattan last night that was blasting spanish party music with a google banner on the back
[18:48] <JimBastard> i might have been tripping though
[18:48] <binary42> Also... voodootikigod's talk was awesome.
[18:48] <binary42> lol.
[18:48] <JimBastard> we are doing some coding here today if you wanna come by
[18:49] <binary42> Hmmm. I need to edit these party video interviews now or I never will get to it.
[18:49] CaseyH has joined the channel
[18:50] <JimBastard> got ya
[18:50] <JimBastard> charlie keeps farting anyway
[18:50] <binary42> I'll think I'll let him finish... and maybe show up later but I think, if the sky doesn't give me rain later, I'll be out doing some architectural photos.
[18:51] <binary42> Got a nice camera rental that I want to use since I return it tomorrow morning.
[18:51] mitkok has joined the channel
[18:57] stevendavie has joined the channel
[18:58] <mattly> binary42: oooh what
[18:58] <mattly> binary42: and how are you liking your 7D?
[18:59] <binary42> a 5D Mk II rental. 
[18:59] <mattly> oh
[18:59] <binary42> I love my 7D.
[18:59] <mattly> heh
[18:59] <mattly> yeah i'm considering selling my fuji s5 and getting a 3d myself
[18:59] <binary42> I actually like my 7D better than the 5D in every way except it's amazing sensor.
[18:59] <binary42> 5D just kills.
[18:59] <binary42> Did some dark light video interviews at the after party last night.
[19:00] <mattly> oh?
[19:00] <mattly> one of my housemates has a 5d
[19:00] <mattly> er did i say 3d above? i meant 5dmk2
[19:00] <binary42> The mark II is good stuff. My 7D does nice video too but the noise in the dark is still visible.
[19:00] <mattly> ah
[19:00] <binary42> :-)
[19:00] <mattly> i'm interested in the full-frame
[19:00] <mattly> personally
[19:01] <binary42> Yeah. I want to buy one but I feel like the 5D is inferior in every other way right now so I hope they refresh soon... then I'll buy.
[19:01] <mattly> hm
[19:01] <mattly> what do you like better about the 7d?
[19:02] <_announcer> Twitter: "Heh. I didn't read that #node.js example to closely. I guess that is what I get for trying stuff out at early morning hours. #hackathon" -- Karl Norby. http://twitter.com/knorby/status/14573274916
[19:03] <binary42> mattly: It's better button layout, viewfinder is much better, easier access to custom settings for control freaks like me, tougher build, better ergonomics, much much better autofocus, faster shooting, quieter, better pixel density when it matters, etc...
[19:03] <mattly> huh
[19:04] <binary42> mattly: I think they are both awesome but the 5D wins in only one thing. The full frame sensor is awesome.
[19:04] <mattly> i'm a sucker for good color though
[19:04] <mattly> and the 5d just kicks out some amazing color
[19:04] <binary42> The problem there is the 5D's Av and Tv modes kind of suck sometimes... and manual settings on it are hard to tweak w/o going into menus a lot.
[19:05] <mattly> hm
[19:05] <binary42> 7D's got much improved heuristics or something.
[19:05] <binary42> Just noting from last night.
[19:05] <cloudhead> isaacs: what's the rationale behind not activating more recent & stable versions of packages when installing?
[19:05] <binary42> mattly: 7D is more forgiving I should say I guess.
[19:06] <mattly> certainly something to think about
[19:06] <mattly> especially considering the $1k price difference
[19:07] <binary42> Yeah... well I figured I'd keep the 7D as my main until a better full frame release came.
[19:07] <mattly> that'd soften the blow of switching for me
[19:07] <binary42> Rumors are saying early 2011 which is about average for canon's cycles.
[19:07] <binary42> What do you use now?
[19:07] <mattly> i have a fujifilm s5
[19:08] <mattly> which is in a nikon D200 body
[19:08] <binary42> Cool.
[19:08] <mattly> it kicks out some amazing color
[19:08] <binary42> Yeah. definitely.
[19:09] <binary42> I end up having to mess with color later a lot anyway only for the fact of making prints or such since CMYK kind of sucks.
[19:09] <mattly> heh
[19:09] <mattly> I only really have three lenses anyway
[19:09] <mattly> but I'd have to reaquire them
[19:10] <binary42> primes?
[19:10] <mattly> actually i could probably sell the lenses and the camera for the cost of a 7d
[19:10] <mattly> i have the sigma 30mm 1.4 prime
[19:11] <mattly> the nikon 18-200 VR, which is actually a really good lens for what it is but i never use it
[19:11] <mattly> and a lensbaby composer
[19:11] <binary42> That sigma is great. I've thought of getting a lensbaby kit too.
[19:11] vnguyen has joined the channel
[19:12] <mattly> the lensbaby is a lot of fun: http://www.flickr.com/photos/mly/tags/lensbaby/
[19:12] <binary42> I have been massively abusing my new 17mm tilt-shift prime though. Lots are architecture and city scenes.
[19:12] <mattly> oh god
[19:12] <mattly> i want to ask how much that set you back
[19:12] <mattly> but i don't really want to know
[19:13] <binary42> Lots. Second most expensive lens I own and it costs as more than my 7D.
[19:13] <binary42> ;-)
[19:13] <mattly> hhahaha
[19:13] <mscdex> woot! got node compiling on openbsd
[19:13] <mattly> shit what's the most expensive lens?
[19:13] <binary42> 70-200
[19:13] <binary42> It's freaking amazing. I use it for all my conf shooting.
[19:14] <binary42> http://www.dpreview.com/lensreviews/canon_70-200_2p8_is_usm_ii_c16/
[19:14] <binary42> Got it the week it came out after I saw it in action.
[19:14] <mattly> holy shit
[19:14] <binary42> It gave me a new standard for IQ.
[19:14] <mape> Hmm any RoR people here?
[19:14] <binary42> mape: RoR? I do ruby but not really rails.
[19:15] <mattly> mape: trying to get out of doing rails stuff, and finding it hard
[19:15] <mape> I'm trying to do a $.ajax through the console in firebug but I'm getting "406 Not Acceptable"
[19:16] <mattly> mape: are you sending the "_method" parameter along with?
[19:16] <mattly> when rails generates a 406 it's usually for one of two reasons:
[19:16] <mape> and if I add xhr.setRequestHeader("Accept", "text/html, */*"); I get empty 200 call
[19:16] <mape> hmm no?
[19:16] <mattly> either you're using the wrong request method
[19:16] <mattly> or you forgot the authentication_token parameter
[19:16] technoweenie has joined the channel
[19:17] <mape> hmm k
[19:17] <mape> So I need to pass some cookie value with the ajax call?
[19:17] <mattly> prolly
[19:17] <mattly> binary42: ok so thanks for getting me thinking about the 7d
[19:17] <mape> Hmm that is a pain :/
[19:17] <mattly> I can put that extra K towards lenses :D
[19:18] <binary42> mattly: Let me know if you have questions. I definitely agree on the investment in glass over sensors right now.
[19:18] <mape> mattly: Any idea what generic names of that cookie might be? (I'm doing this on github)
[19:18] <mattly> mape: sorry man
[19:18] <mape> no worrys
[19:19] <mattly> binary42: cool; what's your email? I don't see you around on irc that much, and you're still not back on twitter yet
[19:19] <mape> Meh, github doesn't even have jsonp api 
[19:19] <binary42> mattly: Yeah. I've been out shooting lots last week. Try brian@streampunks.com.
[19:19] <technoweenie> mape: whats a jsonp api
[19:19] <mattly> thanks
[19:20] <mape> technoweenie: Well what I mean is that it reponds with jsonp
[19:20] <technoweenie> whats jsonp
[19:21] <JimBastard> really?
[19:21] <technoweenie> is that where you wrap a json request in a function call
[19:21] <mape> Are you ironic?
[19:21] <JimBastard> yeah
[19:21] admc has joined the channel
[19:21] <JimBastard> you wrap it in a unique name so it has scope
[19:21] <JimBastard> err
[19:21] <technoweenie> curl http://github.com/api/v2/json/user/show/mape\?callback\=jsonpftw -i
[19:21] <JimBastard> context
[19:21] <JimBastard> caus you can only embed script tags to bypass same-origin
[19:21] <JimBastard> but the script tag has onload, but no context
[19:22] <technoweenie> just making sure what i thought a jsonp request was what everyone else thought a jsonp request was
[19:22] <mape> technoweenie: Huh that doesn't work?
[19:22] <technoweenie> works for me
[19:22] <technoweenie> my shell escapes teh ? and = though
[19:22] <mape> oh it does..
[19:22] <mape> well.. thanks.. :P
[19:23] <technoweenie> thanks for the nice, non patronizing answers
[19:23] <mape> Sorry, I though you were being sarcastic, hard to tell on the netz
[19:24] <technoweenie> heh i was trying to be very straightforward
[19:24] tmpvar has joined the channel
[19:24] <tmpvar> what up
[19:24] <technoweenie> i had no idea that was jsonp til a week ago
[19:25] saikat` has joined the channel
[19:25] <_announcer> Twitter: "proof: http://tmpvar.com/node-ogl-triangle.png #node.js" -- Elijah Insua. http://twitter.com/tmpvar/status/14574338136
[19:26] <sechrist> oh my
[19:26] <sechrist> I was waiting for somebody to say opengl
[19:26] <tmpvar> how sick is that ^_^
[19:26] <sechrist> pretty sick
[19:26] <mscdex> hmmm, now v8 won't build :S
[19:27] <mscdex> i got a kick out of this error though: "confused by earlier errors, bailing out" :P
[19:27] <tmpvar> heh
[19:27] <tmpvar> llvm ftw
[19:27] <tmpvar> or clang rather
[19:28] <technoweenie> hey mattly are youc oming to the potluck
[19:28] <sechrist> tmpvar: can't wait for node-pacman and node-quake :P
[19:29] <mscdex> node-wolf3d then node-doom then node-quake
[19:29] <mscdex> :P
[19:29] <sechrist> true that
[19:30] <sechrist> well we already have a working nes emulator in javascript
[19:30] <sechrist> drop it into node
[19:30] <sechrist> convert the canvas calls to ogl
[19:30] <sechrist> boom node-nes
[19:30] <sechrist> after the binding is thorough enough :)
[19:30] <mscdex> rewrite that one process manager with node-doom hehe
[19:31] <mscdex> killing monsters kills processes
[19:31] <mscdex> :P
[19:31] <sechrist> hah!
[19:31] <smtlaissezfaire> technoweenie: Missed you at goruco yesterday.  I saw courtney there
[19:31] <sechrist> we need udp for real netcode though
[19:31] <technoweenie> i dont work for him
[19:31] <smtlaissezfaire> I know.  I thought you guys had remained friends :)
[19:32] <technoweenie> hah, does he hate me now?
[19:32] <tmpvar> correct, we do need a canvas impl
[19:32] <tmpvar> build in pure js :)
[19:32] <mattly> technoweenie: yeah when are we starting?
[19:32] <tmpvar> hardware accelerated via node-ogl :)
[19:32] <sechrist> cross paradigm games
[19:32] <smtlaissezfaire> technoweenie: I didn't even say hi to him.  I doubt he knows who I am.
[19:32] <sechrist> not just cross platform
[19:32] <technoweenie> mattly: i think around 6 at the office
[19:32] <mattly> ACTION re-reads the email
[19:32] <tmpvar> that is actually on my list as "next"
[19:33] <tmpvar> then ill render html in it just for the fun of it
[19:33] <tmpvar> lol
[19:33] <sechrist> node-webkit
[19:33] <technoweenie> smtlaissezfaire: ahh.  well we're not conf buddies, but we're still friends i think?  
[19:33] <mattly> technoweenie: yeah will totally be there
[19:33] <sechrist> oh what the hell
[19:33] <sechrist> node-linux
[19:33] <technoweenie> our main interaction was over work campfire so we dont talk much :)
[19:33] <mattly> gotta figure out what i'm bringing
[19:33] <tmpvar> sechrist, haha, sure.. i have some ideas
[19:33] <technoweenie> i have some potato salad and potstickers
[19:34] <smtlaissezfaire> technoweenie:  Interesting.  Distributed teams are always weird to me.
[19:34] <technoweenie> court didnt do much development
[19:34] <mattly> courtenay was over at my house last week for a barbeque, i think he's on general good terms with most of the people who've left him
[19:34] <smtlaissezfaire> technoweenie: we have one remote guy, jdg, who's out in kansas.  Honestly, I have no idea what he's doing most of the time.
[19:35] <technoweenie> i'm the only remote guy at github, i know what everyones working on
[19:35] <technoweenie> but we all live on campfire
[19:35] <mattly> that's how entp was as well, we all lived on campfire
[19:35] <sechrist> aria: you there?
[19:37] <maushu> http://www.youtube.com/watch?v=nUQsRPJ1dYw
[19:37] aaronblohowiak has joined the channel
[19:37] <sechrist> maushu: creepy.
[19:37] <smtlaissezfaire> Yeah - for us it's hard because we might have 3-6 devs (depending on the day) all working on different projects - sometimes on multiple projects, with very little overlap.
[19:38] <_announcer> Twitter: "just found #epressjs - a nice webframework based on #nodejs http://expressjs.com/ #serversidejavascript #yam" -- Michael Geers. http://twitter.com/naltatis/status/14574881390
[19:39] <technoweenie> thats how entp and github are.  everyone does their own thing for the most part
[19:39] <JimBastard> heh entp better be doing some real work too
[19:39] <JimBastard> !
[19:39] <JimBastard> :-D
[19:40] <JimBastard> why is my fs.read returning 
[19:40] <JimBastard> "0":91,"1":10,"2":32,"3":32,"4":32,"5":32,"6":123,"7":10,"8":32,"9":32,"10":32,"11":32,"12":32,"13":32,"14":32,"15":32,"16":34,"17":115,"18":105,"19":116,"20":101,"21":34,"22":58,"23":32,"24":34,"25":97,"26":100,"27":109,"28":105,"29":110,"30":34,"31":44,"32":10,"33":32,"34":32,"35":32,"36":32,"37":32,"38":32,"39":32,"40":32,"41":34,"42":112,"43":97,"44":116,"45":104,"46":34,"47":58,"48":32,"49":34,"50":110,"51":111,"52":100,"
[19:40] rnewson_ has joined the channel
[19:40] rnewson_ has joined the channel
[19:40] <mscdex> flud
[19:40] <tmpvar> JimBastard, its a buffer object
[19:40] <mscdex> yeah
[19:40] <JimBastard> yeah
[19:40] <JimBastard> so how can i fix tmpvar 
[19:40] <tmpvar> .toString
[19:40] <tmpvar> ()
[19:41] <JimBastard> thanks tmpvar 
[19:41] <aaronblohowiak> or, you could pass an encoding
[19:41] <aaronblohowiak> iirc
[19:47] <mscdex> ryah: here's the ares_build.h and ares_config.h files for ares on openbsd-x86_64: http://gist.github.com/411196
[19:48] <mscdex> ryah: also had to #include <stdint.h> for *bsd in eio.c for libeio
[19:50] <sechrist> http://twitter.com/knorby/status/14542835668
[19:50] <sechrist> ..serious?
[19:50] <mscdex> ryah: compiling V8 gets to codegen-x64.cc before it errors out: "error: cannot call member function 'v8::internal::Scope* v8::internal::CodeGenerator::scope()' without object"
[19:50] <mscdex> sechrist: he posted a followup to that tweet, recognizing his error
[19:51] <sechrist> yes 
[19:51] <sechrist> but still
[19:51] <mscdex> sechrist: and after several people from here hounded him about it :P
[19:51] <sechrist> if I didn't know any better I'd call that a troll
[19:51] <tmpvar> lol
[19:51] <mscdex> late night troll heh
[19:53] <_announcer> Twitter: "node.js = server side state in memory. wow. brain just popped. #nodejs" -- ruzz. http://twitter.com/ruzz/status/14575573519
[19:53] smtlaissezfaire has joined the channel
[19:53] <_announcer> Twitter: "#Hummingbird is cool, but it slows down my Mac %) #nodejs" -- myfreeweb. http://twitter.com/myfreeweb_en/status/14575580205
[19:55] <mscdex> hmmm, methinks openbsd ships with a version of g++ too old for building v8
[19:55] <Aria> Hm.
[19:56] <Aria> So far, so good for me...
[19:56] <Aria> Still compiling though
[19:57] <mscdex> v8?
[19:58] <mscdex> bah it's being screwy now, it's telling me i don't have enough free space to install g++ 4.2.4 ;\
[20:00] <polotek> technoweenie: what's happening with twitter-node?
[20:00] <technoweenie> nothing?
[20:01] <maushu> Is using OpenID such a good idea for accounts with payable services?
[20:02] <polotek> thought you were planning on expanding it to full coverage of the api
[20:02] <mape> people tend not to trust openId
[20:02] <mape> or facebook connect for that matter
[20:02] <technoweenie> polotek: planning, sure, but i havent started on it.  feel free to do that if you want
[20:02] <polotek> technoweenie: ha, still working on my own
[20:03] <polotek> but yours was working better than mine last time I checked
[20:03] <technoweenie> ok
[20:03] <polotek> mape: are you talking tech savvy people?
[20:03] <mape> polotek: nope
[20:03] <polotek> lots of people trust fb connect
[20:04] <mape> I know lots of people who don't "trust their facebook information" to "shady" sites or sites they don't know of
[20:04] <technoweenie> polotek: well you're more than welcome to send patches to mine.  i havent decided on an API so i'm open to discuss that
[20:04] <polotek> or maybe I should say they use it without considering whether they should trust it
[20:04] deanlandolt_home has joined the channel
[20:04] <technoweenie> mape: doesnt matter, facebook already shares your info 
[20:04] <mape> technoweenie: They don't know that
[20:06] aurynn has joined the channel
[20:09] <_announcer> Twitter: "@mjording dude check out the mashery 2gb flashdrive, its got a ton of docs including rails, ruby, python, and nodejs...very cool" -- Haris Amin. http://twitter.com/harisamin/status/14576309011
[20:10] <_announcer> Twitter: "Understanding node.js » Debuggable Ltd [del.icio.us] [ False Positives ] - http://octofinder.com/~ep6b" -- OctoFinder.com. http://twitter.com/octofinder/status/14576351253
[20:11] kriszyp has joined the channel
[20:13] kjeldahl has joined the channel
[20:16] <ryah> mscdex: hey
[20:16] <ryah> mscdex: can you put together a patch?
[20:17] <Aria> Hm. The gcc in openbsd 4.5 is building v8 okay, it looks like
[20:17] <Aria> No execinfo.h is the next stumbling blog
[20:17] <Aria> er.. block
[20:17] <mscdex> pkg_add libexecinfo
[20:17] <Aria> Ah, cool
[20:19] <mape> ryah: the package.json sprint you were talking about, would it be of any help if someone took the time to scrape generic data, module name, author, email, issues url etc so that it could be used when sending patches?
[20:20] pgriess has joined the channel
[20:21] <sechrist> hmm
[20:22] <sechrist> mongodb
[20:22] <sechrist> is interesting
[20:24] polotek has joined the channel
[20:27] <technoweenie> JimBastard: you deleted your format.js repo?
[20:27] <JimBastard> technoweenie: its got a new name now
[20:27] <JimBastard> check it out
[20:27] <technoweenie> what is it
[20:27] <JimBastard> http://github.com/marak/javascript-fu
[20:27] <JimBastard> ;-)
[20:27] <JimBastard> im working on that and broodmother today
[20:28] <JimBastard> im hoping to have a release for js-fu within the week
[20:28] <technoweenie> well you merged aarons commits and renamed it, i cant do your fq request now :)
[20:29] <JimBastard> ahh sorry
[20:29] <JimBastard> i got really drunk
[20:29] <JimBastard> and renamed without thinking
[20:29] <technoweenie> gooooshhhh
[20:29] <JimBastard> :-(
[20:30] <JimBastard> i talked to a few people about this
[20:30] <JimBastard> they have all seen similiar behavior
[20:30] <JimBastard> i shouldnt have renamed though
[20:30] <JimBastard> fuck
[20:30] <JimBastard> i guess just close the issue
[20:30] <sechrist> JimBastard: nice lib :D
[20:31] <JimBastard> thanks sechrist , im working on it
[20:31] <technoweenie> http://github.com/technoweenie/javascript-fu/commits/master  i have an important contribution to make
[20:31] <JimBastard> still need to refine the api and docs
[20:31] <JimBastard> AHAHAHAHA
[20:31] <JimBastard> :-D
[20:31] <JimBastard> attachment-fu
[20:31] <JimBastard> javascript-fu
[20:31] <JimBastard> i heard teecho wrote them all
[20:32] <JimBastard> (im in your repos making commits)
[20:32] <technoweenie> no, i just started it w/ -fu
[20:32] <JimBastard> hee hee
[20:32] <technoweenie> all the rails plugins at the time were acts_as_*
[20:32] <technoweenie> so i broke that trend and started a worse one with attachment_fu
[20:32] <JimBastard> fuck gtg
[20:33] <JimBastard> gotta work on this thing
[20:33] <JimBastard> ttyl
[20:35] iwasbiggs has joined the channel
[20:36] <KungFuHamster> hmm.. I've got a setTimeout function that calls itself with another setTimeout at the end... but it dies for some reason
[20:36] <_announcer> Twitter: "&lt;technoweenie&gt; all the rails plugins at the time were acts_as_*   so i broke that trend and started a worse one with attachment_fu  #node.js" -- aaron blohowiak. http://twitter.com/aaronblohowiak/status/14577480427
[20:36] <aaronblohowiak> KungFuHamster: are you sure you aren't having binding issues?
[20:37] <KungFuHamster> no, I don't know what that means
[20:37] <polotek> KungFuHamster: what do you mean by "dies" errors or just doesn't repeat?
[20:37] <KungFuHamster> no caught or uncaught exceptions, it just stops calling the timeout.. I have a puts() in it and it doesn't occur anymore
[20:37] <aaronblohowiak> KungFuHamster: can you jsbin your code?
[20:38] <mscdex> yay! it compiles now after upgrading to g++ 4.x
[20:38] <mscdex> ACTION shakes a fist at openbsd
[20:38] stevendavie has joined the channel
[20:38] <openbsd_for_real> ACTION cowers in fear of mscdex
[20:38] <mscdex> huhu
[20:39] <mscdex> oops, i spoke too soon. now net2 bombs
[20:39] <ryah> mape: yeah, we were talking about adding a 'npm init' command that would scrap all the data
[20:39] <mape> yeah
[20:40] olegp has joined the channel
[20:40] <mape> Would also make sure there are more github links in there, http://npm.mape.me/ uses the github api right now
[20:40] <mape> Not a lot of packages have a coupling to github though
[20:41] <mape> But then again the npm init wouldn't help in the sprint? Since that would be forking/patching with a package.json by hand more or less?
[20:42] <_announcer> Twitter: "YUI Theater —  Ryan Dahl: “Introduction to NodeJS” (58 min.) http://bit.ly/ccW3Jl" -- helgri. http://twitter.com/helgri/status/14577735211
[20:42] <technoweenie> JimBastard: found the bug
[20:42] <JimBastard> in github or me?
[20:43] <technoweenie> in github
[20:43] <maushu> you, you are the bug.
[20:43] <JimBastard> so, wait
[20:43] <JimBastard> did i halp?
[20:43] <technoweenie> yea
[20:43] <KungFuHamster> aaronblohowiak, polotek: http://pastebin.com/zf2dJkdK the broadcast heartbeat dies after one message is sent
[20:43] <JimBastard> :-D
[20:43] <technoweenie> the network graph data is invalid json
[20:43] <JimBastard> huzaah!
[20:43] <JimBastard> <3 github
[20:43] <technoweenie> so i'm gonna make it valid json
[20:44] <aaronblohowiak> KungFuHamster: which setTimeout is dying?
[20:44] <KungFuHamster> broadcast
[20:44] <mape> .addListener("idle timeout",  eeeek :S
[20:45] <mape> just feels wrong having spaces in places like that
[20:45] <ryah> mape: i was thining it'd just create the package.json
[20:45] <KungFuHamster> oh, that's leftover from when I was trying to figure out the timeout bug
[20:45] <mape> ryah: empty and push?
[20:45] <ryah> mape: we'd manually submit it
[20:46] matthew_y has joined the channel
[20:46] <ryah> mape: nah - it'd like check if it's a git repo - look at remote origin - try to guess the github link
[20:46] <ryah> etc
[20:46] <ryah> try to guess the author, name project name
[20:46] <mape> I have that kinda working
[20:46] <aaronblohowiak> KungFuHamster:  try wrapping your if block in a try{}catch(err){ sys.puts("err: "+err);}
[20:46] <mape> except I exceed the API limit on github now
[20:46] <ryah> then we'd git add package.json; git commit -m "add package.json"; git format-patch HEAD^
[20:46] <KungFuHamster> aaronblohowiak: ok I'll try that, thanks
[20:47] vnguyen has joined the channel
[20:47] <ryah> and submit it to the author
[20:47] <ryah> mape: oh good - did you tell isaacs?
[20:47] ajpiano has joined the channel
[20:47] <mape> If you run it on the nodejs wiki for modules it fetches the name/description/author/email
[20:47] <mape> Nope, he hasen't been on today
[20:48] <sechrist> So is it bad form to form my html myself in node like I would in php? without a faux-dom object generating the html?
[20:48] <sechrist> seems more efficient if I just did the elements myself
[20:48] <sechrist> *shrug*
[20:48] <polotek> KungFuHamster: does the heartbeat timeout work fine?
[20:49] <KungFuHamster> polotek: yeah it keeps going
[20:49] <polotek> sechrist: nobody's going to stop you. you might get some sideways looks
[20:51] drostie has joined the channel
[20:51] <_announcer> Twitter: "Doing some Sunday-night NodeJS coding" -- dominiek. http://twitter.com/dominiek/status/14578145217
[20:51] <KungFuHamster> try/catch didn't catch anything, tried it on a couple if's
[20:52] <KungFuHamster> hmm I got an undefined string, let me fix that
[20:52] <polotek> KungFuHamster: the only thing that looks suspicious is users[i].write
[20:53] <polotek> try starting your server before setting the off the broadcast
[20:53] <polotek> I bet your socket is in an undefined state
[20:56] bmizerany has joined the channel
[20:58] <KungFuHamster> well, putting a try catch around all the code inside broadcast fixed it
[20:59] <aaronblohowiak> KungFuHamster: there be dragons!  you will want to puts the err and err.trace
[21:00] scudco has joined the channel
[21:01] <KungFuHamster> thanks aaronblohowiak
[21:03] <aaronblohowiak> KungFuHamster: no problemo! when you go to multiple channels, you might want to use this as a starting off point for your channel host: http://github.com/aaronblohowiak/Push-It/blob/master/lib/channel-host.js
[21:04] <aaronblohowiak> KungFuHamster: note that that currently wraps payloads in an object and adds a timestamp, you will probably want to remove that behaviour ;)
[21:04] unomi has joined the channel
[21:05] <mscdex> woo!
[21:05] <mscdex> it built
[21:06] <mscdex> and it works :-D
[21:07] stagas has joined the channel
[21:07] <stagas> is there a promises alternative?
[21:08] <maushu> ryah, why did you change your nick? Hmm.
[21:10] scudco has left the channel
[21:10] scudco has joined the channel
[21:14] ctp has joined the channel
[21:17] <_announcer> New Question: "Uncatchable errors in node.js" by Peter Burns. http://stackoverflow.com/questions/2893458
[21:19] <sechrist> he answered his own question?
[21:19] <sechrist> in the third person?
[21:19] mrjjwright has joined the channel
[21:19] Phazm has joined the channel
[21:19] <sechrist> oh, hehe
[21:21] <matthew_y> I like the stack overflow announcer a little more than the tweet one 
[21:21] <matthew_y> both are neat though
[21:22] <mscdex> ryah: where you want the patch?
[21:24] gbot2 has joined the channel
[21:31] <mscdex> ryah: gisted here: http://gist.github.com/411262
[21:33] <_announcer> Twitter: "@Hyperized just wondering if you've messed about with Node.JS, its pretty neat." -- Philip Pryce. http://twitter.com/philippryce/status/14580033816
[21:34] <tmpvar> pretty neat, pft
[21:34] <mscdex> hehe
[21:37] keeto_ has joined the channel
[21:38] <cloudhead> mattly: ping
[21:39] <bmizerany> I'm trying to create a C++ binding for node.  I've took ry/node_postgres and stripped it down to a simple example to get started with but am getting build errors and don't know what to make of them.  https://gist.github.com/32bae448f80e18b9b3b9
[21:39] <bmizerany> ideas anyone?
[21:39] <tmpvar> peeks
[21:39] <tmpvar> oh god, that one
[21:40] <bmizerany> wait. need to update the code.
[21:40] <tmpvar> oh, using namespace v8; should fixer
[21:40] <Phazm> is there any way I can sys.puts without a newline? I want to know something is happening, without flooding the console
[21:40] softdrink has joined the channel
[21:40] <MattJ> sys.print
[21:40] <bmizerany> ok. updated https://gist.github.com/32bae448f80e18b9b3b9
[21:40] <Phazm> thanks MattJ :)
[21:41] <MattJ> np
[21:41] <bmizerany> tmpvar: the output is from "using namespace v8"
[21:41] <bmizerany> *with using
[21:41] <tmpvar> ah
[21:41] <bmizerany> tmpvar: I've been banging my head on this one Since yesterday
[21:41] <bmizerany> heh
[21:42] <tmpvar> lol, i know the feeling
[21:42] <tmpvar> i sort of cheezed it, heh (was also banging my head on this yesterday)
[21:42] <tmpvar> i wouldnt mind fixing though.. l
[21:43] <bmizerany> I've tried looking through as many examples as I could find.  I just need it to create a prototype and add Parse() to it, that returns "foo".  that's all I'm asking.  I mean. ;) heh
[21:44] <mattly> cloudhead: pong
[21:44] <tmpvar> bmizerany, alright, lets get to the bottom of this :)
[21:44] <bmizerany> awesome.
[21:45] <mscdex> bmizerany: you're missing your Parse function
[21:45] <mscdex> in the protected section
[21:45] <mscdex> ;-)
[21:45] <bmizerany> mscdex: it has to be protected?
[21:45] <mscdex> well
[21:45] <mscdex> pretty much
[21:46] <bmizerany> mscdex: so I need 2 parse functions, or just one in protected?
[21:46] <polotek> bmizerany: you don't have a Parse function at all
[21:46] <polotek> unless i"m missing something
[21:46] <mscdex> depends on how you want to structure it
[21:46] <polotek> oh
[21:46] <polotek> I was
[21:46] <polotek> :)
[21:46] <bmizerany> mscdex: I was basing it on this http://github.com/ry/node_postgres/blob/master/binding.cc#L48
[21:47] <bmizerany> and have mucked with it since.  now I'm using the Handle<Value> thing.  it looked like the that link at first
[21:48] <polotek> well the second error is becuase of your typo in dereferencing
[21:48] <polotek> on line 42
[21:48] <polotek> @bmizerany 
[21:49] <mscdex> yep
[21:49] <mattly> polotek: hey did you give any other thought to the async write issue we were talking about yesterday?
[21:49] <mscdex> bmizerany: fix those two things and you should be good to go
[21:49] <polotek> mattly: nope, still stuck under some other stuff
[21:49] <mattly> heh ok
[21:50] <bmizerany> polotek: what is the fix for the dereferencing error?
[21:50] <polotek> they say when programming isn't fun, you should stop
[21:50] <mattly> i think i'm just going to stick to my eventListener approach for now
[21:50] <polotek> parser>Wrap => parser->Wrap
[21:50] <polotek> typo
[21:50] <bmizerany> oh jesus
[21:51] <polotek> "<unresolved overloaded function type>"
[21:51] <polotek> that's your real problem
[21:52] <polotek> I've spent the last 2 days absorbing a C++ book
[21:52] <polotek> which means I understand the problem, but not how to fix it
[21:52] <tmpvar> bmizerany, i fixored
[21:53] <bmizerany> polotek: careful, absorbing too much can be fatal.
[21:53] <polotek> I have been feeling kind of sick
[21:53] <tmpvar> http://gist.github.com/411282
[21:53] <bmizerany> polotek: I used to do C++ way back in the day.  haven't touched the stuff since.
[21:54] <_announcer> Twitter: "Challenge for the week, get my project based on #NodeJS & #Redis finished and into production. Im hoping for a week being geek not being ill" -- Chris Bird. http://twitter.com/chrisabird/status/14580998786
[21:54] <cloudhead> mattly: how's the middleware stuff coming along?
[21:54] <mattly> cloudhead: heh
[21:54] <bmizerany> tmpvar: cool!   
[21:54] <bmizerany> but how is it that this works?  http://github.com/ry/node_postgres/blob/master/binding.cc#L48
[21:54] <bmizerany> it's public and non-static
[21:54] <mattly> cloudhead: i sketched up a gist the other morning expanding on some of halorgium's ideas
[21:55] <mattly> but there becomes the issues of middlewares that need to asyncronously delay writes
[21:55] <cloudhead> mattly: yea I think I saw it
[21:55] <cloudhead> mattly: example?
[21:55] <mattly> and making sure things happen FIFO and that end() doesn't come before they all finish
[21:55] <mattly> cloudhead: this is the gist: http://gist.github.com/410233
[21:55] <bmizerany> tmpvar: line 6 puts the class in the node namespace, was that necessary?  
[21:56] <cloudhead> mattly: why would a middleware call the next in the chain before the async write is done?
[21:56] <tmpvar> bmizerany, no
[21:56] <bmizerany> an
[21:56] <bmizerany> ah
[21:56] <tmpvar> sorry, there are still issues with this
[21:56] <mattly> in the meantime I think I'm just going to take neutrino and turn the listener stack for write / end / etc into a proper queue
[21:57] <bmizerany> tmpvar: np.  I'm just trying to understand so I don't have to come back again and ask more questions
[21:57] <mattly> cloudhead: this isn't a request execution order problem, this is a response execution order problem
[21:58] <polotek> yeah I'm not adding any public functions in my code
[21:58] <mattly> since we're not _returning_ from higher up the stack, we're _calling_ methods on a response object
[21:58] <tmpvar> bmizerany, of course :)
[21:58] <cloudhead> mattly: I know, but to a single client
[21:58] <cloudhead> if you were doing this without middleware, you wouldn't use a queue
[21:58] <cloudhead> you'd just nest the callbacks
[21:59] <mattly> basically i think what'd have to happen is
[21:59] <cloudhead> why can't you wait for the write to finish, to  call the next middleware?
[21:59] <polotek> cloudhead: the issue is that the innermost app calls write synchronously
[21:59] <polotek> if middle ware overrites write, and makes it asynchronous
[21:59] <polotek> in order to do some work for example
[21:59] <polotek> then the whole thing breaks down
[21:59] <mattly> basically i think that any middleware that delays writes async is going to have to manage a write/end queue
[21:59] <polotek> you can't get the inner app to use callbacks
[22:00] <cloudhead> polotek: what kind of write are you talking about? the headers?
[22:00] <mattly> and either we provide one outside the stack, or the middleware manages its own
[22:00] <polotek> so you have to queue up the writes
[22:00] <polotek> response.write
[22:00] <cloudhead> polotek: well you wouldn't response.write until the outermost middleware
[22:01] <tmpvar> bmizerany, http://github.com/ry/node_postgres/blob/master/binding.cc#L195
[22:01] <polotek> if all your middleware is coordinated, that's fine
[22:01] <polotek> but most of the time you don't want inner middleware to care about outer
[22:01] <bmizerany> what does "../parser.cc:50: error: expected unqualified-id before string constant" mean?  "L50:  extern "C" void init (..) ..."
[22:01] <polotek> we're talking about the same thing, you just haven't reached why it's a problem
[22:01] <tmpvar> heh
[22:02] <cloudhead> polotek: I see what you mean, but what if the outer-most is treated differently, transparently
[22:02] <polotek> you've just reached where mattly and I are :)
[22:02] <polotek> essentially the outer layer has to "catch" writes from the inner layer and queue them
[22:02] <polotek> so it can do asyn call for it's own work
[22:02] <bmizerany> tmpvar: ah!
[22:03] <polotek> and then write them out in a fifo fashion once it's ready
[22:03] <bmizerany> that makes more sense.  I didn't catch that
[22:03] <atmos> hmm
[22:03] <atmos> are there homebrew recipes for npm yet ?
[22:03] <tmpvar> bmizerany, haha, neither did i
[22:03] <cloudhead> polotek: hmmmm
[22:04] <polotek> bmizerany: what did we catch? what's the problem with that?
[22:04] <mattly> atmos: not seeing any
[22:05] <cloudhead> polotek: why not make writing synch, since there's no I/O?
[22:05] <polotek> writing is sync right now.  but the problem is you may want your middleware to do i/o
[22:05] <tmpvar> bmizerany, this works for me: http://gist.github.com/411282
[22:05] <mattly> cloudhead: what if your middleware needs to modify the writes against some kind of IO?
[22:05] <cloudhead> polotek: in that case, you call the next middleware when the i/o is done?
[22:05] <mattly> say for example a gpg signing lib
[22:06] <mattly> or an image processor
[22:06] <cloudhead> mattly: well it shouldn't call the next middleware until all i/o is done
[22:06] <mattly> cloudhead: you'd still have to make sure writes don't get out of order
[22:06] <polotek> cloudhead: https://gist.github.com/275a4522e14fae9aa861
[22:06] <polotek> look this over
[22:06] <polotek> tell us what you think
[22:06] <mattly> and that end() isn't called before all the writes are done
[22:06] <cloudhead> O_o
[22:06] <polotek> this is from halorgium's original stab at it
[22:07] <tmpvar> interesting
[22:07] <mattly> personally i'm thinking that providing a simple queueing system for the middleware to manage this itself is the best idea
[22:07] <cloudhead> mattly: only one middleware would be active at any given time
[22:07] <polotek> mattly: I thought I had forked your gist too
[22:07] <mattly> cloudhead: then you'd have to buffer all the writes
[22:07] <polotek> can you resend?
[22:07] <mattly> polotek: http://gist.github.com/410233
[22:07] <cloudhead> mattly: yea
[22:08] <cloudhead> well, you wouldn't write to the actual response object
[22:08] <cloudhead> until the very end
[22:08] <mattly> i don't like that idea, personally
[22:08] <JimBastard> can you guys hear that?
[22:09] <JimBastard> its a wave of new people
[22:09] <mscdex> i don't hear it
[22:09] <polotek> cloudhead: that would be the easy way out
[22:09] <mattly> JimBastard: all i hear is the rain outside
[22:09] <JimBastard> its gonna crash really hard over summer
[22:09] <mikeal>  *cricktes*
[22:09] <polotek> but you still want to make sure the writes go out as soon as possible
[22:09] <polotek> or you kill the benefits of streaming
[22:09] <mikeal> that would have been funnier if I spelled it irght
[22:09] <JimBastard> also i farted
[22:09] <JimBastard> sorry
[22:10] <mikeal> i don't buy in to middleware for node
[22:10] <polotek> mikeal: I still chuckled
[22:10] <mattly> mikeal: it's ok, my dyslexia corrected it for you automatically
[22:10] <cloudhead> polotek: but you can't stream anything until all middlewares are done
[22:10] <mattly> if I could figure out how to turn that into software i'd be a gazillionare
[22:10] <mikeal> there should be libraries that operate on streams
[22:10] <polotek> cloudhead: you're not thinking big enough :)
[22:10] <mikeal> that's the best level of interop you can provide
[22:10] <polotek> the idea is to stream each write through the middleware pipeline
[22:10] <polotek> so it still streams as fast as possible
[22:10] <polotek> that's why each middleware just overrides write (or end)
[22:10] <mattly> mikeal: so basically just pipe streams together?
[22:11] <polotek> to do what it needs to do to each chunk
[22:11] <mikeal> if you have a read-write stream
[22:11] <mikeal> you can easily pass it to an API that returns a new stream
[22:11] <cloudhead> polotek: that forces middlewares to be stream-aware
[22:11] <mikeal> what in node isn't going to be stream aware?
[22:11] <mattly> cloudhead: um dude, node is stream-aware
[22:11] <tmpvar> hrm, how should I handle methods with pointers in node-ogl?
[22:12] <polotek> ACTION nods at mikeal 
[22:12] <cloudhead> mattly: node is, but not every middleware would be
[22:12] <polotek> cloudhead: they don't have to be.  buffering is an option
[22:12] <polotek> but that's being a bad node citizen
[22:12] <mscdex> tmpvar: use an external i believe
[22:12] <polotek> imo
[22:13] <mikeal> what is the point of middleware?
[22:13] <mikeal> because there isn't a connector spec that matters
[22:13] <bmizerany> tmpvar: polotek sooooo close http://gist.github.com/411293
[22:13] <tmpvar> mscdex, what do you mean?
[22:13] <mikeal> for node at least
[22:13] <cloudhead> mikeal: decoupling, reuse, interop etc
[22:13] <cloudhead> composing apps
[22:13] <mscdex> tmpvar: an External wraps a c++ pointer
[22:13] <mikeal> it just sounds like you're trying to build a web framework by writing a spec
[22:13] <mscdex> v8::External datatype
[22:14] <polotek> mikeal: the canonical example is wrapping an app in order to gzip the output
[22:14] <tmpvar> msdex, ah, helpful!
[22:14] <mikeal> fab does that
[22:14] <bmizerany> tmpvar: polotek using `new Parser ( )` fixed it.  not sure why that nasty error occored though
[22:14] <mikeal> and it's a beautiful
[22:14] <bmizerany> *occurred 
[22:14] <mikeal> API
[22:14] <tmpvar> bmizerany, nice
[22:14] <cloudhead> polotek: I see what you mean, but take logging for instance, it needs the whole body, or xml validation..
[22:14] <polotek> mikeal: yeah you're right, I wonder how he's handling it
[22:14] <bmizerany> tmpvar: polotek thx for the help!
[22:14] <mikeal> cloudhead: you can iteratively validate xml
[22:14] <polotek> cloudhead:  yeah those would buffer
[22:14] <cloudhead> mikeal: but what's the point?
[22:15] <cloudhead> you need the whole body before you can say if it's a valid doc or not
[22:15] <mikeal> the point is that you don't hold the entire response in memory
[22:15] <polotek> mikeal: you can but if you're still streaming it out you end up with a partial response
[22:15] <polotek> which may not be what you want
[22:15] <mikeal> and you can start other processing on what has been parsed while it's coming in off the wire, reducing the total time
[22:15] <mikeal> if the response is partial you just end the whole transaction
[22:16] <mikeal> have you seen node-html5
[22:16] <mikeal> ?
[22:16] <polotek> I'm not following you.  *who* ends the transaction?  Once it leaves the validation middleware, it's gone.
[22:16] <mikeal> it parses iteratively and HTML is even harder to do that way
[22:16] <mikeal> forget middleware
[22:16] <polotek> potentially sent over the wire depending on what the upstream layers are
[22:16] <mikeal> if I send a stream to an xml validator
[22:17] <mikeal> it can parse what it needs and pass it on for more processing
[22:17] <mikeal> while we're waiting for more off of the wire
[22:17] <mikeal> and we aren't buffering it all in memory, we're just keeping the state that the parser needs
[22:17] <mikeal> and we can do other stuff on the data while we're still waiting for the whole response to come it
[22:17] <mikeal> er in
[22:17] <polotek> mikeal: yeah I get that.  but in the event of a validation error, you've already sent part of the document on
[22:18] <polotek> and the downstream middlewares will never get the rest
[22:18] <mikeal> so
[22:18] <polotek> and probably crap out
[22:18] <mikeal> you just end() them
[22:18] <mikeal> and they get destroyed
[22:18] <mikeal> the request/response is a transaction
[22:18] <polotek> ACTION ponders
[22:19] <polotek> we need more examples
[22:19] <mikeal> you just need to make sure that you don't do anything *permanent* like finishing a write to a database, until the request is finished
[22:19] <cloudhead> hmm
[22:19] <polotek> mikeal: what's your alternative to middleware to achieve separation of concerns?
[22:19] <mikeal> a framework, an API
[22:19] <cloudhead> yea, I want to know too : )
[22:19] <mikeal> write the API you want to use, not some interoporable spec that someone might implement some day
[22:19] <mikeal> look at fab
[22:19] <polotek> mikeal: middleware is part of the framework tho right?
[22:19] <mikeal> fab isn't "middleware"
[22:20] <mikeal> it's a great API for creating reusable apps and functions that operate on streams
[22:20] <polotek> so custom middleware basically?
[22:20] <mattly> that's what i did with neutrino, i wrote the api i wanted to use
[22:20] <mikeal> middleware in Ruby and Python were developed on top of the connector specification
[22:20] <mattly> because to be honest i hate fab's api
[22:20] <mikeal> node doesn't have a connector spec that matters 
[22:21] <mikeal> because there is no need for one, there isn't a need to use a server other than the default node one
[22:21] <polotek> mikeal: we're not trying to develop a "spec" so much as a resuable pattern
[22:21] <mikeal> so nobody cares about a connector spec from server to application layer
[22:21] <polotek> for creating stream aware middleware
[22:21] <mikeal> if you don't like fab's API, write a new one
[22:21] <mikeal> but don't call it "middleware"
[22:21] <mikeal> it's not in the "middle" of ANYTHING
[22:21] <cloudhead> this isn't from server to app
[22:21] <mikeal> it's just an API, or a framework
[22:22] <polotek> mikeal: yes it is
[22:22] <mikeal> this is all application layer
[22:22] <mikeal> it's just an API
[22:22] <polotek> it's in the middle of the request and your base business app
[22:22] <mattly> neutrino doesn't have a "middleware" concept, you just give it a chain of functions that either respond or pass
[22:22] <mikeal> I think you're porting terminology from Ruby/Python that doesn't apply very well
[22:22] <mikeal> and it's going to cause more confusion than anything else
[22:22] <mikeal> polotek: your entire app is business logic
[22:23] <mikeal> and you need to insert it in various points where you also might shove in reusable components
[22:23] <polotek> we're just talking about two different mental models
[22:23] <polotek> not different ideas
[22:23] <mikeal> so unless you consider all business logic to be "middleware" it's not actually in the middle
[22:23] <polotek> you're against the jargon
[22:23] <polotek> I can respect that
[22:23] <polotek> doesn't really change what we're trying to do 
[22:23] <mikeal> middleware traditionally refers to specs/conventions between parts of the connector spec
[22:24] <polotek> gzipping a response isn't part of my "business logic"
[22:24] <mikeal> I think you're making it too complicated
[22:24] <polotek> my business doesn't care if it happens
[22:24] <polotek> and neither does the browser
[22:24] <mikeal> if you just have code that operates on strings/stream
[22:24] <polotek> but I do and my users do
[22:24] <mikeal> you can use it anywhere and not worry about the placement
[22:24] <polotek> mikeal: that's what we're doing
[22:24] <mikeal> if you construct this all as "middleware" you don't get a unified API, you get functions that only work in specific scenarios
[22:24] <polotek> I think maybe you're just further down the line with how it should work
[22:25] <_announcer> Twitter: "Mongoose (for MongoDB and Node.js) [ Jeremy Zawodny's linkblog ] - http://octofinder.com/~enjn" -- OctoFinder.com. http://twitter.com/octofinder/status/14582472833
[22:25] <mattly> polotek: dude so wait a sec
[22:25] <mikeal> but everything is already a string or stream, you could just write functions that operate on request/response streams like everyone else who has written anything in this space :)
[22:25] <polotek> mikeal: could you work up your example of gzipping a response?
[22:25] <mattly> if we have let's say a gzipper component 
[22:25] <polotek> as a reusable stream-ware app?
[22:25] <mattly> basically it should wrap httpServer's request/response
[22:25] <mikeal> the only node gzip library i know of is, unfortunately, kind of broken
[22:26] <polotek> I know fab does a lot of cool stuff but honestly the syntax makes it difficult to interpret
[22:26] <mattly> in such a way that the write queue and end are taken care of
[22:26] <polotek> which is a deal breaker for me
[22:26] <mattly> provide it a way to do that
[22:26] <mattly> and you have your "framework"
[22:26] <polotek> mikeal: doesn't need to be working
[22:26] <mikeal> request/respones *will* be streams
[22:26] <mattly> the api the gzipping component provides
[22:26] <polotek> just a simple example of using it
[22:26] <mattly> should be *identical* to node's httpServer request/response
[22:26] <cloudhead> mikeal: that's essentially what we're trying to do, except we want a standardized api for it
[22:26] <mattly> even if it modifies those
[22:26] <mattly> the async write modification problem basically comes down to having a queue
[22:27] <mattly> *that* doesn't need to be standardized
[22:27] <mikeal> response.writeStream(gzip(myStream))
[22:27] <mikeal> or
[22:27] <mikeal> pump(gzip(myStream), response)
[22:27] <mattly> that can be something that exists outside the need to even have a concept of http
[22:28] stepheneb has joined the channel
[22:28] <polotek> now I see what mikeal is getting at
[22:28] <mattly> polotek: re fab, honestly i think the whole concept of unary/binary/ternary apps makes the whole thing needlessly complex
[22:28] <polotek> we're thinking at the response level when we should be thinking at the stream level
[22:28] <mikeal> what I think this all has a tendency to do, is break the standard node conventions around callbacks vs. listeners
[22:29] <polotek> we are overriding request.write when we should be overriding request
[22:29] <mikeal> because if you have this system that is expected to buffer, then you can throw stuff in a callback on an eventListener and a stream would have to buffer content while the callback is waiting
[22:29] <cloudhead> you mean response?
[22:29] <mikeal> and that gets really gross and messy
[22:29] <polotek> mattly: fab needlessly complex == true
[22:29] <mikeal> i don'd find fab complex at all
[22:30] <mikeal> er don't
[22:30] <mattly> maybe i just haven't seen one of the live presos yet
[22:30] <polotek> mikeal: but yo have a problem with the middleware api?
[22:30] <mattly> everyone seems to love it after they see one of those
[22:31] <polotek> cloudhead: both request and response
[22:31] richcollins has joined the channel
[22:31] <polotek> we should be wrapping their streams and passing the wrapped behavior to the next app
[22:31] <mikeal> i have a problem with conventions that will buffer streams in order to provide API hooks in to the request/response cycle, which I think the "middleware" approach tends to do because it's an architecture that is imported from Ruby/Python
[22:31] <richcollins> How do I get a stack trace?
[22:31] <richcollins> throw "Some Error" won't have a stack attached to it
[22:31] <polotek> mikeal: I totally get what fab is doing. it's just wrapping it in this esoteric syntax that I don't really like
[22:31] <ryah> richcollins: throw new Error("blah");
[22:32] <mikeal> you just never wrote lisp :)
[22:32] <ryah> richcollins: only Error objects have stacks associated with them
[22:32] <richcollins> ok thanks
[22:32] <mattly> mikeal: i always thought the only thing lisp was good for was writing lisp interpreters
[22:32] <mattly> or writing emacs config files
[22:32] <polotek> mikeal: yes, on purpose :)
[22:33] <mikeal> haha
[22:33] <mikeal> the architecture is the best thing I've seen so far in node, it's the first one that is from node and not just a clone of some Ruby/Python thing
[22:33] <mikeal> you just pass streams through a chain
[22:33] <mattly> anyway interesting conversation, but i gotta fix some soup for a potluck tonight
[22:34] <mattly> /later
[22:34] <polotek> mattly: see ya
[22:34] <polotek> mikeal: I'll take another look at fab
[22:34] <mikeal> i was working on something similar before fab came out and fab was better so I quit writing my thing :)
[22:35] <polotek> still don't like the syntax, but if the idea is sound it might give me ideas for a better architecture
[22:35] <mikeal> the great thing about fab is that it doesn't require any kind of plugin system
[22:35] <cloudhead> polotek: why do you want middleware at the request level?
[22:35] <mikeal> if you have a function that takes a stream and returns a stream you can just use it :)
[22:36] <cloudhead> polotek: or are you saying because it's a stream, it's on both levels
[22:36] <polotek> cloudhead: for incoming requests you mean? input validation, shortcutting based on authorization
[22:36] <polotek> the usual ruby/python stuff
[22:36] drostie has joined the channel
[22:37] <polotek> mikeal: yeah I'm following you. I think this idea was skirting the edge of my brain when we were discussing this earlier
[22:37] <polotek> but never materialized
[22:38] <polotek> but then people started gisting their idea of an api
[22:39] <mikeal> you should seperate operations that only need method + headers from stuff that needs the body
[22:39] <polotek> and looking at code will always sidetrack me
[22:39] <mikeal> because method + headers you get in one initial event and you don't need to worry about streams
[22:39] <polotek> mikeal: yeah that came up already too
[22:40] <mikeal> i wish pump() wasn't just a function in one of ry's slides ;)
[22:40] <polotek> so your app has two stages, receive method + headers and interpret, receive body stream and process
[22:40] <_announcer> Twitter: "Understanding node.js [ Jeremy Zawodny's linkblog ] - http://octofinder.com/~eqia" -- OctoFinder.com. http://twitter.com/octofinder/status/14583193829
[22:40] <polotek> mikeal: what's wrong with pump?  I've been hearing about it forever, but it never shows up
[22:40] <mikeal> it's just not imlemented yet
[22:41] <polotek> is it going to go into node?
[22:41] <mikeal> probably because the HTTP APIs still aren't streams
[22:41] <polotek> they're incomplete implementations you mean?
[22:41] <mikeal> node is still in the process of moving all the APIs to use streams, i think pump is just the last bit on the list
[22:42] <mikeal> right
[22:42] <polotek> I hear you
[22:42] <mikeal> the main thing they are missing is the "drain" event and write() returning false when it can't write immediately 
[22:43] <polotek> okay, i gotta run. the misses is hungry
[22:43] <polotek> mikeal: thanks for beating me into submission on this middleware idea
[22:43] <mikeal> haha
[22:44] <polotek> although I still think whatever api we come up with shouldn't be as alien as (fab)
[22:44] <polotek> the implementation of it has definitely changed in my mind
[22:45] polotek has left the channel
[22:45] joshowens has joined the channel
[22:47] TobiasFar has joined the channel
[22:47] ctp has joined the channel
[22:48] Tim_Smart has joined the channel
[22:53] mfeiri_ has joined the channel
[22:59] <tmpvar> hrm
[22:59] <tmpvar> smoke time :)
[22:59] <tmpvar> anyone here in PHX?
[23:03] charlesjolley has joined the channel
[23:06] <maushu> http://jayisgames.com/games/manufactoria/
[23:07] <mscdex> we need multiplayer zzt!
[23:07] <mscdex> :-D
[23:08] <ablohowiak_afk> mscdex: http://github.com/Marak/zztmmo
[23:09] <mscdex> i know, but there's no multiplayer function yet ;-)
[23:09] <ablohowiak_afk> git clone ... ;)
[23:09] <mscdex> hehe
[23:09] <mscdex> if i had the time
[23:09] <ablohowiak_afk> srsly, i wish i never had to sleep
[23:11] mikeal has joined the channel
[23:12] <bmizerany> hrm.  will v8 handle the GC for this?  http://gist.github.com/411338
[23:12] <bmizerany> L19
[23:12] <bmizerany> or do I need to free that Handle?
[23:16] <mscdex> bmizerany: iirc it should take care of it
[23:16] <bmizerany> awesome. thx
[23:18] hassox has joined the channel
[23:26] mikeal has joined the channel
[23:31] dridge has joined the channel
[23:35] [[zz]] has joined the channel
[23:35] ako has joined the channel
[23:44] <ryah> bmizerany: there is a problem
[23:44] <bmizerany> ryah: oh? what's that?
[23:44] <bmizerany> I am getting segfaults with that code. heh
[23:44] <ryah> bmizerany: that variable is static
[23:44] <bmizerany> hrm
[23:44] <ryah> and String::New returns a Local<string>
[23:44] <ryah> you need to create a Persistent<String>
[23:45] <ryah> Local and Persistent are two types of Handles 
[23:45] <bmizerany> AH!
[23:45] <bmizerany> right. local are like "global" right?
[23:45] <bmizerany> when do Persitant get GC'ed?
[23:45] <ryah> data = Persistent<String>::New(String::Concat(data, args[0]->ToString()))
[23:46] <ryah> bmizerany: they don't
[23:46] <hassox> good morning folks
[23:46] <ryah> not until you manually drop your reference
[23:47] <bmizerany> ryah: ah. how do I do that?  or does that happen in JS land when I'm no longer using the ref?
[23:47] <ryah> data.Dispose() drops the persistent reference
[23:47] <bmizerany> ah
[23:47] <bmizerany> cool
[23:47] <bmizerany> thanks man!
[23:49] <bmizerany> I think I'm getting the hang of this v8 C++ stuff; to some extent.  
[23:50] <bmizerany> I was trying to create a Ragel target for Node;  which would have been sick; but that Ragel code base was awful.  
[23:51] <bmizerany> *Node target for Ragel -- I think that is more correct.
[23:51] <bmizerany> I decided to just target C and create an addon.   
[23:51] <bmizerany> fyi.  if anyone cares. heh
[23:51] <Aria> Quite.
[23:52] <Aria> though having the parsers be event-driven might be hard.
[23:52] <bmizerany> Aria: ah.  not really.  that's pretty easy.  the hard part is emulating goto's in JS.  Which is think I got licked (in an efficient way with switch/for labels and nextTick)
[23:53] <Aria> Hehe.
[23:53] <ryah> bmizerany: http://github.com/ry/node/blob/1369d606f740545953dacd835dd7d36743f82d6f/deps/v8/include/v8.h#L316-423
[23:54] <bmizerany> but the goto fsm's generate in a particular order which is ment to work efficently with goto's in C/C++.  I was having a hard time finding a way to orginize the data in memory before dumping the output.  the worst part was following the code in Ragel.  very had to make sense of.
[23:57] <bmizerany> `friend class` man, my C++ is flashing back. heh
